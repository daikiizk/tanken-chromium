Processing: /home/daiiz/daiiz2/chromium/ui
.cc 2927
window_resize_helper_mac.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A wrapper for IPCs and tasks that we may potentially execute in\n' +
    ' WaitForSingleTaskToRun. Because these tasks are sent to two places to run,\n' +
    ' we have to wrap them in this structure and track whether or not they have run\n' +
    ' yet, to avoid running them twice.',
  ' The PumpableTaskRunner is a task runner that will wrap tasks in an\n' +
    ' WrappedTask, enqueues that wrapped task in the queue to be pumped via\n' +
    ' WaitForSingleWrappedTaskToRun during resizes, and posts the task to a\n' +
    ' target task runner. The posted task will run only once, either through a\n' +
    ' WaitForSingleWrappedTaskToRun call or through the target task runner.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WrappedTask',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' PumpableTaskRunner',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' PumpableTaskRunner, base::SingleThreadTaskRunner implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowResizeHelperMac',
  ' static'
]
accessibility_features.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This feature is only used for generating training data for Screen2x and\n' +
    ' should never be used in any other circumstance, and should not be enabled by\n' +
    ' default.',
  ' This feature has a 10% holdback to measure memory impact.',
  ' This feature is only for debug purposes and for security/privacy reasons,\n' +
    ' should be never enabled by default .',
  ' This feature is only used in tests and must not be enabled by default.'
]
accessibility_prefs.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Define all the prefs used by ui/accessibility.',
  ' Local state prefs.',
  ' Whether different accessibility filtering modes for performance are allowed.\n' +
    ' Exposed only to mobile Android.'
]
accessibility_switches.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Shows additional automatic click features that haven't launched yet.",
  ' Enables support for visually debugging the accessibility labels\n' +
    ' feature, which provides images descriptions for screen reader users.',
  ' Enables language detection on in-page text content which is then exposed to\n' +
    ' assistive technology such as screen readers.',
  ' Enables language detection for dynamic content which is then exposed to\n' +
    ' assistive technology such as screen readers.',
  ' Switches accessibility extensions to use extensions manifest v3 while the\n' +
    ' migration is still in progress.',
  ' Enables in progress Switch Access features for text input.',
  ' Enables debug feature for drawing rectangle around magnified region, without\n' +
    ' zooming in.',
  ' Turns off the accessibility in the renderer.',
  ' Force renderer accessibility to be on instead of enabling it on demand when\n' +
    ' a screen reader is detected. The disable-renderer-accessibility switch\n' +
    ' overrides this if present.\n' +
    ' This switch has an optional parameter that forces an AXMode bundle. The three\n' +
    " available bundle settings are: 'basic', 'form-controls', and 'complete'. If\n" +
    ' the bundle argument is invalid, then the forced AXMode will default to\n' +
    " 'complete'. If the bundle argument is missing, then the initial AXMode will\n" +
    ' default to complete but allow changes to the AXMode during execution.'
]
accessibility_features_map.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().',
  ' Array of features exposed through the Java AccessibilityFeaturesMap API.',
  ' static'
]
accessibility_state.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().',
  ' Returns the static vector of Delegates.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
aura_window_properties.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_action_data.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mojo enums are initialized here so the header can include the much smaller\n' +
    ' mojom-forward.h header.'
]
ax_action_handler.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_action_handler_base.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_action_handler_registry.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_active_popup.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_assistant_structure.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(muyuanli): share with BrowserAccessibility.',
  ' Get string representation of ax::mojom::Role. We are not using ToString() in\n' +
    ' ax_enums.h since the names are subject to change in the future and\n' +
    ' we are only interested in a subset of the roles.',
  ' |parent_absolute_clipped_rect| is the parent of the current subtree, and its\n' +
    ' coordinates are relative to the top of the page.'
]
ax_bit_map_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A macro for testing that a std::optional has both a value and that its value\n' +
    ' is set to a particular expectation.',
  ' Tests a small enum (one that fits inside a single byte (aka kMaxValue <= 63).',
  ' Tests a large enum (one that requires two bytes (aka kMaxValue <= 127).'
]
ax_computed_node_data.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_computed_node_data_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_enum_localization_util.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_enum_util.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_enum_util_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Templatized function that tests that for a mojom enum\n' +
    ' such as ax::mojom::Role, ax::mojom::Event, etc. we can\n' +
    ' call ToString() on the enum to get a string, and then\n' +
    ' ParseAXEnum() on the string to get back the original\n' +
    ' value. Also tests what happens when we call ToString\n' +
    ' or ParseAXEnum on a bogus value.',
  ' Templatized function that tries calling a setter on AXNodeData\n' +
    ' such as AddIntAttribute, AddFloatAttribute - with each possible\n' +
    ' enum value.\n' +
    ' This variant is for cases where the value type is an object.',
  ' Same as TextAXNodeData, above, but This variant is for\n' +
    ' cases where the value type is POD.'
]
ax_event.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_event_generator.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " If a node toggled its ignored state, don't also fire children-changed because\n" +
    ' platforms likely will do that in response to ignored-changed. Also do not\n' +
    ' fire parent-changed on ignored nodes because functionally the parent did not\n' +
    ' change as far as platform assistive technologies are concerned.\n' +
    ' Suppress name- and description-changed because those can be emitted as a side\n' +
    ' effect of calculating alternative text values for a newly-displayed object.\n' +
    ' Ditto for text attributes such as foreground and background colors, or\n' +
    ' display changing from "none" to "block."',
  ' Add a particular AXEventGenerator::IgnoredChangedState to\n' +
    ' |ignored_changed_states|.',
  ' Returns true if |ignored_changed_states| contains a particular\n' +
    ' AXEventGenerator::IgnoredChangedState.\n' +
    ' AXEventGenerator::EventParams\n' +
    ' AXEventGenerator::TargetedEvent\n' +
    ' AXEventGenerator::Iterator\n' +
    ' AXEventGenerator',
  ' static',
  ' static',
  ' Convert from the string representation of an Event enum\n' +
    ' into the enum value. The first time this is called, builds up a map.\n' +
    ' Relies on the existence of ToString(enum).'
]
ax_event_generator_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Required by gmock to print TargetedEvent in a human-readable way.',
  ' Note: we no longer fire OTHER_ATTRIBUTE_CHANGED for general attributes.\n' +
    ' We only fire specific events.'
]
ax_event_intent.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_generated_tree_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  " Do a more exhaustive test in release mode. If you're modifying\n" +
    ' the algorithm you may want to try even larger tree sizes if you\n' +
    ' can afford the time.',
  ' We split the test into four by splitting the two nested loops that builds the\n' +
    ' trees. To do so, we need to know the maximum number of (permuted) trees.',
  ' A function to turn a tree into a string, capturing only the node ids\n' +
    ' and their relationship to one another.\n' +
    ' The string format is kind of like an S-expression, with each expression\n' +
    ' being either a node id, or a node id followed by a subexpression\n' +
    ' representing its children.\n' +
    ' Examples:\n' +
    ' (1) is a tree with a single node with id 1.\n' +
    ' (1 (2 3)) is a tree with 1 as the root, and 2 and 3 as its children.\n' +
    ' (1 (2 (3))) has 1 as the root, 2 as its child, and then 3 as the child of 2.\n' +
    ' (1 (2 (3x))) is the same with node 3 ignored.',
  ' Create an AXTreeUpdate consisting of only those nodes from\n' +
    ' |tree0| that changed their ignored status in |tree1|.',
  ' Test the TreeGenerator class by building all possible trees with\n' +
    ' 3 nodes and the ids [1...3], with no permutations of ids.',
  ' Test generating trees with permutations of ignored nodes.',
  ' Test the TreeGenerator class by building all possible trees with\n' +
    ' 3 nodes and the ids [1...3] permuted in any order.',
  ' Test mutating every possible tree with <n> nodes to every other possible\n' +
    ' tree with <n> nodes, where <n> is 4 in release mode and 3 in debug mode\n' +
    ' (for speed). For each possible combination of trees, we also vary which\n' +
    ' node we serialize first.\n' +
    ' For every possible scenario, we check that the AXTreeUpdate is valid,\n' +
    ' that the destination tree can unserialize it and create a valid tree,\n' +
    ' and that after updating all nodes the resulting tree now matches the\n' +
    ' intended tree.\n' +
    " Sheriffs: this test is actually very stable and reliable, but it's\n" +
    ' cpu-bound so under extremely heavy load it sometimes times out even\n' +
    ' though it only takes 1 - 2 seconds to run under normal load.\n' +
    " Please don't disable unless it's actually flaking frequently (e.g.,\n" +
    ' every day). Check Flake Portal first.',
  " Sheriffs: this test is actually very stable and reliable, but it's\n" +
    ' cpu-bound so under extremely heavy load it sometimes times out even\n' +
    ' though it only takes 1 - 2 seconds to run under normal load.\n' +
    " Please don't disable unless it's actually flaking frequently (e.g.,\n" +
    ' every day). Check Flake Portal first.'
]
ax_hypertext.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_language_detection.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is the maximum number of languages we assign per page, so only the top\n' +
    ' 3 languages on the top will be assigned to any node.',
  ' This is the maximum number of languages that cld3 will detect for each\n' +
    ' input we give it, 3 was recommended to us by the ML team as a good\n' +
    ' starting point.',
  ' TODO(crbug.com/41463459): Determine appropriate value for\n' +
    ' |kShortTextIdentifierMaxByteLength|.',
  ' Check if a given language is within the top results.',
  ' Detect languages for each node.',
  ' Detect languages for a subtree rooted at the given subtree_root.\n' +
    ' Will not check feature flag.',
  ' Detect languages for a single node.\n' +
    ' Will not descend into children.\n' +
    ' Will not check feature flag.',
  ' Label languages for each node. This relies on DetectLanguages having already\n' +
    ' been run.',
  ' Label languages for each node in the subtree rooted at the given\n' +
    ' subtree_root. Will not check feature flag.',
  ' Label languages for a single node.\n' +
    ' Will not descend into children.\n' +
    ' Will not check feature flag.'
]
ax_language_detection_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This test fixture is a friend of classes in ax_language_detection.h in order\n' +
    ' to enable testing of internals.\n' +
    ' When used with TEST_F, the test body is a subclass of this fixture, so we\n' +
    ' need to re-expose any members through this fixture in order for them to\n' +
    ' be accessible from within the test body.',
  ' Tests that AXNode::GetLanguage() terminates when there is no lang attribute.',
  ' Test RegisterLanguageDetectionObserver correctly respects the command line\n' +
    ' flags.',
  ' Test RegisterLanguageDetectionObserver correctly respects the feature flag.',
  ' Assert that GetLanguageAnnotationForStringAttribute works for attributes\n' +
    ' other than kName.'
]
ax_mode.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_mode_histogram_logger.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_mode_histogram_logger_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_mode_observer.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_mode_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_node.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Definition of static class members.',
  ' Search for the next sibling of this node, skipping over any ignored nodes\n' +
    ' encountered.\n' +
    ' In our search:\n' +
    '   If we find an ignored sibling, we consider its children as our siblings.\n' +
    "   If we run out of siblings, we consider an ignored parent's siblings as our\n" +
    '     own siblings.\n' +
    " Note: this behaviour of 'skipping over' an ignored node makes this subtly\n" +
    ' different to finding the next (direct) sibling which is unignored.\n' +
    ' Consider a tree, where (i) marks a node as ignored:\n' +
    '   1\n' +
    '   ├── 2\n' +
    '   ├── 3(i)\n' +
    '   │   └── 5\n' +
    '   └── 4\n' +
    ' The next sibling of node 2 is node 3, which is ignored.\n' +
    ' The next unignored sibling of node 2 could be either:\n' +
    '  1) node 4 - next unignored sibling in the literal tree, or\n' +
    '  2) node 5 - next unignored sibling in the logical document.\n' +
    ' There is no next sibling of node 5.\n' +
    ' The next unignored sibling of node 5 could be either:\n' +
    '  1) null   - no next sibling in the literal tree, or\n' +
    '  2) node 4 - next unignored sibling in the logical document.\n' +
    ' In both cases, this method implements approach (2).\n' +
    ' TODO(chrishall): Can we remove this non-reflexive case by forbidding\n' +
    '   GetNextUnignoredSibling calls on an ignored started node?\n' +
    ' Note: this means that Next/Previous-UnignoredSibling are not reflexive if\n' +
    ' either of the nodes in question are ignored. From above we get an example:\n' +
    '   NextUnignoredSibling(3)     is 4, but\n' +
    '   PreviousUnignoredSibling(4) is 5.\n' +
    ' The view of unignored siblings for node 3 includes both node 2 and node 4:\n' +
    '    2 <-- [3(i)] --> 4\n' +
    ' Whereas nodes 2, 5, and 4 do not consider node 3 to be an unignored sibling:\n' +
    ' null <-- [2] --> 5\n' +
    '    2 <-- [5] --> 4\n' +
    '    5 <-- [4] --> null',
  ' Search for the previous sibling of this node, skipping over any ignored nodes\n' +
    ' encountered.\n' +
    ' In our search for a sibling:\n' +
    '   If we find an ignored sibling, we may consider its children as siblings.\n' +
    "   If we run out of siblings, we may consider an ignored parent's siblings as\n" +
    '     our own.\n' +
    ' See the documentation for |GetNextUnignoredSibling| for more details.\n' +
    ' Table row-like nodes.\n' +
    ' Table column-like nodes. These nodes are only present on macOS.\n' +
    ' Table cell-like nodes.',
  " Uses AXTree's cache to calculate node's PosInSet.",
  " Uses AXTree's cache to calculate node's SetSize.",
  ' Returns true if the role of ordered set matches the role of item.\n' +
    ' Returns false otherwise.',
  ' Finds ordered set that contains node.\n' +
    " Is not required for set's role to match node's role."
]
ax_node_data.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper function that finds a key in a vector of pairs by matching on the\n' +
    ' first value, and returns an iterator.',
  ' Return true if |attr| is a node ID that would need to be mapped when\n' +
    ' renumbering the ids in a combined tree.',
  ' Returns true if |attr| contains a vector of node ids that would need\n' +
    ' to be mapped when renumbering the ids in a combined tree.',
  ' TODO(accessibility) Consider reusing code from AXTreeFormatterBlink, where\n' +
    ' the |verbose| parameter alters the property filter. Would remove ~800 lines.'
]
ax_node_data_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_node_position.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' On some platforms, most objects are represented in the text of their parents\n' +
    ' with a special "embedded object character" and not with their actual text\n' +
    ' contents. Also on the same platforms, if a node has only ignored descendants,\n' +
    ' i.e., it appears to be empty to assistive software, we need to treat it as a\n' +
    ' character and a word boundary.',
  ' static',
  ' static'
]
ax_node_position_fuzzer.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Max amount of fuzz data needed to create the next position',
  ' Min/Max node size for generated tree.',
  ' Min fuzz data needed for fuzzer to function.\n' +
    ' Tree of minimum size with text for each node + 2 positions.',
  ' Cap fuzz data to avoid slowness.',
  ' Helper to create positions in the given tree.',
  ' Entry point for LibFuzzer.'
]
ax_node_position_perftest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_node_position_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' A group of basic and extended characters.',
  ' Used by AXPositionExpandToEnclosingTextBoundaryTestWithParam.\n' +
    ' Every test instance starts from a pre-determined position and calls the\n' +
    ' ExpandToEnclosingTextBoundary method with the arguments provided in this\n' +
    ' struct.',
  ' This is a fixture for a set of parameterized tests that test the\n' +
    ' |ExpandToEnclosingTextBoundary| method with all possible input arguments.',
  ' Used by AXPositionCreatePositionAtTextBoundaryTestWithParam.\n' +
    ' Every test instance starts from a pre-determined position and calls the\n' +
    ' CreatePositionAtTextBoundary method with the arguments provided in this\n' +
    ' struct.',
  ' This is a fixture for a set of parameterized tests that test the\n' +
    ' |CreatePositionAtTextBoundary| method with all possible input arguments.',
  ' Used by |AXPositionTextNavigationTestWithParam|.\n' +
    ' The test starts from a pre-determined position and repeats a text navigation\n' +
    ' operation, such as |CreateNextWordStartPosition|, until it runs out of\n' +
    ' expectations.',
  ' This is a fixture for a set of parameterized tests that ensure that text\n' +
    ' navigation operations, such as |CreateNextWordStartPosition|, work properly.\n' +
    ' Starting from a given position, test instances call a given text navigation\n' +
    ' method repeatedly and compare the return values to a set of expectations.\n' +
    ' TODO(nektar): Only text positions are tested for now.',
  ' Most tests use kSuppressCharacter behavior.',
  ' TODO(crbug.com/40869528): Re-enable this test',
  ' TODO(crbug.com/40869528): Re-enable this test',
  ' TODO(crbug.com/40059879) It is not legal to call\n' +
    ' AsLeafTextPositionBeforeCharacter or AsLeafTextPositionAfterCharacter with\n' +
    " a text position using out-of-range offsets. It's necessary to call\n" +
    ' AsValidPosition() first. Therefore, this test currently triggers a DCHECK.\n' +
    ' Parameterized tests.\n' +
    ' Instantiations of parameterized tests.',
  ' Only test with {AXBoundaryBehavior::kCrossBoundary,\n' +
    ' AXBoundaryDetection::kDontCheckInitialPosition} for now.\n' +
    ' TODO(accessibility): Add more tests for other boundary behaviors if needed.'
]
ax_node_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " The third argument is an optional description string which we don't need\n" +
    ' because, after verifying manually, test errors are descriptive enough.'
]
ax_position.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_range_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These tests use kSuppressCharacter behavior.'
]
ax_relative_bounds.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_role_properties.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_role_properties_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_selection.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper for GetUnignoredSelection. Creates a position using |node_id|,\n' +
    " |offset| and |affinity|, and if it's ignored, updates these arguments so\n" +
    ' that they represent a non-null non-ignored position, according to\n' +
    ' |adjustment_behavior|. Returns true on success, false on failure. Note that\n' +
    " if the position is initially null, it's not ignored and it's a success."
]
ax_selection_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper macro for testing selection values and maintain\n' +
    ' correct stack tracing and failure causality.'
]
ax_serializable_tree.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is an implementation of the AXTreeSource interface with\n' +
    ' AXNode as the node type, that just delegates to an AXTree. The purpose\n' +
    ' of this is so that AXTreeSerializer only needs to work with the\n' +
    " AXTreeSource abstraction and doesn't need to actually know about\n" +
    ' AXTree directly. Another AXTreeSource is used to abstract the Blink\n' +
    ' accessibility tree.'
]
ax_table_fuzzer.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' The purpose of this script is to fuzz code that parses\n' +
    ' table-like structures. As a result, we want to generate\n' +
    ' accessibility trees that contain lots of table-related\n' +
    ' roles.\n' +
    ' We also bias towards cells and rows so that we end up\n' +
    ' with more of those overall.',
  ' We want some of the nodes in the accessibility tree to have\n' +
    ' table-related attributes.',
  ' Call all of the table-related APIs on an accessibility node.\n' +
    ' These will be no-ops if the node is not part of a complete\n' +
    " table. We don't care about any of the results, we just want\n" +
    ' to make sure none of these crash or hang.',
  ' Entry point for LibFuzzer.'
]
ax_table_info.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Given a node representing a table row, search its children\n' +
    ' recursively to find any cells or table headers, and append\n' +
    ' them to |cells|.\n' +
    ' We recursively skip generic containers like <div> and any\n' +
    " nodes that are ignored, but we don't skp any other roles\n" +
    ' in-between a table row and its cells.',
  ' Given a node representing a table/grid, search its children\n' +
    ' to find any rows and append them to |row_node_list|.\n' +
    ' We only check for the following roles in between a table and\n' +
    ' its rows: generic containers like <div>, any nodes that are ignored, and\n' +
    ' table sections (which have Role::kRowGroup).\n' +
    ' Returns false if cells were found. We should not reach cells if rows are\n' +
    ' present.',
  ' For each row find its cells and add them to |cell_nodes_per_row| as a\n' +
    ' 2-dimensional array.',
  ' Find all the cells in a container that does not contain rows as part of the\n' +
    ' encoding.\n' +
    ' Example:\n' +
    ' <Grid>\n' +
    '    <Cell row=0,col=0>\n' +
    '    <Cell row=0,col=1>\n' +
    '    <Cell row=1,col=0>\n' +
    '    <Cell row=1,col=1>\n' +
    ' </Grid>\n' +
    ' Would be equivalent to\n' +
    ' <Grid>\n' +
    '    <Row>\n' +
    '      <Cell col=0>\n' +
    '      <Cell col=1>\n' +
    '    <Row>\n' +
    '    <Row>\n' +
    '      <Cell col=0>\n' +
    '      <Cell col=1>\n' +
    '    <Row>\n' +
    ' </Grid>',
  ' static',
  ' The first cell in a row is important because it stores the ARIA row index.\n' +
    ' We recursively check generic containers like <div> and any\n' +
    " nodes that are ignored, but we don't search any other roles\n" +
    ' in-between a table row and its cells.'
]
ax_table_info_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A macro for testing that a std::optional has both a value and that its value\n' +
    ' is set to a particular expectation.'
]
ax_text_attributes.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_text_utils.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' line_breaks is a Misnomer. Blink provides the start offsets of each line\n' +
    ' not the line breaks.\n' +
    ' TODO(nektar): Rename line_breaks a11y attribute and variable references.'
]
ax_text_utils_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is the list of reverse relations that are computed.\n' +
    ' This purposely does not include relations such as kRadioGroupIds where\n' +
    ' the reverse relation is not interesting to consumers.',
  ' Given two vectors of <K, V> key, value pairs representing an "old" vs "new"\n' +
    ' state, or "before" vs "after", calls a callback function for each key that\n' +
    ' changed value. Note that if an attribute is removed, that will result in\n' +
    ' a call to the callback with the value changing from the previous value to\n' +
    ' |empty_value|, and similarly when an attribute is added.',
  ' static',
  ' This object is used to track structure changes that will occur for a specific\n' +
    ' AXID. This includes how many times we expect that a node with a specific AXID\n' +
    ' will be created and/or destroyed, and how many times a subtree rooted at AXID\n' +
    ' expects to be destroyed during an AXTreeUpdate.\n' +
    ' An AXTreeUpdate is a serialized representation of an atomic change to an\n' +
    ' AXTree. See also |AXTreeUpdate| which documents the nature and invariants\n' +
    ' required to atomically update the AXTree.\n' +
    ' The reason that we must track these counts, and the reason these are counts\n' +
    ' rather than a bool/flag is because an AXTreeUpdate may contain multiple\n' +
    ' AXNodeData updates for a given AXID. A common way that this occurs is when\n' +
    ' multiple AXTreeUpdates are merged together, combining their AXNodeData list.\n' +
    ' Additionally AXIDs may be reused after being removed from the tree,\n' +
    ' most notably when "reparenting" a node. A "reparent" occurs when an AXID is\n' +
    ' first destroyed from the tree then created again in the same AXTreeUpdate,\n' +
    ' which may also occur multiple times with merged updates.\n' +
    ' We need to accumulate these counts for 3 reasons :\n' +
    '   1. To determine what structure changes *will* occur before applying\n' +
    '      updates to the tree so that we can notify observers of structure changes\n' +
    '      when the tree is still in a stable and unchanged state.\n' +
    '   2. Capture any errors *before* applying updates to the tree structure\n' +
    '      due to the order of (or lack of) AXNodeData entries in the update\n' +
    '      so we can abort a bad update instead of applying it partway.\n' +
    '   3. To validate that the expectations we accumulate actually match\n' +
    '      updates that are applied to the tree.\n' +
    ' To reiterate the invariants that this structure is taking a dependency on\n' +
    ' from |AXTreeUpdate|, suppose that the next AXNodeData to be applied is\n' +
    ' |node|. The following invariants must hold:\n' +
    ' 1. Either\n' +
    '   a) |node.id| is already in the tree, or\n' +
    '   b) the tree is empty, and\n' +
    '      |node| is the new root of the tree, and\n' +
    '      |node.role| == kRootWebArea.\n' +
    ' 2. Every child id in |node.child_ids| must either be already a child\n' +
    '        of this node, or a new id not previously in the tree. It is not\n' +
    '        allowed to "reparent" a child to this node without first removing\n' +
    '        that child from its previous parent.\n' +
    ' 3. When a new id appears in |node.child_ids|, the tree should create a\n' +
    '        new uninitialized placeholder node for it immediately. That\n' +
    '        placeholder must be updated within the same AXTreeUpdate, otherwise\n' +
    "        it's a fatal error. This guarantees the tree is always complete\n" +
    '        before or after an AXTreeUpdate.',
  ' Represents the different states when computing PendingStructureChanges\n' +
    ' required for tree Unserialize.',
  ' Intermediate state to keep track of during a tree update.',
  ' static',
  ' static',
  ' static',
  ' Given an ordered_set, compute pos_in_set and set_size for all of its items\n' +
    ' and store values in cache.\n' +
    ' Ordered_set should never be nullptr.'
]
ax_tree_combiner.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_combiner_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_data.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Note that this includes an initial space character if nonempty, but\n' +
    ' that works fine because this is normally printed by AXTree::ToString.'
]
ax_tree_fuzzer.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Entry point for LibFuzzer.'
]
ax_tree_fuzzer_util.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Pre-order depth first walk of tree. Skip over deleted subtrees.',
  ' When building a tree update, we must take care to not create an\n' +
    ' unserializable tree. If the tree does not serialize, things like\n' +
    ' TestAXTreeObserver will not be able to handle the incorrectly serialized\n' +
    ' tree. This will require us to abort the fuzz run.',
  ' Determine the relationship of the next node from fuzz data.'
]
ax_tree_id.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
ax_tree_id_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_manager.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A flag to ensure that accessibility fatal errors crash immediately.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
ax_tree_manager_base.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
ax_tree_manager_base_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static'
]
ax_tree_manager_map.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_manager_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_observer.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_serializer.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_serializer_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The framework for these tests is that each test sets up |treedata0_|\n' +
    ' and |treedata1_| and then calls GetTreeSerializer, which creates a\n' +
    " serializer for a tree that's initially in state |treedata0_|, but then\n" +
    ' changes to state |treedata1_|. This allows each test to check the\n' +
    ' updates created by AXTreeSerializer or unit-test its private\n' +
    ' member functions.',
  ' In this test, one child is added to the root. Only the root and\n' +
    ' new child should be added.',
  ' When the root changes, the whole tree is updated, even if some of it\n' +
    ' is unaffected.',
  ' When a node is reparented, the subtree including both the old parent\n' +
    ' and new parent of the reparented node must be deleted and recreated.',
  ' When a node is reparented, the subtree including both the old parent\n' +
    ' and new parent of the reparented node must be deleted and recreated.',
  ' Similar to ReparentingUpdatesSubtree, except that InvalidateSubtree is\n' +
    ' called on id=1 - we need to make sure that the reparenting is still\n' +
    ' detected.',
  ' A variant of AXTreeSource that does not serialize one particular id,\n' +
    ' returning nullptr from methods that try to retrieve it.',
  ' Test that the serializer CHECKs when it finds invalid children.',
  ' Test that we can set a maximum number of nodes to serialize.',
  ' If duplicate ids are encountered, it crashes via CHECK(false).',
  " If a tree serializer is reset, that means it doesn't know about\n" +
    ' the state of the client tree anymore. The safest thing to do in\n' +
    ' that circumstance is to force the client to clear everything.',
  " Ensure that calling Reset doesn't cause any problems if\n" +
    ' the root changes.'
]
ax_tree_source_checker_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " It's distracting to see an empty bounding box from every node, so do a\n" +
    ' search-and-replace to get rid of those strings.',
  ' A simple implementation of AXTreeSource initialized from a simple static\n' +
    ' vector of node data, where both the child and parent connections are\n' +
    ' explicit. This allows us to test that AXTreeSourceChecker properly warns\n' +
    ' about errors in accessibility trees that have inconsistent parent/child\n' +
    ' links.'
]
ax_tree_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' UTF encodings that are tested by the `AXTreeTestWithMultipleUTFEncodings`\n' +
    ' parameterized tests.',
  ' Fixture for a test that needs to run multiple times with different UTF\n' +
    ' encodings. For example, once with UTF8 encoding and once with UTF16.',
  ' A macro for testing that a std::optional has both a value and that its value\n' +
    ' is set to a particular expectation.',
  ' Tests a fringe scenario that may happen if multiple AXTreeUpdates are merged.\n' +
    ' Make sure that when a node is reparented then removed from the tree\n' +
    ' that it notifies OnNodeDeleted rather than OnNodeReparented.',
  ' Tests a fringe scenario that may happen if multiple AXTreeUpdates are merged.\n' +
    ' Make sure that when a node is reparented multiple times and exists in the\n' +
    ' final tree that it notifies OnNodeReparented rather than OnNodeDeleted.',
  ' https://crbug.com/1359080\n UAF caught by ax_tree_fuzzer',
  ' UAF caught by ax_tree_fuzzer',
  ' UAF caught by ax_tree_fuzzer',
  ' Create a very simple tree and make sure that we can get the bounds of\n' +
    ' any node.',
  " If a node doesn't specify its location but at least one child does have\n" +
    ' a location, its computed bounds should be the union of all child bounds.',
  " If a node doesn't specify its location but at least one child does have\n" +
    ' a location, it will be offscreen if all of its children are offscreen.',
  " Test that getting the bounds of a node works when there's a transform.",
  " Test that getting the bounds of a node that's inside a container\n" +
    ' works correctly.',
  " Test that getting the bounds of a node that's inside a scrolling container\n" +
    ' works correctly.',
  ' When a node has zero size, we try to get the bounds from an ancestor.',
  ' Tests GetPosInSet and GetSetSize return the assigned int attribute values.',
  ' Tests that PosInSet and SetSize can be calculated if not assigned.',
  ' Tests that PosInSet and SetSize can be calculated for TreeGrid rows if not\n' +
    ' assigned.',
  ' Tests PosInSet can be calculated if unassigned, and SetSize can be\n' +
    ' assigned on the outerlying ordered set.',
  ' Tests GetPosInSet and GetSetSize on a list containing various roles.\n' +
    ' Roles for items and associated ordered set should match up.',
  ' Tests GetPosInSet and GetSetSize on a nested list.',
  ' Tests PosInSet can be calculated if one item specifies PosInSet, but\n' +
    ' other assignments are missing.',
  ' A more difficult test that involves missing PosInSet and SetSize values.',
  ' Tests that code overwrites decreasing SetSize assignments to largest of\n' +
    ' assigned values.',
  ' Tests that code overwrites decreasing PosInSet values.',
  ' Tests that code overwrites duplicate PosInSet values. Note this case is\n' +
    ' tricky; an update to the second element causes an update to the third\n' +
    ' element.',
  ' Tests GetPosInSet and GetSetSize when some list items are nested in a generic\n' +
    ' container.',
  ' Tests GetSetSize and GetPosInSet are correct, even when list items change.\n' +
    ' Tests that previously calculated values are not used after tree is updated.',
  ' Tests GetSetSize and GetPosInSet are correct, even when list items change.\n' +
    ' This test adds an item to the front of a list, which invalidates previously\n' +
    ' calculated PosInSet and SetSize values. Tests that old values are not\n' +
    ' used after tree is updated.',
  ' Tests that the outerlying ordered set reports a SetSize. Ordered sets\n' +
    ' should not report a PosInSet value other than 0, since they are not\n' +
    ' considered to be items within a set (even when nested).',
  ' Tests GetPosInSet and GetSetSize code on invalid input.',
  ' Tests GetPosInSet and GetSetSize code on kRadioButtons. Radio buttons\n' +
    ' behave differently than other item-like elements; most notably, they do not\n' +
    ' need to be contained within an ordered set to report a PosInSet or SetSize.',
  ' Tests GetPosInSet and GetSetSize on a list that includes radio buttons.\n' +
    ' Note that radio buttons do not contribute to the SetSize of the outerlying\n' +
    ' list.',
  ' Tests GetPosInSet and GetSetSize on a flat tree representation. According\n' +
    ' to the tree representation, the three elements are siblings. However,\n' +
    ' due to the presence of the kHierarchicalLevel attribute, they all belong\n' +
    ' to different sets.',
  ' Tests GetPosInSet and GetSetSize on a flat tree representation, where only\n' +
    ' the level is specified.',
  ' Tests that GetPosInSet and GetSetSize work while a tree is being\n' +
    ' unserialized.',
  ' Tests that GetPosInSet and GetSetSize work when there are ignored nodes.',
  ' Tests that kPopUpButtons are assigned the SetSize of the wrapped\n' +
    ' kMenuListPopup, if one is present.',
  ' Tests that PosInSet and SetSize are still correctly calculated when there\n' +
    ' are nodes with role of kUnknown layered between items and ordered set.',
  ' Tests that we get the correct PosInSet and SetSize values when using an\n' +
    ' aria-controls relationship.',
  ' Tests GetPosInSet and GetSetSize return the assigned int attribute values\n' +
    ' when a pop-up button is a leaf node.',
  ' Tests a fringe scenario that may happen if multiple AXTreeUpdates are merged.\n' +
    ' Make sure that we correctly Unserialize if a newly created node is deleted,\n' +
    ' and possibly recreated later.',
  ' Tests a fringe scenario that may happen if multiple AXTreeUpdates are merged.\n' +
    ' Make sure that we correctly Unserialize if a node is reparented multiple\n' +
    ' times.',
  ' Tests a fringe scenario that may happen if multiple AXTreeUpdates are merged.\n' +
    ' Make sure that we correctly Unserialize if a newly created node toggles its\n' +
    ' ignored state.',
  ' Tests a fringe scenario that may happen if multiple AXTreeUpdates are merged.\n' +
    ' Make sure that we correctly Unserialize if a newly created node toggles its\n' +
    ' ignored state.',
  ' Tests a fringe scenario that may happen if multiple AXTreeUpdates are merged.\n' +
    ' Make sure that we correctly Unserialize if a node toggles its ignored state\n' +
    ' and is then removed from the tree.',
  ' Tests that the IsInListMarker() method returns true if the current node is a\n' +
    " list marker or if it's a descendant node of a list marker."
]
ax_tree_update.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_update_util.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Two tree updates can be merged into one if the second one\n' +
    " doesn't clear a subtree, doesn't have new tree data, and\n" +
    " doesn't have a new root id - in other words the second tree\n" +
    ' update consists of only changes to nodes.'
]
ax_tree_update_util_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_updates_and_events.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_action_data_mojom_traits.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_action_data_mojom_traits_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_assistant_structure_mojom_traits.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
ax_event_intent_mojom_traits.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_event_intent_mojom_traits_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_event_mojom_traits.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_event_mojom_traits_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_location_changes_mojom_traits.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_location_changes_mojom_traits_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_mode_mojom_traits.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_mode_mojom_traits_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_node_data_mojom_traits.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_node_data_mojom_traits_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_relative_bounds_mojom_traits.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
ax_relative_bounds_mojom_traits_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_checks_mojom_traits.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_tree_data_mojom_traits.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_tree_data_mojom_traits_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_id_mojom_traits.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_tree_id_mojom_traits_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_update_mojom_traits.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_tree_update_mojom_traits_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_updates_and_events_mojom_traits.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
null_ax_action_target.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
null_ax_action_target_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
atk_util_auralinux.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.\n' +
    ' AtkUtilAuraLinux definition and implementation.',
  ' static',
  ' static\n' +
    ' Disable CFI-icall since the key snooping function could be in another DSO.'
]
atk_util_auralinux_gtk.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
atk_util_auralinux_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
automation_api_util.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
automation_api_util_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
automation_ax_tree_wrapper.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Multiroot tree lookup.\n Represents an app node.',
  ' These maps support moving from a node to a descendant tree node via an app id\n' +
    ' (and vice versa).',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
automation_position.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
automation_tree_manager_owner.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
automation_tree_manager_owner_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests will be run against this class which overrides\n' +
    ' AutomationTreeManagerOwner.',
  ' A skeleton AutomationV8Router implementation for use by a test.\n' +
    ' Starts V8 when constructed. Does not construct a context and will\n' +
    ' fail the test if GetContext() is called.',
  ' Tests for AutomationTreeManagerOwner.'
]
automation_v8_bindings.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper class that wraps a V8 handler function to run with V8 or gin\n' +
    ' arguments.\n' +
    ' Helper class that helps implement bindings for a JavaScript function\n' +
    ' that takes a single input argument consisting of a Tree ID. Looks up\n' +
    ' the AutomationAXTreeWrapper and passes it to the function passed to the\n' +
    ' constructor.\n' +
    ' Helper class that helps implement bindings for a JavaScript function\n' +
    ' that takes two input arguments: a tree ID and node ID. Looks up the\n' +
    ' AutomationAXTreeWrapper and the AXNode and passes them to the function\n' +
    ' passed to the constructor.\n' +
    ' Helper class that helps implement bindings for a JavaScript function\n' +
    ' that takes three input arguments: a tree ID, node ID, and string\n' +
    ' argument. Looks up the AutomationAXTreeWrapper and the AXNode and passes\n' +
    ' them to the function passed to the constructor.\n' +
    ' Helper class that helps implement bindings for a JavaScript function\n' +
    ' that takes four input arguments: a tree ID, node ID, and integer start\n' +
    ' and end indices. Looks up the AutomationAXTreeWrapper and the AXNode and\n' +
    ' passes them to the function passed to the constructor.'
]
automation_v8_router.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
v8_handler_function_wrapper.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_android_constants.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Value should match static constant View.NO_ID in android.view.View.'
]
ax_fragment_root_win.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_fragment_root_win_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_platform.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_platform_atk_hyperlink.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_platform_for_test.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_platform_node.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
ax_platform_node_auralinux.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Function availability can be tested by checking whether its address is not\n' +
    ' nullptr.',
  ' TODO(https://crbug.com/40549424): This may be removed when support for\n' +
    ' Ubuntu 18.04 is dropped.',
  ' IMPORTANT!\n' +
    ' These values are written to logs.  Do not renumber or delete\n' +
    ' existing items; add new entries to the end of the list.\n' +
    ' LINT.IfChange(UmaAtkApi)',
  ' LINT.ThenChange(/tools/metrics/histograms/metadata/accessibility/enums.xml:AccessibilityATKAPIEnum)',
  ' When accepting input from clients calling the API, an ATK character offset\n' +
    ' of -1 can often represent the length of the string.',
  ' We must forward declare this because it is used by the traditional GObject\n' +
    ' type manipulation macros.\n' +
    ' ax_platform_node_auralinux AtkObject definition and implementation.',
  " The root-level Application object that's the parent of all top-level windows.",
  ' The last AtkObject with keyboard focus. Tracking this is required to emit the\n' +
    ' ATK_STATE_FOCUSED change to false.',
  ' The last object which was selected. Tracking this is required because\n' +
    ' widgets in the browser UI only emit notifications upon becoming selected,\n' +
    ' but clients also expect notifications when items become unselected.',
  ' The AtkObject with role=ATK_ROLE_FRAME that represents the toplevel desktop\n' +
    ' window with focus. If this window is not one of our windows, this value\n' +
    ' should be null. This is a weak pointer as well, so its value will also be\n' +
    ' null if if the AtkObject is destroyed.',
  ' The ATK API often requires pointers to be used as out arguments, while\n' +
    ' allowing for those pointers to be null if the caller is not interested in\n' +
    ' the value. This function is a simpler helper to avoid continually checking\n' +
    ' for null and to help prevent forgetting to check for null.',
  ' TODO(https://crbug.com/40549424): This may be removed when support for\n' +
    ' Ubuntu 18.04 is dropped.',
  ' TODO(https://crbug.com/40549424): This may be removed when support for\n' +
    ' Ubuntu 18.04 is dropped.',
  ' TODO(https://crbug.com/40549424): This may be removed when support for\n' +
    ' Ubuntu 18.04 is dropped.',
  ' TODO(https://crbug.com/40549424): This may be removed when support for\n' +
    ' Ubuntu 18.04 is dropped.',
  ' Returns a stack of AtkObjects of activated popup menus. Since each popup\n' +
    ' menu and submenu has its own native window, we want to properly manage the\n' +
    ' activated state for their containing frames.',
  ' The currently active frame is g_active_top_level_frame, unless there is an\n' +
    ' active menu. If there is an active menu the parent frame of the\n' +
    ' most-recently opened active menu should be the currently active frame.',
  ' This function returns a single character as a UTF-8 encoded C string because\n' +
    ' the character may be encoded into more than one byte.',
  ' static',
  ' static',
  ' static\n AXPlatformNodeAuraLinux implementation.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' If we were compiled with a newer version of ATK than the runtime version,\n' +
    " it's possible that the state we want to expose and/or emit an event for\n" +
    ' is not present. This will generate a runtime error.',
  ' Some relations only exist in a high enough ATK version.\n' +
    ' If a relation has a version requirement, it will be documented in\n' +
    ' the link below.\n' +
    ' https://docs.gtk.org/atk/enum.RelationType.html',
  ' All menus have closed.',
  ' AtkDocumentHelpers\n AtkHyperlink helpers\n Misc helpers',
  " Since this method doesn't return a static gchar*, we expect the caller of\n" +
    ' atk_text_get_selection to free the return value.'
]
ax_platform_node_auralinux_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' TODO(crbug.com/40248581): Remove this again.',
  ' ATK window activated event will be held until AT-SPI bridge is ready. For\n' +
    ' those tests using this event, we work that around by faking the state of the\n' +
    ' AT-SPI bridge. Creating an instance of this class will set it to true during\n' +
    ' the test and set it back to its default state when the test ends, so it\n' +
    " doesn't affect other tests run in the same batch.\n" +
    ' AtkObject tests\n' +
    ' AtkComponent tests\n' +
    ' AtkAction tests\n' +
    ' AtkValue tests\n' +
    ' AtkHyperlinkImpl interface\n' +
    ' AtkText interface\n' +
    ' AtkWindow interface and active state\n' +
    ' AtkWindow interface and iconified state',
  ' Tests GetPosInSet() and GetSetSize() functions of AXPlatformNodeBase.\n' +
    ' PosInSet and SetSize must be tested separately from other IntAttributes\n' +
    ' because they can be either assigned values or calculated dynamically.'
]
ax_platform_node_base.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Check for descendant comment, using limited depth first search.',
  " Map from each AXPlatformNode's unique id to its instance.",
  ' Adds process-wide statistics about accessibility objects to traces.',
  ' TODO(fxbug.dev/91030): Remove the !BUILDFLAG(IS_FUCHSIA) condition once\n' +
    ' fuchsia has native accessibility.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' AXPlatformNode overrides.',
  ' Helpers.',
  ' static',
  ' TODO(nektar): To be able to use AXNode in Views, move this logic to AXNode.',
  ' static',
  ' Return true if the index represents a text character.',
  ' static'
]
ax_platform_node_base_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_platform_node_delegate.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_platform_node_delegate_utils_win.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_platform_node_test_helper.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
ax_platform_node_textchildprovider_win.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
ax_platform_node_textchildprovider_win_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ITextChildProvider::TextContainer Tests\n' +
    ' For each possible position in the tree verify:\n' +
    " 1) A text container can/cannot be retrieved if an ancestor does/doesn't\n" +
    '    support the UIA Text control pattern.\n' +
    ' 2) Any retrieved text container is the nearest ancestor text container.\n' +
    ' 3) A Text control can in fact be retrieved from any retrieved text\n' +
    '    container.',
  ' ITextChildProvider::TextRange Tests\n' +
    ' For each possible position in the tree verify:\n' +
    " 1) A text range can/cannot be retrieved if an ancestor does/doesn't\n" +
    '    support the UIA Text control pattern.\n' +
    ' 2) Any retrieved text range encloses the child element.',
  ' ITextChildProvider Tests - Inactive AX Tree\n' +
    ' Test that both ITextChildProvider::GetTextContainer and\n' +
    ' ITextChildProvider::GetTextContainer fail under an inactive AX tree.'
]
ax_platform_node_textprovider_win.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static\n ITextProvider methods.\n ITextEditProvider methods.'
]
ax_platform_node_textprovider_win_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper macros for UIAutomation HRESULT expectations'
]
ax_platform_node_textrangeprovider_win.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Validate bounds calculated by AXPlatformNodeDelegate. Degenerate bounds\n' +
    ' indicate the interface is not yet supported on the platform.\n' +
    ' ITextRangeProvider methods.',
  ' This function is expected to return a subset of the *direct* children of the\n' +
    ' common ancestor node. The subset should only include the direct children\n' +
    ' included - fully or partially - in the range.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' When the current selection is inside a focusable element, the DOM focused\n' +
    ' element will correspond to this element. When we update the selection to be\n' +
    " on a different element that is not focusable, the new selection won't be\n" +
    ' applied unless we remove the DOM focused element. For example, with Narrator,\n' +
    ' if we move by word from a text field (focusable) to a static text (not\n' +
    ' focusable), the selection will stay on the text field because the DOM focused\n' +
    ' element will still be the text field. To avoid that, we need to remove the\n' +
    ' focus from this element.',
  ' static',
  ' static',
  ' static',
  ' Ensures that our endpoints are located on non-deleted nodes (step 1, case A\n' +
    ' and B). See comment in header file for more details.',
  ' Ensures that our endpoints are always valid (step 2, all scenarios). See\n' +
    ' comment in header file for more details.',
  ' Ensures that our endpoints are always valid (step 2, all scenarios). See\n' +
    ' comment in header file for more details.'
]
ax_platform_node_textrangeprovider_win_fuzzer.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' We generate positions using fuzz data, this constant should be aligned\n' +
    ' with the amount of bytes needed to generate a new text range.',
  ' This should be aligned with the amount of bytes needed to mutate a text range\n' +
    ' in ...MutateTextRangeProvider...',
  ' Min/Max node size for the initial tree.',
  ' Min fuzz data needed for fuzzer to function.\n' +
    ' We need to ensure we have enough data to create a tree with text, as well as\n' +
    ' generate a couple of text ranges and mutate them.',
  ' Cap fuzz data to avoid slowness.',
  ' This method returns a text range scoped to this node.',
  ' Entry point for LibFuzzer.'
]
ax_platform_node_textrangeprovider_win_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Helper macros for UIAutomation HRESULT expectations',
  ' Verify that the endpoint can move past an empty text field.',
  ' TODO(crbug.com/40717049): Remove this test once this crbug is fixed.'
]
ax_platform_node_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_platform_node_win.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.\n' +
    ' Macros to use at the top of any AXPlatformNodeWin function that implements\n' +
    ' a non-UIA COM interface. Because COM objects are reference counted and\n' +
    " clients are completely untrusted, it's important to always first check that\n" +
    ' our object is still valid, and then check that all pointer arguments are not\n' +
    ' NULL.',
  ' Set of all AXPlatformNodeWin objects that were the target of an\n' +
    ' alert event.',
  ' Sets the multiplier by which large changes to a RangeValueProvider are\n' +
    ' greater than small changes.',
  ' Sets the default small change amount for a RangeValueProvider when no\n' +
    ' step was set on the element. Note: This should be in-sync with the native\n' +
    ' default value, defined by the default constructor of:\n' +
    '   third_party/blink/renderer/core/html/forms/step_range.cc',
  ' The amount to scroll when UI Automation asks to scroll by a small increment.\n' +
    ' Value is in device independent pixels and is the same used by Blink when\n' +
    ' cursor keys are used to scroll a webpage.',
  ' Helper function to GetPatternProviderFactoryMethod that, given a node,\n' +
    ' will return a pattern interface through result based on the provided type T.',
  " This also sets kNativeAPIs and kWebContents to ensure we don't have an\n" +
    ' incorrect combination of AXModes.\n' +
    ' WinAccessibilityAPIUsageObserver',
  ' static',
  ' Used to simplify calling StartFiringUIAEvents and EndFiringEvents\n' +
    ' AXPlatformNode::Create',
  ' static',
  ' static\n AXPlatformNodeWin',
  ' Static\n' +
    ' AXPlatformNodeBase implementation.\n' +
    ' AXPlatformNode implementation.\n' +
    ' IAccessible implementation.\n' +
    ' IAccessible2 implementation.\n' +
    ' IAccessible2 methods not implemented.\n' +
    ' IAccessible2_3 implementation.\n' +
    ' IAccessible2_4 implementation.\n' +
    ' IAccessibleEx implementation.\n' +
    ' IAnnotationProvider methods.\n' +
    ' IExpandCollapseProvider implementation.\n' +
    ' IGridItemProvider implementation.\n' +
    ' IGridProvider implementation.\n' +
    ' IInvokeProvider implementation.\n' +
    ' IScrollItemProvider implementation.\n' +
    ' IScrollProvider implementation.',
  ' Horizontal size of the viewable region as a percentage of the total content\n' +
    ' area.',
  ' Vertical size of the viewable region as a percentage of the total content\n' +
    ' area.\n' +
    ' ISelectionItemProvider implementation.\n' +
    ' ISelectionProvider implementation.\n' +
    ' ITableItemProvider methods.\n' +
    ' ITableProvider methods.\n' +
    ' IToggleProvider implementation.\n' +
    ' IValueProvider implementation.\n' +
    ' IWindowProvider implementation.\n' +
    ' IRangeValueProvider implementation.',
  ' IAccessibleEx methods not implemented.\n' +
    ' IAccessibleTable methods.\n' +
    ' IAccessibleTable2 methods.\n' +
    ' IAccessibleTableCell methods.\n' +
    ' IAccessibleText\n' +
    ' IAccessibleTextSelectionContainer methods.\n' +
    ' IAccessibleHypertext methods not implemented.\n' +
    ' IAccessibleText methods not implemented.\n' +
    ' IAccessibleValue methods.\n' +
    ' IRawElementProviderFragment implementation.\n' +
    ' IRawElementProviderSimple implementation.\n' +
    ' IRawElementProviderSimple2 implementation.\n' +
    ' IChromeAccessible implementation.\n' +
    ' IServiceProvider implementation.\n' +
    ' Methods used by the ATL COM map.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' IRawElementProviderSimple support methods.\n Private member functions.',
  " ComputeIA2Role() only returns a role if the MSAA role doesn't suffice,\n" +
    ' otherwise this method returns 0. See AXPlatformNodeWin::role().',
  ' static',
  ' static',
  ' static',
  ' static',
  ' IRawElementProviderSimple support methods.',
  ' static'
]
ax_platform_node_win_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Most IAccessible functions require a VARIANT set to CHILDID_SELF as\n' +
    ' the first argument.',
  ' Helper macros for UIAutomation HRESULT expectations',
  ' Helper macros for testing UIAutomation property values and maintain\n' +
    ' correct stack tracing and failure causality.\n' +
    " WARNING: These aren't intended to be generic EXPECT_BSTR_EQ macros\n" +
    ' as the logic is specific to extracting and comparing UIA property\n' +
    ' values.\n' +
    ' IRawElementProviderSimple methods.',
  ' This test is disabled until UpdateStep2ComputeHypertext is migrated over\n' +
    ' to AXPlatformNodeWin because |hypertext_| is only initialized\n' +
    ' on the BrowserAccessibility side.',
  ' This test is disabled until UpdateStep2ComputeHypertext is migrated over\n' +
    ' to AXPlatformNodeWin because |hypertext_| is only initialized\n' +
    ' on the BrowserAccessibility side.',
  ' If a menu button has an expanded or collapsed state, we want to make sure we\n' +
    ' let that be the deciding factor for `get_ExpandCollapseState()`. Otherwise,\n' +
    ' check if the button is pressed.\n' +
    ' IChromeAccessible tests',
  ' http://crbug.com/1087206: failing on Win7 builders.'
]
ax_platform_relation_win.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' static'
]
ax_platform_text_boundary.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_platform_tree_manager.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_platform_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The test harness creates an instance. Make sure the getter works.',
  ' Tests that observers are notified when mode flags are added.'
]
ax_system_caret_win.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_unique_id.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the container of assigned IDs.',
  ' static'
]
ax_unique_id_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
browser_accessibility.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Fuchsia WebEngine doesn't use these strings, so they are excluded to save\n" +
    ' space.\n' +
    ' TODO(https://crbug.com/358567091): Move this logic outside of\n' +
    ' BrowserAccessibility to avoid platform-specific code in the base class.',
  ' If there are more than 10 million objects alive at once, dump.\n' +
    ' It is likely to be a leak if we have > 100 tabs x 10000 objects.',
  ' static',
  ' static',
  ' static',
  " Get the native text field's deepest container; the lowest descendant that\n" +
    ' contains all its text. Returns nullptr if the text field is empty, or if it\n' +
    ' is not a native text field (input or textarea).',
  ' |offset| could either be a text character or a child index in case of\n' +
    ' non-text objects.\n' +
    " Currently, to be safe, we convert to text leaf equivalents and we don't use\n" +
    ' tree positions.\n' +
    ' TODO(nektar): Remove this function once selection fixes in Blink are\n' +
    ' thoroughly tested and convert to tree positions.',
  ' TODO(crbug.com/337737555): This extra hop seems redundant, but\n' +
    ' unintuitively, this is the only override of NotifyAccessibilityApiUsage, so\n' +
    " the the other inheritors of AXPlatformNodeDelegate don't actually ever send\n" +
    ' this notification. But, if this was refactored to be directly called, we end\n' +
    ' up failing bots due to the fact that this can be called by our own API usage,\n' +
    ' which is tracked by the linked bug.\n' +
    ' AXPlatformNodeDelegate.',
  ' TODO(https://crbug.com/358567091): Move this logic outside of\n' +
    ' BrowserAccessibility to avoid platform-specific code in the base class.',
  ' static',
  ' static'
]
browser_accessibility_auralinux.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
browser_accessibility_auralinux_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser_accessibility_com_win.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/342213636): Remove this and spanify to fix the errors.',
  " This also sets kNativeAPIs and kWebContents to ensure we don't have an\n" +
    ' incorrect combination of AXModes.\n' +
    ' BrowserAccessibilityComWin::WinAttributes\n' +
    ' BrowserAccessibilityComWin::UpdateState\n' +
    ' BrowserAccessibilityComWin\n' +
    ' IAccessible2 overrides:\n' +
    ' IAccessibleApplication methods.',
  ' TODO(https://crbug.com/337998769): Confirm this is the intended behavior of\n' +
    ' this API. Do ATs really need to know more than just the app version?\n' +
    ' In Chrome, we return the User agent string here.\n' +
    ' IAccessibleImage methods.\n' +
    ' IAccessibleText methods.',
  ' IAccessibleText::get_attributes()\n' +
    ' Returns text attributes -- not HTML attributes!\n' +
    ' IAccessibleHypertext methods.\n' +
    ' IAccessibleHyperlink methods.',
  ' Currently, only text links are supported.',
  ' Currently, only text links are supported.',
  ' This method is deprecated in the IA2 Spec.\n' +
    ' IAccessibleAction partly implemented.\n' +
    ' ISimpleDOMDocument methods.\n' +
    ' ISimpleDOMNode methods.',
  ' ISimpleDOMNode::get_attributes()\n' +
    ' Returns HTML attributes -- not text attributes!',
  ' ISimpleDOMNode::get_attributesForNames()\n' +
    ' Returns HTML attributes -- not text attributes!',
  ' We only support this method for retrieving MathML content.\n' +
    ' ISimpleDOMText methods.\n' +
    ' IServiceProvider methods.\n' +
    ' CComObjectRootEx methods.',
  ' static\n Private methods.'
]
browser_accessibility_manager.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  " A flag for use in tests to ensure events aren't suppressed or delayed.\n" +
    ' static',
  ' static',
  ' static',
  ' static\n Next object in tree using depth-first pre-order traversal.',
  ' static\n' +
    ' Next non-descendant object in tree using depth-first pre-order traversal.',
  ' static\n Previous object in tree using depth-first pre-order traversal.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
browser_accessibility_manager_auralinux.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
browser_accessibility_manager_auralinux_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser_accessibility_manager_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
browser_accessibility_manager_win_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser_accessibility_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
browser_accessibility_win_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' BrowserAccessibilityWinTest ------------------------------------------------',
  ' Actual tests ---------------------------------------------------------------',
  ' Test that BrowserAccessibilityManager correctly releases the tree of\n' +
    ' BrowserAccessibility instances upon delete.',
  ' This is a regression test for a bug where the initial empty document\n' +
    " loaded by a BrowserAccessibilityManagerWin couldn't be looked up by\n" +
    ' its UniqueIDWin, because the AX Tree was loaded in\n' +
    ' BrowserAccessibilityManager code before BrowserAccessibilityManagerWin\n' +
    ' was initialized.',
  ' TODO(crbug.com/41439880): Disabled due to flakiness.'
]
child_iterator_base.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
compute_attributes.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
accessibility_bridge_fuchsia_impl.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Error allowed for each edge when converting from gfx::RectF to gfx::Rect.'
]
accessibility_bridge_fuchsia_registry.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
accessibility_bridge_fuchsia_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_platform_node_fuchsia.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
browser_accessibility_fuchsia.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
browser_accessibility_fuchsia_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser_accessibility_manager_fuchsia.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Accessibility bridge instance to use for tests, if set.',
  ' static',
  ' static',
  ' static',
  ' static'
]
browser_accessibility_manager_fuchsia_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
semantic_provider_impl.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
semantic_provider_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a semantic tree of the form:\n (0 (1 2 (3 4 (5))))',
  ' Verify that the AXFuchsiaSemanticProviderImpl constructor triggered the call\n' +
    ' chain RegisterViewForSemantics -> OnSemanticsModeChanged ->\n' +
    ' OnSemanticsEnabled.'
]
scoped_co_mem_array_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
ax_api_type.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These strings are stored in prefs for chrome://accessibility, do not rename.\n' +
    ' When adding a new type, add a new entry here and then update the methods that\n' +
    ' convert to/from string.',
  ' static'
]
ax_call_statement_invoker_auralinux.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
ax_call_statement_invoker_win.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_event_recorder.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_event_recorder_auralinux.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' static',
  ' static',
  ' static',
  ' This list is composed of the sorted event names taken from the list provided\n' +
    ' in the libatspi documentation at:\n' +
    ' https://developer.gnome.org/libatspi/stable/AtspiEventListener.html#atspi-event-listener-register'
]
ax_event_recorder_fuchsia.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_event_recorder_win.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
ax_event_recorder_win_uia.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' Due to a bug in Windows (fixed in Windows 10 19H1, but found broken in 20H2),\n' +
    ' events are raised exactly twice for any in-proc off-thread event listeners.\n' +
    ' To avoid this, in UIA API methods we can pass the RETURN_ADDRESS() to this\n' +
    ' method to determine whether the caller belongs to a specific platform module.'
]
ax_inspect.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_inspect_scenario.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
ax_inspect_scenario_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_inspect_test_helper.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static'
]
ax_inspect_test_helper_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_inspect_utils.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_inspect_utils_auralinux.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' This is used to ensure a standard set of AtkRole name conversions between\n' +
    ' different versions of ATK. Older versions may not have an implementation of\n' +
    ' a new role and newer versions may have changed the name returned by\n' +
    ' atk_role_get_name. This table should be kept up to date with newer ATK\n' +
    ' releases.'
]
ax_inspect_utils_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_inspect_utils_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
ax_property_node.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' private',
  ' private static'
]
ax_property_node_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_script_instruction.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_script_instruction_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_target_win.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_formatter.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' AXTreeFormatter',
  ' static',
  ' static'
]
ax_tree_formatter_auralinux.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Used in dictionary to disambiguate property vs object attribute when they\n' +
    ' have the same name, e.g. "description".\n' +
    ' In the final output, they will show up differently:\n' +
    " description='xxx' (property)\n" +
    ' description:xxx (object attribute)'
]
ax_tree_formatter_base.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_tree_formatter_uia_win.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' The RuntimeId returned from IUIAutomationElement is different than the one\n' +
    ' we hand out in IRawElementProviderFragment::GetRuntimeId, as UIA modifies it.\n' +
    ' This function takes an existing IUIAutomationElement and swaps in the\n' +
    ' Chromium specific bits of the internal runtime id so that the returned\n' +
    ' SAFEARRAY can be used in IUIAutomationElement-based search/conditionals.',
  ' This is the list of interesting properties to dump.\n' +
    ' Certain properties are skipped because they are known to cause crashes if the\n' +
    " underlying pattern isn't implemented (e.g., LegacyIAccessibleSelection will\n" +
    " crash on Win7 if the LegacyIAccessible pattern isn't implemented).\n" +
    " Other properties aren't interesting in a tree-dump context (e.g., ProcessId).\n" +
    " Finally, certain properties are dumped as part of a pattern, and don't need\n" +
    ' to be dumped a second time here (e.g., Grid*, GridItem*, RangeValue*, etc.).',
  ' static'
]
ax_tree_formatter_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
one_shot_accessibility_tree_search.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Given a node, populate a vector with all of the strings from that node's\n" +
    ' attributes that might be relevant for a text search.\n' +
    ' Predicates'
]
provide_ax_platform_for_tests.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_ax_node_id_delegate.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_ax_node_wrapper.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A global map from AXNodes to TestAXNodeWrappers.',
  ' A global coordinate offset.',
  ' A global scale factor.',
  ' A global map that stores which node is focused on a determined tree.\n' +
    "   - If a tree has no node being focused, there shouldn't be any entry on the\n" +
    '     map associated with such tree, i.e. a pair {tree, nullptr} is invalid.\n' +
    '   - For testing purposes, assume there is a single node being focused in the\n' +
    '     entire tree and if such node is deleted, focus is completely lost.',
  ' A global indicating the last node which ShowContextMenu was called from.',
  ' A global indicating the last node which accessibility perform action\n' +
    ' default action was called from.',
  ' A global indicating that AXPlatformNodeDelegate objects are web content.',
  ' A map of hit test results - a map from source node ID to destination node\n' +
    ' ID.',
  ' A simple implementation of AXTreeObserver to catch when AXNodes are\n' +
    ' deleted so we can delete their wrappers.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' Walk the AXTree and ensure that all wrappers are created',
  ' static\n' +
    ' Needs to stay in sync with AXPlatformNodeWin::ShouldHideChildrenForUIA.'
]
test_ax_platform_tree_manager_delegate.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
uia_registrar_win.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' UIA custom events.',
  ' UIA custom properties.'
]
run_all_unittests.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_ax_node_helper.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A global map from AXNodes to TestAXNodeHelpers.',
  ' A simple implementation of AXTreeObserver to catch when AXNodes are\n' +
    ' deleted so we can delete their helpers.',
  ' static'
]
test_ax_tree_update.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_single_ax_tree_manager.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
tree_generator.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
actions.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Alternative terms used to identify this action. Used for search indexing',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
actions_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' clang-format on',
  ' Verifies that the test harness functions correctly.',
  ' Verifies that the Initializers are properly called.'
]
color_utils_android.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_utils_android_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Intentionally avoids reusing the constant defined in color_helpers.h to catch\n' +
    ' mistakes that accidentally change the value.',
  ' https://developer.android.com/reference/android/graphics/Color.html defines\n' +
    ' the various color constants.'
]
delegated_frame_host_android.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' From content::VisibleTimeRequestTrigger::ConsumeAndMergeRequests\n' +
    ' TODO(crbug.com/40203057): Use separate start time for each event.'
]
display_android_manager.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().',
  ' Screen interface.',
  ' There is no notion of relative display positions on Android.',
  ' There is no notion of relative display positions on Android.',
  ' Methods called from Java'
]
dummy_screen_android.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A Screen for Android unit tests that do not talk to Java. The class contains\n' +
    ' one primary display with default Display configuration and 256x512 dip size.'
]
edge_effect.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Time it will take the effect to fully recede in ms',
  ' Time it will take before a pulled glow begins receding in ms',
  ' Time it will take for a pulled glow to decay to partial strength before\n' +
    ' release',
  ' Min/max velocity that will be absorbed',
  ' How much dragging should effect the height of the glow image.\n' +
    ' Number determined by user testing.',
  ' Computes the transform for an edge effect given the |edge|, |viewport_size|\n' +
    ' and edge |offset|. This assumes the the effect transform anchor is at the\n' +
    ' centered edge of the effect.',
  ' Computes the maximum effect size relative to the screen |edge|. For\n' +
    ' top/bottom edges, this is simply |viewport_size|, while for left/right\n' +
    ' edges this is |viewport_size| with coordinates swapped.'
]
event_forwarder.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().'
]
handle_view_resources.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().'
]
modal_dialog_manager_bridge.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().',
  ' `ui/android/ui_android_jni_headers/ModalDialogManagerBridge_jni.h`\n' +
    ' implementations.'
]
modal_dialog_wrapper.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().',
  ' static:',
  ' static:',
  ' private:'
]
modal_dialog_wrapper_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().'
]
overscroll_glow.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
overscroll_refresh.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Experimentally determined constant used to allow activation even if touch\n' +
    ' release results in a small upward fling (quite common during a slow scroll).',
  ' Weighted value used to determine whether a scroll should trigger vertical\n' +
    ' scroll or horizontal navigation.'
]
overscroll_refresh_handler.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().'
]
overscroll_refresh_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
nine_patch_resource.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
resource.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
resource_factory.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().'
]
resource_manager_impl.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().',
  ' static'
]
resource_manager_impl_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_resource_provider.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
run_all_unittests.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_android_feature_map.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().',
  ' Array of features exposed through the Java UiAndroidFeatureMap API.',
  ' static'
]
ui_android_features.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_android.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().',
  ' static',
  ' static',
  ' If view does not support copy request, return back the request.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
view_android_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_android.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().',
  ' static',
  ' ----------------------------------------------------------------------------\n' +
    ' Native JNI methods\n' +
    ' ----------------------------------------------------------------------------'
]
aura_constants.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Alphabetical sort.'
]
capture_client.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cursor_client.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A property key to store a client that handles window moves.'
]
cursor_client_observer.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Added to make sure that something is built in aura with this\n' +
    ' include so that the symbol CursorClientObserver is exported.'
]
cursor_shape_client.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
default_capture_client.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Track the active capture window across root windows.'
]
drag_drop_client.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drag_drop_delegate.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_client.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
focus_change_observer.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
focus_client.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
screen_position_client.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
screen_position_client_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
transient_window_client.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
visibility_client.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A property key to store a client that handles window visibility changes.'
]
window_parenting_client.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_stacking_client.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
demo_main.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Trivial WindowDelegate implementation that draws a colored background.',
  ' Runs a base::RunLoop until receiving OnHostCloseRequested from |host|.'
]
env.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Instance created by all static functions, except\n' +
    ' CreateLocalInstanceForInProcess(). See GetInstance() for details.',
  ' EventObserverAdapter is an aura::Env pre-target handler that forwards\n' +
    ' read-only events to its observer when they match the requested types.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Env, public:',
  ' static',
  ' static',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Env, private:',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Env, ui::EventTarget implementation:'
]
env_input_state_controller.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_injector.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_recognizer_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' A delegate that keeps track of gesture events.',
  ' A delegate that ignores gesture events but keeps track of [synthetic] mouse\n' +
    ' events.',
  ' An event handler to keep track of events.',
  ' Removes the target window from its parent when it receives a touch-cancel\n' +
    ' event.',
  ' Verify that we do not crash when removing a window during a cancel touch\n' +
    ' event originating from CancelActiveTouchesExcept. This monitors for\n' +
    ' regressions on crbug.com/651258.',
  ' Check that appropriate touch events generate tap gesture events.',
  ' Check that appropriate touch events generate tap gesture events\n' +
    ' when information about the touch radii are provided.',
  ' Check that appropriate touch events generate scroll gesture events.',
  ' Check that predicted scroll update positions are correct.',
  ' Check that the bounding box during a scroll event is correct.',
  ' Check Scroll End Events report correct velocities\n' +
    ' if the user was on a horizontal rail',
  ' Check Scroll End Events report correct velocities\n' +
    ' if the user was on a vertical rail',
  ' Check Scroll End Events report non-zero velocities if the user is not on a\n' +
    ' rail',
  ' Check that appropriate touch events generate long press events',
  ' Check that scrolling prevents a long press.',
  ' Check that appropriate touch events generate long tap events',
  ' Check that second tap cancels a long press',
  ' Check that horizontal scroll gestures cause scrolls on horizontal rails.\n' +
    ' Also tests that horizontal rails can be broken.',
  ' Check that vertical scroll gestures cause scrolls on vertical rails.\n' +
    ' Also tests that vertical rails can be broken.',
  ' Verifies that destroying a gesture provider aura instance before a touch\n' +
    ' event is ACKed works as expected (see https://crbug.com/1292264).',
  ' Check that appropriate touch events generate pinch gesture events.',
  ' Check that a touch is locked to the window of the closest current touch\n' +
    ' within max_separation_for_gesture_touches_in_pixels',
  " Check that a touch's target will not be effected by a touch on a different\n" +
    ' screen.',
  ' Check that touch events outside the root window are still handled\n' +
    " by the root window's gesture sequence.",
  ' Check that previous touch actions that are completely finished (either\n' +
    ' released or cancelled), do not receive extra synthetic cancels upon change of\n' +
    ' capture.',
  ' Tests that a press with the same touch id as an existing touch is ignored.',
  ' Verifies if a window is the target of multiple touch-ids and we hide the\n' +
    ' window everything is cleaned up correctly.',
  ' Same as GestureEventConsumeDelegate, but consumes all the touch-move events.',
  ' Same as GestureEventScroll, but tests that the behavior is the same\n' +
    ' even if all the touch-move events are consumed.',
  ' Tests the behavior of 2F scroll when some of the touch-move events are\n' +
    ' consumed.',
  ' Like as GestureEventTouchMoveConsumed but tests the different behavior\n' +
    ' depending on whether the events were consumed before or after the scroll\n' +
    ' started.',
  ' Check that appropriate touch events generate double tap gesture events.',
  ' Check that appropriate touch events generate triple tap gesture events.',
  " Check that we don't get a double tap when the two taps are far apart.",
  " Check that we don't get a double tap when the two taps have a long enough\n" +
    ' delay in between.',
  ' Checks that if the bounding-box of a gesture changes because of change in\n' +
    ' radius of a touch-point, and not because of change in position, then there\n' +
    ' are not gesture events from that.',
  ' Checks that slow scrolls deliver the correct deltas.\n' +
    ' In particular, fix for http;//crbug.com/150573.',
  ' Ensure that move events which are preventDefaulted will cause a tap\n' +
    ' cancel gesture event to be fired if the move would normally cause a\n' +
    ' scroll. See bug http://crbug.com/146397.',
  ' Check that appropriate touch events generate show press events',
  ' Check that scrolling cancels a show press',
  ' Test that show press events are sent immediately on tap',
  ' Test that consuming the first move touch event prevents a scroll.',
  " Test that consuming the first move touch doesn't prevent a tap.",
  " Test that consuming the first move touch doesn't prevent a long press.",
  ' Tests that the deltas are correct when leaving the slop region very slowly.',
  ' Test that touch event flags are passed through to the gesture event.',
  ' A delegate that deletes a window on long press.',
  " Check that deleting the window in response to a long press gesture doesn't\n" +
    ' crash.',
  " Tests that delaying the ack of a touch release doesn't trigger a long press\n" +
    ' gesture.',
  ' This tests crbug.com/405519, in which touch events which the gesture detector\n' +
    ' ignores interfere with gesture recognition.',
  ' Tests that an event stream can have a mix of sync and async acks.',
  ' Test for crbug/698843. Checks whether the events are routed to the correct\n' +
    ' consumer in the event of TransferEventsTo() function call.',
  ' Verifies that destructing a `GestureRecognizerImpl` instance with gesture\n' +
    ' providers works as expected (https://crbug.com/1325256).'
]
host_frame_rate_throttler.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_state_lookup.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
input_state_lookup_win.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
layout_manager.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_window_occlusion_tracker.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
native_window_occlusion_tracker_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test wrapper around native window HWND.',
  ' Test wrapper around native window HWND.',
  ' This class currently tests the behavior of\n' +
    ' NativeWindowOcclusionTrackerWin::IsWindowVisibleAndFullyOpaque with hwnds\n' +
    ' with various attributes (e.g., minimized, transparent, etc).'
]
native_window_occlusion_tracker_win.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ~16 ms = time between frames when frame rate is 60 FPS.',
  ' This global variable can be accessed only on main thread.',
  ' The occluded region is calcuated in window pixel coordinates (aka screen\n' +
    ' coordinates). This maps it to DIPs (which the rest of the code needs) and\n' +
    ' converts to client coordinates (if necessary).',
  ' static',
  ' static',
  ' static',
  ' static'
]
native_window_occlusion_tracker_win_interactive_test.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is used to verify expectations about occlusion state changes by\n' +
    ' adding instances of it as an observer of aura:Windows the tests create and\n' +
    ' checking that they get the expected call(s) to OnOcclusionStateChanged.\n' +
    ' The tests verify that the current state, when idle, is the expected state,\n' +
    ' because the state can be VISIBLE before it reaches the expected state.',
  ' Test wrapper around native window HWND.',
  ' Simple test completely covering an aura window with a native window.',
  ' Simple test partially covering an aura window with a native window.',
  ' Simple test that a partly off screen aura window, with the on screen part\n' +
    ' occluded by a native window, is considered occluded.',
  ' Simple test with an aura window and native window that do not overlap.',
  ' Simple test with a minimized aura window and native window.',
  ' Test that minimizing and restoring an app window results in the occlusion\n' +
    ' tracker re-registering for win events and detecting that a native window\n' +
    ' occludes the app window.',
  ' Test that locking the screen causes visible windows to become occluded.',
  ' Test that locking the screen leaves hidden windows as hidden.',
  " Test that locking the screen from a different session doesn't mark window\n" +
    ' as occluded.',
  ' Test that display off & on power state notification causes visible windows to\n' +
    ' become occluded, then visible.',
  ' Verifies that a window is not occluded if the only window occluding it is\n' +
    ' being moved/dragged.\n' +
    ' TODO(crbug.com/40801894): Flaky on Windows.',
  ' Test that a maximized aura window that is covered by a fullscreen window\n' +
    ' is marked as occluded. TODO(crbug.com/40833493): Fix flakiness.'
]
null_window_targeter.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_keyboard_hook.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_simple_keyboard_hook.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_window_capture_request.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_window_event_targeting_blocker.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_window_targeter.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
screen_ozone.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
aura_test_base.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
aura_test_helper.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
aura_test_utils.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
default_event_generator_delegate.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_generator_delegate_aura.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
run_all_unittests.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_cursor_client.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_focus_client.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TestFocusClient, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TestFocusClient, client::FocusClient implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TestFocusClient, WindowObserver implementation:'
]
test_screen.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
test_window_delegate.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TestWindowDelegate',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' ColorTestWindowDelegate',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' MaskedWindowDelegate',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' EventCountDelegate'
]
test_window_parenting_client.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_window_targeter.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_windows.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_controls_aurawin.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_controls_ozone.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
window_event_dispatcher_test_api.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_occlusion_tracker_test_api.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
window_test_api.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' static',
  ' static',
  ' static',
  ' This enum is used to construct a unique property changed callback key from\n' +
    ' the address of the `bounds_` field by using these values as an offset.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' {Set,Get,Clear}Property are implemented in class_property.h.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' Window, private:',
  ' static',
  ' static'
]
window_delegate.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_event_dispatcher.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if |target| has a non-client (frame) component at |location|,\n' +
    ' in window coordinates.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowEventDispatcher, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowEventDispatcher, private:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowEventDispatcher, aura::client::CaptureDelegate implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowEventDispatcher, ui::EventProcessor implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowEventDispatcher, ui::EventDispatcherDelegate implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowEventDispatcher, ui::GestureEventHelper implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowEventDispatcher, WindowObserver implementation:',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowEventDispatcher, EnvObserver implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowEventDispatcher, private:'
]
window_event_dispatcher_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A delegate that always returns a non-client component for hit tests.',
  ' A simple event handler that consumes key events.',
  ' ImeKeyEventDispatcher that tracks the events passed to PostIME phase.',
  ' Check that we correctly track whether any touch devices are down in response\n' +
    ' to touch press and release events with two WindowTreeHost.',
  ' Check that we correctly track the state of the mouse buttons in response to\n' +
    ' button press and release events.',
  ' Tests that touch-events that are beyond the bounds of the root-window do get\n' +
    ' propagated to the event filters correctly with the root as the target.',
  ' Tests that scroll events are dispatched correctly.',
  " ui::EventHandler that tracks the types of events it's seen.",
  ' Converts an EventType to a string.',
  ' Verifies a repost mouse event targets the window with capture (if there is\n' +
    ' one).\n' +
    ' Flaky on 32-bit Windows bots.  http://crbug.com/388290',
  ' Tests that mouse move event has a right location\n' +
    " when there isn't the target window",
  ' Tests that a mouse exit is dispatched to the last mouse location when\n' +
    ' the window is hiddden.',
  ' Tests that a mouse-exit event is not synthesized during shutdown.',
  ' Verifies that a direct call to ProcessedTouchEvent() does not cause a crash.',
  ' This event handler requests the dispatcher to start holding pointer-move\n' +
    ' events when it receives the first scroll-update gesture.',
  " Tests that touch-move events don't contribute to an in-progress scroll\n" +
    ' gesture if touch-move events are being held by the dispatcher.',
  " Tests that a 'held' touch-event does contribute to gesture event when it is\n" +
    ' dispatched.',
  ' Tests that synthetic mouse events are ignored when mouse\n' +
    ' events are disabled.',
  ' Tests that a mouse-move event is not synthesized when a mouse-button is down.',
  ' Tests that a mouse-press event is not dispatched during shutdown.',
  ' Tests synthetic mouse events generated when window bounds changes such that\n' +
    ' the cursor previously outside the window becomes inside, or vice versa.\n' +
    ' Do not synthesize events if the window ignores events or is invisible.\n' +
    ' Flaky on 32-bit Windows bots.  http://crbug.com/388272',
  ' Tests that a mouse exit is dispatched to the last known cursor location\n' +
    ' when the cursor becomes invisible.',
  ' Tests that a synthetic mouse exit is dispatched to the last known cursor\n' +
    ' location after mouse events are disabled on the cursor client.',
  " A window delegate that detaches the parent of the target's parent window when\n" +
    ' it receives a tap event.',
  ' Tests that the gesture recognizer is reset for all child windows when a\n' +
    ' window hides. No expectations, just checks that the test does not crash.',
  ' A window delegate that processes nested gestures on tap.',
  ' Tests that gesture end is delivered after nested gesture processing.',
  ' Tests whether we can repost the Tap down gesture event.',
  ' This class inherits from the EventFilterRecorder class which provides a\n' +
    ' facility to record events. This class additionally provides a facility to\n' +
    ' repost the EventType::kGestureTapDown gesture to the target window and\n' +
    ' records events after that.',
  ' Tests whether events which are generated after the reposted gesture event\n' +
    ' are received after that. In this case the scroll sequence events should\n' +
    ' be received after the reposted gesture event.',
  ' An event filter that deletes the specified object when sees a mouse-exited\n' +
    ' event.',
  ' Tests that RootWindow drops mouse-moved event that is supposed to be sent to\n' +
    ' a child, but the child is destroyed because of the synthesized mouse-exit\n' +
    ' event generated on the previous mouse_moved_handler_.',
  ' Tests the case where the event dispatcher is deleted during the pre-dispatch\n' +
    ' phase of dispatching and event.',
  ' Used to track if OnWindowDestroying() is invoked and if there is a valid\n' +
    ' RootWindow at such time.',
  ' Verifies GetRootWindow() from ~Window returns a valid root.',
  ' See description above DontResetHeldEvent for details.',
  " Verifies RootWindow doesn't reset |RootWindow::held_repostable_event_| after\n" +
    ' dispatching. This is done by using DontResetHeldEventWindowDelegate, which\n' +
    ' tracks the number of events with ui::EF_SHIFT_DOWN set (all reposted events\n' +
    ' have EF_SHIFT_DOWN). When the first event is seen RepostEvent() is used to\n' +
    ' schedule another reposted event.',
  ' See description above DeleteHostFromHeldMouseEvent for details.',
  ' Verifies if a WindowTreeHost is deleted from dispatching a held mouse event\n' +
    " we don't crash.",
  ' Places two windows side by side.  Starts a pinch in one window, then sets\n' +
    ' capture to the other window.  Ensures that subsequent pinch events are\n' +
    ' sent to the window which gained capture.',
  ' Places two windows side by side. Presses down on one window, and starts a\n' +
    ' scroll. Sets capture on the other window and ensures that the "ending" events\n' +
    " aren't sent to the window which gained capture.",
  ' This class creates and manages a window which is destroyed as soon as\n' +
    ' capture is lost. This is the case for the drag and drop capture window.',
  ' Verifies handling loss of capture by the capture window being hidden.',
  ' Verifies handling loss of capture by the capture window being destroyed.',
  ' This handler triggers a nested run loop when it receives a right click\n' +
    ' event, and runs a single callback in the nested run loop.',
  " Tests that if dispatching a 'held' event triggers a nested run loop, then\n" +
    ' the events that are dispatched from the nested run loop are transformed\n' +
    ' correctly.',
  ' Tests that the window which has capture can get destroyed as a result of\n' +
    ' ui::EventType::kMouseCaptureChanged event dispatched in\n' +
    ' WindowEventDispatcher::UpdateCapture without causing a "use after free".',
  ' Tests that host-cancel-mode event can be dispatched to a dispatcher safely\n' +
    " when the focused window does not live in the dispatcher's tree.",
  ' Dispatches a mouse-move event to |target| when it receives a mouse-move\n' +
    ' event.',
  ' Moves |window| to |root_window| when it receives a mouse-move event.',
  ' Tests that nested event dispatch works correctly if the target of the older\n' +
    ' event being dispatched is moved to a different dispatcher in response to an\n' +
    ' event in the inner loop.',
  ' Tests that gesture events dispatched through the asynchronous flow have\n' +
    ' co-ordinates in the right co-ordinate space.',
  ' Tests that a scroll-generating touch-event is marked as such.',
  ' OnCursorMovedToRootLocation() is sometimes called instead of\n' +
    ' WindowTreeHost::MoveCursorTo() when the cursor did not move but the\n' +
    " cursor's position in root coordinates has changed (e.g. when the displays's\n" +
    ' scale factor changed). Test that hover effects are properly updated.',
  ' A test case for crbug.com/1099985',
  ' Tests that touch event can be filtered by `StopPropagation`, but can still\n' +
    ' be processed by GestureRecogtnizer with `ForceProcessGesture`.'
]
window_observer.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_occlusion_change_builder.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provide updating of occlusion info on aura::Window.',
  ' static'
]
window_occlusion_change_builder_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A delegate that remembers the occlusion info of its window.',
  ' Test that window occlusion info is updated after commit.',
  ' Test updating multiple windows.',
  ' Tests that the last change wins when there are multiple changes on the same\n' +
    ' window.',
  ' Test that occlusion info is not updated if window is destroyed before commit.'
]
window_occlusion_tracker.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' When one of these properties is animated, a window is considered non-occluded\n' +
    ' and cannot occlude other windows.\n' +
    ' TODO(crbug.com/40677173): Mark a window VISIBLE when COLOR animation starts.',
  ' When an animation ends for one of these properties, occlusion states might\n' +
    ' be affected. The end of an animation for a property in\n' +
    ' |kSkipWindowWhenPropertiesAnimated| might affect occlusion states because\n' +
    ' a window suddenly stops being excluded from occlusion computations. The\n' +
    ' end of a visibility animation might affect occlusion states because a\n' +
    ' window is suddenly considered drawn/not drawn.',
  ' Maximum number of times that MaybeComputeOcclusion() should have to recompute\n' +
    ' occlusion states before they become stable.\n' +
    ' TODO(fdoray): This can be changed to 2 once showing/hiding a WebContents\n' +
    " doesn't cause a call to Show()/Hide() on the Window of a\n" +
    ' RenderWidgetHostViewAura. https://crbug.com/827268',
  ' Returns the transform of |window| relative to its root.\n' +
    ' |parent_transform_relative_to_root| is the transform of |window->parent()|\n' +
    ' relative to its root.',
  ' Applies `transform_relative_to_root` to `bounds` and returns the enclosing\n' +
    ' bounds.',
  ' Applies `transform_relative_to_root` to `bounds` and returns the enclosed\n' +
    ' bounds.',
  ' Returns the bounds of |window| relative to its |root|.\n' +
    ' |transform_relative_to_root| is the transform of |window| relative to its\n' +
    ' root. If |clipped_bounds| is not null, the returned bounds are clipped by it.\n' +
    ' If the bounds after transform have fractional coordinates, enclosed bounds in\n' +
    ' integers are used.',
  ' Returns the bounds that |window| should contribute to be used for occluding\n' +
    ' other windows. This is different to the bounds of the window if |window|\n' +
    ' has opaque regions for occlusion set. We need to use different sets of bounds\n' +
    ' for computing the occlusion of a window itself versus what it should\n' +
    ' contribute to occluding other windows because a translucent region should\n' +
    ' not be considered to occlude other windows, but must be covered by something\n' +
    ' opaque for it itself to be occluded.\n' +
    ' If the bounds after transform have fractional coordinates, enclosing bounds\n' +
    ' in integers are used.',
  ' TODO(crbug.com/40262710): Enable for other platforms in a separate CL.'
]
window_occlusion_tracker_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verify that non-overlapping windows have a VISIBLE occlusion state.\n' +
    ' _____  _____\n' +
    ' |    | |    |\n' +
    ' |____| |____|',
  ' Verify that partially overlapping windows have a VISIBLE occlusion state.\n' +
    ' ______\n' +
    ' |__|  |\n' +
    ' |_____|',
  ' Verify that a window whose bounds are covered by a hidden window is not\n' +
    ' occluded. Also, verify that calling Show() on the hidden window causes\n' +
    ' occlusion states to be recomputed.\n' +
    '  __....     ... = hidden window\n' +
    ' |__|  .\n' +
    ' .......',
  ' Verify that a window whose bounds are covered by a semi-transparent window is\n' +
    ' not occluded. Also, verify that that when the opacity of a window changes,\n' +
    ' occlusion states are updated.\n' +
    '  __....     ... = semi-transparent window\n' +
    ' |__|  .\n' +
    ' .......',
  ' Same as previous test, but the occlusion state of the semi-transparent is not\n' +
    ' tracked.',
  ' Verify that one window whose bounds are covered by a set of two opaque\n' +
    ' windows is occluded.\n' +
    '  ______\n' +
    ' |  |  |  <-- these two windows cover another window\n' +
    ' |__|__|',
  ' Verify that a window and its child that are covered by a sibling are\n' +
    ' occluded.',
  ' Verify that a window with one half covered by a child and the other half\n' +
    ' covered by a sibling is non-occluded.',
  ' Verify that a window covered by 2 non-occluded children is non-occluded.',
  ' Verify that when the bounds of a child window covers the bounds of a parent\n' +
    ' window but is itself visible, the parent window is visible.',
  ' Verify that when the stacking order of windows change, occlusion states are\n' +
    ' updated.',
  ' Verify that when the stacking order of two transparent window changes, the\n' +
    ' occlusion states of their children is updated. The goal of this test is to\n' +
    ' ensure that the fact that the windows whose stacking order change are\n' +
    " transparent doesn't prevent occlusion states from being recomputed.",
  ' Verify that when StackChildAtTop() is called on a window whose occlusion\n' +
    ' state is not tracked, the occlusion state of tracked siblings is updated.',
  ' Verify that occlusion states are updated when the bounds of a window change.',
  ' Verify that when the bounds of a window are animated, occlusion states are\n' +
    ' updated at the beginning and at the end of the animation, but not during the\n' +
    ' animation. At the beginning of the animation, the window animated window\n' +
    ' should be considered non-occluded and should not occlude other windows. The\n' +
    ' animated window starts occluded.',
  ' Same as the previous test, but the animated window starts non-occluded.',
  ' Verify that occlusion states are updated when the bounds of a transparent\n' +
    ' window with opaque children change.',
  ' Verify that occlusion states are updated when the bounds of a window whose\n' +
    ' occlusion state is not tracked change.',
  ' Verify that occlusion states are updated when the transform of a window\n' +
    ' changes.',
  ' Verify that when the transform of a window is animated, occlusion states are\n' +
    ' updated at the beginning and at the end of the animation, but not during the\n' +
    ' animation. At the beginning of the animation, the window animated window\n' +
    ' should be considered non-occluded and should not occlude other windows. The\n' +
    ' animated window starts occluded.',
  ' Same as the previous test, but the animated window starts non-occluded.',
  ' Verify that occlusion states are updated when the transform of a transparent\n' +
    ' window with opaque children change.',
  ' Verify that occlusion states are updated when the transform of a window whose\n' +
    ' occlusion state is not tracked changes.',
  ' Verify that deleting an untracked window which covers a tracked window causes\n' +
    ' the tracked window to be non-occluded.',
  ' Verify that removing an untracked window which covers a tracked window causes\n' +
    ' the tracked window to be non-occluded.',
  ' Verify that when a tracked window is removed and re-added to a root,\n' +
    ' occlusion states are still tracked.',
  ' Verify that when the bounds of a child window are updated in response to the\n' +
    ' bounds of a parent window being updated, occlusion states are updated once.',
  ' Verify that the bounds of windows are changed multiple times within the scope\n' +
    ' of a ScopedPause, occlusion states are updated once at the end of the scope.',
  ' Same as the previous test, but with nested ScopedPause.',
  ' Verify that bounds are computed correctly when a hierarchy of windows have\n' +
    ' transforms.',
  ' Verify that clipping is taken into account when computing occlusion.',
  ' Verify that the DCHECK(!WindowIsAnimated(window)) in\n' +
    " WindowOcclusionTracker::OnWindowDestroyed() doesn't fire if a window is\n" +
    ' destroyed with an incomplete animation (~Window should complete the animation\n' +
    ' and the window should be removed from |animated_windows_| before\n' +
    ' OnWindowDestroyed() is called).',
  ' Verify that `WindowOcclusionTracker` can be destroyed safely with a pending\n' +
    ' animation. This mostly applies to secondary `WindowOcclusionTracker`s,\n' +
    ' not the long-lived one in `aura::Env`.',
  ' Verify that an animated window stops being considered as animated when its\n' +
    ' layer is recreated.',
  ' Verify that no crash occurs if a tracked window is modified by an observer\n' +
    ' after it has been added to a new root but before WindowOcclusionTracker has\n' +
    ' been notified.',
  ' Verify that no crash occurs if a LayerAnimationObserver destroys a tracked\n' +
    ' window before WindowOcclusionTracker is notified that the animation ended.',
  ' Verify that no crash occurs if an animation completes on a non-tracked\n' +
    " window's layer after the window has been removed from a root with a tracked\n" +
    ' window and deleted.',
  ' Verify that a window delegate can change the visibility of another window\n' +
    ' when it is notified that its occlusion changed.',
  ' Verify that a window can delete a window that is on top of it when it is\n' +
    ' notified that its occlusion changed (a crash would occur if\n' +
    ' WindowOcclusionTracker accessed that window after it was deleted).',
  ' Verify that if a window changes its visibility every time it is notified that\n' +
    ' its occlusion state changed, a DCHECK occurs.',
  ' Verify that the occlusion states are correctly updated when a branch of the\n' +
    ' tree is hidden.',
  " Verify that a window covered by a shaped window isn't considered occluded.",
  ' Verify that a window covered by a window whose parent has an alpha shape\n' +
    " isn't considered occluded.",
  " Verify that hiding a window that has a hidden parent doesn't cause occlusion\n" +
    ' to be recomputed.',
  ' Verify that hiding a window changes the occlusion region to show that the\n' +
    ' window is fully occluded.',
  ' Test partial occlusion, test partial occlusion changing hidden, alpha shape\n' +
    ' occlusion from multiple windows',
  ' Verify that a window can occlude another one partially.',
  ' Verify that windows with alpha shape do not affect occlusion regions.',
  ' Verify that a window can be occluded by multiple other windows.',
  ' Verify that the excluded window is indeed ignored by occlusion tracking.',
  ' Test that calling OnOcclusionStateChanged on a root window causes children\n' +
    ' of the root window to have their delegate notified that it is occluded or\n' +
    ' visible, depending on whether the root window is occluded or not.',
  ' Simulates a scenario in which a browser window is forced visible (e.g. while\n' +
    ' projecting) and its parent container (e.g. a virtual desks container) was\n' +
    ' hidden. Verifies that the browser window and its descendants remain visible\n' +
    ' from an occlusion stand point.',
  ' Run tests with LAYER_TEXTURE_LAYER type or LAYER_SOLID_COLOR type.'
]
window_targeter.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
window_targeter_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Always returns the same window.',
  ' Test that ScopedWindowTargeter does not crash if the window for which it\n' +
    ' replaces the targeter gets destroyed before it does.',
  ' Verifies that an EventTargeter installed on an EventTarget can dictate\n' +
    ' whether the target itself can process an event.'
]
window_tracker.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_tree_host.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowTreeHost, public:',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowTreeHost, protected:',
  ' Chrome OS is handled in WindowTreeHostManager::OnDisplayMetricsChanged.\n' +
    ' Chrome OS requires additional handling for the bounds that we do not need to\n' +
    ' do for other OSes.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowTreeHost, private:',
  ' static'
]
window_tree_host_platform.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
window_tree_host_platform_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Trivial WindowTreeHostPlatform implementation that installs a StubWindow as\n' +
    ' the PlatformWindow.',
  ' WindowTreeHostObserver that tracks calls to\n' +
    ' OnHostWill/DidProcessBoundsChange. Additionally, this triggers a bounds\n' +
    ' change from within OnHostResized(). Such a scenario happens in production\n' +
    ' code.',
  ' Regression test for https://crbug.com/958449',
  ' Deletes WindowTreeHostPlatform from OnHostMovedInPixels().',
  ' Verifies WindowTreeHostPlatform can be safely deleted when calling\n' +
    ' OnHostMovedInPixels().\n' +
    ' Regression test for https://crbug.com/1185482'
]
window_tree_host_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A convenient wrapper that makes it easy to invoke this method inside an\n' +
    ' EXPECT_EQ statement.',
  ' A convenient wrapper that makes it easy to invoke this method inside an\n' +
    ' EXPECT_EQ statement.',
  ' A convenient wrapper that makes it easy to invoke this method inside an\n' +
    ' EXPECT_EQ statement.',
  ' A convenient wrapper that makes it easy to invoke this method inside an\n' +
    ' EXPECT_EQ statement.',
  ' Tests if scale factor changes take effect. Previously a scale factor change\n' +
    " wouldn't take effect without a bounds change. For context see\n" +
    ' https://crbug.com/1087626'
]
window_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The helper class to wait for the animation completion and run callbacks.',
  ' Used for verifying destruction methods are invoked.',
  ' Used to verify that when OnWindowDestroying is invoked the parent is also\n' +
    ' is in the process of being destroyed.',
  ' Used to verify that a Window is removed from its parent when\n' +
    ' OnWindowDestroyed is called.',
  ' Used in verifying mouse capture.',
  ' Keeps track of the location of the gesture.',
  ' The delegate deletes itself when the window is being destroyed.',
  ' Make sure that Window::Contains correctly handles children, grandchildren,\n' +
    ' and not containing NULL or parents.',
  ' Tests that the root window gets a valid LocalSurfaceId.',
  ' Test Window::ConvertPointToWindow() with transform to root_window.',
  ' Tests Window::ConvertPointToWindow() with transform to non-root windows.',
  ' Test Window::ConvertPointToWindow() with complex transforms to both root and\n' +
    ' non-root windows.\n' +
    ' Test Window::ConvertPointToWindow() with transform to root_window.',
  ' Tests that we do not crash when a Window is destroyed by going out of\n' +
    ' scope (as opposed to being explicitly deleted by its WindowDelegate).',
  ' Various destruction assertions.',
  ' Tests that a window is orphaned before OnWindowDestroyed is called.',
  ' Make sure StackChildAtTop moves both the window and layer to the front.',
  ' Make sure StackChildBelow works.',
  ' Various assertions for StackChildAbove.',
  ' Various capture assertions.',
  ' Assertions around SetCapture() and touch/gestures.',
  ' Changes capture while capture is already ongoing.',
  ' Verifies capture is reset when a window is destroyed.',
  ' TODO(tdanderson): Remove this class and use\n' +
    '                   test::EventCountDelegate in its place.',
  ' Verifies that the WindowDelegate receives MouseExit and MouseEnter events for\n' +
    ' mouse transitions from window to window.',
  ' Verifies that the WindowDelegate receives MouseExit from\n' +
    ' EventType::kMouseExited.',
  ' Verifies that the WindowDelegate receives MouseExit and MouseEnter events for\n' +
    ' mouse transitions from window to window, even if the entered window sets\n' +
    ' and releases capture.',
  ' Verifies that the correct enter / exits are sent if windows appear and are\n' +
    ' deleted under the current mouse position.',
  ' Verifies that enter / exits are sent if windows appear and are hidden\n' +
    ' under the current mouse position..',
  ' Creates a window with a delegate (w111) that can handle events at a lower\n' +
    ' z-index than a window without a delegate (w12). w12 is sized to fill the\n' +
    ' entire bounds of the container. This test verifies that\n' +
    ' GetEventHandlerForPoint() skips w12 even though its bounds contain the event,\n' +
    ' because it has no children that can handle the event and it has no delegate\n' +
    ' allowing it to handle the event itself.',
  ' Verifies show/hide propagate correctly to children and the layer.',
  ' Tests transformation on the root window.',
  ' Various assertions for WindowObserver.',
  ' Test if OnWindowVisibilityChanged is invoked with expected\n parameters.',
  ' Test if OnWindowDestroyed is invoked as expected.',
  ' Verify that WindowObserver::OnWindowBoundsChanged() is notified when the\n' +
    " bounds of a Window's Layer change without an animation.",
  ' Verify that WindowObserver::OnWindowBoundsChanged() is notified at every step\n' +
    ' of a bounds animation.',
  ' Verify that WindowObserver::OnWindowOpacitySet() is notified when the\n' +
    " opacity of a Window's Layer changes without an animation.",
  ' Verify that WindowObserver::OnWindowOpacitySet() is notified at the\n' +
    ' beginning and at the end of a threaded opacity animation.',
  ' Verify that WindowObserver::OnWindowAlphaShapeSet() is notified when an alpha\n' +
    ' shape is set for a window.',
  ' Verify that WindowObserver::OnWindow(TargetTransformChanging|Transformed)()\n' +
    ' are notified when SetTransform() is called and there is no animation.',
  ' Verify that WindowObserver::OnWindowTransformed)() is notified at the\n' +
    ' beginning and at the end of a threaded transform animation. Verify that\n' +
    ' WindowObserver::OnWindowTargetTransformChanging() is notified when the\n' +
    ' threaded animation is started by SetTransform().',
  ' Make sure that properties which should persist from the old layer to the new\n' +
    ' layer actually do.',
  ' Verify that RecreateLayer() stacks the old layer above the newly creatd\n' +
    ' layer.',
  ' Ensure that acquiring a layer then recreating a layer does not crash\n' +
    ' and that RecreateLayer returns null.',
  ' Tests the mouse events seen by WindowDelegates in a Window hierarchy when\n' +
    ' changing the properties of a leaf Window.',
  ' Tests the mouse events seen by WindowDelegates in a Window hierarchy when\n' +
    ' deleting a non-leaf Window.',
  ' Used By DeleteWindowFromOnWindowDestroyed. Destroys a Window from\n' +
    ' OnWindowDestroyed().',
  ' Creates a window with two child windows. When the first child window is\n' +
    ' destroyed (WindowDelegate::OnWindowDestroyed) it deletes the second child.\n' +
    ' This synthesizes BrowserView and the status bubble. Both are children of the\n' +
    ' same parent and destroying BrowserView triggers it destroying the status\n' +
    ' bubble.',
  ' WindowObserver implementation that deletes a window in\n' +
    ' OnWindowVisibilityChanged().',
  ' Used by DelegateNotifiedAsBoundsChange to verify OnBoundsChanged() is\n' +
    ' invoked.',
  ' Verifies the delegate is notified when the actual bounds of the layer\n' +
    ' change.',
  ' Verifies the delegate is notified when the actual bounds of the layer\n' +
    " change even when the window is not the layer's delegate",
  ' Used by AddChildNotifications to track notification counts.',
  ' Assertions around when root window notifications are sent.',
  ' Tests that a delegate that destroys itself when the window is destroyed does\n' +
    ' not break.',
  ' Tests hierarchy change notifications.',
  ' This delegate moves its parent window to the specified one when the gesture\n' +
    ' ends.',
  ' Test for use-after-free in crbug.com/1297643.',
  " Verifies that the function to get the window's screen bounds works as\n" +
    ' expected during layer animation.'
]
window_position_in_root_monitor.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_position_in_root_monitor_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
accelerator.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' In macOS 10.13, the glyphs used for page up, page down, home, and end were\n' +
    ' changed from the arrows below to new, skinny arrows. The tricky bit is that\n' +
    " the underlying Unicode characters weren't changed, just the font used. Maybe\n" +
    ' the keyboard font, CTFontCreateUIFontForLanguage, with key\n' +
    ' kCTFontUIFontMenuItemCmdKey, can be used everywhere this symbol is used. (If\n' +
    ' so, then the RTL stuff will need to be removed.)'
]
accelerator_manager.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
accelerator_manager_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Possible flags used for accelerators.',
  ' Returns a set of flags from id, where id is a bitmask into\n' +
    ' kAcceleratorModifiers used to determine which flags are set.'
]
accelerator_map_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Chrome OS specific tests.\n Only Chrome OS supports positional shortcuts.',
  ' Even with positional lookup enabled, if both the stored and lookup\n' +
    ' accelerator have no DomCode then the behavior is as if there was no\n' +
    ' positional lookup.',
  ' Both the VKEY and DomCode match, so this is always a match. This scenario\n' +
    ' happens when positional shortcuts are enabled, and the layout has a VKEY\n' +
    ' mapping consistent with the US layout.',
  ' The DomCode matches, but the VKEY does not - this is a positional match.\n' +
    ' This scenario happens on eg. German and Spanish keyboards.',
  " With positional mapping enabled this first press is like the ']' key\n" +
    ' on a German keyboard, and it matches. When positional mapping is disabled\n' +
    ' it no longer matches because the VKEYs are different.\n' +
    ' Disabling positional lookup also used for special layouts like Dvorak which\n' +
    ' are designed to intentionally reposition certain punctuation keys. These\n' +
    ' layouts already work with US-like VKEY mapping, albeit to keys in different\n' +
    ' positions.',
  ' The VKEY matches, and both the registered and pressed accelerator supply a\n' +
    ' positional DomCode - this is not a match. This prevents ghost or conflicting\n' +
    ' shortcuts on the key that has the matching VKEY. This is a scenario on a\n' +
    ' Spanish keyboard.',
  " The VKEY matches, and the registered accelerator has no DomCode (ie. it's\n" +
    ' non-positional) - this is a match. This scenario is to allow non-positional\n' +
    ' shortcuts to continue to work regardless of the DomCode. This is a scenario\n' +
    ' for the Z key on a German or other QWERTZ layout.',
  ' When an accelerator is inserted to the map, if it contains a DomCode it\n' +
    ' should be stripped out.'
]
accelerator_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Crash on Android builders. https://crbug.com/980267',
  ' Checks that a string representation exists for all modifier masks that make\n' +
    ' sense on the Mac.'
]
right_alt_event_property.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tag used to mark events as being for right alt.'
]
global_media_keys_listener_win.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
global_media_keys_listener_win_interactive_test.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
media_keys_listener.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
media_keys_listener_stub.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(ganenkokb): Need implementation for non-mac platforms.'
]
media_keys_listener_win.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
media_keys_util.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_label_accelerator_util.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_label_accelerator_util_linux.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Common implementation of ConvertAcceleratorsFromWindowsStyle() and\n' +
    ' RemoveWindowsStyleAccelerators().\n' +
    ' Replaces all ampersands (as used in our grd files to indicate mnemonics)\n' +
    ' to |target|, except ampersands appearing in pairs which are replaced by\n' +
    ' a single ampersand. Any underscores get replaced with two underscores as\n' +
    ' is needed by GTK.'
]
menu_label_accelerator_util_linux_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
menu_label_accelerator_util_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
accelerator_mojom_traits_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_accelerator_target.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
base_window.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
class_property.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' common class properties.'
]
class_property_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(kylixrd, pbos): Once all the call-sites are fixed to only use the\n' +
    ' unique_ptr version for owned properties, enable the following test to ensure\n' +
    ' that passing raw pointers for owned properties will, in fact, DCHECK.'
]
clipboard.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
clipboard_android.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO:(andrewhayden) Support additional formats in Android: URI, HTML,\n' +
    " HTML+text now that Android's clipboard system supports them, then nuke the\n" +
    ' legacy implementation note below.',
  ' Legacy implementation note:\n' +
    ' The Android clipboard, and hence `ClipboardAndroid` as well, used to only\n' +
    ' support text. Since then, bitmap support has been added, but not support\n' +
    ' for any other formats.\n' +
    ' Therefore, Clipboard data is stored:\n' +
    ' - on the Android system, for text and bitmaps.\n' +
    ' - in a process-wide static variable protected by a lock, for other formats.\n' +
    ` These "other formats" only work within the same process, and can't be copied\n` +
    ' between Android applications.',
  ' Fetching image data from Java as PNG bytes.',
  ' Add a format:jstr pair to map, if jstr is null or is empty, then remove that\n' +
    ' entry.',
  ' Clipboard factory method.\n static',
  ' Static method for testing.',
  ' ClipboardAndroid implementation.',
  ' DataTransferEndpoint is not used on this platform.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |src_url| isn't really used. It is only implemented in Windows.\n" +
    " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " 'data_dst' and 'title' are not used. It's only passed to be consistent with\n" +
    ' other platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  ' Main entry point used to write several values in the clipboard.\n' +
    " |data_src| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  ' According to other platforms implementations, this really writes the\n' +
    ' URL spec.',
  ' Write an extra flavor that signifies WebKit was the last to modify the\n' +
    ' pasteboard. This flavor has no data.',
  ' Encoding SkBitmap to PNG data. Then, |g_map| can commit the PNG data to\n' +
    ' Android system clipboard without encode/decode.'
]
clipboard_android_test_support.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().'
]
clipboard_constants.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used for file:// URLs.',
  ' Used for site URL bookmarks.',
  ' Used for image drag & drop from LaCrOS.',
  ' Used for window dragging on some platforms.',
  ' Used to sync clipboard source metadata between Ash and LaCrOS.'
]
clipboard_data.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
clipboard_data_endpoint.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
clipboard_data_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Tests that two ClipboardData objects won't be equal if they don't have the\n" +
    ' same bitmap.',
  " Tests that two ClipboardData objects won't be equal if they don't have the\n" +
    ' same data source.'
]
clipboard_factory_ozone.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
clipboard_format_type_android.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ClipboardFormatType implementation.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' Various predefined ClipboardFormatTypes.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
clipboard_format_type_aura.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40716597): Investigate creating a new\n' +
    " clipboard_format_type_x11 as a wrapper around an X11 ::Atom. This wasn't\n" +
    ' possible in the past, because unit tests spawned a new X11 server for each\n' +
    " test, meaning Atom numeric values didn't persist across tests.",
  ' static',
  ' static',
  ' static',
  ' static',
  ' Various predefined ClipboardFormatTypes.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
clipboard_format_type_win.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ClipboardFormatType implementation.\n' +
    ' Windows formats are backed by "Clipboard Formats", documented here:\n' +
    ' https://docs.microsoft.com/en-us/windows/win32/dataxchg/clipboard-formats',
  ' In C++ 20, we can use designated initializers.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' Predefined ClipboardFormatTypes.',
  ' static',
  ' The following formats can be referenced by clipboard_util::GetPlainText.\n' +
    ' Clipboard formats are initialized in a thread-safe manner, using static\n' +
    ' initialization. COM requires this thread-safe initialization.\n' +
    ' TODO(dcheng): We probably need to make static initialization of "known"\n' +
    ' ClipboardFormatTypes thread-safe on all platforms.',
  ' static',
  ' static',
  ' static',
  ' MS HTML Format',
  ' static',
  ' static',
  ' MS RTF Format',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' Firefox text/html\n static',
  ' static',
  ' Nothing prevents the drag source app from using the CFSTR_FILEDESCRIPTORA\n' +
    " ANSI format (e.g., it could be that it doesn't support Unicode). So need to\n" +
    ' register both the ANSI and Unicode file group descriptors.\n' +
    ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
clipboard_metrics.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
clipboard_monitor.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
clipboard_non_backed.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the registry which tracks all instances of ClipboardNonBacked in\n' +
    ' existence. This allows us to determine if any arbitrary Clipboard pointer in\n' +
    ' fact points to a ClipboardNonBacked instance. Only if a pointer exists in\n' +
    ' this registry is it safe to cast to ClipboardNonBacked*.',
  ' The ClipboardNonBacked instance registry can be accessed by multiple threads.\n' +
    ' Any inspection/modification of the instance registry must only be performed\n' +
    ' while this lock is held.',
  ' Registers the specified |clipboard| as an instance of ClipboardNonBacked.\n' +
    ' Registration should occur during |clipboard| construction and registration\n' +
    ' should be maintained until |clipboard| is destroyed. This allows us to check\n' +
    ' if any arbitrary Clipboard* is safe to cast.',
  ' Unregisters the specified |clipboard| as a instance of ClipboardNonBacked.\n' +
    ' This should only be done when destroying |clipboard|.',
  ' Checks if |clipboard| is registered as an instance of ClipboardNonBacked.\n' +
    ' Only if this method returns true is it safe to cast |clipboard| to\n' +
    ' ClipboardNonBacked*.',
  ' Simple, internal implementation of a clipboard, handling things like format\n' +
    ' conversion, sequence numbers, etc.',
  ' Helper class to build a ClipboardData object and write it to clipboard.',
  ' static',
  ' ClipboardNonBacked implementation.'
]
clipboard_non_backed_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class for tests of `ClipboardNonBacked`.',
  ' Base class for tests of `ClipboardNonBacked` which use system time.',
  ' Verifies that GetClipboardData() returns the same instance of ClipboardData\n' +
    ' as was written via WriteClipboardData().',
  ' Verifies that WriteClipboardData() writes a ClipboardData instance to the\n' +
    ' clipboard and returns the previous instance.',
  ' Verifies that directly writing to ClipboardInternal does not result in\n' +
    ' histograms being logged. This is used by ClipboardHistoryController to\n' +
    ' manipulate the clipboard in order to facilitate pasting from clipboard\n' +
    ' history.',
  " Tests that text data uses 'text/plain' mime type.",
  ' Tests that site bookmark URLs are accessed as text, and\n' +
    " IsFormatAvailable('text/uri-list') is only true for files.",
  " Filenames data uses mime type 'text/uri-list'.",
  ' Tests that bitmaps written to the clipboard are read out encoded as a PNG.',
  ' Tests that consecutive calls to read an image from the clipboard only results\n' +
    ' in the image being encoded once.',
  ' Tests that consecutive calls to read an image from the clipboard only results\n' +
    ' in the image being encoded once, but if another image is placed on the\n' +
    ' clipboard, this image is appropriately encoded.',
  ' Tests that different clipboard buffers have independent data.',
  ' Base class for tests of `ClipboardNonBacked` which use mock time.',
  ' Verifies that `ClipboardNonBacked` records the time interval between commit\n' +
    ' and read of the same `ClipboardData`.'
]
clipboard_observer.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
clipboard_ozone.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' The amount of time to wait for a request to complete before aborting it.',
  ' Checks if DLP rules allow the clipboard read.',
  ' Depending on the backend, the platform clipboard may or may not be\n' +
    ' available.  Should it be absent, we provide a dummy one.  It always calls\n' +
    ' back immediately with empty data. It starts without ownership of any buffers\n' +
    ' but will take and keep ownership after a call to OfferClipboardData(). By\n' +
    ' taking ownership, we allow ClipboardOzone to return existing data in\n' +
    ' ReadClipboardDataAndWait().',
  ' A helper class that uses a request pattern to asynchronously communicate\n' +
    ' with the ozone::PlatformClipboard and fetch clipboard data with the\n' +
    ' specified MIME types.',
  ' ClipboardOzone implementation.'
]
clipboard_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
clipboard_util.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
clipboard_util_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Performs a case-insensitive search for a file path in a vector of existing\n' +
    ' filepaths. Case-insensivity is needed for file systems such as Windows where\n' +
    ' A.txt and a.txt are considered the same file name.',
  ' Returns a unique display name for a virtual file, as it is possible that the\n' +
    ' filenames found in the file group descriptor are not unique (e.g. multiple\n' +
    ' emails with the same subject line are dragged out of Outlook.exe).\n' +
    ' |uniquifier| is incremented on encountering a non-unique file name.',
  ' Creates a uniquely-named temporary file based on the suggested filename, or\n' +
    ' an empty path on error. The file will be empty and all handles closed after\n' +
    ' this function returns.',
  ' This method performs file I/O and thus is executed on a worker thread. An\n' +
    ' empty FilePath for the temp file is returned on failure.',
  " Caller's responsibility to call GlobalFree on returned HGLOBAL when done with\n" +
    ' the data. This method must be performed on main thread as it is using the\n' +
    ' IDataObject marshalled there.',
  ' Retrieves display names of virtual files, making sure they are unique.\n' +
    ' Use template parameter of FILEGROUPDESCRIPTORW for retrieving Unicode data\n' +
    ' and FILEGROUPDESCRIPTORA for ascii.',
  ' HtmlToCFHtml and CFHtmlToHtml are based on similar methods in\n' +
    ' WebCore/platform/win/ClipboardUtilitiesWin.cpp.',
  ' * Copyright (C) 2007, 2008 Apple Inc. All rights reserved.\n' +
    ' *\n' +
    ' * Redistribution and use in source and binary forms, with or without\n' +
    ' * modification, are permitted provided that the following conditions\n' +
    ' * are met:\n' +
    ' * 1. Redistributions of source code must retain the above copyright\n' +
    ' *    notice, this list of conditions and the following disclaimer.\n' +
    ' * 2. Redistributions in binary form must reproduce the above copyright\n' +
    ' *    notice, this list of conditions and the following disclaimer in the\n' +
    ' *    documentation and/or other materials provided with the distribution.\n' +
    ' *\n' +
    " * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n" +
    ' * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n' +
    ' * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n' +
    ' * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n' +
    ' * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n' +
    ' * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n' +
    ' * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n' +
    ' * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n' +
    ' * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n' +
    ' * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n' +
    ' * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.',
  ' Helper method for converting from text/html to MS CF_HTML.\n' +
    ' Documentation for the CF_HTML format is available at\n' +
    ' http://msdn.microsoft.com/en-us/library/aa767917(VS.85).aspx',
  ' Helper method for converting from MS CF_HTML to text/html.'
]
clipboard_util_win_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
clipboard_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Many of these functions are based on those found in\n' +
    ' webkit/port/platform/PasteboardWin.cpp',
  ' A scoper to impersonate the anonymous token and revert when leaving scope',
  ' A scoper to manage acquiring and automatically releasing the clipboard.',
  ' Clipboard factory method.\n static',
  ' ClipboardWin implementation.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.',
  " |data_dst| is not used. It's only passed to be consistent with other\n" +
    ' platforms.'
]
clipboard_win_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
custom_data_helper.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' TODO(dcheng): For efficiency reasons, consider passing custom data around\n' +
    ' as a vector instead. It allows us to append a\n' +
    ' std::pair<std::u16string, std::u16string> and swap the deserialized values.'
]
custom_data_helper_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
file_info.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if path starts with a letter, followed by a colon, followed\n' +
    ' by a path separator.',
  ' We implement our own URLToPath() and PathToURL() rather than use\n' +
    ' net::FileUrlToFilePath() or net::FilePathToFileURL() since //net code works\n' +
    " differently on each platform and is overly strict. In particular, it doesn't\n" +
    ' allow Windows network paths such as //ChromeOS/MyFiles on OS_CHROMEOS.\n' +
    ' This code is a little different in nature to most other path handling in that\n' +
    ' we expect this code to roundtrip both posix and windows paths (local or\n' +
    ' network) when running on either platform.\n' +
    ' Convert file:// |url| to a FilePath. Returns empty if |url| is invalid.\n' +
    ' This function expects an absolute path since it is not possible to encode\n' +
    " a relative path as a file:// URL. The third slash in 'file:///' is not\n" +
    ' mandatory, but without it, the path is considered a network path\n' +
    ' (file://host/path). If a drive letter followed by colon and slash is detected\n' +
    " (file:///C:/path), the path is assumed to be windows path 'C:/path', but\n" +
    " without the slash (file:///C:path), the path is assumed to posix '/C:path'\n" +
    " rather than windows relative path 'C:path'."
]
file_info_fuzzer.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Entry point for LibFuzzer.'
]
file_info_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests parsing from text/uri-list to list of FileInfo.'
]
scoped_clipboard_writer.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Documentation on the format of the parameters for each clipboard target can\n' +
    ' be found in clipboard.h.'
]
clipboard_test_util.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_clipboard.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40704509): |data_dst| should be supported.',
  ' TODO(crbug.com/40704509): |data_dst| should be supported.'
]
test_clipboard_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
url_file_parser.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
url_file_parser_fuzzer.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Entry point for LibFuzzer.'
]
url_file_parser_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is the contents from\n' +
    ' chrome/test/data/edge_profile/Favorites/Google.url',
  ' The following tests are parsing malformed contents. They test that the code\n' +
    ' behaves reasonably and does not crash.'
]
nswindow_test_util.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
cursor.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
cursor_factory.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a cursor name compatible with either X11 or the FreeDesktop.org\n' +
    ' cursor spec ([1] and [2]), followed by fallbacks that can work as\n' +
    ' replacements in some environments where the original may not be available\n' +
    ' (e.g. desktop environments other than GNOME and KDE).\n' +
    ' TODO(hferreiro): each list starts with the FreeDesktop.org icon name but\n' +
    ' "ns-resize", "ew-resize", "nesw-resize", "nwse-resize", "grab", "grabbing",\n' +
    ' which were not available in older versions of Breeze, the default KDE theme.\n' +
    ' [1]\n' +
    ' https://www.x.org/releases/current/doc/libX11/libX11/libX11.html#x_font_cursors\n' +
    ' [2] https://www.freedesktop.org/wiki/Specifications/cursor-spec/'
]
cursor_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cursor_mojom_traits.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static'
]
cursor_mojom_traits_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test that basic cursor structs are passed correctly across the wire.',
  ' Test that cursor bitmaps and metadata are passed correctly across the wire.',
  ' Test that empty bitmaps are passed correctly over the wire. This happens when\n' +
    ' renderers relay a custom cursor before the bitmap resource is loaded.',
  ' Test that various device scale factors are passed correctly over the wire.'
]
data_transfer_endpoint.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
data_transfer_endpoint_serializer.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' JSON Keys',
  ' Endpoint Type Strings'
]
data_transfer_endpoint_serializer_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
data_transfer_endpoint_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that cloning DataTransferEndpoint object will clone all of its data\n' +
    ' members.',
  " Tests that two DataTransferEndpoint objects won't be equal unless they have\n" +
    ' the same values for all of their data members.',
  ' Tests DataTransferEndpoint::IsSameOriginWith.'
]
data_transfer_policy_controller.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
mock_data_transfer_policy_controller.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
device_form_factor_android.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().',
  ' TODO(crbug.com/40941316): Need to land a long-term solution to return\n' +
    ' foldable, either by exposing ui_mode or returning foldable here after\n' +
    ' auditing usages. Currently we are temporarily returning the foldable form\n' +
    ' factor in VariationsServiceClient::GetCurrentFormFactor() and\n' +
    ' FormFactorMetricsProvider::GetFormFactor() for UMA.'
]
device_form_factor_desktop.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
download_file_info.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drag_drop_types.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ensure that the DragDropTypes::DragOperation enum values stay in sync with\n' +
    ' mojom::DragOperation.'
]
drag_drop_types_win.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drag_source_win.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drop_target_event.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DropTargetEvent'
]
drop_target_win.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' DropTargetWin, IDropTarget implementation:',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' DropTargetWin, IUnknown implementation:'
]
os_exchange_data.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
os_exchange_data_provider_factory.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
os_exchange_data_provider_factory_ozone.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
os_exchange_data_provider_non_backed.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
os_exchange_data_provider_non_backed_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that cloning OsExchangeDataProviderNonBacked object will clone all of\n' +
    ' its data members.'
]
os_exchange_data_provider_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Creates a new STGMEDIUM object to hold the specified text. The caller\n' +
    ' owns the resulting object. The "Bytes" version does not NULL terminate, the\n' +
    ' string version does.',
  ' Creates a File Descriptor for the creation of a file to the given URL and\n' +
    ' returns a handle to it.',
  ' Creates the contents of an Internet Shortcut file for the given URL.',
  ' Creates a valid file name given a suggested title and URL.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' FormatEtcEnumerator\n' +
    ' This object implements an enumeration interface. The existence of an\n' +
    ' implementation of this interface is exposed to clients through\n' +
    " OSExchangeData's EnumFormatEtc method. Our implementation is nobody's\n" +
    ' business but our own, so it lives in this file.\n' +
    ' This Windows API is truly a gem. It wants to be an enumerator but assumes\n' +
    ' some sort of sequential data (why not just use an array?). See comments\n' +
    ' throughout.',
  ' Safely makes a copy of all of the relevant bits of a FORMATETC object.',
  ' static',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' OSExchangeDataProviderWin, public:',
  ' static',
  ' static',
  ' static',
  ' static',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' DataObjectImpl, IDataObject implementation:',
  ' The following function, DuplicateMedium, is derived from WCDataObject.cpp\n' +
    ' in the WebKit source code. This is the license information for the file:',
  ' * Copyright (C) 2007 Apple Inc.  All rights reserved.\n' +
    ' *\n' +
    ' * Redistribution and use in source and binary forms, with or without\n' +
    ' * modification, are permitted provided that the following conditions\n' +
    ' * are met:\n' +
    ' * 1. Redistributions of source code must retain the above copyright\n' +
    ' *    notice, this list of conditions and the following disclaimer.\n' +
    ' * 2. Redistributions in binary form must reproduce the above copyright\n' +
    ' *    notice, this list of conditions and the following disclaimer in the\n' +
    ' *    documentation and/or other materials provided with the distribution.\n' +
    ' *\n' +
    " * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n" +
    ' * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n' +
    ' * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n' +
    ' * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n' +
    ' * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n' +
    ' * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n' +
    ' * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n' +
    ' * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n' +
    ' * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n' +
    ' * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n' +
    ' * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.',
  ' Takes ownership of and nullifies `medium`.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' DataObjectImpl, IDataObjectAsyncCapability implementation:',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' DataObjectImpl, IUnknown implementation:',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' anonymous namespace functions',
  ' Used to mark file content as synthesized by Chrome itself during a non-file\n' +
    ' drag for interoperating with the native OS. Synthesized file contents will be\n' +
    ' treated as non-existent for the purposes of GetFileContent() to avoid\n' +
    ' confusing web pages that might not expect the synthesized file. See\n' +
    ' https://crbug.com/1274395 for background.'
]
os_exchange_data_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test that setting the URL does not overwrite a previously set custom string\n' +
    ' and that the synthesized URL shortcut file is ignored by GetFileContents().'
]
os_exchange_data_win_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test getting using the IDataObject COM API',
  ' Test setting using the IDataObject COM API',
  ' Verifies SetData invoked twice with the same data clobbers existing data.',
  " Verifies that DataObjectImpl::OnDownloadCompleted() doesn't delete\n" +
    ' the DownloadFileProvider instance.',
  ' Verifies the data set by DataObjectImpl::SetData with |fRelease| is released\n' +
    ' correctly after the DataObjectImpl instance is destroyed.',
  ' Verifies the data duplicated by DataObjectImpl::SetData without |fRelease|\n' +
    ' is released correctly after the DataObjectImpl instance destroyed.'
]
emoji_panel_helper.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
emoji_panel_helper_chromeos.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
emoji_panel_helper_lacros.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
emoji_panel_helper_win.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fullscreen_win.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_gsignal.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_gsignal_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Used by G_DECLARE_FINAL_TYPE above.',
  ' Used by G_DEFINE_TYPE above.',
  ' Used by G_DEFINE_TYPE above.'
]
hit_test.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
idle.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
idle_android.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().'
]
idle_chromeos.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
idle_fuchsia.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
idle_internal.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
idle_lacros.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
idle_linux.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Various names under which the service may be found in different Linux desktop\n' +
    ' environments.',
  ' This class tries to find the name under which the ScreenSaver D-Bus service\n' +
    ' is registered, and if found the one, connects to the service and subscribes\n' +
    ' to its notifications.'
]
idle_polling_service.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Default provider implementation. Everything is delegated to\n' +
    ' ui::CalculateIdleTime and ui::CheckIdleStateIsLocked.',
  ' static'
]
idle_win.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_set_idle_state.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
component_extension_ime_manager.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Gets the input method category according to the given input method id.\n' +
    ' This is used for sorting a list of input methods.'
]
component_extension_ime_manager_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
extension_ime_util.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
extension_ime_util_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fake_ime_keyboard.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fake_input_method_delegate.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ime_bridge.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static.'
]
ime_keyboard.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ime_keyboard_impl.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ime_keyboard_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests CheckLayoutName() function.'
]
ime_keymap.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_method_ash.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns whether `url` refers to Terminal/crosh.',
  ' InputMethodAsh implementation -----------------------------------------'
]
input_method_ash_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests public APIs in `ui::InputMethod` first.',
  ' Confirm that IBusClient::Focus is called on "connected" if input_type_ is\n' +
    ' TEXT.',
  ' Confirm that InputMethodEngine::Focus is called on "connected" even if\n' +
    ' input_type_ is PASSWORD.',
  ' Confirm that IBusClient::Blur is called as expected.',
  ' Confirm that IBusClient::Blur is called as expected.',
  ' Focus/Blur scenario test',
  ' Test if the new |caret_bounds_| is correctly sent to ibus-daemon.'
]
input_method_descriptor.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_method_descriptor_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_method_manager.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
input_method_ukm.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_method_util.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' For SetHardwareKeyboardLayoutForTesting.',
  ' A mapping from an input method id to a resource id for a\n' +
    ' medium length language indicator.\n' +
    ' For those languages that want to display a slightly longer text in the\n' +
    ' "Your input method has changed to..." bubble than in the status tray.\n' +
    ' If an entry is not found in this table the short name is used.',
  ' Due to asynchronous initialization of component extension manager,\n' +
    ' GetFirstLoginInputMethodIds may miss component extension IMEs. To enable\n' +
    ' component extension IME as the first loging input method, we have to prepare\n' +
    ' component extension IME IDs.\n' +
    ' Note: empty layout means the rule applies for all layouts.',
  ' The engine ID map for migration. This migration is for input method IDs from\n' +
    " VPD so it's NOT a temporary migration.",
  ' Inserts {key, value} into the multimap if it does not exist.',
  ' static'
]
input_method_util_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' US keyboard + English US UI = US keyboard only.',
  ' US keyboard + Chinese UI = US keyboard + Pinyin IME.',
  ' US keyboard + Russian UI = US keyboard + Russsian keyboard',
  ' US keyboard + Traditional Chinese = US keyboard + chewing.',
  ' US keyboard + Thai = US keyboard + kesmanee.',
  ' US keyboard + Vietnamese = US keyboard + TCVN6064.',
  ' US keyboard + Japanese = US keyboard + mozc(us).',
  ' JP keyboard + Japanese = JP keyboard + mozc(jp).',
  ' US keyboard + Hebrew = US keyboard + Hebrew keyboard.',
  ' Test the input method ID migration.',
  ' Test getting hardware input method IDs.'
]
mock_component_extension_ime_manager.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_component_extension_ime_manager_delegate.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_ime_candidate_window_handler.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_ime_engine_handler.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_ime_input_context_handler.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_input_method_manager.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_input_method_manager_impl.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
typing_session_manager.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO: We cannot assume that the time will always increase, it can decrease if\n' +
    ' system clock is explicitly set. Invalidate sessions where system clock\n' +
    ' decreases.',
  ' Note: only count characters as committed if the VK is enabled.'
]
typing_session_manager_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
candidate_window.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The default entry number of a page in CandidateWindow.',
  ' When the default values are changed, please modify\n' +
    ' InputMethodEngineInterface::CandidateWindowProperty too.'
]
candidate_window_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' TODO(nona): Add more tests.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
character_composer.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Converts |character| to UTF16 string.\n' +
    ' Returns false when |character| is not a valid character.',
  ' Returns an hexadecimal digit integer (0 to 15) corresponding to |keycode|.\n' +
    ' -1 is returned when |keycode| cannot be a hexadecimal digit.',
  ' `ui::DomKey` only offers `ToDeadKeyCombiningCharacter()`, but we need the\n' +
    ' non-combining character for the dead key for the preedit string. If we use\n' +
    ' the combining character, it may combine with the character preceding the\n' +
    ' preedit string, which is unwanted and confusing.'
]
character_composer_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Verify the structure of the primary |TreeComposeChecker| table.',
  ' This file is included here intentionally, instead of the top of the file,\n' +
    ' because including this file at the top of the file will define a\n' +
    ' global constant and contaminate the global namespace.'
]
composition_text.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
composition_text_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
constants.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Here, we define attributes of ui::Event::Properties objects\n' +
    ' kPropertyFromVK',
  ' Properties of the kPropertyFromVK attribute',
  ' kFromVKIsMirroring is the index of the isMirrorring property on the\n' +
    ' kPropertyFromVK attribute. This is non-zero if mirroring and zero if not\n' +
    ' mirroring',
  ' kFromVKSize is the size of the kPropertyFromVK attribute\n' +
    ' It is equal to the number of kPropertyFromVK'
]
dummy_input_method.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dummy_text_input_client.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
events.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' If this property is present, then it means the input field should suppress\n' +
    ' key autorepeat.'
]
fake_text_input_client.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_method_fuchsia.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_client.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adds `flag` to `event_flags` if `modifier` is present. Also removes handled\n' +
    ' modifiers from `unhandled_modifiers`.',
  ' Converts the state of modifiers managed by Fuchsia (e.g. Caps and Num Lock)\n' +
    ' into ui::Event flags.'
]
virtual_keyboard_controller_fuchsia.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the FIDL enum representation of the current InputMode.'
]
grammar_fragment.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ime_text_span.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
infolist_entry.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_method_factory.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_method_initializer.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_method_base.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_method_base_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_method_minimal.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_method_minimal_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
composition_text_util_pango.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
composition_text_util_pango_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
fake_input_method_context.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Overriden from ui::LinuxInputMethodContext'
]
input_method_auralinux.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Overriden from InputMethod.',
  ' Overriden from ui::LinuxInputMethodContextDelegate',
  ' Overridden from InputMethodBase.',
  ' private'
]
input_method_auralinux_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' crbug.com/463491',
  ' Wayland may send both a peek key event and a key event for key events not\n' +
    ' consumed by IME. In that case, the peek key should not be dispatched.'
]
linux_input_method_context_factory.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
text_edit_command_auralinux.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is sent to the renderer. Keep the string representation in sync with\n' +
    ' third_party/WebKit/public/platform/WebEditingCommandType.h.'
]
mock_input_method.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ime_mojom_traits_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
ime_types_mojom_traits.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
text_edit_command_mojom_traits.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These functions use text_edit_commands.inc to generate the code required to\n' +
    ' convert to and from ui::TextEditCommand and\n' +
    ' ui::mojom::TextEditCommand.',
  ' static',
  ' static'
]
text_edit_command_mojom_traits_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This test checks ui::TextEditCommand is converted correctly to and from\n' +
    ' ui::mojom::TextEditCommand.'
]
surrounding_text_tracker.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Replaces the substring of the given str with the offset with replacement.\n' +
    ' If the range is outside of the str, str will not be updated (i.e. final\n' +
    ' result may not contain replacement) but at least offset should be adjusted.',
  ' Erases [pos:pos+n) from the given str with the offset.'
]
surrounding_text_tracker_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
text_input_client.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
utf_offset.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
utf_offset_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
virtual_keyboard_controller_stub.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' VirtualKeyboardControllerStub member definitions.'
]
input_method_win_base.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Extra number of chars before and after selection (or composition) range which\n' +
    ' is returned to IME for improving conversion accuracy.',
  ' Checks if a given primary language ID is a RTL language.',
  ' Checks if there is any RTL keyboard layout installed in the system.',
  ' Checks if the user pressed both Ctrl and right or left Shift keys to\n' +
    ' request to change the text direction and layout alignment explicitly.\n' +
    ' Returns true if only a Ctrl key and a Shift key are down. The desired text\n' +
    ' direction will be stored in |*direction|.'
]
input_method_win_tsf.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_tsf_bridge.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
on_screen_keyboard_display_manager_input_pane.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' VirtualKeyboardInputPane class is used to store all the COM objects and\n' +
    ' control their lifetime, so all the COM processing is on a background\n' +
    ' thread.'
]
on_screen_keyboard_display_manager_tab_tip.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class provides functionality to detect when the on screen keyboard\n' +
    ' is displayed and move the main window up if it is obscured by the keyboard.',
  ' OnScreenKeyboardDetector member definitions.',
  ' static',
  ' OnScreenKeyboardDisplayManagerTabTip member definitions.'
]
on_screen_keyboard_display_manager_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This test validates the on screen keyboard path (tabtip.exe) which is read\n' +
    ' from the registry.'
]
tsf_bridge.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' TSFBridgeImpl -----------------------------------------------------------',
  ' A TLS implementation of TSFBridge.',
  ' TsfBridge  -----------------------------------------------------------------',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
tsf_event_router.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TSFEventRouter::Delegate  ------------------------------------',
  ' The implementation class of ITfUIElementSink, whose member functions will be\n' +
    ' called back by TSF when the UI element status is changed, for example when\n' +
    ' the candidate window is opened or closed. This class also implements\n' +
    ' ITfTextEditSink, whose member function is called back by TSF when the text\n' +
    ' editting session is finished.',
  ' static',
  ' TSFEventRouter  ------------------------------------------------------------'
]
tsf_input_scope.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
tsf_input_scope_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Google Test pretty-printer.'
]
tsf_text_store.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' We support only one view.',
  ' Fetches the client rectangle, top left and bottom right points using the\n' +
    ' window handle in screen coordinates.'
]
tsf_text_store_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Below test covers the notification sent to accessibility about the\n' +
    ' composition',
  ' Summary of test scenarios:\n' +
    ' 1.  renderer proc changes buffer from "" to "a".\n' +
    ' 2.  input service changes buffer from "a" to "abcde".\n' +
    ' 3.  renderer proc changes buffer from "abcde" to "about".\n' +
    ' 4.  renderer proc changes buffer from "about" to "abFGt".\n' +
    ' 5.  renderer proc changes buffer from "abFGt" to "aHIGt".\n' +
    ' 6.  renderer proc changes buffer from "aHIGt" to "JKLMN".\n' +
    ' 7.  renderer proc changes buffer from "JKLMN" to "".\n' +
    ' 8.  renderer proc changes buffer from "" to "OPQ".\n' +
    ' 9.  renderer proc changes buffer from "OPQ" to "OPR".\n' +
    ' 10. renderer proc changes buffer from "OPR" to "SPR".\n' +
    ' 11. renderer proc changes buffer from "SPR" to "STPR".\n' +
    ' 12. renderer proc changes buffer from "STPR" to "PR".\n' +
    ' 13. renderer proc changes buffer from "PR" to "UPR".\n' +
    ' 14. renderer proc changes buffer from "UPR" to "UPVWR".',
  ' regression tests for crbug.com/944452.\n' +
    ' This test covers several corner cases:\n' +
    ' 1. User may commit existing composition and start new composition in the same\n' +
    '    edit session with same composition text.\n' +
    ' 2. some third-party IMEs use SetText() API instead of InsertTextAtSelection()\n' +
    '    API to insert new composition text. We should allow IMEs to use both\n' +
    '    APIs to insert new text.\n' +
    ' 3. Some Japanese IMEs such as CorvusSKK can start and end composition with\n' +
    '    single key stroke. We should still fire keydown/keyup event for such case.',
  ' Some IMEs may replace existing text with new text and start new composition\n' +
    ' on the new text. We should replace old text with new text and start new\n' +
    ' composition. This test covers the above scenario.',
  ' Due to crbug.com/978678, we should not call TextInputClient::InsertText if\n' +
    ' provided text is empty.',
  ' Due to crbug.com/978678, we should not call TextInputClient::InsertText if\n' +
    ' provided text is empty. In fact, we should call TextInputClient::InsertText\n' +
    ' with current composition text to commit composition without losing text.',
  ' regression tests for crbug.com/1006067.\n' +
    ' We should call |TextInputClient::SetCompositionText()| if ImeTextSpans are\n' +
    ' changed from previous edit session during same composition even though\n' +
    ' composition string and composition selection remain unchanged.',
  ' regression tests for crbug.com/1013472.\n' +
    ' We should reset |new_text_inserted_| at the end of\n' +
    ' |TSFTextStore::RequestLock| since the text should have been already\n' +
    ' inserted/replaced.',
  ' regression tests for crbug.com/1013154.\n' +
    ' We should remove selected text before start composition on existing text.',
  ' regression tests for crbug.com/1091069.\n' +
    ' We should allow inserting empty compositon string to cancel composition.',
  ' We should use the last composition end pos instead of the cached\n' +
    ' |coposition_start_| to calculate last composition.',
  ' |ConfirmComposition| should set selection to the end of compositiont text.',
  ' |CancelComposition| should reset all tracking composition state.',
  ' regression tests for crbug.com/1156612.\n' +
    ' We should remove selected text even if there is no new composition and IME\n' +
    ' ask us to delete a previously inserted text.',
  ' regression tests for crbug.com/1225896.\n' +
    ' Some IMEs (e.g. voice typing panel) may remove text before active\n' +
    ' composition. We should delete text before inserting new text.',
  ' regression tests for crbug.com/1295578.\n' +
    ' Some IMEs (e.g. voice typing panel) may select text before active\n' +
    ' composition. We should select text after composition end.',
  ' Test multiple |SetText| call in one edit session.',
  ' Test re-entrancy scanerio while writing to text input client.'
]
virtual_keyboard_debounce_timer.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
element_identifier.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static'
]
element_identifier_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Use DECLARE/DEFINE_ELEMENT instead of DEFINE_LOCAL_ELEMENT so that this\n' +
    " ElementIdentifier's name is predictable."
]
element_test_util.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
element_tracker.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ensures that ElementData objects get cleaned up, but only after all callbacks\n' +
    ' have returned. Otherwise a subscription could be canceled during a callback,\n' +
    ' resulting in the ElementData and the callback list being deleted before the\n' +
    ' callback has returned.',
  ' static',
  ' static'
]
element_tracker_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Use DECLARE/DEFINE_ELEMENT instead of DEFINE_LOCAL_ELEMENT so that this\n' +
    " ElementIdentifier's name is predictable.",
  ' The following test specific conditions that could trigger a UAF or cause\n' +
    ' similar instability due to changing callback lists during callbacks. These\n' +
    ' tests may fail all or some builds (specifically asan/msan) if the logic is\n' +
    ' implemented incorrectly.',
  ' Regression test for a case where an element disappears in the middle of shown\n' +
    ' callbacks.'
]
framework_specific_implementation.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
framework_specific_implementation_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
interaction_sequence.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Runs |callback| if it is valid.\n' +
    ' We have a lot of callbacks that can be null, so calling through this method\n' +
    ' prevents accidentally trying to run a null callback.',
  ' Insert an unused argument `Arg` in the front of the argument list for\n' +
    ' `callback`, and return the new callback with the dummy argument.',
  ' Insert two unused arguments `Arg1` and `Arg2` in the front of the argument\n' +
    ' list for `callback`, and return the new callback with the dummy arguments.',
  ' Sets step->must_remain_visible if it does not have a value.',
  ' Some step types allow the target element to become hidden between being\n' +
    ' triggered and the start callback being called, others do not.',
  ' static',
  ' static'
]
interaction_sequence_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This tests a case where the element is hidden on the first step and there is\n' +
    ' an explicit step transition.',
  " Now that we're fairly confident that sequences can complete, try all the\n" +
    ' different ways to construct and add steps.',
  ' These tests verify that events sent during callbacks (as might be used by an\n' +
    ' interactive UI test powered by an InteractionSequence) do not break the\n' +
    ' sequence.',
  ' Transition during step callback tests for show and hide events.\n' +
    ' These are tricky to get right, so all of the variations must be tested.',
  ' Bait-and-switch tests - verify that when an element must start visible and\n' +
    " there are multiple such elements, it's okay if any of them receive the\n" +
    ' following event.',
  ' Test step default values:',
  ' SetTransitionOnlyOnEvent tests:',
  ' Named element tests:',
  ' RunSynchronouslyForTesting() tests:',
  ' Element shown in any context tests.',
  ' Elements destroyed by external code during callbacks.',
  ' Fail for testing tests.',
  ' Context-switching and ContextMode tests.',
  ' AbortData tests.',
  ' ContextMode::kAny tests.',
  ' Subsequence tests.'
]
interaction_test_util.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
interaction_test_util_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
interactive_test.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
interactive_test_internal.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
interactive_test_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Parallel sequences where one sequence triggers a step in another.',
  ' Parallel sequences where one sequence triggers a step in another, which then\n' +
    ' triggers the final step in the first subsequence.',
  ' This is a regression test for an issue where there is a UAF when tearing down\n' +
    ' an AnyOf() inside an If().',
  ' This test that various types of logging can compile with different types of\n' +
    ' parameters. The output of this test must be verified manually.',
  ' This test ensures that binding of various types of functions and function\n' +
    ' arguments works correctly with actions. If the template logic is not correct,\n' +
    ' this test will likely not compile.',
  ' This test ensures that binding of various types of functions and function\n' +
    ' arguments works correctly with conditionals. If the template logic is not\n' +
    ' correct, this test will likely not compile.',
  ' Tests that the callback is issued exactly once to determine its initial\n' +
    ' state, and not triggered unnecessarily once the desired condition is met.'
]
formatter.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
l10n_font_util.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
l10n_util.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' The list of locales that expected on the current platform, generated from the\n' +
    ' |locales| variable in GN (defined in build/config/locales.gni). This is\n' +
    ' equivalently the list of locales that we expect to have translation strings\n' +
    ' for on the current platform. Guaranteed to be in sorted order and guaranteed\n' +
    ' to have no duplicates.\n' +
    ' Note that this could have false positives at runtime on Android and iOS:\n' +
    ' - On Android, locale files are dynamically shipped in app bundles which are\n' +
    '   only downloaded when needed - so the |locales| variable does not accurately\n' +
    '   reflect the UI strings that are currently available on disk.\n' +
    '   See the comment at the top of |LoadLocaleResources| in\n' +
    '   ui/base/resource/resource_bundle_android.cc for more information.\n' +
    " - On iOS, some locales aren't shipped (|ios_unsupported_locales|) as they are\n" +
    '   not supported by the operating system. These locales are included in this\n' +
    '   variable.\n' +
    ' To avoid false positives on these platforms, use\n' +
    ' ui::ResourceBundle::LocaleDataPakExists() to check whether the locales exist\n' +
    ' on disk instead (requires I/O).',
  ' The below is generated by tools/l10n/generate_locales_list.py, which is\n' +
    ' run in the //ui/base:locales_list_gen build rule.',
  ' Returns true if |locale_name| has an alias in the ICU data file.',
  ' We added 30+ minimally populated locales with only a few entries\n' +
    ' (exemplar character set, script, writing direction and its own\n' +
    ' lanaguage name). These locales have to be distinguished from the\n' +
    ' fully populated locales to which Chrome is localized.',
  ' If |perform_io| is false, this will not perform any I/O but may return false\n' +
    ' positives on Android and iOS. See the |kPlatformLocales| documentation for\n' +
    ' more information.',
  ' On Linux, the text layout engine Pango determines paragraph directionality\n' +
    ' by looking at the first strongly-directional character in the text. This\n' +
    ' means text such as "Google Chrome foo bar..." will be layed out LTR even\n' +
    ' if "foo bar" is RTL. So this function prepends the necessary RLM in such\n' +
    ' cases.',
  ' TODO(jshin): revamp this function completely to use a more systematic\n' +
    ' and generic locale fallback based on ICU/CLDR.'
]
l10n_util_android.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().',
  ' Common prototype of ICU uloc_getXXX() functions.'
]
l10n_util_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' On Mac, we are disabling this test because GetApplicationLocale() as an\n' +
    " API isn't something that we'll easily be able to unit test in this manner.\n" +
    ` The meaning of that API, on the Mac, is "the locale used by Cocoa's main\n` +
    ` nib file", which clearly can't be stubbed by a test app that doesn't use\n` +
    ' Cocoa.',
  ' On Android, we are disabling this test since GetApplicationLocale() just\n' +
    " returns the system's locale, which, similarly, is not easily unit tested.",
  ' * Helper method for validating strings that require direcitonal markup.\n' +
    ' * Checks that parentheses are enclosed in appropriate direcitonal markers.',
  ' TODO:(crbug.com/1456465) Re-enable test for iOS\n' +
    " In iOS17, NSLocale's internal implementation was modified resulting in\n" +
    ' redefined behavior for existing functions. As a result,\n' +
    ' `l10n_util::GetDisplayNameForCountry` no longer produces the same output in\n' +
    ' iOS17 as previous versions.'
]
l10n_util_win.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
time_format.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
time_format_unittest.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test strings in default code path.',
  ' Test strings in fallback path in case of translator error.',
  ' crbug.com/159388: This test fails when daylight savings time ends.'
]
layout.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
linux_desktop.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_source_utils.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
base_type_conversion.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' String Conversions'
]
base_type_conversion_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used in CheckIsSerializable test case.',
  ' This tests whether the converter handles a bogus input string, in which case\n' +
    ' the return value should be nullopt.'
]
metadata_cache.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
metadata_types.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Member Iterator',
  " If starting_container's members vector is empty, set current_collection_\n" +
    ' to its parent until parent class has members. Base parent class View\n' +
    ' will always have members, even if all other parent classes do not.'
]
metadata_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class in which a simple hierarchy is created for testing metadata\n' +
    ' iteration across class types.',
  ' Descendent class in the simple hierarchy. The inherited properties are\n' +
    ' visible within the metadata.',
  ' Test view to which class properties are attached.',
  " Test view which doesn't have metadata attached."
]
button_menu_item_model.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
combobox_model.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dialog_model.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dialog_model_field.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dialog_model_menu_model_adapter.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(pbos): This should probably not be hosting a DialogModel but rather\n' +
    ' another model with DialogModelSection(s).'
]
dialog_model_menu_model_adapter_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dialog_model_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_model.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
image_model_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_model_utils.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(dpenning) consider parameterizing color choices for disabled defaults.'
]
list_model_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
list_selection_model.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if |value| should be erased from its container.'
]
list_selection_model_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_model.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' Default implementation ignores the event flags.'
]
simple_combobox_model.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
simple_combobox_model_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
simple_menu_model.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' SimpleMenuModel::Delegate, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' SimpleMenuModel, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' SimpleMenuModel, MenuModel implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' SimpleMenuModel, Protected:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' SimpleMenuModel, Private:'
]
simple_menu_model_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
table_model.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TableColumn -----------------------------------------------------------------',
  ' TableModel -----------------------------------------------------------------',
  ' Used for sorting.'
]
tree_model.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
tree_node_iterator_unittest.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The tree used for testing:\n * + 1\n   + 2\n   + 3 + 4 + 5\n       + 7'
]
tree_node_model_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verifies if the model is properly adding a new node in the tree and\n' +
    ' notifying the observers.\n' +
    ' The tree looks like this:\n' +
    ' root\n' +
    ' +-- child1\n' +
    '     +-- foo1\n' +
    '     +-- foo2\n' +
    ' +-- child2',
  ' Verifies if the model is properly removing a node from the tree\n' +
    ' and notifying the observers.',
  ' Verifies if the nodes added under the root are all deleted when calling\n' +
    ' DeleteAll.\n' +
    ' The tree looks like this:\n' +
    ' root\n' +
    ' +-- child1\n' +
    '     +-- foo\n' +
    '         +-- bar0\n' +
    '         +-- bar1\n' +
    '         +-- bar2\n' +
    ' +-- child2\n' +
    ' +-- child3',
  ' Verifies if GetIndexOf() returns the correct index for the specified node.\n' +
    ' The tree looks like this:\n' +
    ' root\n' +
    ' +-- child1\n' +
    '     +-- foo1\n' +
    ' +-- child2',
  ' Verifies whether a specified node has or not an ancestor.\n' +
    ' The tree looks like this:\n' +
    ' root\n' +
    ' +-- child1\n' +
    '     +-- foo1\n' +
    ' +-- child2',
  ' Verifies if GetTotalNodeCount returns the correct number of nodes from the\n' +
    ' node specified. The count should include the node itself.\n' +
    ' The tree looks like this:\n' +
    ' root\n' +
    ' +-- child1\n' +
    '     +-- child2\n' +
    '         +-- child3\n' +
    ' +-- foo1\n' +
    '     +-- foo2\n' +
    '         +-- foo3\n' +
    '     +-- foo4\n' +
    ' +-- bar1\n' +
    ' The TotalNodeCount of root is:            9\n' +
    ' The TotalNodeCount of child1 is:          3\n' +
    ' The TotalNodeCount of child2 and foo2 is: 2\n' +
    ' The TotalNodeCount of bar1 is:            1\n' +
    ' And so on...',
  ' Makes sure that we are notified when the node is renamed,\n' +
    ' also makes sure the node is properly renamed.'
]
nine_image_painter_factory.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
page_transition_types.cc [
  ' Copyright 2010 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_touch_ui_controller.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
pointer_device.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Platforms supporting touch link in an alternate implementation of this\n' +
    ' method.'
]
pointer_device_android.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().'
]
pointer_device_ios.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
pointer_device_linux.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
pointer_device_util.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
pointer_device_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The following method logic is as follow :\n' +
    ' - On versions prior to Windows 8 it will always return POINTER_TYPE_FINE\n' +
    ' and/or POINTER_TYPE_COARSE (if the device has a touch screen).\n' +
    ' - If the device is a detachable/convertible device and the keyboard/trackpad\n' +
    ' is detached/flipped it will always return POINTER_TYPE_COARSE.\n' +
    ' It does not cover the case where an external mouse/keyboard is connected\n' +
    " while the device is used as a tablet. This is because Windows doesn't provide\n" +
    ' us a reliable way to detect keyboard/mouse presence with\n' +
    ' GetSystemMetrics(SM_MOUSEPRESENT).\n' +
    " - If the device doesn't have a touch screen it will return POINTER_TYPE_FINE.\n" +
    ' In the rare cases (this is Microsoft documentation) where\n' +
    ' GetSystemMetrics(SM_MOUSEPRESENT) returns 0 we will return POINTER_TYPE_NONE.\n' +
    ' - If the device has a touch screen the available pointer devices are\n' +
    ' POINTER_TYPE_FINE and POINTER_TYPE_COARSE.',
  ' This method follows the same logic as above but with hover types.'
]
touch_ui_controller.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
touch_ui_controller_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verifies that non-touch is the default.',
  ' Verifies that kDisabled maps to non-touch.',
  ' Verifies that kAuto maps to non-touch (the default).',
  ' Verifies that kEnabled maps to touch.',
  ' Verifies that when the mode is set to non-touch and the tablet mode toggles,\n' +
    ' the touch UI state does not change.',
  ' Verifies that when the mode is set to auto and the tablet mode toggles, the\n' +
    ' touch UI state changes and the observer gets called back.'
]
empty_filter.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
empty_filter_unittests.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test the empty filter gives the same values'
]
empty_predictor.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_predictor_unittest_helpers.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
kalman_filter.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
kalman_predictor.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Influence of acceleration during each prediction sample',
  ' Influence of velocity during each prediction sample'
]
kalman_predictor_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test the a single axle kalman filter behavior with preset datas.',
  ' Tests the kalman predictor constant position.',
  ' Tests the kalman predictor predict constant velocity.',
  ' Tests the kalman predictor predict constant acceleration.',
  ' Tests the kalman predictor time interval filter.',
  ' Test the benefit from the heuristic approach on noisy data.',
  ' Test the kalman predictor prevention of rubber-banding.'
]
least_squares_predictor.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Solve XB = y.'
]
least_squares_predictor_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests the lest squares filter behavior.\n' +
    ' The data set is generated by a "known to work" quadratic fit.',
  ' Tests the LSQ predictor predict constant velocity.',
  ' Tests the LSQ predictor predict quadratic value correctly.',
  ' Tests that lsq predictor will not crash when given constant time stamp.',
  ' Tests the LSQ predictor produce the time interval correctly.'
]
linear_predictor.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
linear_predictor_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test if the output name of the predictor is taking account of the\n' +
    ' equation order',
  ' Test if the output name of the predictor is taking account of the\n' +
    ' equation order',
  ' Test that the number of events required to compute a prediction is correct',
  ' Test that the number of events required to compute a prediction is correct',
  ' Test constant position and constant velocity',
  ' Test time interval in first order',
  ' Test time interval in second order'
]
linear_resampling.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Minimum time difference between last two consecutive events before attempting\n' +
    ' to resample.',
  ' Maximum time to predict forward from the last event, to avoid predicting too\n' +
    ' far into the future. This time is further bounded by 50% of the last time\n' +
    ' delta.',
  ' Align events to a few milliseconds before frame_time. This is to make the\n' +
    ' resampling either doing interpolation or extrapolating a closer future time\n' +
    ' so that resampled result is more accurate and has less noise. This adds some\n' +
    ' latency during resampling but a few ms should be fine.',
  ' The optimal prediction anticipation from experimentation: In the study\n' +
    ' https://bit.ly/3iyQf8V we found that, on a machine with VSync at 60Hz, adding\n' +
    ' 1/2 * frame_interval (on top of kResampleLatency) minimizes the Lag on touch\n' +
    ' scrolling. + 1/2 * (1/60) - 5ms = 3.3ms.',
  ' Get position at |sample_time| by linear interpolate/extrapolate a and b.'
]
linear_resampling_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test if the output name of the predictor is taking account of the\n' +
    ' equation order',
  ' Test that the number of events required to compute a prediction is correct',
  ' Test time interval in first order',
  ' Tests resampling with the experimental latency if +3.3ms instead of\n' +
    ' the default -5ms.',
  ' Tests resampling with the experimental latency if +1ms (using switch) instead\n' +
    ' of the default -5ms.',
  ' Tests resampling with the experimental latency if +0.5*`frame_interval`\n' +
    ' instead of the default -5ms.',
  ' Tests resampling with the experimental latency if +0.5*`frame_interval`\n' +
    ' (using switch) instead of the default -5ms.'
]
one_euro_filter.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
one_euro_filter_unittests.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Check if sending values between 0 and 1 keeps filtered values between 0 and 1'
]
prediction_metrics_handler.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
prediction_metrics_handler_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' For test purpose and simplify, we are predicted in the middle of 2 real\n' +
    ' events, which is also the frame time (i.e. a prediction of 4 ms)',
  " Test that it doesn't crash when predicted event is prior to first real event."
]
data_pack.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' For details of the file layout, see\n' +
    ' http://dev.chromium.org/developers/design-documents/linuxresourcesandlocalizedstrings',
  ' uint32(version), uint32(resource_count), uint8(encoding)',
  ' uint32(version), uint8(encoding), 3 bytes padding,\n' +
    ' uint16(resource_count), uint16(alias_count)',
  " Prints the given resource id the first time it's loaded if Chrome has been\n" +
    ' started with --print-resource-ids. This output is then used to generate a\n' +
    ' more optimal resource renumbering to improve startup speed. See\n' +
    ' tools/gritsettings/README.md for more info.',
  ' static',
  ' static',
  ' Takes ownership of a string of uncompressed pack data.',
  ' static',
  ' static',
  ' static'
]
data_pack_literal.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
data_pack_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
data_pack_with_resource_sharing_lacros.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' statoc'
]
data_pack_with_resource_sharing_lacros_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_resource_bundle_delegate.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
resource_bundle.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' To avoid conflicts with the macro from the Windows SDK...',
  ' PNG-related constants.',
  ' Pointers to the functions |lottie::ParseLottieAsStillImage| and\n' +
    ' |lottie::ParseLottieAsThemedStillImage|, so that dependencies used by those\n' +
    ' functions do not need to be included directly in ui/base.',
  ' Helper function for determining whether a resource is gzipped.',
  ' Helper function for determining whether a resource is brotli compressed.',
  ' Returns the uncompressed size of Brotli compressed |input| from header.',
  ' Returns a span of the given length that writes into `out_buf`.',
  ' Decompresses data in |input| using brotli, storing\n' +
    ' the result in |output|, which is resized as necessary. Returns true for\n' +
    ' success. To be used for grit compressed resources only.',
  ' Helper function for decompressing resource.',
  ' A descendant of |gfx::ImageSkiaSource| that loads a bitmap image for the\n' +
    ' requested scale factor from |ResourceBundle| on demand for a given\n' +
    ' |resource_id|. If the bitmap for the requested scale factor does not exist,\n' +
    ' it will return the 1x bitmap scaled by the scale factor. This may lead to\n' +
    ' broken UI if the correct size of the scaled image is not exactly\n' +
    ' |scale_factor| * the size of the 1x bitmap. When\n' +
    ' --highlight-missing-scaled-resources flag is specified, scaled 1x bitmaps are\n' +
    ' highlighted by blending them with red.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' Register Png Decoder for use by DataURIResourceProviderProxy for embedded\n' +
    ' images.',
  ' static',
  ' static'
]
resource_bundle_android.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().',
  ' It is okay to cache and share these file descriptors since the\n' +
    ' ResourceBundle singleton never closes the handles.',
  ' static'
]
resource_bundle_auralinux.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
resource_bundle_fuchsia.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
resource_bundle_lacros.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
resource_bundle_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Custom chunk that GRIT adds to PNG to indicate that it could not find a\n' +
    ' bitmap at the requested scale factor and fell back to 1x.',
  ' A string with the "LOTTIE" prefix that GRIT adds to Lottie assets.',
  ' The contents after the prefix has been removed.',
  ' Mock of |lottie::ParseLottieAsStillImage|. Checks that |kLottieData| is\n' +
    ' properly stripped of the "LOTTIE" prefix.',
  ' Returns |bitmap_data| with |custom_chunk| inserted after the IHDR chunk.',
  ' Creates datapack at |path| with a single bitmap at resource ID 3\n' +
    ' which is |edge_size|x|edge_size| pixels.\n' +
    ' If |custom_chunk| is non empty, adds it after the IHDR chunk\n' +
    ' in the encoded bitmap data.',
  " Verify that we don't crash when trying to load a resource that is not found.\n" +
    ' In some cases, we fail to mmap resources.pak, but try to keep going anyway.',
  ' Test requesting image reps at various scale factors from the image returned\n' +
    ' via ResourceBundle::GetImageNamed().',
  ' Test that GetImageNamed() behaves properly for images which GRIT has\n' +
    ' annotated as having fallen back to 1x.'
]
resource_bundle_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
resource_data_dll_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
resource_scale_factor.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' The difference to fall back to the smaller scale factor rather than the\n' +
    ' larger one. For example, assume 1.20 is requested but only 1.0 and 2.0 are\n' +
    ' supported. In that case, not fall back to 2.0 but 1.0, and then expand\n' +
    ' the image to 1.20.'
]
resource_scale_factor_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_file_writer.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ScopedFileWriter implementation.'
]
scoped_startup_resource_bundle.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
temporary_shared_resource_path_chromeos.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_visibility_tracker.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_visibility_tracker_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The object should be robust to double hidden and shown notification'
]
shortcut_mapping_pref_delegate.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
template_expressions.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ` Escape quotes and backslashes ('"\\).`,
  ' Checks whether the replacement has an unsubstituted placeholder, e.g. "$1".'
]
template_expressions_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Tip: ui_base_unittests --gtest_filter='TemplateExpressionsTest.*' to run\n" +
    ' these tests.'
]
idle_test_utils.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_base_window.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
page_transition_types_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
run_all_unittests.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
skia_gold_matching_algorithm.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' SkiaGoldMatchingAlgorithm ---------------------------------------------------',
  ' ExactSkiaGoldMatchingAlgorithm ----------------------------------------------',
  ' FuzzySkiaGoldMatchingAlgorithm ----------------------------------------------',
  ' SobelSkiaGoldMatchingAlgorithm ----------------------------------------------',
  ' PositiveIfOnlyImageAlgorithm ------------------------------------------------'
]
skia_gold_matching_algorithm_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
skia_gold_pixel_diff.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A dummy build revision used only under a dry run.',
  ' The switch keys for tryjob.',
  ' The switch key for saving png file locally for debugging. This will allow\n' +
    ' the framework to save the screenshot png file to this path.',
  ' The separator used in the names of the screenshots taken on Ash platform.',
  ' The separator used by non-Ash platforms.',
  ' Append args after program.\n' +
    ' The base::Commandline.AppendArg append the arg at\n' +
    " the end which doesn't work for us.",
  ' TODO(crbug.com/40118868): Revisit the macro expression once build flag switch\n' +
    ' of lacros-chrome is complete.',
  ' Non-empty test corpus and environment map.',
  ' If present, overrides |LaunchProcess|.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
skia_gold_pixel_diff_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Check that |GetGoldenImageName| contains at least all the parts put into it.'
]
test_dialog_model_host.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These are static methods rather than a method on the host because this needs\n' +
    ' to result with the destruction of the host.',
  ' Bypasses PassKey() requirement for accessing accelerators().'
]
ui_controls.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_controls_aura.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface to provide Aura implementation of UI control.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static. declared in ui_controls.h'
]
ui_controls_internal_win.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' InputDispatcher ------------------------------------------------------------',
  ' InputDispatcher is used to listen for a mouse/keyboard event. Only one\n' +
    ' instance may be alive at a time. The callback is run when the appropriate\n' +
    ' event is received.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' Private functions ----------------------------------------------------------',
  ' Whether scan code should be used for |key|.\n' +
    ' When sending keyboard events by SendInput() function, Windows does not\n' +
    ' "smartly" add scan code if virtual key-code is used. So these key events\n' +
    " won't have scan code or DOM UI Event code string.\n" +
    ' But we cannot blindly send all events with scan code. For some layout\n' +
    ' dependent keys, the Windows may not translate them to what they used to be,\n' +
    ' because the test cases are usually running in headless environment with\n' +
    ' default keyboard layout. So fall back to use virtual key code for these keys.',
  ' Append an INPUT structure with the appropriate keyboard event\n' +
    ' parameters required by SendInput',
  ' Append an INPUT structure with a simple mouse up or down event to be used\n' +
    ' by SendInput.',
  ' Append an INPUT array with optional accelerator keys that may be pressed\n' +
    ' with a keyboard or mouse event. This array will be sent by SendInput.'
]
bytes_formatting.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Byte suffix string constants. These both must match the DataUnits enum.'
]
bytes_formatting_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
theme_provider.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' We have the destructor here because GCC puts the vtable in the first file\n' +
    ' that includes a virtual function of the class. Leaving it just in the .h file\n' +
    ' means that GCC will fail to link.'
]
themed_vector_icon.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
themed_vector_icon_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_base_exports.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file is for including headers that are not included in any other .cc\n' +
    ' files contained with the ui module.  We need to include these here so that\n' +
    ' linker will know to include the symbols, defined by these headers, in the\n' +
    ' resulting dynamic library (ui.dll).'
]
ui_base_features.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' If enabled, the occluded region of the HWND is supplied to WindowTracker.',
  ' If enabled, calculate native window occlusion - Windows-only.',
  ' If enabled, listen for screen power state change and factor into the native\n' +
    ' window occlusion detection - Windows-only.',
  ' Once enabled, the exact behavior is dictated by the field trial param\n' +
    ' name `kApplyNativeOcclusionToCompositorType`.',
  ' If enabled, native window occlusion tracking will always be used, even if\n' +
    ' CHROME_HEADLESS is set.',
  ' Field trial param name for `kApplyNativeOcclusionToCompositor`.',
  ' When the WindowTreeHost is occluded or hidden, resources are released and\n' +
    ' the compositor is hidden. See WindowTreeHost for specifics on what this\n' +
    ' does.',
  ' When the WindowTreeHost is occluded the frame rate is throttled.',
  ' Release when hidden, throttle when occluded.',
  ' Integrate input method specific settings to Chrome OS settings page.\n' +
    ' https://crbug.com/895886.',
  ' Share the resource file with ash-chrome. This feature reduces the memory\n' +
    ' consumption while the disk usage slightly increases.\n' +
    ' https://crbug.com/1253280.',
  ' Enables settings that allow users to remap the F11 and F12 keys in the\n' +
    ' "Customize keyboard keys" page.',
  " Controls whether support for Wayland's per-surface scaling is enabled.",
  ' Controls whether Wayland text-input-v3 protocol support is enabled.',
  ' If this feature is enabled, users not specify --ozone-platform-hint switch\n' +
    ' will get --ozone-platform-hint=auto treatment. https://crbug.com/40250220.',
  ' Update of the virtual keyboard settings UI as described in\n' +
    ' https://crbug.com/876901.',
  ' Enables percent-based scrolling for mousewheel and keyboard initiated\n' +
    ' scrolls and impulse curve animations.',
  ' Uses a stylus-specific tap slop region parameter for gestures.  Stylus taps\n' +
    " tend to slip more than touch taps (presumably because the user doesn't feel\n" +
    ' the movement friction with a stylus).  As a result, it is harder to tap with\n' +
    ' a stylus. This feature makes the slop region for stylus input bigger than the\n' +
    ' touch slop.',
  ' Allows system caption style for WebVTT Captions.',
  ' When enabled, the feature will query the OS for a default cursor size,\n' +
    ' to be used in determining the concrete object size of a custom cursor in\n' +
    ' blink. Currently enabled by default on Windows only.\n' +
    ' TODO(crbug.com/40845719) - Implement for other platforms.',
  ' Allows system keyboard event capture via the keyboard lock API.',
  ' Enables GPU rasterization for all UI drawing (where not blocklisted).',
  ' Enables scrolling with layers under ui using the ui::Compositor.',
  ' TODO(crbug.com/40471184): Use composited scrolling on all platforms.',
  ' Enables the use of a touch fling curve that is based on the behavior of\n' +
    ' native apps on Windows.',
  ' TODO(crbug.com/40118868): Revisit the macro expression once build flag switch\n' +
    ' of lacros-chrome is complete.',
  ' Cached in Java as well, make sure defaults are updated together.',
  ' Enables focus follow follow cursor (sloppyfocus).',
  ' Enables using WM_POINTER instead of WM_TOUCH for touch events.',
  ' This feature supersedes kNewShortcutMapping.',
  ' Whether to enable new touch text editing features such as extra touch\n' +
    ' selection gestures and quick menu options. Planning to release for ChromeOS\n' +
    ' first, then possibly also enable some parts for other platforms later.\n' +
    ' TODO(b/262297017): Clean up after touch text editing redesign ships.',
  ' Enables forced colors mode for web content.',
  ' Enables the eye-dropper in the refresh color-picker for Windows, Mac\n' +
    ' and Linux. This feature will be released for other platforms in later\n' +
    ' milestones.',
  ' Used to enable keyboard accessible tooltips in in-page content\n' +
    ' (i.e., inside Blink). See\n' +
    ' ::views::features::kKeyboardAccessibleTooltipInViews for\n' +
    ' keyboard-accessible tooltips in Views UI.',
  ' Enable raw draw for tiles.',
  ' Tile size = viewport size * TileSizeFactor',
  ' Enables chrome color management wayland protocol for lacros.',
  ' Font Smoothing was enabled by default prior to introducing this feature.\n' +
    ' We want to experiment with disabling it to align with CR2023 designs.',
  ' If enabled, fullscreen window state is updated asynchronously.'
]
ui_base_paths.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This cannot be done as a static initializer sadly since Visual Studio will\n' +
    ' eliminate this object file if there is no direct entry point into it.'
]
ui_base_switches.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Disable overscroll edge effects like those found in Android views.',
  ' Disable the pull-to-refresh effect when vertically overscrolling content.',
  ' Disable animations for showing and hiding modal dialogs.',
  ' Show borders around CALayers corresponding to overlays and partial damage.',
  ' Enable resources file sharing with ash-chrome.\n' +
    ' This flag is enabled when feature::kLacrosResourcesFileSharing is set and\n' +
    ' ash-side operation is successfully done.',
  ' Specifies system font family name. Improves determenism when rendering\n' +
    ' pages in headless mode.',
  ' Specify the toolkit used to construct the Linux GUI.',
  ' Disables GTK IME integration.',
  ' Disables layer-edge anti-aliasing in the compositor.',
  ' Disables touch event based drag and drop.',
  ' Disable re-use of non-exact resources to fulfill ResourcePool requests.\n' +
    ' Intended only for use in layout or pixel tests to reduce noise.',
  ' Treats DRM virtual connector as external to enable display mode change in VM.',
  ' Enables touch event based drag and drop.',
  ' Forces the caption style for WebVTT captions.',
  ' Forces dark mode in UI for platforms that support it.',
  ' Forces high-contrast mode in native UI drawing, regardless of system\n' +
    ' settings. Note that this has limited effect on Windows: only Aura colors will\n' +
    ' be switched to high contrast, not other system colors.',
  ' The language file that we want to try to open. Of the form\n' +
    ' language[-country] where language is the 2 letter code from ISO-639.\n' +
    ' On Linux, this flag does not work; use the LC_*/LANG environment variables\n' +
    ' instead.',
  ' Transform localized strings to be longer, with beginning and end markers to\n' +
    ' make truncation visually apparent.',
  ' Visualize overdraw by color-coding elements based on if they have other\n' +
    ' elements drawn underneath. This is good for showing where the UI might be\n' +
    ' doing more rendering work than necessary. The colors are hinting at the\n' +
    ' amount of overdraw on your screen for each pixel, as follows:\n' +
    ' True color: No overdraw.\n' +
    ' Blue: Overdrawn once.\n' +
    ' Green: Overdrawn twice.\n' +
    ' Pink: Overdrawn three times.\n' +
    ' Red: Overdrawn four or more times.',
  ' Re-draw everything multiple times to simulate a much slower machine.\n' +
    ' Give a slow down factor to cause renderer to take that many times longer to\n' +
    ' complete, such as --slow-down-compositing-scale-factor=2.',
  ' Tint composited color.',
  ' Controls touch-optimized UI layout for top chrome.',
  ' Disable partial swap which is needed for some OpenGL drivers / emulators.',
  ' Enables the ozone x11 clipboard for linux-chromeos.'
]
ui_base_switches_util.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' On macOS and iOS this value is adjusted in `UpdateScrollbarTheme()`,\n' +
    ' but the system default is true.'
]
user_activity_detector.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a string describing |event|.',
  ' Too low and mouse events generated at the tail end of reconfiguration\n' +
    ' will be reported as user activity and turn the screen back on; too high\n' +
    " and we'll ignore legitimate activity.",
  ' static'
]
user_activity_detector_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Implementation that just counts the number of times we've been told that the\n" +
    ' user is active.',
  ' A test implementation of PlatformEventSource that we can instantiate to make\n' +
    ' sure that the PlatformEventSource has an instance while in unit tests.',
  ' Checks that the observer is notified in response to different types of input\n' +
    ' events.',
  " Checks that observers aren't notified too frequently.",
  ' Checks that the detector ignores synthetic mouse events.',
  ' Checks that observers are notified about externally-reported user activity.'
]
view_prop.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Maints the actual view, key and data.',
  ' static',
  ' static',
  ' static'
]
view_prop_unittest.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test a handful of viewprop assertions.'
]
color_manager_util.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_client_input_types.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_display_util.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_display_util_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_input_types_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_server_input_types.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
i18n_source_stream.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
i18n_source_stream_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' This constant is rather arbitrary, though the offsets and other sizes must\n' +
    ' be less than kBufferSize.',
  ' These tests with generic names are sequences that might catch an error in the\n' +
    ' future, depending on how the code changes.'
]
jstemplate_builder.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A helper function for using JsTemplate. See jstemplate_builder.h for more\n' +
    ' info.',
  ' Appends a script tag with a variable name |templateData| that has the JSON\n' +
    ' assigned to it.',
  ' Appends the source for load_time_data.js in a script tag.'
]
web_ui_util.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Generous cap to guard against out-of-memory issues.',
  ' Parse a formatted frame index string into int and sets to |frame_index|.',
  ' TODO(crbug.com/40118868): Revisit the macro expression once build flag switch\n' +
    ' of lacros-chrome is complete.'
]
web_ui_util_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_creation_utils.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
foreground_helper.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' Handle the registered Hotkey being pressed.'
]
hidden_window.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' We need to have a parent window for the compositing code to work correctly.\n' +
    ' A tab will not have a parent HWND whenever it is not active in its\n' +
    " host window - for example at creation time and when it's in the\n" +
    ' background, so we provide a default widget to host them.\n' +
    ' It may be tempting to use GetDesktopWindow() instead, but this is\n' +
    ' problematic as the shell sends messages to children of the desktop\n' +
    ' window that interact poorly with us.\n' +
    ' See: http://crbug.com/16476'
]
hwnd_metrics.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hwnd_subclass.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Singleton factory that creates and manages the lifetime of all\n' +
    ' ui::HWNDSubclass objects.',
  ' static',
  ' static',
  ' static'
]
hwnd_subclass_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
internal_constants.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
lock_state.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Checks if the current session is locked.',
  ' Observes the screen lock state of Windows and caches the current state. This\n' +
    ' is necessary as IsSessionLocked uses WTSQuerySessionInformation internally,\n' +
    ' which is an expensive syscall and causes a performance regression as we query\n' +
    ' the current state quite often. http://crbug.com/940607.'
]
message_box_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' In addition to passing the RTL flags to ::MessageBox if we are running in an\n' +
    ' RTL locale, we need to make sure that LTR strings are rendered correctly by\n' +
    ' adding the appropriate Unicode directionality marks.'
]
mouse_wheel_util.cc [
  ' Copyright 2009 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Property used to indicate the HWND supports having mouse wheel messages\n' +
    ' rerouted to it.'
]
power_setting_change_listener.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
scoped_ole_initializer.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
session_change_observer.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
shell.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Default ShellExecuteEx flags used with "openas", "explore", and default\n' +
    ' verbs.\n' +
    ' SEE_MASK_NOASYNC is specified so that ShellExecuteEx can be invoked from a\n' +
    ' thread whose message loop may not wait around long enough for the\n' +
    ' asynchronous tasks initiated by ShellExecuteEx to complete. Using this flag\n' +
    ' causes ShellExecuteEx() to block until these tasks complete.',
  ' Invokes ShellExecuteExW() with the given parameters.',
  ' TODO(calamity): investigate moving this out of the UI thread as COM\n' +
    ' operations may spawn nested run loops which can cause issues.'
]
touch_input.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
win_cursor.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
win_cursor_factory.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
win_cursor_factory_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_event_target.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_open_disposition_utils.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wm_role_names_linux.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
selection_owner.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' The period of |incremental_transfer_abort_timer_|. Arbitrary but must be <=\n' +
    ' than kIncrementalTransferTimeoutMs.',
  ' The amount of time to wait for the selection requestor to process the data\n' +
    ' sent by the selection owner before aborting an incremental data transfer.',
  ' Gets the value of an atom pair array property. On success, true is returned\n' +
    ' and the value is stored in |value|.'
]
selection_requestor.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' The amount of time to wait for a request to complete before aborting it.',
  ' Combines |data| into a single std::vector<uint8_t>.'
]
selection_requestor_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Converts |selection| to |target| and checks the returned values.',
  ' Test that SelectionRequestor correctly handles receiving a request while it\n' +
    ' is processing another request.\n' +
    ' TODO(crbug.com/40398800): Reenable once clipboard interface is async.'
]
selection_utils.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  '/////////////////////////////////////////////////////////////////////////////',
  '/////////////////////////////////////////////////////////////////////////////'
]
x11_property_change_waiter.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_ui_controls_test_helper.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mask of the buttons currently down.',
  ' The root and time fields of |xevent| may be modified.'
]
x11_clipboard_helper.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Uses the XFixes API to notify about selection changes.'
]
x11_cursor.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
x11_cursor_factory.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_cursor_factory_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_cursor_loader.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Reads the cursor called |name| for the theme named |theme|. Searches  all\n' +
    ' paths in the XCursor path and parent themes.',
  " This is ported from libxcb-cursor's parse_cursor_file.c:\n" +
    ' https://gitlab.freedesktop.org/xorg/lib/libxcb-cursor/-/blob/master/cursor/parse_cursor_file.c'
]
x11_cursor_loader_fuzzer.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_cursor_loader_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_desktop_window_move_client.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_display_manager.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Need at least xrandr version 1.3',
  ' Need at least xrandr version 1.3',
  ' Talks to xrandr to get the information of the outputs for a screen and\n' +
    ' updates display::Display list. The minimum required version of xrandr is\n' +
    ' 1.3.'
]
x11_display_util.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Need at least xrandr version 1.3',
  ' Sets the work area on a list of displays.  The work area for each display\n' +
    ' must already be initialized to the display bounds.  At most one display out\n' +
    ' of |displays| will be affected.',
  ' Get the EDID data from the `output` and stores to `edid`.'
]
x11_display_util_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_drag_context.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Window property that holds the supported drag and drop data types.\n' +
    ' This property is set on the XDND source window when the drag and drop data\n' +
    ' can be converted to more than 3 types.',
  ' Selection used by the XDND protocol to transfer data between applications.',
  ' Window property that contains the possible actions that will be presented to\n' +
    ' the user when the drag and drop action is kXdndActionAsk.',
  ' These actions have the same meaning as in the W3C Drag and Drop spec.',
  ' Window property that will receive the drag and drop selection data.'
]
x11_drag_drop_client.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Reading recommended for understanding the implementation in this file:\n' +
    ' * The X Window System Concepts section in The X New Developer’s Guide\n' +
    ' * The X Selection Mechanism paper by Keith Packard\n' +
    ' * The Peer-to-Peer Communication by Means of Selections section in the\n' +
    "   ICCCM (X Consortium's Inter-Client Communication Conventions Manual)\n" +
    ' * The XDND specification, Drag-and-Drop Protocol for the X Window System\n' +
    ' * The XDS specification, The Direct Save Protocol for the X Window System\n' +
    ' All the readings are freely available online.',
  ' Window property on the source window and message used by the XDS protocol.\n' +
    ' This atom name intentionally includes the XDS protocol version (0).\n' +
    ' After the source sends the XdndDrop message, this property stores the\n' +
    ' (path-less) name of the file to be saved, and has the type text/plain, with\n' +
    ' an optional charset attribute.\n' +
    ' When receiving an XdndDrop event, the target needs to check for the\n' +
    ' XdndDirectSave property on the source window. The target then modifies the\n' +
    ' XdndDirectSave on the source window, and sends an XdndDirectSave message to\n' +
    ' the source.\n' +
    ' After the target sends the XdndDirectSave message, this property stores an\n' +
    ' URL indicating the location where the source should save the file.',
  ' The lowest XDND protocol version that we understand.\n' +
    ' The XDND protocol specification says that we must support all versions\n' +
    ' between 3 and the version we advertise in the XDndAware property.',
  ' The value used in the XdndAware property.\n' +
    ' The XDND protocol version used between two windows will be the minimum\n' +
    ' between the two versions advertised in the XDndAware property.',
  ' Window property that tells other applications the window understands XDND.',
  ' Window property that holds the supported drag and drop data types.\n' +
    ' This property is set on the XDND source window when the drag and drop data\n' +
    ' can be converted to more than 3 types.',
  ' These actions have the same meaning as in the W3C Drag and Drop spec.',
  ' Triggers the XDS protocol.',
  ' Window property that contains the possible actions that will be presented to\n' +
    ' the user when the drag and drop action is kXdndActionAsk.',
  ' Window property pointing to a proxy window to receive XDND target messages.\n' +
    ' The XDND source must check the proxy window must for the XdndAware property,\n' +
    ' and must send all XDND messages to the proxy instead of the target. However,\n' +
    ' the target field in the messages must still represent the original target\n' +
    ' window (the window pointed to by the cursor).',
  ' Message sent from an XDND source to the target when the user confirms the\n' +
    ' drag and drop operation.',
  ' Message sent from an XDND source to the target to start the XDND protocol.\n' +
    ' The target must wait for an XDndPosition event before querying the data.',
  ' Message sent from an XDND target to the source in response to an XdndDrop.\n' +
    ' The message must be sent whether the target acceepts the drop or not.',
  ' Message sent from an XDND source to the target when the user cancels the drag\n' +
    ' and drop operation.',
  ' Message sent by the XDND source when the cursor position changes.\n' +
    ' The source will also send an XdndPosition event right after the XdndEnter\n' +
    ' event, to tell the target about the initial cursor position and the desired\n' +
    ' drop action.\n' +
    ' The time stamp in the XdndPosition must be used when requesting selection\n' +
    ' information.\n' +
    ' After the target optionally acquires selection information, it must tell the\n' +
    ' source if it can accept the drop via an XdndStatus message.',
  ' Message sent by the XDND target in response to an XdndPosition message.\n' +
    ' The message informs the source if the target will accept the drop, and what\n' +
    ' action will be taken if the drop is accepted.',
  ' static'
]
x11_gl_egl_utility.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_global_shortcut_listener.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' The modifiers masks used for grabbing keys.  Due to XGrabKey only working on\n' +
    ' exact modifiers, we need to grab all key combinations including zero or more\n' +
    ' of the following: Num lock, Caps lock and Scroll lock.  So that we can make\n' +
    ' sure the behavior of global shortcuts is consistent on all platforms.'
]
x11_idle_query.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_os_exchange_data_provider.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Note: the GetBlah() methods are used immediately by the\n' +
    ' web_contents_view_aura.cc:PrepareDropData(), while the omnibox is a\n' +
    ' little more discriminating and calls HasBlah() before trying to get the\n' +
    ' information.'
]
x11_pointer_grab.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The grab window. None if there are no active pointer grabs.',
  ' The "owner events" parameter used to grab the pointer.'
]
x11_screensaver.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_shm_image_pool.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' When resizing a segment, the new segment size is calculated as\n' +
    '   new_size = target_size * kShmResizeThreshold\n' +
    ' so that target_size has room to grow before another resize is necessary.  We\n' +
    ' also want target_size to have room to shrink, so we avoid resizing until\n' +
    '   shrink_size = target_size / kShmResizeThreshold\n' +
    ' Given these equations, shrink_size is\n' +
    '   shrink_size = new_size / kShmResizeThreshold ^ 2\n' +
    ' new_size is recorded in SoftwareOutputDeviceX11::shm_size_, so we need to\n' +
    ' divide by kShmResizeThreshold twice to get the shrink threshold.'
]
x11_software_bitmap_presenter.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' static'
]
x11_user_input_monitor.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_util.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' This file defines utility functions for X11 (Linux only). This code has been\n' +
    " ported from XCB since we can't use XCB on Ubuntu while its 32-bit support\n" +
    ' remains woefully incomplete.',
  ' Constants that are part of EWMH.',
  ' Returns whether the X11 Screen Saver Extension can be used to disable the\n' +
    ' screen saver.',
  ' Returns true if the event has event_x and event_y fields.'
]
x11_whole_screen_move_loop.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' XGrabKey requires the modifier mask to explicitly be specified.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopWindowTreeHostLinux, ui::PlatformEventDispatcher implementation:'
]
x11_workspace_handler.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_xrandr_interval_only_vsync_provider.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
devicetype_utils.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
run_all_unittests.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
shill_error.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
network_element_localized_strings_provider.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
user_activity_power_manager_notifier.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Minimum number of seconds between notifications.',
  ' Returns a UserActivityType describing |event|.'
]
native_color_mixers_chromeos.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines mappings for colors used in Ash and Lacros. Colors that\n' +
    ' are only used in Ash are defined in //ash/style.'
]
color_metrics.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Estimated upper limit of what we should record for cache size.',
  ' Used to determine if we are running in the browser process for metrics\n' +
    ' purposes.'
]
color_mixer.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_mixer_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that the recipe returned by operator[] is respected by the mixer.',
  ' Tests that GetInputColor() returns a placeholder color if the mixer has no\n' +
    ' recipes.',
  ' Tests that GetInputColor() on a given mixer ignores any recipe that mixer has\n' +
    ' for that color.',
  ' Tests that if GetInputColor() needs to reference the output of a previous\n' +
    ' mixer, it will reference the result color (i.e. after applying any recipe)\n' +
    " rather than referencing that mixer's input color.",
  ' Tests that GetResultColor() returns a placeholder color when there are no\n' +
    ' recipes.',
  ' Tests that GetResultColor() does not require an input set to provide an\n' +
    ' initial value for its requested color.',
  ' Tests that GetResultColor() can reference other result colors, each of which\n' +
    ' will have its recipe applied.',
  ' Tests that GetResultColor() will use an input getter, if specified, to source\n' +
    ' input colors for recipes.',
  ' Tests that GetDefinedColorIds() returns the ColorIds expected.'
]
color_mixers.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_provider.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_provider_key.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_provider_manager.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
color_provider_manager_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verifies that color providers endure for each call to GetColorProviderFor().',
  ' Verifies that the initializer is called for each newly created color\n' +
    ' provider.',
  ' Verifies resetting the manager clears the provider. This is useful to keep\n' +
    ' unit tests isolated from each other.'
]
color_provider_source.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_provider_source_observer.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_provider_source_observer_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verify the observation is reset when source is destroyed.',
  " Verify the observer is removed from the source's observer list when the\n" +
    ' observer is destroyed.',
  ' Verify OnColorProviderChanged() is called by the source as expected.'
]
color_provider_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that when there are no mixers, GetColor() returns a placeholder value.',
  ' Tests that when there is a single mixer, GetColor() makes use of it where\n' +
    ' possible.',
  ' Tests that when there are multiple non-overlapping mixers, GetColor() makes\n' +
    ' use of both.',
  ' Tests that when mixers supply overlapping color specifications, the last one\n' +
    ' added takes priority.',
  ' Tests that with both a standard and a "postprocessing" mixer, GetColor()\n' +
    ' takes both into account.',
  ' A "postprocessing" mixer can be added before regular mixers. The result\n' +
    ' should be equivalent.',
  ' Tests that if a color is redefined by a later mixer, an earlier mixer will\n' +
    ' "see" the result.',
  ' Tests that "postprocessing" mixers are skipped for the purposes of color\n' +
    ' lookup during intermediate stages.'
]
color_provider_utils.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Below defines the mapping between RendererColorIds and ColorIds.',
  ' Note that this second include is not redundant. The second inclusion of the\n' +
    ' .inc file serves to undefine the macros the first inclusion defined.'
]
color_provider_utils_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_recipe.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_recipe_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that a recipe with no transforms passes through its input color\n' +
    ' unchanged.',
  ' Tests that a transform in a recipe has an effect.',
  ' Tests that in a recipe with multiple transforms, each is applied.'
]
color_transform.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_transform_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests initialization with an SkColor value.',
  ' Tests that AlphaBlend() produces a transform that blends its inputs.',
  ' Tests that BlendForMinContrast(), with the default args, produces a transform\n' +
    ' that blends its foreground color to produce readable contrast against its\n' +
    ' background color.',
  ' Tests that BlendForMinContrast() supports optional args, which can be used to\n' +
    ' blend toward a specific foreground color and with a specific minimum contrast\n' +
    ' ratio.',
  ' Tests that BlendForMinContrastWithSelf() produces a transform that blends its\n' +
    ' input color towards the color with max contrast.',
  ' Tests that BlendTowardMaxContrast() produces a transform that blends its\n' +
    ' input color towards the color with max contrast.',
  ' Tests that ContrastInvert() produces a transform that outputs a color with at\n' +
    ' least as much contrast, but against the opposite endpoint.',
  ' Tests that DeriveDefaultIconColor() produces a transform that changes its\n' +
    ' input color.',
  ' Tests that initializing a transform from a color produces a transform that\n' +
    ' ignores the input color and always outputs a specified SkColor.',
  ' Tests that a transform created from a ColorId produces a transform that\n' +
    ' ignores the input color and always outputs a specified result color.',
  ' Tests that FromTransformInput() returns its input color unmodified.',
  ' Tests that GetColorWithMaxContrast() produces a transform that changes white\n' +
    ' to the darkest color.',
  ' Tests that GetResultingPaintColor() produces a transform that composites\n' +
    ' opaquely.',
  ' Tests that SelectBasedOnDarkInput() produces a transform that toggles between\n' +
    ' inputs based on whether the input color is dark.',
  " Tests that SetAlpha() produces a transform that sets its input's alpha.",
  ' Tests that PickGoogleColor() produces a transform that picks a Google color\n' +
    ' with appropriate contrast against the specified background.',
  ' Tests that PickGoogleColorTwoBackgrounds() produces a transform that picks a\n' +
    ' Google color with appropriate contrast against both specified backgrounds.',
  ' Tests that HSLShift() produces a transform that applies the given HSL shift\n' +
    ' to the given input color.'
]
core_default_color_mixer.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
css_system_color_mixer.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
palette.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
palette_factory.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the hue angle for `source_color` modified by the closest match in\n' +
    ' `hues_to_rotations`.',
  ' Returns the chroma value from `hues_to_chroma` given a `source_hue`. If the\n' +
    ' `source_hue` is out of range, the first entry in `hues_to_chroma` is\n' +
    ' returned.',
  ' Specifies the `Transform`s relative to the source color that generates a\n' +
    ' Palette.',
  ' Returns a `TonalPalette` constructed from `hue` transformed by `transform`.',
  ' Returns a `base::flat_map` from two arrays of equal size.'
]
fluent_ui_color_mixer.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
material_ui_color_mixer.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This aligns with GM2 default InkDropHighlight::visible_opacity_.'
]
native_color_mixers.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ref_color_mixer.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The baseline palette for ref colors. This should be used in the absence of a\n' +
    ' defined user_color.',
  ' Adds the dynamic color palette tokens based on user_color. This is the base\n' +
    ' palette so it is independent of ColorMode.'
]
sys_color_mixer.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Sys token overrides for the non-baseline themed case.',
  ' Overrides for the grayscale baseline case.\n' +
    ' TODO(tluk): This can probably be migrated to the kMonochrome SchemeVariant\n' +
    ' when available.'
]
sys_color_mixer_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
ui_color_mixer.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
accent_color_observer.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
css_system_color_mixer_win.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Maps the native Windows system colors to their corresponding CSS system\n' +
    ' colors when in light or High Contrast mode as dark system colors are not\n' +
    ' exposed yet.'
]
native_color_mixers_win.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Maps the base set of sys color ids to appropriate platform defined high\n' +
    ' contrast colors.'
]
animation_throughput_reporter.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' AnimationTracker tracks the layer animations that are created during the\n' +
    ' lifetime of its owner AnimationThroughputReporter.\n' +
    ' Lifetime of this tracker class is a bit complicated. If there are animations\n' +
    ' to track (i.e. HasAnimationsToTrack() returns true) when the owner reporter\n' +
    ' is going away, it needs to have the same lifetime of the animations to track\n' +
    ' the performance. In such case, the owner reporter would drop the ownership\n' +
    ' and set set_should_delete() to let the tracker manages its own lifetime\n' +
    ' based on LayerAnimationObserver signals. On the other hand, if there are no\n' +
    ' animations to track, the tracker is released with its owner reporter.',
  ' static',
  ' static'
]
animation_throughput_reporter_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests animation throughput collection with implicit animation scenario.',
  ' Tests animation throughput collection with implicit animation setup before\n' +
    ' Layer is attached to a compositor.',
  ' Tests animation throughput collection with explicitly created animation\n' +
    ' sequence scenario.',
  ' Tests animation throughput collection for a persisted animator of a Layer.',
  ' Tests animation throughput not reported when animation is aborted.',
  ' Tests no report and no leak when underlying layer is gone before reporter.',
  ' Tests animation throughput not reported when detached from timeline.',
  ' Tests animation throughput not reported and no leak when animation is stopped\n' +
    ' without being attached to a root.',
  ' Tests animation throughput are reported if there was a previous animation\n' +
    ' preempted under IMMEDIATELY_ANIMATE_TO_NEW_TARGET strategy.',
  ' Tests AnimationThroughputReporter does not leak its AnimationTracker when\n' +
    ' there are existing animations but no new animation sequence starts after it\n' +
    ' is created.',
  ' Tests smoothness is not reported if the animation will not run.'
]
callback_layer_animation_observer.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
callback_layer_animation_observer_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Simple class that tracks whether callbacks were invoked and when.',
  ' A child of TestCallbacks that can explicitly delete a\n' +
    ' CallbackLayerAnimationObserver in the AnimationsStarted() or\n' +
    ' AnimationsEnded() callback.',
  ' A test specific CallbackLayerAnimationObserver that will set a bool when\n' +
    ' destroyed.',
  ' Verifies that there are not heap-use-after-free errors when an observer has\n' +
    ' its animation aborted and it gets destroyed due to a\n' +
    ' unique_ptr<CallbackLayerAnimationObserver> being assigned a new value.',
  ' Verifies that the CallbackLayerAnimationObserver is robust to explicit\n' +
    ' deletes caused as a side effect of calling the AnimationsStartedCallback()\n' +
    ' when there are no animation sequences attached. This test also guards against\n' +
    ' heap-use-after-free errors.',
  ' Verifies that the CallbackLayerAnimationObserver is robust to explicit\n' +
    ' deletes caused as a side effect of calling the AnimationsStartedCallback()\n' +
    ' when all attached animation sequences detach. This test also guards against\n' +
    ' heap-use-after-free errors.',
  ' Verifies that the CallbackLayerAnimationObserver is robust to explicit\n' +
    ' deletes caused as a side effect of calling the AnimationsStartedCallback()\n' +
    ' when there are some animation sequences attached. This test also guards\n' +
    ' against heap-use-after-free errors.',
  " Verifies that a 'true' return value for AnimationEndedCallback is ignored if\n" +
    ' the CallbackLayerAnimationObserver is explicitly deleted as a side effect of\n' +
    ' calling the AnimationEndedCallback. This test also guards against\n' +
    ' heap-use-after-free errors.'
]
canvas_painter.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
canvas_painter_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
clip_recorder.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
closure_animation_observer.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
compositor.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used to hold on to IssueExternalBeginFrame arguments if\n' +
    " |external_begin_frame_controller_| isn't ready yet.",
  ' TODO(bokan): These calls should be delegated through the\n' +
    " scroll_input_handler_ so that we don't have to keep a pointer to the\n" +
    ' cc::InputHandler in this class.',
  ' static'
]
compositor_animation_observer.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Setting to false disable the check globally.',
  ' This warning should only be fatal on non-official DCHECK builds that are not\n' +
    ' known to be runtime-slow. Slow builds for this purpose are debug builds\n' +
    ' (!NDEBUG) and any sanitizer build.',
  ' Log animations that took more than 1m.  When DCHECK is enabled, it will fail\n' +
    ' with DCHECK error.'
]
compositor_lock.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
compositor_lock_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' For tests that control time.'
]
compositor_switches.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Forces tests to produce pixel output when they normally wouldn't.",
  ' If enabled, all draw commands recorded on canvas are done in pixel aligned\n' +
    ' measurements. This also enables scaling of all elements in views and layers\n' +
    ' to be done via corner points. See https://crbug.com/720596 for details.'
]
compositor_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' For tests that control time.',
  ' For tests that run on a real MessageLoop with real time.',
  ' ui::ThroughputTracker is only supported on ChromeOS',
  ' TODO(crbug.com/40467610): Flaky on windows trybots'
]
debug_utils.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
float_animation_curve_adapter.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
host_begin_frame_observer.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This may be deleted as part of `CallObservers`.'
]
layer.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40786876): temporary while tracking down crash.\n' +
    ' Minimum interval between no mutation debug dumps.',
  ' Manages the subpixel offset data for a given set of parameters (device\n' +
    ' scale factor and DIP offset from parent layer).',
  ' static',
  ' Note: The code that sets this flag would be responsible to unset it on that\n' +
    ' Layer. We do not want to clone this flag to a cloned layer by accident,\n' +
    ' which could be a supprise. But we want to preserve it after switching to a\n' +
    ' new cc::Layer. There could be a whole subtree and the root changed, but does\n' +
    ' not mean we want to treat the cache all different.',
  ' Note: The code that sets this flag would be responsible to unset it on that\n' +
    ' Layer. We do not want to clone this flag to a cloned layer by accident,\n' +
    ' which could be a supprise. But we want to preserve it after switching to a\n' +
    ' new cc::Layer. There could be a whole subtree and the root changed, but does\n' +
    ' not mean we want to treat the trilinear filtering all different.'
]
layer_animation_element.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Pause -----------------------------------------------------------------------',
  ' InterpolatedTransformTransition ---------------------------------------------',
  ' BoundsTransition ------------------------------------------------------------',
  ' VisibilityTransition --------------------------------------------------------',
  ' BrightnessTransition --------------------------------------------------------',
  ' GrayscaleTransition ---------------------------------------------------------',
  ' ColorTransition -------------------------------------------------------------',
  ' ClipRectTransition ----------------------------------------------------------',
  ' RoundedCornersTransition ----------------------------------------------------',
  ' GradientMaskTransition ----------------------------------------------------',
  ' ThreadedLayerAnimationElement -----------------------------------------------',
  ' ThreadedOpacityTransition ---------------------------------------------------',
  ' ThreadedTransformTransition -------------------------------------------------',
  ' LayerAnimationElement::TargetValue ------------------------------------------',
  ' LayerAnimationElement -------------------------------------------------------',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
layer_animation_element_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verify that the TargetValue(TestLayerAnimationDelegate*) constructor\n' +
    ' correctly assigns values. See www.crbug.com/483134.',
  ' Check that the transformation element progresses the delegate as expected and\n' +
    ' that the element can be reused after it completes.',
  ' Check that the bounds element progresses the delegate as expected and\n' +
    ' that the element can be reused after it completes.',
  ' Check that the opacity element progresses the delegate as expected and\n' +
    ' that the element can be reused after it completes.',
  ' Check that the visibility element progresses the delegate as expected and\n' +
    ' that the element can be reused after it completes.',
  ' Check that the Brightness element progresses the delegate as expected and\n' +
    ' that the element can be reused after it completes.',
  ' Check that the Grayscale element progresses the delegate as expected and\n' +
    ' that the element can be reused after it completes.',
  ' Check that the pause element progresses the delegate as expected and\n' +
    ' that the element can be reused after it completes.',
  ' Check that the ClipRect element progresses the delegate as expected and\n' +
    ' that the element can be reused after it completes.',
  ' Check that the RoundedCorners element progresses the delegate as expected and\n' +
    ' that the element can be reused after it completes.',
  ' Check that the GradientMask element progresses the delegate as expected and\n' +
    ' that the element can be reused after it completes.',
  ' Check that a threaded opacity element updates the delegate as expected when\n' +
    ' aborted.',
  ' Check that a threaded transform element updates the delegate as expected when\n' +
    ' aborted.',
  ' Check that an opacity element is not threaded if the start and target values\n' +
    ' are the same.'
]
layer_animation_observer.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' LayerAnimationObserver',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' ImplicitAnimationObserver'
]
layer_animation_sequence.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
layer_animation_sequence_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Check that the sequence behaves sanely when it contains no elements.',
  ' Check that the sequences progresses the delegate as expected when it contains\n' +
    ' a single non-threaded element.',
  ' Check that the sequences progresses the delegate as expected when it contains\n' +
    ' a single threaded element.',
  ' Check that the sequences progresses the delegate as expected when it contains\n' +
    ' multiple elements. Note, see the layer animator tests for repeating\n' +
    ' sequences.',
  ' Check that a sequence can still be aborted if it has repeated many times.',
  " Check that a sequence can be 'fast-forwarded' to the end and the target set.\n" +
    ' Also check that this has no effect if the sequence is repeating.',
  ' TODO(b/352744702): Remove this test or convert to DEATH test after\n' +
    ' https://crrev.com/c/5713998 has rolled out and any cases like this have been\n' +
    ' removed.',
  " Check that the sequence doesn't get stuck in an infinite loop when it's\n" +
    ' repeating and has a total duration of zero.'
]
layer_animator.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' LayerAnimator public --------------------------------------------------------',
  ' static',
  ' static',
  ' This macro provides the implementation for the setter and getter (well,\n' +
    ' the getter of the target value) for an animated property. For example,\n' +
    ' it is used for the implementations of SetTransform and GetTargetTransform.\n' +
    ' It is worth noting that SetFoo avoids invoking the usual animation machinery\n' +
    ' if the transition duration is zero -- in this case we just set the property\n' +
    ' on the layer animation delegate immediately.',
  ' LayerAnimator protected -----------------------------------------------------',
  ' LayerAnimator private -------------------------------------------------------'
]
layer_animator_collection.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
layer_animator_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Converts |color| to a string. Each component of the color is separated by a\n' +
    ' space and the order if A R G B.',
  ' Creates vector with two LayerAnimationSequences, based on |first| and\n' +
    ' |second| layer animation elements.',
  ' Creates a default animator with timers disabled for test. |delegate| and\n' +
    ' |observer| are attached if non-null.',
  ' Creates a default animator with timers disabled for test. |delegate| is\n' +
    ' attached if non-null.',
  ' Creates a default animator with timers disabled for test.',
  ' Creates an implicit animator with timers disabled for test. |delegate| and\n' +
    ' |observer| are attached if non-null.',
  ' Creates an implicit animator with timers disabled for test. |delegate| is\n' +
    ' attached if non-null.',
  ' Creates an implicit animator with timers disabled for test.',
  ' When notified that an animation has ended, stops all other animations.',
  ' When notified that an animation has started, aborts all animations.',
  ' The test layer animation sequence updates a live instances count when it is\n' +
    ' created and destroyed.',
  ' Tracks the number of calls to the LayerAnimationObserver overrides and fails\n' +
    ' CHECKS if the counts are inconsistent, e.g. the number of started sequences\n' +
    ' is greater than the number of attached sequences.',
  ' Checks that setting a property on an implicit animator causes an animation to\n' +
    ' happen.',
  ' Checks that if the animator is a default animator, that implicit animations\n' +
    ' are not started.',
  ' Checks that StopAnimatingProperty stops animation for that property, and also\n' +
    ' skips the stopped animation to the end.',
  ' Checks that multiple running animations for separate properties can be\n' +
    ' stopped simultaneously and that all animations are advanced to their target\n' +
    ' values.',
  ' Checks that multiple running animations for separate properties can be\n' +
    ' stopped simultaneously and that aborted animations are NOT advanced to their\n' +
    ' target values.',
  ' Schedule a non-threaded animation that can run immediately. This is the\n' +
    ' trivial case and should result in the animation being started immediately.',
  ' Schedule a threaded animation that can run immediately.',
  ' Schedule two non-threaded animations on separate properties. Both animations\n' +
    ' should start immediately and should progress in lock step.',
  ' Schedule a threaded and a non-threaded animation on separate properties. Both\n' +
    ' animations should progress in lock step.',
  ' Schedule two animations on the same property. In this case, the two\n' +
    ' animations should run one after another.',
  " Schedule [{g}, {g,b}, {b}] and ensure that {b} doesn't run right away. That\n" +
    ' is, ensure that all animations targetting a particular property are run in\n' +
    ' order.',
  ' Schedule {g} and then schedule {g} and {b} together. In this case, since\n' +
    ' ScheduleTogether is being used, the bounds animation should not start until\n' +
    ' the second grayscale animation starts.',
  ' Start non-threaded animation (that can run immediately). This is the trivial\n' +
    ' case (see the trival case for ScheduleAnimation).',
  ' Start threaded animation (that can run immediately).',
  ' Preempt by immediately setting new target.',
  ' Preempt by animating to new target, with a non-threaded animation.',
  ' Preempt by animating to new target, with a threaded animation.',
  ' Preempt by enqueuing the new animation.',
  ' Start an animation when there are sequences waiting in the queue. In this\n' +
    ' case, all pending and running animations should be finished, and the new\n' +
    ' animation started.',
  '-------------------------------------------------------\n' +
    ' Preempt by immediately setting new target.',
  ' Preempt by animating to new target.',
  ' Preempt a threaded animation by animating to new target.',
  ' Preempt by enqueuing the new animation.',
  ' Start an animation when there are sequences waiting in the queue. In this\n' +
    ' case, all pending and running animations should be finished, and the new\n' +
    ' animation started.',
  '-------------------------------------------------------\n' +
    ' Test that non-threaded cyclic sequences continue to animate.',
  ' Test that threaded cyclic sequences continue to animate.',
  ' Tests that an observer added to a scoped settings object is still notified\n' +
    ' when the object goes out of scope.',
  ' Tests that caching render surface added to a scoped settings object is still\n' +
    ' reset when the object goes out of scope.',
  ' Tests that caching render surface added to a scoped settings object will not\n' +
    ' crash when the layer was destroyed.',
  ' Tests that caching render surface added to two scoped settings objects is\n' +
    ' still reset when animation finishes.',
  ' Tests that deferred painting request added to a scoped settings object is\n' +
    ' still reset when the object goes out of scope.',
  ' Tests that deferred painting request is added to child layers and will be\n' +
    ' removed even the child layer was reparented.',
  ' Tests that deffered paint request added to two scoped settings objects is\n' +
    ' still reset when animation finishes.',
  ' Tests that deferred paint request added to a scoped settings object will\n' +
    ' not crash when the layer was destroyed.',
  ' Tests that trilinear filtering request added to a scoped settings object is\n' +
    ' still reset when the object goes out of scope.',
  ' Tests that trilinear filtering request added to a scoped settings object will\n' +
    ' not crash when the layer was destroyed.',
  ' Tests that trilinear filtering request added to two scoped settings objects\n' +
    ' is still reset when animation finishes.',
  ' Tests that an observer added to a scoped settings object is still notified\n' +
    ' when the object goes out of scope due to the animation being interrupted.',
  ' Tests that LayerAnimator is not deleted after the animation completes as long\n' +
    ' as there is a live ScopedLayerAnimationSettings object wrapped around it.',
  ' Tests that an observer added to a scoped settings object is not notified\n' +
    ' when the animator is destroyed unless explicitly requested.',
  ' This checks that if an animation is deleted due to a callback, that the\n' +
    ' animator does not try to use the deleted animation. For example, if we have\n' +
    ' two running animations, and the first finishes and the resulting callback\n' +
    ' causes the second to be deleted, we should not attempt to animate the second\n' +
    ' animation.',
  ' Ensure that stopping animation in a bounds change does not crash and that\n' +
    ' animation gets stopped correctly.\n' +
    ' This scenario is possible when animation is restarted from inside a\n' +
    ' callback triggered by the animation progress.',
  ' Similar to the ObserverDeletesAnimationsOnEnd test above except that it\n' +
    ' tests the behavior when the OnLayerAnimationAborted() callback causes\n' +
    " all of the animator's other animations to be deleted.",
  ' Check that setting a property during an animation with a default animator\n' +
    ' cancels the original animation.',
  " Tests that the preemption mode IMMEDIATELY_SET_NEW_TARGET, doesn't cause the\n" +
    ' second sequence to be leaked.',
  ' Verifies GetTargetOpacity() works when multiple sequences are scheduled.',
  ' Verifies GetTargetBrightness() works when multiple sequences are scheduled.',
  ' Verifies GetTargetGrayscale() works when multiple sequences are scheduled.',
  ' Verifies color property is modified appropriately.',
  ' Verifies SchedulePauseForProperties().',
  ' Verifies that IsAnimatingOnePropertyOf() returns true iff at least one of the\n' +
    ' input properties is animated.',
  ' Verifies that sequences are removed from the animation queue prior to be\n' +
    ' notified of being started. This will allow observers to abort animations in\n' +
    ' the OnLayerAnimationStarted() callback without triggering a sequence to be\n' +
    ' started a second time.',
  " Verifies that an observer is notified each time a LayerAnimationSequence's\n" +
    ' cycle has ended.',
  ' Verifies the LayerAnimatorObserver notification order for an animation\n' +
    ' sequence that completes successfully.',
  ' Verifies the LayerAnimatorObserver notification order for an animation\n' +
    ' sequence that is aborted after being scheduled.',
  ' Verifies the LayerAnimatorObserver notification order for an animation\n' +
    ' sequence that is queued up after another sequence that\n' +
    ' completes successfully.',
  ' Verifies the LayerAnimatorObserver notification order for an animation\n' +
    ' sequence that pre-empts another sequence.',
  ' Verifies that an observer can be attached to a LayerAnimationSequence that\n' +
    ' has already been scheduled.'
]
layer_delegate.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
layer_owner.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
layer_owner_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An animation observer that confirms upon animation completion, that the\n' +
    ' compositor is not null.',
  ' Test fixture for LayerOwner tests that require a ui::Compositor.',
  ' Tests that recreating the root layer, while one of its children is animating,\n' +
    ' properly updates the compositor. So that compositor is not null for observers\n' +
    ' of animations being cancelled.',
  ' Tests that recreating a non-root layer, while one of its children is\n' +
    ' animating, properly updates the compositor. So that compositor is not null\n' +
    ' for observers of animations being cancelled.',
  ' Tests that if LayerOwner-derived class destroys layer, then\n' +
    " LayerAnimator's animation becomes detached from compositor timeline.",
  ' Tests that if we run threaded opacity animation on already added layer\n' +
    " then LayerAnimator's animation becomes attached to timeline.",
  ' Test if recreating a layer in OnLayerBoundsChanged will not\n' +
    ' cause a use-after-free.'
]
layer_tree_owner.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Deletes |layer| and all its descendants.'
]
layer_type.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
layer_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' There are three test classes in here that configure the Compositor and\n' +
    " Layer's slightly differently:\n" +
    ' - LayerWithNullDelegateTest uses NullLayerDelegate as the LayerDelegate. This\n' +
    '   is typically the base class you want to use.\n' +
    ' - LayerWithDelegateTest uses LayerDelegate on the delegates.\n' +
    ' - LayerWithRealCompositorTest when a real compositor is required for testing.\n' +
    '    - Slow because they bring up a window and run the real compositor. This\n' +
    '      is typically not what you want.',
  ' LayerDelegate that paints colors to the layer.',
  ' LayerDelegate that verifies that a layer was asked to update its canvas.',
  ' The simplest possible layer delegate. Does nothing.',
  ' Remembers if it has been notified.',
  ' An animation observer that invokes a callback when the animation ends.',
  ' Create this hierarchy:\n' +
    ' L1 - red\n' +
    ' +-- L2 - blue\n' +
    ' |   +-- L3 - yellow\n' +
    ' +-- L4 - magenta',
  ' L1\n  +-- L2',
  ' L1\n  +-- L2\n       +-- L3',
  ' Tests that scheduling paint on a layer with a mask updates the mask.',
  ' Tests no-texture Layers.\n' +
    ' Create this hierarchy:\n' +
    ' L1 - red\n' +
    ' +-- L2 - NO TEXTURE\n' +
    ' |   +-- L3 - yellow\n' +
    ' +-- L4 - magenta',
  ' Tests for SurfaceLayer cloning and mirroring. This tests certain properties\n' +
    ' are preserved.',
  ' Various visible/drawn assertions.',
  ' Various visible/drawn assertions.',
  ' Checks that stacking-related methods behave as advertised.',
  ' Verifies SetBounds triggers the appropriate painting/drawing.',
  ' Checks that the damage rect for a TextureLayer is empty after a commit.',
  ' Tests that in deferred paint request, the layer damage will be accumulated.',
  ' Tests that Layer::SendDamagedRects() always recurses into its mask layer, if\n' +
    " present, even if it shouldn't send its damaged regions itself.",
  ' Tests that mask layer could be set to different layers and released\n' +
    ' without leaving dangling references.',
  ' Verifies that when a layer is reflecting other layers, mirror counts of\n' +
    ' reflected layers are updated properly.',
  ' Verifies that when a layer is reflecting another layer, its size matches the\n' +
    ' size of the reflected layer.',
  ' Checks that pixels are actually drawn to the screen with a read back.',
  ' Checks that drawing a layer with transparent pixels is blended correctly\n' +
    ' with the lower layer.',
  ' Checks that using the AlphaShape filter applied to a layer with\n' +
    ' transparency, alpha-blends properly with the layer below.',
  ' Checks the logic around Compositor::SetRootLayer and Layer::SetCompositor.',
  ' Checks that compositor observers are notified when:\n' +
    ' - DrawTree is called,\n' +
    ' - After ScheduleDraw is called, or\n' +
    ' - Whenever SetBounds, SetOpacity or SetTransform are called.\n' +
    ' TODO(vollick): could be reorganized into compositor_unittest.cc\n' +
    ' Flaky on Windows. See https://crbug.com/784563.\n' +
    ' Flaky on Linux tsan. See https://crbug.com/834026.',
  ' Checks that modifying the hierarchy correctly affects final composite.',
  ' TODO(crbug.com/40280155): Flaky on fuchsia-arm64 builds. Re-enable this test.',
  ' Checks that basic background blur is working.',
  ' TODO(crbug.com/40280155): Flaky on fuchsia-arm64 builds. Re-enable this test.',
  ' Checks that background blur bounds rect gets properly updated when device\n' +
    ' scale changes.',
  ' Opacity is rendered correctly.\n' +
    ' Checks that modifying the hierarchy correctly affects final composite.',
  ' Verifies that if SchedulePaint is invoked during painting the layer is still\n' +
    ' marked dirty.',
  ' Verifies that when changing bounds on a layer that is invisible, and then\n' +
    ' made visible, the right thing happens:\n' +
    ' - if just a move, then no painting should happen.\n' +
    ' - if a resize, the layer should be repainted.',
  ' Verifies that layer filters still attached after changing implementation\n' +
    ' layer.',
  ' Tests Layer::AddThreadedAnimation and Layer::RemoveThreadedAnimation.',
  " Tests that in-progress threaded animations complete when a Layer's\n" +
    ' cc::Layer changes.',
  ' Tests that when a LAYER_SOLID_COLOR has its CC layer switched, that\n' +
    ' opaqueness and color set while not animating, are maintained.',
  ' Tests that when a LAYER_SOLID_COLOR has its CC layer switched during an\n' +
    ' animation of its opaquness and color, that both the current values, and the\n' +
    ' targets are maintained.',
  ' Tests that when a layer with cache_render_surface flag has its CC layer\n' +
    ' switched, that the cache_render_surface flag is maintained.',
  ' Tests that when a layer with trilinear_filtering flag has its CC layer\n' +
    ' switched, that the trilinear_filtering flag is maintained.',
  ' Tests that when a layer with masks_to_bounds flag has its CC layer switched,\n' +
    ' that the masks_to_bounds flag is maintained.',
  ' Tests that no crash happens when switching cc layer with an animation\n' +
    ' observer that deletes the layer itself.',
  ' Triggerring a OnDeviceScaleFactorChanged while a layer is undergoing\n' +
    ' transform animation, may cause a crash. This is because an animation observer\n' +
    ' may mutate the tree, e.g. deleting a layer, changing ancestor z-order etc,\n' +
    ' which breaks the tree traversal and might lead to a use-after-free seg fault.',
  ' Tests that no crash when parent/child layer is released by an animation\n' +
    ' observer of the child layer bounds animation.',
  ' Tests that the animators in the layer tree is added to the\n' +
    ' animator-collection when the root-layer is set to the compositor.',
  ' Tests that adding/removing a layer adds/removes the animator from its entire\n' +
    " subtree from the compositor's animator-collection.",
  ' A LayerAnimationObserver that removes a child layer from a parent when an\n' +
    ' animation completes.',
  ' Verifies that empty LayerAnimators are not left behind when removing child\n' +
    ' Layers that own an empty LayerAnimator. See http://crbug.com/552037.',
  ' Verify that LayerDelegate::OnLayerBoundsChanged() is called when the bounds\n' +
    ' are set without an animation.',
  ' Verify that LayerDelegate::OnLayerBoundsChanged() is called at every step of\n' +
    ' a bounds animation.',
  ' Verify that LayerDelegate::OnLayerTransformed() is called when the transform\n' +
    ' is set without an animation.',
  ' Verify that LayerDelegate::OnLayerTransformed() is not called when the\n' +
    " transform isn't actually changed.",
  ' Verify that LayerDelegate::OnLayerTransformed() is called at every step of a\n' +
    ' non-threaded transform transition.',
  ' Verify that LayerDelegate::OnLayerTransformed() is called at the end of a\n' +
    ' threaded transform transition.',
  ' Verify that LayerDelegate::OnLayerOpacityChanged() is called when the opacity\n' +
    ' is set without an animation.',
  ' Verify that LayerDelegate::OnLayerOpacityChanged() is called at the beginning\n' +
    ' and at the end of a threaded opacity animation.',
  ' Verify that LayerDelegate::OnLayerAlphaShapeChanged() is called when the\n' +
    ' alpha shape of a layer is set.'
]
scroll_input_handler.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a cc::ScrollState from a ui::ScrollEvent, populating fields general\n' +
    ' to all event phases. Take care not to put deltas on beginning/end updates,\n' +
    " since InputHandler will DCHECK if they're present."
]
paint_cache.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
paint_context.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
paint_recorder.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class records a reference to the context, the canvas returned\n' +
    ' by its recorder_, and the cache. Thus all 3 of these must remain\n' +
    ' valid for the lifetime of this object.\n' +
    " If a |cache| is provided, this records into the |cache|'s PaintOpBuffer\n" +
    ' directly, then appends that to the |context|. If not, then this records\n' +
    " to the |context|'s PaintOpBuffer.",
  ' TODO(malaykeshav): The scaling of recording size needs to be handled case\n' +
    ' by case and the decision to perform the scale should be moved to the caller.'
]
presentation_time_recorder.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' PresentationTimeRecorderInternal -------------------------------------------',
  ' PresentationTimeRecorder ---------------------------------------------------',
  ' static',
  ' PresentationTimeHistogramRecorder ------------------------------------------',
  ' BucketParams ------------------------------------------',
  ' static',
  ' TestApi --------------------------------------------------------------------'
]
presentation_time_recorder_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
recyclable_compositor_mac.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a task runner for creating a ui::Compositor. This allows compositor\n' +
    " tasks to be funneled through ui::WindowResizeHelper's task runner to allow\n" +
    ' resize operations to coordinate with frames provided by the GPU process.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' RecyclableCompositorMac'
]
run_all_unittests.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_animation_duration_scale_mode.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
scoped_layer_animation_settings.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ScopedLayerAnimationSettings ------------------------------------------------'
]
animation_throughput_reporter_test_base.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
begin_main_frame_waiter.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
direct_layer_tree_frame_sink.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
draw_waiter_for_test.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
fake_context_factory.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
in_process_context_factory.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This should not conflict with ids from RenderWidgetHostImpl or WindowService.',
  ' TODO(rivr): This class is managed heavily by InProcessTransportFactory.\n' +
    ' Move some of the logic in here and simplify the interface.'
]
layer_animation_observer_test_api.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
layer_animation_stopped_waiter.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
layer_animator_test_controller.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
multi_layer_animator_test_controller.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_compositor_host.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_compositor_host_android.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_compositor_host_ozone.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Stub implementation of PlatformWindowDelegate that stores the\n' +
    ' AcceleratedWidget.',
  ' static'
]
test_compositor_host_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_context_factories.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_layer_animation_delegate.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_layer_animation_observer.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_layers.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_suite.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' gn check complains on other platforms, because //gpu/ipc/service:service\n' +
    ' is added to dependencies only for mac.'
]
test_utils.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(avallee): Use macros in ui/gfx/geometry/test/geometry_util.h.'
]
throughput_report_checker.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
throughput_tracker.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
throughput_tracker_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
total_animation_throughput_reporter.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
total_animation_throughput_reporter_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the delta from current time to the (start + duration) time.\n' +
    ' This is used to compute how long it should wait from now to reach\n' +
    ' the `start + duration` time.',
  ' Tests the stopping last animation will trigger the animation.',
  ' Tests the longest animation will trigger the report.\n' +
    ' TODO(crbug.com/40771278): Test is flaky.',
  ' Tests the longest animation on a single layer will triger the report.',
  ' Tests adding new animation will extends the duration.\n' +
    ' TODO(crbug.com/40770648): Test is flaky.',
  ' Tests removing last animation will call report callback.',
  ' Make sure the reporter can start measuring even if the animation\n' +
    ' has started.',
  ' Tests the reporter is called multiple times for persistent animation.',
  ' Make sure the once reporter is called only once.',
  ' One reporter marked as "should_delete" should be deleted when\n reported.'
]
transform_animation_curve_adapter.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
transform_animation_curve_adapter_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
transform_recorder.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
shadow.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Duration for opacity animation in milliseconds.',
  ' -----------------------------------------------------------------------------\n' +
    ' Shadow::ShadowLayerOwner:',
  ' -----------------------------------------------------------------------------\n' +
    ' Shadow:'
]
shadow_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A specific elevation used for testing EvictUniquelyOwnedDetail.',
  ' Calculates the minimum shadow content size for given elevation and corner\n' +
    ' radius.',
  ' Test if the proper content bounds is calculated based on the current style.',
  " Test if the shadow's layer bounds are modified, setting the same content\n" +
    ' bounds can reset the layer bounds.',
  ' Test that the elevation is reduced when the contents are too small to handle\n' +
    ' the full elevation.',
  ' Test that rounded corner radius is handled correctly.',
  ' Test that the uniquely owned shadow image is evicted from the cache when new\n' +
    ' shadow details are created.',
  ' Tests the shadow colors are updated when setting elevation to colors map.'
]
accelerator_util.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This variable tracks whether the forced device scale factor switch needs to\n' +
    ' be read from the command line, i.e. if it is set to -1 then the command line\n' +
    ' is checked.',
  ' This variable caches the forced device scale factor value which is read off\n' +
    ' the command line. If the cache is invalidated by setting this variable to\n' +
    ' -1.0, we read the forced device scale factor again.',
  ' An allowance error epsilon caused by fractional scale factor to produce\n' +
    ' expected DP display size.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
display_change_notifier.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_change_notifier_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_features.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Enables the rounded corners for the internal display.',
  ' Enables using HDR transfer function if the monitor says it supports it.',
  ' TODO(b/168843009): Temporarily disable on ARM while investigating.',
  ' Enables using HDR10(PQ) mode if the monitor says it supports it.',
  ' Feature to control if the CTM is dynamically set to the primary transform\n' +
    ' from plane color space to output color space.',
  ' This features allows listing all display modes of external displays in the\n' +
    ' display settings and setting any one of them exactly as requested, which can\n' +
    ' be very useful for debugging and development purposes.',
  ' TODO(gildekel): A temporary flag to control whether EDID-based (vs.\n' +
    ' port-based) display IDs are generated per display. Remove once the migration\n' +
    ' process it complete (b/193019614).',
  ' Enable display scale factor meant for OLED display.',
  ' A temporary flag to control hardware mirroring until it is decided whether to\n' +
    ' permanently remove hardware mirroring support. See crbug.com/1161556 for\n' +
    ' details.',
  ' A temporary flag to require Content Protection to use provisioned key as the\n' +
    " kernel doesn't expose that it requires this yet.(b/112172923)"
]
display_finder.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_layout.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' DisplayPlacement Positions',
  " The maximum value for 'offset' in DisplayLayout in case of outliers.  Need\n" +
    ' to change this value in case to support even larger displays.',
  ' Extracts the displays IDs list from the displays list.',
  ' Returns nullptr if display with |id| is not found.',
  ' Returns the tree depth of the display with ID |display_id| from the tree root\n' +
    ' (i.e. from the primary display).',
  ' Returns true if the child and parent displays are sharing a border that\n' +
    " matches the child's relative position to its parent.",
  ' After the layout has been applied to the |display_list| and any possible\n' +
    ' overlaps have been fixed, this function is called to update the offsets in\n' +
    ' the |placement_list|, and make sure the placement list is sorted by display\n' +
    ' IDs.',
  " Reparents |target_display| to |last_intersecting_source_display| if it's not\n" +
    ' touching with its current parent. It also handles the case if\n' +
    ' |target_display| is detached, it then reparents it to the last intersecting\n' +
    ' display.',
  ' Offsets |display| by the provided |x| and |y| values.',
  ' Calculates the amount of offset along the X or Y axes for the target display\n' +
    ' with |target_bounds| to de-intersect with the source display with\n' +
    ' |source_bounds|.\n' +
    ' These functions assume both displays already intersect.',
  ' Fixes any overlapping displays and reparents displays if necessary.',
  ' Checks if the given point is over the radius vector described by its end\n' +
    " point |vector|. The point is over a vector if it's on its positive (left)\n" +
    ' side. The method sees a point on the same line as the vector as being over\n' +
    ' the vector.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DisplayPlacement',
  ' static',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DisplayLayout',
  ' static',
  ' Creates a display::DisplayPlacement value for |rectangle| relative to the\n' +
    ' |reference| rectangle.\n' +
    ' The layout consists of two values:\n' +
    '   - position: Whether the rectangle is positioned left, right, over or under\n' +
    '     the reference.\n' +
    "   - offset: The rectangle's offset from the reference origin along the axis\n" +
    '     opposite the position direction (if the rectangle is left or right along\n' +
    '     y-axis, otherwise along x-axis).\n' +
    " The rectangle's position is calculated by dividing the space in areas defined\n" +
    " by the |reference|'s diagonals and finding the area |rectangle|'s center\n" +
    ' point belongs. If the |rectangle| in the calculated layout does not share a\n' +
    ' part of the bounds with the |reference|, the |rectangle| position in set to\n' +
    ' the more suitable neighboring position (e.g. if |rectangle| is completely\n' +
    ' over the |reference| top bound, it will be set to TOP) and the layout is\n' +
    ' recalculated with the new position. This is to handle the case where the\n' +
    " rectangle shares an edge with the reference, but it's center is not in the\n" +
    " same area as the reference's edge, e.g.\n" +
    ' +---------------------+\n' +
    ' |                     |\n' +
    ' | REFERENCE           |\n' +
    ' |                     |\n' +
    ' |                     |\n' +
    ' +---------------------+\n' +
    '                 +-------------------------------------------------+\n' +
    '                 | RECTANGLE               x                       |\n' +
    '                 +-------------------------------------------------+\n' +
    " The rectangle shares an edge with the reference's bottom edge, but its\n" +
    ' center point is in the left area.',
  ' static',
  ' static'
]
display_layout_builder.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_layout_builder_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_layout_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Makes sure that only the least significant 8 bits of the display IDs in the\n' +
    ' placement lists are used to validate their sort order.',
  ' Display Layout\n     [1]  [4]\n    [0][3]   [6]\n [2]  [5]'
]
display_list.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_list_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_observer.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_switches.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(rjkroege): Some of these have an "ash" prefix. When ChromeOS startup\n' +
    ' scripts have been updated, the leading "ash" prefix should be removed.',
  ' Enables software based mirroring.',
  " Crash the browser at startup if the display's color profile does not match\n" +
    " the forced color profile. This is necessary on Mac because Chrome's pixel\n" +
    ' output is always subject to the color conversion performed by the operating\n' +
    ' system. On all other platforms, this is a no-op.',
  ' Force all monitors to be treated as though they have the specified color\n' +
    ' profile. Accepted values are "srgb" and "generic-rgb" (currently used by Mac\n' +
    ' layout tests) and "color-spin-gamma24" (used by layout tests).',
  ' Force rastering to take place in the specified color profile. Accepted values\n' +
    ' are the same as for the kForceDisplayColorProfile case above.',
  ' Overrides the device scale factor for the browser UI and the contents.',
  ' Sets a window size, optional position, optional scale factor and optional\n' +
    ' panel radii.\n' +
    ' "1024x768" creates a window of size 1024x768.\n' +
    ' "100+200-1024x768" positions the window at 100,200.\n' +
    ' "1024x768*2" sets the scale factor to 2 for a high DPI display.\n' +
    ' "1024x768~15|15|12|12" sets the radii of the panel corners as\n' +
    ' (upper_left=15px,upper_right=15px, lower_right=12px, upper_left=12px)\n' +
    ' "800,0+800-800x800" for two displays at 800x800 resolution.\n' +
    ' "800,0+800-800x800,0+1600-800x800" for three displays at 800x800 resolution.',
  ' Specifies the layout mode and offsets for the secondary display for\n' +
    ' testing. The format is "<t|r|b|l>,<offset>" where t=TOP, r=RIGHT,\n' +
    " b=BOTTOM and L=LEFT. For example, 'r,-100' means the secondary display\n" +
    ' is positioned on the right with -100 offset. (above than primary)',
  ' Specifies the initial screen configuration, or state of all displays, for\n' +
    ' FakeDisplayDelegate, see class for format details.',
  ' Uses the 1st display in --ash-host-window-bounds as internal display.\n' +
    ' This is for debugging on linux desktop.',
  ' Additional display properties are provided through this switch that are\n' +
    ' beyond what is available via EDID encoded as JSON. Please see\n' +
    ' `https://chromium.googlesource.com/chromiumos/platform2/+/dd10a5ae3618bb9dc5fb47ac415ebef6e9a3827d/chromeos-config/README.md#displays`\n' +
    ' for the data format.',
  ' Enables unified desktop mode.'
]
display_transform.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' https://crbug.com/517944'
]
display_util.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
virtual_display_util_linux.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Appends a new screen with `resolution` and `dpi` to the specified desktop\n' +
    ' `layout`. Arranges horizontally left to right.',
  ' static',
  ' static'
]
virtual_display_util_linux_interactive_uitest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This test suite requires the host to have special Xorg/Xrandr configuration.\n' +
    ' See: //docs/ui/display/multiscreen_testing.md'
]
apply_content_protection_task.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
apply_content_protection_task_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
configure_displays_task.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' The epsilon by which a refresh rate value may drift. For example:\n' +
    ' 239.76Hz --> 240Hz. This value was chosen with the consideration of the\n' +
    ' refresh rate value drifts presented in the "Video Formats—Video ID Code and\n' +
    ' Aspect Ratios" table on p.40 of the CTA-861-G standard.',
  ' Because we do not offer hardware mirroring, the maximal number of external\n' +
    ' displays that can be configured is limited by the number of available CRTCs,\n' +
    ' which is usually three. Since the lifetime of the UMA using this value is one\n' +
    ' year (exp. Nov. 2021), five buckets are more than enough for\n' +
    ' its histogram (between 0 to 4 external monitors).',
  ' Consolidates the UMA name prefix creation to one location, since it is used\n' +
    ' in many different call-sites.',
  ' Find the next best mode that is smaller than |request->mode|. The next best\n' +
    ' mode is found by comparing resolutions, and if those are similar, comparing\n' +
    ' refresh rates. If no mode is found, return nullptr.',
  ' Samples used to define buckets used by DisplayResolution enum.\n' +
    ' The enum is used to record screen resolution statistics.',
  ' A list of common refresh rates that are used to help fit approximate refresh\n' +
    ' rate values into one of the common refresh rate bins.',
  ' Updates properties of the |display| according to the given |request| after a\n' +
    ' successful configuration. The display ids of |display| and |request| must\n' +
    ' match.'
]
configure_displays_task_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Non-zero generic connector IDs.',
  ' Invalid PATH topology parse connector ID.',
  ' * Cases that report ConfigureDisplaysTask::SUCCESS',
  ' Tests that and an internal + one external display pass modeset. Note that\n' +
    ' this case covers an external display connected via MST as well.',
  ' Tests that one external display (with no internal display present;\n' +
    ' e.g. chromebox) pass modeset. Note that this case covers an external display\n' +
    ' connected via MST as well.',
  ' Tests that two external MST displays (with no internal display present; e.g.\n' +
    ' chromebox) pass modeset.',
  ' Although most devices do not support more than three displays in total\n' +
    ' (including the internal display), this tests that this configuration can pass\n' +
    ' all displays in a single request.',
  ' * Cases that report ConfigureDisplaysTask::ERROR',
  ' Tests that the internal display does not attempt to fallback to alternative\n' +
    ' modes upon failure to modeset with preferred mode.',
  ' Tests that an external display (with no internal display present; e.g.\n' +
    ' chromebox) attempts to fallback to alternative modes upon failure to modeset\n' +
    ' to the original request before completely failing. Note that this case\n' +
    ' applies to a single external display over MST as well.',
  ' Tests that two external non-MST displays (with no internal display present;\n' +
    ' e.g. chromebox) attempt to fallback to alternative modes upon failure to\n' +
    ' modeset to the original request before completely failing.',
  ' Tests that two external MST displays (with no internal display present; e.g.\n' +
    ' chromebox) attempt to fallback to alternative modes upon failure to modeset\n' +
    ' to the original request before completely failing.',
  ' Tests that the internal display does not attempt to fallback to alternative\n' +
    ' modes upon failure to modeset with preferred mode while an external display\n' +
    ' is present. Note that this case applies for an internal + a single external\n' +
    ' display over MST as well.',
  ' Tests that an external display attempts to fallback to alternative modes upon\n' +
    ' failure to modeset to the original request after the internal display modeset\n' +
    ' successfully. Note that this case applies for an internal + a single MST\n' +
    ' display as well.',
  ' Tests that the internal display does not attempt to fallback to alternative\n' +
    ' modes upon failure to modeset with preferred mode while two external MST\n' +
    ' displays are present.',
  ' Tests that two external MST displays attempt to fallback to alternative modes\n' +
    ' upon failure to modeset to the original request after the internal display\n' +
    ' succeeded to modeset',
  ' Tests that the internal display does not attempt to fallback to alternative\n' +
    ' modes upon failure to modeset with preferred mode while two MST and one HDMI\n' +
    ' displays are present.',
  ' Tests that two external MST displays attempt to fallback to alternative modes\n' +
    ' upon failure to modeset to the original request after the internal display\n' +
    ' succeeded to modeset.',
  ' Tests that the HDMI display attempts to fallback to alternative modes upon\n' +
    ' failure to modeset to the original request after the internal and two MST\n' +
    ' displays succeeded to modeset.',
  ' Tests that two external displays that share a bad MST hub are tested and fail\n' +
    ' together, since they are grouped under kInvalidConnectorId. Also test that\n' +
    " this does not affect the internal display's ability configured separately\n" +
    ' during retry and passes modeset.',
  ' Tests that four external displays that share two separate bad MST hubs are\n' +
    ' tested and fail together, since they are grouped under kInvalidConnectorId.\n' +
    " Also test that this does not affect the internal display's ability configured\n" +
    ' separately during retry and passes modeset.',
  ' * Cases that report ConfigureDisplaysTask::PARTIAL_SUCCESS',
  ' Tests that the last display (in order of available displays) attempts and\n' +
    ' succeeds to fallback after it fails to modeset the initial request.',
  ' Tests that the second display (in order of available displays) attempts and\n' +
    ' succeeds to fallback after it fails to modeset the initial request.',
  ' Tests that both MST displays fail initial configuration and are tested,\n' +
    ' downgraded, and eventually pass modeset as a group and separately from the\n' +
    ' internal display.',
  ' Tests that the two MST displays, and then the HDMI display fail initial\n' +
    ' configuration, are tested, downgraded, and eventually pass modeset as\n' +
    ' separate groups.',
  ' Tests a nested MST configuration in which after a successful modeset on the\n' +
    ' root branch device (i.e. two external displays connected to a single MST hub)\n' +
    ' one display is removed from the original MST hub, connected to a second MST\n' +
    ' hub together with a third display, and then the second MST hub is connected\n' +
    ' to the first. The tests ensures that the three MST displays are grouped,\n' +
    ' tested, and fallback together appropriately before passing modeset.',
  ' Tests that an internal display with one external display pass modeset\n' +
    ' asynchronously after the external display fallback once.',
  ' Tests requiring a resources cleanup for an internal display to succeed after\n' +
    " it was closed and the system bandwidth can't handle all displays at big mode."
]
content_protection_key_manager.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Length of the key as expected to come from the server.\n' +
    ' This is the same length that the kernel also expects.'
]
content_protection_key_manager_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
content_protection_manager.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' HDCP requires suppressing content within 2 seconds when authentication drops.'
]
content_protection_manager_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
default_touch_transform_setter.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_change_observer.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' The DPI threshold to determine the device scale factor.\n' +
    ' DPI higher than |dpi| will use |device_scale_factor|.',
  ' Update the list of zoom levels whenever a new device scale factor is added\n' +
    ' here. See zoom level list in /ui/display/manager/util/display_manager_util.cc',
  " Returns a list of display modes for the given |output| that doesn't exclude\n" +
    ' any mode. The returned list is sorted by size, then by refresh rate, then by\n' +
    ' is_interlaced.',
  ' static',
  ' static',
  ' static',
  ' static'
]
display_change_observer_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Make sure that when display zoom is applied, the effective device scale\n' +
    ' factor (device_scale_factor * zoomfactor) and the rational number (pixel\n' +
    ' width / logical with) is close enough (<kDeviceScaleFactorErrorTolerance).'
]
display_configurator.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns whether |display_id| can be found in |display_list|,',
  ' Returns true if a platform native |mode| is equal to a |managed_mode|.',
  ' Finds and returns a pointer to a platform native mode in the given |display|\n' +
    " snapshot's modes which exactly matches the given |managed_mode|. Returns\n" +
    ' nullptr if nothing was found.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DisplayConfigurator::DisplayLayoutManagerImpl implementation',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DisplayConfigurator implementation',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DisplayConfigurator::TestApi implementation'
]
display_configurator_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Non-zero generic connector IDs.',
  ' Expected immediate configurations should be done without any delays.',
  ' The expected configuration delay when resuming from suspend while in 2+\n' +
    ' display mode.',
  ' Abstracts waiting for the display configuration to be completed and getting\n' +
    ' the time it took to complete.',
  ' Tests that power state requests are saved after failed configuration attempts\n' +
    ' so they can be reused later: http://crosbug.com/p/31571',
  " Tests that the SetDisplayPowerState() task posted by HandleResume() doesn't\n" +
    ' use a stale state if a new state is requested before it runs:\n' +
    ' http://crosbug.com/p/32393',
  ' Tests the suspend and resume behavior when in dual or multi display modes.'
]
display_layout_store.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_manager.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The number of pixels to overlap between the primary and secondary displays,\n' +
    ' in case that the offset value is too large.',
  ' The UMA histogram that logs the types of mirror mode.',
  ' The UMA histogram that logs whether mirroring is done in hardware or\n' +
    ' software.',
  ' The UMA histogram that logs the zoom percentage level of the internal\n' +
    ' display.',
  ' Timeout in seconds after which we consider the change to the display zoom\n' +
    ' is not temporary.',
  ' Gets the next mode in |modes| in the direction marked by |up|. If trying to\n' +
    ' move past either end of |modes|, returns the same.',
  ' Gets the display |mode| for the next valid resolution. Returns false if the\n' +
    ' display is an internal display or if the DIP size cannot be found in |info|.',
  ' Returns a pointer to the ManagedDisplayInfo of the display with |id|, nullptr\n' +
    ' if the corresponding info was not found.',
  ' Validates that:\n' +
    ' - All display IDs in the |matrix| are included in the |display_info_list|,\n' +
    ' - All IDs in |display_info_list| exist in the |matrix|,\n' +
    ' - All IDs in the matrix are unique (no repeated IDs).',
  ' Defines the ranges in which the number of displays can reside as reported by\n' +
    ' UMA in the case of Unified Desktop mode or mirror mode.\n' +
    ' WARNING: These values are persisted to logs. Entries should not be\n' +
    '          renumbered and numeric values should never be reused.',
  ' Returns the display count range bucket in which |display_count| resides.',
  ' Describes the way mirror mode is implemented as reported by UMA.\n' +
    ' WARNING: These values are persisted to logs. Entries should not be renumbered\n' +
    '          and numeric values should never be reused.',
  ' Defines the types of mirror mode in which the displays connected to the\n' +
    ' device are in as reported by UMA.\n' +
    ' WARNING: These values are persisted to logs. Entries should not be renumbered\n' +
    '          and numeric values should never be reused.',
  ' Returns true if two ids has the same output index.',
  ' Uses a piecewise linear function to map a brightness percent to sdr luminance\n' +
    ' value such that [0%, 80%] maps to [5 nits, 203 nits] and\n' +
    ' [80%, 100%] maps to [203 nits, `hdr_max_lum`].',
  ' static'
]
display_manager_observer.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_port_observer.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_port_observer_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates fake DP connector sysfs directory as the following.\n' +
    '  # ls conn_path\n' +
    '  > connector_id\n' +
    '  > typec_connector\n' +
    '  # ls conn_path/typec_connector\n' +
    '  > uevent'
]
display_properties_parser.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_properties_parser_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
json_converter.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Persistent key names',
  ' DisplayPlacement key names',
  ' Returns true if\n' +
    '     The key is missing - output is left unchanged\n' +
    '     The key matches the type - output is updated to the dict.',
  ' Returns true if\n' +
    '     The key is missing - output is left unchanged\n' +
    '     The key matches the type - output is updated to the dict.',
  ' Returns true if\n' +
    '     The key is missing - output is left unchanged\n' +
    '     The key matches the type - output is updated to the dict.',
  ' Returns true if\n' +
    '     The key is missing - output is left unchanged\n' +
    '     The key matches the type - output is updated to the dict.',
  ' Returns true if\n' +
    '     The key is missing - output is left unchanged\n' +
    '     The key matches the type - output is updated to the dict.'
]
json_converter_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
managed_display_info.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' The recommended default external display DPI, only used when an external\n' +
    ' display is connected for the first time. e.g. when a 4K native mode is used\n' +
    ' when firstly connected, the content is almost certainly too small. The value\n' +
    ' comes from the metrics of currently most used external effective display DPI\n' +
    ' - Ash.Display.ExternalDisplay.ActiveEffectiveDPI.',
  ' Check the content of |spec| and fill |bounds| and |device_scale_factor|.\n' +
    ' Returns true when |bounds| is found.',
  ' Display mode list is sorted by:\n' +
    '  * the area in pixels in ascending order\n' +
    '  * refresh rate in descending order',
  ' static',
  ' static'
]
managed_display_info_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
query_content_protection_task.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
query_content_protection_task_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
action_logger.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
action_logger_util.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
fake_display_delegate.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The EDID specification marks the top bit of the manufacturer id as reserved.',
  ' A random product name hash.',
  ' Delay for Configure().'
]
fake_display_snapshot.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Get pixel pitch in millimeters from DPI.',
  " Extracts text after specified delimiter. If the delimiter doesn't appear\n" +
    ' exactly once the result will be empty and the input string will be\n' +
    ' unmodified. Otherwise, the input string will contain the text before the\n' +
    ' delimiter and the result will be the text after the delimiter.',
  ' Parses a display mode from |str| in the format HxW[%R], returning null if\n' +
    ' |str| is invalid.',
  ' Parses a list of alternate display modes, adding each new display mode to\n' +
    ' |builder|. Returns false if any of the modes are invalid.',
  ' Parses device DPI and updates |builder|. Returns false if an invalid DPI\n' +
    ' string is provided.',
  ' Parses a list of display options and set each option true on |builder|.\n' +
    ' Returns false if any invalid options are provided. If an option appears more\n' +
    ' than once it will have no effect the second time.',
  ' static'
]
fake_display_snapshot_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_display_layout_manager.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_native_display_delegate.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_device_manager_test_api.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_transform_controller_test_api.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_device_manager.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if |path| is likely a USB device.',
  ' Returns the USB association score between |display| and |device|. A score <=\n' +
    ' 0 means that there is no association.',
  ' Tries to find a USB device that best matches |display|. Returns\n' +
    ' |devices.end()| if one is not found.',
  ' Returns true if |display| is internal.',
  ' Returns true if |device| is internal.',
  ' Returns a pointer to the internal display from the list of |displays|. Will\n' +
    ' return null if there is no internal display in the list.',
  ' Clears any calibration data from |info_map| for the display identified by\n' +
    ' |display_id|.',
  ' Returns a pointer to the ManagedDisplayInfo of the display that the device\n' +
    ' identified by |identifier| should be associated with. Returns |nullptr| if\n' +
    ' no match is found. |displays| should be the list of active displays.',
  ' Returns a set of TouchDeviceIdentifiers (sans their port information) that\n' +
    ' are associated with more than 1 touch device from the list |devices|.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TouchDeviceIdentifier',
  ' static',
  ' static',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TouchCalibrationData',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TouchDeviceManager',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TouchDeviceManager\n' +
    ' Touch screen association logic',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TouchDeviceManager\n' +
    ' Managing Touch device calibration data'
]
touch_device_manager_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verify that if there are a lot of touchscreens, they will all get associated\n' +
    ' with a display.',
  ' crbug.com/515201',
  ' Tests that when a touch device is re-associated, the old calibration data is\n' +
    ' not wiped out.'
]
touch_transform_controller.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Given an array of touch point and display point pairs, this function computes\n' +
    ' and returns the constants(defined below) using a least fit algorithm.\n' +
    ' If (xt, yt) is a touch point then its corresponding (xd, yd) would be defined\n' +
    ' by the following 2 equations:\n' +
    ' xd = xt * A + yt * B + C\n' +
    ' yd = xt * D + yt * E + F\n' +
    ' This function computes A, B, C, D, E and F and sets |ctm| with the calibrated\n' +
    ' transform matrix. In case the computation fails, the function will return\n' +
    ' false.\n' +
    ' See http://crbug.com/672293',
  ' Returns an uncalibrated touch transform.',
  " This is to compute the scale ratio for the TouchEvent's radius. The\n" +
    ' configured resolution of the display is not always the same as the touch\n' +
    " screen's reporting resolution, e.g. the display could be set as\n" +
    ' 1920x1080 while the touchscreen is reporting touch position range at\n' +
    ' 32767x32767. Touch radius is reported in the units the same as touch position\n' +
    " so we need to scale the touch radius to be compatible with the display's\n" +
    ' resolution. We compute the scale as\n' +
    ' sqrt of (display_area / touchscreen_area)'
]
touch_transform_controller_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Checks if the touch input has been calibrated properly. The input is said to\n' +
    ' be calibrated if any touch input is transformed to the correct corresponding\n' +
    ' display point within an error delta of |max_error_delta.width()| along the X\n' +
    ' axis and |max_error_delta.height()| along the Y axis;'
]
update_display_configuration_task.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Move all internal panel displays to the front of the display list. Otherwise,\n' +
    ' the list remains in order.'
]
update_display_configuration_task_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Non-zero generic connector IDs.'
]
display_manager_test_util.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Use larger than max int to catch overflow early.'
]
display_manager_test_util_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Use larger than max int to catch overflow early. This should be equal to the\n' +
    ' same name constant in display_util.cc.'
]
display_manager_util.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_manager_util_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_color_management_mojom_traits.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static'
]
display_configuration_params_mojom_traits.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
display_constants_mojom_traits.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
display_layout_mojom_traits.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_mode_mojom_traits.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
display_mojom_traits.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_mojom_traits_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test StructTrait serialization and deserialization for copyable type. |input|\n' +
    ' will be serialized and then deserialized into |output|.',
  ' Test StructTrait serialization and deserialization for move only type.\n' +
    ' |input| will be serialized and then deserialized into |output|.',
  ' One display mode, current and native mode nullptr.',
  ' One display mode that is the native mode and no current mode.',
  ' Multiple display modes, both native and current mode set.'
]
display_snapshot_mojom_traits.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the index of |mode| in |modes| or not found.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
gamma_ramp_rgb_entry_mojom_traits.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
screen_info_mojom_traits.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
screen_infos_mojom_traits.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
screen_infos_mojom_traits_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_display_for_new_windows.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
screen.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' TODO(nickdiego): GetDisplayNearestWindow is supposed to always return a valid\n' +
    ' display per its description, though there are call-sites arguably handling\n' +
    ' this case, so keep it here for now and revisit later.'
]
screen_android.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
screen_aura.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
screen_base.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
screen_info.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a debug string for the orientation type.'
]
screen_infos.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
screen_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This unit test is a cross-platform replication of some Fuchsia unit tests\n' +
    " which have no displays (and don't need displays) but also need to have\n" +
    ' this function return non-empty ScreenInfos.'
]
tablet_state.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_manager_test_api.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Indicates the default maximum of displays that chrome device can support.',
  ' Gets the display |mode| for |resolution|. Returns false if no display\n' +
    ' mode matches the resolution, or the display is an internal display.'
]
display_matchers.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Matcher to check DisplayMode size and refresh rate.'
]
display_test_util.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_screen.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
virtual_display_util_stub.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Stub definition for unimplemented platforms to prevent linker errors.',
  ' static'
]
display_color_management.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' static',
  ' static',
  ' static'
]
display_config.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_configuration_params.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_constants.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_mode.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_snapshot.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The display serial number beginning byte position and its length in the\n' +
    ' EDID number as defined in the spec.\n' +
    ' https://en.wikipedia.org/wiki/Extended_Display_Identification_Data',
  ' static'
]
native_display_delegate.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
unified_desktop_utils.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines a row and column indices of a cell in the layout matrix.',
  ' Validates that the display placements defines a graph where there is a path\n' +
    ' from each display to the primary display (root) and there are no cycles or\n' +
    ' unparented displays.',
  ' Builds and returns the Unified Desktop layout matrix given the display\n' +
    ' |layout|. This function must only be called on an already-validated |layout|.\n' +
    ' Returns an empty matrix if an error occurs.'
]
unified_desktop_utils_unittests.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_util.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' A list of bogus sizes in mm that should be ignored.\n' +
    ' See crbug.com/136533. The first element maintains the minimum\n' +
    ' size required to be valid size.',
  ' Used in the GetColorSpaceFromEdid function to collect data on whether the\n' +
    ' color space extracted from an EDID blob passed the sanity checks.',
  ' Returns true if each and all matrix values are within |epsilon| distance.',
  ' static',
  ' Constructs the raster DisplayColorSpaces out of |snapshot_color_space|,\n' +
    ' including the HDR ones if present and |allow_high_bit_depth| is set.'
]
display_util_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' HP z32x monitor.',
  ' Chromebook Samus internal display.',
  ' Chromebook Eve internal display.',
  ' Invalid EDID: too short to contain chromaticity nor gamma information.',
  ' Partially valid EDID: gamma information is marked as non existent.',
  ' Screebo display with chromaticities near P3',
  ' EDID with only DCI-P3 in colorimetry data block',
  ' Chromebook Samsung Galaxy (kohaku) that supports HDR metadata.',
  ' EDID collected in the wild: valid but with primaries in the wrong order.',
  ' EDID of |kSST210| with the order of the primaries corrected. Still invalid\n' +
    ' because the triangle of primaries is too small.',
  ' This EDID produces blue primary coordinates too far off the expected point,\n' +
    ' which would paint blue colors as purple. See https://crbug.com/809909.',
  ' This EDID contains Short Audio Descriptors in the Timing Extension\n' +
    ' Data which indicate LPCM, DTS, and DTS-HD audio.'
]
edid_parser.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' These values are persisted to logs. Entries should not be renumbered and\n' +
    ' numeric values should never be reused.',
  ' These values are persisted to logs. Entries should not be renumbered and\n' +
    ' numeric values should never be reused. This enum is used to track the\n' +
    ' availability (or lack thereof) of optional fields during EDID parsing.',
  ' These values are persisted to logs. Entries should not be renumbered and\n' +
    ' numeric values should never be reused. This enum is used to track the\n' +
    " serial number types that can be retrieved from an EDID's block zero.",
  ' static',
  ' static',
  ' static',
  ' TODO(b/316356595): Move DisplayID parsing into its own class.\n' +
    ' NOTE: Refer to figure Figure 2-1 of VESA DisplayID Standard Version 2.1 for\n' +
    ' how DisplayID Structure v2.0 is laid out as an EDID extension.',
  ' DisplayID 1.3 and 2.0 tiled display data blocks look identical, at\n' +
    ' least for the current set of fields. Consult both of the specs before\n' +
    ' parsing more fields.'
]
edid_parser_fuzzer.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Entry point for LibFuzzer.'
]
edid_parser_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' EDID with non-ascii char in display name.',
  ' Sample EDID data extracted from real devices.',
  ' Max image display is an optional field and is omitted in this display by\n' +
    ' setting bytes 21-22 to 0x00.',
  ' Serial number is in bytes 12-15 of Block 0. Serial number descriptor\n' +
    ' (tag: 0xff) is omitted and replaced by a dummy descriptor (tag: 0x10).',
  ' Serial number is unavailable. Omitted from bytes 12-15 of block zero and SN\n' +
    ' descriptor (tag: 0xff).',
  ' Week of manufacture is optional and is omitted in this display\n' +
    ' (0x00 at byte 16).',
  ' Week of manufacture can be used to signal that year of manufacture is the\n' +
    ' model year by setting byte 16 to 0xff.',
  ' The EDID info misdetecting overscan once. see crbug.com/226318',
  ' HP z32x monitor.',
  ' Chromebook Samus internal display.',
  ' Chromebook Eve internal display.',
  ' A Samsung monitor that supports HDR metadata.',
  ' EDID for Dell UP3218K, a 2x1 8K tiled display.',
  ' 16843009 == 0x01010101',
  ' Primaries coordinates ({RX, RY, GX, GY, BX, BY, WX, WY}) calculated by hand\n' +
    ' and rounded to 4 decimal places.',
  ' Chromaticity primaries in EDID are specified with 10 bits precision.'
]
gpu_info_util.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
audio_edid_scan.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  " Use 'wmi_services' to execute the WmiGetMonitorRawEEdidV1Block method of\n" +
    " 'get_edid_block' for the 'path' and 'id'.  The result will be EDID data\n" +
    " which will be appended to the 'edid_blob'.  A single device (or monitor)\n" +
    " will have one 'path' with multiple 'id' values.  To get all 'id' values\n" +
    " for a given 'path', start with 'id' of zero and stop when 'id' cannot be\n" +
    ' read.'
]
base_window_finder_win.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a BaseWindowFinderWin with the specified set of HWNDs to ignore.',
  ' static'
]
color_profile_reader.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
display_config_helper.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_info.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Return a string view from a fixed-length array representing a string, up\n' +
    ' until the first nul terminator, if any.',
  ' static'
]
dpi.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
local_process_window_finder_win.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
scaling_util.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents the amount of rotation an object has about a coordinate plane.',
  ' Returns the CoordinateRotation necessary for |ref| and |other| so that |ref|\n' +
    ' is positioned on top of |other|.',
  ' Scaled |unscaled_offset| to the same relative position on |unscaled_length|\n' +
    " based off of |unscaled_length|'s |scale_factor|.",
  ' This function rotates the rectangles so that |ref| is always on top of\n' +
    " |rect|, allowing the function to concentrate on comparing |ref|'s bottom\n" +
    " corners and |rect|'s top corners when the rects don't overlap vertically."
]
scaling_util_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
screen_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(robliao): http://crbug.com/615514 Remove when ScreenWin usage is\n' +
    ' resolved with Desktop Aura and WindowTreeHost.',
  ' Gets the DPI for a particular monitor.',
  ' Gets the raw monitor scale factor.\n' +
    ' Respects the forced device scale factor, and will fall back to the global\n' +
    ' scale factor if per-monitor DPI is not supported.',
  ' Gets a user-friendly name for a given display using EDID data. Returns an\n' +
    ' empty string if the provided path is unset/nullopt or EDID data is not\n' +
    ' available for the device.\n' +
    ' TODO(crbug.com/343872357): Check additional data sources when this is empty.',
  ' Returns true if |tech| represents an internal display (e.g. a laptop screen).\n' +
    ' DISPLAYCONFIG_TOPOLOGY_ID could be a more directly comparable data source.',
  ' Helper function to create gfx::DisplayColorSpaces from given |color_space|\n' +
    ' and |sdr_white_level| with default buffer formats for Windows.',
  ' Updates |color_spaces| for HDR and WCG content usage with appropriate color\n' +
    ' HDR spaces and given |sdr_white_level|.',
  ' Sets SDR white level and buffer formats on |display_color_spaces| when using\n' +
    ' a forced color profile.',
  ' Windows historically has had a hard time handling displays of DPIs higher\n' +
    " than 96. Handling multiple DPI displays means we have to deal with Windows'\n" +
    " monitor physical coordinates and map into Chrome's DIP coordinates.\n" +
    ' To do this, DisplayInfosToScreenWinDisplays reasons over monitors as a tree\n' +
    ' using the primary monitor as the root. All monitors touching this root are\n' +
    ' considered children.\n' +
    ' This also presumes that all monitors are connected components. By UI\n' +
    ' construction, Windows restricts the layout of monitors to connected\n' +
    ' components except when DPI virtualization is happening. When this happens, we\n' +
    ' scale relative to (0, 0).\n' +
    ' Note that this does not handle cases where a scaled display may have\n' +
    ' insufficient room to lay out its children. In these cases, a DIP point could\n' +
    ' map to multiple screen points due to overlap. The first discovered screen\n' +
    ' will take precedence.',
  ' Returns physical pixels per inch based on 96 dpi monitor.',
  ' Retrieves PPI for |monitor| based on touch pointer device handles.  Returns\n' +
    " nullopt if a pointer device for |monitor| can't be found.",
  " Returns |point|, transformed from |from_origin|'s to |to_origin|'s\n" +
    ' coordinates, which differ by |scale_factor|.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
screen_win_display.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
screen_win_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Allows tests to specify the screen and associated state.',
  ' Single Display of 1.0 Device Scale Factor.',
  ' Single Display of 1.25 Device Scale Factor.',
  ' Single Display of 1.5 Device Scale Factor.',
  ' Single Display of 2.0 Device Scale Factor.',
  ' Two Displays of 1.0 Device Scale Factor.',
  ' Two Displays of 2.0 Device Scale Factor.',
  ' Five 1x displays laid out as follows (not to scale):\n' +
    ' +---------+----------------+\n' +
    ' |         |                |\n' +
    ' |    0    |                |\n' +
    ' |         |       1        |\n' +
    ' +---------+                |\n' +
    ' |    2    |                |\n' +
    ' |         +----------------+-----+\n' +
    ' +---------+                |     |\n' +
    '                            |  3  |\n' +
    '                            |     |\n' +
    '                            +--+--+\n' +
    '                               |4 |\n' +
    '                               +--+',
  ' Five 2x displays laid out as follows (not to scale):\n' +
    ' +---------+----------------+\n' +
    ' |         |                |\n' +
    ' |    0    |                |\n' +
    ' |         |       1        |\n' +
    ' +---------+                |\n' +
    ' |    2    |                |\n' +
    ' |         +----------------+-----+\n' +
    ' +---------+                |     |\n' +
    '                            |  3  |\n' +
    '                            |     |\n' +
    '                            +--+--+\n' +
    '                               |4 |\n' +
    '                               +--+',
  ' Two Displays of 1.0 (Left) and 2.0 (Right) Device Scale Factor.',
  ' Two Displays of 1.5 (Left) and 1.0 (Right) Device Scale Factor.',
  ' Two Displays of 2.0 (Left) and 1.0 (Right) Device Scale Factor.',
  ' Two Displays of 2.0 (Left) and 1.0 (Right) Device Scale Factor under\n' +
    ' Windows DPI Virtualization. Note that the displays do not form a euclidean\n' +
    ' space.',
  ' Forced 1x DPI for Other Tests without TestScreenWin.',
  ' Forced 2x DPI for Other Tests without TestScreenWin.',
  ' Two Displays, one of which is internal (eg. a laptop screen).',
  ' One display with a max-length |szDevice| value.',
  ' Zero displays.'
]
scoped_screen_win.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
screen_util_win.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
virtual_display_util_win.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Map of `VirtualDisplayUtil` configs to `MonitorConfig` defined in Windows\n' +
    ' driver controller code.',
  ' Comparer for gfx:Size for use in sorting algorithms.',
  ' Returns true if the current environment is detected to be headless.',
  ' Sets the default display resolution to the specified size.',
  ' Creates a comma separated list of display strings (for debug /logs).',
  ' static',
  ' static'
]
virtual_display_util_win_interactive_uitest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This test suite requires the host to have a special driver installed.\n' +
    ' If the driver is not detected, this test will skip.\n' +
    ' See: //docs/ui/display/multiscreen_testing.md'
]
uwp_text_scale_factor.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A zero value indicates an invalid token.',
  ' Override the default instance for testing purposes.',
  ' Sanity check for access after destruction.',
  ' Constructs the UWP UI Settings COM object, or fails with as useful of a log\n' +
    ' message as possible given Windows error reporting.\n' +
    ' Lots of things could potentially go wrong so we want to be able to bail out\n' +
    " when creating the UWP UI Settings object, so we've moved the initialization\n" +
    ' to a separate function.',
  ' Implements the actual logic for getting screen metrics.',
  '---------------------------------------------------------\n' +
    ' Base UwpScreenMetrics implementation:',
  '---------------------------------------------------------\n' +
    ' UwpScreenMetrics::Observer implementation:'
]
drag_event_android.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_handler_android.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_event_android.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
key_event_android.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
key_event_utils.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().'
]
keyboard_hook_android.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
motion_event_android.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().',
  ' Convert tilt and orientation to tilt_x and tilt_y. Tilt_x and tilt_y will lie\n' +
    ' in [-90, 90].',
  '  static'
]
motion_event_android_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Corresponds to TOOL_TYPE_FINGER, see\n' +
    ' developer.android.com/reference/android/view/MotionEvent.html\n' +
    '     #TOOL_TYPE_FINGER.',
  ' Corresponds to BUTTON_PRIMARY, see\n' +
    ' developer.android.com/reference/android/view/MotionEvent.html#BUTTON_PRIMARY.',
  ' This function convert tilt_x and tilt_y back to tilt_rad.',
  ' Note that these tests avoid creating a Java instance of the MotionEvent, as\n' +
    " we're primarily testing caching behavior, and the code necessary to\n" +
    ' construct a Java-backed MotionEvent itself adds unnecessary complexity.'
]
caps_lock_event_rewriter.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
discard_key_event_rewriter.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_property.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tag for the rewritten keyboard device id. The value is the byte array of\n' +
    ' and int value in native endian encoding.\n' +
    ' See also KeyboardDeviceIdEventRewriter.'
]
event_rewriter_ash.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Flag masks for remapping alt+click or search+click to right click.',
  ' Index of the remapped flags in the auto repeat usage metric.',
  ' Mapping between event flag to `AutoRepeatUsageModifierFlag` index for the\n' +
    ' auto repeat usage metric.',
  ' Amount to shift the bitset of modifiers to so they are left aligned at the\n' +
    ' top of the 32 bit int.',
  ' Number of bits reserved for potential new keyboard codes in the future\n' +
    ' without breaking the auto repeat usage metric.',
  ' Records the usage of auto repeat in a sparse histogram. Keeps track of the\n' +
    ' keyboard code + the modifier flags.\n' +
    ' To decode:\n' +
    ' Top `AutoRepeatUsageModifierFlag::kNumModifierFlags` bits are used to denote\n' +
    ' modifier flags. See `AutoRepeatUsageModifierFlag` to decode the top bits.\n' +
    ' The rest of the bits are used to store the `KeyboardCode` for the repeated\n' +
    ' keypress. Currently, `kAutoRepeatUsageNumBitsReservedForKeyboardCode` are\n' +
    ' reserved to allow the number of `KeyboardCode` values to expand in the future\n' +
    ' without breaking this metric.',
  ' Table of properties of remappable keys and/or remapping targets (not\n' +
    ' strictly limited to "modifiers").\n' +
    ' This is used in two distinct ways: for rewriting key up/down events,\n' +
    ' and for rewriting modifier EventFlags on any kind of event.\n' +
    ' For the first case, rewriting key up/down events, |RewriteModifierKeys()|\n' +
    ' determines the preference name |prefs::kLanguageRemap...KeyTo| for the\n' +
    ' incoming key and, using |GetRemappedKey()|, gets the user preference\n' +
    ' value |input_method::k...Key| for the incoming key, and finally finds that\n' +
    ' value in this table to obtain the |result| properties of the target key.\n' +
    ' For the second case, rewriting modifier EventFlags,\n' +
    ' |GetRemappedModifierMasks()| processes every table entry whose |flag|\n' +
    ' is set in the incoming event. Using the |pref_name| in the table entry,\n' +
    ' it likewise uses |GetRemappedKey()| to find the properties of the\n' +
    ' user preference target key, and replaces the flag accordingly.',
  ' Finds the remapping for Neo Mod3 in the list. Used only to set the value of\n' +
    ' |kModifierRemappingIsoLevel5ShiftMod3|.',
  ' Gets a remapped key for |pref_name| key or |modifier_key| and |device_id| if\n' +
    ' per-device settings are enabled. For example, to find out which key Ctrl is\n' +
    ' currently remapped to, call the function with\n' +
    ' prefs::kLanguageRemapControlKeyTo, mojom::ModifierKey::kControl, and the\n' +
    ' device id.\n' +
    ' Note: For the Search key, call GetSearchRemappedKey().',
  ' Gets a remapped key for the Search key based on the |keyboard_type| of the\n' +
    ' last event. Internal Search key, Command key on external Apple keyboards, and\n' +
    ' Meta key (either Search or Windows) on external non-Apple keyboards can all\n' +
    ' be remapped separately.',
  ' Maps the key combination into six pack key for the search and alt modifiers.',
  ' If |strict| is true, the flags must match exactly the same. In other words,\n' +
    ' the event will be rewritten only if the exactly specified modifier is\n' +
    ' pressed.  If false, it can match even if other modifiers are pressed.',
  ' Given a set of KeyboardRemapping structs, finds a matching struct\n' +
    ' if possible, and updates the remapped event values. Returns true if a\n' +
    ' remapping was found and remapped values were updated.\n' +
    ' See MatchKeyboardRemapping() for |strict|.',
  ' Given a set of KeyboardRemapping structs, finds a matching struct\n' +
    ' if possible, then returns the KeyboardCode that would have been the\n' +
    ' result of the remapping. If there is no match then VKEY_UNKNOWN\n' +
    ' is returned. No remapping actually occurs in either case.',
  ' Returns true if |mouse_event| was generated from a touchpad device.',
  ' Returns whether |key_code| appears as one of the key codes that might be\n' +
    ' remapped by table mappings.',
  ' Returns true if all bits in |flag_mask| are set in |flags|.',
  ' Records a user action when the user press search plus a digit to\n' +
    ' generate an F-key.',
  ' Records metrics for the Alt and Search based variants of keys in the\n' +
    ' "six pack" eg. Home, End, PageUp, PageDown, Delete, Insert.',
  ' TODO(dpad, b/329330990): Update to support FN key in this metric.',
  ' Returns true when the incoming key event matches one of the search-based\n' +
    ' Six Pack (PageUp, PageDown, Home, End, Insert, Delete) key rewrites.',
  ' Returns true when the incoming key event matches one of the alt-based\n' +
    ' Six Pack (PageUp, PageDown, Home, End, Insert, Delete) key rewrites.',
  ' Rewrites the incoming key event to a Six Pack (PageUp, PageDown, Home, End,\n' +
    ' Insert, Delete) key action when a matching Alt/Search rewrite is found\n' +
    " and the user's setting for the Six Pack key is consistent with the matched\n" +
    ' shortcut.',
  ' Rewrites the incoming key event to a Six Pack (PageUp, PageDown, Home, End,\n' +
    ' Insert, Delete) key action when a matching Function based rewrite is found.',
  '/////////////////////////////////////////////////////////////////////////////',
  '/////////////////////////////////////////////////////////////////////////////',
  ' static',
  ' TODO(yhanada): Clean up this method once StickyKeysController migrates to the\n' +
    ' new API.',
  ' New CrOS keyboards differ from previous Chrome OS keyboards in a few\n' +
    ' ways. Previous keyboards always sent F1-Fxx keys and allowed Chrome to\n' +
    ' decide how to interpret them. New CrOS keyboards now always send action\n' +
    ' keys (eg. Back, Refresh, Overview). So while the default previously was\n' +
    ' to always expect to remap F-Key to action key, for these devices respect\n' +
    ' what the keyboard sends unless the user overrides with either the Search\n' +
    ' key or the "Top Row is always F-Key" setting.\n' +
    ' Additionally, these keyboards provide the mapping via sysfs so each\n' +
    ' new keyboard does not need to be explicitly special cased in the future.\n' +
    '  Search  Force function keys Rewrite Meta F-Key  Key code   Result\n' +
    '  ------- ------------------- ------------------  --------   ------\n' +
    '  No        No                Yes                 Function   Unchanged\n' +
    '  Yes       No                Yes                 Function   Unchanged\n' +
    '  No        Yes               Yes                 Function   Unchanged\n' +
    '  Yes       Yes               Yes                 Function   Unchanged\n' +
    '  No        No                Yes                 Action     Unchanged\n' +
    '  Yes       No                Yes                 Action     Action -> Fn\n' +
    '  No        Yes               Yes                 Action     Action -> Fn\n' +
    '  Yes       Yes               Yes                 Action     Unchanged\n' +
    '  No        No                No                  Function   Unchanged\n' +
    '  Yes       No                No                  Function   Unchanged\n' +
    '  No        Yes               No                  Function   Unchanged\n' +
    '  Yes       Yes               No                  Function   Unchanged\n' +
    '  No        No                No                  Action     Unchanged\n' +
    '  Yes       No                No                  Action     Unchanged\n' +
    '  No        Yes               No                  Action     Unchanged\n' +
    '  Yes       Yes               No                  Action     Unchanged',
  ' The keyboard layout for Wilco has a slightly different top-row layout, emits\n' +
    ' both Fn and action keys from kernel and has key events with Dom codes and no\n' +
    ' VKey value == VKEY_UNKNOWN. Depending on the state of the search key and\n' +
    ' force-function-key preference, function keys have to be mapped to action keys\n' +
    ' or vice versa.\n' +
    '  Search  Force function keys Rewrite Meta F-Key  Key code   Result\n' +
    '  ------- ------------------- ------------------  --------   ------\n' +
    '  No      No                  Yes                 Function   Unchanged\n' +
    '  Yes     No                  Yes                 Function   Fn -> Action\n' +
    '  No      Yes                 Yes                 Function   Unchanged\n' +
    '  Yes     Yes                 Yes                 Function   Fn -> Action\n' +
    '  No      No                  Yes                 Action     Unchanged\n' +
    '  Yes     No                  Yes                 Action     Action -> Fn\n' +
    '  No      Yes                 Yes                 Action     Action -> Fn\n' +
    '  Yes     Yes                 Yes                 Action     Unchanged\n' +
    '  No      No                  No                  Function   Unchanged\n' +
    '  Yes     No                  No                  Function   Unchanged\n' +
    '  No      Yes                 No                  Function   Unchanged\n' +
    '  Yes     Yes                 No                  Function   Unchanged\n' +
    '  No      No                  No                  Action     Unchanged\n' +
    '  Yes     No                  No                  Action     Unchanged\n' +
    '  No      Yes                 No                  Action     Action -> Fn\n' +
    '  Yes     Yes                 No                  Action     Action -> Fn'
]
event_rewriter_metrics.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the name to be used as a part of histogram name.\n' +
    ' If empty, no histogram is expected.'
]
fake_event_rewriter_ash_delegate.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_capability.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Represents scancode value seen in scan code mapping which denotes that the\n' +
    ' FKey is missing on the physical device.',
  ' Represents the "null" scancode used to represent the opting out of Meta +\n' +
    ' F-Key rewrites functionality.',
  ' Hotrod controller vendor/product ids.',
  ' Map used to convert VKEY -> TopRowActionKey and vice versa.',
  ' Some ChromeOS compatible keyboards have a capslock key.',
  ' Parses the custom top row layout string. The string contains a space\n' +
    ' separated list of scan codes in hex. eg "aa ab ac" for F1, F2, F3, etc.',
  ' Returns true if |value| is replaced with the specific device attribute value\n' +
    ' without getting an error. |device_path| should be obtained from the\n' +
    ' |KeyboardDevice.sys_path| field.',
  ' Parses keyboard to row layout string. Returns true if data is valid.',
  ' Determines the type of |keyboard_device| we are dealing with.\n' +
    " |has_chromeos_top_row| argument indicates that the keyboard's top\n" +
    ' row has "action" keys (such as back, refresh, etc.) instead of the\n' +
    ' standard F1-F12 keys.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' TODO(dpad): Remove once modifier split launches.',
  ' TODO(dpad): Remove once modifier split launches.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
keyboard_capability_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A tag that should fail parsing for the top row layout.',
  ' A default example of the layout string read from the function_row_physmap\n' +
    ' sysfs attribute. The values represent the scan codes for each position\n' +
    ' in the top row, which maps to F-Keys.',
  ' A tag that should fail parsing for the top row custom scan code string.',
  ' This set of scan code mappings come from x86 internal vivaldi keyboards.',
  ' For INPUT_DEVICE_UNKNOWN type, we treat it as external keyboard.',
  ' NOTE: This only creates a simple KeyboardDevice based on a device\n' +
    ' capabilities report; it is not suitable for subclasses of KeyboardDevice.',
  ' Tests that the given `DeviceCapabilities` and\n' +
    ' `KeyboardCapability::DeviceType` combo generates the given set of\n' +
    ' modifier keys.',
  ' With the dogfood flag enabled AND no Google account logged in, the feature\n' +
    ' should act as though its disabled.',
  ' Tests that given the keyboard connection type and layout type, check if this\n' +
    ' keyboard has a specific key event.'
]
keyboard_device_id_event_rewriter.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
keyboard_device_id_event_rewriter_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Captures SendEvent calls.'
]
keyboard_info_metrics.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_info_metrics_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Test that non-Layout2 keyboards don't emit the wrong type when\n" +
    " has_assistant_key is true. Note that this case shouldn't come up in reality.",
  ' Test that non-kDeviceInternalKeyboards do not emit metrics related to the\n' +
    ' internal keyboard top-row layout.',
  ' Test that kDeviceInternalKeyboards do not emit metrics related to the top-row\n' +
    ' keys if the keyboard layout is not Custom.'
]
keyboard_layout_util.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_modifier_event_rewriter.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
modifier_split_dogfood_controller.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
top_row_action_keys.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
top_row_action_keys_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
back_gesture_event.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
base_event_utils.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Alt modifier is used to input extended characters on Mac.'
]
blink_event_util.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Note that the action index is meaningful only in the context of\n' +
    ' |Action::POINTER_UP| and |Action::POINTER_DOWN|; other actions map directly\n' +
    ' to WebTouchPoint::State.'
]
blink_event_util_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
blink_features.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fling_booster.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Minimum fling velocity required for the active fling and new fling for the\n' +
    ' two to accumulate.',
  ' Minimum velocity for the active touch scroll to preserve (boost) an active\n' +
    ' fling for which cancellation has been deferred.',
  ' Timeout window after which the active fling will be cancelled if no animation\n' +
    ' ticks, scrolls or flings of sufficient velocity relative to the current fling\n' +
    ' are received. The default value on Android native views is 40ms, but we use a\n' +
    ' slightly increased value to accomodate small IPC message delays.'
]
fling_booster_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constants from fling_booster.cc',
  " Ensure a scroll starting after the boosting cutoff time doesn't extend the\n" +
    ' timeout.'
]
web_input_event.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a WebGestureEvent from a GestureEvent. Note that it does not\n' +
    ' populate the event coordinates (i.e. |x|, |y|, |globalX|, and |globalY|). So\n' +
    ' the caller must populate these fields.',
  ' On Windows, we can just use the builtin WebKit factory methods to fully\n' +
    ' construct our pre-translated events.',
  ' General approach:\n' +
    ' Event only carries a subset of possible event data provided to UI by the host\n' +
    ' platform. WebKit utilizes a larger subset of that information, and includes\n' +
    ' some built in cracking functionality that we rely on to obtain this\n' +
    ' information cleanly and consistently.\n' +
    " The only place where an Event's data differs from what the underlying\n" +
    ' PlatformEvent would provide is position data. We would like to provide\n' +
    ' coordinates relative to its hosting window, rather than the top level\n' +
    ' platform window. The event target is used to get the screen coordinates.\n' +
    ' The approach is to fully construct a blink::WebInputEvent from the\n' +
    " Event's PlatformEvent, and then replace the coordinate fields with\n" +
    ' the translated values from the Event (and EventTarget).\n' +
    ' The exception is mouse events on linux. The MouseEvent contains enough\n' +
    ' necessary information to construct a WebMouseEvent. So instead of extracting\n' +
    ' the information from the XEvent, which can be tricky when supporting both\n' +
    ' XInput2 and XInput, the WebMouseEvent is constructed from the\n' +
    ' MouseEvent. This will not be necessary once only XInput2 is supported.'
]
web_input_event_builders_win.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WebMouseEvent --------------------------------------------------------------',
  ' WebMouseWheelEvent ---------------------------------------------------------'
]
web_input_event_builders_win_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This test validates that Pixel to DIP conversion occurs as needed in the\n' +
    ' WebMouseEventBuilder::Build function.'
]
web_input_event_traits.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
web_input_event_traits_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Very basic smoke test to ensure stringification doesn't explode."
]
web_input_event_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Checks that MakeWebKeyboardEvent makes a DOM3 spec compliant key event.\n' +
    ' crbug.com/127142',
  ' TODO(yusukes): Add tests for win_aura once keyboardEvent() in\n' +
    ' third_party/WebKit/Source/web/win/WebInputEventFactory.cpp is modified\n' +
    ' to return VKEY_[LR]XXX instead of VKEY_XXX.\n' +
    ' https://bugs.webkit.org/show_bug.cgi?id=86694',
  ' Checks that MakeWebKeyboardEvent fills a correct keypad modifier.'
]
scroller_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
device_data_manager.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This macro provides the implementation for the observer notification methods.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
device_data_manager_test_api.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
device_data_manager_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
device_util_linux.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gamepad_device.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_device.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
input_device_observer_android.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().'
]
input_device_observer_win.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This macro provides the implementation for the observer notification methods.',
  ' The registry subkey that contains information about the state of the\n' +
    ' detachable/convertible laptop, it tells if the device has an accessible\n' +
    ' keyboard. OEMs are expected to follow these guidelines to report\n' +
    ' docked/undocked state\n' +
    ' https://msdn.microsoft.com/en-us/windows/hardware/commercialize/customize/desktop/unattend/microsoft-windows-gpiobuttons-convertibleslatemode'
]
input_device_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_device.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
microphone_mute_switch_monitor.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
touch_device_transform.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touchpad_device.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touchscreen_device.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touchscreen_device_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
device_data_manager_x11.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' XIScrollClass was introduced in XI 2.1 so we need to define it here\n' +
    ' for backward-compatibility with older versions of XInput.',
  ' Copied from xserver-properties.h',
  ' CMT specific timings',
  ' Ordinal values',
  ' Fling properties',
  ' Cros metrics gesture from touchpad',
  ' Touchscreen multi-touch',
  ' Stylus with absolute x y pressure and tilt info',
  ' When you add new data types, please make sure the order here is aligned\n' +
    ' with the order in the DataType enum in the header file because we assume\n' +
    ' they are in sync when updating the device list (see UpdateDeviceList).',
  ' Make sure the sizes of enum and |kCachedAtoms| are aligned.',
  ' Constants for checking if a data type lies in the range of CMT/Touch data\n' +
    ' types.',
  ' Disables high precision scrolling in X11',
  " Identical to double_to_fp3232 from xserver's inpututils.c",
  " Identical to FP3232_TO_DOUBLE from libxi's XExtInt.c",
  ' static',
  ' static'
]
device_list_cache_x11.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_factory_x11.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
event.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Event',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' CancelModeEvent',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' LocatedEvent',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' MouseEvent',
  ' static',
  ' static',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' MouseWheelEvent',
  ' This value matches Windows, Fuchsia WHEEL_DELTA, and (roughly) Firefox on\n' +
    ' Linux.\n' +
    ' static',
  ' This is a legacy value that matches GTK+ wheel scroll amount.  Although being\n' +
    ' inherited from Linux, it is no longer used on Linux itself, but is still used\n' +
    ' on some other platforms.\n' +
    ' See https://crbug.com/1270089 for the detailed reasoning.\n' +
    ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TouchEvent',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' KeyEvent',
  ' static',
  ' static\n For compatibility, this is enabled by default.',
  ' static',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' ScrollEvent',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' GestureEvent'
]
event_dispatcher.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' EventDispatcher:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' EventDispatcher, private:'
]
event_dispatcher_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Destroys the dispatcher-delegate when it receives any event.',
  ' Invalidates the target when it receives any event.',
  ' Destroys a second event handler when this handler gets an event.\n' +
    ' Optionally also destroys the dispatcher.',
  ' Tests that the event-phases are correct.',
  ' Tests that if the dispatcher is destroyed in the middle of pre or post-target\n' +
    " dispatching events, it doesn't cause a crash.",
  ' Tests that a target becoming invalid in the middle of pre- or post-target\n' +
    ' event processing aborts processing.',
  ' Tests that if an event-handler gets destroyed during event-dispatch, it does\n' +
    ' not cause a crash.',
  ' Tests that things work correctly if an event-handler destroys both the\n' +
    ' dispatcher and a handler.'
]
event_handler.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_modifiers.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' static',
  ' static'
]
event_processor.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_processor_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' ReDispatchEventHandler is used to receive mouse events and forward them\n' +
    ' to a specified EventProcessor. Verifies that the event has the correct\n' +
    ' target and phase both before and after the nested event processing. Also\n' +
    ' verifies that the location of the event remains the same after it has\n' +
    ' been processed by the second EventProcessor.',
  ' Verifies that the phase and target information of an event is not mutated\n' +
    ' as a result of sending the event to an event processor while it is still\n' +
    ' being processed by another event processor.',
  ' Verifies that OnEventProcessingFinished() is called when an event\n' +
    ' has been handled.',
  ' Verifies that OnEventProcessingStarted() has been called when starting to\n' +
    ' process an event, and that processing does not take place if\n' +
    ' OnEventProcessingStarted() marks the event as handled. Also verifies that\n' +
    ' OnEventProcessingFinished() is also called in either case.',
  ' Tests that unhandled events are correctly dispatched to the next-best\n' +
    ' target as decided by the TestEventTargeter.',
  ' Tests that unhandled events are seen by the correct sequence of\n' +
    ' targets, pre-target handlers, and post-target handlers when\n' +
    ' a TestEventTargeter is installed on the root target which permits bubbling.'
]
event_rewriter.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Temporary fallback implementation, in terms of the old API,\n' +
    ' factored out of EventSource::SendEventToSinkFromRewriter().\n' +
    ' TODO(kpschoedel): Remove along with old API.',
  " Temporary default implementation of the old API, so that subclasses'\n" +
    ' implementations can be removed.\n' +
    ' TODO(kpschoedel): Remove old API.',
  " Temporary default implementation of the old API, so that subclasses'\n" +
    ' implementations can be removed.\n' +
    ' TODO(kpschoedel): Remove old API.',
  ' TODO(kpschoedel): Remove old API.'
]
event_rewriter_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TestEventRewriteSink is set up with a sequence of event types,\n' +
    ' and fails if the events received via OnEventFromSource() do not match\n' +
    ' this sequence. These expected event types are consumed on receipt.',
  ' This EventRewriter always returns the same status, and if rewriting, the\n' +
    ' same event type; it is used to test simple rewriting, and rewriter addition,\n' +
    ' removal, and sequencing. Consequently EVENT_REWRITE_DISPATCH_ANOTHER is not\n' +
    ' supported here (calls to NextDispatchEvent() would continue indefinitely).',
  ' This EventRewriter runs a simple state machine; it is used to test\n' +
    ' EVENT_REWRITE_DISPATCH_ANOTHER.',
  ' This EventRewriter always accepts the original event. It is used to test\n' +
    ' simple rewriting, and rewriter addition, removal, and sequencing.',
  ' This EventRewriter always rewrites with the same event type; it is used\n' +
    ' to test simple rewriting, and rewriter addition, removal, and sequencing.',
  ' This EventRewriter runs a simple state machine; it is used to test\n' +
    ' EVENT_REWRITE_DISPATCH_ANOTHER.'
]
event_source.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_switches.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Enable compensation for unstable pinch zoom. Some touch screens display\n' +
    ' significant amount of wobble when moving a finger in a straight line. This\n' +
    ' makes two finger scroll trigger an oscillating pinch zoom. See\n' +
    ' crbug.com/394380 for details.',
  ' Overrides touch slop distance for gesture detection. The touch slop distance\n' +
    ' is the maximum distance from the starting point of a touch sequence that a\n' +
    ' gesture can travel before it can no longer be considered a tap. Scroll\n' +
    ' gestures can only begin after this distance has been travelled. The switch\n' +
    ' value is a floating point number that is interpreted as a distance in pixels.',
  ' Tells chrome to interpret events from these devices as touch events. Only\n' +
    " available with XInput 2 (i.e. X server 1.8 or above). The id's of the\n" +
    " devices can be retrieved from 'xinput list'.",
  ' Tells chrome to interpret events from these devices as pen events. Only\n' +
    " available with XInput 2 (i.e. X server 1.8 or above). The id's of the\n" +
    " devices can be retrieved from 'xinput list'.",
  ' Tells Chrome to do edge touch filtering. Useful for convertible tablet.',
  ' Disable CancelAllTouches() function for the implementation on cancel single\n' +
    ' touches.',
  ' Enables logic to detect microphone mute switch device state, which disables\n' +
    ' internal audio input when toggled.'
]
event_target.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_target_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_targeter.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Automatic repeat flag setting is disabled on Lacros,\n' +
    ' because the repeated event is generated inside ui/ozone/platform/wayland\n' +
    ' and reliable.',
  ' Tests that re-processing the same mouse press event (detected by timestamp)\n' +
    ' does not yield a double click event: http://crbug.com/389162',
  ' Tests that right clicking, then left clicking does not yield double clicks.',
  ' Checks that Event.Latency.OS2.MOUSE_WHEEL histogram is computed properly.',
  " Verifies that ToString() generates something and doesn't crash. The specific\n" +
    " format isn't important.",
  ' Tests for ComputeEventLatencyOS variants.',
  ' Verifies that copied events never copy target_.',
  ' Verify if a character event is created.'
]
event_utils.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Record a trace if the `current_time` - `time_stamp` is above a threshold.\n' +
    ' `name` must be a static string so that the trace is not privacy filtered.'
]
events_default.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
events_exports.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file is for including headers that are not included in any other .cc\n' +
    ' files contained with the ui/events module.  We need to include these here so\n' +
    ' that linker will know to include the symbols, defined by these headers, in\n' +
    ' the resulting dynamic library.'
]
events_stub.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Stub implementations of platform-specific methods in events_util.h, built\n' +
    ' on platforms that currently do not have a complete implementation of events.'
]
pointer_events_handler.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' For using TouchInteractionId as a map key.',
  ' TODO(crbug.com/40805737): Check if chrome gestures require strict boundaries.',
  ' It returns a "draft" because the coordinates are logical. FlatlandWindow\n' +
    ' might apply view pixel ratio to obtain physical coordinates.\n' +
    ' The gestures expect a gesture to start within the logical view space, and\n' +
    ' is not tolerant of floating point drift. This function coerces just the DOWN\n' +
    " event's coordinate to start within the logical view.",
  ' It returns a "draft" because the coordinates are logical. Later,\n' +
    ' FlatlandWindow might apply view pixel ratio to obtain physical coordinates.\n' +
    ' Phase data is computed before this call; it involves state tracking based on\n' +
    ' button-down state.\n' +
    ' Button data, if available, gets packed into the |buttons_flags| field, in\n' +
    ' button order (kMousePrimaryButton, etc). The device-assigned button\n' +
    ' IDs are provided in priority order in MouseEvent.device_info (at the start of\n' +
    ' channel connection), and maps from device button ID (given in\n' +
    ' fuchsia_ui_pointer::MouseEvent) to Chrome ui::EventFlags.\n' +
    ' Scroll data, if available, gets packed into the |scroll_delta_x| or\n' +
    ' |scroll_delta_y| fields, and the |signal_kind| field is set to kScroll.\n' +
    ' The PointerDataPacketConverter reads this field to synthesize events to match\n' +
    " Chrome's expected pointer stream.\n" +
    ' The gestures expect a gesture to start within the logical view space, and\n' +
    ' is not tolerant of floating point drift. This function coerces just the DOWN\n' +
    " event's coordinate to start within the logical view.",
  ' Core logic of this class.\n Aim to keep state management in this function.',
  ' There are three basic interaction forms that we need to handle, and the API\n' +
    ' guarantees we see only these three forms. S=sample, R(g)=result-granted,\n' +
    ' R(d)=result-denied, and + means packaged in the same table. Time flows from\n' +
    ' left to right. Samples start with ADD, and end in REMOVE or CANCEL. Each\n' +
    ' interaction receives just one ownership result.\n' +
    '   (1) Late grant. S S S R(g) S S S\n' +
    '   (1-a) Combo.    S S S+R(g) S S S\n' +
    '   (2) Early grant. S+R(g) S S S S S\n' +
    '   (3) Late deny. S S S R(d)\n' +
    '   (3-a) Combo.   S S S+R(d)\n' +
    ' This results in the following high-level algorithm to correctly deal with\n' +
    ' buffer allocation and deletion, and event flushing or event dropping based\n' +
    ' on ownership.\n' +
    '   if event.sample.phase == ADD && !event.result\n' +
    '     allocate buffer[event.sample.interaction]\n' +
    '   if buffer[event.sample.interaction]\n' +
    '     buffer[event.sample.interaction].push(event.sample)\n' +
    '   else\n' +
    '     flush_to_client(event.sample)\n' +
    '   if event.result\n' +
    '     if event.result == GRANTED\n' +
    '       flush_to_client(buffer[event.result.interaction])\n' +
    '     delete buffer[event.result.interaction]'
]
pointer_events_handler_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Builds a vector of move-only values.',
  ' Fixture to exercise the implementation for fuchsia.ui.pointer.TouchSource and\n' +
    ' fuchsia.ui.pointer.MouseSource.'
]
pointer_event_utility.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
filtered_gesture_provider.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
filtered_gesture_provider_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Single touch drag test: After touch-start, the moved_beyond_slop_region bit\n' +
    ' should stay unset as long as the touch movement is confined to the slop\n' +
    ' region. Once the touch moves beyond the slop region, the bit should remain\n' +
    ' set until (incl) touch-end.',
  ' Multi-touch: The moved_beyond_slop_region bit should stay unset as long as\n' +
    ' all touch-points are stationary, and should be set after (including) the\n' +
    ' first movement in any touch-point.',
  ' Extra cancel events should be handled gracefully: https://crbug.com/1407442'
]
gesture_configuration.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
gesture_configuration_android.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Touch radii on Android can be both noisy and inaccurate. The old Java\n' +
    ' gesture detection pipeline used a fixed value of 24 as the gesture bounds.\n' +
    " We relax that value somewhat, but not by much; there's a fairly small window\n" +
    ' within which gesture bounds are useful for features like touch adjustment.',
  ' Create a GestureConfigurationAura singleton instance when using Android.'
]
gesture_configuration_aura.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Create a GestureConfigurationAura singleton instance when using aura.'
]
gesture_configuration_cast.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Create a GestureConfigurationCast singleton instance when using Chromecast.'
]
gesture_configuration_default.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Create a GestureConfiguration singleton instance when using Mac.'
]
gesture_configuration_ios.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Create a GestureConfigurationIOS singleton instance when using iOS.'
]
gesture_detector.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Minimum distance a scroll must have traveled from the last scroll/focal point\n' +
    ' to trigger an |OnScroll| callback.',
  ' Constants used by TimeoutGestureHandler.'
]
gesture_event_data.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_event_data_packet.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_event_data_packet_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_listeners.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_provider.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Double-tap drag zoom sensitivity (speed).',
  ' GestureProviderClient:',
  ' GestureProvider:::Config',
  ' GestureProvider::GestureListener',
  ' GestureProvider'
]
gesture_provider_config_helper.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_provider_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verify that a DOWN has the same unique_touch_event_id and\n' +
    ' primary_touch_event_id',
  ' Verify that a DOWN followed shortly by an UP will trigger a single tap.',
  ' Verify that a DOWN followed shortly by an UP will trigger\n' +
    ' a EventType::kGestureTapUnconfirmed event if double-tap is enabled.',
  " Verify that a DOWN followed by a MOVE will trigger fling, but won't trigger\n" +
    ' either short-press or long-press.',
  ' Verify that for a normal scroll the following events are sent:\n' +
    ' - EventType::kGestureScrollBegin\n' +
    ' - EventType::kGestureScrollUpdate\n' +
    ' - EventType::kGestureScrollEnd',
  ' Verify that for a cancelled scroll the following events are sent:\n' +
    ' - EventType::kGestureScrollBegin\n' +
    ' - EventType::kGestureScrollUpdate\n' +
    ' - EventType::kGestureScrollEnd',
  ' Verify that for a normal fling (fling after scroll) the following events are\n' +
    ' sent:\n' +
    ' - EventType::kGestureScrollBegin\n' +
    ' - EventType::kScrollFlingStart',
  ' Generate a scroll gesture and verify that the resulting scroll motion event\n' +
    ' has both absolute and relative position information.',
  ' Verify that fractional scroll deltas are rounded as expected and that\n' +
    " fractional scrolling doesn't break scroll snapping.",
  ' Generate a scroll gesture and verify that the resulting scroll begin event\n' +
    ' has the expected hint values.',
  ' The following three tests verify that slop regions are checked for\n' +
    " one and two finger scrolls. Three-finger tap doesn't exist, so,\n" +
    ' no slop region check is needed for three-finger scrolls.',
  ' This test simulates cases like (crbug.com/704426) in which some of the events\n' +
    ' are missing from the event stream.',
  ' Verify that LONG_TAP is triggered after LONG_PRESS followed by an UP.',
  ' Verify that the touch slop region is removed from the first scroll delta to\n' +
    ' avoid a jump when starting to scroll.',
  ' Verify that finger movement within the tap slop region does not\n' +
    ' initiate a scroll, and that movement outside the slop region does.',
  ' Verify that stylus movement within the tap slop region does not\n' +
    ' initiate a scroll, and that movement outside the slop region does.',
  " Disabled because `SnapScrollController` still can't correctly treat all\n" +
    ' stylus moves within the slop region. If the first move action is within the\n' +
    ' stylus slop but outside the (smaller) touch slop, `SnapScrollController`\n' +
    ' ignores any orthogonal move actions even when they are outside the stylus\n' +
    ' slop.\n' +
    ' TODO(mustaq@chromium.org): Refactor SnapScrollController states to fix this.',
  ' Verify that double tap drag zoom feature is not invoked when the gesture\n' +
    ' handler is told to disable double tap gesture detection.\n' +
    ' The second tap sequence should be treated just as the first would be.',
  ' Verify that updating double tap support during a double tap drag zoom\n' +
    ' disables double tap detection after the gesture has ended.',
  ' Verify that pinch zoom sends the proper event sequence.',
  ' Verify that no accidental pinching occurs if the touch size is large relative\n' +
    ' to the min scaling span when the touch major value is used in scaling.',
  ' Verify that multi-finger swipe sends the proper event sequence.',
  ' Verify that the timer of LONG_PRESS will be cancelled when scrolling begins\n' +
    " so LONG_PRESS and LONG_TAP won't be triggered.",
  ' Verify that inserting a touch cancel event will trigger proper touch and\n' +
    ' gesture sequence cancellation.',
  ' Verify that gesture begin and gesture end events are dispatched correctly.',
  ' Verify that gesture begin and gesture end events are dispatched correctly\n' +
    ' when an Action::CANCEL is received.',
  ' Test a simple two finger tap',
  ' Test preventing a two finger tap via finger movement.',
  ' Test preventing a two finger tap by waiting too long before releasing the\n' +
    ' secondary pointer.',
  ' Test preventing a two finger tap by pressing the secondary pointer too far\n' +
    ' from the first',
  ' Verify that the event that starts the pinch-zoom by exceeding the touch-slop\n' +
    ' also generates an update.',
  ' Verify that the event that stops the pinch-zoom by exceeding the min scaling\n' +
    ' span also generates an update.',
  " Verify that the pinch isn't started until it becomes larger than the min\n" +
    ' scaling span.',
  ' Verify that pinch zoom only sends updates which exceed the\n' +
    ' min_pinch_update_span_delta.',
  ' Verify that the min gesture bound setting is honored.',
  ' Verify that the min/max gesture bound settings are not applied to stylus\n' +
    ' or mouse-derived MotionEvents.',
  ' https://crbug.com/1222659',
  ' Test the bounding box for show press and tap gestures.',
  ' Test for Event.MaxDragDistance.* histograms with taps.',
  ' Test for Event.MaxDragDistance.* histograms with drags.'
]
gesture_touch_uma_histogram.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scale_gesture_detector.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Using a small epsilon when comparing slop distances allows pixel\n' +
    ' perfect slop determination when using fractional DPI coordinates\n' +
    ' (assuming the slop region and DPI scale are reasonably\n' +
    ' proportioned).',
  ' Note: These constants were taken directly from the default (unscaled)\n' +
    " versions found in Android's ViewConfiguration. Do not change these default\n" +
    ' values without explicitly consulting an OWNER.'
]
scale_gesture_listeners.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
snap_scroll_controller.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Minimum ratio between initial X and Y motion to allow snapping.',
  ' Size of the snap rail relative to the initial snap bound threshold.'
]
snap_scroll_controller_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_disposition_gesture_filter.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A BitSet32 is used for tracking dropped gesture types.',
  ' This approach to disposition handling is described at http://goo.gl/5G8PWJ.',
  ' TouchDispositionGestureFilter',
  ' TouchDispositionGestureFilter::GestureHandlingState'
]
touch_disposition_gesture_filter_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' On some platforms we can get a cancel per touch point. This should result\n' +
    ' in an empty sequence. https://crbug.com/1407442',
  ' Test that a GestureEvent whose dispatch causes a cancel event to be fired\n' +
    " won't cause a crash.",
  ' Test that a MultiFingerSwipe event is dispatched when appropriate.'
]
gesture_event_details.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
web_gesture_curve_impl.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
web_gesture_curve_impl_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fixed_velocity_curve.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' GestureCurve implementation.'
]
fling_curve.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fling_curve_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_provider_aura.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_provider_aura_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(jdduke): Test whether event marked as scroll trigger.'
]
gesture_recognizer.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_recognizer_impl.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Generic function to remove every entry from a map having the given value.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' GestureRecognizerImpl, public:',
  ' Checks if this finger is already down, if so, returns the current target.\n' +
    ' Otherwise, returns nullptr.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' GestureRecognizerImpl, protected:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' GestureRecognizerImpl, private:'
]
gesture_recognizer_impl_mac.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_types.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
motion_event_aura.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
motion_event_aura_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test after converting touch events into motion events, motion events should\n' +
    ' have the same unique_event_id as touch events.',
  ' If we have too many active touches, start to ignore new ones.'
]
physics_based_fling_curve.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These constants are defined based on UX experiment.',
  ' Calculates the |distance_| based on the fling velocity. It utilizes\n' +
    ' following equation for |distance_| calculation. d = v*t - 0.5*a*t^2 where d\n' +
    ' = distance, v = initial velocity, a = acceleration and time = duration before\n' +
    ' it reaches zero velocity. time = final velocity(0) - initial velocity(v) /\n' +
    ' acceleration (a) This |distance_| is later used by PhysicsBasedFlingCurve to\n' +
    ' generate fling animation curve.'
]
physics_based_fling_curve_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_events_param_traits.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Generate param traits read methods.',
  ' Generate param traits log methods.'
]
keyboard_event_counter.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_event_counter_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_hook_base.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dom_keyboard_layout.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Mapping from Unicode combining characters to corresponding printable\n' +
    ' character.'
]
dom_keyboard_layout_manager.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dom_keyboard_layout_map_base.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
dom_keyboard_layout_map_ozone.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
dom_keyboard_layout_map_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents a keyboard layout where every key is ASCII capable.',
  ' Layout contains all valid keys so this number represents a complete layout.',
  ' Represents a keyboard layout where every alpha key is ASCII capable.',
  ' Layout contains all valid alpha keys so this number represents a complete\n' +
    ' layout minus two INTL keys which are subbed.',
  ' Represents a keyboard layout where some alpha keys are ASCII capable.',
  " The mostly valid keyboard does not pass the 'IsAsciiCapable()' test however\n" +
    " the DomKeyboardLayoutManager will pass the first layout it has if it doesn't\n" +
    ' find an ASCII capable layout first.',
  ' Represents a keyboard layout where no alpha keys are ASCII capable.'
]
dom_keyboard_layout_map_win.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
keycode_converter.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Table of USB codes (equivalent to DomCode values), native scan codes,\n' +
    ' and DOM Level 3 |code| strings.',
  ' Table of DomKey enum values and DOM Level 3 |key| strings.',
  ' The offset between XKB Keycode and evdev code.',
  ' TODO(crbug.com/40151699): After migrating native code for\n' +
    ' these platforms from XKB to evdev, use XKB_INVALID_KEYCODE\n' +
    ' (=0xFFFFFFFF) to represent invalid XKB keycode.\n' +
    ' Currently, 0 is returned for backward compatibility.',
  ' Converts XKB keycode to evdev code, based on the mapping\n' +
    ' usually available at /usr/share/X11/xkb/keycodes/evdev.\n' +
    ' See also\n' +
    ' https://xkbcommon.org/doc/current/xkbcommon_8h.html#ac29aee92124c08d1953910ab28ee1997\n' +
    ' for the reference of the history of key mapping.\n' +
    ' Returns KEY_RESERVED for unknown XKB keycode mapping.',
  ' Converts evdev code into XKB keycode.\n' +
    ' Returns KeycodeConverter::InvalidNativeKeycode() if the given code is in\n' +
    ' the invalid range or KEY_RESERVED.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' TODO(zijiehe): Most of the following functions can be optimized by using\n' +
    ' either multiple arrays or unordered_map.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' USB keycodes\n' +
    ' Note that USB keycodes are not part of any web standard.\n' +
    " Please don't use USB keycodes in new code.",
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
keycode_converter_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Number of native codes expected to be mapped for each kind of native code.\n' +
    ' These are in the same order as the columns in dom_code_data.inc\n' +
    ' as reflected in the DOM_CODE() macro below.'
]
keyboard_code_conversion.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Returns a Windows-based VKEY for a non-printable DOM Level 3 |key|.\n' +
    ' The returned VKEY is non-positional (e.g. VKEY_SHIFT).',
  ' Determine the non-located VKEY corresponding to a located VKEY.',
  ' Determine the located VKEY corresponding to a non-located VKEY.'
]
keyboard_code_conversion_android.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The minimum Android NDK does not provide values for these yet:'
]
keyboard_code_conversion_fuchsia.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_code_conversion_fuchsia_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' For |size| Unicode values beginning with code |start|, check that they are\n' +
    ' converted to the correct DomKey.',
  ' Check that the for the below ranges, Fuchsia Keys are correctly converted to\n' +
    ' DomKeys.'
]
keyboard_code_conversion_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_code_conversion_win.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_code_conversion_x.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' MAP0 - MAP3:\n' +
    ' These are the generated VKEY code maps from these layout datas on Windows:\n' +
    '   KBDA1.DLL\n' +
    '   KBDAL.DLL\n' +
    '   KBDARME.DLL\n' +
    '   KBDARMW.DLL\n' +
    '   KBDAZEL.DLL\n' +
    '   KBDBE.DLL\n' +
    '   KBDBENE.DLL\n' +
    '   KBDBR.DLL\n' +
    '   KBDCA.DLL\n' +
    '   KBDCAN.DLL\n' +
    '   KBDCR.DLL\n' +
    '   KBDCZ.DLL\n' +
    '   KBDCZ1.DLL\n' +
    '   KBDCZ2.DLL\n' +
    '   KBDDA.DLL\n' +
    '   KBDDV.DLL\n' +
    '   KBDES.DLL\n' +
    '   KBDEST.DLL\n' +
    '   KBDFC.DLL\n' +
    '   KBDFI.DLL\n' +
    '   KBDFI1.DLL\n' +
    '   KBDFO.DLL\n' +
    '   KBDFR.DLL\n' +
    '   KBDHEB.DLL\n' +
    '   KBDGAE.DLL\n' +
    '   KBDGEO.DLL\n' +
    '   kbdgeoer.dll\n' +
    '   kbdgeoqw.dll\n' +
    '   KBDGR.DLL\n' +
    '   KBDGR1.DLL\n' +
    '   KBDGRLND.DLL\n' +
    '   KBDHAU.DLL\n' +
    '   KBDHU.DLL\n' +
    '   KBDHU1.DLL\n' +
    '   KBDIBO.DLL\n' +
    '   KBDIC.DLL\n' +
    '   KBDIR.DLL\n' +
    '   KBDIT.DLL\n' +
    '   KBDIT142.DLL\n' +
    '   KBDLA.DLL\n' +
    '   KBDLT.DLL\n' +
    '   KBDLT1.DLL\n' +
    '   KBDLT2.DLL\n' +
    '   KBDLV.DLL\n' +
    '   KBDLV1.DLL\n' +
    '   KBDMLT47.DLL\n' +
    '   KBDMLT48.DLL\n' +
    '   KBDNE.DLL\n' +
    '   KBDNO.DLL\n' +
    '   KBDNO1.DLL\n' +
    '   KBDPL.DLL\n' +
    '   KBDPL1.DLL\n' +
    '   KBDPO.DLL\n' +
    '   KBDRO.DLL\n' +
    '   KBDROPR.DLL\n' +
    '   KBDROST.DLL\n' +
    '   KBDRU.DLL\n' +
    '   KBDSF.DLL\n' +
    '   KBDSG.DLL\n' +
    '   KBDSL.DLL\n' +
    '   KBDSL1.DLL\n' +
    '   KBDSOREX.DLL\n' +
    '   KBDSORS1.DLL\n' +
    '   KBDSORST.DLL\n' +
    '   KBDSP.DLL\n' +
    '   KBDSW.DLL\n' +
    '   KBDSW09.DLL\n' +
    '   KBDUK.DLL\n' +
    '   KBDUKX.DLL\n' +
    '   KBDUS.DLL\n' +
    '   KBDUSL.DLL\n' +
    '   KBDUSR.DLL\n' +
    '   KBDUSX.DLL\n' +
    '   KBDVNTC.DLL\n' +
    '   KBDYBA.DLL\n' +
    ' And the maps are only for special letter keys excluding [a-z] & [0-9].\n' +
    ' ch0: the keysym without modifier states.\n' +
    ' ch1: the keysym with shift state.\n' +
    ' ch2: the keysym with altgr state.\n' +
    " sc: the hardware keycode (in Windows, it's called scan code).\n" +
    ' vk: the VKEY code.\n' +
    ' MAP0: maps from ch0 to vk.\n' +
    ' MAP1: maps from ch0+sc to vk.\n' +
    ' MAP2: maps from ch0+ch1+sc to vk.\n' +
    ' MAP3: maps from ch0+ch1+ch2+sc to vk.\n' +
    ' MAP0 - MAP3 are all sorted, so that finding VK can be binary search.\n' +
    ' Reason for creating these maps is because a hard-coded mapping in\n' +
    " KeyboardCodeFromXKeysym() doesn't support non-US keyboard layouts.\n" +
    ' e.g. in UK keyboard, the key between Quote and Enter keys has the VKEY code\n' +
    ' VKEY_OEM_5 instead of VKEY_3.\n' +
    ' The key symbols which are not [a-zA-Z0-9] and functional/extend keys (e.g.\n' +
    ' TAB, ENTER, BS, Arrow keys, modifier keys, F1-F12, media/app keys, etc.)\n' +
    ' should go through these maps for correct VKEY codes.\n' +
    ' Please refer to crbug.com/386066.',
  ' Check for TTY function keys or space key which should always be mapped\n' +
    ' based on KeySym, and never fall back to MAP0~MAP3, since some layouts\n' +
    ' generate them by applying the Control/AltGr modifier to some other key.\n' +
    ' e.g. in de(neo), AltGr+V generates XK_Enter.',
  ' Get an ui::KeyboardCode from an X keyevent',
  ' TODO(jcampan): this method might be incomplete.'
]
keyboard_code_conversion_xkb.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' We support dead keys beyond those with predefined keysym names,\n' +
    ' expressed as numeric constants with |kDeadKeyFlag| set.\n' +
    ' Xkbcommon accepts and does not use any bits in 0x0E000000.'
]
keysym_to_unicode.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
platform_key_map_win.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' List of modifiers mentioned in https://w3c.github.io/uievents/#keys-modifiers\n' +
    " Some modifiers are commented out because they usually don't change keys.",
  ' This table must be sorted by |key_code| for binary search.',
  ' Disambiguates the meaning of certain non-printable keys which have different\n' +
    ' meanings under different languages, but use the same VKEY code.',
  ' static',
  ' static',
  ' static',
  ' static'
]
platform_key_map_win_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mobile_scroller.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Default scroll duration from android.widget.Scroller.',
  ' Default friction constant in android.view.ViewConfiguration.',
  ' == std::log(0.78f) / std::log(0.9f)',
  ' Tension lines cross at (kInflexion, 1).',
  ' Fling scroll is stopped when the scroll position is |kThresholdForFlingEnd|\n' +
    ' pixels or closer from the end.',
  ' Leaky to allow access from the impl thread.'
]
mobile_scroller_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_latency_metadata_mojom_traits.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
event_mojom_traits.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
mojom_traits_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  " Test KeyboardLayoutEngine implementation that always returns 'x'."
]
null_event_targeter.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cursor_controller.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
cursor_controller_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
device_event.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
device_manager.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
device_manager_manual.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
device_manager_udev.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Start monitoring input device changes.'
]
device_event_dispatcher_evdev.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_converter_evdev.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
event_converter_evdev_impl.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Values for EV_KEY.',
  ' Values for the EV_SW code.'
]
event_converter_evdev_impl_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test fixture.',
  ' Test fixture which defers device set up, tests need to call SetUpDevice().',
  ' Test that SetAllowedKeys() causes events for non-allowed keys to be dropped.',
  ' Test that if a non-allowed key is pressed when SetAllowedKeys() is called\n' +
    ' that the non-allowed key is released.',
  ' Verify log conversions for EventDeviceInfoImpl, base EventDeviceInfo,\n' +
    ' and InputDevice member.',
  ' Twiddle each field that can reasonably be changed independently.'
]
event_converter_test_util.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_device_info.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' USB vendor and product strings are pragmatically limited to 126\n' +
    ' characters each, so device names more than twice that should be\n' +
    ' unusual.',
  ' Certain devices need to be forced to use libinput in place of\n' +
    ' evdev/libgestures',
  ' |request| needs to be the equivalent to:\n' +
    ' struct input_mt_request_layout {\n' +
    '   uint32_t code;\n' +
    '   int32_t values[num_slots];\n' +
    ' };\n' +
    ' |size| is num_slots + 1 (for code).',
  ' static',
  ' static'
]
event_device_info_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_device_test_util.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' This test requres 64 bit groups in bitmask inputs (merge them if 32-bit).',
  ' Captured from HJC Game ZD - V gamepad.',
  ' Captured from Xbox 360 gamepad.',
  ' Captured from iBuffalo gamepad.',
  ' Captured from Basking.',
  ' Captured from Pixelbook.',
  ' Captured from Pixel Slate.',
  ' Captured from Chromebook Pixel.',
  ' Captured from Chromebook Pixel.',
  ' Fake Atmel touchscreen based on real device from Chromebook Pixel,\n' +
    ' with the addition of ABS_MT_TOOL_TYPE capability.',
  ' Captured from Chromebook Pixel.',
  ' Captured from generic HP KU-1156 USB keyboard.',
  ' Captured from generic HP KU-1156 USB keyboard (2nd device with media keys).',
  ' Captured from Dell MS111-L 3-Button Optical USB Mouse.',
  ' Captured from "Mimo Touch 2" Universal DisplayLink monitor.',
  ' Captured from Wacom Intuos Pen and Touch Small Tablet.',
  ' Captured from Wacom Intuos Pen and Touch Small Tablet.',
  ' Captured from Logitech Wireless Touch Keyboard K400.',
  ' Captured from Elo TouchSystems 2700 touchscreen.',
  ' Captured from Intel reference design: "Wilson Beach".',
  ' Captured from Eve Chromebook',
  ' Captured from Pixel Slate',
  ' Captured from Logitech Tap touch controller',
  ' Captured from Kohaku EVT',
  ' Captured from Kohaku EVT',
  ' captured from Xbox Elite series 2 controller',
  ' The built-in keyboard for Eve, which has an Assistant key.',
  ' The built-in keyboard on Sarien, which has a few more keys than normal.',
  ' The built-in keyboard on Woomax, which has a numeric pad',
  ' The keyboard of a Drobit',
  ' The numberpad-aspect of the touchpad on Drobit.',
  ' Captured from Dell Latitude E6510, which report non valid resolutions and is\n' +
    ' semi-multitouch.',
  ' Captured from HP ProBook 6560b. Touchpad that is semi-multitouch.',
  ' Captured from Redrix. Haptic touchpad.',
  ' NB: Please use the capture_device_capabilities.py script to add more\n' +
    ' test data here. This will help ensure the data matches what the kernel\n' +
    ' reports for a real device and is entered correctly.\n' +
    ' For Chrome OS, you can run the script by installing a test image and running:\n' +
    '   DEVICE_IP=<your device IP>\n' +
    '   cd ui/events/ozone/evdev/\n' +
    '   scp capture_device_capabilities.py "root@${DEVICE_IP}:/tmp/"\n' +
    '   ssh "root@${DEVICE_IP}" python /tmp/capture_device_capabilities.py'
]
event_factory_evdev.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Thread safe dispatcher proxy for EventFactoryEvdev.\n' +
    ' This is used on the device I/O thread for dispatching to UI.'
]
event_factory_evdev_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_thread_evdev.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Internal base::Thread subclass for events thread.'
]
fake_keyboard_heuristic_metrics.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gamepad_event_converter_evdev.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gamepad_event_converter_evdev_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
heatmap_palm_detector.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
imposter_checker_evdev.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
imposter_checker_evdev_state.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_controller_evdev.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_controller_evdev_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_device_factory_evdev.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_device_factory_evdev_metrics.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_device_factory_evdev_proxy.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_device_factory_evdev_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Fragment of DescribeForLog() information for evdev converters that should\n' +
    ' appear once per device.',
  ' Splits multi-line block of text into array of strings.',
  " Following tests exercise the factory's DescribeForLog() facility, where\n" +
    ' we need to mock a variety of devices.'
]
input_device_opener_evdev.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_device_settings_evdev.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used to denote the global instance of settings within the maps which is used\n' +
    ' when per device settings are disabled.'
]
input_injector_evdev.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_injector_evdev_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_evdev.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_reader_libevdev_cros.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
gesture_feedback.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Binary paths.',
  ' Return the values in an array in one string. Used for touch logging.',
  ' Return the values in a gesture property in one string. Used for touch\n' +
    ' logging.',
  ' Compress dumped event logs in place.',
  ' Get the current time in a string.',
  ' Canonize the device name for logging.',
  ' Name event logs in a way that is compatible with existing toolchain.',
  ' Name event logs in a way that is compatible with existing toolchain.',
  ' Set the logging properties to dump event logs.',
  ' Dump touch device property values to a string.',
  ' Dump touch event logs.'
]
gesture_interpreter_libevdev_cros.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Convert libevdev device class to libgestures device class.',
  ' Convert libevdev state to libgestures hardware properties.',
  ' Callback from libgestures when a gesture is ready.',
  ' Convert gestures timestamp (stime_t) to ui::Event timestamp.',
  ' Number of fingers for scroll gestures.',
  ' Number of fingers for swipe gestures.'
]
gesture_logging.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_properties_service.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_property_provider.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' GesturesProp implementation.\n Check the header file for its definition.',
  ' Type-templated GesturesProp.',
  ' Anonymous namespace for utility functions and internal constants.',
  ' The path that we will look for conf files.',
  ' Special keywords for boolean values.',
  ' Check if a device falls into one device type category.',
  ' Trick to get the device path from a file descriptor.',
  ' Check if a match criteria is a device type one.',
  ' Parse a boolean value keyword (e.g., on/off, true/false).',
  ' Log the value of an array property.',
  ' Property type logging function.',
  ' A relay function that dumps evdev log to a place that we have access to\n' +
    ' (the default directory is inaccessible without X11).',
  ' GesturesProp logging function.',
  ' Struct holding properties of a device.',
  ' Base class for device match criterias in conf files.\n' +
    ' Check the xorg-conf spec for more detailed information.',
  ' Match a device based on its evdev name string.',
  ' Math a device based on its device node path.',
  ' Math a USB device based on its USB vid and pid.\n' +
    ' Mostly used for external mice and touchpads.',
  " Match a device based on the system's DMI Product Name. Useful for internal\n" +
    " devices that don't report a very unique vendor and product ID.",
  ' Generic base class for device type math criteria.',
  ' Check if a device is a pointer device.',
  ' Check if a device is a touchpad.',
  ' Check if a device is a touchscreen.',
  ' Struct for sections in xorg conf files.',
  ' Global GesturesPropProvider\n' +
    ' *\n' +
    ' * Used by PropRegistry in GestureInterpreter to forward property value\n' +
    ' * creations from there.\n' +
    ' *'
]
gesture_timer_provider.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' libgestures requires that this be in the top level namespace.'
]
haptic_touchpad_handler.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(b/205702807): Remove these definitions when the new version of input.h\n' +
    ' is rolled in.',
  ' static'
]
haptic_touchpad_handler_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
libinput_event_converter.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Log the result of setting a device configuration value.',
  " Get a comma-separated string of the device's capabilities"
]
microphone_mute_switch_event_converter_evdev.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
microphone_mute_switch_event_converter_evdev_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mouse_button_map_evdev.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used as the id to mark the value of the setting before settings were split\n' +
    ' per-device.'
]
mouse_button_map_evdev_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mouse_button_property.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
numberpad_metrics.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constants for identifying Elan Dynamic Numberpad',
  ' Recognize the majority of keys (other than Enter) that could\n' +
    ' be found on a numberpad, and only a number pad; this does not\n' +
    ' cover additional keys that are often on external stand-alone\n' +
    " numeric pads (backspace, tab, 'Calculator'), or cover every\n" +
    ' defined KEY_KP* symbol.',
  ' The Elan Dynamic Numberpad includes a few extra keys,\n' +
    ' which we want to recognize; they include backspace, a\n' +
    " non-kp equals key, and it can emit a '%' via Shift-5.",
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' Background: the dynamic numberpad lets us know when its state is changed\n' +
    ' via a numlock keypress, however we cannot retrieve the current state. On\n' +
    ' boot it is reasonable to assume it is off, however on chromium restart (for\n' +
    " crash or any other reason) we don't know.\n" +
    ' Using the assumption that a numberpad key can only come through when it\n' +
    ' is turned on, we can fix the state at that point; prior to that, we can\n' +
    ' only guess. We are conservative and only push events that must be true,\n' +
    ' and accept we might lose an activation or cancellation in combination\n' +
    ' with a crash/restart.',
  ' Used when a key has been pressed on a dynamic numberpad,\n' +
    ' proving the numlock state is on.',
  ' This method is only intended to be called for input devices where\n' +
    ' HasNumberpad() is true. We do not have enough information\n' +
    ' (from the input_device) to actually check this.'
]
numberpad_metrics_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(b/202039817): Should not need internal detail of feature_usage_metrics',
  ' Utility to provide clear gtest caller information for nested\n' +
    ' expectations; requires scope_level_ variable in caller.',
  ' Class used for testing parameterised variations of number-lock presses to\n' +
    ' dynamic number pad',
  ' Investigate all significant variations for the dynamic numberpad\n' +
    ' state deduction logic.'
]
stylus_button_event_converter_evdev.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
stylus_button_event_converter_evdev_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Test fixture.'
]
tablet_event_converter_evdev.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Convert tilt from [min, min + num_values) to [-90deg, +90deg)'
]
tablet_event_converter_evdev_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Test fixture.',
  ' Uses real data captured from Wacom Intuos 5 Pen',
  ' Should only get an event if BTN_TOOL received',
  ' for digitizer pen with only one side button',
  ' Twiddle each field that can reasonably be changed independently.'
]
touch_evdev_debug_buffer.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_evdev_types.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_event_converter_evdev.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' These values are persisted to logs. Entries should not be renumbered and\n' +
    ' numeric values should never be reused. Needs to match TouchType in enums.xml.',
  ' Convert tilt from [min, min + num_values] to [-90deg, +90deg]',
  ' This function calculate the touch_major_scale_ and touch_minor_scale_ from\n' +
    ' resolution.',
  ' Returns a list of supported hidraw spi devices.',
  ' static'
]
touch_event_converter_evdev_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Returns a fake TimeTicks based on the given microsecond offset.',
  ' Test fixture.',
  ' crbug.com/773087',
  ' crbug.com/477695',
  ' crbug.com/407386',
  ' crbug.com/446939',
  ' TouchFilter which:\n' +
    ' - Considers all events of type |noise_event_type| as noise.\n' +
    ' - Keeps track of the events that it receives.',
  ' crbug.com/771374'
]
edge_touch_filter.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' The maximum distance from the border to be considered for filtering'
]
false_touch_finder.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
false_touch_finder_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Test that a touch on the edge which never leaves is delayed and never\n' +
    ' released.',
  ' Test that a touch on the edge which starts at an edge is delayed but released\n' +
    ' as soon as it moves.',
  ' Test that a touch on the edge which starts away from the edge is not\n' +
    ' cancelled when it moves to the edge.',
  ' Test that a pinky finger lightly pressed is not filtered out. Based on real\n' +
    ' logs.'
]
heuristic_stylus_palm_detection_filter.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
heuristic_stylus_palm_detection_filter_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
neural_stylus_palm_detection_filter.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Returns the Euclidean distance between two points.',
  ' * The provided stroke must be a neighbor stroke rather than a stroke currently\n' +
    " * being evaluated. The parameter 'neighbor_min_sample_count' might be different\n" +
    ' * from the config, depending on the specific usage in the caller.',
  " * The flow here is similar to 'AppendFeatures' above, but we rely on the\n" +
    ' * timing of the samples rather than on the explicit number / position of\n' +
    ' * samples.'
]
neural_stylus_palm_detection_filter_model.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
neural_stylus_palm_detection_filter_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
neural_stylus_palm_detection_filter_util.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * During resampling, the later events are used as a basis to populate\n' +
    ' * non-resampled fields like major and minor. However, if the requested time is\n' +
    ' * within this delay of the earlier event, the earlier event will be used as a\n' +
    ' * basis instead.',
  ' * Interpolate between the "before" and "after" events to get a resampled value\n' +
    " * at the timestamp 'time'. Not all fields are interpolated. For fields that are\n" +
    " * not interpolated, the values are taken from the 'after' sample unless the\n" +
    " * requested time is very close to the 'before' sample."
]
neural_stylus_palm_detection_filter_util_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * There should always be at least (max_sample_count - 1) * resample_period\n' +
    " * worth of samples. However, that's not sufficient. In the cases where the gap\n" +
    ' * between samples is very large (larger than the sample horizon), there needs\n' +
    ' * to be another sample in order to calculate resampled values throughout the\n' +
    ' * entire range.'
]
open_palm_detection_filter.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
open_palm_detection_filter_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
palm_detection_filter.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
palm_detection_filter_factory.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
palm_detection_filter_factory_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
onedevice_train_palm_detection_filter_inference.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' -----------------------------------------------------------------------------\n' +
    ' OP LIBRARY\n' +
    ' Copied here to make sure that the inference code always stays in sync with\n' +
    ' the lib that it was generated for.\n' +
    ' -----------------------------------------------------------------------------',
  ' Default to using std::copy and std::fill over memcpy and memset as they\n' +
    ' are usually faster, thanks to the compiler getting stricter alignment\n' +
    ' guarantees.',
  ' Helper to reinterpret memory as Eigen matrices.',
  ' Timer for individual operations. For each operation, add a statement like\n' +
    '   BENCHMARK_TIMER(name_part1, name_part2, ...);\n' +
    ' to the beginning of the code. All name parts will be concatenated together\n' +
    ' and a line will be logged after executing the operation showing the name and\n' +
    ' the elapsed time.',
  ' The size of a shape in terms of number of coefficients.',
  ' For convolutional operations, calculates the output size with VALID padding.\n' +
    ' Returns (height, width).',
  ' For convolutional operations, calculates the output size with SAME padding.\n' +
    ' Returns (height, width).',
  ' Helper to compute the size of the inner loop for an op that uses indices to\n' +
    ' specify which axes are reduced.',
  ' This may not execute correctly when pad_value != 0 and T != uint8.',
  ' We use macros instead of template functions with templated functors here\n' +
    " because it's a lot less verbose and easier for the compiler to optimize.",
  ' Returns the start position for a slice in a single dimension.',
  ' Returns the end position for a slice in a single dimension.',
  ' -----------------------------------------------------------------------------\n' +
    ' Simple unary ops\n' +
    ' -----------------------------------------------------------------------------',
  ' We use macros instead of template functions with templated functors here\n' +
    " because it's a lot less verbose and easier for the compiler to optimize.",
  ' Second macro param is value expression, third entry is Eigen vector\n' +
    ' expression.',
  ' -----------------------------------------------------------------------------\n' +
    ' Broadcasting binary ops\n' +
    ' -----------------------------------------------------------------------------',
  ' Increments indices according to a shape.\n' +
    " Returns false if indices can't be incremented because they point to the last\n" +
    ' element.\n' +
    ' E.g. if shape is (2, 3) and indices is [1, 2], indices is incremented to [2,\n' +
    ' 0].',
  ' Returns the offset in a values array given its shape and indices.\n' +
    ' E.g. if the shape is (2, 3) and indices are [1, 2] the offset is 1*3 + 2.',
  ' Like Offset() but with broadcasting.\n' +
    ' E.g. if the input_shape is (2, 1, 3) and indices are [1, 2, 2] the offset is\n' +
    ' 1*1*3 + 2*0 + 2.\n' +
    ' The indices_rank can be greater than the input_rank and then the first\n' +
    ' indices_rank - input_rank indices are ignored.\n' +
    ' E.g. if the input_shape is (4) and indices are [2, 3, 1] the offset is 1.',
  ' Second macro param is value expression, third entry is Eigen vector\n' +
    ' expression.',
  ' -----------------------------------------------------------------------------\n' +
    ' Reduce ops\n' +
    ' -----------------------------------------------------------------------------',
  ' We use macros instead of template functions with templated functors here\n' +
    " because it's a lot less verbose and easier for the compiler to optimize.",
  ' -----------------------------------------------------------------------------\n' +
    ' Dequantize ops\n' +
    ' -----------------------------------------------------------------------------',
  ' -----------------------------------------------------------------------------\n' +
    ' AddN op\n' +
    ' -----------------------------------------------------------------------------',
  ' -----------------------------------------------------------------------------\n' +
    ' CONSTANTS\n' +
    ' Note that for now, endianness of the target machine needs to match that of\n' +
    ' the one training was performed on.\n' +
    ' -----------------------------------------------------------------------------',
  ' -----------------------------------------------------------------------------\n' +
    ' INFERENCE\n' +
    ' -----------------------------------------------------------------------------'
]
onedevice_train_palm_detection_filter_inference_beta.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' -----------------------------------------------------------------------------\n' +
    ' OP LIBRARY\n' +
    ' Copied here to make sure that the inference code always stays in sync with\n' +
    ' the lib that it was generated for.\n' +
    ' -----------------------------------------------------------------------------',
  ' Default to using std::copy and std::fill over memcpy and memset as they\n' +
    ' are usually faster, thanks to the compiler getting stricter alignment\n' +
    ' guarantees.',
  ' Helper to reinterpret memory as Eigen matrices.',
  ' Timer for individual operations. For each operation, add a statement like\n' +
    '   BENCHMARK_TIMER(name_part1, name_part2, ...);\n' +
    ' to the beginning of the code. All name parts will be concatenated together\n' +
    ' and a line will be logged after executing the operation showing the name and\n' +
    ' the elapsed time.',
  ' The size of a shape in terms of number of coefficients.',
  ' For convolutional operations, calculates the output size with VALID padding.\n' +
    ' Returns (height, width).',
  ' For convolutional operations, calculates the output size with SAME padding.\n' +
    ' Returns (height, width).',
  ' Helper to compute the size of the inner loop for an op that uses indices to\n' +
    ' specify which axes are reduced.',
  ' This may not execute correctly when pad_value != 0 and T != uint8.',
  ' We use macros instead of template functions with templated functors here\n' +
    " because it's a lot less verbose and easier for the compiler to optimize.",
  ' Returns the start position for a slice in a single dimension.',
  ' Returns the end position for a slice in a single dimension.',
  ' -----------------------------------------------------------------------------\n' +
    ' Simple unary ops\n' +
    ' -----------------------------------------------------------------------------',
  ' We use macros instead of template functions with templated functors here\n' +
    " because it's a lot less verbose and easier for the compiler to optimize.",
  ' Second macro param is value expression, third entry is Eigen vector\n' +
    ' expression.',
  ' -----------------------------------------------------------------------------\n' +
    ' Broadcasting binary ops\n' +
    ' -----------------------------------------------------------------------------',
  ' Increments indices according to a shape.\n' +
    " Returns false if indices can't be incremented because they point to the last\n" +
    ' element.\n' +
    ' E.g. if shape is (2, 3) and indices is [1, 2], indices is incremented to [2,\n' +
    ' 0].',
  ' Returns the offset in a values array given its shape and indices.\n' +
    ' E.g. if the shape is (2, 3) and indices are [1, 2] the offset is 1*3 + 2.',
  ' Like Offset() but with broadcasting.\n' +
    ' E.g. if the input_shape is (2, 1, 3) and indices are [1, 2, 2] the offset is\n' +
    ' 1*1*3 + 2*0 + 2.\n' +
    ' The indices_rank can be greater than the input_rank and then the first\n' +
    ' indices_rank - input_rank indices are ignored.\n' +
    ' E.g. if the input_shape is (4) and indices are [2, 3, 1] the offset is 1.',
  ' Second macro param is value expression, third entry is Eigen vector\n' +
    ' expression.',
  ' -----------------------------------------------------------------------------\n' +
    ' Reduce ops\n' +
    ' -----------------------------------------------------------------------------',
  ' We use macros instead of template functions with templated functors here\n' +
    " because it's a lot less verbose and easier for the compiler to optimize.",
  ' -----------------------------------------------------------------------------\n' +
    ' Dequantize ops\n' +
    ' -----------------------------------------------------------------------------',
  ' -----------------------------------------------------------------------------\n' +
    ' AddN op\n' +
    ' -----------------------------------------------------------------------------',
  ' -----------------------------------------------------------------------------\n' +
    ' CONSTANTS\n' +
    ' Note that for now, endianness of the target machine needs to match that of\n' +
    ' the one training was performed on.\n' +
    ' -----------------------------------------------------------------------------',
  ' -----------------------------------------------------------------------------\n' +
    ' INFERENCE\n' +
    ' -----------------------------------------------------------------------------'
]
onedevice_train_palm_detection_filter_model.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
events_ozone.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
features.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(b/171249701): Remove this flag when we can support this in all cases.',
  ' Controls whether libinput is used to handle touchpad.'
]
gamepad_event.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gamepad_provider_ozone.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_auto_repeat_handler.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_hook_ozone.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ozone-specific implementation of the ui::KeyboardHook interface.\n' +
    ' Wraps the object provided by the current Ozone platform.',
  ' static',
  ' static'
]
keyboard_layout_engine_manager.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
keyboard_layout_engine_test_utils.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_layout_engine_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Hardcoded US layout for standalone testing of XkbKeyboardLayoutEngine.'
]
no_keyboard_layout_engine.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_keyboard_layout_engine.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
stub_keyboard_layout_engine.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
xkb_evdev_codes.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
xkb_keyboard_layout_engine.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' These tables map layout-dependent printable characters/codes\n' +
    ' to legacy Windows-based VKEY values.\n' +
    ' VKEYs are determined by the character produced from a DomCode without\n' +
    ' any modifiers, plus zero or more of the DomCode itself, the character\n' +
    ' produced with the Shift modifier, and the character produced with the\n' +
    ' AltGr modifier.',
  ' A table of one or more PrintableSubEntry cases applies when the VKEY is\n' +
    ' not determined by the unmodified character value alone. Each such table\n' +
    ' corresponds to one unmodified character value. For an entry to match,\n' +
    ' the dom_code must match, and, if test_X is set, then the character for\n' +
    ' the key plus modifier X must also match.',
  ' The two designated Unicode "not-a-character" values are used as sentinels.',
  ' U+0021 exclamation mark',
  ' U+0022 quote',
  ' U+0023 number sign',
  ' U+0024 dollar sign',
  ' U+0027 apostrophe',
  ' U+0028 left parenthesis',
  ' U+0029 right parenthesis',
  ' U+002A *',
  ' U+002B plus sign',
  ' U+002C comma',
  ' U+002D hyphen-minus',
  ' U+002E full stop',
  ' U+002F /',
  ' U+003A colon',
  ' U+003B semicolon',
  ' U+003D =',
  ' U+003F ?',
  ' U+0040 @',
  ' U+005B left square bracket',
  ' U+005C backslash',
  ' U+005D right square bracket',
  ' U+005F _',
  ' U+0060 grave accent',
  ' U+00A7 section',
  ' U+00AB left-pointing double angle quote',
  ' U+00B0 degree',
  ' U+00BA masculine ordinal indicator',
  ' U+00E0 a grave',
  ' U+00E1 a acute',
  ' U+00E2 a circumflex',
  ' U+00E4 a diaeresis',
  ' U+00E6 ae',
  ' U+00E7 c cedilla',
  ' U+00E8 e grave',
  ' U+00E9 e acute',
  ' U+00ED i acute',
  ' U+00F0 eth',
  ' U+00F3 o acute',
  ' U+00F4 o circumflex',
  ' U+00F6 o diaeresis',
  ' U+00F8 o stroke',
  ' U+00F9 u grave',
  ' U+00FA u acute',
  ' U+00FC u diaeresis',
  ' U+0103 a breve',
  ' U+0105 a ogonek',
  ' U+010D c caron',
  ' U+0111 d stroke',
  ' U+0117 e dot above',
  ' U+0119 e ogonek',
  ' U+012F i ogonek',
  ' U+0142 l stroke',
  ' U+015F s cedilla',
  ' U+0161 s caron',
  ' U+016B u macron',
  ' U+0173 u ogonek',
  ' U+017C z dot above',
  ' U+017E z caron',
  ' Table mapping unshifted characters to PrintableSubEntry tables.',
  ' Entries are ordered by character value.',
  ' Table mapping unshifted characters to VKEY values.',
  ' Entries are ordered by character value.'
]
xkb_keyboard_layout_engine_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' This XkbKeyCodeConverter simply uses the numeric value of the DomCode.',
  ' This mock XkbKeyboardLayoutEngine fakes a layout that succeeds only when the\n' +
    ' supplied keycode matches its |Entry|, in which case it supplies DomKey::NONE\n' +
    ' and a character that depends on the flags.'
]
xkb_modifier_converter.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mapping from ui::EventFlags to XKB modifier names.',
  ' static'
]
xkb_modifier_converter_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_event_source.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' PlatformEventSource singleton is thread local so that different instances\n' +
    ' can be used on different threads (e.g. browser thread should be able to\n' +
    " access PlatformEventSource owned by the UI Service's thread)."
]
platform_event_source_stub.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_event_source_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Tests that a dispatcher receives an event.',
  ' Tests that dispatchers receive events in the correct order.',
  ' Tests that if a dispatcher consumes the event, the subsequent dispatchers do\n' +
    ' not receive the event.',
  ' Tests that observers receive events.',
  ' Tests that observers receive events in the correct order.',
  ' Tests that observers and dispatchers receive events in the correct order.',
  ' Tests that an overridden dispatcher receives events before the default\n' +
    ' dispatchers.',
  ' Tests that an overridden dispatcher can request that the default dispatchers\n' +
    ' can dispatch the events.',
  ' Runs a callback during an event dispatch.',
  ' Test that if a dispatcher removes another dispatcher that is later in the\n' +
    ' dispatcher list during dispatching an event, then event dispatching still\n' +
    ' continues correctly.',
  ' Tests that if a dispatcher removes itself from the dispatcher list during\n' +
    ' dispatching an event, then event dispatching continues correctly.',
  ' Tests that if a dispatcher removes itself from the dispatcher list during\n' +
    ' dispatching an event, and this dispatcher is last in the dispatcher-list,\n' +
    ' then event dispatching ends correctly.',
  ' Tests that if a dispatcher removes a single dispatcher that comes before it\n' +
    ' in the dispatcher list, then dispatch continues correctly.',
  ' Tests that if a dispatcher removes multiple dispatchers that comes before it\n' +
    ' in the dispatcher list, then dispatch continues correctly.',
  ' Tests that adding a dispatcher during dispatching an event receives that\n' +
    ' event.',
  ' Provides mechanism for running tests from inside an active message-loop.',
  ' Tests that a ScopedEventDispatcher restores the previous dispatcher when\n' +
    ' destroyed.',
  ' This dispatcher destroys the handle to the ScopedEventDispatcher when\n' +
    ' dispatching an event.',
  ' Tests that resetting an overridden dispatcher, and installing another\n' +
    ' overridden dispatcher before the nested message-loop completely unwinds\n' +
    ' function correctly.'
]
scoped_event_dispatcher.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_event_watcher.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Formats the |message| by removing '@' char followed by any digits until the\n" +
    ' next char. Also removes new line, tab and carriage-return.',
  " A dedicated thread for watching wl_display's file descriptor. The reason why\n" +
    " watching happens on a separate thread is that the thread mustn't be blocked.\n" +
    ' Otherwise, if Chromium is used with Wayland EGL, a deadlock may happen. The\n' +
    ' deadlock happened when the thread that had been watching the file descriptor\n' +
    " (it used to be the browser's UI thread) called wl_display_prepare_read, and\n" +
    ' then started to wait until the thread, which was used by the gpu service,\n' +
    ' completed a buffer swap and shutdowned itself (for example, a menu window is\n' +
    ' in the process of closing). However, that gpu thread hanged as it called\n' +
    ' Wayland EGL that also called wl_display_prepare_read internally and started\n' +
    " to wait until the previous caller of the wl_display_prepare_read (that's by\n" +
    ' the design of the wayland-client library). This situation causes a deadlock\n' +
    ' as the first caller of the wl_display_prepare_read is unable to complete\n' +
    ' reading as it waits for another thread to complete, and that another thread\n' +
    ' is also unable to complete reading as it waits until the first caller reads\n' +
    " the display's file descriptor. For more details, see the implementation of\n" +
    ' the wl_display_prepare_read in third_party/wayland/src/src/wayland-client.c.'
]
wayland_event_watcher_fdwatch.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
wayland_event_watcher_glib.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The priorities of the event sources are important to be set correctly so that\n' +
    ' GTK event source is able to process the events it requires. This uses\n' +
    ' the same priority as MessagePumpGlib for fd watching.',
  ' static'
]
x11_event_source.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' X11EventSource, public',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' X11EventSource, protected'
]
x11_event_watcher_fdwatch.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
x11_event_watcher_glib.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_hotplug_event_handler.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Used for updating the state on the UI thread once device information is\n' +
    ' parsed on helper threads.',
  " Identical to FP3232_TO_DOUBLE from libxi's XExtInt.c",
  ' Stores a copy of the x11::Input::ValuatorClass values so X11 device\n' +
    ' processing can happen on a worker thread. This is needed since X11 structs\n' +
    ' are not copyable.',
  ' Stores a copy of the XITouchClassInfo values so X11 device processing can\n' +
    ' happen on a worker thread. This is needed since X11 structs are not copyable.',
  ' X11 display cache used on worker threads. This is filled on the UI thread and\n' +
    ' passed in to the worker threads.',
  ' Returns true if |name| is the name of a known invalid keyboard device. Note,\n' +
    ' this may return false negatives.',
  ' Returns true if |name| is the name of a known XTEST device. Note, this may\n' +
    ' return false negatives.',
  ' Helper used to parse keyboard information. When it is done it uses\n' +
    ' |reply_runner| and |callback| to update the state on the UI thread.',
  ' Helper used to parse mouse information. When it is done it uses\n' +
    ' |reply_runner| and |callback| to update the state on the UI thread.',
  ' Helper used to parse touchpad information. When it is done it uses\n' +
    ' |reply_runner| and |callback| to update the state on the UI thread.',
  ' Helper used to parse touchscreen information. When it is done it uses\n' +
    ' |reply_runner| and |callback| to update the state on the UI thread.',
  ' Called on a worker thread to parse the device information.'
]
pointer_details.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_target_handler.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_target_handler_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An EventTarget that holds ownership of its target and delegate EventHandlers.',
  ' An EventHandler that sets itself as a target handler for an EventTarget and\n' +
    ' can recursively dispatch an Event.',
  ' An EventHandler that sets itself as a target handler for an EventTarget and\n' +
    ' destroys that EventTarget when handling an Event, possibly after recursively\n' +
    ' handling the Event.',
  ' An EventHandler that can be set to receive events in addition to the target\n' +
    ' handler and counts the Events that it receives.',
  ' An EventCountingEventHandler that will also mark the event to stop further\n' +
    ' propataion.',
  ' Tests that a ScopedTargetHandler invokes both the target and a delegate.',
  ' Tests that a ScopedTargetHandler invokes both the target and a delegate but\n' +
    ' does not further propagate the event after a handler stops event propagation.',
  ' Tests that a ScopedTargetHandler invokes both the target and a delegate when\n' +
    ' an Event is dispatched recursively such as with synthetic events.',
  ' Tests that a it is safe to delete a ScopedTargetHandler while handling an\n' +
    ' event.',
  ' Tests that a it is safe to delete a ScopedTargetHandler while handling an\n' +
    ' event recursively.'
]
event_generator.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' A TickClock that advances time by one millisecond on each call to NowTicks().',
  ' static',
  ' static'
]
events_test_utils.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
events_test_utils_x11.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Converts ui::EventType to state for X*Events.',
  ' Converts EventType to XKeyEvent type.',
  ' Converts EventType to XI2 event type.',
  ' Converts Aura event type and flag to X button event.'
]
keyboard_hook_monitor_utils.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_layout.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_layout_mac.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_layout_win.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' |LoadKeyboardLayout()| ensures the locale to be loaded into the system\n' +
    ' (Similar to temporarily adding a locale in Control Panel), otherwise\n' +
    ' |ToUnicodeEx()| will fall-back to the default locale.\n' +
    ' See MSDN LoadKeyboardLayout():\n' +
    ' https://msdn.microsoft.com/en-us/library/windows/desktop/ms646305(v=vs.85).aspx\n' +
    ' And language constants and strings:\n' +
    ' https://msdn.microsoft.com/en-us/library/windows/desktop/dd318693(v=vs.85).aspx'
]
motion_event_test_utils.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_event_waiter.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_event_waiter_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Waits until an event target receives the key pressed event.'
]
test_event.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_event_handler.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_event_processor.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_event_rewriter.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_event_source.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_event_target.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TestEventTarget, protected',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TestEventTarget, private'
]
test_event_targeter.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_event_waiter.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' XEventWaiter implementation',
  ' Returns atom that indidates that the XEvent is marker event.'
]
bitset_32_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
motion_event.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
motion_event_generic.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' static',
  ' static'
]
motion_event_generic_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
velocity_tracker.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Implements a particular velocity tracker algorithm.',
  ' Threshold between Action::MOVE events for determining that a pointer has\n' +
    ' stopped moving. Some input devices do not send Action::MOVE events in the\n' +
    ' case where a pointer has stopped.  We need to detect this case so that we can\n' +
    ' accurately predict the velocity after the pointer starts moving again.',
  ' Threshold between Action::MOVE and Action::{UP|POINTER_UP} events for\n' +
    ' determining that a pointer has stopped moving. This is a larger threshold\n' +
    ' than |kAssumePointerMoveStoppedTimeMs|, as some devices may delay synthesis\n' +
    ' of Action::{UP|POINTER_UP} to reduce risk of noisy release.',
  ' Velocity tracker algorithm based on least-squares linear regression.',
  ' Velocity tracker algorithm that uses an IIR filter.',
  ' --- VelocityTracker ---',
  ' --- LeastSquaresVelocityTrackerStrategy ---',
  ' * Solves a linear least squares problem to obtain a N degree polynomial that\n' +
    ' * fits the specified input data as nearly as possible.\n' +
    ' *\n' +
    ' * Returns true if a solution is found, false otherwise.\n' +
    ' *\n' +
    ' * The input consists of two vectors of data points X and Y with indices 0..m-1\n' +
    ' * along with a weight vector W of the same size.\n' +
    ' *\n' +
    ' * The output is a vector B with indices 0..n that describes a polynomial\n' +
    ' * that fits the data, such the sum of W[i] * W[i] * abs(Y[i] - (B[0] + B[1]\n' +
    ' * X[i] * + B[2] X[i]^2 ... B[n] X[i]^n)) for all i between 0 and m-1 is\n' +
    ' * minimized.\n' +
    ' *\n' +
    ' * Accordingly, the weight vector W should be initialized by the caller with the\n' +
    ' * reciprocal square root of the variance of the error in each input data point.\n' +
    ' * In other words, an ideal choice for W would be W[i] = 1 / var(Y[i]) = 1 /\n' +
    ' * stddev(Y[i]).\n' +
    ' * The weights express the relative importance of each data point.  If the\n' +
    ' * weights are* all 1, then the data points are considered to be of equal\n' +
    ' * importance when fitting the polynomial.  It is a good idea to choose weights\n' +
    ' * that diminish the importance of data points that may have higher than usual\n' +
    ' * error margins.\n' +
    ' *\n' +
    ' * Errors among data points are assumed to be independent.  W is represented\n' +
    ' * here as a vector although in the literature it is typically taken to be a\n' +
    ' * diagonal matrix.\n' +
    ' *\n' +
    ' * That is to say, the function that generated the input data can be\n' +
    ' * approximated by y(x) ~= B[0] + B[1] x + B[2] x^2 + ... + B[n] x^n.\n' +
    ' *\n' +
    ' * The coefficient of determination (R^2) is also returned to describe the\n' +
    ' * goodness of fit of the model for the given data.  It is a value between 0\n' +
    ' * and 1, where 1 indicates perfect correspondence.\n' +
    ' *\n' +
    ' * This function first expands the X vector to a m by n matrix A such that\n' +
    ' * A[i][0] = 1, A[i][1] = X[i], A[i][2] = X[i]^2, ..., A[i][n] = X[i]^n, then\n' +
    ' * multiplies it by w[i]./\n' +
    ' *\n' +
    ' * Then it calculates the QR decomposition of A yielding an m by m orthonormal\n' +
    ' * matrix Q and an m by n upper triangular matrix R.  Because R is upper\n' +
    ' * triangular (lower part is all zeroes), we can simplify the decomposition into\n' +
    ' * an m by n matrix Q1 and a n by n matrix R1 such that A = Q1 R1.\n' +
    ' *\n' +
    ' * Finally we solve the system of linear equations given by\n' +
    ' * R1 B = (Qtranspose W Y) to find B.\n' +
    ' *\n' +
    ' * For efficiency, we lay out A and Q column-wise in memory because we\n' +
    ' * frequently operate on the column vectors.  Conversely, we lay out R row-wise.\n' +
    ' *\n' +
    ' * http://en.wikipedia.org/wiki/Numerical_methods_for_linear_least_squares\n' +
    ' * http://en.wikipedia.org/wiki/Gram-Schmidt',
  ' --- IntegratingVelocityTrackerStrategy ---'
]
velocity_tracker_state.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Special constant to request the velocity of the active pointer.'
]
velocity_tracker_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Tests that a rapid deceleration won't result in a velocity going in the\n" +
    ' opposite direction to the pointers primary movement, with the LSQ_RESTRICTED\n' +
    ' strategy. See crbug.com/417855.'
]
event_utils_win_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
events_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
events_win_utils.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' From MSDN: "Mouse" events are flagged with 0xFF515700 if they come\n' +
    ' from a touch or stylus device.  In Vista or later, the eighth bit,\n' +
    ' masked by 0x80, is used to differentiate touch input from pen input\n' +
    ' (0 = pen, 1 = touch).',
  ' Get the native mouse key state from the native event message type.',
  ' Returns a mask corresponding to the set of pressed modifier keys.\n' +
    ' Checks the current global state and the state sent by client mouse messages.',
  ' Returns a mask corresponding to the set of pressed mouse buttons.\n' +
    ' This includes the button of the given message, even if it is being released.',
  ' Windows emulates mouse messages for touch events.',
  ' Conversion scan_code and LParam each other.\n' +
    ' uint16_t scan_code:\n' +
    '     ui/events/keycodes/dom/dom_code_data.inc\n' +
    ' 0 - 15bits: represetns the scan code.\n' +
    ' 28 - 30 bits (0xE000): represents whether this is an extended key or not.\n' +
    ' LPARAM lParam:\n' +
    '     http://msdn.microsoft.com/en-us/library/windows/desktop/ms644984.aspx\n' +
    ' 16 - 23bits: represetns the scan code.\n' +
    ' 24bit (0x0100): represents whether this is an extended key or not.'
]
keyboard_hook_monitor_impl.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
keyboard_hook_win_base.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
media_keyboard_hook_win.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
media_keyboard_hook_win_interactive_test.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test that we catch the different media key events.',
  ' Test that the received events have the proper state.'
]
media_keyboard_hook_win_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
modifier_keyboard_hook_win.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' The Windows KeyboardHook implementation uses a low-level hook in order to\n' +
    ' intercept system key combinations such as Alt + Tab.  A standard hook or\n' +
    ' other window message filtering mechanisms will allow us to observe key events\n' +
    ' but we would be unable to block them or the corresponding system action.\n' +
    ' There are downsides to this approach as described in the following blurbs.',
  ' Low-level hooks are not given a repeat state for each key event.  This is\n' +
    ' because the events are intercepted prior to the OS handling them and tracking\n' +
    ' their states the usual way.  We solve this by tracking the last key seen and\n' +
    ' modifying the event manually to indicate it is a repeat.  This works for\n' +
    ' every key except escape which is used to exit fullscreen and tear down the\n' +
    ' hook.  The quirk is that after the hook is torn down, the first escape key\n' +
    ' event passed to the window will appear like an initial keydown.  This is\n' +
    " because it *is* an initial keydown from Windows' perspective as it was being\n" +
    ' intercepted before then.',
  ' Intercepting modifier keys (Ctrl, Shift, Win, Etc.) within a low-level\n' +
    ' keyboard hook will result in an incorrect modifier state reported by the OS\n' +
    ' for that key.  This is because the hook intercepts the event before the OS\n' +
    ' has a chance to observe the event and update its internal state.  This\n' +
    ' trade-off is necessary as we also want to intercept and prevent specific key\n' +
    ' combos from taking effect.',
  ' A related side-effect occurs when intercepting printable characters.  Since\n' +
    ' the key event is intercepted before the OS handles it, no char events are\n' +
    ' produced.  So if we intercept scan codes which should generate a printable\n' +
    ' character, the result is that the key up/down events are sent correctly but\n' +
    ' no WM_CHAR message is generated.  This is unacceptable for some usages of the\n' +
    ' hook as the behavior is very different between locked and unlocked states.',
  ' This is a fair number of downsides however the ability to block system key\n' +
    ' combos is a hard requirement so we need to work around them.',
  ' The solution we have adopted is:\n' +
    ' - Only intercept modifiers and allow all other keys to pass through\n' +
    '   Note: Shift is not included as otherwise it is not applied by the OS and\n' +
    '         the printable characters generated by the key event will be wrong.\n' +
    ' - Track the repeat state ourselves\n' +
    ' - Update the per-thread key state for the tracked modifiers using\n' +
    '   SetKeyboardState().',
  ' In practice this works well as intercepting the modifiers allows us to block\n' +
    ' system keyboard combos and all other keys generate the proper events and\n' +
    ' printable chars.',
  ' Using SetKeyboardState() allows us to tell Windows the current state for the\n' +
    ' modifiers we intercept.  This state only works for the current thread,\n' +
    ' meaning that other applications / threads which check the key state for the\n' +
    ' modifiers will not receive an accurate value.  One constraint for the\n' +
    ' KeyboardHook is that it is only engaged when our window is fullscreen and\n' +
    " focused so we don't need to worry too much about other apps.",
  ' Represents a VK_LCONTROL scancode with the 0x02 flag in the high word.\n' +
    ' The 0x02 flag does not seem to be documented on MSDN or in the public Windows\n' +
    ' headers.  I suspect it is related to the KF_ family of constants which skips\n' +
    ' from 0x0100 to 0x0800 with 0x0200 and 0x0400 undocumented (likely reserved).',
  ' {Get|Set}KeyboardState() receives an array with 256 elements.  This is\n' +
    ' described in MSDN but no constant exists for this value.  Function reference:\n' +
    ' https://docs.microsoft.com/en-us/windows/desktop/api/winuser/nf-winuser-getkeyboardstate\n' +
    ' https://docs.microsoft.com/en-us/windows/desktop/api/winuser/nf-winuser-setkeyboardstate',
  ' Used for setting and testing the bits in the KeyboardState array.',
  ' static',
  ' static',
  ' static',
  ' static'
]
modifier_keyboard_hook_win_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
system_event_state_lookup.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
events_x_utils.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Scroll amount for each wheelscroll event.  120 is what Chrome uses on\n' +
    ' Windows, Fuchsia WHEEL_DELTA, and also it roughly matches Firefox on Linux.\n' +
    ' See https://crbug.com/1270089 for the detailed reasoning.',
  ' A class to track current modifier state on master device. Only track ctrl,\n' +
    ' alt, shift and caps lock keys currently. The tracked state can then be used\n' +
    ' by floating device.',
  " Detects if a touch event is a driver-generated 'special event'.\n" +
    " A 'special event' is a touch event with maximum radius and pressure at\n" +
    ' location (0, 0).\n' +
    ' This needs to be done in a cleaner way: http://crbug.com/169256',
  ' Get the event flag for the button in XButtonEvent. During a ButtonPress\n' +
    ' event, |state| in XButtonEvent does not include the button that has just been\n' +
    ' pressed. Instead |state| contains flags for the buttons (if any) that had\n' +
    ' already been pressed before the current button, and |button| stores the most\n' +
    ' current pressed button. So, if you press down left mouse button, and while\n' +
    ' pressing it down, press down the right mouse button, then for the latter\n' +
    ' event, |state| would have Button1Mask set but not Button3Mask, and |button|\n' +
    ' would be 3.',
  ' Takes Xlib Time and returns a time delta that is immune to timer rollover.\n' +
    ' This function is not thread safe as we do not use a lock.',
  " This is ported from libxi's FP1616toDBL in XExtInt.c"
]
x11_event_translation.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' In X11 touch events, a new tracking_id/slot mapping is set up for each new\n' +
    ' event (see |ui::GetTouchIdFromXEvent| function), which needs to be cleared\n' +
    ' at destruction time for corresponding release/cancel events. In this\n' +
    ' particular case, ui::TouchEvent class is extended so that dtor can be\n' +
    ' overridden in order to implement this platform-specific behavior.',
  ' Translates XI2 XEvent into a ui::Event.',
  ' Translates a XEvent into a ui::Event.',
  ' Convenience function that translates XEvent into ui::KeyEvent',
  ' Convenience function that translates XEvent into ui::MouseEvent',
  ' Convenience function that translates XEvent into ui::TouchEvent',
  ' Convenience function that translates XEvent into ui::MouseWheelEvent'
]
achoreographer_compat.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
android_surface_control_compat.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' ASurface',
  ' ASurfaceTransaction enums',
  ' ASurfaceTransaction',
  ' ASurfaceTransactionStats',
  ' Note that the framework API states that this callback can be dispatched on\n' +
    ' any thread (in practice it should be a binder thread).',
  ' Note that the framework API states that this callback can be dispatched on\n' +
    ' any thread (in practice it should be a binder thread).',
  ' static'
]
android_surface_control_compat_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
java_bitmap.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().',
  ' Converts |bitmap| to an SkBitmap of the same size and format.\n' +
    ' Note: |j_bitmap| is assumed to be non-null, non-empty and of format\n' +
    ' RGBA_8888.',
  ' Converts |skbitmap| to a Java-backed bitmap (android.graphics.Bitmap).\n' +
    ' Note: return nullptr jobject if |skbitmap| is null or empty.',
  ' Wraps a Java bitmap as an SkPixmap. Since the pixmap references the\n' +
    ' underlying pixel data in the Java bitmap directly, it is only valid as long\n' +
    ' as |bitmap| is.',
  ' BitmapFormat has the same values as AndroidBitmapFormat, for simplicitly, so\n' +
    ' that SkColorTypeToBitmapFormat() and the JavaBitmap::format() have the same\n' +
    ' values.'
]
view_configuration.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().',
  ' Leaky to allow access from any thread.'
]
animation.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
animation_android.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().',
  ' static'
]
animation_chromeos.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This should only be used by the ChromeOS Accessibility system.\n static',
  ' static',
  ' static',
  ' static'
]
animation_container.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
animation_container_unittest.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Makes sure the animation ups the ref count of the container and releases it\n' +
    ' appropriately.',
  ' Makes sure multiple animations are managed correctly.',
  ' Makes sure observer is notified appropriately.',
  ' Tests that calling SetAnimationRunner() keeps running animations at their\n' +
    ' current point.'
]
animation_linux.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Linux toolkits only have a global setting for whether animations should be\n' +
    ' enabled.  So use it for all of the specific settings that Chrome needs.',
  ' static',
  ' static',
  ' static'
]
animation_runner.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A default AnimationRunner based on base::Timer.\n' +
    ' TODO(crbug.com/41453351): Remove this altogether.',
  ' static'
]
animation_runner_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verifies that calling Stop() during Step() actually stops the timer.'
]
animation_test_api.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
animation_unittest.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' RunAnimation',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' CancelAnimation',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' EndAnimation',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' DeletingAnimationDelegate',
  ' AnimationDelegate implementation that deletes the animation in ended.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' LinearCase',
  ' Lets an animation run, invoking End part way through and make sure we get the\n' +
    ' right delegate methods invoked.',
  ' Runs an animation with a delegate that deletes the animation in end.',
  ' Test that current value is always 0 after Start() is called.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' PrefersReducedMotion tests'
]
animation_win.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
animation_curve.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyframe_animation_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests client-specific property ids.'
]
keyframe_effect.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyframe_model.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This should match the RunState enum.',
  ' TODO(crbug.com/41430321): Local time should be scaled by playback rate by\n' +
    ' spec.'
]
keyframed_animation_curve.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyframed_animation_curve_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that a color animation with one keyframe works as expected.',
  ' Tests that a color animation with two keyframes works as expected.',
  ' Tests that a color animation with three keyframes works as expected.',
  ' Tests that a color animation with multiple keys at a given time works sanely.',
  ' Tests that a float animation with one keyframe works as expected.',
  ' Tests that a float animation with two keyframes works as expected.',
  ' Tests that a float animation with three keyframes works as expected.',
  ' Tests that a float animation with multiple keys at a given time works sanely.',
  ' Tests that a transform animation with one keyframe works as expected.',
  ' Tests that a transform animation with two keyframes works as expected.',
  ' Tests that a transform animation with three keyframes works as expected.',
  ' Tests that a transform animation with multiple keys at a given time works\n' +
    ' sanely.',
  ' Tests that a discrete transform animation (e.g. where one or more keyframes\n' +
    ' is a non-invertible matrix) works as expected.',
  ' Tests that the keyframes may be added out of order.',
  ' Tests that a linear timing function works as expected.',
  ' Tests that a cubic bezier timing function works as expected.',
  ' Tests a step timing function if the change of values occur at the start.',
  ' Similar to KeyframeStepsTimingFunctionStepAtStart, but applying the timing\n' +
    ' function to the curve rather than the first keyframe.',
  ' Tests a step timing function if the change of values occur at the end.',
  " A jump_both steps function has 1 extra jump. Ensure that this doesn't\n" +
    ' overflow when using the maximum number of steps. In this case, the steps\n' +
    ' function should be effectively the same as linear.\n' +
    ' crbug.com/1313399',
  ' Tests that maximum animation scale is computed as expected.',
  ' Tests that an animation with a curve timing function works as expected.',
  ' Tests that an animation with a curve and keyframe timing function works as\n' +
    ' expected.',
  ' Tests that a linear timing function works as expected for inputs outside of\n' +
    ' range [0,1]',
  ' If a curve cubic-bezier timing function produces timing outputs outside\n' +
    ' the range [0, 1] then a keyframe cubic-bezier timing function\n' +
    ' should consume that input properly (using end-point gradients).',
  ' Tests that a step timing function works as expected for inputs outside of\n' +
    ' range [0,1]',
  ' Tests that an animation with a curve timing function and multiple keyframes\n' +
    ' works as expected.',
  ' Tests that an animation with a curve timing function that overshoots works as\n' +
    ' expected.',
  ' Tests that a float animation with multiple keys works with scaled duration.',
  ' Tests that a size animation with one keyframe works as expected.',
  ' Tests that a size animation with two keyframes works as expected.',
  ' Tests that a size animation with three keyframes works as expected.',
  ' Tests that a size animation with multiple keys at a given time works sanely.',
  ' Tests that a rect animation with one keyframe works as expected.',
  ' Tests that a rect animation with two keyframes works as expected.',
  ' Tests that a rect animation with three keyframes works as expected.',
  ' Tests that a rect animation with multiple keys at a given time works sanely.',
  ' Tests that the computing of tick interval for STEPS TimingFunction works\n' +
    ' correctly.',
  ' Tests that the computing of tick interval for CUBIC_BEZIER TimingFunction\n' +
    ' works correctly.',
  ' Tests that the computing of tick interval for LINEAR TimingFunction works\n' +
    ' correctly.'
]
animation_utils.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
timing_function.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
transition.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
linear_animation.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
multi_animation.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
multi_animation_unittest.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Makes sure multi-animation stops if cycles is false.',
  ' Makes sure multi-animation runs the final frame when exceeding the cycle time\n' +
    ' and not running continuously.',
  ' Makes sure multi-animation cycles correctly.',
  ' Make sure MultiAnimation::GetCurrentValue is derived from the start and end\n' +
    ' of the current MultiAnimation::Part.'
]
slide_animation.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
slide_animation_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' SlideAnimationTest',
  ' Tests animation construction.',
  ' Tests that delegate is not notified when animation is running and is deleted.\n' +
    ' (Such a scenario would cause problems for BoundsAnimator).',
  ' Tests that animations which are started partway and have a dampening factor\n' +
    ' of 1 progress linearly.',
  ' Tests that animations which are started partway and have a dampening factor\n' +
    ' of >1 progress sub-leanearly.',
  ' Tests that a mostly complete dampened animation takes a sub-linear\n' +
    ' amount of time to complete.',
  ' Tests that a mostly incomplete dampened animation takes a sub-linear amount\n' +
    ' of time to complete.'
]
throb_animation.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
tween.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
tween_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Validates that the same interpolations are made as in Blink.',
  ' Ensures that each of the 3 integers in [0, 1, 2] ae selected with equal\n' +
    ' weight.',
  ' Verifies the corners of the rect are animated, rather than the origin/size\n' +
    ' (which would result in different rounding).'
]
bidi_line_iterator.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bidi_line_iterator_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
blit.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if the given canvas has any part of itself clipped out or\n' +
    ' any non-identity tranform.'
]
blit_unittest.cc [
  ' Copyright 2010 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A TestPixelMap is a thin shim layer that allows writing a square canvas of\n' +
    ' 32-bit pixels as a flat array of 8-bit value, which makes the tests a bit\n' +
    ' less fiddly to read and maintain. At construction time, each 8-bit value is\n' +
    ' used to fill in each of the ARGB channels of the 32-bit pixels.',
  ' Fills the given canvas with the values by duplicating the values into each\n' +
    ' color channel for the corresponding pixel.\n' +
    ' Example values = {{0x0, 0x01}, {0x12, 0xFF}} would give a canvas with:\n' +
    '   0x00000000 0x01010101\n' +
    '   0x12121212 0xFFFFFFFF',
  ' Checks each pixel in the given canvas and see if it is made up of the given\n' +
    ' values, where each value has been duplicated into each channel of the given\n' +
    ' bitmap (see SetToCanvas above).'
]
break_list_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
buffer_format_util.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
buffer_usage_util.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ca_layer_params.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
canvas.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static'
]
canvas_skia.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Strips accelerator character prefixes in |text| if needed, based on |flags|.\n' +
    ' Returns a range in |text| to underline or Range::InvalidRange() if\n' +
    ' underlining is not needed.',
  ' Elides |text| and adjusts |range| appropriately. If eliding causes |range|\n' +
    ' to no longer point to the same character in |text|, |range| is made invalid.',
  ' Updates |render_text| from the specified parameters.',
  ' static'
]
canvas_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verifies GetClipBounds() returns the correct value.'
]
jpeg_codec.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Encoder ---------------------------------------------------------------------',
  ' Decoder --------------------------------------------------------------------',
  ' static'
]
jpeg_codec_unittest.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A JPEG image used by TopSitesMigrationTest, whose size is 1x1.\n' +
    ' This image causes an invalid-read error to libjpeg-turbo 1.0.1.',
  ' This is a copy of the above JPEG, with the Start-of-Frame header manually\n' +
    ' rewritten to indicate an image size of 25000x25000. An image this large would\n' +
    ' require more than 2GB of RAM to decode, so the decoder will reject the image\n' +
    ' as soon as the header is parsed.',
  ' out of 100, this indicates how compressed it will be, this should be changed\n' +
    ' with jpeg equality threshold\n' +
    ' static int jpeg_quality = 75;  // FIXME(brettw)',
  ' The threshold of average color differences where we consider two images\n' +
    ' equal. This number was picked to be a little above the observed difference\n' +
    ' using the above quality.',
  ' Computes the average difference between each value in a and b. A and b\n' +
    ' should be the same size. Used to see if two images are approximately equal\n' +
    ' in the presence of compression.',
  ' Test that corrupted data decompression causes failures.',
  ' Test that we can decode JPEG images without invalid-read errors on valgrind.\n' +
    ' This test decodes a 1x1 JPEG image and writes the decoded RGB (or RGBA) pixel\n' +
    ' to the output buffer without OOB reads.',
  ' Coverage for data races in JPEG encoding when run with TSan.\n' +
    ' Regression test for crbug.com/1056011.'
]
jpeg_decoder_fuzzer.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
png_codec.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Decoder --------------------------------------------------------------------',
  ' static',
  ' static',
  ' Encoder --------------------------------------------------------------------',
  ' static',
  ' static',
  ' static',
  ' static'
]
png_codec_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Set use_transparency to write data into the alpha channel, otherwise it will\n' +
    ' be filled with 0xff. With the alpha channel stripped, this should yield the\n' +
    ' same image as MakeRGBImage above, so the code below can make reference\n' +
    ' images for conversion testing.',
  ' Creates a palette-based image.',
  ' Creates a grayscale image without an alpha channel.',
  ' Creates a grayscale image with an alpha channel.',
  ' User write function (to be passed to libpng by EncodeImage) which writes\n' +
    ' into a buffer instead of to a file.',
  ' User flush function; goes with WriteImageData, above.',
  ' Libpng user error function which allows us to print libpng errors using\n' +
    " Chrome's logging facilities instead of stderr.",
  ' Goes with LogLibPNGError, above.',
  ' Color types supported by EncodeImage. Required because neither libpng nor\n' +
    ' PNGCodec::Encode supports all of the required values.',
  " PNG encoder used for testing. Required because PNGCodec::Encode doesn't do\n" +
    ' interlaced, palette-based, or grayscale images, but PNGCodec::Decode is\n' +
    ' actually asked to decode these types of images by Chrome.',
  ' Returns true if each channel of the given two colors are "close." This is\n' +
    ' used for comparing colors where rounding errors may cause off-by-one.',
  ' Returns true if the RGB components are "close."',
  ' Returns true if the BGRA 32-bit SkColor specified by |a| is equivalent to the\n' +
    ' 8-bit Gray color specified by |b|.',
  " Not encoding an interlaced PNG from SkBitmap because we don't do it\n" +
    ' anywhere, and the ability to do that requires more code changes.',
  ' Test that corrupted data decompression causes failures.',
  ' Test decoding three PNG images, identical except for different gAMA chunks\n' +
    ' (with gamma values of 1.0, 1.8 and 2.2). All images are 256 x 256 pixels and\n' +
    ' 8-bit grayscale. The left half of the image is a solid block of medium gray\n' +
    ' (128 out of 255). The right half of the image alternates between black (0\n' +
    ' out of 255) and white (255 out of 255) in a checkerboard pattern.\n' +
    ' For the first file (gamma 1.0, linear), if you squint, the 128/255 left half\n' +
    ' should look about as bright as the checkerboard right half. PNGCodec::Decode\n' +
    ' applies gamma correction (assuming a default display gamma of 2.2), so the\n' +
    ' top left pixel value should be corrected from 128 to 186.\n' +
    " The second file (gamma 1.8)'s correction is not as strong: from 128 to 145.\n" +
    ' The third file (gamma 2.2) matches the default display gamma and so the 128\n' +
    ' nominal value is unchanged. If you squint, the 128/255 left half should look\n' +
    ' darker than the right half.\n' +
    ' The "as used by libpng" formula for calculating these expected 186, 145 or\n' +
    ' (unchanged) 128 values can be seen in the diff at\n' +
    ' https://crrev.com/c/5402327/13/ui/gfx/codec/png_codec_unittest.cc\n' +
    ' and the same formula is at\n' +
    ' https://www.w3.org/TR/2003/REC-PNG-20031110/#13Decoder-gamma-handling but\n' +
    ` note the spec's caveat: "Viewers capable of full colour management... will\n` +
    ' perform more sophisticated calculations than those described here."\n' +
    ' Being corrected to 186, 145 or 128 assumes that, like libpng, the PNG\n' +
    ' decoder honors the gAMA chunk in the checkerboard.gamma*.png files. Those\n' +
    " files don't have an iCCP color profile chunk, but since the PNGCodec::Decode\n" +
    ' API fills in a bag of RGBA pixels (without an associated colorspace), the\n' +
    ' PNGCodec::Decode implementation nonetheless applies sRGB color correction\n' +
    ' (approximately exponential) instead of basic gamma correction (literally\n' +
    ' exponential). This produces slightly different numbers: 188, 146 or 129. The\n' +
    ' code review in https://crrev.com/c/5402327 gives a little more context.\n' +
    ' When viewing these images in a browser, make sure to apply the "img {\n' +
    ' image-rendering: pixelated }" CSS. Otherwise, browsers will often blur when\n' +
    ' up-scaling (e.g. on high DPI displays), trumping the "two halves should have\n' +
    ' roughly equal / different brightness" effect. You can view the images at\n' +
    ' https://nigeltao.github.io/blog/2022/gamma-aware-pixelated-images.html'
]
png_decoder_fuzzer.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vector_wstream.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
webp_codec.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Encoder ---------------------------------------------------------------------'
]
color_analysis.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' RGBA KMean Constants',
  ' Background Color Modification Constants',
  ' Support class to hold information about each cluster of pixel data in\n' +
    ' the KMean algorithm. While this class does not contain all of the points\n' +
    ' that exist in the cluster, it keeps track of the aggregate sum so it can\n' +
    ' compute the new center appropriately.',
  ' Prominent color utilities ---------------------------------------------------',
  ' A |ColorBox| represents a 3-dimensional region in a color space (an ordered\n' +
    ' set of colors). It is a range in the ordered set, with a low index and a high\n' +
    ' index. The diversity (volume) of the box is computed by looking at the range\n' +
    ' of color values it spans, where r, g, and b components are considered\n' +
    ' separately.',
  ' Some color values should be ignored for the purposes of determining prominent\n' +
    ' colors.',
  ' Used to group lower_bound, upper_bound, goal HSL color together for prominent\n' +
    ' color calculation.',
  ' For a 16x16 icon on an Intel Core i5 this function takes approximately\n' +
    ' 0.5 ms to run.\n' +
    ' TODO(port): This code assumes the CPU architecture is little-endian.',
  " This algorithm is a port of Android's Palette API. Compare to package\n" +
    ' android.support.v7.graphics and see that code for additional high-level\n' +
    ' explanation of this algorithm. There are some minor differences:\n' +
    "   * This code doesn't exclude the same color from being used for\n" +
    '   different color profiles.\n' +
    "   * This code doesn't try to heuristically derive missing colors from\n" +
    '   existing colors.'
]
color_analysis_fuzzer.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_analysis_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a 1-dimensional png of the pixel colors found in |colors|.',
  ' Return true if a color channel is approximately equal to an expected value.',
  ' Regression test for heap-buffer-underflow. https://crbug.com/970343'
]
color_conversion_sk_filter_cache.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Allocate an SkSurface to be used to create the tonemapped result.'
]
color_conversions.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Namespace containing some of the helper methods for color conversions.',
  ' https://en.wikipedia.org/wiki/CIELAB_color_space#Converting_between_CIELAB_and_CIEXYZ_coordinates',
  ' Evaluate the specified transfer function. This can be replaced by\n' +
    ' skcms_TransferFunction_eval when b/331320414 is fixed.',
  ' Power function extended to all real numbers by point symmetry.',
  ' Projects the color (l,a,b) to be within a polyhedral approximation of the\n' +
    ' Rec2020 gamut. This is done by finding the maximum value of alpha such that\n' +
    ' (l, alpha*a, alpha*b) is within that polyhedral approximation.'
]
color_conversions_unittest.cc [
  ' Copyright 2006-2008 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper struct for testing purposes.'
]
color_space.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
color_space_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' Returns the L-infty difference of u and v.'
]
color_space_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_transform.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' The maximum brightness of the reference display for HLG computations.',
  ' The maximum reference brightness of a PQ signal.',
  ' The luminance vector in rec2020 linear space.',
  ' Return true if HLG and PQ tonemapping is unified (HLG is transcoded to a\n' +
    ' 1,000 nit PQ signal and then rendered like PQ).',
  ' Return true if input HLG and PQ signals are SDR relative. This applies\n' +
    ' only to Windows, where they can be absolute (they are otherwise always\n' +
    ' SDR relative).',
  ' This class represents the piecewise-HDR function using three new parameters,\n' +
    ' P, Q, and R. The function is defined as:\n' +
    '            0         : x < 0\n' +
    '     T(x) = sRGB(x/P) : x < P\n' +
    '            Q*x+R     : x >= P\n' +
    ' This then expands to\n' +
    '            0                : x < 0\n' +
    '     T(x) = C*x/P+F          : x < P*D\n' +
    '            (A*x/P+B)**G + E : x < P\n' +
    '            Q*x+R            : else',
  ' Applies the HLG OETF formulation that maps [0, 12] to [0, 1].',
  ' Applies the HLG inverse OETF formulation that maps [0, 1] to [0, 1].',
  ' Apply the HLG OOTF for a specified maximum luminance.',
  ' Apply the HLG OOTF for a 1,000 nit reference display.',
  ' Scale the color such that the luminance `input_max_value` maps to\n' +
    ' `output_max_value`.',
  ' Converts from nits-relative (where 1.0 is `unity_nits` nits) to SDR-relative\n' +
    ' (where 1.0 is SDR white). If `use_src_sdr_white` is true then use 203 nits\n' +
    ' for SDR white, otherwise use `RuntimeOptions::dst_sdr_max_luminance_nits`\n' +
    ' for SDR white.',
  ' Converts from SDR-relative (where 1.0 is SDR white) to nits-relative (where\n' +
    ' 1.0 is `unity_nits` nits). Use `RuntimeOptions::dst_sdr_max_luminance_nits`\n' +
    ' for the number of nits of SDR white.',
  ' static',
  ' static'
]
color_transform_fuzzer.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
color_transform_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' Allowed math error.',
  ' Internal functions, exposted for testing.',
  ' Checks that the generated SkSL fragment shaders can be parsed by\n' +
    ' SkSL::Compiler.'
]
color_utils.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' The darkest reference color in color_utils.',
  ' The luminance midpoint for determining if a color is light or dark.  This is\n' +
    ' the value where white and g_darkest_color contrast equally.  This default\n' +
    ' value is the midpoint given kGoogleGrey900 as the darkest color.',
  ' Assumes sRGB.'
]
color_utils_unittest.cc [
  ' Copyright 2006-2008 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
decorated_text.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
delegated_ink_metadata.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
delegated_ink_point.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
delegated_ink_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test confirms that DelegatedInkPoint and DelegatedInkMetadata will both\n' +
    ' report that they match each other if the timestamp and point are the same,\n' +
    ' regardless of any other members.',
  ' Confirms that if the timestamps are the same and point locations are within\n' +
    ' |kEpsilon|, then they will be considered matching.',
  ' Confirms that if timestamps or points are different (or the metadata is null)\n' +
    ' the DelegatedInkPoint and DelegatedInkMetadata are not considered matching.'
]
display_color_spaces.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' static'
]
extension_set.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
favicon_size.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
font.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Font, public:'
]
font_fallback_linux.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' This class uniquely identified a typeface. A typeface can be identified by\n' +
    " its file path and it's ttc index.",
  ' Returns a SkTypeface for a given font path and ttc_index. The typeface is\n' +
    ' cached to avoid reloading the font from file. SkTypeface is not caching\n' +
    ' these requests.',
  ' Implements a fallback font cache over FontConfig API.\n' +
    ' A MRU cache is kept from a font to its potential fallback fonts.\n' +
    ' The key (e.g. FallbackFontEntry) contains the font for which\n' +
    ' fallback font must be returned.\n' +
    ' For each key, the cache is keeping a set (e.g. FallbackFontEntries) of\n' +
    ' potential fallback font (e.g. FallbackFontEntry). Each fallback font entry\n' +
    ' contains the supported codepoints (e.g. charset). The fallback font returned\n' +
    ' by GetFallbackFont(...) depends on the input text and is using the charset\n' +
    ' to determine the best candidate.',
  ' The fallback font cache is a mapping from a font to the potential fallback\n' +
    ' fonts with their codepoint coverage.',
  ' The fallback fonts cache is a mapping from a font family name to its\n' +
    ' potential fallback fonts.'
]
font_fallback_linux_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' If the Type 1 Symbol.pfb font is installed, it is returned as fallback font\n' +
    " for the PUA character 0xf6db. This test ensures we're not returning Type 1\n" +
    ' fonts as fallback.'
]
font_fallback_mac_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A targeted test for GetFallbackFonts on Mac. It uses a system API that\n' +
    ' only became publicly available in the 10.8 SDK. This test is to ensure it\n' +
    ' behaves sensibly on all supported OS versions.',
  ' Sanity check GetFallbackFont() behavior on Mac. This test makes assumptions\n' +
    ' about font properties and availability on specific macOS versions.'
]
font_fallback_skia.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
font_fallback_skia_impl.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' Returns true when the codepoint has an unicode decomposition and store\n' +
    ' the decomposed string into |output|.',
  ' Extracts every codepoint and its decomposed codepoints from unicode\n' +
    ' decomposition. Inserts in |codepoints| the set of codepoints in |text|.',
  ' Returns the amount of codepoint in |text| without a glyph representation in\n' +
    ' |typeface|. A codepoint is present if there is a corresponding glyph in\n' +
    ' typeface, or if there are glyphs for each of its decomposed codepoints.'
]
font_fallback_skia_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " TODO(sergeyu): Fuchsia doesn't not support locale for font fallbacks.\n" +
    " TODO(etienneb): Android doesn't allow locale override, unless the language\n" +
    '                 is added in the system UI.'
]
font_fallback_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' Options to parameterized unittests.',
  ' Options for tests that does not validate the GetFallbackFont(...) parameters.',
  ' This test ensures the font fallback work correctly. It will ensures that\n' +
    '   1) The script supports the text\n' +
    '   2) The input font does not already support the text\n' +
    '   3) The call to GetFallbackFont() succeed\n' +
    '   4) The fallback font has a glyph for every character of the text\n' +
    ' The previous checks can be activated or deactivated through the class\n' +
    ' FallbackFontTestOption (e.g. test_option_).',
  ' Produces a font test case for every script.',
  ' Ensures that the default fallback font gives known results. The test\n' +
    ' is validating that a known fallback font is given for a given text and font.',
  ' Ensures that font fallback functions are working properly for any string\n' +
    " (strings from any script). The test doesn't enforce the functions to\n" +
    ' give a fallback font. The accepted behaviors are:\n' +
    "    1) The fallback function failed and doesn't provide a fallback.\n" +
    '    2) The fallback function succeeded and the font supports every glyphs.'
]
font_fallback_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Queries the registry to get a mapping from font filenames to font names.',
  ' Fills |font_names| with a list of font families found in the font file at\n' +
    ' |filename|. Takes in a |font_map| from font filename to font families, which\n' +
    ' is filled-in by querying the registry, if empty.',
  ' Returns true if |text| contains only ASCII digits.',
  ' Appends a Font with the given |name| and |size| to |fonts| unless the last\n' +
    ' entry is already a font with that name.',
  ' Queries the registry to get a list of linked fonts for |font|.',
  ' CachedFontLinkSettings is a singleton cache of the Windows font settings\n' +
    " from the registry. It maintains a cached view of the registry's list of\n" +
    ' system fonts and their font link chains.',
  ' static'
]
font_fallback_win_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
font_list.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Font description of the default font set.',
  ' The default instance of gfx::FontListImpl.',
  ' static',
  ' static',
  ' static',
  ' static'
]
font_list_impl.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a font description from |families|, |style|, and |size_pixels|.'
]
font_list_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper function for comparing fonts for equality.'
]
font_render_params.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
font_render_params_linux.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A device scale factor used to determine if subpixel positioning\n' +
    ' should be used.',
  ' Number of recent GetFontRenderParams() results to cache.',
  ' Cached result from a call to GetFontRenderParams().',
  ' Keyed by hashes of FontRenderParamQuery structs from\n' +
    ' HashFontRenderParamsQuery().',
  ' A cache and the lock that must be held while accessing it.\n' +
    ' GetFontRenderParams() is called by both the UI thread and the sandbox IPC\n' +
    ' thread.',
  ' Serialize |query| into a string value suitable for use as a cache key.'
]
font_render_params_linux_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Strings appearing at the beginning and end of Fontconfig XML files.',
  ' Strings appearing at the beginning and end of Fontconfig <match> stanzas.',
  ' Implementation of LinuxUi that returns a canned FontRenderParams\n' +
    " struct. This is used to isolate tests from the system's local configuration.",
  ' Loads XML-formatted |data| into the current font configuration.',
  ' Returns a Fontconfig <edit> stanza.',
  ' Returns a Fontconfig <test> stanza.',
  ' Returns a Fontconfig <alias> stanza.'
]
font_render_params_mac.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Returns params that match SkiaTextRenderer's default render settings."
]
font_render_params_skia.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Returns the system's default settings.",
  ' A device scale factor used to determine if subpixel positioning\n' +
    ' should be used.'
]
font_render_params_win.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Caches font render params and updates them on system notifications.'
]
font_render_params_win_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The ranges returned from `IDWriteRenderingParams` differ from the\n' +
    ' registry settings - contrast has a 100x multiplier and gamma has a 1000x\n' +
    ' multiplier.'
]
font_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Check that fonts used for testing are installed and enabled. On Mac\n' +
    ' fonts may be installed but still need enabling in Font Book.app.\n' +
    ' http://crbug.com/347429'
]
font_util.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
font_util_win.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
gdi_util.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Apply scaling to the DC.'
]
generic_shared_memory_id.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
axis_transform2d.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
axis_transform2d_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
box_f.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
box_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cubic_bezier.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' This works by taking taking the derivative of the cubic bezier, on the y\n' +
    ' axis. We can then solve for where the derivative is zero to find the min\n' +
    ' and max distance along the line. We the have to solve those in terms of time\n' +
    ' rather than distance on the x-axis'
]
cubic_bezier_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that solving the bezier works with knots with y not in (0, 1).',
  ' Tests that solving the bezier works with huge value infinity evaluation'
]
decomposed_transform.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
dip_util.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
insets.cc [
  ' Copyright 2009 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
insets_conversions.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
insets_f.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
insets_f_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
insets_unittest.cc [
  ' Copyright 2009 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
linear_gradient.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
linear_gradient_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mask_filter_info.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mask_filter_info_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
matrix3_f.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' This is only to make accessing indices self-explanatory.',
  ' static',
  ' static',
  ' static',
  ' static'
]
matrix3_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
matrix44.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' This is based on\n' +
    ' https://github.com/niswegmann/small-matrix-inverse/blob/master/invert4x4_llvm.h,\n' +
    ' which is based on Intel AP-928 "Streaming SIMD Extensions - Inverse of 4x4\n' +
    ' Matrix": https://drive.google.com/file/d/0B9rh9tVI0J5mX1RUam5nZm85OFE/view.',
  ' This is a simplified version of InverseWithDouble4Cols().',
  ' TODO(crbug.com/40237414): Consider letting this function always succeed.'
]
geometry_mojom_traits_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
point.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
point3_f.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Subtract a vector from a point, producing a new point offset by the vector's\n" +
    ' inverse.',
  ' Subtract one point from another, producing a vector that represents the\n' +
    ' distances between the two points along each axis.'
]
point3_f_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
point_conversions.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
point_f.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
point_f_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
point_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
quad_f.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests whether the line is contained by or intersected with the circle.'
]
quad_f_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
quaternion.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adapted from https://www.euclideanspace.com/maths/algebra/realNormedAlgebra/\n' +
    ' quaternions/slerp/index.htm'
]
quaternion_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
rect.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is the per-axis heuristic for picking the most useful origin and\n' +
    ' width/height to represent the input range.'
]
rect_conversions.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
rect_conversions_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
rect_f.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Construct a rectangle with top-left corner at |p1| and bottom-right corner\n' +
    ' at |p2|. If the exact result of top - bottom or left - right cannot be\n' +
    ' presented in float, then the height/width will be grown to the next\n' +
    ' float, so that it includes both |p1| and |p2|.'
]
rect_f_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
rect_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
resize_utils.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This function decides whether SizeRectToAspectRatio() will adjust the height\n' +
    ' to match the specified width (resizing horizontally) or vice versa (resizing\n' +
    ' vertically).'
]
resize_utils_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Aspect ratio is defined by width / height.'
]
rounded_corners_f.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
rounded_corners_f_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verify that IsEmpty() returns true and that all values are exactly zero.'
]
rrect_f.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' Sets all x radii to x_rad, and all y radii to y_rad. If one of x_rad or\n' +
    ' y_rad are zero, sets ALL radii to zero.',
  ' Directly sets all four corners.',
  ' static',
  ' static'
]
rrect_f_builder.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
rrect_f_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The following tests(started with "Build*") are for RRectFBuilder. All\n' +
    ' different tests are to make sure that existing RRectF definitions can be\n' +
    ' implemented with RRectFBuilder.',
  ' In the following tests(*CornersHigherThanSize), we test whether the corner\n' +
    ' radii gets truncated in case of being greater than the width/height.',
  ' In this test, we set the radius first but then change the value of the\n' +
    ' corners.'
]
sin_cos_degrees_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
size.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
size_conversions.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
size_f.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
size_f_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These are the ramifications of the decision to keep the recorded size\n' +
    ' at zero for trivial sizes.',
  ' These make sure the constructor and setter have the same effect on the\n' +
    ' boundary case. This claims to know the boundary, but not which way it goes.'
]
size_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
skia_conversions.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' TODO(crbug.com/40237414): Remove this function in favor of the other form.'
]
skia_conversions_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fuzzer_util.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
geometry_util.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
three_point_cubic_bezier.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
three_point_cubic_bezier_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
transform.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' clang-format off',
  ' clang-format on',
  ' static',
  ' static',
  ' static'
]
transform_operation.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' If p = (px, py) is a point in the plane being rotated about (0, 0, nz), this\n' +
    ' function computes the angles we would have to rotate from p to get to\n' +
    ' (length(p), 0), (-length(p), 0), (0, length(p)), (0, -length(p)). If nz is\n' +
    ' negative, these angles will need to be reversed.'
]
transform_operations.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/41431421): Consolidate blink and cc implementations of\n' +
    ' transform interpolation.'
]
transform_operations_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This test is intentionally outside the anonymous namespace for visibility as\n' +
    ' it needs to be friend of TransformOperations.'
]
transform_unittest.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' Checking float values for equality close to zero is not robust using\n' +
    ' EXPECT_FLOAT_EQ (see gtest documentation). So, to verify rotation matrices,\n' +
    ' we must use a looser absolute error threshold in some places.',
  ' This test is to make it easier to understand the order of operations.',
  ' This test mostly overlaps with other tests, but similar to the above test,\n' +
    ' this test may help understand how accumulated transforms are equivalent to\n' +
    ' multiple mapping operations e.g. MapPoint().',
  ' 2D tests',
  ' ColMajor() and RowMajor() are tested in GetTestMatrix1() and\n' +
    ' GetTestTransform2().',
  " Another implementation of Preserves2dAxisAlignment that isn't as fast,\n" +
    ' good for testing the faster implementation.',
  ' This test also demonstrates the relationship between ProjectPoint() and\n' +
    ' MapPoint().'
]
transform_util.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
transform_util_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
triangle_f.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
triangle_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vector2d.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vector2d_conversions.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vector2d_f.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vector2d_f_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
vector2d_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
vector3d_f.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vector3d_f_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
gpu_extra_info.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gpu_fence.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
gpu_fence_handle.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
gpu_memory_buffer.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40584691): Reset |type| and possibly the handles on the\n' +
    ' moved-from object.'
]
half_float.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
half_float_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
harfbuzz_font_skia.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Maps from code points to glyph indices in a font.',
  ' Wraps a custom user data attached to a hb_font object. Font data provider for\n' +
    ' HarfBuzz using Skia. Copied from Blink.\n' +
    ' TODO(ckocagil): Eliminate the duplication. http://crbug.com/368375',
  ' Deletes the object at the given pointer after casting it to the given type.',
  ' Outputs the |width| and |extents| of the glyph with index |codepoint| in\n' +
    " |paint|'s font.",
  ' Writes the |glyph| index for the given |unicode| code point. Returns whether\n' +
    ' the glyph exists, i.e. it is not a missing glyph.',
  ' Returns the horizontal advance value of the |glyph|.',
  ' Writes the |extents| of |glyph|.',
  ' Returns the raw data of the font table |tag|.',
  ' For a given skia typeface, maps to its harfbuzz face and its glyphs cache.',
  ' Creates a HarfBuzz font from the given Skia face and text size.'
]
hdr_metadata.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
hdr_static_metadata.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
icc_profile.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' An LRU cache mapping data to ICCProfile objects, to avoid re-parsing\n' +
    ' profiles every time they are read.',
  ' Lock that must be held to access |g_data_to_profile_cache|.',
  ' static',
  ' static'
]
icc_profile_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
icon_util.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' Used for indicating that the .ico contains an icon (rather than a cursor)\n' +
    ' image. This value is set in the |idType| field of the ICONDIR structure.',
  ' Creates a new ImageFamily, |resized_image_family|, based on the images in\n' +
    ' |image_family|, but containing images of specific dimensions desirable for\n' +
    ' Windows icons. For each desired image dimension, it chooses the most\n' +
    ' appropriate image for that size, and resizes it to the desired size.\n' +
    ' Returns true on success, false on failure. Failure can occur if\n' +
    ' |image_family| is empty, all images in the family have size 0x0, or an image\n' +
    ' has no allocated pixel data.\n' +
    ' |resized_image_family| must be empty.',
  ' Creates a set of bitmaps from an image family.\n' +
    ' All images smaller than 256x256 are converted to SkBitmaps, and inserted into\n' +
    ' |bitmaps| in order of aspect ratio (thinnest to widest), and then ascending\n' +
    ' size order. If an image of exactly 256x256 is specified, it is converted into\n' +
    ' PNG format and stored in |png_bytes|. Images with width or height larger than\n' +
    ' 256 are ignored.\n' +
    ' |bitmaps| must be an empty vector, and not nullptr.\n' +
    ' Returns true on success, false on failure. This fails if any image in\n' +
    ' |image_family| is not a 32-bit ARGB image, or is otherwise invalid.',
  ' The icon images appear in the icon file in same order in which their\n' +
    ' corresponding dimensions appear in this array, so it is important to keep\n' +
    ' this array sorted. Also note that the maximum icon image size we can handle\n' +
    ' is 256 by 256. See:\n' +
    ' http://msdn.microsoft.com/en-us/library/windows/desktop/aa511280.aspx#size',
  ' static',
  ' static',
  ' static'
]
icon_util_unittest.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' The following test case makes sure IconUtil::SkBitmapFromHICON fails\n' +
    ' gracefully when called with invalid input parameters.',
  ' The following test case makes sure IconUtil::CreateHICONFromSkBitmap fails\n' +
    ' gracefully when called with invalid input parameters.',
  ' The following test case makes sure IconUtil::CreateIconFileFromImageFamily\n' +
    ' fails gracefully when called with invalid input parameters.',
  ' This test case makes sure IconUtil::CreateIconFileFromImageFamily fails if\n' +
    ' the image family is empty or invalid.',
  ' This test case makes sure that when we load an icon from disk and convert\n' +
    ' the HICON into a bitmap, the bitmap has the expected format and dimensions.',
  ' This test case makes sure that when an HICON is created from an SkBitmap,\n' +
    ' the returned handle is valid and refers to an icon with the expected\n' +
    ' dimensions color depth etc.',
  ' This test case makes sure that CreateIconFileFromImageFamily creates a\n' +
    ' valid .ico file given an ImageFamily, and appropriately creates all icon\n' +
    ' sizes from the given input.',
  ' This tests that kNumIconDimensionsUpToMediumSize has the correct value.'
]
buffer_w_stream.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
buffer_w_stream_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
canvas_image_source.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' CanvasImageSource',
  ' static'
]
image.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
image_family.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_family_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that |image| != NULL, and has the given width and height.\n' +
    ' This is a macro instead of a function, so that the correct line numbers are\n' +
    ' reported when a test fails.',
  ' Tests that |image| has the given width and height.\n' +
    ' This is a macro instead of a function, so that the correct line numbers are\n' +
    ' reported when a test fails.',
  ' Tests iteration over an ImageFamily.',
  ' Test adding and looking up images with 0 width and height.'
]
image_generic.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a 16x16 red image to visually show error in decoding PNG.'
]
image_png_rep.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_skia.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' A helper class such that ImageSkia can be cheaply copied. ImageSkia holds a\n' +
    " refptr instance of ImageSkiaStorage, which in turn holds all of ImageSkia's\n" +
    ' information.\n' +
    ' The ImageSkia, and this class, are designed to be thread-safe in their const\n' +
    ' methods, but also are bound to a single sequence for mutating methods.\n' +
    ' NOTE: The FindRepresentation() method const and thread-safe *iff* it is\n' +
    ' called with `fetch_new_image` set to true. Otherwise it may mutate the\n' +
    ' class, which is not thread-safe. Internally, mutation is bound to a single\n' +
    ' sequence with a `base::SequenceChecker`.',
  ' static',
  ' static'
]
image_skia_operations.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns an image rep for the ImageSkiaSource to return to visually indicate\n' +
    ' an error.',
  ' A base image source class that creates an image from two source images.\n' +
    ' This class guarantees that two ImageSkiaReps have have the same pixel size.',
  ' ImageSkiaSource which uses SkBitmapOperations::CreateButtonBackground\n' +
    ' to generate image reps for the target image.  The image and mask can be\n' +
    ' different sizes (crbug.com/171725).',
  ' ImageSkiaSource which uses SkBitmap::extractSubset to generate image reps\n' +
    ' for the target image.',
  ' ResizeSource resizes relevant image reps in |source| to |target_dip_size|\n' +
    ' for requested scale factors.',
  ' DropShadowSource generates image reps with drop shadow for image reps in\n' +
    ' |source| that represent requested scale factors.',
  ' An image source that is 1px wide, suitable for tiling horizontally.',
  ' RotatedSource generates image reps that are rotations of those in\n' +
    ' |source| that represent requested scale factors.',
  ' ImageSkiaSource which uses SkBitmapOperations::CreateColorMask\n' +
    ' to generate image reps for the target image.',
  ' Image source to create an image with a circle background.',
  ' Image source to create an image with a rounded rect background.',
  ' Image source to create an image with a roundrect clip path.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
image_skia_operations_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_skia_rep_default.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_skia_rep_ios.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_skia_source.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_skia_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that image_reps returns all of the representations in the\n' +
    ' image when there are multiple representations for a scale factor.\n' +
    ' This currently is the case with ImageLoader::LoadImages.',
  ' Tests that searching for representation uses supported scale values and that\n' +
    ' scale values (floats) are not mismatched with scale factors (enums).'
]
image_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test constructing a gfx::Image from an empty PlatformImage.',
  ' The resulting Image should be empty when it is created using obviously\n' +
    ' invalid data.',
  ' Test the Width, Height and Size of an empty and non-empty image.',
  ' Check that getting the 1x PNG bytes from images which do not have a 1x\n' +
    ' representation returns null.',
  ' Check that for an image initialized with multi resolution PNG data,\n' +
    ' As1xPNGBytes() returns the 1x bytes.',
  ' IOS does not support arbitrary scale factors.',
  ' The platform types use the platform provided encoding/decoding of PNGs. Make\n' +
    ' sure these work with the Skia Encode/Decode.',
  ' Tests that gfx::Image does indeed take ownership of the SkBitmap it is\n' +
    ' passed.',
  ' Integration tests with UI toolkit frameworks require linking against the\n' +
    " Views library and cannot be here (ui_base_unittests doesn't include it). They\n" +
    ' instead live in /chrome/browser/ui/tests/ui_gfx_image_unittest.cc.'
]
image_unittest_util.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Because the unit tests for gfx::Image are spread across multiple\n' +
    ' implementation files, this header contains the reusable components.',
  ' The maximum color shift in the red, green, and blue components caused by\n' +
    ' converting a gfx::Image between colorspaces. Color shifts occur when\n' +
    ' converting between NSImage & UIImage to ImageSkia. Determined by trial and\n' +
    ' error.',
  ' Defined in image_unittest_util_apple.mm.'
]
image_util.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns whether column |x| of |bitmap| has any "visible pixels", where\n' +
    ' "visible" is defined as having an opactiy greater than an arbitrary small\n' +
    ' value.',
  ' The iOS implementations of the JPEG functions are in image_util_ios.mm.',
  ' The MacOS implementation of this function is in image_utils_mac.mm.'
]
image_util_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_skia_mojom_traits.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
image_traits_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A test ImageSkiaSource that creates an ImageSkiaRep for any scale.',
  ' A helper to construct a skia.mojom.BitmapN32 without using StructTraits\n' +
    ' to bypass checks on the sending/serialization side.'
]
interpolated_transform.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns false if |degrees| is not a multiple of ninety degrees or if\n' +
    ' |rotation| is NULL. It does not affect |rotation| in this case. Otherwise\n' +
    ' *rotation is set to be the appropriate sanitized rotation matrix. That is,\n' +
    ' the rotation matrix corresponding to |degrees| which has entries that are all\n' +
    ' either 0, 1 or -1.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' InterpolatedTransform',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' InterpolatedRotation',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' InterpolatedAxisAngleRotation',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' InterpolatedScale',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' InterpolatedTranslation',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' InterpolatedConstantTransform',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' InterpolatedTransformAboutPivot'
]
interpolated_transform_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gfx_param_traits.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Generate param traits write methods.',
  ' Generate param traits read methods.',
  ' Generate param traits log methods.'
]
gfx_param_traits.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Generate param traits write methods.',
  ' Generate param traits read methods.',
  ' Generate param traits log methods.'
]
gfx_param_traits.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
gfx_param_traits.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Generate param traits write methods.',
  ' Generate param traits read methods.',
  ' Generate param traits log methods.'
]
gfx_skia_param_traits.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Generate param traits write methods.',
  ' Generate param traits read methods.',
  ' Generate param traits log methods.'
]
client_native_pixmap_dmabuf.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' static',
  ' static'
]
client_native_pixmap_factory_dmabuf.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Although, it's compiled for all linux platforms, it does not mean dmabuf\n" +
    ' will work there. Check the comment below in the\n' +
    ' ClientNativePixmapFactoryDmabuf for more details.'
]
drm_util_linux.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fontconfig_util.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This should match `imageloader::kImageloaderMountBase` from\n' +
    ' //third_party/cros_system_api/constants/imageloader.h.',
  ' A singleton class to wrap a global font-config configuration. The\n' +
    ' configuration reference counter is incremented to avoid the deletion of the\n' +
    ' structure while being used. This class is single-threaded and should only be\n' +
    ' used on the UI-Thread.',
  ' Converts Fontconfig FC_HINT_STYLE to FontRenderParams::Hinting.',
  ' Converts Fontconfig FC_RGBA to FontRenderParams::SubpixelRendering.',
  ' Extracts a string property from a font-config pattern (e.g. FcPattern).',
  ' Extracts an integer property from a font-config pattern (e.g. FcPattern).',
  ' Extracts an boolean property from a font-config pattern (e.g. FcPattern).'
]
fontconfig_util_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gbm_util.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gbm_wrapper.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
gpu_memory_buffer_support_x11.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Obtain an authenticated DRM fd from X11 and create a GbmDevice with it.',
  ' static'
]
native_pixmap_dmabuf.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_pixmap_dmabuf_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verifies NativePixmapDmaBuf conversion from and to NativePixmapHandle.'
]
scoped_gbm_device.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_gbm_device.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_icc_profiles.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
io_surface.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' static',
  ' static',
  ' Common method used by IOSurfaceSetColorSpace and IOSurfaceCanSetColorSpace.'
]
io_surface_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
buffer_types_mojom_traits.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ca_layer_params_mojom_traits.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ca_layer_result_mojom_traits.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
color_space_mojom_traits.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
delegated_ink_metadata_mojom_traits.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
delegated_ink_point_mojom_traits.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
display_color_spaces_mojom_traits.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
gpu_extra_info_mojom_traits.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
gpu_fence_handle_mojom_traits.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hdr_metadata_mojom_traits.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hdr_static_metadata_mojom_traits.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
linear_gradient_mojom_traits.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
mask_filter_info_mojom_traits.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
mojom_traits_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used by the GpuMemoryBufferHandle test to produce a valid object handle to\n' +
    " embed in a NativePixmapPlane object, so that the test isn't sending an\n" +
    ' invalid FD/vmo object where the mojom requires a valid one.'
]
native_handle_types_mojom_traits.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_pixmap_handle.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
nine_image_painter.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' static'
]
nine_image_painter_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
overlay_plane_data.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
overlay_transform_utils.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
overlay_transform_utils_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
paint_throbber.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The maximum size of the "spinning" state arc, in degrees.',
  ' The amount of time it takes to grow the "spinning" arc from 0 to 270 degrees.',
  ' The amount of time it takes for the "spinning" throbber to make a full\n' +
    ' rotation.',
  ' This is a Skia port of the MD spinner SVG. The |start_angle| rotation\n' +
    " here corresponds to the 'rotate' animation."
]
paint_vector_icon.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The default size of a single side of the square canvas to which path\n' +
    ' coordinates are relative, in device independent pixels.',
  ' Retrieves the specified CANVAS_DIMENSIONS size from a PathElement.',
  ' Retrieves the appropriate icon representation to draw when the pixel size\n' +
    ' requested is |icon_size_px|.',
  ' Helper that simplifies iterating over a sequence of PathElements.',
  ' Translates a string such as "MOVE_TO" into a command such as MOVE_TO.',
  " This class caches vector icons (as ImageSkia) so they don't have to be drawn\n" +
    ' more than once. This also guarantees the backing data for the images returned\n' +
    ' by CreateVectorIcon will persist in memory until program termination.'
]
paint_vector_icon_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that a relative move to command (R_MOVE_TO) after a close command\n' +
    ' (CLOSE) uses the correct starting point. See crbug.com/697497'
]
path_win.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
path_win_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' Get rectangles from the |region| and convert them to SkIRect.',
  ' Test that rectangle with round corners stil has round corners after\n' +
    ' converting from SkPath to the HRGN.\n' +
    ' FIXME: this test is fragile (it depends on rrect rasterization impl)',
  ' Check that a path enclosing two non-adjacent areas is correctly translated\n' +
    ' to a non-contiguous region.',
  ' Check that empty region is returned for empty path.'
]
platform_font.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
platform_font_skia.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " The font family name which is used when a user's application font for\n" +
    ' GNOME/KDE is a non-scalable one. The name should be listed in the\n' +
    ' IsFallbackFontAllowed function in skia/ext/SkFontHost_fontconfig_direct.cpp.',
  ' The default font, used for the default constructor.',
  ' Creates a SkTypeface for the passed-in Font::FontStyle and family. If a\n' +
    ' fallback typeface is used instead of the requested family, |family| will be\n' +
    " updated to contain the fallback's family name.",
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' PlatformFontSkia, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' PlatformFontSkia, PlatformFont implementation:',
  ' static',
  ' static',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' PlatformFontSkia, private:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' PlatformFont, public:',
  ' static',
  ' static',
  ' static'
]
platform_font_skia_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implementation of LinuxUi used to control the default font description.',
  " Test that PlatformFontSkia's default constructor initializes the instance\n" +
    ' with the correct parameters.'
]
range_mojom_traits_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
range.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
range_f.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
range_unittest.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
render_text.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Replacement codepoint for elided text.',
  ' Fraction of the text size to raise the center of a strike-through line above\n' +
    ' the baseline.',
  ' Fraction of the text size to lower an underline below the baseline.',
  ' Float comparison needs epsilon to consider rounding errors in float\n' +
    ' arithmetic. Epsilon should be dependent on the context and here, we are\n' +
    ' dealing with glyph widths, use a fairly large number.',
  ' Given |font| and |display_width|, returns the width of the fade gradient.',
  ' Appends to |positions| and |colors| values corresponding to the fade over\n' +
    ' |fade_rect| from color |c0| to color |c1|.',
  ' Creates a SkShader to fade the text, with |left_part| specifying the left\n' +
    ' fade effect, if any, and |right_part| specifying the right fade effect.',
  ' Converts a FontRenderParams::Hinting value to the corresponding\n' +
    ' SkFontHinting value.',
  " Make sure ranges don't break text graphemes.  If a range in |break_list|\n" +
    ' does break a grapheme in |render_text|, the range will be slightly\n' +
    ' extended to encompass the grapheme.',
  ' Move the iterator |iter| forward until |position| is included in the range.',
  ' Replaces the unicode control characters, control characters and PUA (Private\n' +
    ' Use Areas) codepoints.',
  ' Returns the line segment index for the |line|, |text_x| pair. |text_x| is\n' +
    ' relative to text in the given line. Returns -1 if |text_x| is to the left\n' +
    " of text in the line and |line|.segments.size() if it's to the right.\n" +
    ' |offset_relative_segment| will contain the offset of |text_x| relative to\n' +
    ' the start of the segment it is contained in.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
render_text_api_fuzzer.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Commands recognized to drive the API calls on RenderText.',
  ' Eliding behaviors are not all fully supported by RenderText. Ignore\n' +
    ' unsupported cases. This is causing clusterfuzz to fail with invalid\n' +
    ' tests (http://crbug.com/1185542). Remove when https://crbug.com/1085014 is\n' +
    ' fixed.'
]
render_text_fuzzer.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
render_text_harfbuzz.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Text length limit. Longer strings are slow and not fully tested.',
  ' The maximum number of scripts a Unicode character can belong to. This value\n' +
    ' is arbitrarily chosen to be a good limit because it is unlikely for a single\n' +
    ' character to belong to more scripts.',
  " Returns whether the codepoint has the 'extended pictographic' property.",
  ' Returns whether the codepoint has emoji properties.',
  ' Returns true if |codepoint| is a bracket. This is used to avoid "matching"\n' +
    ' brackets picking different font fallbacks, thereby appearing mismatched.',
  ' Returns a vector containing the script and the script extensions of the\n' +
    ' Unicode |codepoint|.',
  ' Intersects the script extensions set of |codepoint| with |result| and writes\n' +
    ' to |result|.',
  ' Returns the properties for the codepoints part of the given text.',
  ' Return whether the grapheme properties are compatible and the grapheme can\n' +
    ' be merge together in the same grapheme cluster.',
  ' Returns the end of the current grapheme cluster. This function is finding the\n' +
    ' breaking point where grapheme properties are no longer compatible\n' +
    ' (see: UNICODE TEXT SEGMENTATION (http://unicode.org/reports/tr29/).\n' +
    ' Breaks between |run_start| and |run_end| and force break after the grapheme\n' +
    ' starting at |run_break|.',
  ' Find the longest sequence of characters from 0 and up to |length| that have\n' +
    ' at least one common UScriptCode value. Writes the common script value to\n' +
    " |script| and returns the length of the sequence. Takes the characters' script\n" +
    ' extensions into account. http://www.unicode.org/reports/tr24/#ScriptX\n' +
    ' Consider 3 characters with the script values {Kana}, {Hira, Kana}, {Kana}.\n' +
    ' Without script extensions only the first script in each set would be taken\n' +
    ' into account, resulting in 3 runs where 1 would be enough.',
  ' A port of hb_icu_script_to_script because harfbuzz on CrOS is built without\n' +
    ' hb-icu. See http://crbug.com/356929',
  ' Whether |segment| corresponds to the newline character.',
  ' Returns the line index considering the newline character. Line index is\n' +
    ' incremented if the caret is right after the newline character, i.e, the\n' +
    ' cursor affinity is |CURSOR_BACKWARD| while containing the newline character.',
  ' Helper template function for |TextRunHarfBuzz::GetClusterAt()|. |Iterator|\n' +
    ' can be a forward or reverse iterator type depending on the text direction.\n' +
    ' Returns true on success, or false if an error is encountered.',
  ' Internal class to generate Line structures. If |multiline| is true, the text\n' +
    ' is broken into lines at |words| boundaries such that each line is no longer\n' +
    ' than |max_width|. If |multiline| is false, only outputs a single Line from\n' +
    ' the given runs. |min_baseline| and |min_height| are the minimum baseline and\n' +
    ' height for each line.\n' +
    ' TODO(ckocagil): Expose the interface of this class in the header and test\n' +
    '                 this class directly.',
  ' Applies a forced text rendering direction if specified by a command-line\n' +
    ' switch.',
  ' Append to `in_out_report` the font name and the text correlating to the runs\n' +
    ' shaped by that font. This crash report will be used to debug why text is\n' +
    " being shaped through the GetFallbackFonts path as we shouldn't need to\n" +
    ' fallback to that call path. crbug.com/995789',
  ' ShapeRunWithFont cache. Views makes repeated calls to ShapeRunWithFont\n' +
    ' with the same arguments in several places, and typesetting is very expensive.\n' +
    ' To compensate for this, encapsulate all of the input arguments to\n' +
    ' ShapeRunWithFont in ShapeRunWithFontInput, all of the output arguments in\n' +
    ' TextRunHarfBuzz::ShapeOutput, and add ShapeRunCache to map between the two.\n' +
    ' This is analogous to the blink::ShapeCache.\n' +
    ' https://crbug.com/826265',
  ' Input for the stateless implementation of ShapeRunWithFont.',
  ' An LRU cache of the results from calling ShapeRunWithFont. The maximum cache\n' +
    ' size used in blink::ShapeCache is 10k. A Finch experiment showed that\n' +
    ' reducing the cache size to 1k has no performance impact.',
  ' Returns the current run list, |display_run_list_| if the text is elided, or\n' +
    ' |layout_run_list_| otherwise.'
]
render_text_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Various weak, LTR, RTL, and Bidi string cases with three characters each.',
  ' Bitmasks based on gfx::TextStyle.',
  ' Checks whether |range| contains |index|. This is not the same as calling\n' +
    ' range.Contains(Range(index)), which returns true if |index| == |range.end()|.',
  ' A test utility function to set the application default text direction.',
  ' Execute MoveCursor on the given |render_text| instance for the given\n' +
    ' arguments and verify the selected range matches |expected|. Also, clears the\n' +
    ' expectations.',
  ' Execute MoveCursor on the given |render_text| instance for the given\n' +
    ' arguments and verify the line matches |expected|. Also, clears the\n' +
    ' expectations.',
  ' Ensure cursor movement in the specified |direction| yields |expected| values.',
  ' Creates a RangedAttribute instance for a single character range at the\n' +
    ' given |index| with the given |weight| and |style_mask|. |index| is the\n' +
    ' index of the character in the DecoratedText instance and |font_index| is\n' +
    ' used to retrieve the font used from |font_spans|.',
  ' Verifies the given DecoratedText instances are equal by comparing the\n' +
    ' respective strings and attributes for each index. Note, corresponding\n' +
    " ranged attributes from |expected| and |actual| can't be compared since the\n" +
    ' partition of |actual| into RangedAttributes will depend on the text runs\n' +
    ' generated.',
  ' Helper method to return an obscured string of the given |length|, with the\n' +
    ' |reveal_index| filled with |reveal_char|.',
  ' Helper method to return an obscured string of the given |length|.',
  ' Returns the combined character range from all text runs on |line|.',
  ' The class which records the drawing operations so that the test case can\n' +
    ' verify where exactly the glyphs are drawn.',
  ' Given a buffer to test against, this can be used to test various areas of the\n' +
    ' rectangular buffer against a specific color value.',
  ' Test fixture class used to run parameterized tests for all RenderText\n' +
    ' implementations.',
  ' Tests that when a selection is made and the selection background is\n' +
    ' translucent, the selection renders properly. See crbug.com/1134440.',
  ' Validate that conversion text and between display text indexes are consistent\n' +
    ' even when text obscured and reveal character features are used.',
  " see 'Unicode Bidirectional Algorithm': http://unicode.org/reports/tr9/",
  ' Test cases to ensure the extraction of script extensions are taken into\n' +
    ' account while performing the text itemization.\n' +
    ' See table 7 from http://www.unicode.org/reports/tr24/tr24-29.html',
  ' Test cases to ensure ItemizeTextToRuns is splitting text based on unicode\n' +
    ' script (intersection of script extensions).\n' +
    ' See ScriptExtensions.txt and Scripts.txt from\n' +
    ' http://www.unicode.org/reports/tr24/tr24-29.html',
  ' Test cases to ensure ItemizeTextToRuns is splitting emoji correctly.\n' +
    ' see: http://www.unicode.org/reports/tr51\n' +
    ' see: http://www.unicode.org/emoji/charts/full-emoji-list.html',
  ' TODO(crbug.com/40586307): The current implementation of eliding is not aware\n' +
    " of text styles. The elide text algorithm doesn't take into account the style\n" +
    ' properties when eliding the text. This lead to incorrect text size when the\n' +
    ' styles are applied.',
  ' TODO(crbug.com/40586307): The current implementation of eliding is not aware\n' +
    " of text styles. The elide text algorithm doesn't take into account the style\n" +
    ' properties when eliding the text. This lead to incorrect text size when the\n' +
    ' styles are applied.',
  ' Tests that FindCursorPosition behaves correctly for multi-line text.',
  ' Ensure FindCursorPosition returns positions only at valid grapheme\n' +
    ' boundaries.',
  ' TODO(aleventhal): https://crbug.com/906308 Fix bugs, update verifier code\n' +
    ' above, and enable for Windows.',
  " TODO(crbug.com/40585744): Chinese and Japanese tokenization doesn't work on\n" +
    ' mobile.',
  ' Test the correct behavior of undirected selections: selections where the\n' +
    ' "end" of the selection that holds the cursor is only determined after the\n' +
    ' first cursor movement.',
  ' Check that, for Latin characters, typesetting text in the default fonts and\n' +
    ' sizes does not discover any glyphs that would exceed the line spacing\n' +
    ' recommended by gfx::Font.',
  ' Make sure the caret width is always >=1 so that the correct\n' +
    ' caret is drawn at high DPI. crbug.com/164100.',
  ' Make sure the last word is selected when the cursor is at text.length().',
  ' When given a non-empty selection, SelectWord should expand the selection to\n' +
    ' nearest word boundaries.',
  ' Changing colors between or inside ligated glyphs should not break shaping.',
  ' Test that characters commonly used in the context of several scripts do not\n' +
    ' cause text runs to break. For example the Japanese "long sound symbol" --\n' +
    ' normally only used in a Katakana script, is also used on occasion when in\n' +
    " Hiragana scripts. It shouldn't cause a Hiragana text run break since that\n" +
    ' could upset kerning.',
  ' Test that whitespace breaks runs of text. E.g. this can permit better fonts\n' +
    ' to be chosen by the fallback mechanism when a font does not provide\n' +
    ' whitespace glyphs for all scripts. See http://crbug.com/731563.',
  ' Ensure strings wrap onto multiple lines for a small available width.',
  ' Ensure strings wrap onto multiple lines for a normal available width.',
  " Ensure strings don't wrap onto multiple lines for a sufficient available\n" +
    ' width.',
  ' Make sure that multiline mode ignores elide behavior.',
  ' Ensure horizontal alignment works in multiline mode.',
  ' Test that Surrogate pairs or combining character sequences do not get\n' +
    ' separated by line breaking.',
  ' Test that Zero width characters have the correct line breaking behavior.',
  ' Make sure the horizontal positions of runs in a line (left-to-right for\n' +
    ' LTR languages and right-to-left for RTL languages).',
  " Test TextRunHarfBuzz's cluster finding logic.",
  ' Ensures GetClusterAt does not crash on invalid conditions. crbug.com/724880',
  ' Ensure that graphemes with multiple code points do not get split.',
  ' Test the partition of a multi-grapheme cluster into grapheme ranges.',
  ' Test that, on Mac, font fallback mechanisms and Harfbuzz configuration cause\n' +
    ' the correct glyphs to be chosen for unicode regional indicators.',
  ' Ensure that shaping with a non-existent font does not cause a crash.',
  ' Ensure an empty run returns sane values to queries.',
  " Ensure the line breaker doesn't compute the word's width bigger than the\n" +
    ' actual size. See http://crbug.com/470073',
  " Ensure a string fits in a display rect with a width equal to the string's.",
  ' TODO(crbug.com/40585825): Figure out why this fails on Android.',
  ' Ensure that RenderText examines all of the fonts in its FontList before\n' +
    ' falling back to other fonts.',
  ' Ensure that the fallback fonts offered by GetFallbackFonts() are tried. Note\n' +
    ` this test assumes the font "Arial" doesn't provide a unicode glyph for a\n` +
    ' particular character, and that there is a system fallback font which does.\n' +
    " TODO(msw): Fallback doesn't find a glyph on Linux and Android.",
  ' Ensure that the fallback fonts offered by GetFallbackFont() support glyphs\n' +
    ' for different languages.',
  ' Ensure that the fallback fonts offered by GetFallbackFont() support glyphs\n' +
    ' for different languages.',
  ' Ensures that RenderText is finding an appropriate font and that every\n' +
    ' codepoint can be rendered by the font. An error here can be by an incorrect\n' +
    ' ItemizeText(...) leading to an invalid fallback font.',
  ' Test cases to ensures the COMMON unicode script is split by unicode code\n' +
    ' block. These tests work on Windows and Mac default fonts installation.\n' +
    ' On other platforms, the fonts are mock (see test_fonts).',
  ' Ensures that locale is used for fonts selection.',
  ' Ensure that the width reported by RenderText is sufficient for drawing. Draws\n' +
    ' to a canvas and checks if any pixel beyond the bounding rectangle is colored.',
  ' Ensure that the text will clip to the display rect. Draws to a canvas and\n' +
    ' checks whether any pixel beyond the bounding rectangle is colored.',
  ' Ensure color changes are picked up by the RenderText implementation.',
  ' Ensure style information propagates to the typeface on the text renderer.',
  ' Ensure the painter adheres to RenderText::subpixel_rendering_suppressed().',
  ' Ensure the SkFont Edging is computed accurately.',
  ' Verify GetWordLookupDataAtPoint returns the correct baseline point and\n' +
    ' decorated word for an LTR string.',
  ' Verify GetWordLookupDataAtPoint returns the correct baseline point and\n' +
    ' decorated word for an RTL string.',
  ' Test that GetWordLookupDataAtPoint behaves correctly for multiline text.',
  ' Verify the boolean return value of GetWordLookupDataAtPoint.',
  ' Test that GetLookupDataAtPoint behaves correctly when the range spans lines.',
  ' Test that GetLookupDataForRange returns the expected sizes for each range.',
  ' Tests text selection made at end points of individual lines of multiline\n' +
    ' text.',
  ' Tests that GetSubstringBounds rounds outward when glyphs have floating-point\n' +
    ' widths.',
  ' Tests that GetSubstringBounds handles integer glypth widths correctly.',
  ' Tests that GetSubstringBounds returns the correct bounds for multiline text.',
  " Tests that RenderText doesn't crash even if it's passed an invalid font. Test\n" +
    ' for crbug.com/668058.',
  ' Ensures that text is centered vertically and consistently when either the\n' +
    ' display rectangle height changes, or when the minimum line height changes.\n' +
    ' The difference between the two is the selection rectangle, which should match\n' +
    ' the line height.',
  ' Test cursor bounds for Emoji flags (unicode regional indicators) when the\n' +
    ' flag does not merge into a single glyph.',
  ' Ensures that glyph spacing is correctly applied to obscured text.',
  ' Ensures that glyph spacing is ignored for non-obscured text.',
  ' Ensure font size overrides propagate through to text runs.',
  ' This test case is a unit test version of the clusterfuzz issue found in\n' +
    ' crbug.com/1298286, an integer-overflow undefined behavior.',
  ' This test case is a unit test version of the clusterfuzz issue found in\n' +
    ' crbug.com/1299054, an integer-overflow undefined behavior.'
]
scoped_canvas.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scrollbar_size.cc [
  ' Copyright 2009 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
selection_bound.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
selection_bound_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
selection_model.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
selection_model_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
sequential_id_generator.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Removes |key| from |first|, and |first[key]| from |second|.'
]
sequential_id_generator_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
shadow_util.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates an image with the given shadows painted around a round rect with\n' +
    ' the given corner radius. The image will be just large enough to paint the\n' +
    ' shadows appropriately with a 1px square region reserved for "content".',
  " A shadow's appearance is determined by its rounded corner radius and shadow\n" +
    ' values. Make these attributes as the key for shadow details.',
  ' Map from shadow details key to a cached shadow.'
]
shadow_util_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests the ShadowDetailsKey works properly for shadow details cache.'
]
shadow_value.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' To match the CSS notion of blur (spread outside the bounding box) to the\n' +
    ' Skia notion of blur (spread outside and inside the bounding box), we have\n' +
    ' to double the designer-provided blur values.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
shadow_value_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
skbitmap_operations.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' TODO(viettrungluu): Some things have yet to be optimized at all.',
  ' Notes on and conventions used in the following code\n' +
    ' Conventions:\n' +
    '  - R, G, B, A = obvious; as variables: |r|, |g|, |b|, |a| (see also below)\n' +
    '  - H, S, L = obvious; as variables: |h|, |s|, |l| (see also below)\n' +
    '  - variables derived from S, L shift parameters: |sdec| and |sinc| for S\n' +
    '    increase and decrease factors, |ldec| and |linc| for L (see also below)\n' +
    ' To try to optimize HSL shifts, we do several things:\n' +
    '  - Avoid unpremultiplying (then processing) then premultiplying. This means\n' +
    '    that R, G, B values (and also L, but not H and S) should be treated as\n' +
    '    having a range of 0..A (where A is alpha).\n' +
    '  - Do things in integer/fixed-point. This avoids costly conversions between\n' +
    '    floating-point and integer, though I should study the tradeoff more\n' +
    '    carefully (presumably, at some point of processing complexity, converting\n' +
    '    and processing using simpler floating-point code will begin to win in\n' +
    '    performance). Also to be studied is the speed/type of floating point\n' +
    '    conversions; see, e.g., <http://www.stereopsis.com/sree/fpu2006.html>.\n' +
    ' Conventions for fixed-point arithmetic\n' +
    '  - Each function has a constant denominator (called |den|, which should be a\n' +
    '    power of 2), appropriate for the computations done in that function.\n' +
    '  - A value |x| is then typically represented by a numerator, named |x_num|,\n' +
    '    so that its actual value is |x_num / den| (casting to floating-point\n' +
    '    before division).\n' +
    '  - To obtain |x_num| from |x|, simply multiply by |den|, i.e., |x_num = x *\n' +
    '    den| (casting appropriately).\n' +
    '  - When necessary, a value |x| may also be represented as a numerator over\n' +
    '    the denominator squared (set |den2 = den * den|). In such a case, the\n' +
    '    corresponding variable is called |x_num2| (so that its actual value is\n' +
    '    |x_num^2 / den2|.\n' +
    '  - The representation of the product of |x| and |y| is be called |x_y_num| if\n' +
    '    |x * y == x_y_num / den|, and |xy_num2| if |x * y == x_y_num2 / den2|. In\n' +
    '    the latter case, notice that one can calculate |x_y_num2 = x_num * y_num|.',
  ' Routine used to process a line; typically specialized for specific kinds of\n' +
    ' HSL shifts (to optimize).',
  ' Epsilon used to judge when shift values are close enough to various critical\n' +
    ' values (typically 0.5, which yields a no-op for S and L shifts. 1/256 should\n' +
    " be small enough, but let's play it safe>",
  ' Line processor: default/universal (i.e., old-school).',
  ' Line processor: no-op (i.e., copy).',
  ' Line processor: H no-op, S no-op, L decrease.',
  ' Line processor: H no-op, S no-op, L increase.',
  ' Saturation changes modifications in RGB\n' +
    ' (Note that as a further complication, the values we deal in are\n' +
    ' premultiplied, so R/G/B values must be in the range 0..A. For mathematical\n' +
    ' purposes, one may as well use r=R/A, g=G/A, b=B/A. Without loss of\n' +
    ' generality, assume that R/G/B values are in the range 0..1.)\n' +
    ' Let Max = max(R,G,B), Min = min(R,G,B), and Med be the median value. Then L =\n' +
    ' (Max+Min)/2. If L is to remain constant, Max+Min must also remain constant.\n' +
    ' For H to remain constant, first, the (numerical) order of R/G/B (from\n' +
    ' smallest to largest) must remain the same. Second, all the ratios\n' +
    ' (R-G)/(Max-Min), (R-B)/(Max-Min), (G-B)/(Max-Min) must remain constant (of\n' +
    ' course, if Max = Min, then S = 0 and no saturation change is well-defined,\n' +
    ' since H is not well-defined).\n' +
    ' Let C_max be a colour with value Max, C_min be one with value Min, and C_med\n' +
    ' the remaining colour. Increasing saturation (to the maximum) is accomplished\n' +
    ' by increasing the value of C_max while simultaneously decreasing C_min and\n' +
    ' changing C_med so that the ratios are maintained; for the latter, it suffices\n' +
    ' to keep (C_med-C_min)/(C_max-C_min) constant (and equal to\n' +
    ' (Med-Min)/(Max-Min)).',
  ' Line processor: H no-op, S decrease, L no-op.',
  ' Line processor: H no-op, S decrease, L decrease.',
  ' Line processor: H no-op, S decrease, L increase.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
skbitmap_operations_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' Returns true if each channel of the given two colors are "close." This is\n' +
    ' used for comparing colors where rounding errors may cause off-by-one.',
  ' The reference (i.e., old) implementation of |CreateHSLShiftedBitmap()|.',
  ' Invert bitmap and verify the each pixel is inverted and the alpha value is\n' +
    ' not changed.',
  ' Blend two bitmaps together at 50% alpha and verify that the result\n' +
    ' is the middle-blend of the two.',
  ' Test our masking functions.',
  ' Make sure that when shifting a bitmap without any shift parameters,\n' +
    ' the end result is close enough to the original (rounding errors\n' +
    ' notwithstanding).',
  ' Shift a blue bitmap to red.',
  ' Validate HSL shift.',
  ' Test our cropping.',
  ' Test whether our cropping correctly wraps across image boundaries.',
  ' Test edge cases for DownsampleByTwo.',
  " Here we assume DownsampleByTwo works correctly (it's tested above) and\n" +
    ' just make sure that the wrapper function does the right thing.',
  ' Check that Rotate provides the desired results'
]
skia_color_space_util.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
skia_paint_util.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is copied from\n' +
    ' third_party/WebKit/Source/platform/graphics/skia/SkiaUtils.h'
]
skia_util.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' We treat HarfBuzz ints as 16.16 fixed-point.'
]
skia_util_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
swap_result.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
switches.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Scale factor to apply to every animation duration. Must be >= 0.0. This will\n' +
    ' only apply to LinearAnimation and its subclasses.',
  ' Force disables font subpixel positioning. This affects the character glyph\n' +
    ' sharpness, kerning, hinting and layout.',
  ' Enable native CPU-mappable GPU memory buffer support on Linux.',
  ' Forces whether the user desires reduced motion, regardless of system\n' +
    ' settings.',
  ' Forces whether the user desires no reduced motion, regardless of system\n' +
    ' settings.',
  ' Run in headless mode, i.e., without a UI or display server dependencies.',
  ' Which X11 display to connect to. Emulates the GTK+ "--display=" command line\n' +
    ' argument. In use only with Ozone/X11.',
  ' Disables MIT-SHM extension. In use only with Ozone/X11.'
]
sys_color_change_listener.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
system_fonts_win.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' Retrieve a FONT from a LOGFONT structure.'
]
system_fonts_win_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
font_fallback_test_data.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A list of script and the fallback font on a default windows installation.\n' +
    ' This list may need to be updated if fonts or operating systems are\n' +
    ' upgraded.\n' +
    " TODO(drott): Some of the test cases lack a valid language tag as it's unclear\n" +
    ' which language in particular would be expressed with the respective ancient\n' +
    " script. Ideally we'd find a meaningful language tag for those.",
  ' A list of script and the fallback font on the linux test environment.\n' +
    ' On linux, font-config configuration and fonts are mock. The config\n' +
    " can be found in '${build}/etc/fonts/fonts.conf' and the test fonts\n" +
    " can be found in '${build}/test_fonts/*'.",
  ' No fallback font tests are defined on that platform.'
]
icc_profiles.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
run_all_unittests.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
sk_color_eq.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
text_elider.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file implements utility functions for eliding and formatting UI text.\n' +
    ' Note that several of the functions declared in text_elider.h are implemented\n' +
    ' in this file using helper classes in an unnamed namespace.',
  ' The returned string will have at least one character besides the ellipsis\n' +
    " on either side of '@'; if that's impossible, a single ellipsis is returned.\n" +
    ' If possible, only the username is elided. Otherwise, the domain is elided\n' +
    ' in the middle, splitting available width equally with the elided username.\n' +
    " If the username is short enough that it doesn't need half the available\n" +
    ' width, the elided domain will occupy that extra width.',
  ' U+2026 in utf8',
  ' Internal class used to track progress of a rectangular string elide\n' +
    ' operation.  Exists so the top-level ElideRectangleString() function\n' +
    ' can be broken into smaller methods sharing this state.',
  ' Internal class used to track progress of a rectangular text elide\n' +
    ' operation.  Exists so the top-level ElideRectangleText() function\n' +
    ' can be broken into smaller methods sharing this state.'
]
text_elider_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' Unit tests for eliding and formatting utility functions.',
  ' Checks that all occurrences of |first_char| are followed by |second_char| and\n' +
    ' all occurrences of |second_char| are preceded by |first_char| in |text|. Can\n' +
    ' be used to test surrogate pairs or two-character combining sequences.',
  ' Test that both both UTF-16 surrogate pairs and combining character sequences\n' +
    ' do not get split by ElideText.',
  ' Detailed tests for StringSlicer. These are faster and test more of the edge\n' +
    ' cases than the above tests which are more end-to-end.',
  ' This test is to make sure that the width of each wrapped line does not\n' +
    ' exceed the available width. On some platform like Mac, this test used to\n' +
    ' fail because the truncated integer width is returned for the string\n' +
    ' and the accumulation of the truncated values causes the elide function\n' +
    ' to wrap incorrectly.',
  ' This test was created specifically to test a message from crbug.com/415213.\n' +
    ' It tests that width of concatenation of words equals sum of widths of the\n' +
    ' words.'
]
text_utils.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if the specified character must be elided from a string.\n' +
    ' Examples are combining marks and whitespace.'
]
text_utils_skia.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
text_utils_unittest.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_gfx_exports.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file is for including headers that are not included in any other .cc\n' +
    ' files contained with the ui/gfx module.  We need to include these here so\n' +
    ' that linker will know to include the symbols, defined by these headers, in\n' +
    ' the resulting dynamic library (gfx.dll).'
]
utf16_indexing.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
utf16_indexing_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vector_icon_utils.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vsync_provider.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
crash_id_helper.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
crash_id_helper_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This test verifies CurrentCrashId(). Ideally this would verify at\n' +
    " crash_reporter::CrashKeyString, but that class isn't particularly test\n" +
    ' friendly (and the implementation varies depending upon compile time flags).'
]
d3d_shared_fence.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static'
]
direct_write.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Pointer to the global IDWriteFactory interface.'
]
direct_write_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hwnd_util.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adjust the window to fit.',
  " Don't inline these functions so they show up in crash reports.",
  " Crash isn't one of the ones we commonly see."
]
physical_size.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This GUID {E6F07B5F-EE97-4A90-B076-33F57BF4EAA7} was taken from\n' +
    ' https://msdn.microsoft.com/en-us/library/windows/hardware/ff545901.aspx',
  ' The physical size information is only available by looking in the EDID block\n' +
    ' via setup. However setup has the device path and not the device name that we\n' +
    ' use to identify displays. Therefore after looking up a device via setup we\n' +
    ' need to find the display again via EnumDisplayDevices (matching device path\n' +
    " to the device ID of the display's interface) so we can return the device name\n" +
    " (available from the interface's attached monitor)."
]
rendering_window_manager.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
singleton_hwnd.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
singleton_hwnd_hot_key_observer.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
singleton_hwnd_observer.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
text_analysis_source.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
text_analysis_source_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
window_impl.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowImpl class tracking.',
  ' Several external scripts rely explicitly on this base class name for\n' +
    ' acquiring the window handle and will break if this is modified!\n' +
    ' static',
  ' WindowImpl class information used for registering unique windows.',
  ' WARNING: this class may be used on multiple threads.',
  ' static',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowImpl, public',
  ' static',
  ' static'
]
atom_cache.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
connection.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
connection_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Connection setup and teardown.'
]
error.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
future.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bigreq.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
dri3.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
extension_manager.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
glx.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
randr.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
read_error.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
render.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
screensaver.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
shape.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
shm.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
sync.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
xfixes.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
xinput.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
xkb.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
xproto.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
xtest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
geometry_cache.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
geometry_cache_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_state.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Non-XKB (core protocol) implementation of KeysymToKeycode and\n' +
    ' KeycodeToKeysym.',
  ' XKB implementation of KeysymToKeycode and KeycodeToKeysym.'
]
property_cache.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
property_cache_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
randr_output_manager.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Xrandr has a number of restrictions that make exact resize more complex:\n' +
    "   1. It's not possible to change the resolution of an existing mode. Instead,\n" +
    '      the mode must be deleted and recreated.\n' +
    "   2. It's not possible to delete a mode that's in use.\n" +
    "   3. Errors are communicated via Xlib's spectacularly unhelpful mechanism\n" +
    '      of terminating the process unless you install an error handler.\n' +
    '   4. The root window size must always enclose any enabled Outputs (that is,\n' +
    '      any output which is attached to a CRTC).\n' +
    '   5. An Output cannot be given properties (xy-offsets, mode) which would\n' +
    '      extend its rectangle beyond the root window size.\n' +
    ' Since we want the current mode name to be consistent (for each Output), the\n' +
    ' approach is as follows:\n' +
    '   1. Fetch information about all the active (enabled) CRTCs.\n' +
    '   2. Disable the RANDR Output being resized.\n' +
    '   3. Delete the CRD mode, if it exists.\n' +
    "   4. Create the CRD mode at the new resolution, and add it to the Output's\n" +
    '      list of modes.\n' +
    '   5. Adjust the properties (in memory) of any CRTCs to be modified:\n' +
    '      * Width/height (mode) of the CRTC being resized.\n' +
    '      * xy-offsets to avoid overlapping CRTCs.\n' +
    '   6. Disable any CRTCs that might prevent changing the root window size.\n' +
    '   7. Compute the bounding rectangle of all CRTCs (after adjustment), and set\n' +
    '      it as the new root window size.\n' +
    '   8. Apply all adjusted CRTC properties to the CRTCs. This will set the\n' +
    '      Output being resized to the new CRD mode (which re-enables it), and it\n' +
    '      will re-enable any other CRTCs that were disabled.',
  ' Gets current layout with context information from a list of monitors.',
  " Returns a physical size in mm that will work well with GNOME's\n" +
    ' automatic scale-selection algorithm.'
]
randr_output_manager_unittest.cc []
ref_counted_fd.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
visual_manager.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Do not free the colormap as this would uninstall the colormap even for\n' +
    ' non-Chromium clients.'
]
visual_picker_glx.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These constants are obtained from GL/glx.h and GL/glxext.h.',
  ' Used to filter visuals by the best class.'
]
window_cache.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
window_cache_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Ensure creating the cache doesn't timeout.",
  ' Regression test for https://crbug.com/1316735\n' +
    ' If both a parent and child window have a WM_NAME, the child window\n' +
    ' should be returned by GetWindowAtPoint().'
]
window_event_manager.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Asks the X server to set |window|'s event mask to |new_mask|."
]
wm_sync.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wm_sync_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_crtc_resizer.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(jamiewalch): Use the correct DPI for the mode: http://crbug.com/172405.'
]
x11_crtc_resizer_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_path.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
xlib_support.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
xproto_internal.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
xproto_types.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
egl_fence_utils.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_a_native_window.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
scoped_java_surface.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().'
]
scoped_java_surface_control.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().'
]
surface_texture.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().'
]
surface_texture_listener.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().'
]
angle_platform_impl.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ca_renderer_layer_params.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
child_window_win.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This runs on the window owner thread.',
  ' Hidden popup window  used as a parent for the child surface window.\n' +
    ' Must be created and destroyed on the thread.',
  ' This runs on the window owner thread.',
  ' This runs on the window owner thread.'
]
dc_layer_overlay_image.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dc_layer_overlay_params.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dc_layer_tree.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Unconditionally get a IDCompositionVisual2 as a IDCompositionVisual3.\n' +
    ' |IDCompositionVisual3| should be available since Windows 8.1, but we noticed\n' +
    ' crashes due to unconditionally casting to the interface on the earliest\n' +
    ' versions of Windows 10. This should only be used for features that are\n' +
    ' conditionally run above those versions of Windows.\n' +
    ' See: https://crbug.com/1455666',
  ' The size the surfaces in the pool. Used in |VisualSubtree::Update| to\n' +
    ' determine how to scale the background color visual. This can be any size\n' +
    ' since we need a non-empty surface to display the background fill, so 1x1\n' +
    ' is fine.',
  ' Owns a |IDCompositionSurface| filled with a solid color.',
  ' Return properties of non root swap chain at given index.'
]
dcomp_presenter.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dcomp_presenter_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The precise colors may differ depending on the video processor, so allow a\n' +
    ' margin for error.',
  ' Create an overlay image with an initial color and rectangles, drawn using the\n' +
    " painter's algorithm.",
  ' Create a |DCLayerOverlayParams| from an |image| and set the |content_rect| to\n' +
    ' the bounds of |image|, or |content_rect_override|, if set.',
  " Ensure that the overlay image isn't presented again unless it changes.",
  ' Ensure the swapchain size is set to the correct size if HW overlay scaling\n' +
    ' is support - swapchain should be set to the onscreen video size.',
  ' Ensure the swapchain size is set to the correct size if HW overlay scaling\n' +
    ' is not support - swapchain should be the onscreen video size.',
  ' Test protected video flags',
  " Check that when there's multiple background color surfaces, the correct one\n" +
    " is reused even if the order they're requested in changes.",
  ' Check that the delegated ink visual gets added to the DC Layer tree\n' +
    ' if there is no root surface.',
  ' Ensure that swap chains stay attached to the same visual between subsequent\n' +
    ' frames.\n' +
    ' Please ensure this test is not broken. Re-attaching swapchains between\n' +
    ' subsequent frames may cause flickering under certain conditions that include\n' +
    ' specific Intel drivers, custom present duration etc.\n' +
    ' See https://bugs.chromium.org/p/chromium/issues/detail?id=1421175.',
  " Test that the overlay quad rect's offset is affected by its transform.",
  ' Test that scaling a (very) small texture up works with nearest neighbor\n' +
    ' filtering using the content rect and quad rects.',
  ' Test that scaling a (very) small texture up works with nearest neighbor\n' +
    " filtering using the overlay's transform.",
  ' Test that the |content_rect| of an overlay scales the buffer to fit the\n' +
    ' display rect, if needed.',
  ' Test that the |content_rect| of an overlay scales the buffer to fit the\n' +
    ' display rect, if needed.',
  ' Test that the |content_rect| of an overlay clips portions of the buffer.',
  " Test that the |content_rect| of an overlay can clip a buffer and scale it's\n" +
    ' contents.',
  ' Check that the surface backing solid color overlays is reused across frames.\n' +
    ' This can happen e.g. with a solid color draw quad animating its color.',
  ' Check that a translation transform works.',
  ' Check that a scaling transform works.',
  ' Check that a rotation transform works.',
  ' Check that a complex transform (i.e. non-flat) works.',
  ' This kind of transform is uncommon, but should be supported when rotations\n' +
    ' are supported.',
  ' Test that solid color overlays completely fill their display rect.',
  ' Test that opacity works when originating from DComp tree parameter.',
  ' Test that opacity works when originating from the overlay image itself.',
  ' Test that opacity works when originating from a solid color overlay.',
  ' Check that an overlay with a DComp surface will visually reflect draws to the\n' +
    ' surface if its dcomp_surface_serial changes. This requires DCLayerTree to\n' +
    ' call Commit, even if no other tree properties change.',
  ' Check that we support simple rounded corners.',
  ' Check that we support rounded corners with complex radii.',
  ' Check that there are no seams between solid color quads when there is a\n' +
    ' rounded corner clip present. Seams can appear since the solid color visual\n' +
    ' uses a shared image that is scaled to fit the overlay. The combination of\n' +
    ' scaling and soft borders implied by rounded corners can cause seams.\n' +
    ' This is a common case in e.g. the omnibox.',
  ' Check that we get a soft border when we translate the overlay so that both\n' +
    ' the right and left edges cover half a pixel.',
  ' Check that we get a soft border when we scale the overlay so the right edge\n' +
    ' covers half a pixel.',
  ' Check that we get a soft border when we create a non-integral rounded corner\n' +
    ' bounds so the right edge covers half a pixel.',
  ' Check that DCLayerTree sorts overlays by their z-order instead of using the\n' +
    ' schedule order.',
  ' Check that an overlay with a non-opaque image can show a background color.',
  ' Test that we support sampling from overlay images with non-integral content\n' +
    ' rects. This test should output a blue square with a faint green outline.',
  ' Check that DCLayerTree does not introduce seams from edge AA on adjacent\n' +
    ' overlays that are transformed. The result should be a solid quadrilateral.',
  ' Check that we always have edge AA turned on for overlay transforms when there\n' +
    ' is only one overlay per contiguous layer ID in the overlay list. This should\n' +
    ' have the same output as |NoSeamsOnNonIntegralTransformSameLayer| but may\n' +
    ' include seams between the overlays.',
  ' This test validates the following:\n' +
    ' The presentation area with a non-zero and non-integer origin is\n' +
    ' rendered correctly. An ink trail is drawn at the edge of the\n' +
    ' presentation area, just within the bounds. It should be clipped to the\n' +
    ' presentation area and placed correctly within the root frame - window\n' +
    ' coordinates. Note that although the presentation area in the metadata\n' +
    ' is a gfx::RectF, an integral enclosed rect size is used to build\n' +
    ' the content rect and the quad rect of the overlay.',
  ' This test checks whether the delegated ink trail is synchronized with the\n' +
    ' root swap chain. The ink trail should be absent if the swap chain is\n' +
    ' presented and no delegated ink visual subtree is added to the tree.',
  ' This test checks whether a delegated ink trail renders correctly\n' +
    ' for a root surface with a dcomp surface image, and is correctly removed\n' +
    ' when no metadata is present for a frame.',
  ' This test verifies that the ink trail renders correctly when the delegated\n' +
    ' ink metadata changes properties such as color and diameter.',
  ' This test validates that the Ink trail does not render when metadata is\n' +
    ' outside presentation area by a fraction. The metadata corresponds to\n' +
    ' the first ink point in this case.',
  ' The test verifies that the ink trail is correctly clipped when part of it is\n' +
    ' outside the presentation area.',
  ' The test verifies that the ink trail is correctly clipped when the points are\n' +
    ' within the presentation area but its thickness causes a portion of it to be\n' +
    ' outside the bounds.',
  ' Pillarboxing is generally considered as a special letterboxing.',
  ' This test attempts to emulate the behavior of\n' +
    ' https://codepen.io/OpherV/pen/vYxxbMQ The test site has a 2560x1440 video\n' +
    ' which is scaled to 200% width & 200% height, which should result in just the\n' +
    ' upper left portion of the frame being shown. When in full screen on a\n' +
    ' 1920x1080 monitor the video at 200% scaling should have a swap chain size of\n' +
    ' 3840 x 2160 but the clipping rect should match the monitor size of 1920x1080.'
]
dcomp_surface_registry.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
debug_utils.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ID3D11DeviceChild and IDXGIObject implement SetPrivateData with\n' +
    ' the exact same parameters.'
]
delegated_ink_point_renderer_gpu.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Maximum number of pointer ids that will be considered for drawing. Number is\n' +
    ' chosen arbitrarily, as it seems unlikely that the total number of input\n' +
    ' sources using delegated ink trails would exceed 10, but it can be raised if\n' +
    ' the need arises.',
  ' Note that this returns true if the HRESULT is anything other than S_OK,\n' +
    ' meaning that it returns true when an event is traced (because of a\n' +
    ' failure).'
]
delegated_ink_point_renderer_gpu_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Standard number of microseconds that is put between each DelegatedInkPoint.',
  ' Test to confirm that points and tokens are stored and removed correctly based\n' +
    ' on when the metadata and points arrive.',
  ' Basic test to confirm that points are drawn as they arrive if they are in the\n' +
    " presentation area and after the metadata's timestamp.",
  ' Confirm that points with different pointer ids are handled correctly.',
  ' Make sure that the DelegatedInkPoint with the earliest timestamp is removed\n' +
    ' if we have reached the maximum number of pointer ids.',
  ' Verify that the `points_to_be_drawn_` is set correctly when points are\n' +
    " added to the API's trail, and that the TimeToDrawPointsMillis histogram is\n" +
    ' reported correctly on draw.',
  ' Test that stale points get removed from `points_to_be_drawn_` when a newer\n' +
    ' metadata is added.',
  ' Test that the histogram `TimeFromDelegatedInkToApiPaint` is fired when a\n' +
    ' point is painted via the Delegated Ink API and then found to match a metadata\n' +
    ' point.'
]
direct_composition_support.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Whether the overlay caps are valid or not. GUARDED_BY GetOverlayLock().',
  ' Indicates support for either NV12 or YUY2 overlays. GUARDED_BY\n' +
    ' GetOverlayLock().',
  ' Whether the GPU can support hardware overlays or not.',
  ' Whether video processor auto HDR is supported.',
  ' Whether the DecodeSwapChain is disabled or not.',
  ' Whether to force the nv12 overlay support.',
  ' Whether software overlays have been disabled.',
  ' The lock to guard g_overlay_caps_valid and g_supports_overlays.',
  ' A wrapper of IDXGIOutput4::CheckOverlayColorSpaceSupport()',
  ' Used for adjusting overlay size to monitor size.',
  ' The number of all visible display monitors on a desktop.',
  ' Whether there is a HDR capable display monitor being connected.',
  ' Per-monitor HDR capability',
  ' Global direct composition device.',
  ' Global d3d11 device used by direct composition.',
  ' Whether swap chain present failed and direct composition should be disabled.',
  ' Preferred overlay format set when detecting overlay support during\n' +
    " initialization.  Set to NV12 by default so that it's used when enabling\n" +
    ' overlays using command line flags.',
  " These are the raw support info, which shouldn't depend on field trial state,\n" +
    ' or command line flags. GUARDED_BY GetOverlayLock().',
  ' When this is set, if NV12 or YUY2 overlays are supported, set BGRA8 overlays\n' +
    ' as supported as well.',
  ' Force enabling DXGI_FORMAT_R10G10B10A2_UNORM format for overlay. Intel\n' +
    ' Icelake and Tigerlake fail to report the cap of this HDR overlay format.\n' +
    ' TODO(magchen@): Remove this workaround when this cap is fixed in the Intel\n' +
    ' drivers.',
  " Per Intel's request, only use NV12 for overlay when\n" +
    ' COLOR_SPACE_YCBCR_STUDIO_G22_LEFT_P709 is also supported. At least one Intel\n' +
    ' Gen9 SKU does not support NV12 overlays and it cannot be screened by the\n' +
    ' device id.',
  ' Update video processor auto HDR feature support status.\n' +
    ' Must be called on GpuMain thread.',
  ' For DirectComposition Display Monitor.',
  ' static',
  ' Called from GpuSwitchingObserver on the GPU main thread.',
  ' Called from GpuSwitchingObserver on the GPU main thread.',
  ' Called from GpuSwitchingObserver on the GPU main thread.',
  ' Called from GpuSwitchingObserver on the GPU main thread.'
]
egl_api_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
egl_bindings_autogen_mock.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file is auto-generated from\n' +
    ' ui/gl/generate_bindings.py\n' +
    " It's formatted by clang-format using chromium coding style:\n" +
    '    clang-format -i -style=chromium filename\n' +
    ' DO NOT EDIT!',
  ' This is called mainly to prevent the compiler combining the code of mock\n' +
    ' functions with identical contents, so that their function pointers will be\n' +
    ' different.'
]
egl_mock.cc [
  ' Copyright 2010 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
egl_surface_io_surface.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Enums for the EGL_ANGLE_iosurface_client_buffer extension',
  ' Convert a BufferFormat to a (internal format, type) combination from the\n' +
    ' EGL_ANGLE_iosurface_client_buffer extension spec.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' ScopedEGLSurfaceIOSurface',
  ' static'
]
egl_util.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This needs to be after the EGL includes',
  ' Returns the last EGL error as a string.'
]
gl_angle_util_vulkan.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_angle_util_win.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_api_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_bindings.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
gl_bindings_autogen_egl.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file is auto-generated from\n' +
    ' ui/gl/generate_bindings.py\n' +
    " It's formatted by clang-format using chromium coding style:\n" +
    '    clang-format -i -style=chromium filename\n' +
    ' DO NOT EDIT!'
]
gl_bindings_autogen_gl.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file is auto-generated from\n' +
    ' ui/gl/generate_bindings.py\n' +
    " It's formatted by clang-format using chromium coding style:\n" +
    '    clang-format -i -style=chromium filename\n' +
    ' DO NOT EDIT!'
]
gl_bindings_autogen_mock.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file is auto-generated from\n' +
    ' ui/gl/generate_bindings.py\n' +
    " It's formatted by clang-format using chromium coding style:\n" +
    '    clang-format -i -style=chromium filename\n' +
    ' DO NOT EDIT!',
  ' This is called mainly to prevent the compiler combining the code of mock\n' +
    ' functions with identical contents, so that their function pointers will be\n' +
    ' different.'
]
gl_context.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used to represent maximum GLES version for UMA.\n' +
    ' These values are persisted to logs. Entries should not be renumbered and\n' +
    ' numeric values should never be reused.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
gl_context_egl.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Change the specified attribute in context_attributes. This fails if\n' +
    ' the attribute is not already present. Returns true on success, false\n' +
    ' otherwise.'
]
gl_context_stub.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_display.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " From ANGLE's egl/eglext.h.",
  " From ANGLE's egl/eglext.h.",
  ' Because on Apple platforms there is a member variable of a type (ObjCStorage)\n' +
    ' that is defined in gl_display_egl.mm, the constructor/destructor also have to\n' +
    ' be there. If making changes to this copy, be sure to adjust the other.',
  ' static',
  ' static',
  ' InitializeDisplay is necessary because the static binding code\n' +
    ' needs a full Display init before it can query the Display extensions.'
]
gl_display_egl_util.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
gl_display_manager.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_display_manager_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_egl_api_implementation.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_enums.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_features.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Use the passthrough command decoder by default.  This can be overridden with\n' +
    ' the --use-cmd-decoder=passthrough or --use-cmd-decoder=validating flags.\n' +
    ' Feature lives in ui/gl because it affects the GL binding initialization on\n' +
    ' platforms that would otherwise not default to using EGL bindings.',
  ' If true, metal shader programs are written to disk.\n' +
    ' As the gpu process writes to disk when this is set, you must also disable\n' +
    ' the sandbox.\n' +
    ' The path the shaders are written to is controlled via the command line switch\n' +
    ' --shader-cache-path (default is /tmp/shaders).',
  ' If true, the metal shader cache is read from a file and put into BlobCache\n' +
    ' during startup.',
  " If true, VSyncThreadWin will use the primary monitor's\n" +
    ' refresh rate as the vsync interval.',
  ' Enables the use of ANGLE validation for EGL and GL (non-WebGL) contexts.',
  ' Allow fallback to SwfitShader without command line flags during the\n' +
    ' deprecation period.'
]
gl_fence.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
gl_fence_android_native_fence_sync.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
gl_fence_arb.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_fence_egl.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static'
]
gl_fence_nv.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_fence_win.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_fence_win_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ensure graceful failure when ID3D11Device5 is not available.'
]
gl_gl_api_implementation.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The GL state for when no context is bound',
  ' If the null draw bindings are currently enabled.\n' +
    ' TODO: Consider adding a new GLApi that no-ops these functions',
  ' TODO(epenner): Could the above function be merged into GetInternalFormat and\n' +
    ' removed?',
  ' The ANGLE and IMG variants of glRenderbufferStorageMultisample currently do\n' +
    ' not support BGRA render buffers so only the EXT one is customized. If\n' +
    ' GL_CHROMIUM_renderbuffer_format_BGRA8888 support is added to ANGLE then the\n' +
    ' ANGLE version should also be customized.'
]
gl_helper.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
gl_implementation.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_mock.cc [
  ' Copyright 2010 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is called mainly to prevent the compiler combining the code of mock\n' +
    ' functions with identical contents, so that their function pointers will be\n' +
    ' different.'
]
gl_share_group.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_state_restorer.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_stub_api.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_stub_autogen_gl.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file is auto-generated from\n' +
    ' ui/gl/generate_bindings.py\n' +
    " It's formatted by clang-format using chromium coding style:\n" +
    '    clang-format -i -style=chromium filename\n' +
    ' DO NOT EDIT!'
]
gl_surface.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
gl_surface_egl.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Not present egl/eglext.h yet.',
  " From ANGLE's egl/eglext.h.",
  ' static'
]
gl_surface_egl_surface_control.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_surface_egl_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_surface_egl_x11.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_surface_egl_x11_gles2.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_surface_format.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_surface_overlay.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_surface_presentation_helper.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' https://crbug.com/854298 : disable GLFence on Android as they seem to cause\n' +
    ' issues on some devices.'
]
gl_surface_stub.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_switches.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Special switches for "NULL"/stub driver implementations.',
  ' The command decoder names that can be passed to --use-cmd-decoder.',
  ' Swap chain formats for direct composition SDR video overlays.',
  ' Disable workarounds for various GPU driver bugs.',
  ' Stop the GPU from synchronizing presentation with vblank.',
  ' Turns on GPU logging (debug build only).',
  ' Turns on calling TRACE for every GL call.',
  ' Select which ANGLE backend to use. Options are:\n' +
    '  default: Attempts several ANGLE renderers until one successfully\n' +
    '           initializes, varying ES support by platform.\n' +
    '  d3d9: Legacy D3D9 renderer, ES2 only.\n' +
    '  d3d11: D3D11 renderer, ES2 and ES3.\n' +
    '  warp: D3D11 renderer using software rasterization, ES2 and ES3.\n' +
    '  gl: Desktop GL renderer, ES2 and ES3.\n' +
    '  gles: GLES renderer, ES2 and ES3.',
  ' Use the Pass-through command decoder, skipping all validation and state\n' +
    ' tracking. Switch lives in ui/gl because it affects the GL binding\n' +
    ' initialization on platforms that would otherwise not default to using\n' +
    ' EGL bindings.',
  ' ANGLE features are defined per-backend in third_party/angle/include/platform\n' +
    ' Enables specified comma separated ANGLE features if found.',
  ' Disables specified comma separated ANGLE features if found.',
  ' Select which implementation of GL the GPU process should use. Options are:\n' +
    '  desktop: whatever desktop OpenGL the user has installed (Linux and Mac\n' +
    '           default).\n' +
    '  egl: whatever EGL / GLES2 the user has installed (Windows default - actually\n' +
    '       ANGLE).\n' +
    '  swiftshader: The SwiftShader software renderer.',
  ' Inform Chrome that a GPU context will not be lost in power saving mode,\n' +
    ' screen saving mode, etc.  Note that this flag does not ensure that a GPU\n' +
    ' context will never be lost in any situations, say, a GPU reset.',
  ' Flag used for Linux tests: for desktop GL bindings, try to load this GL\n' +
    ' library first, but fall back to regular library if loading fails.',
  ' Use hardware gpu, if available, for tests.',
  ' Enable use of the SGI_video_sync extension, which can have\n' +
    ' driver/sandbox/window manager compatibility issues.',
  ' Disables GL drawing operations which produce pixel output. With this\n' +
    ' the GL output will not be correct but tests will run faster.',
  ' Forces the use of software GL instead of hardware gpu for tests.',
  ' Disables specified comma separated GL Extensions if found.',
  ' Enables SwapBuffersWithBounds if it is supported.',
  ' Enables using DirectComposition video overlays, even if hardware overlays\n' +
    " aren't supported.",
  ' Initialize the GPU process using the adapter with the specified LUID. This is\n' +
    ' only used on Windows, as LUID is a Windows specific structure.',
  ' Allow usage of SwiftShader for WebGL',
  ' Used for overriding the swap chain format for direct composition SDR video\n' +
    ' overlays.',
  ' This is the list of switches passed from this file that are passed from the\n' +
    ' GpuProcessHost to the GPU Process. Add your switch to this list if you need\n' +
    " to read it in the GPU process, else don't add it.",
  ' On some Android emulators with software GL, ANGLE\n' +
    " is exposing the native fence sync extension but it doesn't\n" +
    ' actually work. This switch is used to disable the Android native fence sync\n' +
    ' during test to avoid crashes.\n' +
    ' TODO(https://crbug.com/337886037): Remove this flag once the upstream ANGLE\n' +
    ' is fixed.',
  ' Enable DComp debug visualizations. This can be useful to determine how much\n' +
    ' work DWM is doing when we update our tree.\n' +
    ' Please be aware that some of these visualizations result in quickly flashing\n' +
    ' colors.',
  ' Use BufferCount of 3 for the direct composition root swap chain.',
  ' Use BufferCount of 3 for direct composition video swap chains.',
  ' Allow overlay swapchain to present on all GPUs even if they only support\n' +
    ' software overlays. GPU deny lists limit it to NVIDIA only at the moment.',
  ' Adjust the letterbox video size and position to the center of the screen so\n' +
    ' that DWM power optimization can be turned on.',
  ' Do not consider hardware YUV overlay count when promoting quads to DComp\n' +
    ' visuals. If there are more videos than hardware overlay planes, there may be\n' +
    ' a performance hit compared to drawing all the videos into a single swap\n' +
    ' chain. This feature is intended for testing and debugging.',
  ' Allow dual GPU rendering through EGL where supported, i.e., allow a WebGL\n' +
    ' or WebGPU context to be on the high performance GPU if preferred and Chrome\n' +
    ' internal rendering to be on the low power GPU.',
  ' Allow overlay swapchain to use Intel video processor for super resolution.',
  ' Allow overlay swapchain to use NVIDIA video processor for super resolution.',
  ' Allow overlay swapchain to use NVIDIA video processor for trueHDR.',
  " Default to using ANGLE's OpenGL backend",
  " Default to using ANGLE's Metal backend.",
  " Default to using ANGLE's Vulkan backend.",
  " Track current program's shaders at glUseProgram() call for crash report\n" +
    ' purpose. Only effective on Windows because the attached shaders may only\n' +
    ' be reliably retrieved with ANGLE backend.',
  " Enable sharing Vulkan device queue with ANGLE's Vulkan backend.",
  ' Use waitable swap chain on Windows to reduce display latency.',
  ' If using waitable swap chain, specify the maximum number of queued frames.',
  ' Force a present interval of 0. This asks Windows to cancel the remaining time\n' +
    ' on the previously presented frame instead of synchronizing with vblank(s).\n' +
    ' Frames may be discarded if they are presented more frequently than one per\n' +
    ' vblank.'
]
gl_utils.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file contains some useful utilities for the ui/gl classes.',
  ' The global set of workarounds.',
  " Used by chrome://gpucrash and gpu_benchmarking_extension's\n" +
    ' CrashForTesting.',
  ' Used by chrome://gpuhang.',
  ' Labels swapchain buffers with the string name_prefix + _Buffer_ +\n' +
    ' <buffer_number>',
  ' Same as LabelSwapChainAndBuffers, but only does the buffers. Used for resize\n' +
    ' operations'
]
gl_version_info.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_version_info_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gpu_switching_manager.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
gpu_timing.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gpu_timing_fake.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gpu_timing_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hdr_metadata_helper_win.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Magic constants to convert to fixed point.\n' +
    ' https://docs.microsoft.com/en-us/windows/win32/api/dxgi1_5/ns-dxgi1_5-dxgi_hdr_metadata_hdr10',
  ' static'
]
hdr_metadata_helper_win_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' using ::testing::Eq;',
  ' using ::testing::SaveArg;'
]
create_gr_gl_interface.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This code emulates GL fences (GL_APPLE_sync or GL_ARB_sync) via\n' +
    " EGL_KHR_fence_sync extension. It's used to provide Skia ways of\n" +
    ' synchronization on platforms that does not have GL fences but support EGL',
  ' If enabled, adds a delay to GL program link whose value is given by the\n' +
    ' feature param. Used for an ablation study.',
  ' Call can be dropped for tests that setup null draw gl bindings.',
  ' Call needs to be wrapped with ProgressReporter.',
  ' Call needs to be wrapped with glFlush call, used on MacOS.'
]
gl_display_egl_util_ozone.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
gl_display_initializer.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_factory.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_factory_android.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used to render into an already current context+surface,\n' +
    ' that we do not have ownership of (draw callback).\n' +
    ' TODO(boliu): Make this inherit from GLContextEGL.'
]
gl_factory_mac.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_factory_ozone.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_factory_win.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_initializer_android.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_initializer_angle.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_initializer_ios.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_initializer_mac.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_initializer_ozone.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_initializer_win.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_implementation_mojom_traits.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
presenter.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_binders.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_egl_image.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_make_current.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_make_current_unsafe.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_restore_texture.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
shader_tracking.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
shared_gl_fence_egl.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
swap_chain_presenter.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' When in BGRA888 overlay format, wait for this time delta before retrying\n' +
    ' YUV format.',
  ' Some drivers fail to correctly handle BT.709 video in overlays. This flag\n' +
    ' converts them to BT.601 in the video processor.',
  ' These values are persisted to logs. Entries should not be renumbered and\n' +
    ' numeric values should never be reused.',
  ' Transform is correct for scaling up |quad_rect| to on screen bounds, but\n' +
    " doesn't include scaling transform from |swap_chain_size| to |quad_rect|.\n" +
    ' Since |swap_chain_size| could be equal to on screen bounds, and therefore\n' +
    ' possibly larger than |quad_rect|, this scaling could be downscaling, but\n' +
    ' only to the extent that it would cancel upscaling already in the transform.',
  ' Try disabling the topmost desktop plane for a decode swap chain in the case\n' +
    ' of full screen. Otherwise, swap chain size is used to set destination size\n' +
    ' and target rectangle for the decode swap chain. In DWM, the desktop plane\n' +
    ' can be turned off if the letterboxing info is set up properly for YUV\n' +
    ' swapchains, meaning that when the size of the window and the size of the\n' +
    ' monitor are the same and there is no other UI component overtop of the\n' +
    ' video. Otherwise, set the letterboxing info with swap chain size in order\n' +
    ' to restore the topmost desktop plane, which happens in scenarios like\n' +
    ' switching to underlay.\n' +
    ' Returns true on successful settings.'
]
sync_control_vsync_provider.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These constants define a reasonable range for a calculated refresh interval.\n' +
    ' Calculating refreshes out of this range will be considered a fatal error.',
  " How much noise we'll tolerate between successive computed intervals before\n" +
    ' we think the latest computed interval is invalid (noisey due to\n' +
    ' monitor configuration change, moving a window between monitors, etc.).'
]
egl_initialization_displays_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_surface_test_support.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
gl_test_helper.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
gl_test_support.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
run_all_unittests.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
trace_util.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vsync_provider_win.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a timebase (TimeTicks) & interval (TimeDelta) pair representing last\n' +
    ' vBlank timing and display period (in microseconds) calculated using\n' +
    ' DwmGetCompositionTimingInfo. In cases of failure returns an interval of 0,\n' +
    ' timebase may be 0 in cases where High Resolution Timers are not in use even\n' +
    ' when interval is successfully set.',
  ' Returns a TimeDelta representing display period (in microseconds) calculated\n' +
    ' using QueryDisplayConfig. In cases of failure returns a TimeDelta of 0.',
  ' Returns a TimeDelta representing display period (in microseconds) calculated\n' +
    ' using EnumDisplaySettings. In cases of failure returns a TimeDelta of 0.',
  ' static',
  ' On Windows versions greater than WIN11_22H2 DWM will execute at the\n' +
    ' refresh rate of the fastest operating display, where previously it\n' +
    ' would always align with the primary monitor. As a result of this, some\n' +
    ' clients of VSyncProviderWin need a way to get an interval that still\n' +
    ' aligns with the Primary monitor (e.g. VSyncThreadWin uses primary monitor\n' +
    ' vblanks for its timings so needs to report intervals that align with that).\n' +
    ' GetVSyncIntervalIfAvailable prioritizes this case, but still allows for\n' +
    ' fallbacks to use DwmCompositionInfo or EnumDisplaySettings if needed.'
]
vsync_thread_win.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Whether the current thread holds the `VSyncThreadWin` lock.',
  ' Check if a DXGI adapter is stale and needs to be replaced. This can happen\n' +
    ' e.g. when detaching/reattaching remote desktop sessions and causes subsequent\n' +
    ' WaitForVSyncs on the stale adapter/output to return instantly.',
  ' Create a new factory and find a DXGI adapter matching a LUID. This is useful\n' +
    ' if we have a previous adapter whose factory has become stale.',
  ' Return true if |output| is on |monitor|.',
  ' static'
]
gtk_color_mixers.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gtk_compat.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " IMPORTANT: All functions in this file that call dlsym()'ed\n" +
    ' functions should be annotated with DISABLE_CFI_DLSYM.'
]
gtk_key_bindings_handler.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gtk_ui.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Stores the GtkUi singleton instance',
  ' Number of app indicators used (used as part of app-indicator id).',
  ' The unknown content type.',
  " Returns a gfx::FontRenderParams corresponding to GTK's configuration.",
  ' static',
  ' Mapping from GDK dead keys to corresponding printable character.'
]
gtk_ui_factory.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gtk_ui_platform_stub.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gtk_util.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
input_method_context_impl_gtk.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Get IME KeyEvent's target window. Assumes root aura::Window is set to\n" +
    ' Event::target(), otherwise returns null.',
  ' Translate IME ui::KeyEvent to a GdkEventKey.',
  ' Overridden from ui::LinuxInputMethodContext',
  ' private:',
  ' GtkIMContext event handlers.'
]
native_theme_gtk.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
nav_button_provider_gtk.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' gtkheaderbar.c uses GTK_ICON_SIZE_MENU, which is 16px.',
  ' Specified in GtkHeaderBar spec.'
]
print_dialog_gtk.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' CUPS Duplex attribute and values.',
  ' Checks whether |gtk_paper_size| can be used to represent user selected media.\n' +
    ' In fuzzy match mode checks that paper sizes are "close enough" (less than\n' +
    ' 1mm difference). In the exact mode, looks for the paper with the same PPD\n' +
    ' name and "close enough" size.',
  ' Looks up a paper size matching (in terms of PaperSizeMatch) the user selected\n' +
    " media in the paper size list reported by GTK. Returns nullptr if there's no\n" +
    ' match found.',
  ' Helper class to track GTK printers.',
  ' static'
]
printing_gtk_util.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
select_file_dialog_linux_gtk.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/41469294): These getters will be unnecessary after\n' +
    ' migrating to GtkFileChooserNative.',
  ' The size of the preview we display for selected image files. We set height\n' +
    ' larger than width because generally there is more free space vertically\n' +
    ' than horizontally (setting the preview image will always expand the width of\n' +
    " the dialog, but usually not the height). The image's aspect ratio will always\n" +
    ' be preserved.  Only used on GTK3.',
  ' We ignore |default_extension|.'
]
settings_provider_gtk.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gtk_ui_platform_wayland.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
window_frame_provider_gtk.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The maximum reasonable size of the frame edges in DIPs.  If a GTK theme draws\n' +
    ' window decorations larger than this, they will be clipped.',
  ' The maximum reasonable radius of the frame top corners in DIPs.  If this\n' +
    ' limit is exceeded, the corners will be drawn correctly, but the compositor\n' +
    ' will get an incorrect hint as to which pixels are fully opaque.',
  ' Returns true iff any part of the header is transparent (even a single pixel).\n' +
    " This is used as an optimization hint to the compositor so that it doesn't\n" +
    ' have to composite behind opaque regions.  The consequence of a false-negative\n' +
    ' is rendering artifacts, but the consequence of a false-positive is only a\n' +
    ' slight performance penalty, so this function is intentionally conservative\n' +
    ' in deciding if the header is translucent.'
]
gtk_event_loop_x11.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' static'
]
gtk_ui_platform_x11.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
latency_info_param_traits.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Generate param traits write methods.',
  ' Generate param traits read methods.',
  ' Generate param traits log methods.',
  ' Implemetation for ParamTraits<ui::LatencyInfo>.'
]
latency_info_param_traits_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
janky_duration_tracker.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Singleton class to Advance() scroll jank duration counts. Watches changes in\n' +
    ' a directory, if specified by commandline flags. When a file is added or\n' +
    ' removed or replaced in the directory, prints the current jank sums to the\n' +
    ' log. Ignores the counts registered before the directory notification is set\n' +
    ' up.',
  ' static'
]
latency_info.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
latency_info_test_support.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
latency_info_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a fake TimeTicks based on the given microsecond offset.'
]
latency_info_mojom_traits.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
mojom_traits_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_server_utils.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Evaluates the environment and returns the effective platform name for the\n' +
    ' given |ozone_platform_hint|.\n' +
    ' For the "auto" value, returns "wayland" if the XDG session type is "wayland",\n' +
    ' "x11" otherwise.\n' +
    ' For the "wayland" value, checks if the Wayland server is available, and\n' +
    ' returns "x11" if it is not. See https://crbug.com/1246928.'
]
fake_linux_ui.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fallback_linux_ui.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
linux_ui.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
linux_ui_delegate.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
linux_ui_delegate_stub.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
linux_ui_factory.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
linux_ui_getter.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
status_icon_linux.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
animation.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
animation_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' A skottie animation with solid green color for the first 2.5 seconds and then\n' +
    ' a solid blue color for the next 2.5 seconds.',
  ' Test to see if the race condition is handled correctly. It may happen that we\n' +
    ' pause the video before it even starts playing.'
]
resource.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A descendant of |gfx::ImageSkiaSource| that simply uses one\n' +
    ' |gfx::ImageSkiaRep| for all scales.',
  ' Uses |LottieImageSource| to create a |gfx::ImageSkia| from an |Animation|.',
  ' Creates a |cc::SkottieColorMap| with theme colors from a |ui::ColorProvider|.',
  ' Used for a |ui::ImageModel::ImageGenerator|.'
]
dummy_message_center.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file contains dummy implementation of MessageCenter and used to compile\n' +
    ' and link with Android implementations of Chrome which do not have\n' +
    ' notification systems yet. This is to avoid spreading compile-time flags\n' +
    ' everywhere in the code.',
  ' static',
  ' static',
  ' static'
]
fake_message_center.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
empty_lock_screen_controller.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fake_lock_screen_controller.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
message_center.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '------------------------------------------------------------------------------',
  ' static',
  ' static',
  ' static',
  ' static'
]
message_center_impl.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constants -------------------------------------------------------------------',
  ' Indicates the notification count limit.\n' +
    ' NOTE: Used only when the notification limit feature is enabled.',
  ' Target notification count for the cleaning task triggered when the\n' +
    ' notification count exceeds `kChromeOSNotificationLimit`. This value is\n' +
    ' lower than `kChromeOSNotificationLimit` to reduce the frequency of hitting\n' +
    ' the limit. Because of unremovable notifications, the actual count after\n' +
    ' cleaning could exceed this target count.\n' +
    ' NOTE: Used only when the notification limit feature is enabled.',
  ' Helpers ---------------------------------------------------------------------',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' MessageCenterImpl',
  '------------------------------------------------------------------------------\n' +
    ' Client code interface.',
  ' ScopedNotificationLimitOverrider --------------------------------------------'
]
message_center_impl_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The default app id used to create simple notifications.',
  ' Right now, MessageCenter::HasNotification() returns regardless of blockers.',
  ' Similar to other blocker cases but this test case allows |notifier_id2| even\n' +
    ' in blocked.',
  ' NearTotalNotificationBlocker suppresses showing notifications even from the\n' +
    " list. This would provide the feature to 'separated' message centers\n" +
    ' per-profile for ChromeOS multi-login.',
  ' Tests that notification state is updated when a notification blocker is\n' +
    ' added.',
  ' Tests that notification state is updated when a notification blocker is\n' +
    ' removed.',
  ' Regression test for https://crbug.com/1135709'
]
message_center_stats_collector.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
message_center_style.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
notification_blocker.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
notification_blocker_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that a `NotificationBlocker` is not registered with the `MessageCenter`\n' +
    ' upon construction, but is registered after `Init()` has been called.',
  ' Tests that the program crashes if an attempt is made to initialize a\n' +
    ' `NotificationBlocker` more than once.'
]
notification_list.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constants -------------------------------------------------------------------',
  ' A notification created within this time period is exempted from over-limit\n' +
    ' removal. NOTE: Used only if the notification limit feature is enabled.',
  ' Helpers ---------------------------------------------------------------------'
]
notification_list_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A trivial blocker that allows all popups.',
  ' Tests that GetNotificationsByAppId returns notifications regardless of their\n' +
    ' visibility.',
  ' Tests that GetNotificationsByOriginUrl returns notifications regardless of\n' +
    ' their visibility.',
  ' Verifies that notification updates will re-show the toast when there is no\n' +
    ' message center view (i.e. the bubble anchored to the status bar).'
]
popup_timer.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
popup_timers_controller.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Timeout values used to dismiss notifications automatically after they are\n' +
    ' shown.',
  ' ChromeOS is going to ignore the `never_timeout` field for notification\n' +
    ' popups. Only enabled behind the `kNotificationsIgnoreRequireInteraction` flag\n' +
    ' for now.'
]
notification.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Histograms ------------------------------------------------------------------',
  ' Helpers ---------------------------------------------------------------------',
  ' Returns the byte size of `image` on the 1.0 scale factor, based on the\n' +
    ' assumption that the color mode is RGBA.\n' +
    ' NOTE: We avoid using `gfx::Image::AsBitmap()` to reduce cost.',
  ' Helpers ---------------------------------------------------------------------',
  ' static',
  ' Take the alpha channel of small_image, mask it with the foreground,\n' +
    ' then add the masked foreground on top of the background'
]
notification_delegate.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ThunkNotificationDelegate:',
  ' HandleNotificationClickDelegate:'
]
notification_delegate_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
notifier_id.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
run_all_unittests.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_message_popup_collection.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Anytime the display configuration changes, we need to recompute the alignment\n' +
    ' on the primary display. But, we get different events on different platforms.\n' +
    ' On Windows, for example, when switching from a laptop display to an external\n' +
    ' monitor, we get a OnDisplayMetricsChanged() event. On Linux, we get a\n' +
    ' OnDisplayRemoved() and a OnDisplayAdded() instead. In order to account for\n' +
    ' these slightly different abstractions, we update on every event.'
]
large_image_view.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
large_image_view_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a test image of `image_size`.',
  " Verifies that a large image view's preferred size is expected after setting\n" +
    ' an image.'
]
message_popup_collection.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Animation duration for kFadeIn and kFadeOut.',
  ' Animation duration for kMoveDown.'
]
message_popup_collection_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40885754): Flaky on all platforms.',
  ' Popup timers should be paused if a notification has focus.\n' +
    ' Once the focus is lost or the notification is resumed, popup timers\n' +
    ' should restart.',
  ' Tests that `MessagePopupCollection` notifies when there is an incoming silent\n' +
    ' notification.',
  ' Notification removing may occur while the animation triggered by the previous\n' +
    ' operation is running. As result, notification is removed from the message\n' +
    ' center but its popup is still kept. At this moment, a new notification with\n' +
    ' the same notification id may be added to the message center. This can happen\n' +
    ' on Chrome OS when an external display is connected with the Chromebook device\n' +
    ' (see https://crbug.com/921402). This test case emulates the procedure of\n' +
    ' the external display connection that is mentioned in the link above. Verifies\n' +
    ' that under this circumstance the notification popup is updated.'
]
message_popup_view.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40118868): Revisit the macro expression once build flag switch\n' +
    ' of lacros-chrome is complete.'
]
message_popup_view_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
message_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper function to setup focus ring shapes for `MessageView`.',
  ' Creates text for spoken feedback from the data contained in the\n' +
    ' notification.'
]
message_view_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Updating control buttons visibility is a ChromeOS only feature.',
  ' Make sure UpdateControlButtonsVisibility is called when their is a mouse\n' +
    ' enter or exit on a MessageView.'
]
notification_background_painter.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
notification_control_button_factory.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
notification_control_buttons_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests default and custom control button icons.',
  ' Tests that the icon size can be specified.',
  ' Tests spacing between control buttons.'
]
notification_control_buttons_view.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
notification_header_view.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The padding between controls in the header.',
  ' The padding outer the header and the control buttons.',
  ' Paddings of the app icon (small image).\n' +
    ' Top: 8px = 10px (from the mock) - 2px (outer padding).\n' +
    ' Bottom: 4px from the mock.\n' +
    ' Right: 4px = 6px (from the mock) - kHeaderHorizontalSpacing.',
  ' Size of the expand icon. 8px = 32px - 15px - 9px (values from the mock).',
  ' Paddings of the expand buttons.\n' +
    ' Top: 13px = 15px (from the mock) - 2px (outer padding).\n' +
    ' Bottom: 9px from the mock.',
  ' Bullet character. The divider symbol between different parts of the header.',
  ' Minimum spacing before the control buttons.',
  ' ExpandButton forwards all mouse and key events to NotificationHeaderView, but\n' +
    ' takes tab focus for accessibility purpose.'
]
notification_header_view_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
notification_input_container.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This key/property allows tagging the textfield with its index.',
  ' The icon size of inline reply input field.'
]
notification_view.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40787532): Move the padding and spacing definition from\n' +
    ' NotificationViewBase to this class.',
  ' TODO(tetsui): Move |kIconViewSize| to public/cpp/message_center_constants.h\n' +
    ' and merge with contradicting |kNotificationIconSize|.',
  ' Minimum size of a button in the actions row.',
  ' Max number of lines for title_view_.',
  ' "Roboto-Regular, 12sp" is specified in the mock.',
  ' Default paddings of the views of texts. Adjusted on Windows.\n' +
    ' Top: 9px = 11px (from the mock) - 2px (outer padding).\n' +
    ' Bottom: 6px from the mock.',
  ' NotificationTextButton //////////////////////////////////////////////////////',
  ' TODO(crbug/1241983): Add metadata and builder support to this view.',
  ' NotificationTextButton extends MdTextButton to allow for placeholder text\n' +
    ' as well as capitalizing the given label string. Used by chrome notifications.\n' +
    ' Ash notifications create their own.',
  ' InlineSettingsRadioButton ///////////////////////////////////////////////////',
  ' NotificationInkDropImpl /////////////////////////////////////////////////////'
]
notification_view_base.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Dimensions.',
  ' In progress notification, if both the title and the message are long, the\n' +
    ' message would be prioritized and the title would be elided.\n' +
    ' However, it is not preferable that we completely omit the title, so\n' +
    ' the ratio of the message width is limited to this value.',
  " Creates a view responsible for drawing each list notification item's title\n" +
    ' and message next to each other within a single column.',
  ' CompactTitleMessageView /////////////////////////////////////////////////////',
  ' ////////////////////////////////////////////////////////////\n' +
    ' NotificationViewBase\n' +
    ' ////////////////////////////////////////////////////////////',
  ' static'
]
notification_view_base_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Unit tests',
  ' TODO(tetsui): Following tests are not yet ported from\n' +
    ' NotificationViewBaseTest.\n' +
    ' * CreateOrUpdateTestSettingsButton\n' +
    ' * TestLineLimits\n' +
    ' * TestImageSizing\n' +
    ' * SettingsButtonTest\n' +
    ' * ViewOrderingTest\n' +
    ' * FormatContextMessageTest',
  ' TODO(crbug.com/40780100): Test failing on linux-lacros-tester-rel and ozone.',
  ' Synthetic scroll events are not supported on Mac in the views\n' +
    ' test framework.',
  ' Pinning notification is ChromeOS only feature.',
  ' Tests slide out behavior when the `MessageCenterView` exists. The\n' +
    " notification's popup should be dismissed but the notification should not be\n" +
    ' removed.'
]
notification_view_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ChromeOS/Ash uses `AshNotificationView` instead of `NotificationView`.',
  ' Default color of `gfx::test::CreateImage()`.',
  ' TODO(pkasting): These hardcoded colors are fragile and should be obtained\n' +
    ' dynamically.',
  ' Returns the same value as AshColorProvider::Get()->\n' +
    ' GetContentLayerColor(ContentLayerType::kIconColorPrimary).',
  ' TODO (crbug/1521442): Test fails post-ChromeRefresh2023. Fix and re-enable.',
  " Tests that the header row ignores the notification's accent color when the\n" +
    ' flag is present. This includes the notification setting and dismiss buttons\n' +
    ' in the top right.',
  ' Tests that action buttons (e.g. the inline reply button) ignores the\n' +
    " notification's accent color when the flag is present."
]
notification_view_util.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
padded_button.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
proportional_image_view.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
relative_time_formatter.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Holds the UI string ids for a given time |range|.',
  ' Gets the relative time format closest but greater than |delta|.'
]
relative_time_formatter_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' In Android, DateUtils.YEAR_IN_MILLIS is 364 days (52 weeks * 7 days).'
]
caption_style.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
caption_style_win.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adds !important to all captions styles. They should always override any\n' +
    ' styles added by the video author or by a user stylesheet. This is because on\n' +
    ' Windows, there is an option to turn off captions styles, so any time the\n' +
    ' captions are on, the styles should take priority.',
  ' Translates a Windows::Media::ClosedCaptioning::ClosedCaptionStyle to a\n' +
    ' CSS FontFamily value.\n' +
    ' These fonts were chosen to satisfy the characteristics represented by values\n' +
    ' of ClosedCaptionStyle Enum in Windows Settings.',
  ' Translates a Windows::Media::ClosedCaptioning::ClosedCaptionEdgeEffect to a\n' +
    ' CSS style value.',
  ' Translates a Windows::Media::ClosedCaptioning::ClosedCaptionSize to a CSS\n' +
    ' style value.',
  ' Translates a Windows::Media::ClosedCaptioning::ClosedCaptionOpacity to an\n' +
    ' SkAlpha value.',
  ' Translates a Windows::Media::ClosedCaptioning::ClosedCaptionColor to an\n' +
    ' SkColor value.',
  ' Translates a Windows::Media::ClosedCaptioning::ClosedCaptionColor and a\n' +
    ' Windows::Media::ClosedCaptioning::ClosedCaptionOpacity to an RGBA CSS color\n' +
    ' string.'
]
caption_style_win_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test to ensure closed caption styling from system settings can be obtained\n' +
    ' (we obtain a CaptionStyle).'
]
common_theme.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_theme.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
native_theme_android.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These are the default dimensions of radio buttons and checkboxes on Android.',
  ' static',
  ' static'
]
native_theme_aura.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constants for painting overlay scrollbars. Other properties needed outside\n' +
    ' this painting code are defined in overlay_scrollbar_constants_aura.h.',
  ' 2 pixel border with 1 pixel center patch. The border is 2 pixels despite the\n' +
    ' stroke width being 1 so that the inner pixel can match the center tile\n' +
    ' color. This prevents color interpolation between the patches.',
  ' This radius let scrollbar arrows fit in the default rounded border of some\n' +
    ' form controls. TODO(crbug.com/40285711): We should probably let blink pass\n' +
    ' the actual border radii.',
  ' Killswitch for the changed behavior (only drawing rounded corner for form\n' +
    ' controls). Should remove after M120 ships.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeTheme:',
  ' static',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeThemeAura:',
  " We don't draw scrollbar buttons.",
  ' static'
]
native_theme_aura_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_theme_base.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' These are the default dimensions of radio buttons and checkboxes.',
  ' Color constant pairs for light/default and dark color-schemes below.',
  ' We are currently only painting kMenuPopupBackground with the kDefault\n' +
    ' scheme. If that changes, we need to replace gfx::kPlaceholderColor with an\n' +
    ' appropriate dark scheme color. See the DCHECK in PaintMenuPopupBackground().',
  ' The "dash" is 8x2 px by default (the checkbox is 13x13 px).',
  ' Default block size for progress is 16px and the track is 8px.',
  ' This value was created with the following steps:\n' +
    ' 1. Take the SkColors returned by GetControlColor for kAccent and\n' +
    '    kHoveredAccent.\n' +
    ' 2. use color_utils::SkColorToHSL to convert those colors to HSL.\n' +
    ' 3. Take the difference of the luminance component of the HSL between those\n' +
    '    two colors.\n' +
    ' 4. Round to the nearest two decimal points.\n' +
    ' This is used to emulate the changes in color used for hover and pressed\n' +
    ' states when a custom accent-color is used to draw form controls. It just so\n' +
    ' happens that the luminance difference is the same for hover and press, and it\n' +
    ' also happens that GetDarkModeControlColor has very close values when you run\n' +
    ' these steps, which makes it work well for forced color-scheme for contrast\n' +
    ' with certain accent-colors.',
  ' Get a color constant based on color-scheme\n' +
    ' TODO(crbug.com/40242489): Move colors defined above to the color pipeline and\n' +
    ' remove this function.',
  ' TODO(crbug.com/40118868): Revisit the macro expression once build flag switch\n' +
    ' of lacros-chrome is complete.',
  ' Draws the common elements of checkboxes and radio buttons.\n' +
    ' Returns the rectangle within which any additional decorations should be\n' +
    ' drawn, or empty if none.'
]
native_theme_features.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Enables or disables overlay scrollbars in Blink (i.e. web content) on Aura\n' +
    ' or Linux.  The status of native UI overlay scrollbars is determined in\n' +
    ' PlatformStyle::CreateScrollBar. Does nothing on Mac.',
  ' Fluent scrollbars aim to modernize the Chromium scrollbars (both overlay and\n' +
    ' non-overlay) to fit the Fluent design language. For now, the feature will\n' +
    ' only support the Windows and Linux platforms. The feature is currently in\n' +
    ' development and disabled by default.',
  ' Makes all native scrollbars behave as overlay scrollbars styled to fit the\n' +
    ' Fluent design language.\n' +
    ' TODO(crbug.com/40280779): Right now this feature flag will force Fluent\n' +
    ' overlay scrollbars on. We have yet to decide how we will expose this feature\n' +
    ' once it is complete.',
  ' Fluent scrollbars are only used for some OSes due to UI design guidelines.',
  ' Fluent scrollbars are only used for some OSes due to UI design guidelines.'
]
native_theme_fluent.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
native_theme_fluent_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verify the dimensions of an arrow rect with triangular arrows for a given\n' +
    ' button rect depending on the arrow direction and state.',
  ' Verify the dimensions of an arrow rect with arrow icons for a given\n' +
    ' button rect depending on the arrow direction and state.',
  ' Verify that the thumb paint function draws a round rectangle.\n' +
    ' Generally, NativeThemeFluent::Paint* functions are covered by\n' +
    " Blink's web tests; but in web tests we render the thumbs as squares\n" +
    " instead of pill-shaped. This test ensures we don't lose coverage on the\n" +
    ' PaintOp called to draw the thumb.',
  ' Verify that GetThumbColor returns the correct color given the scrollbar state\n' +
    ' and extra params.'
]
native_theme_observer.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_theme_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_theme_utils.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_theme_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' This was removed from Winvers.h but is still used.',
  ' Windows system color IDs cached and updated by the native theme.',
  '    <-a->\n' +
    ' [  *****             ]\n' +
    '  ____ |              |\n' +
    '  <-a-> <------b----->\n' +
    ' a: object_width\n' +
    ' b: frame_width\n' +
    ' *: animating object\n' +
    ' - the animation goes from "[" to "]" repeatedly.\n' +
    ' - the animation offset is at first "|"',
  ' Custom scoped object for storing DC and a bitmap that was selected into it,\n' +
    ' and making sure that they are deleted in the right order.',
  ' static',
  ' static',
  ' static',
  ' static'
]
native_theme_win_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scrollbar_animator_mac.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' ScrollbarAnimationTimerMac',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' OverlayScrollbarAnimatorMac'
]
scrollbar_animator_mac_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_native_theme.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
base_keyboard_hook.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bitmap_cursor.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
bitmap_cursor_factory.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bitmap_cursor_factory_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
egl_util.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
features.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Overlay delegation is required for delegated compositing.',
  ' This feature flag enables a mode where the wayland client would submit\n' +
    ' buffers at a scale of 1 and the server applies the respective scale transform\n' +
    ' to properly composite the buffers. This mode is used to support fractional\n' +
    ' scale factor.',
  ' Controls whether support for the fractional_scale_v1 protocol should be\n' +
    ' enabled.',
  ' Controls whether support for the xdg-toplevel-drag protocol should be\n' +
    ' enabled. On Lacros it will then be used even if the Exo-only extended-drag\n' +
    ' protocol is supported.',
  ' This debug/dev flag pretty-prints DRM modeset configuration logs for ease\n' +
    ' of reading. For more information, see: http://b/233006802',
  ' If enabled, Chromium will try to use the smallest valid size for the cursor\n' +
    ' plane that fits the cursor bitmap.'
]
gl_ozone_egl.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_surface_egl_readback.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
native_pixmap_egl_binding.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Reserve 0 for the invalid format specifier',
  ' static'
]
stub_client_native_pixmap_factory.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
stub_overlay_manager.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
stub_ozone_ui_controls_test_helper.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
demo_window.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_renderer.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ozone_demo.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
renderer_base.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
renderer_factory.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
simple_renderer_factory.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
skia_demo.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
skia_gl_renderer.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
skia_renderer_factory.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
skia_surfaceless_gl_renderer.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
software_renderer.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
surfaceless_gl_renderer.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
vulkan_overlay_renderer.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  " If we only submit one buffer, it'll never be released back to us for reuse."
]
vulkan_renderer.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_manager.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_pixmap_gl_binding_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40630408): Fix memory leaks in tests and re-enable on LSAN.'
]
client_native_pixmap_factory_cast.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Dummy ClientNativePixmap implementation for Cast ozone.\n' +
    ' Our NativePixmaps are just used to plumb an overlay frame through,\n' +
    ' so they get instantiated, but not used.'
]
gl_ozone_egl_cast.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Display resolution, set in browser process and passed by switches.'
]
gl_surface_cast.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Target fixed 30fps, or 60fps if doing triple-buffer 720p.\n' +
    ' TODO(halliwell): We might need to customize this value on various devices\n' +
    ' or make it dynamic that throttles framerate if device is overheating.'
]
overlay_manager_cast.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ozone_platform_cast.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ozone platform implementation for Cast.  Implements functionality\n' +
    ' common to all Cast implementations:\n' +
    '  - Always one window with window size equal to display size\n' +
    '  - No input, cursor support\n' +
    '  - Relinquish GPU resources flow for switching to external applications\n' +
    ' Meanwhile, platform-specific implementation details are abstracted out\n' +
    ' to the CastEglPlatform interface.'
]
platform_window_cast.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
surface_factory_cast.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
client_native_pixmap_factory_drm.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_util.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Returns a CRTC compatible with |connector| and not already used in |displays|\n' +
    " and the CRTC that's currently connected to the connector.\n" +
    ' If there are multiple compatible CRTCs, the one that supports the majority of\n' +
    ' planes will be returned as best CRTC.',
  ' Computes the refresh rate for the specific mode. If we have enough\n' +
    ' information use the mode timings to compute a more exact value otherwise\n' +
    " fallback to using the mode's vertical refresh rate (the kernel computes this\n" +
    ' the same way, however there is a loss in precision since |vrefresh| is sent\n' +
    ' as an integer).',
  " Read a file and trim whitespace. If the file can't be read, returns\n" +
    ' nullopt.',
  ' Sort modes in |modes_in_out| from largest to smallest as defined by\n' +
    ' DisplayMode::operator>().',
  ' Given all |tiled_infos| belonging to the same display, select the "primary"\n' +
    ' tile that will represent all the tiles. Primary tile is the only active tile\n' +
    ' if the display is configured with a non-tile mode.',
  " Prune all tile modes in |primary_tile_modes_in_out| that doesn't show up in\n" +
    ' all other tiles in the tiled display.',
  ' Prune all tile modes in |modes_in_out| if all tiles in a display are not\n' +
    ' connected to prevent the display from having blank tiles.',
  ' Replaces all tile modes with the full tile composited mode.\n' +
    ' Note that individual tiles in a tiled display advertise modes with size of\n' +
    ' the tile instead of the full display.',
  ' Returns a vector that holds the path topology of the display. Returns an\n' +
    ' empty vector upon failure.\n' +
    ' A path topology c-string is of the format:\n' +
    '    mst:{DRM_BASE_CONNECTOR_ID#}-{BRANCH_1_PORT#}-...-{BRANCH_N_PORT#}\\0\n' +
    ' For example, the display configuration:\n' +
    '    Device <--conn6-- MST1 <--port2-- MST2 <--port1-- Display\n' +
    ' may produce the following topology c-string:\n' +
    '     "mst:6-2-1"\n' +
    ' To see how this string is constructed in the DRM:\n' +
    ' https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/drivers/gpu/drm/drm_dp_mst_topology.c?h=v5.10-rc3#n2229',
  ' Parses tiled display properties from the TILE connector property\n' +
    ' |tile_blob|. TileProperty::scale_to_fit_display is not populated here as this\n' +
    ' information is not available in the TILE blob. Tile property blob is encoded\n' +
    ' as:\n' +
    ' "group_id:tile_is_single_monitor:num_h_tile:num_v_tile:tile_h_loc:tile_v_loc\n' +
    '  :tile_h_size:tile_v_size"\n' +
    ' e.g. 313a313a323a313a303a303a323536303a3238383000 == 1:1:2:1:0:0:2560:2880\n' +
    ' tile_is_single_monitor is not used as all tiles in a single group are to be\n' +
    ' treated as a single monitor for simplicity.'
]
drm_util_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
drm_wrapper.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' * CRTCs',
  ' * Capabilities',
  ' * Connectors',
  ' * Cursor',
  ' * DRM Master',
  ' * Dumb Buffers',
  ' * Encoders',
  ' * Framebuffers',
  ' * Gamma',
  ' * Planes',
  ' * Properties',
  ' * Property Blobs',
  ' TODO(markyacoub): the flag requires being merged to libdrm then backported to\n' +
    ' CrOS. Remove the #if once that happens.',
  ' * Resources',
  ' * Utility',
  ' Protected'
]
hardware_display_controller_info.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
hardware_display_controller_info_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Sample EDID data extracted from real devices.'
]
scoped_drm_types.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
crtc_commit_request.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
crtc_controller.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_device.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
drm_device_generator.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_device_manager.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_display.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  " When reading DRM state always check that it's still valid. Any sort of events\n" +
    ' (such as disconnects) may invalidate the state.'
]
drm_display_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' TODO(b/364634013): Create a test util file for ozone/drm and de-deuplicate\n' +
    ' EqTileProperty().'
]
drm_dumb_buffer.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_framebuffer.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  " Some Display Controllers (e.g. Intel Gen 9.5) don't support AR/B30\n" +
    ' framebuffers, only XR/B30; this function indicates if an opaque format should\n' +
    ' be used instead of the non-opaque |buffer_format| for AddFramebuffer2().',
  ' static',
  ' static'
]
drm_gpu_display_manager.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A list of property names that are blocked from issuing a full display\n' +
    ' configuration (modeset) via a udev display CHANGE event.',
  ' These values are persisted to logs. Entries should not be renumbered and\n' +
    ' numeric values should never be reused.',
  ' Finds all modes from |modes| that match the size and timing specified by\n' +
    ' |request_mode| and returns a vector of pointers thereto.',
  ' Finds and returns the drm mode from |display| matching |request_mode| except\n' +
    ' with the closest (or greater) refresh rate, or nullptr if no such mode\n' +
    ' exists. If |is_seamless| is set, only modes which pass seamless verification\n' +
    ' will be considered.',
  ' TODO: b/327015722 - Move test modeset fallback with alternate CRTCs\n' +
    ' from DrmGpuDisplayManager to ScreenManager.\n' +
    ' The kernel can sometimes silently reallocate the resources of one CRTC to\n' +
    " another, making the other ineffective. One such case is when i915's Bigjoiner\n" +
    ' takes the underlying pipe of a secondary CRTC for high bandwidth displays\n' +
    ' (DP 2.1+). Attempting modeset with a stolen CRTC will result in failure. The\n' +
    ' only way for userspace to overcome a stolen CRTC is to dynamically assign\n' +
    ' other CRTC configurations via test modesets.'
]
drm_gpu_display_manager_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' HP z32x monitor.',
  ' An EDID that can be found on an internal panel.',
  ' Serial number is unavailable. Omitted from bytes 12-15 of block zero and SN\n' +
    ' descriptor (tag: 0xff). Displays like this will produce colliding EDID-based\n' +
    ' display IDs.',
  ' arg: drmModeAtomicReq*, pairings: CrtcConnectorPairs',
  ' Verifies that two vectors contain equal requests, excluding certain\n' +
    ' properties that are permitted to change during a configuration. Assumes that\n' +
    " the vectors maintain the same ordering w.r.t. the requests' `id` properties.",
  ' This case tests scenarios in which a display ID is searched across multiple\n' +
    ' DRM devices, such as in DisplayLink hubs.',
  ' DrmGpuDisplayManagerGetSeamlessRefreshRateTest is a test fixture for tests\n' +
    ' related to testing seamless refresh rates.'
]
drm_gpu_util.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Recursively build out all possible permutations of CRTC-connector pairings\n' +
    ' given a set of connectors and their possible CRTCs. Each CRTC/connector can\n' +
    ' only be used once per permutation (CrtcConnectorPairs).\n' +
    ' |connectors_it| is an iterator of |connectors| that tracks which connector\n' +
    ' has been used (connector left of |connectors_it|). Passing around\n' +
    ' |connectors_it| is safe due to the constness of |connectors|.\n' +
    ' |crtcs_used_in_current_permutation| tracks if a CRTC has already been used as\n' +
    ' part of the current permutation.\n' +
    ' For example:\n' +
    '   Connector A can have CRTCs 1, 2, 3\n' +
    '   Connector B can have CRTCs 2, 3\n' +
    '   Connector C can have CRTCs 1, 3\n' +
    ' Returned pairings would be:\n' +
    '   {{A, 1}, {B, 2}, {C, 3}},\n' +
    '   {{A, 2}, {B, 1}, {C, 3}},\n' +
    '   {{A, 3}, {B, 2}, {C, 1}}\n' +
    ' But not {{A, 1}, {B, 3}, {C, nothing}} as connector C must also be assigned\n' +
    ' to a valid CRTC and permutations like this are discarded.',
  ' Constants for parsing CTM values.'
]
drm_gpu_util_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(b/322831691): Deterministic failure.',
  ' GetAllCrtcConnectorPermutations() should filter out permutations where not\n' +
    ' all connectors are assigned a CRTC (But the inverse of not all CRTCs being\n' +
    ' assigned connectors is OK).'
]
drm_overlay_candidates.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_overlay_manager.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The amount of time during which the manager cannot skip drm testing of\n' +
    ' fullscreen overlays if overlay swap failure handling is enabled.',
  ' Maximum number of overlay configurations to keep in MRU cache.',
  ' How many times an overlay configuration needs to be requested before sending\n' +
    ' a query to display controller to see if the request will work. The overlay\n' +
    ' configuration will be rejected until a query is sent and response received.',
  ' Returns |candidates| but with all NativePixmap pointers removed in order to\n' +
    ' avoid keeping them alive.'
]
drm_overlay_manager_gpu.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_overlay_manager_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that the crop rect changing will make a new request.',
  ' Verifies that the |TestDrmOverlayManager| uses fast path for fullscreen\n' +
    ' overlays. That is, if |handle_overlays_swap_failure| is enabled, it marks\n' +
    ' fullscreen overlays as suitable candidates, but once it gets a swap failure\n' +
    ' notification, it fallbacks to drm testing.'
]
drm_overlay_plane.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
drm_overlay_validator.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_overlay_validator_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mode of size 12x8.',
  ' This test verifies that the Ozone/DRM implementation does not reject overlay\n' +
    ' candidates purely on the basis of having non-integer bounds. Instead, they\n' +
    ' should be rounded to the nearest integer.'
]
drm_thread.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' For standard Linux/system libgbm'
]
drm_thread_proxy.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_thread_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verifies that we gracefully handle the case where CheckOverlayCapabilities()\n' +
    ' is called on a destroyed window.'
]
drm_window.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_window_proxy.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_window_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mode of size 6x4.'
]
fake_drm_device.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Seamless modeset is defined by the lack of DRM_MODE_ATOMIC_ALLOW_MODESET.\n' +
    ' This also happens to be the same set of flags as would be used for a\n' +
    ' pageflip, or other atomic property changes that do not require modesetting.',
  ' The const version of FindObjectById().',
  ' TODO(dnicoara): Generate all IDs internal to FakeDrmDevice.\n' +
    ' For now generate something with a high enough ID to be unique in tests.'
]
fake_drm_device_generator.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gbm_overlay_surface.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gbm_pixmap.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gbm_surface_factory.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gbm_surfaceless.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hardware_display_controller.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hardware_display_controller_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Create a basic mode for a 6x4 screen.',
  ' TODO(b/364634013): Create a test util file for ozone/drm and de-deuplicate\n' +
    ' EqTileProperty().'
]
hardware_display_plane.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
hardware_display_plane_atomic.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Rotations are dependent on modifiers. Tiled formats can be rotated,\n' +
    ' linear formats cannot. Atomic tests currently ignore modifiers, so there\n' +
    " isn't a way of determining if the rotation is supported.\n" +
    ' TODO(https://b/172210707): Atomic tests should work if we are using\n' +
    ' the original buffers as they have the correct modifiers. See\n' +
    " kUseRealBuffersForPageFlipTest and the 'GetBufferForPageFlipTest' function.\n" +
    ' Intel driver reference on rotated and flipped buffers with modifiers:\n' +
    ' https://code.woboq.org/linux/linux/drivers/gpu/drm/i915/intel_sprite.c.html#1471'
]
hardware_display_plane_manager.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.'
]
hardware_display_plane_manager_atomic.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  " Resets |plane|'s properties if it is not found in any\n" +
    ' HardwareDisplayPlaneList::plane_list of |plane_lists|, as it is not currently\n' +
    ' being used. Returns true if the properties were reset.'
]
hardware_display_plane_manager_legacy.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  " We currently wait for the fences serially, but it's possible\n" +
    ' that merging the fences and waiting on the merged fence fd\n' +
    ' is more efficient. We should revisit once we have more info.'
]
hardware_display_plane_manager_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' TODO(crbug.com/40945652): These tests should not use a single-point\n' +
    ' curve as the non-empty value (it is arguably not a valid input).',
  ' Create a basic mode for a 6x4 screen.',
  ' The effect of color temperature adjustment (night light) on the CTM.',
  ' The effect of gamma adjustment on the CTM.',
  ' The effect of color conversion (from input plane space to output space) on\n' +
    ' the CTM.',
  ' The combined effects of color conversion, color temperature adjustment, and\n' +
    ' gamma adjustment, on the CTM.',
  ' Verifies that formats with 2 bits of alpha decay to opaques for AddFB2().',
  ' TODO(dnicoara): Migrate as many tests as possible to the general list above.'
]
inter_thread_messaging_proxy.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_drm_device.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
mock_drm_modifiers_filter.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
page_flip_request.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
page_flip_watchdog.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
proxy_helpers.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
proxy_helpers_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
screen_manager.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copies the contents of the saved framebuffer from the CRTCs in |controller|\n' +
    ' to the surface for the new modeset buffer |surface|.',
  ' Returns a JSON-format log for a DRM configuration request represented by\n' +
    ' `controllers_params`. Note that this function assumes that all controllers in\n' +
    ' `controllers_params` are a part of the same DRM device.'
]
screen_manager_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Create a basic mode for a 6x4 screen.',
  ' TODO(b/364634013): Create a test util file for ozone/drm and de-deuplicate\n' +
    ' EqTileProperty().',
  " Make sure we're using each display's mode when doing mirror mode otherwise\n" +
    ' the timings may be off.',
  ' Tests that two devices that may share the same object IDs are\n' +
    ' treated independently.',
  ' See crbug.com/868010',
  ' crbug.com/888553',
  ' TODO(b/322831691): Deterministic failure.'
]
vulkan_implementation_gbm.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_cursor.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Lock-testing helpers.'
]
drm_device_connector.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_display_host.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_display_host_manager.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Sleep this many milliseconds before retrying after authentication fails.',
  ' Log a warning after failing to authenticate for this many milliseconds.',
  ' Find sysfs device path for the given device path.'
]
drm_native_display_delegate.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_window_host.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_window_host_manager.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
host_cursor_proxy.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' We assume that this is invoked only on the Mus/UI thread.'
]
host_drm_device.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Services needed for DrmDisplayHostMananger.'
]
ozone_platform_drm.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
integration_test_helpers.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_controls_system_input_injector.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An implementation of UIControlsAura injecting evdev level inputs.'
]
vkms_tests.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
client_native_pixmap_factory_flatland.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
flatland_connection.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
flatland_connection_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Fixture to exercise Present() logic in FlatlandConnection.'
]
flatland_gpu_host.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
flatland_gpu_service.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
flatland_screen.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40194936): Integrate with platform APIs for screen enumeration\n' +
    ' and management, when available.'
]
flatland_surface.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A struct containing Flatland properties for an associated overlay transform.\n' +
    ' See |OverlayTransformToFlatlandProperties|.',
  ' Converts the overlay transform to the associated Flatland properties. For\n' +
    ' rotation, converts OverlayTransform enum to angle in radians. Since rotation\n' +
    ' occurs around the top-left corner, also returns the associated translation to\n' +
    ' recenter the overlay.',
  ' Converts a gfx size to the associated Fuchsia size, and accounts for any\n' +
    ' rotation that may be specified in the plane transform (if specified).'
]
flatland_surface_canvas.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' How long we want to wait for release-fence from scenic for previous frames.'
]
flatland_surface_canvas_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
flatland_surface_factory.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
flatland_surface_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The parameters for an overlay transform test are:\n' +
    ' - The input overlay transform.\n' +
    ' - The expected Flatland Transform orientation.\n' +
    ' - The expected Flatland image flip.\n' +
    ' - The expected Flatland Transform translation.\n' +
    ' - The expected destination image size.'
]
flatland_sysmem_buffer_collection.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
flatland_sysmem_buffer_manager.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
flatland_sysmem_native_pixmap.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
flatland_window.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Converts and scales Scenic's rect-based representation of insets to\n" +
    ' gfx::Insets. Returns zero-width insets if |view_inset| information was not\n' +
    ' provided in the |GetLayout()| call.'
]
flatland_window_manager.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
flatland_window_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that FlatlandWindow processes and delegates focus signal.',
  ' Verify that surface is cleared when the window is disconnected from the\n' +
    ' display.',
  ' Verify that when surface is attached, a hit region accompanies the surface.',
  ' Tests whether view insets are properly set in |FlatlandWindow|.'
]
overlay_manager_flatland.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ozone_platform_flatland.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' OzonePlatform for Flatland.'
]
vulkan_implementation_flatland.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
client_native_pixmap_factory_headless.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
headless_screen.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ozone/headless display defaults.',
  ' Parse comma-separated screen width and height.'
]
headless_surface_factory.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(altimin): Find a proper way to capture rendering output.'
]
headless_window.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
headless_window_manager.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ozone_platform_headless.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A headless implementation of PlatformEventSource that we can instantiate to\n' +
    ' make\n' +
    ' sure that the PlatformEventSource has an instance while in unit tests.',
  ' OzonePlatform for headless mode',
  ' Desktop Linux, not CastOS.'
]
vulkan_implementation_headless.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vulkan_surface_headless.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
client_native_pixmap_factory_wayland.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_object.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The overwhelming majority of Wayland interfaces follow the fixed pattern for\n' +
    ' naming their interface definition struct and their deleter function, with the\n' +
    ' exception for a few interfaces that use special deleter functions.  This lets\n' +
    ' us generate a lot of boilerplate code by two simple macros defined below.',
  ' For convenience, keep aphabetical order in this list.'
]
wayland_overlay_config.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_util.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
wayland_util_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_input_emulate.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(b/302179948) Increment version once server change hits beta.\n' +
    ' send_key_events() is only available since version 2.',
  ' static',
  ' static',
  ' static',
  ' static'
]
wayland_buffer_fuzzer.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This fuzzer tests browser-side implementation of\n' +
    ' ozone::mojom::WaylandConnection.',
  ' Copied from ui/ozone/test/mock_platform_window_delegate.h to avoid\n' +
    ' dependency from the whole library (it causes link problems).'
]
drm_render_node_handle.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_render_node_path_finder.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Drm render node path template.',
  ' Number of files to look for when discovering DRM devices.'
]
gbm_pixmap_wayland.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gbm_surfaceless_wayland.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A test run showed only 9 inflight solid color buffers at the same time. Thus,\n' +
    ' allow to store max 12 buffers (including some margin) of solid color buffers\n' +
    ' and remove the rest.'
]
gl_surface_egl_readback_wayland.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_surface_wayland.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vulkan_implementation_wayland.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_buffer_manager_gpu.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_canvas_surface.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The maximum number of buffers we allow to be created.'
]
wayland_gl_egl_utility.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " From ANGLE's egl/eglext.h. Follows the same approach as in\n" +
    ' ui/gl/gl_surface_egl.cc'
]
wayland_overlay_candidates.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_overlay_manager.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_overlay_manager_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
wayland_surface_factory.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_surface_factory_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Holds a NativePixmap used for scheduling overlay planes. It must become busy\n' +
    ' when scheduled and be associated with the swap id to track correct order of\n' +
    ' swaps and releases of the image.\n' +
    ' TODO(rjkroege): Consider putting extra state inside a test NativePixmap\n' +
    ' implementation instead of a wrapper class.',
  ' Helper that helps to identify the last swap id. Also sets gl image associated\n' +
    ' with that swap as free.',
  ' Checks that buffer swap ack is called only after Wayland calls OnSubmission.',
  ' Checks that buffer swap ack for an invalid frame is called after the previous\n' +
    ' valid frames receive their OnSubmission calls.',
  ' Check OnSubmission is called on resize.'
]
fractional_scale_manager.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
gtk_primary_selection_device.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
gtk_primary_selection_device_manager.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
gtk_primary_selection_offer.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
gtk_shell1.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' gtk_shell1 exposes request_focus() since version 3.  Below that, it is not\n' +
    ' interesting for us, although it provides some shell integration that might be\n' +
    ' useful.',
  ' static',
  ' static'
]
gtk_surface1.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
linux_ui_delegate_wayland.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
org_gnome_mutter_idle_monitor.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' After the system has gone idle, the D-Bus service will wait for this time\n' +
    ' before notifying us.  This reduces "jitter" of the idle/active state, but\n' +
    ' also adds some lag in responsiveness: when we are finally notified that the\n' +
    ' idle state has come, it is already there for kIdleThresholdMs milliseconds.'
]
org_kde_kwin_idle.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' After the system has gone idle, it will wait for this time before notifying\n' +
    ' us.  This reduces "jitter" of the idle/active state, but also adds some lag\n' +
    ' in responsiveness: when we are finally notified that the idle state has come,\n' +
    ' it is already there for kIdleThresholdMs milliseconds.',
  ' Wraps the actual handling of system notifications about the idle state.',
  ' static',
  ' static',
  ' static',
  ' static'
]
overlay_prioritizer.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
wayland_proxy.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
wayland_proxy_impl.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
shell_object_factory.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
shell_popup_wrapper.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
shell_surface_wrapper.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
shell_toplevel_wrapper.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
single_pixel_buffer.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
surface_augmenter.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The minimum version for `augmented_surface_set_rounded_corners_clip_bounds`\n' +
    ' with a local coordinates bounds.',
  ' The minimum version for augmented_surface to be compositing-only is 1 above\n' +
    ' the version that introduced SET_FRAME_TRACE_ID because there was no new\n' +
    ' interface added in that version uprev.',
  ' static',
  ' static'
]
toplevel_icon_manager.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
wayland_async_cursor.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
wayland_bubble.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_buffer_backing.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_buffer_backing_dmabuf.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_buffer_backing_shm.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_buffer_backing_single_pixel.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_buffer_backing_solid_color.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_buffer_factory.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_buffer_handle.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
wayland_buffer_manager_connector.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_buffer_manager_host.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
wayland_clipboard.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Internal Wayland Clipboard interface. A wl::Clipboard implementation handles\n' +
    ' a single ui::ClipboardBuffer. With this common interface it is possible to\n' +
    ' seamlessly support different clipboard buffers backed by different underlying\n' +
    ' Wayland protocol objects.',
  ' Templated wl::Clipboard implementation. Whereas DataSource is the data source\n' +
    ' class capable of creating data offers upon clipboard writes and communicates\n' +
    ' events through DataSource::Delegate, and DataDevice is its device counterpart\n' +
    ' providing read and write access to the underlying data selection-related\n' +
    ' protocol objects. See *_data_{source,device}.h for more details.'
]
wayland_clipboard_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' This must be called on the server thread.',
  ' This must be called on the server thread.',
  ' Verifies that copy-to-clipboard works as expected. Actual Wayland input\n' +
    ' events are used in order to exercise all the components involved, e.g:\n' +
    ' Wayland{Pointer,Keyboard,Touch}, Serial tracker and WaylandClipboard.\n' +
    ' Regression test for https://crbug.com/1282220.\n' +
    ' TODO(crbug.com/41495216): Flaky test.',
  ' Regression test for crbug.com/1183939. Ensures unicode mime types take\n' +
    ' priority over text/plain when reading text.',
  ' Ensures WaylandClipboard correctly handles overlapping read requests for\n' +
    ' different clipboard buffers.',
  ' Ensures clipboard change callback is fired only once per read/write.',
  ' Verifies clipboard calls targeting primary selection buffer no-op and run\n' +
    ' gracefully when no primary selection protocol is available.',
  ' Makes sure overlapping read requests for the same clipboard buffer are\n' +
    ' properly handled.\n' +
    ' TODO(crbug.com/40398800): Re-enable once Clipboard API becomes async.'
]
wayland_connection.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The maximum supported versions for a given interface.\n' +
    ' The version bound will be the minimum of the value and the version\n' +
    ' advertised by the server.',
  ' static',
  ' static',
  ' static',
  ' static'
]
wayland_connection_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_cursor.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
wayland_cursor_factory.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The threshold for rounding down the final scale of the cursor image\n' +
    ' that gets sent to the Wayland compositor. For instance, if the\n' +
    " original cursor image scale is 1.2, we'll downscale it to 1.0. On\n" +
    " the other hand, if it's something like 1.5 then we'll upscale it to 2.0."
]
wayland_cursor_factory_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Overrides WaylandCursorFactory::GetCursorFromTheme() to pretend that cursors\n' +
    ' are really loaded.\n' +
    ' Note: the parent class does real Wayland calls that try to load the theme.\n' +
    ' That may succeed or fail on the bot, but as GetCursorTheme() is overridden,\n' +
    ' we ignore the result.',
  ' Tests that the factory holds the cursor theme until a buffer taken from it\n' +
    ' released.',
  ' Tests that the factory keeps the caches when either cursor size or buffer\n' +
    ' scale are changed, and only resets them when the theme is changed.'
]
wayland_cursor_position.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_cursor_shape.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
wayland_data_device.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
wayland_data_device_base.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_data_device_manager.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
wayland_data_drag_controller.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Sessions initiated from Chromium, will have |data_source_| set. In which\n' +
    ' case, |offered_exchange_data_provider_| is expected to be non-null as well.',
  ' TODO(crbug.com/329479345): Drop DragResult in favor of intermediary states\n' +
    ' `kDropping` and `kCancelling`, move `Reset` back into this function, called\n' +
    ' conditionally depending on the state it would be transitioning to.',
  '  Data fetch task runner is lazily initialized so unrelated test suites\n' +
    '  (without ThreadPool available) do not fail.\n' +
    '  TODO(b/328574254): Move to constructor once the offending test suites\n' +
    '  provide a suitable task environment.'
]
wayland_data_drag_controller_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Ensures data drag controller properly offers dragged data with custom\n' +
    ' formats. Regression test for a bunch of bugs, such as:\n' +
    '  - https://crbug.com/1236708\n' +
    '  - https://crbug.com/1207607\n' +
    '  - https://crbug.com/1247063',
  ' Cancels a DnD session that we initiated while the cursor is over our window.',
  ' Cancels a DnD session that we initiated while the cursor is outside of our\n' +
    ' window.',
  ' Cancels an incoming DnD session on the client-side.\n' +
    ' Regression test for https://crbug.com/336706549.',
  ' Emulating an incoming DnD session, ensures that data drag controller\n' +
    ' fetches all the data for the mime-types offered by the source client.',
  ' Tests URI validation for text/uri-list MIME type.  Log warnings rendered in\n' +
    ' the console when this test is running are the expected and valid side effect.',
  ' Tests URI validation for text/x-moz-url MIME type.  Log warnings rendered in\n' +
    ' the console when this test is running are the expected and valid side effect.',
  ' Verifies the correct delegate functions are called when a drag session is\n' +
    ' started and cancelled within the same surface.',
  ' Verifies entered surface destruction is properly handled.\n' +
    ' Regression test for https://crbug.com/1143707.',
  ' Verifies that early origin surface destruction is properly handled.\n' +
    ' Regression test for https://crbug.com/1143707.',
  ' Ensures drag/drop events are properly propagated to non-toplevel windows.',
  ' Ensures that requests to create a |PlatformWindowType::kPopup| during drag\n' +
    ' sessions return wl_subsurface-backed windows.',
  ' Ensures that requests to create a |PlatformWindowType::kMenu| during drag\n' +
    ' sessions return xdg_popup-backed windows.',
  ' Regression test for https://crbug.com/1209269.\n' +
    ' Emulates "quick" wl_pointer.button release events being sent by the\n' +
    ' compositor, and processed by the ozone/wayland either (1) before or (2) just\n' +
    ' after WaylandWindow::StartDrag is called. The drag start happens in\n' +
    ' response to sequence of input events. Such event processing may take some\n' +
    ' time, for example, when they happen in web contents, which involves async\n' +
    ' browser <=> renderer IPC, etc. In both cases, drag controller is expected to\n' +
    ' gracefully reset state and quit drag loop as if the drag session was\n' +
    ' cancelled as usual.',
  ' Regression test for https://crbug.com/1175083.',
  ' Check drag session is correctly started when there are both mouse button and\n' +
    ' a touch point pressed.',
  ' With an incoming DnD session, this ensures that data drag controller\n' +
    ' gracefully handles drop events received while the data fetching is still\n' +
    ' unfinished. Regression test for https://crbug.com/1400872.',
  ' Regression test for https://crbug.com/1405176.',
  ' Emulate an incoming DnD session, testing that data drag controller gracefully\n' +
    ' handles entered window destruction happening while the data fetching is still\n' +
    ' unfinished. Regression test for https://crbug.com/1400872.\n' +
    ' TODO(b/324541578): Fix threading-related flakiness and re-enabled.',
  ' Emulate an incoming DnD session and verifies that data drag controller aborts\n' +
    ' data fetching, if needed, upon wl_data_device.leave.',
  ' Cursor position should be updated during a (outgoing) drag with mouse.',
  ' Cursor position should not be updated during a (outgoing) drag with touch.',
  ' Regression test for https://crbug.com/336449364.'
]
wayland_data_offer.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
wayland_data_offer_base.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_data_source.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Writes |data_str| to file descriptor |fd| assuming it is flagged as\n' +
    ' O_NONBLOCK, which implies in handling EAGAIN, besides EINTR. Returns true\n' +
    ' iff data is fully written to the given file descriptor. See the link below\n' +
    " for more details about non-blocking behavior for 'write' syscall.\n" +
    ' https://pubs.opengroup.org/onlinepubs/007904975/functions/write.html',
  ' static',
  '////////////////////////////////////////////////////////////////////////////\n' +
    ' wl_data_source specializations and instantiation\n' +
    '////////////////////////////////////////////////////////////////////////////',
  '////////////////////////////////////////////////////////////////////////////\n' +
    ' gtk_primary_selection_source specializations and instantiation\n' +
    '////////////////////////////////////////////////////////////////////////////'
]
wayland_drm.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
wayland_event_source.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Number of fingers for scroll gestures.',
  ' Maximum size of the latest pointer scroll data set to be stored.',
  ' Maximum time delta between last scroll event and lifting of fingers.',
  ' WaylandEventSource::PointerScrollData implementation',
  ' WaylandEventSource::FrameData implementation',
  ' WaylandEventSource implementation',
  ' static',
  ' Focus must not be unset if there is another touch point within |window|.',
  ' This method behaves differently in Exo than in other window managers.\n' +
    ' If you place a finger on the touchpad, Exo dispatches axis events with an\n' +
    ' offset of 0 to indicate that a fling should be aborted. This event does not\n' +
    ' exist in Linux window managers. Instead, some window managers implement\n' +
    " zwp_pointer_gesture_hold_v1 for this. However, for those who don't implement\n" +
    ' that, it needs to be ensured that flings are aborted when new axis events\n' +
    ' arrive.'
]
wayland_event_source_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verify WaylandEventSource properly manages its internal state as pointer\n' +
    ' button events are sent. More specifically - pointer flags.',
  ' Verify WaylandEventSource properly manages its internal state as pointer\n' +
    ' button events are sent. More specifically - pointer flags.',
  ' Verify WaylandEventSource ignores release events for mouse buttons that\n' +
    " aren't pressed. Regression test for crbug.com/1376393."
]
wayland_event_watcher_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that various types of critical errors result in correct crash keys.\n' +
    ' Posting the error terminates the client-server connection.  Further attempts\n' +
    ' to sync will hang.  That is why we run "bare" lambdas in all tests of this\n' +
    ' suite instead of using `PostToServerAndWait()`: that helper syncs the\n' +
    ' connection after running the server task.  Due to the same reason we disable\n' +
    ' the sync on the test tear down.  To ensure that the error message is caught\n' +
    ' by the crash reporter, we wait until idle in the end of each test before\n' +
    ' checking the crash key value.'
]
wayland_exchange_data_provider.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns name parameter in application/octet-stream;name=<...>, or empty\n' +
    ' string if parsing fails.',
  ' Converts mime type string to OSExchangeData::Format, if supported, otherwise\n' +
    ' 0 is returned.',
  ' Converts raw data to either narrow or wide string.',
  ' Parses |data| as if it had text/uri-list format.  Its brief spec is:\n' +
    " 1.  Any lines beginning with the '#' character are comment lines.\n" +
    ' 2.  Non-comment lines shall be URIs (URNs or URLs).\n' +
    ' 3.  Lines are terminated with a CRLF pair.\n' +
    ' 4.  URL encoding is used.',
  ' Parses |data| as if it had text/x-moz-url format, which is basically\n' +
    ' two lines separated with newline, where the first line is the URL and\n' +
    ' the second one is page title.  The unpleasant feature of text/x-moz-url is\n' +
    ' that the URL has UTF-16 encoding.',
  ' Parses |data| as if it was an encoded custom mime type DataTransferEndpoint.\n' +
    ' Used to synchronize the drag source metadata between Ash and Lacros.',
  ' TODO(crbug.com/40192823): Support custom formats/pickled data.',
  ' TODO(crbug.com/40192823): Support custom formats/pickled data.'
]
wayland_exchange_data_provider_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Regression test for https://crbug.com/1284996.'
]
wayland_frame_manager.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
wayland_input_controller.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_input_method_context.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Only enable the preedit string for sequence mode (i.e. when using dead keys\n' +
    ' or the Compose key) on Linux ozone/wayland (see b/220370007).',
  ' Returns the biggest range that is included in the |range|,\n' +
    ' but whose start/end points are at the UTF-8 boundary.\n' +
    ' If the given range is bigger than the given text_utf8,\n' +
    ' it will be trimmed to the text_utf8 size.',
  ' Trims surrounding text for standard text_input. There is the limit of length\n' +
    ' of the surrounding text, which is 4000 bytes. This gives it a try to keep\n' +
    ' the surrounding text around the selection with respecting UTF-8 boundary.\n' +
    ' Returns the trimmed string and UTF-8 offset.',
  ' TODO(crbug.com/40251329): Add TrimSurroundingTextForExtension.'
]
wayland_input_method_context_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the number of grapheme clusters in the text.',
  ' TODO(crbug.com/40240866): Subclass FakeTextInputClient after pruning deps.',
  ' TODO(crbug.com/354862211): This test is Lacros-specific and should be\n' +
    ' removed. It fails without Lacros-specific patches to libwayland, which\n' +
    " shouldn't be applied when updating to a new Wayland of version as Lacros is\n" +
    ' being sunset.',
  ' Regression test for crbug.com/40263583',
  ' The range is represented in UTF-16 code points, so it is independent from\n' +
    ' grapheme clusters.',
  ' For use in tests that simply test the WaylandInputMethodContext in isolation\n' +
    ' without using a real v1/v3 wrapper.'
]
wayland_keyboard.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Two different behaviors are currently implemented for KeyboardLock support\n' +
    ' on Wayland:\n' +
    ' 1. On Lacros, shortcuts are kept inhibited since the window initialization.\n' +
    ' Such approach relies on the Exo-specific zcr-keyboard-extension protocol\n' +
    ' extension, which allows Lacros (ozone/wayland based) to report back to the\n' +
    ' Wayland compositor that a given key was not processed by the client, giving\n' +
    ' it a chance of processing global shortcuts (even with a shortcuts inhibitor\n' +
    ' in place), which is not currently possible with standard Wayland protocol\n' +
    ' and extensions. That is also required to keep Lacros behaving just like Ash\n' +
    " Chrome's classic browser.\n" +
    ' 2. Otherwise, keyboard shortcuts will be inhibited only when in fullscreen\n' +
    ' and when a WaylandKeyboardHook is in place for a given widget. See\n' +
    ' KeyboardLock spec for more details: https://wicg.github.io/keyboard-lock\n' +
    ' TODO(crbug.com/40229635): Revisit once this scenario changes.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
wayland_keyboard_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This test verifies the following scenario:\n' +
    ' 1/ press and hold a modifier key (in this case SHIFT, ALT, CTRL);\n' +
    ' 2/ ensure that no auto-repeat gets triggered;\n' +
    ' 3/ with the modifier key still pressed, press another\n' +
    "    key (in this case 'a');\n" +
    ' 4/ ensure that they auto-repeat logic gets started and\n' +
    '    the modifier key is properly handled as part of the\n' +
    '    event construction.'
]
wayland_menu_utils.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_output.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
wayland_output_manager.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Output is considered ready when at least one wl_output is fully configured\n' +
    ' (i.e: wl_output::done received), so that WaylandOutputManager is able to\n' +
    ' instantiate a valid WaylandScreen when requested by the upper layer.'
]
wayland_output_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that name and description fall back to ones in the WaylandOutput if\n' +
    ' XDGOutput is not created.',
  ' Test that if using xdg output (and supports_viewporter_surface_scaling is\n' +
    ' enabled) the scale factor is calculated as the ratio of physical size to\n' +
    ' logical size as long as it is more than 1, otherwise it is set to 1.',
  ' Test scale factor falls back to wl_output::scale instead of being calculated\n' +
    ' as the ratio of physical size to logical size when xdg_output is not ready or\n' +
    ' if supports_viewporter_surface_scaling is disabled.',
  ' Test that if using xdg output and viewporter surface scaling is enabled\n' +
    " the scale factor calculation based on xdg-output's logical size is no-op when\n" +
    ' physical and logical sizes are equal.\n' +
    ' Regression test for https://crbug.com/339681887.'
]
wayland_pointer.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40235357): Remove this method when Compositors other\n' +
    ' than Exo comply with `wl_pointer.frame`.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' ---- Version 5 ----',
  ' static',
  ' static',
  ' static',
  ' static',
  ' --- Version 8 ---',
  ' static',
  ' static',
  ' static',
  ' static',
  ' Enter/Leave events cause undesirable tab detaches in window dragging\n' +
    ' sessions. At least KWin and Mutter are known to send leave/enter events\n' +
    ' before the events currently used by the window drag controller to detect\n' +
    ' drop, see the crbug linked below for more details.\n' +
    ' TODO(crbug.com/329479345): Move this suppression logic to drag controller\n' +
    " code once they're refactored to intercept events for the whole session. Also,\n" +
    ' limit it to apply only in between the first data_device.enter and\n' +
    ' dnd_drop_performed.'
]
wayland_pointer_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verifies whether the platform event source handles all types of axis sources.\n' +
    ' The actual behaviour of each axis source is not tested here.',
  ' This test ensures Ozone/Wayland does not crash when spurious\n' +
    ' `stylus tool` and `axis source` events are sent by the Compositor, prior\n' +
    ' to a pointer clicking event.\n' +
    ' In practice, this might happen with specific compositors, eg Exo, when a\n' +
    ' device wakes up from sleeping.',
  ' Tests that bitmap is set on pointer focus and the pointer surface respects\n' +
    ' provided scale of the surface image.',
  ' The case tested here should not actually occur in a good implementation of\n' +
    ' the Wayland protocol.'
]
wayland_popup.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_screen.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_screen_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper that gets the rightmost x coordinate for the given `output`.',
  ' Tests whether a primary output has been initialized before PlatformScreen is\n' +
    ' created.',
  ' In multi-monitor setup, the `entered_outputs_` list should be updated when\n' +
    ' the display is unplugged or switched off.',
  ' Regression test for https://crbug.com/1362872.',
  ' Checks that the surface that backs the window receives new scale of the\n' +
    ' output that it is in.',
  " Lacros uses screen coordinates so this test doesn't make any sense there.",
  ' Regression test for https://crbug.com/1346534.\n' +
    ' Scenario: With (at least) one output connected and a surface, with no output\n' +
    ' associated yet, ie: wl_surface.enter event not received yet for that surface,\n' +
    " which implies in its scale being set to the primary output's scale at its\n" +
    ' initialization, any primary output scale update (or other properties that\n' +
    ' lead to scale change) must be propagated to the window.',
  ' Checks that output transform is properly translated into Display orientation.\n' +
    ' The first one is counter-clockwise, while the latter is clockwise.',
  ' Ensures WaylandOutputManager and WaylandScreen properly handle scenarios\n' +
    ' where multiple wl_output objects are announced but not "configured" (ie:\n' +
    ' size, position, mode, etc sent to client) at bind time.',
  " Regression test for crbug.com/1408304. Ensures that the WaylandScreen's\n" +
    ' internal output state is consistent when propagating change notifications to\n' +
    ' clients.',
  ' Regression test for crbug.com/1310981.\n' +
    ' Some devices use display panels built in portrait orientation, but are used\n' +
    ' in landscape orientation. Thus their physical bounds are in portrait\n' +
    ' orientation along with an offset transform, which differs from the usual\n' +
    ' landscape oriented bounds.'
]
wayland_seat.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
wayland_seat_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that multiple send capability events result in a new device to be\n' +
    ' obtained on the client side to avoid a scenario where a stale device may be\n' +
    ' retained.'
]
wayland_serial_tracker.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_serial_tracker_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verifies GetSerial() behaves correctly when multiple values are set and\n' +
    ' queried.'
]
wayland_shm.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
wayland_shm_buffer.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_subsurface.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns DIP bounds of the subsurface relative to the parent surface.'
]
wayland_surface.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
wayland_surface_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_toplevel_window.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_touch.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40235357): Remove this method when Compositors other\n' +
    ' than Exo comply with `wl_touch.frame`.\n' +
    ' For instance, on Gnome/Wayland, KDE and Weston compositors a wl_touch.up does\n' +
    ' not come accompanied by a respective wl_touch.frame event. On these scenarios\n' +
    ' be conservative and always dispatch the events immediately.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
wayland_touch_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that touch events with stylus pen work.',
  ' Tests that touch events with stylus pen work. This variant of the test sends\n' +
    ' the tool information after the touch down event, and ensures that\n' +
    ' wl_touch::frame event handles it correctly.',
  ' Tests that touch focus is correctly set and released.',
  ' Verifies keyboard modifier flags are set in touch events while modifier keys\n' +
    ' are pressed. Regression test for https://crbug.com/1298604.'
]
wayland_window.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wayland compositors usually remove keyboard focus during drag\n' +
    ' sessions, thus modifier events are not sent, instead they are handled\n' +
    ' at server side, and clients are indirectly notified through, e.g:\n' +
    ' wl_data_offer.dnd_actions events.\n' +
    ' There is an open discussion about being more explicit about this on\n' +
    ' the spec: https://gitlab.freedesktop.org/wayland/wayland/-/issues/441\n' +
    ' For now, assume no keyboard modifiers info is available during dnd.',
  ' TODO(crbug.com/40856031): Implement ui scaling.',
  ' EventTarget:'
]
wayland_window_drag_controller.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Custom mime type used for window dragging DND sessions.',
  ' DND action used in window dragging DND sessions.',
  ' Value minimally higher than `GestureDetector::Config::touch_slop` (see [1])\n' +
    ' to exit the horizontal rail threshold in SnapScrollController, in case of\n' +
    ' an upwards tab dragging detach with touch.\n' +
    ' [1] //ui/events/gesture_detection/gesture_detector.h',
  ' Icon drawing and update for window/tab dragging is handled by buffer manager.',
  " This function is called when either 'cancelled' or 'finished' data source\n" +
    ' events is received during a window dragging session. It is used to detect\n' +
    ' when drop happens, since it is the only event sent by the server regardless\n' +
    ' where it happens, inside or outside toplevel surfaces.',
  ' Dispatch mouse release events (to tell clients that the drop just happened)\n' +
    ' clear focus and reset internal state. Must be called when the session is\n' +
    ' about to finish.'
]
wayland_window_drag_controller_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Check the following flow works as expected:\n' +
    ' 1. With a single 1 window open,\n' +
    ' 2. Move pointer into it, press left button, move cursor a bit (drag),\n' +
    ' 3. Run move loop, drag it within the window bounds and drop.',
  ' Check the following flow works as expected:\n' +
    ' 1. With a single window open,\n' +
    ' 2. Touch down and move the touch point a bit (drag),\n' +
    ' 3. Run move loop, drag it within the window bounds and drop.',
  ' Similar to DragInsideWindowAndDrop_TOUCH but with two fingers.',
  ' Check the following flow works as expected:\n' +
    ' 1. Start dragging  window_2 with touch.\n' +
    ' 2. Emulate |window_2| being closed manually by the user (eg control+w).\n' +
    ' 3. No crash observed.',
  ' Check the following flow works as expected:\n' +
    ' 1. With two windows open,\n' +
    ' 2. Touch down and start drag a window,\n' +
    ' 3. Emulate the compositor sending an unexpected `pointer enter` event\n' +
    '   to another window, when the drag is ongoing.\n' +
    " NOTE: This bug isn't noticed on DUT, but seems to be frequent on ash/chrome\n" +
    ' linux desktop builds (with ozone/x11 underneath).',
  ' Check the following flow works as expected:\n' +
    ' 1. With only 1 window open;\n' +
    ' 2. Move pointer into it, press left button, move cursor a bit (drag);\n' +
    ' 3. Run move loop,\n' +
    ' 4. Drag pointer to outside the window and release the mouse button, and make\n' +
    '    sure RELEASE and EXIT mouse events are delivered even when the drop\n' +
    '    happens outside the bounds of any surface.',
  ' Check the following flow works as expected:\n' +
    ' 1. With 2 windows open,\n' +
    ' 2. Focus window 1, starts dragging,\n' +
    ' 3. Run move loop,\n' +
    ' 4. Drag the pointer out of window 1 and then into window 2,\n' +
    ' 5. Drag it a bit more (within window 2) and then calls EndMoveLoop(),\n' +
    '    emulating a window snap), and then\n' +
    ' 6. With the window in "snapped" state, drag it further and then drop.\n' +
    ' TODO(crbug.com/40886646): Test needs to be updated for 112.0.5570.0 to remove\n' +
    ' special handling logic in wayland_pointer.cc.',
  ' Check the following flow works as expected:\n' +
    ' 1. With 2 windows open,\n' +
    ' 2. Focus window 1, starts dragging,\n' +
    ' 3. Run move loop,\n' +
    ' 4. Drag the pointer out of window 1 and then into window 2,\n' +
    ' 5. Drag it a bit more (within window 2) and then calls EndMoveLoop(),\n' +
    '    emulating a window snap), and then\n' +
    ' 6. With the window in "snapped" state, drag it further and then drop.',
  ' Check the following flow works as expected:\n' +
    ' 1. With 2 windows open,\n' +
    ' 2. Focus window 1, starts dragging,\n' +
    ' 3. Run move loop,\n' +
    ' 4. Drag the pointer out of window 1 and then into window 2,\n' +
    ' 5. Simulate a spurious `wl_pointer.enter` event from the server\n' +
    '    during the dnd operation. It should be ignored...\n' +
    ' 6. Drag it a bit more (within window 2) and then calls EndMoveLoop(),\n' +
    '    emulating a window snap), and then drop.\n' +
    ' TODO(crbug.com/40886646): Test needs to be updated for 112.0.5570.0 to remove\n' +
    ' special handling logic in wayland_pointer.cc.',
  ' Verifies wl_data_device::leave events are properly handled and propagated\n' +
    ' while in window dragging "attached" mode.',
  ' Verifies wl_data_device::leave events are properly handled and propagated\n' +
    ' while in window dragging "attached" mode.',
  ' Check the following flow works as expected:\n' +
    ' 1. With a single 1 window open,\n' +
    ' 2. Move pointer into it, press left button, move cursor a bit (drag),\n' +
    ' 3. Run move loop, drag it from 200,200 location to 100,100\n' +
    ' 4. Send a few wl_pointer::motion events targeting 20,20 location and ensure\n' +
    '    they are ignored (i.e: window bounds keep unchanged) until drop happens.\n' +
    ' Verifies window drag controller is resistant to issues such as\n' +
    ' https://crbug.com/1148021.',
  ' Regression test for https://crbug.com/1169446.',
  ' Test that cursor position is using DIP coordinates and is updated correctly\n' +
    ' on DragMotion event.',
  ' Ensure no memory issues happen when the dragged window is destroyed just\n' +
    ' after quitting the move loop. Regression test for crbug.com/1267791 and\n' +
    ' should be caught in both regular and ASAN builds, where more details about\n' +
    ' the actual memory issue is provided.',
  ' Ensure no memory issues happen when the dragged and/or events grabber windows\n' +
    ' get destroyed while the move loop is running.',
  ' Ensures correct behavior when ext-drag protocol is not available, such as:\n' +
    " 1. Returns 'success' even when wl_data_source.cancelled is sent by the\n" +
    '    Wayland Compositor.\n' +
    '  Regression test for https://crbug.com/1366504.',
  ' Ensure events are handled appropriately when the target window is destroyed\n' +
    ' while the move loop is running (i.e. dragging in the detached state).\n' +
    ' Regression test for crbug.com/1433577.',
  ' Ensure events are handled appropriately when the target window is destroyed\n' +
    ' while dragging a tab attached to the window (i.e. dragging in the attached\n' +
    ' state).\n' +
    ' Regression test for crbug.com/1433577.',
  ' Regression test for b/336321329. Ensures all pressed mouse buttons are\n' +
    ' released when the window drag ends.',
  ' Regression test for crbug.com/330274075. There are circumstances under which\n' +
    ' compositors will not send a send data_source.dnd_finish|cancelled for a\n' +
    ' wayland drag session. This can result in a data drag leaving the shared state\n' +
    ' in the data device in an inconsistent state. If a window drag session is\n' +
    ' requested while in such an inconsistent state this shared state must first be\n' +
    ' reset.',
  ' Lacros requires aura shell.',
  " Linux shouldn't use aura shell."
]
wayland_window_factory.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
wayland_window_manager.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_window_manager_unittests.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_window_observer.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_window_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Must happen on the server thread.',
  ' Regression test for crbug.com/1433175',
  ' WaylandSurface state changes are sent to wayland compositor when\n' +
    ' ApplyPendingState() is called.',
  ' Checks that when the window gets some of its edges tiled, it notifies the\n' +
    ' delegate appropriately.',
  ' This test is specifically to guard against origin being set to (0, 0)\n' +
    ' thus lacros can be restored to correct display (crbug.com/1423690)',
  ' Tests the event sequence where a minimize request is initiated by the client.',
  ' Tests the event sequence where a minimize event is initiated by the server\n' +
    " and the client's window is in a non-minimized state.",
  ' Tests the event sequence where a toplevel window is minimized and a restore\n' +
    ' event is initiated by the server.',
  ' If the server immediately changes the bounds after a window is initialised,\n' +
    " make sure that the client doesn't wait for a new frame to be produced.\n" +
    ' See https://crbug.com/1427954.',
  ' Verify that located events are translated correctly when the windows have\n' +
    ' geometry with non-zero offset.\n' +
    ' See https://crbug.com/1292486.',
  ' Tests that the event grabber gets the events processed by its toplevel parent\n' +
    ` window iff they belong to the same "family". Otherwise, events mustn't be\n` +
    ' rerouted from another toplevel window to the event grabber.',
  ' Tests that event is processed by the surface that has the focus. More\n' +
    ' extensive tests are located in wayland touch/keyboard/pointer unittests.',
  ' Makes sure hit tests are converted into right edges.',
  ' TODO(crbug.com/328783999): Remove the use of runloops in PostToServerAndWait',
  ' TODO(crbug.com/328783999): Remove the use of runloops in PostToServerAndWait',
  ' Tests that WaylandPopup is able to translate provided bounds via\n' +
    " PlatformWindowProperties using buffer scale it's going to use that the client\n" +
    ' is not able to determine before PlatformWindow is created. See\n' +
    ' WaylandPopup::OnInitialize for more details.',
  ' Tests that a WaylandWindow uses the entered output with largest scale\n' +
    ' factor as the preferred output. If scale factors are equal, the very first\n' +
    ' entered display is used.',
  ' Tests that xdg_popup is configured with default anchor properties and bounds\n' +
    " if delegate doesn't have anchor properties set.",
  ' Tests that xdg_popup is configured with anchor properties received from\n' +
    ' delegate.',
  ' Tests that size constraints returned by the `ui::PlatformWindowDelegate` are\n' +
    ' obeyed by the window when its bounds are set internally via its\n' +
    ' SetBoundsInDIP() implementation.',
  ' Tests that size constraints returned by the `ui::PlatformWindowDelegate` are\n' +
    ' obeyed by the window when its bounds are set externally via the configure\n' +
    ' event sent by the compositor.',
  ' Tests that if the window gets hidden and shown again, the title, app id and\n' +
    ' size constraints remain the same.',
  ' Tests that a popup window is created using the serial of button press\n' +
    ' events as required by the Wayland protocol spec.',
  ' Tests that a popup window is created using the serial of touch down events\n' +
    ' as required by the Wayland protocol spec.',
  ' Tests nested menu windows get the topmost window in the stack of windows\n' +
    ' within the same family/tree.',
  ' Regression test for https://crbug.com/1247799.',
  ' Tests integer and non integer size/position support with and without surface\n' +
    ' augmenter.',
  ' Tests that WaylandPopups can be repositioned.',
  ' If buffers are not attached (aka WaylandBufferManagerHost is not used for\n' +
    " buffer management), WaylandSurface::Commit mustn't result in creation of\n" +
    ' surface sync.',
  ' This test ensures that Ozone/Wayland does not crash while handling a\n' +
    ' sequence of two or more touch down/up actions, where the first one blocks\n' +
    ' unfinished before the second pair comes in.\n' +
    ' This mimics the behavior of a modal dialog that comes up as a result of\n' +
    ' the first touch down/up action, and blocks the original flow, before it gets\n' +
    ' handled completely.',
  ' Make sure that changing focus during dispatch will not re-dispatch the event\n' +
    ' to the newly focused window. (crbug.com/1339082);\n' +
    ' Flaky on device/VM: https://crbug.com/1348046',
  ' Make sure that creating a window with DIP bounds creates a window with\n' +
    ' the same DIP bounds with various fractional scales.',
  ' Make sure that the window scale change is applied on the latest\n' +
    ' in_flight_requests.',
  ' Asserts the server receives the correct region when SetShape() is called for\n' +
    ' toplevel windows.',
  ' Asserts the server receives the correct height when `SetTopInset()` is called\n' +
    ' for toplevel windows.',
  ' Tests that the platform window gets the notification when overview mode\n' +
    ' changes.',
  ' Tests setting and unsetting float state on a wayland toplevel window.',
  ' Tests that a re-entrant state update is handled serially by `WaylandWindow`\n' +
    ' and does not crash.',
  ' Tests that configuring twice with the same state immediately acks and\n' +
    ' commits.',
  ' Test that creates a screen with two displays, with work areas configured to\n' +
    ' be side-by-side horizontally.',
  ' Asserts new windows have their bounds set on the display for new windows if\n' +
    ' init bounds are unspecified.',
  ' Asserts new windows ignore the display for new windows if bounds have been\n' +
    ' explicitly specified.'
]
wayland_zaura_output_manager_v2.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
wayland_zaura_output_manager_v2_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A TestScreen impl with minimal functionality to support activation testing.',
  ' Tests to ensure server output metrics events translate to a correct metrics\n' +
    ' representation client-side.',
  ' Tests that the aura output manager correctly processes config changes for\n' +
    ' wl_output global add events.',
  ' Tests that the aura output manager correctly processes config changes for\n' +
    ' wl_output global remove events.',
  ' Tests that the aura output manager correctly processes config changes for\n' +
    ' output adds, removals and changes simultaneously.',
  " Asserts output activations are correctly translated to the client's screen."
]
wayland_zaura_shell.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354862211): Remove this after removing unsafe code only used\n' +
    ' in Lacros in OnDesksChanged',
  ' Version: 65',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
wayland_zaura_shell_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_zaura_surface.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static.',
  ' static.',
  ' static.',
  ' static.',
  ' static.',
  ' static.',
  ' static.',
  ' static.',
  ' static.'
]
wayland_zcr_color_management_output.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
wayland_zcr_color_management_surface.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
wayland_zcr_color_manager.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' Calling this function during Instantiate creates a copy of these colorspaces\n' +
    " ahead of time on the server so they're ready when first requested.\n" +
    ' These are common video colorspaces you might come across browsing the web:\n' +
    ' Youtube, meets calls, hdr video, etc.\n' +
    ' Eventually the ZcrColorManager protocol needs to be extended to support\n' +
    ' sending colorspaces immediately (b/280388004).'
]
wayland_zcr_color_manager_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_zcr_color_space.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static deprecated',
  ' static deprecated',
  ' static',
  ' static',
  ' static'
]
wayland_zcr_color_space_creator.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
wayland_zcr_cursor_shapes.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
wayland_zcr_touchpad_haptics.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static'
]
wayland_zwp_linux_dmabuf.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
wayland_zwp_pointer_constraints.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static'
]
wayland_zwp_pointer_gestures.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
wayland_zwp_pointer_gestures_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observes events, filters the pinch zoom updates, and records the latest\n' +
    ' update to the scale.',
  ' Tests that scale in pinch zoom events is fixed to the progression expected by\n' +
    ' the compositor.\n' +
    ' During the pinch zoom session, libinput sends the current scale relative to\n' +
    ' the start of the session.  The compositor, however, expects every update to\n' +
    ' have the relative change of the scale, compared to the previous update in\n' +
    ' form of a multiplier applied to the current value.  The factor is fixed at\n' +
    ' the low level immediately after values are received from the server via\n' +
    ' WaylandZwpPointerGestures methods.\n' +
    ' See https://crbug.com/1283652',
  ' Test ensures Hold Event ends a fling.'
]
wayland_zwp_relative_pointer_manager.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
xdg_activation.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps the actual activation token.',
  ' static',
  ' static',
  ' static'
]
xdg_activation_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that XdgActivation uses the proper surface to request token.',
  ' Tests that with too many requests at some point the request queue will be\n' +
    ' full and the subsequent request callbacks will be run immediately with an\n' +
    ' empty token instead of adding them to the queue for sending to the server\n' +
    ' later.'
]
xdg_foreign_wrapper.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
xdg_output.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
xdg_popup_wrapper_impl.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
xdg_surface_wrapper_impl.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
xdg_toplevel_icon_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
xdg_toplevel_wrapper_impl.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
zwp_idle_inhibit_manager.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
zwp_primary_selection_device.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
zwp_primary_selection_device_manager.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
zwp_primary_selection_offer.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
zwp_text_input_wrapper_v1.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Converts Chrome's TextInputType into wayland's content_purpose.\n" +
    ' Some of TextInputType values do not have clearly corresponding wayland value,\n' +
    ' and they fallback to closer type.',
  " Converts Chrome's TextInputType into wayland's content_hint.",
  ' Parses the content of |array|, and creates a map of modifiers.\n' +
    ' The content of array is just a concat of modifier names in c-style string\n' +
    " (i.e., '\\0' terminated string), thus this splits the whole byte array by\n" +
    " '\\0' character.",
  ' Returns ImeTextSpan style to be assigned. Maybe nullopt if it is not\n' +
    ' supported.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
zwp_text_input_wrapper_v1_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
zwp_text_input_wrapper_v3.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Converts Chrome's TextInputType into wayland's content_purpose.\n" +
    ' Some of TextInputType values do not have clearly corresponding wayland value,\n' +
    ' and they fallback to closer type.',
  " Converts Chrome's TextInputType into wayland's content_hint.",
  ' The following methods are not applicable to text-input-v3 because they are\n' +
    ' needed in Exo with text-input-v1 protocol + extended text input protocol.'
]
zwp_text_input_wrapper_v3_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_overlay_config_mojom_traits.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
wayland_overlay_config_mojom_traits_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_presentation_info_mojom_traits.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ozone_platform_wayland.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
global_object.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
mock_pointer.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_surface.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_wayland_platform_window_delegate.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_wayland_zcr_color_manager.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_wp_presentation.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_xdg_activation_v1.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_xdg_shell.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_xdg_surface.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_xdg_toplevel_icon.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_zcr_extended_text_input.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_zwp_linux_dmabuf.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_zwp_text_input.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_zwp_text_input_wrapper_client.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_wl_array.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
server_object.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
test_alpha_blending.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_alpha_compositing.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_augmented_subsurface.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_augmented_surface.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_buffer.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_compositor.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_data_device.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_data_device_manager.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_data_offer.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
test_data_source.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_gtk_primary_selection.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' GtkPrimarySelection* classes contain protocol-specific implementation of\n' +
    ' TestSelection*::Delegate interfaces, such that primary selection test\n' +
    ' cases may be set-up and run against test wayland compositor.'
]
test_keyboard.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_output.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(tluk): Update this to the latest supported wl_output version.',
  ' static',
  ' Notifies clients about the changes in the output configuration via server\n' +
    ' events as soon as the output is bound (unless suppressed). Sending metrics at\n' +
    ' bind time is the most common behavior among Wayland compositors and is the\n' +
    ' case for the exo compositor.'
]
test_output_metrics.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_overlay_prioritized_surface.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_overlay_prioritizer.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_positioner.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_region.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_seat.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_selection_device_manager.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' TestSelectionOffer implementation.',
  ' TestSelectionSource implementation.',
  ' TestSelectionDevice implementation.'
]
test_subcompositor.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_subsurface.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_surface_augmenter.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_touch.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_viewport.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_viewporter.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_wayland_server_thread.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
test_wayland_zcr_color_management_output.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_wayland_zcr_color_management_surface.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_wayland_zcr_color_space.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_wayland_zcr_color_space_creator.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_wp_pointer_gestures.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
test_xdg_popup.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zaura_output.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zaura_output_manager.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zaura_output_manager_v2.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zaura_popup.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zaura_shell.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zaura_surface.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40881920): Replace NOTREACHED() by NOTIMPLEMENTED() for\n' +
    ' all methods?'
]
test_zaura_toplevel.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zcr_pointer_stylus.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zcr_stylus.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zcr_text_input_extension.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zcr_touch_stylus.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zwp_linux_buffer_params.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zwp_linux_explicit_synchronization.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zwp_primary_selection.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ZwpPrimarySelection* classes contain protocol-specific implementation of\n' +
    ' TestSelection*::Delegate interfaces, such that primary selection test\n' +
    ' cases may be set-up and run against test wayland compositor.'
]
test_zwp_text_input_manager.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zxdg_output.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zxdg_output_manager.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_connection_test_api.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_drag_drop_test.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_ozone_ui_controls_test_helper.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_test.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_buffer_manager_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' TODO(msisov): add a test to exercise buffer management with non-default scale\n' +
    ' once all the patches land.',
  ' Tests that committing overlays with bounds_rect containing NaN or infinity\n' +
    ' values is illegal - the host terminates the gpu process.',
  ' A similar test to the above with the only difference that a background\n' +
    ' dummy buffer is not used as delegation is disabled.',
  ' This test ensures that a discarded presentation feedback sent prior receiving\n' +
    ' results for the previous presentation feedback does not make them\n' +
    ' automatically failed.',
  ' This test ensures that a failed presentation feedback (with flags set as\n' +
    ' `gfx::PresentationFeedback::kFailure`) is received by the client and\n' +
    ' propagated as a failed presentation.',
  " Tests the surface does not have buffers attached until it's configured at\n" +
    ' least once.',
  ' Verifies toplevel surfaces do not have buffers attached until configured,\n' +
    ' even when the initial configure sequence is not acked in response to\n' +
    ' xdg_surface.configure event, i.e: done asynchronously when OnSequencePoint()\n' +
    ' is called by they FrameManager).\n' +
    ' Regression test for https://crbug.com/1313023.',
  ' The buffer that is not originally attached to any of the surfaces,\n' +
    ' must be attached when a commit request comes. Also, it must setup a buffer\n' +
    ' release listener and OnSubmission must be called for that buffer if it is\n' +
    ' released.',
  ' Tests that OnSubmission and OnPresentation are properly triggered if a buffer\n' +
    ' is committed twice in a row and those buffers are destroyed.',
  ' Tests that OnSubmission and OnPresentation are properly triggered if a buffer\n' +
    ' is committed twice in a row and then released.',
  ' Tests that OnSubmission and OnPresentation callbacks are properly called\n' +
    ' even if buffers are not released in the same order they were committed.',
  ' This test verifies that submitting the buffer more than once results in\n' +
    ' OnSubmission callback as Wayland compositor is not supposed to release the\n' +
    ' buffer committed twice.',
  ' Tests that submitting a single buffer only receives an OnSubmission. This is\n' +
    ' required behaviour to make sure that submitting buffers in a quiescent state\n' +
    ' will be immediately acked.',
  ' Tests that when CommitOverlays(), root_surface can only be committed once all\n' +
    ' overlays in the frame are committed.',
  " Tests that destroying a channel doesn't result in resetting surface state\n" +
    ' and buffers can be attached after the channel has been reinitialized.',
  ' Tests that destroying a channel results in attaching null buffers to the root\n' +
    ' surface, and hiding primary subsurface and overlay surfaces. This is required\n' +
    ' to make it possible for a GPU service to switch from hw acceleration to sw\n' +
    ' compositing. Otherwise, there will be frozen graphics represented by a\n' +
    ' primary subsurface as sw compositing uses the root surface to draw new\n' +
    ' frames. Verifies the fix for https://crbug.com/1201314',
  ' Verifies that there are no more than certain number of submitted frames that\n' +
    ' wait presentation feedbacks. If the number of pending frames hit the\n' +
    ' threshold, the feedbacks are marked as failed and discarded. See the comments\n' +
    ' below in the test.',
  ' Tests viewport destination is set correctly when the augmenter subsurface\n' +
    ' protocol is not available and then becomes available.',
  ' Tests viewport destination is set correctly when the augmenter subsurface\n' +
    ' protocol is not available (the destination is rounded), and the protocol is\n' +
    ' available (the destination is set with floating point precision).'
]
wayland_utils.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
atk_event_conversion.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
client_native_pixmap_factory_x11.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_egl_utility_x11.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_surface_egl_readback_x11.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hit_test_x11.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These constants are said to be defined in the Extended Window Manager Hints\n' +
    ' standard but to be not found in any headers...'
]
linux_ui_delegate_x11.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_pixmap_egl_x11_binding.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
os_exchange_data_provider_x11.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ozone_platform_x11.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Singleton OzonePlatform implementation for X11 platform.'
]
device_data_manager_x11_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that the the device data manager notifies observers when a device is\n' +
    ' disabled and re-enabled.',
  ' Tests blocking multiple devices.'
]
events_x_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Initializes the passed-in event.',
  ' Initializes the passed-in x11::Event.',
  ' Copied events should not remove native touch id mappings, as this causes a\n' +
    ' crash (crbug.com/467102). Copied events do not contain a proper\n' +
    ' PlatformEvent and should not attempt to access it.',
  ' Verifies that the type of events from a disabled keyboard is\n' +
    ' EventType::kUnknown, but that an exception list of keys can still be\n' +
    ' processed.',
  ' Verifies that the type of events from a disabled mouse is\n' +
    ' EventType::kUnknown.',
  ' Returns a fake TimeTicks based on the given millisecond offset.',
  ' Moved from event_unittest.cc',
  ' Checks that Event.Latency.OS2.TOUCH_PRESSED, TOUCH_MOVED,\n' +
    ' and TOUCH_RELEASED histograms are computed properly.'
]
os_exchange_data_provider_x11_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_drag_drop_client_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Collects messages which would otherwise be sent to |window_| via\n' +
    ' SendXClientEvent().',
  ' An implementation of X11MoveLoop where RunMoveLoop() always starts the\n' +
    ' move loop.',
  ' Implementation of XDragDropClient which short circuits FindWindowFor().',
  ' Implementation of XDragDropClient which works with a fake\n' +
    ' |XDragDropClient::source_current_window_|.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' ClientMessageEventCollector',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' TestMoveLoop',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' SimpleTestDragDropClient',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' TestDragDropClient',
  ' Test that we do not wait for the target to send XdndStatus if we have not\n' +
    ' received any XdndStatus messages at all from the target. The Unity\n' +
    ' DNDCollectionWindow is an example of an XdndAware target which does not\n' +
    ' respond to XdndPosition messages at all.',
  ' Test that XdndPosition messages are queued till the pending XdndPosition\n' +
    ' message is acked via an XdndStatus message.',
  ' Test the behavior when the target changes during a drag.',
  ' Test that the source sends XdndLeave instead of XdndDrop if the drag\n' +
    ' operation is rejected after the mouse is released.'
]
x11_event_translation_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ensure DomKey extraction happens lazily in ash-chrome (ie: linux-chromeos),\n' +
    ' while in Linux Desktop path it is set right away in XEvent => ui::Event\n' +
    " translation and it's properly copied when native event ctor is used. This\n" +
    ' prevents regressions such as crbug.com/1007389 and crbug.com/1240616.',
  ' Ensure KeyEvent::Properties is properly set regardless X11 build config is\n' +
    ' in place. This prevents regressions such as crbug.com/1047999.',
  ' Ensure XEvents with bogus timestamps are properly handled when translated\n' +
    ' into ui::*Events.',
  ' Ensure MouseEvent::changed_button_flags is correctly translated from\n' +
    ' X{Button,Crossing}Events.',
  " Verifies 'repeat' flag is properly set when key events for modifiers and\n" +
    ' their counterparts are mixed. Ensures regressions like crbug.com/1069690\n' +
    ' are not reintroduced in the future.',
  ' Verifies that scroll events remain EventType::kScroll type or are translated\n' +
    ' to EventType::kScrollFlingStart depending on their X and Y offsets.'
]
x11_window_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Blocks till the window state hint, |hint|, is set or unset.',
  " Returns the list of rectangles which describe |window|'s bounding region via\n" +
    ' the X shape extension.',
  ' Returns true if one of |rects| contains point (x,y).',
  ' https://crbug.com/898742: Test is flaky.',
  ' Flaky on Linux ASAN and ChromeOS. https://crbug.com/1291868',
  ' Test that the widget reacts on changes in fullscreen state initiated by the\n' +
    ' window manager (e.g. via a window manager accelerator key).',
  ' TODO(crbug.com/40820331): Flaky on both Linux and ChromeOS.\n' +
    ' Tests that the minimization information is propagated to the\n' +
    ' PlatformWindowDelegate.'
]
vulkan_implementation_x11.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vulkan_surface_x11.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' When the screen is off or the window is offscreen, the X server keeps\n' +
    ' compositing windows with a 1Hz fake vblank.  However, there is an X server\n' +
    ' bug: the requested hardware vblanks are lost when screen turns off, which\n' +
    ' results in that tjh FIFO swapchain hangs.\n' +
    ' We work around the issue by setting the 2 seconds timeout for\n' +
    ' vkAcquireNextImageKHR().  When timeout happens, we consider the swapchain\n' +
    ' hang happened, and then make the surface lost, so a new swapchain will\n' +
    ' be created.'
]
x11_canvas_surface.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_clipboard_ozone.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_global_shortcut_listener_ozone.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_keyboard_hook.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' GrabKey essentially requires the modifier mask to explicitly be specified.\n' +
    " One can specify 'x11::ModMask::Any' however doing so means the call to\n" +
    ' GrabKey will fail if that key has been grabbed with any combination of\n' +
    ' modifiers.  The common practice is to call GrabKey with each individual\n' +
    ' modifier mask to avoid that problem.',
  ' This is the set of keys to lock when the website requests that all keys be\n' +
    ' locked.'
]
x11_menu_utils.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_ozone_ui_controls_test_helper.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_screen_ozone.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_screen_ozone_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This test case ensures that PlatformScreen correctly provides the display\n' +
    ' list as they are added/removed.',
  ' This test case exercises GetDisplayForAcceleratedWidget when simple cases\n' +
    ' for platform windows in a single-display setup.',
  ' This test case exercises GetDisplayForAcceleratedWidget when simple cases\n' +
    ' for platform windows in a 2 side-by-side displays setup.',
  ' This test case exercises GetDisplayNearestPoint function simulating 2\n' +
    ' side-by-side displays setup.',
  ' This test case exercises GetDisplayMatching function with both single and\n' +
    ' side-by-side display setup',
  ' Test that rotating the displays notifies the DisplayObservers.',
  ' Test that changing the displays workarea notifies the DisplayObservers.',
  ' Test that changing the device scale factor notifies the DisplayObservers.'
]
x11_surface_factory.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_user_input_monitor.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_utils.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_window.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Opacity for drag widget windows.',
  ' Coalesce touch/mouse events if needed',
  ' Special value of the _NET_WM_DESKTOP property which indicates that the window\n' +
    ' should appear on all workspaces/desktops.',
  ' In some situations, views tries to make a zero sized window, and that\n' +
    ' makes us crash. Make sure we have valid sizes.',
  ' Returns the whole path from |window| to the root.',
  " Removes |delayed_resize_task_| from the task queue (if it's in the queue) and\n" +
    ' adds it back at the end of the queue.'
]
x11_window_manager.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
x11_window_ozone_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TestScreen implementation. We need to set a screen instance, because\n' +
    ' X11Window requires it. And as long as depending on views is a dependency\n' +
    ' violation, keep own implementation here. Otherwise, we could just use\n' +
    ' ScreenOzone, but it is impossible.\n' +
    ' We are not really interested in sending back real displays. Thus, default one\n' +
    ' is more than enough.',
  ' This test ensures that events are handled by a right target(widget).',
  ' This test case ensures that events are consumed by a window with explicit\n' +
    ' capture, even though the event is sent to other window.',
  ' This test case ensures window_manager properly provides X11Window instances\n' +
    ' as they are created/destroyed.',
  ' This test case ensures that OnMouseEnter is called once when a mouse location\n' +
    ' moved to the window, and |window_mouse_currently_on_| is properly reset when\n' +
    ' the window is deleted.',
  ' Verifies X11Window sets fullscreen bounds in pixels when going to fullscreen.'
]
platform_selection.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Returns the name of the platform to use (value of --ozone-platform flag).'
]
client_native_pixmap_factory_ozone.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gpu_platform_support_host.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' No-op implementations of GpuPlatformSupportHost.'
]
hardware_capabilities.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_controller.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_pixmap_gl_binding.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
overlay_candidates_ozone.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
overlay_plane.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
overlay_surface.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
overlay_surface_candidate.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ozone_gpu_test_helper.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ozone_platform.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
ozone_switches.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Specify ozone platform implementation to use.',
  ' Suggests the ozone platform to use (desktop Linux only).  Can be set on\n' +
    ' chrome://flags.  See https://crbug.com/1246928.',
  ' Specify location for image dumps.',
  ' Try to enable wayland input method editor.',
  ' Disable wayland input method editor.',
  ' Specify wayland text-input protocol version.\n' +
    ' Defaults to "1" for text-input-v1. Can specify value "3" for experimental\n' +
    ' text-input-v3 support.',
  ' Use explicit grab when opening popup windows.\n' +
    ' See https://crbug.com/1220274',
  ' Disable explicit DMA-fences',
  ' Specifies ozone screen size.'
]
ozone_ui_controls_test_helper.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_gl_egl_utility.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_global_shortcut_listener.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_keyboard_hook.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_menu_utils.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_screen.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_user_input_monitor.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
surface_factory_ozone.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
surface_ozone_canvas.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_platform_window_delegate.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ozone_integration_tests_main.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_window_defaults.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desk_extension.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
pinned_mode_extension.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
system_modal_extension.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_extension.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
workspace_extension.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_extension.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
initialize_presenter_api_view.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_ref_pair.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_window.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_window_delegate.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_window_init_properties.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
stub_window.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
win_window.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
wm_drag_handler.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wm_drop_handler.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wm_move_loop_handler.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wm_move_resize_handler.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
qt5_shim_moc.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  " Meta object code from reading C++ file 'qt_shim.h'\n" +
    ' Created by: The Qt Meta Object Compiler version 67 (Qt 5.3.2)\n' +
    ' WARNING! All changes made in this file will be lost!'
]
qt6_shim_moc.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  " Meta object code from reading C++ file 'qt_shim.h'\n" +
    ' Created by: The Qt Meta Object Compiler version 68 (Qt 6.2.4)\n' +
    ' WARNING! All changes made in this file will be lost!'
]
qt_interface.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
qt_shim.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' IMPORTANT NOTE: All QtShim members that use `delegate_` must be decorated\n' +
    ' with DISABLE_CFI_VCALL.',
  ' Obtain the average color of a gradient.',
  ' Obtain the average color of a texture.'
]
qt_ui.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' IMPORTANT NOTE: All QtUi members that use `shim_` must be decorated\n' +
    ' with DISABLE_CFI_VCALL.'
]
auto_close_dialog_event_handler_win.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
base_shell_dialog.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
base_shell_dialog_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a SingleThreadTaskRunner to run a shell dialog on. Each dialog\n' +
    ' requires its own dedicated single-threaded sequence otherwise in some\n' +
    ' situations where a singleton owns a single instance of this object we can\n' +
    ' have a situation where a modal dialog in one window blocks the appearance\n' +
    ' of a modal dialog in another.',
  ' Enables the window |owner|. Can only be run from the UI thread.',
  ' static',
  ' static',
  ' static'
]
execute_select_file_win.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Stop switch for the AutoCloseDialogEventHandler.',
  ' RAII wrapper around AutoCloseDialogEventHandler.',
  ' Distinguish directories from regular files.',
  ' Sets which path is going to be open when the dialog will be shown. If\n' +
    ' |default_path| is not only a directory, also sets the contents of the text\n' +
    ' box equals to the basename of the path.',
  ' Sets the file extension filters on the dialog.',
  ' Sets the requested |dialog_options|, making sure to keep the default values\n' +
    ' when not overwritten.',
  ' Configures a |file_dialog| object given the specified parameters.',
  ' Prompt the user for location to save a file.\n' +
    ' Callers should provide the filter string, and also a filter index.\n' +
    ' The parameter |index| indicates the initial index of filter description and\n' +
    ' filter pattern for the dialog box. If |index| is zero or greater than the\n' +
    ' number of total filter types, the system uses the first filter in the\n' +
    ' |filter| buffer. |index| is used to specify the initial selected extension,\n' +
    ' and when done contains the extension the user chose. The parameter |path|\n' +
    ' returns the file name which contains the drive designator, path, file name,\n' +
    ' and extension of the user selected file name. |def_ext| is the default\n' +
    ' extension to give to the file if the user did not enter an extension.',
  ' Runs an Open file dialog box, with similar semantics for input parameters as\n' +
    ' RunSaveFileDialog.',
  ' Runs a Folder selection dialog box, passes back the selected folder in |path|\n' +
    ' and returns true if the user clicks OK. If the user cancels the dialog box\n' +
    ' the value in |path| is not modified and returns false. Run on the dialog\n' +
    ' thread.'
]
fake_select_file_dialog.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
run_all_unittests.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
select_file_dialog.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Optional dialog factory. Leaked.',
  ' static',
  ' static',
  " These are overridden by Android's SelectFileDialog subclass."
]
select_file_dialog_android.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must come after all headers that specialize FromJniType() / ToJniType().',
  ' static'
]
select_file_dialog_factory.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
select_file_dialog_fuchsia.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
select_file_dialog_lacros.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the ID of the Wayland shell surface that contains `window`, or an\n' +
    ' empty string if `window` is not associated with a top-level window.'
]
select_file_dialog_linux.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file implements common select dialog functionality between GTK and KDE.'
]
select_file_dialog_linux_kde.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implementation of SelectFileDialog that shows a KDE common dialog for\n' +
    ' choosing a file or folder. This acts as a modal dialog.',
  ' static',
  ' We ignore |default_extension|.'
]
select_file_dialog_linux_portal.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Time to wait for the notification service to start, in milliseconds.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
select_file_dialog_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
select_file_dialog_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Get the file type description from the registry. This will be "Text Document"\n' +
    ` for .txt files, "JPEG Image" for .jpg files, etc. If the registry doesn't\n` +
    ' have an entry for the file type, we return false, true if the description was\n' +
    ` found. 'file_ext' must be in form ".txt".`,
  ' Set up a filter for a Save/Open dialog, |ext_desc| as the text descriptions\n' +
    " of the |file_ext| types (optional), and (optionally) the default 'All Files'\n" +
    ' view. The purpose of the filter is to show only files of a particular type in\n' +
    ' a Windows Save/Open dialog box. The resulting filter is returned. The filter\n' +
    ' created here are:\n' +
    "   1. only files that have 'file_ext' as their extension\n" +
    "   2. all files (only added if 'include_all_files' is true)\n" +
    ' If a description is not provided for a file extension, it will be retrieved\n' +
    ' from the registry. If the file extension does not exist in the registry, a\n' +
    ' default description will be created (e.g. "qqq" yields "QQQ File").',
  ' Forwards the result from a select file operation to the SelectFileDialog\n' +
    ' object on the UI thread.',
  ' Implementation of SelectFileDialog that shows a Windows common dialog for\n' +
    ' choosing a file or folder.',
  ' Invokes the |execute_select_file_callback| and returns the result to',
  ' static'
]
select_file_dialog_win_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' The default title for the various dialogs.',
  ' Returns the title of |window|.',
  ' Waits for a dialog window whose title is |dialog_title| to show and returns\n' +
    ' its handle.',
  ' Returns the text of the dialog item in |window| whose id is |dialog_item_id|.',
  ' Sends a command to |window| using PostMessage().',
  ' When using SELECT_UPLOAD_FOLDER, the title and the ok button strings are\n' +
    ' modified to put emphasis on the fact that the whole folder will be uploaded.',
  ' Specifying the title when opening a dialog to select a file, select multiple\n' +
    " files or save a file doesn't do anything.",
  " Tests the selection of one file in both the single and multiple case. It's\n" +
    ' too much trouble to select a different file in the dialog so the default_path\n' +
    ' is used to pre-select a file and the OK button is clicked as soon as the\n' +
    ' dialog opens. This tests the default_path parameter and the single file\n' +
    ' selection.',
  ' Tests that the file extension is automatically added.',
  ' Tests that only specifying a basename as the default path works.',
  ' Tests that selecting an existing file when saving should prompt the user with\n' +
    ' a dialog to confirm the overwrite.'
]
select_file_policy.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
select_file_utils_win_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
selected_file_info.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
shell_dialog_linux.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
shell_dialog_stub.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
screenshot_grabber.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The minimum interval between two screenshot commands.  It has to be\n' +
    ' more than 1000 to prevent the conflict of filenames.'
]
snapshot.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Note that Android and Aura versions of this function are in\n' +
    ' snapshot_android.cc and snapshot_aura.cc respectively.'
]
snapshot_android.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
snapshot_async.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
snapshot_aura.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
snapshot_aura_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Paint simple rectangle on the specified aura window.',
  ' https://crbug.com/852512',
  ' https://crbug.com/1143031'
]
snapshot_win.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
run_all_unittests.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
transport_dib.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
run_all_unittests.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
longpress_drag_selector.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
longpress_drag_selector_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_handle.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Maximum duration of a fade sequence.',
  ' Maximum amount of travel for a fade sequence. This avoids handle "ghosting"\n' +
    ' when the handle is moving rapidly while the fade is active.',
  ' Avoid using an empty touch rect, as it may fail the intersection test event\n' +
    " if it lies within the other rect's bounds.",
  ' The maximum touch size to use when computing whether a touch point is\n' +
    ' targetting a touch handle. This is necessary for devices that misreport\n' +
    ' touch radii, preventing inappropriately largely touch sizes from completely\n' +
    ' breaking handle dragging behavior.',
  ' Note that the intersection region is boundary *exclusive*.',
  ' TODO(AviD): Remove this once logging(DCHECK) supports enum class.',
  ' Responsible for rendering a selection or insertion handle for text editing.'
]
touch_handle_drawable_aura.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Vertical offset to apply from the bottom of the selection/text baseline to\n' +
    ' the top of the handle image. Only applied when touch text editing redesign is\n' +
    ' disabled.',
  ' Padding to apply horizontally around and vertically below the handle image,\n' +
    ' so that touch events near the handle image are targeted to the handle. Only\n' +
    ' applied when touch text editing redesign is enabled.',
  ' Max opacity of the selection handle image.',
  ' Epsilon value used to compare float values to zero.',
  ' Returns the appropriate handle image based on the handle orientation.',
  ' Returns the appropriate handle vector icon based on the handle orientation.'
]
touch_handle_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_selection_controller.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_selection_controller_test_api.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_selection_controller_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_selection_magnifier_aura.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Duration of the animation when updating magnifier bounds.',
  ' Size of the zoomed contents, which excludes border and shadows.',
  ' Offset to apply to the magnifier bounds so that the magnifier is shown\n' +
    ' vertically above the caret (or selection endpoint). The offset specifies\n' +
    ' vertical displacement from the the top of the caret to the bottom of the\n' +
    " magnifier's zoomed contents. Note that it is negative since the bottom of the\n" +
    ' zoomed contents should be above the top of the caret.',
  ' Shadows to draw around the zoomed contents.\n' +
    ' TODO(b/299966070): Try to unify this with how other shadows are handled.',
  ' The space outside the zoom layer needed for shadows.',
  ' Bounds of the zoom layer in coordinates of its parent. These zoom layer\n' +
    ' bounds are fixed since we only update the bounds of the parent magnifier\n' +
    ' layer when the magnifier moves.',
  ' Size of the border layer, which includes space for the zoom layer and\n' +
    ' surrounding border and shadows.',
  ' Gets the bounds at which to show the magnifier layer. We try to horizontally\n' +
    ' center the magnifier above `anchor_point`, but adjust if needed to keep it\n' +
    ' within the parent bounds. `anchor_point` and returned bounds should be in\n' +
    " coordinates of the magnifier's parent container.",
  ' Gets the center of the source content to be shown in the magnifier. We try to\n' +
    ' center the source content on `focus_center`, but adjust if needed to keep the\n' +
    ' source content within the parent bounds. `focus_center` and returned source\n' +
    " center should be in coordinates of the magnifier's parent container.",
  ' Delegate for drawing the magnifier border and shadows onto the border layer.'
]
touch_selection_magnifier_aura_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that the magnifier is horizontally centered above a vertical caret.',
  ' Tests that the magnifier bounds are updated as a caret moves.',
  ' Tests that the magnifier is adjusted to stay inside the parent layer when\n' +
    ' showing a caret close to the left edge of the parent.',
  ' Tests that the magnifier is adjusted to stay inside the parent layer when\n' +
    ' showing a caret close to the right edge of the parent.',
  ' Tests that the magnifier is adjusted to stay inside the parent layer when\n' +
    ' showing a caret close to the top edge of the parent.',
  ' Tests that the magnifier remains the same size even at the edge of the\n' +
    ' parent layer.',
  ' Tests that the magnifier can be reparented to a different layer if needed.'
]
touch_selection_menu_runner.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_selection_metrics.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Duration of inactivity after which we consider a touch selection session to\n' +
    ' have timed out for the purpose of determining session action count metrics.',
  ' We want to record the touch down count required to get to a successful cursor\n' +
    " placement or selection, but it's hard to know if this has happened. We'll\n" +
    ' just consider a session to be successful if it ends in a character key event\n' +
    ' or an IME fabricated key event (e.g. from the ChromeOS virtual keyboard).'
]
touch_selection_metrics_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
accessibility_alert_window.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
accessibility_alert_window_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
accessibility_paint_checks.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40185544): Enable these DCHECKs on ash. One of the current\n' +
    ' failures seem to be SearchResultPageView marking itself as ignored\n' +
    ' (temporarily), which marks focusable children as ignored. One way of enabling\n' +
    ' these here would be to turn `kSkipAccessibilityPaintChecks` into a cascading\n' +
    ' property or introduce a cascading property specifically for the current\n' +
    ' misbehavior in SearchResultPageView to be able to suppress that and enable\n' +
    ' the DCHECK elsewhere.'
]
accessibility_paint_checks_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test that a view that is not accessible will fail the accessibility audit.'
]
atomic_view_ax_tree_manager.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
atomic_view_ax_tree_manager_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_aura_obj_cache.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class which observes the destruction of the a11y override window. Done here\n' +
    ' since adding Window and WindowObserver includes are not allowed in the\n' +
    ' header.'
]
ax_aura_obj_cache_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper for the ViewDestruction test.',
  ' Test that stale cache entries are not left behind if a cache entry is\n' +
    ' re-created during View destruction.'
]
ax_aura_obj_wrapper.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_event_manager.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_event_observer.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_root_obj_wrapper.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_system_caret_win_interactive_uitest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' TODO(crbug.com/40820766): This test is flaky.'
]
ax_tree_source_views.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_source_views_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TestAXTreeSourceViews provides a root with a default tree ID.',
  ' Tests that no use-after-free when a focused child window is destroyed in\n' +
    ' desktop aura widget.'
]
ax_view_obj_wrapper.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_virtual_view.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tracks all virtual ax views.',
  ' static',
  ' static',
  ' ui::AXPlatformNodeDelegate',
  ' Virtual views need to implement this function in order for accessibility\n' +
    ' events to be routed correctly.'
]
ax_virtual_view_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The focusable state of a virtual view should not depend on the focusable\n' +
    ' state of the real view ancestor, however the enabled state should.',
  ' Verify that virtual views with invisible ancestors inherit the\n' +
    ' ax::mojom::State::kInvisible state.',
  ' Test for GetTargetForNativeAccessibilityEvent().'
]
ax_virtual_view_wrapper.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_widget_obj_wrapper.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_window_obj_wrapper.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Fires |event| on the |window|, and the Widget and RootView associated with\n' +
    ' |window|.',
  ' Fires location change events on a window, taking into account its\n' +
    " associated widget, that widget's root view, and descendant windows."
]
test_list_grid_view.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_accessibility.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
view_accessibility_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Need to rebase to use this function.'
]
view_accessibility_utils.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static'
]
view_ax_platform_node_delegate.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Information required to fire a delayed accessibility event.',
  ' g_is_queueing_events is set to true when we are in the "queueing events"\n' +
    ' state. It is set to true in PostFlushEventQueueTaskIfNecessary(), and\n' +
    ' is set to false once we start the async task FlushQueue().\n' +
    ' This allows us to delay an event while preserving ordering by\n' +
    ' queueing events rather than firing them immediately, allowing us to\n' +
    ' queue any event that is fired after PostFlushEventQueueTaskIfNecessary()\n' +
    ' is called, until we begin to flush events.',
  ' g_is_flushing is true only when we are iterating over g_event_queue in\n' +
    ' FlushQueue(). While flushing, no new events should be added to the queue, see\n' +
    ' https://crbug.com/358404368',
  ' Used to determine if a View should be ignored by accessibility clients by\n' +
    ' being a non-keyboard-focusable child of a keyboard-focusable ancestor. E.g.,\n' +
    " LabelButtons contain Labels, but a11y should just show that there's a button.",
  ' Since AtomicViewAXTreeManager only ever contains a single node, we can be\n' +
    ' sure that we are in a leaf node and only need to return a text position.',
  ' TODO(accessibility): This function should call AXNode::IsReadOnlySupported\n' +
    ' instead, just like in BrowserAccessibility, but ViewAccessibility objects\n' +
    " don't have a corresponding AXNode yet.",
  ' TODO(accessibility): This function should call AXNode::IsReadOnlyOrDisabled\n' +
    ' instead, just like in BrowserAccessibility, but ViewAccessibility objects\n' +
    " don't have a corresponding AXNode yet."
]
view_ax_platform_node_delegate_auralinux.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Return the widget of any parent window of |widget|, first checking for\n' +
    ' transient parent windows.',
  ' Return the toplevel widget ancestor of |widget|, including widgets of\n' +
    ' parents of transient windows.',
  ` ATK requires that we have a single root "application" object that's the\n` +
    ' owner of all other windows. This is a simple class that implements the\n' +
    ' AXPlatformNodeDelegate interface so we can create such an application\n' +
    ' object. Every time we create an accessibility object for a View, we add its\n' +
    ' top-level widget to a vector so we can return the list of all top-level\n' +
    ' windows as children of this application object.',
  ' static'
]
view_ax_platform_node_delegate_auralinux_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Tests if atk_object_get_index_in_parent doesn't DCHECK after the\n" +
    ' corresponding View is removed from a widget->'
]
view_ax_platform_node_delegate_mac_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_ax_platform_node_delegate_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verify Views with invisible ancestors have ax::mojom::State::kInvisible.',
  ' Verify Views with invisible ancestors have correct values for\n' +
    ' IsInvisibleOrIgnored().',
  " Check if the destruction of the widget ends successfully if |view|'s\n" +
    ' visibility changed during destruction.'
]
view_ax_platform_node_delegate_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
view_ax_platform_node_delegate_win_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Whether |left| represents the same COM object as |right|.',
  ' A subclass of ViewAXPlatformNodeDelegateWinTest that we run twice,\n' +
    ' first where we create an transient child widget (child = false), the second\n' +
    ' time where we create a child widget (child = true).',
  ' Flaky on Windows: https://crbug.com/461837.',
  ' Test trying to retrieve child widgets during window close does not crash.\n' +
    ' TableView tests.',
  ' Needs to be in the views namespace.'
]
views_utilities_aura.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
widget_ax_tree_id_map.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
accessible_pane_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Create tiny subclass of FocusSearch that overrides GetParent and Contains,\n' +
    ' delegating these to methods in AccessiblePaneView. This is needed so that\n' +
    ' subclasses of AccessiblePaneView can customize the focus search logic and\n' +
    " include views that aren't part of the AccessiblePaneView's view\n" +
    ' hierarchy in the focus order.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' View overrides:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' FocusChangeListener overrides:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' FocusTraversable overrides:'
]
accessible_pane_view_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(alicet): bring pane rotation into views and add tests.\n' +
    '               See browser_view.cc for details.',
  ' TODO(crbug.com/40832756): Re-enable this test'
]
action_view_controller.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
action_view_controller_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' More specific functionalities are tested for each individual\n' +
    ' ActionViewInterface.',
  ' Test reassigning action item.',
  ' Test reassigning action view.',
  ' Test that a destroyed view does not cause crashes when action item change\n' +
    ' triggered.'
]
action_view_interface.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
animation_abort_handle.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
animation_builder.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
animation_builder_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Configures the layer animation on `layer_owner` and returns the builder.',
  ' This test builds two animation sequences and checks that the properties are\n' +
    ' animated in the specified durations.',
  ' This test checks that after setting the animation duration scale to be larger\n' +
    ' than 1, animations behave as expected of that scale.',
  ' This test checks that after setting the animation duration scale to be\n' +
    ' between 0 and 1, animations behave as expected of that scale.',
  ' This test checks that after setting the animation duration scale to be 0,\n' +
    ' animations behave as expected of that scale.',
  ' This test checks that the callback supplied to .OnEnded is not called before\n' +
    ' all sequences have finished running. This test will crash if .OnEnded is\n' +
    ' called prematurely.',
  ' Verify that destroying the layers tracked by the animation abort handle\n' +
    ' before the animation ends should not cause any crash.',
  ' Verify that destroying layers tracked by the animation abort handle when\n' +
    ' the animation ends should not cause any crash.',
  ' Verify that destroying layers tracked by the animation abort handle when\n' +
    ' the animation is aborted should not cause any crash.',
  ' This test checks that repeat callbacks are called after each sequence\n' +
    ' repetition and callbacks from one sequence do not affect calls from another\n' +
    ' sequence.',
  ' We use these notations to illustrate the tested timeline,\n' +
    ' Pause:    ---|\n' +
    ' KeyFrame: -->|\n' +
    ' Repeat:  [...]\n' +
    ' Opacity ---|-->|',
  ' Opacity -->|-->|',
  ' Opacity -->|---|-->|',
  ' Opacity        -->|\n RoundedCorners ----->|',
  ' Opacity        ----->|\n RoundedCorners    ----->|',
  ' Opacity        ----->|---|-->|\n RoundedCorners     ----->|-->|',
  ' Opacity [-->|-->]',
  ' Opacity [-->|-->|   ]',
  ' Opacity        [-->|-->]\n RoundedCorners [-->|-->]',
  ' Opacity        -->|-->|\n RoundedCorners   -->|-->|',
  ' Opacity        -->|-->|\n RoundedCorners   -->|',
  ' Opacity        [-->|-->  ]\n RoundedCorners [-->|---->]',
  ' Opacity -->|-->|--> with a loop for setting these blocks.',
  ' Verifies that configuring layer animations with an animation builder returned\n' +
    ' from a function works as expected.',
  ' Verifies that it is disallowed to animate transform using both\n' +
    ' `SetInterpolatedTransform()` and `SetTransform()` in the same block on the\n' +
    ' same target.',
  ' Verifies that transform can be animated using `SetInterpolatedTransform()`.'
]
animation_delegate_views.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
animation_sequence_block.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bounds_animator.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This should be after all other #includes.'
]
bounds_animator_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' Checks animate view to.',
  ' Make sure that removing/deleting a child view while animating stops the\n' +
    " view's animation and will not result in a crash.",
  ' Make sure an AnimationDelegate is deleted when canceled.',
  ' Make sure that the AnimationDelegate of the running animation is deleted when\n' +
    ' a new animation is scheduled.',
  ' Make sure that the duplicate animation request does not interrupt the running\n' +
    ' animation.',
  ' Make sure that a duplicate animation request that specifies a different\n' +
    ' delegate swaps out that delegate.',
  ' Makes sure StopAnimating works.',
  ' Make sure Complete completes in-progress animations.',
  ' Verify that transform is used when the animation target bounds have the\n' +
    " same size with the current bounds' meanwhile having the transform option\n" +
    ' enabled.',
  ' Verify that transform is not used when the animation target bounds have the\n' +
    " different size from the current bounds' even if transform is preferred.",
  " Tests that the transforms option does not crash when a view's bounds start\n" +
    ' off empty.',
  ' Tests that when using the transform option on the bounds animator, cancelling\n' +
    ' the animation part way results in the correct bounds applied.',
  ' Test that when using the transform option on the bounds animator, cancelling\n' +
    ' the animation part way under RTL results in the correct bounds applied.',
  ' Verify that the bounds animation which updates the transform of views work\n' +
    ' as expected under RTL (https://crbug.com/1067033).'
]
bubble_slide_animator.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bubble_slide_animator_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This will be the size of the three horizontally-oriented anchor views as well\n' +
    ' as the target size for the floating view.',
  ' Make this big enough that even if we anchor to a third view horizontally, no\n' +
    ' mirroring should happen.'
]
compositor_animation_runner.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' CompositorAnimationRunner'
]
compositor_animation_runner_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test AnimationDelegateView which has a non-zero expected animation duration\n' +
    ' time, which is required for getting smoothness reports.',
  ' Tests that ui::ThroughputTracker will report for gfx::Animation. Only\n' +
    ' supported on ChromeOS.',
  ' No DesktopAura on ChromeOS.\n' +
    ' Each widget on MACOSX has its own ui::Compositor.'
]
flood_fill_ink_drop_ripple.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The minimum radius to use when scaling the painted layers. Smaller values\n' +
    ' were causing visual anomalies.',
  ' Returns the InkDropState sub animation duration for the given |state|.'
]
flood_fill_ink_drop_ripple_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verifies that both going directly from HIDDEN to ACTIVATED state and going\n' +
    ' through PENDING to ACTIVAED state lead to the same final opacity and\n' +
    ' transform values.'
]
ink_drop.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(pbos): Remove this by changing the constructor parameters to\n' +
    ' InkDropImpl.'
]
ink_drop_animation_ended_reason.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ink_drop_event_handler.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ink_drop_highlight.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The opacity of the highlight when it is not visible.'
]
ink_drop_highlight_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Confirms there is no crash.',
  ' Verify animations are aborted during deletion and the\n' +
    ' InkDropHighlightObservers are notified.',
  " Confirms a zero sized highlight doesn't crash."
]
ink_drop_host.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
ink_drop_host_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verifies the return value of GetInkDropCenterBasedOnLastEvent() for a null\n' +
    ' Event.',
  ' Verifies the return value of GetInkDropCenterBasedOnLastEvent() for a located\n' +
    ' Event.',
  ' Verifies that mouse events trigger ink drops when ink drop mode is ON.',
  ' Verifies that mouse events trigger ink drops when ink drop mode is\n' +
    ' ON_NO_GESTURE_HANDLER.',
  ' Verifies that mouse events do not trigger ink drops when ink drop mode is\n' +
    ' OFF.',
  ' Verifies that ink drops are not shown when the host is disabled.',
  ' Verifies that ink drops are not triggered by gesture events when ink drop\n' +
    ' mode is ON_NO_GESTURE_EVENT or OFF.',
  ' Verifies that calling OnInkDropHighlightedChanged() triggers a property\n' +
    ' changed notification for the highlighted property.',
  ' A very basic View that hosts an InkDrop.',
  ' Tests the existence of layer clipping or layer masking when certain path\n' +
    ' generators are applied on an InkDropHost.',
  ' Tests that by default (no highlight path generator applied), the root layer\n' +
    ' will be masked.',
  ' Tests that when adding a non empty highlight path generator, the root layer\n' +
    ' is clipped instead of masked.',
  ' An empty highlight path generator is used for views who do not want their\n' +
    " highlight or ripple constrained by their size. Test that the views' ink\n" +
    ' drop root layers have neither a clip or mask.',
  ' This fixture tests attention state.'
]
ink_drop_impl.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The duration for the highlight state fade in/out animations when they are\n' +
    ' triggered by a hover changed event.',
  ' The duration for the highlight state fade in/out animations when they are\n' +
    ' triggered by a focus changed event.',
  ' The duration for showing/hiding the highlight when triggered by ripple\n' +
    ' visibility changes for the HIDE_ON_RIPPLE AutoHighlightMode.',
  ' The duration for showing/hiding the highlight when triggered by ripple\n' +
    ' visibility changes for the SHOW_ON_RIPPLE AutoHighlightMode.',
  ' The amount of time that |highlight_| should delay after a ripple animation\n' +
    ' before fading in, for highlight due to mouse hover.',
  ' Returns true if an ink drop with the given |ink_drop_state| should\n' +
    ' automatically transition to the InkDropState::HIDDEN state.',
  ' HighlightState definition',
  ' A HighlightState to be used during InkDropImpl destruction. All event\n' +
    ' handlers are no-ops so as to avoid triggering animations during tear down.\n' +
    ' AutoHighlightMode::NONE states',
  ' Animates the highlight to hidden upon entering this state. Transitions to a\n' +
    ' visible state based on hover/focus changes.',
  ' Animates the highlight to visible upon entering this state. Transitions to a\n' +
    ' hidden state based on hover/focus changes.',
  ' NoAutoHighlightHiddenState definition',
  ' NoAutoHighlightVisibleState definition\n' +
    ' AutoHighlightMode::HIDE_ON_RIPPLE states',
  ' Extends the base hidden state to re-show the highlight after the ripple\n' +
    ' becomes hidden.',
  ' Extends the base visible state to hide the highlight when the ripple becomes\n' +
    ' visible.',
  ' HideHighlightOnRippleHiddenState definition',
  ' HideHighlightOnRippleVisibleState definition\n' +
    ' AutoHighlightMode::SHOW_ON_RIPPLE states',
  ' Extends the base hidden state to show the highlight when the ripple becomes\n' +
    ' visible.',
  ' Extends the base visible state to hide the highlight when the ripple becomes\n' +
    ' hidden.',
  ' ShowHighlightOnRippleHiddenState definition',
  ' ShowHighlightOnRippleVisibleState definition',
  ' -----------------------------------------------------------------------------\n' +
    ' views::InkDropRippleObserver:',
  ' -----------------------------------------------------------------------------\n' +
    ' views::InkDropHighlightObserver:'
]
ink_drop_impl_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' NOTE: The InkDropImpl class is also tested by the InkDropFactoryTest tests.',
  ' AutoHighlightMode parameterized test fixture.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' InkDropImpl tests',
  " Test that (re-)hiding or un-hovering a hidden ink drop doesn't add layers.",
  ' Verifies there are no use after free errors.',
  ' Tests that if during destruction, a ripple animation is successfully ended,\n' +
    ' no crash happens (see https://crbug.com/663579).',
  ' Make sure the InkDropRipple and InkDropHighlight get recreated when the host\n' +
    ' size changes (https:://crbug.com/899104).',
  ' Make sure the InkDropRipple and InkDropHighlight get recreated when the host\n' +
    ' theme changes.',
  " Verifies that the host's GetHighlighted() method reflects the ink drop's\n" +
    ' highlight state, and when the state changes the ink drop notifies the host.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Common AutoHighlightMode tests',
  ' Note: First argument is optional and intentionally left blank.\n' +
    " (it's a prefix for the generated test cases)",
  ' Verifies InkDropImplTestApi::SetShouldHighlight() works as expected.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' InkDropImpl::AutoHighlightMode::NONE specific tests',
  ' Note: First argument is optional and intentionally left blank.\n' +
    " (it's a prefix for the generated test cases)",
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' InkDropImpl::AutoHighlightMode::HIDE_ON_RIPPLE specific tests',
  ' Note: First argument is optional and intentionally left blank.\n' +
    " (it's a prefix for the generated test cases)",
  ' Verifies there is no crash when animations are started during the destruction\n' +
    ' of the InkDropRipple. See https://crbug.com/663335.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' InkDropImpl::AutoHighlightMode::SHOW_ON_RIPPLE specific tests',
  ' Note: First argument is optional and intentionally left blank.\n' +
    " (it's a prefix for the generated test cases)"
]
ink_drop_mask.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ink_drop_mask_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ink_drop_painted_layer_delegates.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' BasePaintedLayerDelegate',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' CircleLayerDelegate',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' RectangleLayerDelegate',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' RoundedRectangleLayerDelegate',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' BorderShadowLayerDelegate'
]
ink_drop_ripple.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ink_drop_ripple_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents all the derivatives of the InkDropRipple class. To be used with\n' +
    ' the InkDropRippleTest fixture to test all derviatives.',
  ' Test fixture for all InkDropRipple class derivatives.\n' +
    ' To add a new derivative:\n' +
    '    1. Add a value to the InkDropRippleTestTypes enum.\n' +
    '    2. Implement set up and tear down code for the new enum value in\n' +
    '       InkDropRippleTest() and\n' +
    '      ~InkDropRippleTest().\n' +
    '    3. Add the new enum value to the INSTANTIATE_TEST_SUITE_P) Values list.',
  ' Note: First argument is optional and intentionally left blank.\n' +
    " (it's a prefix for the generated test cases)",
  ' Verify no animations are used when animating from HIDDEN to HIDDEN.',
  ' Verify animations are aborted during deletion and the\n' +
    ' InkDropRippleObservers are notified.',
  ' Verifies all active animations are aborted and the InkDropState is set to\n' +
    ' HIDDEN after invoking SnapToHidden().',
  ' Verifies all active animations are aborted and the InkDropState is set to\n' +
    ' ACTIVATED after invoking SnapToActivated().',
  ' Verifies that the value of InkDropRipple::target_ink_drop_state() returns\n' +
    ' the most recent value passed to AnimateToState() when notifying observers\n' +
    ' that an animation has started within the AnimateToState() function call.',
  ' Verifies that the value of InkDropRipple::target_ink_drop_state() returns\n' +
    ' the most recent value passed to AnimateToState() when notifying observers\n' +
    ' that an animation has ended within the AnimateToState() function call.',
  ' Verifies that when an we ink drop transitions from ACTION_PENDING to\n' +
    ' ACTIVATED state, animation observers are called in order.'
]
ink_drop_state.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ink_drop_stub.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ink_drop_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Enumeration of all the different InkDrop types.',
  ' Note: First argument is optional and intentionally left blank.\n' +
    " (it's a prefix for the generated test cases)",
  " Ensure that the inkdrop tracks its parent View's bounds, even if the parent\n" +
    ' has its own layout manager.'
]
ink_drop_util.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
pulsing_ink_drop_mask.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Cycle duration of ink drop pulsing animation used for in-product help.',
  ' Max inset for pulsing animation.'
]
scroll_animator.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Assumes that d0 == 0.0f'
]
slide_out_controller.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' When we have a swipe control, we will close the target if it is slid more\n' +
    ' than this amount plus the width of the swipe control.'
]
slide_out_controller_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test class for making sure trackpad gestures work to trigger slide out\n' +
    ' events.'
]
square_ink_drop_ripple.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The minimum scale factor to use when scaling rectangle layers. Smaller values\n' +
    ' were causing visual anomalies.',
  ' The minimum scale factor to use when scaling circle layers. Smaller values\n' +
    ' were causing visual anomalies.',
  ' All the sub animations that are used to animate each of the InkDropStates.\n' +
    ' These are used to get time durations with\n' +
    ' GetAnimationDuration(InkDropSubAnimations). Note that in general a sub\n' +
    ' animation defines the duration for either a transformation animation or an\n' +
    ' opacity animation but there are some exceptions where an entire InkDropState\n' +
    ' animation consists of only 1 sub animation and it defines the duration for\n' +
    ' both the transformation and opacity animations.',
  ' The scale factor used to burst the ACTION_TRIGGERED bubble as it fades out.',
  ' Returns the InkDropState sub animation duration for the given |state|.'
]
square_ink_drop_ripple_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
flood_fill_ink_drop_ripple_test_api.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ink_drop_highlight_test_api.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ink_drop_host_test_api.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ink_drop_impl_test_api.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' AccessFactoryOnExitHighlightState\n' +
    ' AccessFactoryOnExitHighlightState\n' +
    ' InkDropImplTestApi'
]
ink_drop_ripple_test_api.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ink_drop_utils.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
square_ink_drop_ripple_test_api.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_ink_drop.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_ink_drop_highlight_observer.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_ink_drop_host.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test specific subclass of InkDropRipple that returns a test api from\n' +
    ' GetTestApi().',
  ' Test specific subclass of InkDropHighlight that returns a test api from\n' +
    ' GetTestApi().'
]
test_ink_drop_ripple_observer.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
widget_fade_animator.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
widget_fade_animator_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
background.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' SolidBackground is a trivial Background implementation that fills the\n' +
    ' background in a solid color.',
  ' Shared class for RoundedRectBackground and ThemedRoundedRectBackground.',
  ' RoundedRectBackground is a filled solid colored background that has\n' +
    ' rounded corners.',
  " ThemedVectorIconBackground is an image drawn on the view's background using\n" +
    ' ThemedVectorIcon to react to theme changes.',
  " ThemedSolidBackground is a solid background that stays in sync with a view's\n" +
    ' ColorProvider.',
  ' ThemedRoundedRectBackground is a solid rounded rect background that stays in\n' +
    " sync with a view's ColorProvider."
]
badge_painter.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the highlight rect for the badge given the font and text rect\n' +
    ' for the badge text.',
  ' static',
  ' static'
]
border.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A simple border with different thicknesses on each side and single color.',
  ' A border with a rounded rectangle and single color.'
]
border_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Simple Painter that will be used to test BorderPainter.'
]
bubble_border.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' GetShadowValues and GetBorderAndShadowFlags cache their results. The shadow\n' +
    ' values depend on the shadow elevation, color and shadow type, so we create a\n' +
    ' tuple to key the cache.',
  ' The shadow type for default shadow colors.',
  ' static',
  ' static',
  ' static'
]
bubble_border_arrow_utils.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bubble_border_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test that the correct arrow size is returned for a given arrow position.',
  ' Test that the contents bounds are moved correctly to place the visible arrow\n' +
    ' at the appropriate position.'
]
bubble_dialog_delegate_view.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Some anchors may have multiple bubbles associated with them. This can happen\n' +
    ' if a bubble does not have close_on_deactivate and another bubble appears\n' +
    ' that needs the same anchor view. This property maintains a vector of bubbles\n' +
    ' in anchored order where the last item is the primary anchored bubble. If the\n' +
    ' last item is removed, the new last item, if available, is notified that it is\n' +
    ' the new primary anchored bubble.',
  ' Override base functionality of Widget to give bubble dialogs access to the\n' +
    " theme provider of the window they're anchored to.",
  ' The frame view for bubble dialog widgets. These are not user-sizable so have\n' +
    ' simplified logic for minimum and maximum sizes to avoid repeated calls to\n' +
    ' CalculatePreferredSize().',
  ' Create a widget to host the bubble.',
  " This class is responsible for observing events on a BubbleDialogDelegate's\n" +
    ' anchor widget and notifying the BubbleDialogDelegate of them.',
  " This class is responsible for observing events on a BubbleDialogDelegate's\n" +
    ' widget and notifying the BubbleDialogDelegate of them.',
  ' static',
  ' static',
  ' static',
  ' Instantiate template function to be able to use in views_unittests.'
]
bubble_dialog_delegate_view_interactive_uitest_aura.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bubble_dialog_delegate_view_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A Widget that returns something other than null as its ThemeProvider.  This\n' +
    ' allows us to see whether the theme provider returned by some object came from\n' +
    ' this widget.',
  ' This test checks that the bubble delegate is capable to handle an early\n' +
    ' destruction of the used anchor view. (Animations and delayed closure of the\n' +
    ' bubble will call upon the anchor view to get its location).',
  ' Testing that a move of the anchor view will lead to new bubble locations.',
  ' Test that setting WidgetDelegate::SetCanActivate() to false makes the\n' +
    ' widget created via BubbleDialogDelegateView::CreateBubble() not activatable.',
  ' Ensure the BubbleFrameView correctly resizes when the title is provided by a\n' +
    ' StyledLabel.',
  ' Ensure associated buttons are highlighted or unhighlighted when the bubble\n' +
    ' widget is shown or hidden respectively.',
  ' Ensure associated buttons are highlighted or unhighlighted when the bubble\n' +
    ' widget is shown or hidden respectively when highlighted button is set after\n' +
    ' widget is shown.',
  ' When the anchor rect is positioned at different places Rect(x, y,\n' +
    ' kAnchorLength, kAnchorLength) with (x,y) set to far corners of the screen,\n' +
    ' available space to position the bubble should vary acc. to\n' +
    ' |adjust_if_offscreen_|.',
  ' Tests whether the BubbleDialogDelegateView will create a layer backed\n' +
    ' ClientView when SetPaintClientToLayer is set to true.',
  ' Tests to ensure BubbleDialogDelegateView does not create a layer backed\n' +
    ' ClientView when SetPaintClientToLayer is set to false.',
  ' Anchoring Tests -------------------------------------------------------------',
  ' Provides functionality for testing bubble anchoring logic.\n' +
    ' Deriving from widget test provides some nice out-of-the-box functionality for\n' +
    ' creating and managing widgets.',
  ' Tests that if the anchor view has kWidgetForAnchoringKey property,\n' +
    ' uses that widget for anchoring.'
]
bubble_dialog_model_host.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Extra margin to be added to contents view when it's inside a scroll view.",
  ' A subclass of Checkbox that allows using an external Label/StyledLabel view\n' +
    " instead of LabelButton's internal label. This is required for the\n" +
    ' Label/StyledLabel to be clickable, while supporting Links which requires a\n' +
    ' StyledLabel.',
  ' TODO(pbos): Consider externalizing this functionality into a different\n' +
    ' format that could feasibly be adopted by LayoutManagers. This is used for\n' +
    " BoxLayouts (but could be others) to agree on columns' preferred width as a\n" +
    ' replacement for using GridLayout.'
]
bubble_dialog_model_host_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(pbos): Consider moving tests from this file into a test base for\n' +
    ' DialogModel that can be instantiated by any DialogModelHost implementation to\n' +
    ' check its compliance.',
  ' WeakPtrs to this delegate is used to infer when DialogModel is destroyed.'
]
bubble_dialog_utils.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bubble_frame_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Get the |vertical| or horizontal amount that |available_bounds| overflows\n' +
    ' |window_bounds|.',
  ' The height of the progress indicator shown at the top of the bubble frame\n' +
    ' view.',
  ' static',
  ' static',
  ' static',
  ' static'
]
bubble_frame_view_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These account for non-client areas like the title bar, footnote etc. However\n' +
    ' these do not take the bubble border into consideration.',
  ' Tests that the arrow is mirrored as needed to better fit the screen.',
  ' Tests that the arrow is not moved when the info-bubble does not fit the\n' +
    ' screen but moving it would make matter worse.',
  ' Test that the arrow will not be mirrored when\n' +
    ' |adjust_to_fit_available_bounds| is false.',
  ' Test that the center arrow is moved as needed to fit the screen.',
  " Tests that the arrow is mirrored as needed to better fit the anchor window's\n" +
    ' bounds.',
  ' Tests that the arrow is mirrored as needed to better fit the screen.',
  ' Tests that bubbles with `use_anchor_window_bounds_` set to false will not\n' +
    ' apply an offset to try to make them fit inside the anchor window bounds.',
  " Tests that the arrow is mirrored as needed to better fit the anchor window's\n" +
    ' bounds.',
  ' Tests that the arrow is offset as needed to better fit the window.',
  ' Tests that the arrow is offset as needed to better fit the window for\n' +
    ' windows larger than the available bounds.',
  ' BubbleDialogDelegate with no margins to test width snapping.',
  ' This test ensures that if the installed LayoutProvider snaps dialog widths,\n' +
    ' BubbleFrameView correctly sizes itself to that width.',
  " Tests edge cases when the frame's title view starts to wrap text. This is to\n" +
    ' ensure that the calculations BubbleFrameView does to determine the Widget\n' +
    ' size for a given client view are consistent with the eventual size that the\n' +
    ' client view takes after layout.',
  " Tests edge cases when the frame's title view starts to wrap text when a\n" +
    ' header view is set. This is to ensure the title leaves enough space for the\n' +
    ' close button when there is a header or not.',
  ' Layout tests with Subtitle label.\n' +
    ' This will test adding a Subtitle and wrap-around case for Subtitle.',
  ' Test the size of the bubble allows a |gfx::NO_ELIDE| title to fit, even if\n' +
    ' there is no content.',
  ' Ensures that clicks are ignored for short time after view has been shown.',
  ' Ensures that clicks are ignored for short time after view has been shown.',
  ' Ensures that clicks are ignored for short time after anchor view bounds\n' +
    ' changed.',
  ' Ensures that layout is correct when the progress indicator is visible.',
  ' Close should be the next element after minimize.'
]
footnote_container_view.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A solid color background where the bottom two corners are rounded.'
]
info_bubble.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The visible width of bubble borders (differs from the actual width) in px.'
]
info_bubble_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ensure the InfoBubble is still sized if not supplied with a preferred width.',
  ' Iterate through the metadata for InfoBubble to ensure it all works.'
]
tooltip_icon.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
tooltip_icon_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
button_drag_utils.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Maximum width of the link drag image in pixels.'
]
cascading_property.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fullscreen_controller_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Fake implementation of FullscreenControllerSetFrame\n' +
    ' which executes the given callback immediately.',
  ' Simple enter-and-exit fullscreen via the green traffic light button.',
  ' Simple enter-and-exit fullscreen programmatically.',
  ' A transition that fails to enter fullscreen.',
  ' A transition that fails to exit fullscreen.',
  ' A simple cross-screen transition.',
  ' A cross-screen transition after having entered fullscreen.',
  ' Fail a cross-screen transition when exiting fullscreen.',
  ' Fail a cross-screen transition when entering fullscreen.',
  ' Be instructed to exit fullscreen while entering fullscreen.',
  ' Be instructed to enter fullscreen while exiting fullscreen.',
  ' Be instructed to enter fullscreen on a different screen, while exiting\n' +
    ' fullscreen.',
  ' Be instructed to enter fullscreen on a different screen, while entering\n' +
    ' fullscreen.',
  ' Be instructed to enter fullscreen while restoring the windowed frame.'
]
color_chooser_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' Very quick HSV primer for those unfamiliar with it:\n' +
    ' It helps to think of HSV like this:\n' +
    '   h is in (0,360) and draws a circle of colors, with r = 0, b = 120, g = 240\n' +
    '   s is in (0,1) and is the distance from the center of that circle - higher\n' +
    '     values are more intense, with s = 0 being white, s = 1 being full color\n' +
    ' and then HSV is the 3d space caused by projecting that circle into a\n' +
    ' cylinder, with v in (0,1) being how far along the cylinder you are; v = 0 is\n' +
    ' black, v = 1 is full color intensity',
  ' Missing tests, TODO:\n' +
    ' TEST_F(ColorChooserTest, SatValueChooserChangesSatValue)\n' +
    ' TEST_F(ColorChooserTest, UpdateFromWebUpdatesShownValues)\n' +
    ' TEST_F(ColorChooserTest, AdjustingTextAffectsHue)\n' +
    ' TEST_F(ColorChooserTest, AdjustingTextAffectsSatValue)'
]
color_chooser_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A view that processes mouse events and gesture events using a common\n' +
    ' interface.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' HueView\n' +
    ' The class to choose the hue of the color.  It draws a vertical bar and\n' +
    ' the indicator for the currently selected hue.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' SaturationValueView\n' +
    ' The class to choose the saturation and the value of the color.  It draws\n' +
    ' a square area and the indicator for the currently selected saturation and\n' +
    ' value.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' SelectedColorPatchView\n' +
    ' A view to simply show the selected color in a rectangle.'
]
context_menu_controller.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
animated_image_view.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
animated_image_view_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
badge.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
base_control_test_widget.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bulleted_label_list_view.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
button.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' We need to implement this one manually because the default move assignment\n' +
    ' operator does not call the destructor on `this`. That leads to us failing to\n' +
    ' release our reference on `button_`.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' On Mac, buttons should not request focus on a mouse press. Hence keep the\n' +
    ' default value i.e. false.'
]
button_controller.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
button_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' No-op test double of a ContextMenuController.',
  ' Iterate through the metadata for Button to ensure it all works.',
  ' Tests that hover state changes correctly when visibility/enableness changes.',
  ' Disabling cursor events occurs for touch events and the Ash magnifier. There\n' +
    ' is no touch on desktop Mac. Tracked in http://crbug.com/445520.',
  ' Tests that the hover state is preserved during a view hierarchy update of a\n' +
    " button's child View.",
  ' Tests the different types of NotifyActions.',
  ' Tests that OnClickCanceled gets called when NotifyClick is not expected\n' +
    ' anymore.',
  ' No touch on desktop Mac. Tracked in http://crbug.com/445520.',
  ' Tests that gesture events correctly change the button state.',
  ' Tests that if the button was disabled in its button press handler, gesture\n' +
    ' events will not revert the disabled state back to normal.\n' +
    ' https://crbug.com/1084241.',
  ' Ensure subclasses of Button are correctly recognized as Button.',
  ' Tests that pressing a button shows the ink drop and releasing the button\n' +
    ' does not hide the ink drop.\n' +
    ' Note: Ink drop is not hidden upon release because Button descendants\n' +
    ' may enter a different ink drop state.',
  ' Tests that pressing a button shows and releasing capture hides ink drop.\n' +
    ' Releasing capture should also reset PRESSED button state to NORMAL.',
  ' Tests that when button is set to notify on release, dragging mouse out and\n' +
    ' back transitions ink drop states correctly.',
  ' Tests that when button is set to notify on press, dragging mouse out and back\n' +
    ' does not change the ink drop state.',
  ' Ensure PressedCallback is dynamically settable.',
  ' VisibilityTestButton tests to see if an ink drop or a layer has been added to\n' +
    ' the button at any point during the visibility state changes of its Widget.',
  " Test that hiding or closing a Widget doesn't attempt to add a layer due to\n" +
    ' changed visibility states.',
  ' Verify that the Space key clicks the button on key-press on Mac, and\n' +
    ' key-release on other platforms.',
  ' Verify that the Return key clicks the button on key-press on all platforms\n' +
    ' except Mac. On Mac, the Return key performs the default action associated\n' +
    ' with a dialog, even if a button has focus.',
  ' Verify that a subclass may customize the action for a key pressed event.',
  ' Verifies that button activation highlight state changes trigger property\n' +
    ' change callbacks.',
  ' Verifies that button state changes trigger property change callbacks.',
  ' Verifies that direct calls to Button::SetState() trigger property change\n' +
    ' callbacks.',
  ' Verifies setting the tooltip text will call NotifyAccessibilityEvent.'
]
checkbox.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
checkbox_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_button.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Default button size if no image is set. This is ignored if there is an image,\n' +
    ' and exists for historical reasons (any number of clients could depend on this\n' +
    ' behaviour).',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' ImageButton, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' ImageButton, View overrides:',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' ImageButton, protected:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' ImageButton, private:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' ToggleImageButton, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' ToggleImageButton, ImageButton overrides:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' ToggleImageButton, View overrides:'
]
image_button_factory.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_button_factory_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_button_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
label_button.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
label_button_border.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The text-button hot and pushed image IDs; normal is unadorned by default.',
  ' A helper function to paint the appropriate broder images.',
  ' static'
]
label_button_image_container.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
label_button_label.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
label_button_label_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' LabelButtonLabel subclass that reports its text color whenever a paint is\n' +
    ' scheduled.',
  ' Test that LabelButtonLabel reacts properly to themed and overridden colors.',
  ' Test that LabelButtonLabel reacts properly to themed and overridden color\n' +
    ' ids.'
]
label_button_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Testing button that exposes protected methods.',
  " Tests LabelButton's usage of SetMaximumWidthSingleLine.",
  ' Test behavior of ViewAccessibility::GetAccessibleNodeData() for buttons when\n' +
    ' setting a label.',
  ' Test ViewAccessibility::GetAccessibleNodeData() for default buttons.',
  ' This test was added because GetHeightForWidth and GetPreferredSize were\n' +
    ' inconsistent. GetPreferredSize would account for image size + insets whereas\n' +
    " GetHeightForWidth wouldn't. As of writing they share a large chunk of\n" +
    " logic, but this remains in place so they don't diverge as easily.",
  ' Ensure that the text used for button labels correctly adjusts in response\n' +
    ' to provided style::TextContext values.',
  ' Ensure the label gets the correct style when pressed or becoming default.',
  ' Ensure the label resets the enabled color after LabelButton::OnThemeChanged()\n' +
    ' is invoked.',
  ' Test fixture for a LabelButton that has an ink drop configured.',
  ' Verifies the target event handler View is the |LabelButton| and not any of\n' +
    ' the child Views.'
]
md_text_button.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
md_text_button_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
md_text_button_with_down_arrow.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_button.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_button_controller.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' MenuButtonController::PressedLock\n' +
    '//////////////////////////////////////////////////////////////////////////////',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' MenuButtonController\n' +
    '//////////////////////////////////////////////////////////////////////////////'
]
menu_button_controller_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_button_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A Button that will acquire a PressedLock in the pressed callback and\n' +
    ' optionally release it as well.',
  ' Basic implementation of a DragController, to test input behaviour for\n' +
    ' MenuButtons that can be dragged.',
  ' Basic implementation of a DragDropClient, tracking the state of the drag\n' +
    ' operation. While dragging addition mouse events are consumed, preventing the\n' +
    ' target view from receiving them.',
  ' Tests if the callback is called correctly when a mouse click happens on a\n' +
    ' MenuButton.',
  ' Tests that the ink drop center point is set from the mouse click point.',
  ' Tests that the ink drop center point is set from the PressedLock constructor.\n' +
    ' TODO(crbug.com/40903656): Test flaky on MSAN ChromeOS builders.',
  ' Test that the MenuButton stays pressed while there are any PressedLocks.\n' +
    ' TODO(crbug.com/40903656): Test flaky on MSAN ChromeOS builders.',
  ' Test that the MenuButton does not become pressed if it can be dragged, until\n' +
    ' a release occurs.\n' +
    ' TODO(crbug.com/40903656): Test flaky on MSAN ChromeOS builders.',
  ' TODO(crbug.com/40903656): Test flaky on MSAN ChromeOS builders.',
  ' TODO(crbug.com/40903656): Test flaky on MSAN ChromeOS builders.',
  ' TODO(crbug.com/40903656): Test flaky on MSAN ChromeOS builders.',
  ' Verifies only one ink drop animation is triggered when multiple PressedLocks\n' +
    ' are attached to a MenuButton.',
  ' Verifies the InkDropState is left as ACTIVATED if a PressedLock is active\n' +
    ' before another Activation occurs.\n' +
    ' TODO(crbug.com/40903656): Test flaky on MSAN ChromeOS builders.',
  ' Tests that the MenuButton does not become pressed if it can be dragged, and a\n' +
    ' DragDropClient is processing the events.\n' +
    ' TODO(crbug.com/40903656): Test flaky on MSAN ChromeOS builders.',
  ' No touch on desktop Mac. Tracked in http://crbug.com/445520.',
  ' Tests if the callback is notified correctly when a gesture tap happens on a\n' +
    ' MenuButton that has a callback.',
  ' Tests that the button enters a hovered state upon a tap down, before becoming\n' +
    ' pressed at activation.',
  ' Tests that a move event that exits the button returns it to the normal state,\n' +
    ' and that the button did not activate the callback.',
  " This test ensures there isn't a UAF in MenuButton::OnGestureEvent() if the\n" +
    ' button callback deletes the MenuButton.'
]
radio_button.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
radio_button_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Group ID of the test radio buttons.'
]
toggle_button.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constants are measured in dip.',
  ' Class representing the thumb (the circle that slides horizontally).'
]
toggle_button_unittest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Starts ink drop animation on a ToggleButton and destroys the button.\n' +
    ' The test verifies that the ink drop layer is removed properly when the\n' +
    ' ToggleButton gets destroyed.',
  ' Make sure nothing bad happens when the widget is destroyed while the\n' +
    ' ToggleButton has focus (and is showing a ripple).',
  ' Verify that ToggleButton::accepts_events_ works as expected.'
]
combobox.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The transparent button which holds a button state but is not rendered.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Combobox, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Combobox, View overrides:'
]
combobox_menu_model.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Overridden from MenuModel:'
]
combobox_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A concrete class is needed to test the combobox.',
  ' A combobox model which refers to a vector.',
  ' Tests whether the various Mac specific keyboard shortcuts invoke the dropdown\n' +
    ' menu or not.',
  ' Iterate through all the metadata and test each property.',
  ' Check that if a combobox is disabled before it has a native wrapper, then the\n' +
    ' native wrapper inherits the disabled state when it gets created.',
  ' Ensure the border on the combobox is set correctly when Enabled state\n' +
    ' changes.',
  " On Mac, key events can't change the currently selected index directly for a\n" +
    ' combobox.',
  ' Tests the behavior of various keyboard shortcuts on the currently selected\n' +
    ' index.',
  " Verifies that we don't select a separator line in combobox when navigating\n" +
    ' through keyboard.',
  ' Verifies that we never select the separator that is in the beginning of the\n' +
    ' combobox list when navigating through keyboard.',
  ' Verifies that we never select the separator that is in the end of the\n' +
    ' combobox list when navigating through keyboard.',
  ' Verifies that we never select any of the adjacent separators (multiple\n' +
    ' consecutive) that appear in the beginning of the combobox list when\n' +
    ' navigating through keyboard.',
  ' Verifies that we never select any of the adjacent separators (multiple\n' +
    ' consecutive) that appear in the middle of the combobox list when navigating\n' +
    ' through keyboard.',
  ' Verifies that we never select any of the adjacent separators (multiple\n' +
    ' consecutive) that appear in the end of the combobox list when navigating\n' +
    ' through keyboard.',
  ' Verifies selecting the first matching value (and returning whether found).',
  ' Test that accessibility action events show the combobox dropdown.',
  ' Test that ensures that the combobox is resized correctly when selecting\n' +
    ' between indices of different label lengths.',
  ' Test that model updates preserve the selected index, so long as it is in\n' +
    ' range.',
  ' Test properties on the Combobox menu model.',
  ' Verifies SetTooltipTextAndAccessibleName will call NotifyAccessibilityEvent.',
  ' Regression test for crbug.com/1264288.\n' +
    ' Should fail in ASan build before the fix.'
]
combobox_util.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
empty_combobox_model.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dot_indicator.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
editable_combobox.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adapts a ui::ComboboxModel to a ui::MenuModel to be used by EditableCombobox.\n' +
    ' Also provides a filtering capability.',
  ' This class adds itself as the pre-target handler for the RootView of the\n' +
    ' EditableCombobox. We use it to close the menu when press events happen in the\n' +
    " RootView but not inside the EditableComboobox's textfield.",
  ' TODO(crbug.com/329471666): Refactor Textfield to obviate the need for this.'
]
editable_combobox_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' No-op test double of a ContextMenuController',
  ' Initializes the combobox with the given number of items.',
  ' Initializes the combobox with the given items.',
  ' Initializes the widget where the combobox and the dummy control live.',
  ' static',
  ' Flaky on Windows. https://crbug.com/965601',
  ' Flaky on Windows. https://crbug.com/965601',
  ' This is different from the regular read-only Combobox, where SPACE\n' +
    ' opens/closes the menu.',
  ' Flaky on Windows and Linux. https://crbug.com/965601',
  ' We test that the menu can adapt to content change by using an\n' +
    ' EditableCombobox with |filter_on_edit| set to true, which will change the\n' +
    " menu's content as the user types.",
  ' Flaky on Linux. https://crbug.com/1204584'
]
editable_password_combobox.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates the eye-styled icon that serves as a button to toggle the password\n' +
    ' visibility.'
]
editable_password_combobox_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Initializes the combobox with the given items.'
]
focus_ring.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
focus_ring_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Ensure that the focus ring tracks its parent View's bounds, even if the\n" +
    ' parent has its own layout manager.'
]
focusable_border.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
highlight_path_generator.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
image_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_view_base.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_view_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A test utility function to set the application default text direction.',
  ' Test the image origin of the internal ImageSkia is correct when it is\n' +
    ' center-aligned (both horizontally and vertically).',
  ' Verifies setting the accessible name will be call NotifyAccessibilityEvent.'
]
label.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An enum giving different RenderText properties unique keys for the\n' +
    ' OnPropertyChanged call.',
  ' static'
]
label_perftest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test the number of text size measurements that can be made made per second.\n' +
    ' This should surface any performance regressions in underlying text layout\n' +
    ' system, e.g., failure to cache font structures.'
]
label_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' All text sizing measurements (width and height) should be greater than this.',
  ' A test utility function to set the application default text direction.',
  ' Makes an RTL string by mapping 0..6 to [א,ב,ג,ד,ה,ו,ז].',
  ' Test fixture for text selection related tests.',
  ' Test the minimum width of a Label is correct depending on its ElideBehavior,\n' +
    ' including |gfx::NO_ELIDE|.',
  " Verifies if SetAllowCharacterBreak(true) doesn't change the preferred size.\n" +
    ' See crbug.com/469559',
  ' TODO(warx): Remove !BUILDFLAG(IS_MAC) once SetMaxLines() is applied to MAC\n' +
    ' (crbug.com/758720).',
  " Verifies if the combination of text eliding and multiline doesn't cause\n" +
    ' any side effects of size / layout calculation.',
  ' Check that labels support GetTooltipHandlerForPoint.',
  " Check that label releases its internal layout data when it's unnecessary.",
  ' Ensures SchedulePaint() calls are not made in OnPaint().',
  ' Verify that GetSubstringBounds returns the correct bounds, accounting for\n' +
    ' label insets.',
  ' TODO(crbug.com/40725997): Enable on ChromeOS along with the DCHECK in Label.',
  ' Ensures DCHECK for subpixel rendering on transparent layer is working.',
  ' Verify that labels supporting text selection get focus on clicks.',
  ' Verify that labels supporting text selection do not get focus on tab\n' +
    ' traversal by default.',
  ' Verify label text selection behavior on double and triple clicks.',
  ' Verify label text selection behavior on mouse drag.',
  ' Single line fields consider the x offset as well. Ties go to the right.',
  ' Verify the initially selected word on a double click, remains selected on\n' +
    ' mouse dragging.',
  ' TODO(crbug.com/40762193): LabelSelectionTest.SelectionClipboard is failing on\n' +
    ' linux-lacros.',
  ' TODO(crbug.com/40118868): Revisit the macro expression once build flag switch\n' +
    ' of lacros-chrome is complete.',
  ' Verify selection clipboard behavior on text selection.',
  ' Verify that keyboard shortcuts for Copy and Select All work when a selectable\n' +
    ' label is focused.',
  ' Verify the context menu options are enabled and disabled appropriately.'
]
link.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
link_fragment.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
link_fragment_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that hovering and unhovering a link adds and removes an underline\n' +
    ' under all connected fragments.',
  ' Tests that focusing and unfocusing a link keeps the underline and adds a\n' +
    ' focus ring for all connected fragments.'
]
link_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that hovering and unhovering a link adds and removes an underline.',
  ' Tests that focusing and unfocusing a link keeps the underline and adds\n' +
    ' focus ring.'
]
menu_closure_animation_mac_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_config.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
menu_config_chromeos.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_config_fuchsia.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_config_linux.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_config_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_controller.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The menu controller manages the AX index attributes inside menu items. This\n' +
    ' property maintains a vector of menu children that were last assigned such\n' +
    ' attributes by MenuController::SetSelectionIndices() so that the controller\n' +
    ' can update them if children change via MenuController::MenuChildrenChanged().',
  ' The amount of time the mouse should be down before a mouse release is\n' +
    ' considered intentional. This is to prevent spurious mouse releases from\n' +
    ' activating controls, especially when some UI element is revealed under the\n' +
    ' source of the activation (ex. menus showing underneath menu buttons).',
  ' Amount of time from when the drop exits the menu and the menu is hidden.',
  ' If a context menu is invoked by touch, we shift the menu by this offset so\n' +
    ' that the finger does not obscure the menu.',
  ' The spacing offset for the bubble tip.',
  ' The maximum distance (in DIPS) that the mouse can be moved before it should\n' +
    ' trigger a mouse menu item activation (regardless of how long the menu has\n' +
    ' been showing).',
  ' Time to complete a cycle of the menu item alert animation.',
  ' Returns true if the mnemonic of |menu| matches key.',
  " Returns true if |menu| doesn't have a mnemonic and first character of the its\n" +
    ' title is |key|.',
  ' Returns the first descendant of |view| that is hot tracked.',
  ' Convenience wrappers for converting between screen coordinates and the\n' +
    " coordinates of the submenu's root view. CAUTION: The latter is not the same\n" +
    ' as the coordinates of the submenu itself! Be careful which View you are\n' +
    ' treating coordinates as relative to!',
  ' Recurses through the child views of |view| returning the first view starting\n' +
    ' at |pos| that is focusable. Children are considered first to last.\n' +
    ' TODO(crbug.com/41447095): This can also return |view|, which seems\n' +
    ' incorrect.',
  ' As GetFirstFocusableViewForward(), but children are considered last to first.',
  ' Returns the first child of |start| that is focusable.',
  ' Returns the next view after |start_at| that is focusable. Returns null if\n' +
    ' there are no focusable children of |ancestor| after |start_at|.',
  ' Determines the correct coordinates and window to repost |event| to, if it is\n' +
    ' a mouse or touch event.',
  ' MenuController:MenuPart ---------------------------------------------------',
  ' MenuScrollTask --------------------------------------------------------------',
  ' MenuScrollTask is used when the SubmenuView does not all fit on screen and\n' +
    ' the mouse is over the scroll up/down buttons. MenuScrollTask schedules\n' +
    ' itself with a RepeatingTimer. When Run is invoked MenuScrollTask scrolls\n' +
    ' appropriately.',
  ' MenuController:SelectByCharDetails ----------------------------------------',
  ' MenuController:State ------------------------------------------------------',
  ' MenuController ------------------------------------------------------------',
  ' static',
  ' static',
  ' static',
  ' On Mac, treat space the same as return.',
  ' static',
  ' static'
]
menu_controller_cocoa_delegate_params.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_controller_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Unfortunately a macro rather than a function, to work around ASSERT_ not\n' +
    ' working in non-void functions.',
  ' Test implementation of MenuControllerDelegate that only reports the values\n' +
    ' called of OnMenuClosed.',
  ' A test widget that counts gesture events.',
  ' A DragDropClient which does not trigger a nested run loop. Instead a\n' +
    ' callback is triggered during StartDragAndDrop in order to allow testing.',
  ' View which cancels the menu it belongs to on mouse press.',
  ' static',
  ' static',
  ' Tests that an event targeter which blocks events will be honored by the menu\n' +
    ' event dispatcher.',
  ' Tests that touch event ids are released correctly. See crbug.com/439051 for\n' +
    " details. When the ids aren't managed correctly, we get stuck down touches.",
  ' Tests that initial selected menu items are correct when items are enabled or\n' +
    ' disabled.',
  ' Verifies that the scroll arrow is shown when the menu content\n' +
    ' does not fit within the available bounds.\n' +
    ' (https://crbug.com/338585369)',
  ' Verifies that the context menu bubble should prioritize its cached menu\n' +
    ' position (above or below the anchor) after its size updates\n' +
    ' (https://crbug.com/1126244).',
  ' Verifies that the context menu bubble position,\n' +
    ' MenuAnchorPosition::kBubbleBottomRight, does not shift as items are removed.\n' +
    ' The menu position will shift if items are added and the menu no longer fits\n' +
    ' in its previous position.',
  " Tests that opening the menu and pressing 'Home' selects the first menu item.",
  " Tests that opening the menu and pressing 'End' selects the last enabled menu\n" +
    ' item.',
  ' MenuController tests which set expectations about how menu item selection\n' +
    ' behaves should verify test cases work as intended for all supported selection\n' +
    ' mechanisms.',
  ' Tests that opening menu and exercising various mechanisms to update\n' +
    ' selection iterates over enabled items.',
  ' Tests that opening menu and exercising various mechanisms to decrement\n' +
    ' selection selects the last enabled menu item.',
  ' Tests that the APIs related to the current selected item work correctly.',
  ' Tests that opening menu and calling SelectByChar works correctly.',
  ' Verifies that the child button is hot tracked after the host menu item is\n' +
    ' selected by `MenuController::SelectItemAndOpenSubmenu()`.',
  ' Verifies that the child button of the menu item which is under mouse\n' +
    ' hovering is hot tracked (https://crbug.com/1135000).',
  ' Creates a menu with Button child views, simulates running a nested\n' +
    ' menu and tests that existing the nested run restores hot-tracked child\n' +
    ' view.',
  ' Tests that a menu opened asynchronously, will notify its\n' +
    ' MenuControllerDelegate when Accept is called.',
  ' Tests that a menu opened asynchronously, will notify its\n' +
    ' MenuControllerDelegate when CancelAll is called.',
  ' Tests that canceling a nested menu restores the previous\n' +
    ' MenuControllerDelegate, and notifies each delegate.',
  ' Tests that dropping within an asynchronous menu stops the menu from showing\n' +
    ' and does not notify the controller.',
  ' Tests that dragging within an asynchronous menu notifies the\n' +
    ' MenuControllerDelegate for shutdown.',
  ' Tests that if Cancel is called during a drag, that OnMenuClosed is still\n' +
    ' notified when the drag completes.',
  ' Tests that if a menu is destroyed while drag operations are occurring, that\n' +
    ' the MenuHost does not crash as the drag completes.',
  ' Tests that getting the drop callback stops the menu from showing and\n' +
    ' does not notify the controller.',
  ' Widget destruction and cleanup occurs on the MessageLoop after the\n' +
    ' MenuController has been destroyed. A MenuHostRootView should not attempt to\n' +
    ' access a destroyed MenuController. This test should not cause a crash.',
  ' Tests that an asynchronous menu nested within an asynchronous menu closes\n' +
    ' both menus, and notifies both delegates.',
  ' Tests that setting send_gesture_events_to_owner flag forwards gesture\n' +
    ' events to owner and the forwarding stops when the current gesture sequence\n' +
    ' ends.',
  ' Tests that setting `send_gesture_events_to_owner` flag forwards gesture\n' +
    " events to the NativeView specified for gestures and not the owner's\n" +
    ' NativeView.',
  ' Tests that touch outside menu does not closes the menu when forwarding\n' +
    ' gesture events to owner.',
  ' Tests that a nested menu does not crash when trying to repost events that\n' +
    ' occur outside of the bounds of the menu. Instead a proper shutdown should\n' +
    ' occur.',
  ' Tests that an asynchronous menu reposts touch events that occur outside of\n' +
    ' the bounds of the menu, and that the menu closes.',
  ' Tests that having the MenuController deleted during RepostEvent does not\n' +
    ' cause a crash. ASAN bots should not detect use-after-free in\n' +
    ' MenuController.',
  ' Tests that having the MenuController deleted during OnGestureEvent does not\n' +
    ' cause a crash. ASAN bots should not detect use-after-free in\n' +
    ' MenuController.',
  ' Test that the menu is properly placed where it best fits.',
  ' Tests that the menu is properly placed according to its anchor.',
  ' Regression test for https://crbug.com/1217711',
  ' Test that menus show up on screen with non-zero sized anchors.',
  ' Test that menus show up on screen with zero sized anchors.',
  ' Test that menus fit a small screen.',
  ' Test that submenus are displayed within the screen bounds on smaller\n' +
    ' screens.',
  ' Test that a menu that was originally drawn below the anchor does not get\n' +
    ' squished or move above the anchor when it grows vertically and horizontally\n' +
    ' beyond the monitor bounds.',
  ' This tests that mouse moved events from the initial position of the mouse\n' +
    " when the menu was shown don't select the menu item at the mouse position.",
  ' Tests that when an asynchronous menu receives a cancel event, that it\n' +
    ' closes.',
  ' TODO(pkasting): The test below fails most of the time on Wayland; not clear\n' +
    " it's important to support this case.",
  ' Tests that menus without parent widgets do not crash in\n' +
    ' MenuPreTargetHandler. Having neither parent nor context pointers when\n' +
    ' creating a Widget is only valid in desktop Aura.',
  ' Tests that if a MenuController is destroying during drag/drop, and another\n' +
    ' MenuController becomes active, that the exiting of drag does not cause a\n' +
    ' crash.',
  ' Tests that if a CancelAll is called during drag-and-drop that it does not\n' +
    ' destroy the MenuController. On Windows and Linux this destruction also\n' +
    ' destroys the Widget used for drag-and-drop, thereby ending the drag.',
  ' Tests that when releasing the ref on ViewsDelegate and MenuController is\n' +
    ' deleted, that shutdown occurs without crashing.',
  ' Tests that when a context menu is opened above an empty menu item, and a\n' +
    ' right-click occurs over the empty item, that the bottom menu is not hidden,\n' +
    ' that a request to relaunch the context menu is received, and that\n' +
    ' subsequently pressing ESC does not crash the browser.',
  ' Drag the mouse from an external view into a menu\n' +
    ' When the mouse leaves the menu while still in the process of dragging\n' +
    ' the menu item view highlight should turn off',
  ' Tests that |MenuHost::InitParams| are correctly forwarded to the created\n' +
    ' |aura::Window|.',
  ' Tests that |aura::Window| has the correct properties when a context menu is\n' +
    ' shown.',
  ' Tests that |aura::Window| has the correct properties when a root or a child\n' +
    ' menu is shown.',
  ' Test that if `SetTriggerActionWithNonIconChildViews` true that even with\n' +
    ' child views the click will be registered. Detect that the click was\n' +
    ' registered by checking if the TestMenuControllerDelegate received the signal\n' +
    ' that the menu should be closed.',
  ' Tests that having the MenuController deleted during OnMousePressed does not\n' +
    ' cause a crash. ASAN bots should not detect use-after-free in\n' +
    ' MenuController.',
  ' Tests that a menu opened asynchronously, will notify its\n' +
    ' MenuControllerDelegate when accessibility performs a do default action.',
  ' Test that the kSelectedChildrenChanged event is emitted on\n' +
    ' the root menu item when the selected menu item changes.',
  ' Test that in accessibility mode disabled menu items are taken into account\n' +
    ' during items indices assignment.',
  ' This test exercises a Mac-specific behavior, by which hotkeys using\n' +
    ' modifiers cause menus to close and the hotkeys to be handled by the browser\n' +
    ' window. This specific test case tries using cmd-ctrl-f, which normally\n' +
    ' means "Fullscreen".',
  ' Simple test to ensure child menu open direction is correctly set and\n' +
    ' retrieved.'
]
menu_delegate.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_host.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class adds itself as the pre target handler for the |window|\n' +
    ' passed in. It currently handles touch events and forwards them to the\n' +
    ' controller. Reason for this approach is views does not get raw touch\n' +
    ' events which we need to determine if a touch happened outside the bounds\n' +
    ' of the menu.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' MenuHost, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' MenuHost, private:'
]
menu_host_root_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_item_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' VerticalSeparator ----------------------------------------------------------',
  ' MenuItemView ---------------------------------------------------------------',
  ' static',
  ' static',
  ' EmptyMenuMenuItem ----------------------------------------------------------'
]
menu_item_view_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A simple View class that will match its height to the available width.',
  ' Tests that a menu item with hidden children should contain the "(empty)" menu\n' +
    ' item to display.',
  ' Test that touchable menu items are sized to fit the menu item titles within\n' +
    ' the allowed minimum and maximum width.',
  " Tests that MenuItemView takes into account the child's margins and preferred\n" +
    ' size when laying out in container mode.',
  ' Provides assertion coverage for painting, secondary label, minor text and\n' +
    ' icons.',
  ' Provides assertion coverage for painting with custom colors.\n icons.',
  " Verifies a call to MenuItemView::OnPaint() doesn't trigger a call to\n" +
    ' MenuItemView::submenu_arrow_image_view_::SchedulePaint(). This is a\n' +
    ' regression test for https://crbug.com/1245854.',
  ' Tests to ensure that selection based state is not updated if a menu item or\n' +
    ' an anscestor item has been scheduled for deletion. This guards against\n' +
    ' removed but not-yet-deleted MenuItemViews using stale model data to update\n' +
    ' state.',
  " Sets up a custom MenuDelegate that expects functions aren't called. See\n" +
    ' DontAskForFontsWhenAddingSubmenu.',
  " Verifies AppendSubMenu() doesn't trigger calls to the delegate with the\n" +
    ' command being supplied. The delegate can be called after AppendSubMenu(),\n' +
    ' but not before.',
  ' A MenuItemView that has a submenu should open the submenu on kExpand and\n' +
    ' close the submenu on kCollapse.'
]
menu_model_adapter.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Static.',
  ' Static.',
  ' MenuModelAdapter, MenuDelegate implementation:',
  ' MenuModelDelegate overrides:',
  ' MenuModelAdapter, private:'
]
menu_model_adapter_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base command id for test menu and its submenu.'
]
menu_pre_target_handler_aura.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
menu_runner.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_runner_impl.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This should be called after the menu has closed, to fire a focus event on\n' +
    ' the previously focused node in the parent widget, if one exists.'
]
menu_runner_impl_adapter.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_runner_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that MenuRunner is still running after the call to RunMenuAt when\n' +
    ' initialized with , and that MenuDelegate is notified upon\n' +
    ' the closing of the menu.',
  ' Tests that when a menu is run asynchronously, key events are handled properly\n' +
    ' by testing that Escape key closes the menu.',
  ' Tests that a key press on a US keyboard layout activates the correct menu\n' +
    ' item.\n' +
    ' This test is flaky on ozone (https://crbug.com/1197217).',
  ' Tests that a key press on a non-US keyboard layout activates the correct menu\n' +
    ' item. Disabled on Windows because a WM_CHAR event does not activate an item.',
  ' This test is Mac-specific: Mac is the only platform where VKEY_SPACE\n' +
    ' activates menu items.',
  ' Tests that attempting to nest a menu within a drag-and-drop menu does not\n' +
    ' cause a crash. Instead the drag and drop action should be canceled, and the\n' +
    ' new menu should be openned.',
  ' An EventHandler that launches a menu in response to a mouse press.',
  ' Test harness that includes a parent Widget and View invoking the menu.',
  ' Tests that when a mouse press launches a menu, that the target widget does\n' +
    ' not take explicit capture, nor closes the menu.',
  ' Tests that after showing a menu on mouse press, that the subsequent mouse\n' +
    ' will be delivered to the correct view, and not to the one that showed the\n' +
    ' menu.\n' +
    ' The original bug is reproducible only when showing the menu on mouse press,\n' +
    " as RootView::OnMouseReleased() doesn't have the same behavior.",
  ' Tests that when nested menu runners are destroyed out of order, that\n' +
    ' MenuController is not accessed after it has been destroyed. This should not\n' +
    ' crash on ASAN bots.',
  ' Tests that when there are two separate MenuControllers, and the active one is\n' +
    ' deleted first, that shutting down the MenuRunner of the original\n' +
    ' MenuController properly closes its controller. This should not crash on ASAN\n' +
    ' bots.',
  ' Test class which overrides the ViewsDelegate. Allowing to simulate shutdown\n' +
    ' during its release.',
  ' Tests that when ViewsDelegate is released that a nested Cancel of the\n' +
    ' MenuRunner does not occur.',
  ' Tests that passing a histogram name to RunMenuAt records a histogram entry.',
  ' Tests that not passing a histogram name to RunMenuAt does not record a\n' +
    ' histogram entry.'
]
menu_scroll_view_container.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' MenuScrollButton ------------------------------------------------------------',
  ' MenuScrollButton is used for the scroll buttons when not all menu items fit\n' +
    ' on screen. MenuScrollButton forwards appropriate events to the\n' +
    ' MenuController.',
  ' MenuScrollView --------------------------------------------------------------',
  " MenuScrollView is a viewport for the SubmenuView. It's reason to exist is so\n" +
    ' that ScrollRectToVisible works.\n' +
    ' NOTE: It is possible to use ScrollView directly (after making it deal with\n' +
    ' null scrollbars), but clicking on a child of ScrollView forces the window to\n' +
    " become active, which we don't want. As we really only need a fraction of\n" +
    ' what ScrollView does, so we use a one off variant.',
  ' MenuScrollViewContainer ----------------------------------------------------'
]
menu_separator.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_separator_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_menu_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the NativeMenuWin for a particular HMENU.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeMenuWin, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeMenuWin, MenuWrapper implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeMenuWin, private:'
]
submenu_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Height of the drop indicator. This should be an even number.'
]
submenu_view_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_menu_item_view.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
message_box_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Paragraph separators are defined in\n' +
    ' http://www.unicode.org/Public/6.0.0/ucd/extracted/DerivedBidiClass.txt\n' +
    ' # Bidi_Class=Paragraph_Separator\n' +
    ' 000A          ; B # Cc       <control-000A>\n' +
    ' 000D          ; B # Cc       <control-000D>\n' +
    ' 001C..001E    ; B # Cc   [3] <control-001C>..<control-001E>\n' +
    ' 0085          ; B # Cc       <control-0085>\n' +
    ' 2029          ; B # Zp       PARAGRAPH SEPARATOR',
  ' Splits |text| into a vector of paragraphs.\n' +
    ' Given an example "\\nabc\\ndef\\n\\n\\nhij\\n", the split results should be:\n' +
    ' "", "abc", "def", "", "", "hij", and "".',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' MessageBoxView, public:',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' MessageBoxView, View overrides:',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' MessageBoxView, private:'
]
message_box_view_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The default mesage width same as defined in message_box_view.cc.'
]
native_view_host.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeViewHost, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeViewHost, View overrides:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeViewHost, private:'
]
native_view_host_aura.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeViewHostAura, NativeViewHostWrapper implementation:',
  ' static'
]
native_view_host_aura_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observer watching for window visibility and bounds change events. This is\n' +
    ' used to verify that the child and clipping window operations are done in the\n' +
    ' right order.',
  ' Verifies NativeViewHostAura stops observing native view on destruction.',
  ' Tests that the kHostViewKey is correctly set and cleared.',
  ' Tests that the NativeViewHost reports the cursor set on its native view.',
  ' Test that destroying the top level widget before destroying the attached\n' +
    ' NativeViewHost works correctly. Specifically the associated NVH should be\n' +
    " destroyed and there shouldn't be any errors.",
  ' Test that the fast resize path places the clipping and content windows were\n' +
    ' they are supposed to be.',
  " Test that the clipping and content windows' bounds are set to the correct\n" +
    ' values while the native size is not equal to the View size. During fast\n' +
    ' resize, the size and transform of the NativeView should not be modified.',
  ' Test installing and uninstalling a clip.',
  ' Ensure native view is parented to the root window after detaching. This is\n' +
    ' a regression test for http://crbug.com/389261.',
  ' Ensure the clipping window is hidden before any other operations.\n' +
    ' This is a regression test for http://crbug.com/388699.',
  ' Ensure the native view receives the correct bounds notification when it is\n' +
    ' attached. This is a regression test for https://crbug.com/399420.',
  ' Ensure the clipping window is hidden with the native view. This is a\n' +
    ' regression test for https://crbug.com/408877.',
  ' Verifies the FocusManager is properly updated if focus is in a child widget\n' +
    ' that is parented to a NativeViewHost and the NativeViewHost is destroyed.'
]
native_view_host_test_base.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Testing wrapper of the NativeViewHost.'
]
native_view_host_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' View implementation used by NativeViewHierarchyChanged to count number of\n' +
    ' times NativeViewHierarchyChanged() is invoked.',
  ' Verifies NativeViewHierarchyChanged is sent.',
  ' Verifies ViewHierarchyChanged handles NativeViewHost remove, add and move\n' +
    ' (reparent) operations with correct parent changes.\n' +
    ' This exercises the non-recursive code paths in\n' +
    ' View::PropagateRemoveNotifications() and View::PropagateAddNotifications().',
  " Verifies ViewHierarchyChanged handles NativeViewHost's parent remove, add and\n" +
    ' move (reparent) operations with correct parent changes.\n' +
    ' This exercises the recursive code paths in\n' +
    ' View::PropagateRemoveNotifications() and View::PropagateAddNotifications().'
]
prefix_selector.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
prefix_selector_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
progress_bar.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adds a rectangle to the path.'
]
progress_bar_unittest.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verifies the correct a11y events are raised for an accessible progress bar.',
  ' Test that default colors can be overridden. Used by Chromecast.',
  ' Test that if no `preferred_corner_radii` are provided the default radius is\n' +
    ' 3, and a value of `std::nullopt` will not round the corners.',
  ' Test that a value set for `preferred_corner_radii` is saved and can be\n' +
    ' retrieved from `GetPreferredCornerRadii()`.',
  ' Test that `GetPreferredCornerRadii()` will return no corner with a radius\n' +
    ' greater than the height of the bar.',
  ' Test that if value is set negative, which means progress bar is\n' +
    ' indeterminate, the string attribute value should be empty.'
]
progress_ring_utils.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Specifies a single section of the ring. Multiple sections should be specified\n' +
    ' in clockwise order and should sum to 360 degrees.'
]
resize_area.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
resize_area_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constants used by the ResizeAreaTest.SuccessfulGestureDrag test to simulate\n' +
    ' a gesture drag by |kGestureScrollDistance| resulting from\n' +
    ' |kGestureScrollSteps| ui::EventType::kGestureScrollUpdate events being\n' +
    ' delivered.',
  ' Testing delegate used by ResizeAreaTest.',
  ' Test fixture for testing the ResizeArea class.',
  ' TODO(tdanderson): Enable these tests on OSX. See crbug.com/710475.',
  ' Verifies the correct calls have been made to\n' +
    ' TestResizeAreaDelegate::OnResize() for a sequence of mouse events\n' +
    ' corresponding to a successful resize operation.',
  ' Verifies that no resize is performed when attempting to resize using the\n' +
    ' right mouse button.',
  ' Verifies the correct calls have been made to\n' +
    ' TestResizeAreaDelegate::OnResize() for a sequence of gesture events\n' +
    ' corresponding to a successful resize operation.',
  ' Verifies that no resize is performed on a gesture tap.'
]
scroll_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the combined scroll amount given separate x and y offsets. This is\n' +
    ' used in the "treat all scroll events as horizontal" case when there is both\n' +
    ' an x and y offset and we do not want them to add in unintuitive ways.\n' +
    ' The current approach is to return whichever offset has the larger absolute\n' +
    ' value, which should at least handle the case in which the gesture is mostly\n' +
    ' vertical or horizontal. It does mean that for a gesture at 135° or 315° from\n' +
    ' the x axis there is a breakpoint where scroll direction reverses, but we do\n' +
    ' not typically expect users to try to scroll a horizontal-scroll-only view at\n' +
    ' this exact angle.',
  ' Returns true if any descendants of |view| have a layer (not including\n' +
    ' |view|).',
  " Returns the position for the view so that it isn't scrolled off the visible\n" +
    ' region.',
  ' Make sure the content is not scrolled out of bounds',
  ' Used by ScrollToPosition() to make sure the new position fits within the\n' +
    ' allowed scroll range.',
  ' Viewport contains the contents View of the ScrollView.',
  ' static',
  ' static',
  ' Make sure that a single scrollbar is created and visible as needed',
  ' VariableRowHeightScrollHelper ----------------------------------------------',
  ' FixedRowHeightScrollHelper -----------------------------------------------'
]
scroll_view_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " This view has a large width, but the height always matches the parent's\n" +
    ' height. This is similar to a TableView that has many columns showing, but\n' +
    ' very few rows.',
  ' Same as VerticalResizingView, but horizontal instead.',
  ' Simple test harness for testing a ScrollView directly.',
  ' Test harness that includes a Widget to help test ui::Event handling.',
  ' A gtest parameter to permute over whether ScrollView uses a left-to-right or\n' +
    ' right-to-left locale, or whether it uses ui::Layers or View bounds offsets to\n' +
    ' position contents (i.e. ::features::kUiCompositorScrollWithLayers).',
  ' Verifies the viewport is sized to fit the available space.',
  ' Verifies the viewport and content is sized to fit the available space for\n' +
    ' bounded scroll view.',
  ' Verifies that the vertical scrollbar does not unnecessarily appear for a\n' +
    ' contents whose height always matches the height of the viewport.',
  ' Same as above, but setting horizontal scroll bar to hidden.',
  ' Same as above, but setting vertical scrollbar instead.',
  ' Same as above, but setting horizontal scroll bar to disabled.',
  ' Same as above, but setting vertical scrollbar instead.',
  ' Verifies the scrollbars are added as necessary.\n' +
    ' If on Mac, test the non-overlay scrollbars.',
  ' Tests that after scrolling the child (which was gained the focus) into the\n' +
    ' viewport of the scroll view, the tooltip should be shown up.',
  ' Assertions around adding a header.',
  ' Verifies the scrollbars are added as necessary when a header is present.',
  ' Verifies the header scrolls horizontally with the content.',
  ' Test that calling ScrollToPosition() also updates the position of the\n' +
    ' corresponding ScrollBar.',
  ' Test that calling ScrollToPosition() also updates the position of the\n' +
    ' child view even when the horizontal scrollbar is hidden.',
  ' Test that calling ScrollToPosition() also updates the position of the\n' +
    ' child view even when the horizontal scrollbar is hidden.',
  ' Verifies ScrollRectToVisible() on the child works.',
  ' Verifies ScrollByOffset() method works as expected',
  ' Verifies ScrollRectToVisible() scrolls the view horizontally even if the\n' +
    ' horizontal scrollbar is hidden (but not disabled).',
  ' Verifies ScrollRectToVisible() scrolls the view vertically even if the\n' +
    ' vertical scrollbar is hidden (but not disabled).',
  ' Verifies ScrollRectToVisible() does not scroll the view horizontally or\n' +
    ' vertically if the scrollbars are disabled.',
  " Verifies that child scrolls into view when it's focused.",
  ' Verifies that ScrollView scrolls into view when its contents root is focused.',
  ' Verifies ClipHeightTo() uses the height of the content when it is between the\n' +
    ' minimum and maximum height values.',
  ' Verifies ClipHeightTo() uses the minimum height when the content is shorter\n' +
    ' than the minimum height value.',
  ' Verifies ClipHeightTo() uses the maximum height when the content is longer\n' +
    ' thamn the maximum height value.',
  ' Verifies that when ClipHeightTo() produces a scrollbar, it reduces the width\n' +
    ' of the inner content of the ScrollView.',
  " Verifies ClipHeightTo() updates the ScrollView's preferred size.",
  ' This test needs a widget so that color changes will be reflected.',
  ' Validates that if a child of a ScrollView adds a layer, then a layer\n' +
    " is not added to the ScrollView's viewport.",
  ' Validates if the contents_viewport uses correct layer type when adding views\n' +
    ' with different types of layers.',
  ' Validates the layer of contents_viewport_, when contents_ does not have a\n' +
    ' layer.',
  ' Validates if scroll_with_layers is enabled, we disallow to change the layer\n' +
    ' of contents_  once the contents of ScrollView are set.',
  ' Validates if scroll_with_layers is disabled, we can change the layer of\n' +
    ' contents_ once the contents of ScrollView are set.',
  ' Validates if the content of contents_viewport is changed, a correct layer is\n' +
    ' used for contents_viewport.',
  ' Validates correct behavior of layers used for contents_viewport used when\n' +
    ' scroll with layers is enabled.',
  ' Validates if correct layers are used for contents_viewport used when\n' +
    ' ScrollView enables a NOT_DRAWN layer on contents when scroll with layers in\n' +
    ' enabled.',
  ' Tests the overlay scrollbars on Mac. Ensure that they show up properly and\n' +
    ' do not overlap each other.',
  ' Test that overlay scroll bars will only process events when visible.',
  ' Test overlay scrollbar behavior when just resting fingers on the trackpad.',
  ' Test that increasing the size of the viewport "below" scrolled content causes\n' +
    ' the content to scroll up so that it still fills the viewport.',
  ' Calling Layout on ScrollView should not reset the scroll location.',
  ' Test that overflow indicators turn on appropriately.',
  " Ensure ScrollView::Layout succeeds if a disabled scrollbar's overlap style\n" +
    ' does not match the other scrollbar.',
  " Ensure ScrollView::Layout succeeds if a hidden but enabled scrollbar's\n" +
    ' overlap style does not match the other scrollbar.',
  " Ensure ScrollView::Layout succeeds if a disabled scrollbar's overlap style\n" +
    ' does not match the other scrollbar.',
  " Ensure ScrollView::Layout succeeds if a hidden but enabled scrollbar's\n" +
    ' overlap style does not match the other scrollbar.',
  ' Test scrolling behavior when clicking on the scroll track.',
  ' Test that LocatedEvents are transformed correctly when scrolling.',
  ' Ensure behavior of ScrollRectToVisible() is consistent when scrolling with\n' +
    ' and without layers, and under LTR and RTL.',
  ' Test that views scroll offsets are in sync with the layer scroll offsets.',
  ' Applies |scroll_event| to |scroll_view| and verifies that the event is\n' +
    ' applied correctly whether or not compositor scrolling is enabled.',
  ' Tests to see the scroll events are handled correctly in composited and\n' +
    ' non-composited scrolling.',
  ' Tests to see that transposed (treat-as-horizontal) scroll events are handled\n' +
    ' correctly in composited and non-composited scrolling.',
  ' Tests to see that transposed (treat-as-horizontal) scroll events are handled\n' +
    ' correctly in composited and non-composited scrolling when the scroll offset\n' +
    ' is somewhat ambiguous. This is the case where the horizontal component is\n' +
    ' larger than the vertical.',
  ' Tests to see that transposed (treat-as-horizontal) scroll events are handled\n' +
    ' correctly in composited and non-composited scrolling when the scroll offset\n' +
    ' is somewhat ambiguous. This is the case where the vertical component is\n' +
    ' larger than the horizontal.'
]
base_scroll_bar_thumb.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The distance the mouse can be dragged outside the bounds of the thumb during\n' +
    ' dragging before the scrollbar will snap back to its regular position.'
]
overlay_scroll_bar.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Total thickness of the thumb (matches visuals when hovered).',
  " When hovered, the thumb takes up the full width. Otherwise, it's a bit\n" +
    ' slimmer.',
  ' The layout size of the thumb stroke, in DIP.',
  ' The visual size of the thumb stroke, in px.'
]
scroll_bar.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' ScrollBar, View implementation:',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' ScrollBar, ScrollDelegate implementation:',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' ScrollBar, ContextMenuController implementation:',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' ScrollBar, Menu::Delegate implementation:',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' ScrollBar implementation:',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' ScrollBar, protected:',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' ScrollBar, private:',
  ' static'
]
scroll_bar_button.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scroll_bar_button_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scroll_bar_views.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wrapper for the scroll thumb',
  ' static'
]
scrollbar_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The Scrollbar controller. This is the widget that should do the real\n' +
    ' scrolling of contents.',
  ' This container is used to forward gesture events to the scrollbar for\n' +
    ' testing fling and other gestures.',
  ' Verify properties are accessible via metadata.'
]
separator.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Separator, View overrides:'
]
separator_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base test fixture for Separator tests.',
  ' Ensure that the separator is always at least 1px, even if insets would reduce\n' +
    ' it to zero.',
  ' Ensure that the separator is always at least 1px, even if insets would reduce\n' +
    ' it to zero (with scale factor > 1).'
]
slider.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The thickness of the slider.',
  ' The radius used to draw rounded slider ends.',
  ' The padding used to hide the slider underneath the thumb.',
  ' The radius of the highlighted thumb of the slider'
]
slider_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A views::SliderListener that tracks simple event call history.',
  ' Base test fixture for Slider tests.',
  ' Parameter specifies whether to test ContinuousSlider (true) or\n' +
    ' DiscreteSlider(false).',
  ' No touch on desktop Mac. Tracked in http://crbug.com/445520.',
  ' Test the slider location after a tap gesture.',
  ' Test the slider location after a scroll gesture.',
  ' Test the slider location by adjusting it using keyboard.',
  ' Verifies the correct SliderListener events are raised for a tap gesture.',
  ' Verifies the correct SliderListener events are raised for a scroll gesture.',
  ' Verifies the correct SliderListener events are raised for a multi\n' +
    ' finger scroll gesture.',
  ' Verifies the correct SliderListener events are raised for an accessible\n' +
    ' slider.'
]
styled_label.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' TODO(wutao): support gfx::ALIGN_TO_HEAD alignment.'
]
styled_label_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verifies that calling SizeToFit() on a label which requires less width still\n' +
    ' causes it to take the whole requested width.',
  ' Verifies that a non-empty label has a preferred size by default.',
  ' Verifies that GetPreferredSize() respects the existing wrapping.',
  ' Verifies that calling a const method does not change the preferred size.',
  ' Regression test for crbug.com/361639416.\n' +
    ' Tests that the child views (text fragments) are still alive after layout.'
]
tabbed_pane.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
tabbed_pane_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests tab orientation.',
  ' Tests tab orientation.',
  ' Tests tab strip style.',
  ' Tests tab strip style.',
  ' Tests the preferred size and layout when tabs are aligned vertically..',
  ' Tests the preferred size and layout when tabs are aligned horizontally.\n' +
    ' TabbedPane requests a size that fits the largest child or the minimum size\n' +
    ' necessary to display the tab titles, whichever is larger.',
  ' Use TabbedPane::HandleAccessibleAction() to select tabs and make sure their\n' +
    ' a11y information is correct.'
]
table_header.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The minimum width we allow a column to go down to.',
  ' Amount that a column is resized when using the keyboard.',
  ' Distace from edge columns can be resized by.',
  ' Amount of space above/below the separator.',
  " Size of the sort indicator (doesn't include padding).",
  ' static',
  ' static'
]
table_utils.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
table_utils_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verifies columns with a specified width is honored.',
  ' Verifies if no size is specified the last column gets all the available\n' +
    ' space.',
  ' Verifies a single column with a percent=1 is resized correctly.'
]
table_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns result, unless ascending is false in which case -result is returned.',
  ' Populates |model_index_to_range_start| based on the |grouper|.',
  ' Returns the color id for the background of selected text. |has_focus|\n' +
    ' indicates if the table has focus.',
  ' Returns the color id for text. |has_focus| indicates if the table has focus.',
  ' Whether the platform "command" key is down.',
  ' Used as the comparator to sort the contents of the table.',
  ' Used as the comparator to sort the contents of the table when a TableGrouper\n' +
    ' is present. When groups are present we sort the groups based on the first row\n' +
    ' in the group and within the groups we keep the same order as the model.',
  ' static',
  ' static',
  " TODO(sky): this doesn't support arbitrarily changing the model, rename this\n" +
    ' to ClearModel() or something.',
  ' TODO(dpenning) : Prevent the last column from being closed. See\n' +
    ' crbug.com/1324306 for details.',
  ' The default drawing size for icons in a table view is 16 * 16. If the cell\n' +
    ' size is not sufficient, the original image needs to be clipped. e.g if the\n' +
    ' original image size is 32 * 32, the normal bounds would be src bounds (0, 0,\n' +
    ' 32, 32) and dest bounds (x, y, 16, 16). If the dest bounds are (x, y, 8, 16),\n' +
    ' the original image needs to be clipped to prevent stretching during drawing.\n' +
    ' For LTR (left-to-right) layout, the src bounds would be (0, 0, 16, 32), and\n' +
    ' the width would be calculated as width = image_size.width() *\n' +
    ' image_dest_width / ui::TableModel::kIconSize.\n' +
    ' For RTL (right-to-left) layout, the src bounds would be (16, 0, 16, 32),\n' +
    ' and the `x` would be calculated as x = image_size.width() - src_image_width.\n' +
    ' (https://crbug.com/1494675)'
]
table_view_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Put the tests in the views namespace to make it easier to declare them as\n' +
    ' friend classes.',
  ' TestTableModel2 -------------------------------------------------------------',
  ' Trivial TableModel implementation that is backed by a vector of vectors.\n' +
    ' Provides methods for adding/removing/changing the contents that notify the\n' +
    ' observer appropriately.\n' +
    ' Initial contents are:\n' +
    ' 0, 1\n' +
    ' 1, 1\n' +
    ' 2, 2\n' +
    ' 3, 0',
  ' Returns the view to model mapping as a string.',
  ' Returns the model to view mapping as a string.',
  ' Formats the whole table as a string, like: "[a, b, c], [d, e, f]". Rows\n' +
    ' scrolled out of view are included; hidden columns are excluded.',
  ' Formats the whole accessibility views as a string.\n' +
    ' Like: "[a, b, c], [d, e, f]".',
  ' The test parameter is used to control whether or not to test the TableView\n' +
    ' using the default construction path.',
  ' Using one of the arrow keys (which normally change selection) with an empty\n' +
    ' table must leave the selection state empty.\n' +
    ' Regression test for https://issues.chromium.org/issues/342341277',
  ' Verifies GetPaintRegion.',
  ' Verifies the bounding rect of each virtual accessibility child of the\n' +
    ' TableView (rows and cells) is updated appropriately as the table changes. For\n' +
    ' example, verifies that if a column is resized or hidden, the bounds are\n' +
    ' updated.',
  ' Verifies SetColumnVisibility().',
  ' Regression tests for https://crbug.com/1283805, and\n' +
    ' https://crbug.com/1283807.',
  ' Verifies resizing a column using the mouse works.',
  ' Verifies resizing a column works with a gesture.',
  ' Verifies resizing a column works with the keyboard.\n' +
    ' The resize keyboard amount is 5 pixels.',
  " Verifies resizing a column won't reduce the column width below the width of\n" +
    " the column's title text.",
  ' Assertions for table sorting.',
  ' Verifies clicking on the header sorts.',
  ' Verifies that pressing the space bar when a particular visible column is\n' +
    ' active will sort by that column.',
  ' Assertions around grouping.',
  ' Assertions around changing the selection.',
  ' 0 1 2 3:\n' +
    ' select 3 -> 0 1 2 [3]\n' +
    ' remove 3 -> 0 1 2 (none selected)\n' +
    ' select 1 -> 0 [1] 2\n' +
    ' remove 1 -> 0 1 (none selected)\n' +
    ' select 0 -> [0] 1\n' +
    ' remove 0 -> 0 (none selected)',
  ' No touch on desktop Mac. Tracked in http://crbug.com/445520.',
  ' Verifies selection works by way of a gesture.',
  ' Verifies up/down correctly navigate through groups.',
  ' Verifies left/right correctly navigate through visible columns.',
  ' Verify table view that the left/right navigation scrolls the visible rect\n' +
    ' correctly.',
  ' Verify table header that the left/right navigation scrolls the visible rect\n' +
    ' correctly.',
  ' Verify that the table view visible bounds remains stable when up/down\n' +
    ' switching between different rows when the layout is RTL or LTR. use_rtl()\n' +
    ' returns true for testing the RTL layout and false for testing the LTR layout',
  ' Verify that the table view visible boundsr remains stable when clicking on\n' +
    ' different rows when the layout is RTL or LTR. use_rtl() returns true for\n' +
    ' testing the RTL layout and false for testing the LTR layout',
  ' Verifies home/end do the right thing.',
  ' Verifies multiple selection gestures work (control-click, shift-click ...).',
  ' Verifies multiple selection gestures work when sorted.',
  " Verifies we don't crash after removing the selected row when there is\n" +
    ' sorting and the anchor/active index also match the selected row.',
  ' OnItemsRemoved() should ensure view-model mappings are updated in response to\n' +
    ' the table model change before these view-model mappings are used.\n' +
    ' Test for (https://crbug.com/1173373).',
  " Ensure that the TableView's header row is keyboard accessible.\n" +
    ' Tests for crbug.com/1189851.',
  " Ensure that the TableView's header columns are keyboard accessible.\n" +
    ' Tests for crbug.com/1189851.',
  ' Verifies that the active focus is cleared when the widget is destroyed.\n' +
    " In MD mode, if that doesn't happen a DCHECK in View::DoRemoveChildView(...)\n" +
    ' will trigger due to an attempt to modify the child view list while iterating.',
  ' The test calculation paint icon bounds.'
]
test_table_model.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
textarea.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
textarea_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Disabled when using XKB for crbug.com/1171828.',
  ' Re-enable when crbug.com/1163587 is fixed.',
  ' Ensure cursor view is always inside display rect.',
  ' Disabled on Mac for crbug.com/1171826.',
  ' Ensure the textarea breaks the long word and scrolls on overflow.'
]
textfield.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An enum giving different model properties unique keys for the\n' +
    ' OnPropertyChanged call.',
  ' Returns the ui::TextEditCommand corresponding to the |command_id| menu\n' +
    ' action. |has_selection| is true if the textfield has an active selection.\n' +
    ' Keep in sync with UpdateContextMenu.',
  " XKB layout doesn't natively generate printable characters from a\n" +
    ' Control-modified key combination, but we cannot extend it to other platforms\n' +
    ' as Control has different meanings and behaviors.\n' +
    ' https://crrev.com/2580483002/#msg46',
  ' static',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Textfield, View overrides:',
  ' This function is called by BrowserView to execute clipboard commands.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Textfield, TextfieldModel::Delegate overrides:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Textfield, ContextMenuController overrides:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Textfield, DragController overrides:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Textfield, WordLookupClient overrides:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Textfield, SelectionControllerDelegate overrides:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Textfield, ui::TouchEditable overrides:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Textfield, ui::SimpleMenuModel::Delegate overrides:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Textfield, ui::TextInputClient overrides:',
  ' TODO(mbid): GetCaretBounds is const but calls\n' +
    ' RenderText::GetUpdatedCursorBounds, which is not const and in fact mutates\n' +
    ' internal state. (Is it at least logically const?) Violation of const\n' +
    ' correctness?',
  ' On Mac, the textfield should respond to Up/Down arrows keys and\n' +
    ' PageUp/PageDown.',
  ' TODO(crbug.com/41452689): Implement this method to support Korean IME\n' +
    ' reconversion feature on native text fields (e.g. find bar).',
  ' TODO(crbug.com/41452689): Implement this method once TSF supports\n' +
    ' reconversion features on native text fields.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Textfield, views::ViewObserver overrides:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Textfield, protected:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Textfield, private:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Textfield, SelectionControllerDelegate overrides:'
]
textfield_controller.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
textfield_model.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Orders ranges decreasing with respect to their min index. This is useful for\n' +
    " applying text edits such that an edit doesn't offset the positions of later\n" +
    ' edits. It should be reversed when undoing edits.',
  ' Adjusts |position| for the deletion of |ranges|. E.g., if |position| is 10,\n' +
    ' and |ranges| is {{1, 3}, {15, 18}, and {6, 13}}, this will return 4,\n' +
    ' subtracting 2 (3-1), 0 (15>10), and 4 (10-6) for each range respectively.',
  ' Edit holds state information to undo/redo editing changes. Editing operations\n' +
    ' are merged when possible, like when characters are typed in sequence. Calling\n' +
    " Commit() marks an edit as an independent operation that shouldn't be merged.",
  ' Insert text at a given position. Assumes 1) no previous selection and 2) the\n' +
    ' insertion is at the cursor, which will advance by the insertion length.',
  ' Delete one or more ranges and do a single insertion. The insertion need not\n' +
    ' be adjacent to the deletions (e.g. drag & drop).',
  ' Delete possibly multiple texts.',
  " Returns the first segment that is visually emphasized. Usually it's used for\n" +
    ' representing the target clause (on Windows). Returns an invalid range if\n' +
    ' there is no such a range.',
  ' Returns a pointer to the kill buffer which holds the text to be inserted on\n' +
    ' executing yank command. Singleton since it needs to be persisted across\n' +
    ' multiple textfields.\n' +
    ' On Mac, the size of the kill ring (no. of buffers) is controlled by\n' +
    ' NSTextKillRingSize, a text system default. However to keep things simple,\n' +
    ' the default kill ring size of 1 (i.e. a single buffer) is assumed.',
  ' Helper method to set the kill buffer.',
  '///////////////////////////////////////////////////////////////\n' +
    ' TextfieldModel: public',
  '///////////////////////////////////////////////////////////////\n' +
    ' TextfieldModel: private',
  ' static'
]
textfield_model_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(xji): temporarily disable in platform Win since the complex script\n' +
    ' characters turned into empty square due to font regression. So, not able\n' +
    ' to test 2 characters belong to the same grapheme.',
  ' TODO(xji): temporarily disable in platform Win since the complex script\n' +
    ' characters and Chinese characters are turned into empty square due to font\n' +
    ' regression.',
  ' Tests that clipboard text with leading, trailing and interspersed tabs\n' +
    ' spaces etc is pasted correctly. Leading and trailing tabs should be\n' +
    ' stripped. Text separated by multiple tabs/spaces should be left alone.\n' +
    ' Text with just tabs and spaces should be pasted as one space.'
]
textfield_test_api.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
textfield_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Convenience to make constructing a GestureEvent simpler.',
  ' This controller will happily destroy the target field passed on\n' +
    ' construction when a key event is triggered.',
  ' Class that focuses a textfield when it sees a KeyDown event.',
  ' On Mac, emulate InputMethodMac behavior for character events. Composition\n' +
    " still needs to be mocked, since it's not possible to generate test events\n" +
    ' which trigger the appropriate NSResponder action messages for composition.',
  ' A Textfield wrapper to intercept OnKey[Pressed|Released]() results.',
  ' Sends a platform-specific move (and select) to the logical start of line.\n' +
    ' Eg. this should move (and select) to the right end of line for RTL text.',
  ' Sends a platform-specific move (and select) to the logical end of line.',
  ' Sends {delete, move, select} word {forward, backward}.',
  ' Sends Shift+Delete if supported, otherwise Cmd+X again.',
  ' Sends Ctrl+Insert if supported, otherwise Cmd+C again.',
  ' Sends Shift+Insert if supported, otherwise Cmd+V again.',
  ' Gets the cursor bounds of |sel|.',
  " Performs a mouse click on the point whose x-axis is |bound|'s x plus\n" +
    " |x_offset| and y-axis is in the middle of |bound|'s vertical range.",
  ' This is to avoid double/triple click.',
  ' Taps on the textfield.',
  " Control key shouldn't generate a printable character on Linux.",
  ' TODO(crbug.com/41274325): Implement keyboard layout changing for other\n' +
    '                         platforms.',
  ' On Mac, the existing selection should be extended.',
  ' On Mac, the selection should reduce to a caret when the selection direction\n' +
    ' changes for a word selection.',
  ' MOVE_PAGE_[UP/DOWN] and the associated selection commands should only be\n' +
    ' enabled on Mac.',
  ' On Mac, the selection should reduce to a caret when the selection direction\n' +
    ' is reversed for MOVE_PARAGRAPH_[FORWARD/BACKWARD]_AND_MODIFY_SELECTION.',
  ' Test that deletion operations behave correctly with an active selection.',
  ' Test that deletion operations behave correctly with multiple selections.',
  ' Test deletions not covered by other tests with key events.',
  ' Check that text insertion works appropriately for password and read-only\n' +
    ' textfields.',
  ' Tests that default key bindings are handled even with a delegate installed.',
  ' Tests text selection behavior on a right click.',
  ' Ensures dragging above or below the textfield extends a selection to either\n' +
    ' end, depending on the relative x offsets of the text and mouse cursors.',
  ' Most platforms support Ctrl+Y as an alternative to Ctrl+Shift+Z, but on Mac\n' +
    ' Ctrl+Y is bound to "Yank" and Cmd+Y is bound to "Show full history". So, on\n' +
    ' Mac, Cmd+Shift+Z is sent for the tests above and the Ctrl+Y test below is\n' +
    ' skipped.',
  ' Test that Ctrl+Y works for Redo, as well as Ctrl+Shift+Z.',
  " Non-Mac platforms don't have a key binding for Yank. Since this test is only\n" +
    ' run on Mac, it uses some Mac specific key bindings.',
  ' No touch on desktop Mac.',
  ' SetCompositionFromExistingText is only available on Windows and Chrome OS.',
  ' The word we select by double clicking should remain selected regardless of\n' +
    ' where we drag the mouse afterwards without releasing the left button.',
  ' TODO(crbug.com/40118868): Revisit the macro expression once build flag switch\n' +
    ' of lacros-chrome is complete.',
  ' Verify that the selection clipboard is not updated for selections on a\n' +
    ' password textfield.',
  ' Long_Press gesture in Textfield can initiate a drag and drop now.',
  ' No touch on desktop Mac.',
  ' TODO(crbug.com/40276114): Rewrite these long press tests when EventGenerator\n' +
    ' can generate long press gestures.',
  ' Tests that a textfield view can be destroyed from OnKeyEvent() on its\n' +
    ' controller and it does not crash.',
  ' Verifies setting the accessible name will call NotifyAccessibilityEvent.',
  ' Check that when accessibility virtual keyboard is enabled, windows are\n' +
    ' shifted up when focused and restored when focus is lost.',
  ' No touch on desktop Mac. Tracked in http://crbug.com/445520.',
  ' When touch drag drop is enabled, long pressing on selected text initiates\n' +
    ' drag-drop behaviour. So, long pressing on selected text should preserve the\n' +
    ' selection rather than selecting the nearest word and activating touch\n' +
    ' selection.',
  ' Verify that cursor visibility is controlled by SetCursorEnabled.',
  " Tests that Textfield::FitToLocalBounds() sets the RenderText's display rect\n" +
    " to the view's bounds, taking the border into account.",
  ' Verify that cursor view height does not exceed the textfield height.',
  ' Verify that cursor view height is independent of its parent view height.',
  ' Check if the text cursor is always at the end of the textfield after the\n' +
    ' text overflows from the textfield. If the textfield size changes, check if\n' +
    " the text cursor's location is updated accordingly.",
  " Verify that after creating a new Textfield, the Textfield doesn't\n" +
    ' automatically receive focus and the text cursor is not visible.',
  ' Verify that if a textfield gains focus during key dispatch that an edit\n' +
    ' command only results when the event is not consumed.',
  ' Tests to see if the BiDi submenu items are updated correctly when the\n' +
    " textfield's text direction is changed.",
  ' Tests to see if the look up item is hidden for password fields.',
  ' Tests that invalid characters like non-displayable characters are filtered\n' +
    ' out when inserted into the text field.'
]
theme_tracking_image_view.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
theme_tracking_image_view_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
throbber.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The larger the diameter, the smaller the delay returned. This is intended\n' +
    ' because large diameters need less delay to look smooth and not jarring.',
  ' Smoothed throbber ---------------------------------------------------------'
]
tree_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Insets around the view.',
  ' Padding before/after the image.',
  ' Size of the arrow region.',
  ' Padding around the text (on each side).',
  ' Padding between the auxiliary text and the end of the line, handles RTL.',
  ' How much children are indented from their parent.',
  ' static',
  " The auxiliary text for a node can use all the parts of the row's bounds that\n" +
    " are logical-after the row's text, and is aligned opposite to the row's text -\n" +
    ' that is, in LTR locales it is trailing aligned, and in RTL locales it is\n' +
    ' leading aligned.',
  ' InternalNode ----------------------------------------------------------------'
]
tree_view_controller.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
tree_view_drawing_provider.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
tree_view_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Creates the following structure:\n 'root'\n   'a'\n   'b'\n     'b1'\n   'c'",
  ' Verify properties are accessible via metadata.',
  ' Verifies setting model correctly updates internal state.',
  ' Verifies that SetSelectedNode works.',
  " Makes sure SetRootShown doesn't blow up.",
  ' Expands a node and verifies the children are loaded correctly.',
  ' Collapse a node and verifies state.',
  ' Verifies that adding nodes works.',
  ' Verifies that removing nodes works.',
  ' Verifies that changing a node title works.',
  ' Verifies that IncrementSelection() works.',
  ' Verifies that CollapseOrSelectParent works.',
  ' Verifies that ExpandOrSelectChild works.',
  ' Verify that selection is properly updated on each keystroke.',
  ' Verifies that edits are committed when focus is lost.',
  ' Verifies that virtual accessible actions go to virtual view targets.',
  ' Verifies that accessibility focus events get fired for the correct nodes when\n' +
    ' the tree view is given focus.'
]
views_text_services_context_menu_base.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
views_text_services_context_menu_chromeos.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
unhandled_keyboard_event_handler.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
unhandled_keyboard_event_handler_default.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
unhandled_keyboard_event_handler_ozone.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
unhandled_keyboard_event_handler_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
web_contents_set_background_color.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
web_dialog_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WebDialogView, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WebDialogView, views::View implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WebDialogView, views::WidgetDelegate implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WebDialogDelegate implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' content::WebContentsDelegate implementation:',
  ' A simplified version of BrowserView::HandleKeyboardEvent().\n' +
    " We don't handle global keyboard shortcuts here, but that's fine since\n" +
    " they're all browser-specific. (This may change in the future.)",
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WebDialogView, private:'
]
web_dialog_view_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Testing delegate configured for use in this test.',
  ' Provides functionality to test a WebDialogView.'
]
webview.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This key indicates that a WebContents is used by a WebView.',
  ' A testing stub that creates web contents.',
  ' Updates the parent accessible object on the NativeView. As WebView overrides\n' +
    ' GetNativeViewAccessible() to return the accessible from the WebContents, it\n' +
    ' needs to ensure the accessible from the parent is set on the NativeView.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WebView, public:',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WebView, View overrides:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WebView, content::WebContentsDelegate implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WebView, content::WebContentsObserver implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WebView, private:'
]
webview_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides functionality to observe events on a WebContents like\n' +
    ' OnVisibilityChanged/WebContentsDestroyed.',
  ' Fakes the fullscreen browser state reported to WebContents and WebView.',
  ' Provides functionality to test a WebView.',
  ' Tests that attaching and detaching a WebContents to a WebView makes the\n' +
    ' WebContents visible and hidden respectively.',
  ' Verifies that there is no crash in WebView destructor\n' +
    ' if WebView is already removed from Widget.',
  ' Test that the specified crashed overlay view is shown when a WebContents\n' +
    ' is in a crashed state.',
  ' Tests to make sure we can default construct the WebView class and set the\n' +
    ' BrowserContext after construction.',
  ' Tests that when a web view is reparented to a different widget hierarchy its\n' +
    " holder's parent NativeViewAccessible matches that of its parent view's\n" +
    ' NativeViewAccessible.',
  " This tests that we don't crash if WebView doesn't have a Widget or a\n" +
    ' Webcontents. https://crbug.com/1191999\n' +
    ' TODO(crbug.com/40923654): Re-enable this test',
  ' Tests to make sure the WebView clears away the reference to its hosted\n' +
    ' WebContents object when its deleted.'
]
desktop_capture_controller_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' NOTE: these tests do native capture, so they have to be in\n' +
    ' interactive_ui_tests.',
  ' This class provides functionality to verify whether the View instance\n' +
    ' received the gesture event.',
  ' Verifies mouse handlers are reset when a window gains capture. Specifically\n' +
    ' creates two widgets, does a mouse press in one, sets capture in the other and\n' +
    ' verifies state is reset in the first.',
  ' Tests aura::Window capture and whether gesture events are sent to the window\n' +
    ' which has capture.\n' +
    ' The test case creates two visible widgets and sets capture to the underlying\n' +
    ' aura::Windows one by one. It then sends a gesture event and validates whether\n' +
    ' the window which had capture receives the gesture.\n' +
    ' TODO(sky): move this test, it should be part of ScopedCaptureClient tests.'
]
tooltip_aura_test_api.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
tooltip_aura.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(varkha): Update if native widget can be transparent on Linux.',
  ' TODO(crbug.com/40118868): Revisit the macro expression once build flag switch\n' +
    ' of lacros-chrome is complete.',
  ' static',
  ' static'
]
tooltip_controller.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if |target| is a valid window to get the tooltip from.\n' +
    ' |event_target| is the original target from the event and |target| the window\n' +
    ' at the same location.',
  ' Returns the target (the Window tooltip text comes from) based on the event.\n' +
    ' If a Window other than event.target() is returned, |location| is adjusted\n' +
    ' to be in the coordinates of the returned Window.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TooltipController public:',
  ' TODO(crbug.com/40285439): Figure out why we have code both here and\n' +
    ' in DesktopNativeWidgetAura to handle mouse (and key?) events. Seems like we\n' +
    ' should only need one set of them.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TooltipController private:',
  ' TODO(bebeaudr): This approach is less than ideal. It looks at the tooltip\n' +
    ' text at the moment the mouse was pressed to determine whether or not we are\n' +
    ' on the same tooltip as before. This cause problems when two elements are next\n' +
    ' to each other and have the same text - unlikely, but an issue nonetheless.\n' +
    " However, this is currently the nearest we can get since we don't have an\n" +
    ' identifier of the renderer side element that triggered the tooltip. Could we\n' +
    ' pass a renderer element unique id alongside the tooltip text?'
]
tooltip_controller_test_helper.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
tooltip_controller_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' crbug.com/664370.',
  " Verifies tooltip isn't shown if tooltip text consists entirely of whitespace.",
  ' Disabled on Lacros since TooltipLacros does not have tooltip timer on client\n' +
    ' side so cannot be tested on unittest.',
  ' Verifies a mouse exit event hides the tooltips.',
  " Returns the index of |window| in its parent's children.",
  ' Verifies when capture is released the TooltipController resets state.\n' +
    ' Flaky on all builders.  http://crbug.com/388268',
  ' Disabled on Linux as X11ScreenOzone::GetAcceleratedWidgetAtScreenPoint\n' +
    " and WaylandScreen::GetAcceleratedWidgetAtScreenPoint don't consider z-order.\n" +
    ' Disabled on Windows due to failing bots. http://crbug.com/604479\n' +
    ' Disabled on Lacros due to crash and flakiness.',
  ' Verifies the correct window is found for tooltips when there is a capture.',
  ' Disabled on Lacros since TooltipLacros does not have tooltip timer on client\n' +
    ' side so cannot be tested on unittest.',
  ' This test validates that the TooltipController correctly triggers a position\n' +
    ' update for a tooltip that is about to be shown.',
  ' This test validates that tooltips are hidden when the currently active window\n' +
    ' loses focus to another window.',
  " Use for tests that don't depend upon views.",
  ' Verifies that tooltip is hidden and tooltip window closed upon cancel mode.',
  ' Use for tests that need both views and a TestTooltip.',
  ' Disabled on Lacros since TooltipLacros cannot handle tooltip with delay on\n' +
    ' client side properly. To test with delay, it needs to use Ash server with\n' +
    ' ui_controls in interactive_ui_tests.',
  ' Disabled on Lacros since TooltipLacros cannot handle tooltip with delay on\n' +
    ' client side properly. To test with delay, it needs to use Ash server with\n' +
    ' ui_controls in interactive_ui_tests.',
  ' This test ensures that we can update the position of the tooltip after the\n' +
    ' |will_show_tooltip_timer_| has been started. This is needed because the\n' +
    ' cursor might still move between the moment Show is called and the timer\n' +
    ' fires.'
]
tooltip_lacros.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
tooltip_state_manager.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Drawing a long word in tooltip is very slow on Windows. crbug.com/513693'
]
tooltip_view_aura.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
debugger_utils.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' intptr_t can alias to int, preventing the use of overloading for ToString.',
  ' Adds attribute string of the form <attribute_name>="<attribute_value>".'
]
debug_utils.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dialog_model_context_menu_controller.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drag_utils.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drag_utils_aura.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_monitor_aura.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An EventMonitorAura that removes its event observer on window destruction.',
  ' static',
  ' static'
]
event_monitor_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A simple event observer that records the number of events.',
  ' Ensure correct behavior when an event monitor is removed while iterating\n' +
    ' over the OS-controlled observer list.'
]
actions_example.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' clang-format on'
]
animated_image_view_example.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class can load a skottie(and lottie) animation file from disk and play\n' +
    ' it in a view as AnimatedImageView.\n' +
    ' See https://skia.org/user/modules/skottie for more info on skottie.'
]
animation_example.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
ax_example.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
badge_example.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
box_layout_example.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bubble_example.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
button_example.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a rounded rect with a border plus shadow. This is used by FabButton\n' +
    ' to draw the button background.',
  ' Floating Action Button (Fab) is a button that has a shadow around the button\n' +
    ' to simulate a floating effect. This class is not used officially in the Views\n' +
    ' library. This is a prototype of a potential way to implement such an effect\n' +
    ' by overriding the hover effect to draw a new background with a shadow.'
]
button_sticker_sheet.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a stretchy table layout: there are |ncols| columns, separated from\n' +
    ' each other by padding columns, and all non-padding columns have equal flex\n' +
    ' weight and will flex in either dimension as needed.',
  ' Adds a label whose text is |label_text| and then all the views in |views|.',
  ' Constructs a pair of MdTextButtons in the specified |state| with the\n' +
    ' specified |listener|, and returns them in |*primary| and |*secondary|. The\n' +
    ' button in |*primary| is a call-to-action button, and the button in\n' +
    ' |*secondary| is a regular button.'
]
checkbox_example.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_chooser_example.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
colored_dialog_example.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
colors_example.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Argument utility macro that expands |label| to both a UTF16 string as the\n' +
    ' first argument and the corresponding ui::ColorId as the second argument.',
  ' Starts a new row and adds two columns to |layout|, the first displaying\n' +
    ' |label_string| and the second displaying |color_id| with its color and\n' +
    ' equivalent components as text.',
  ' Returns a view of two columns where the first contains the identifier names\n' +
    ' of ui::ColorId and the second contains the color.'
]
combobox_example.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A combobox model implementation that generates a list of "Item <index>".'
]
create_examples.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates the default set of examples.'
]
designer_example.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static'
]
dialog_example.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
example_base.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
example_combobox_model.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
examples_color_mixer.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
examples_main.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
examples_main_proc.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
examples_skia_gold_pixel_diff.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
examples_themed_label.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' View:'
]
examples_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
examples_unittest_main.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
examples_views_delegate_chromeos.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
examples_window.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
examples_window_with_content.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
examples_with_content_main.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fade_animation.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
flex_layout_example.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ink_drop_example.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
label_example.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A Label with a clamped preferred width to demonstrate eliding or wrapping.',
  ' static'
]
layout_example_base.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
link_example.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
login_bubble_dialog_example.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Adds a label textfield pair to the login dialog's layout.",
  ' static'
]
menu_example.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ExampleMenuModel ---------------------------------------------------------',
  ' ExampleMenuButton -----------------------------------------------------------'
]
message_box_example.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
multiline_example.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A Label with a clamped preferred width to demonstrate wrapping.',
  ' A simple View that hosts a RenderText object.'
]
notification_example.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
progress_bar_example.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
radio_button_example.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scroll_view_example.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " ScrollView's content, which draws gradient color on background.\n" +
    ' TODO(oshima): add child views as well.'
]
slider_example.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
square_ink_drop_example.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
tabbed_pane_example.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
table_example.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
text_example.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Number of columns in the view layout.',
  ' Toggles bit |flag| on |flags| based on state of |checkbox|.',
  " TextExample's content view, which draws stylized string."
]
textarea_example.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
textfield_example.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
throbber_example.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
toggle_button_example.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
tree_view_example.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
typography_example.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vector_example.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
webview_example.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
widget_example.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
external_focus_tracker.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
focus_manager.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests whether a view is valid, whether it still belongs to the window\n' +
    ' hierarchy of the FocusManager.',
  ' Find the next (previous if reverse is true) focusable view for the specified\n' +
    ' FocusTraversable, starting at the specified view, traversing down the\n' +
    ' FocusTraversable hierarchy.',
  ' static',
  ' |keyboard_accessible_| is only used on Mac.',
  ' TODO(crbug.com/40118868): Revisit the macro expression once build flag switch\n' +
    ' of lacros-chrome is complete.',
  ' TODO(crbug.com/40118868): Revisit the macro expression once build flag switch\n' +
    ' of lacros-chrome is complete.'
]
focus_manager_factory.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
focus_manager_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that the appropriate Focus related methods are called when a View\n' +
    ' gets/loses focus.',
  ' Unregisters itself when its accelerator is invoked.',
  ' Verifies a focus change done during a call to\n' +
    ' AboutToRequestFocusFromTabTraversal() is honored.',
  ' Verifies the stored focus view tracks the focused view.',
  ' Instantiate the Boolean which is used to toggle RTL in\n' +
    ' the parameterized tests.',
  ' Test that the correct view is restored if full keyboard access is changed.',
  ' Test that View::RequestFocus() respects full keyboard access mode.',
  ' Trivial WidgetDelegate implementation that allows setting return value of\n' +
    ' ShouldAdvanceFocusToTopLevelWidget().',
  ' Verifies focus wrapping happens in the same widget.',
  ' Checks that focus traverses from a View to a bubble anchored at that View\n' +
    ' when in a pane.',
  ' Test that a focused view has a visible focus ring.\n' +
    ' This test uses FlexLayout intentionally because it had issues showing focus\n' +
    ' rings.',
  ' This test is specifically for the permutation where the main widget is a\n' +
    ' DesktopNativeWidgetAura and the bubble is a NativeWidgetAura. When focus\n' +
    " moves back from the bubble to the parent widget, ensure that the DNWA's aura\n" +
    ' window is focused.',
  " Test that when an accelerator is sent to a bubble that isn't registered,\n" +
    " the bubble's parent handles it instead.",
  ' Test that when an accelerator is sent to a bubble that is registered on both\n' +
    ' it and its parent, the bubble handles it.',
  " Test that when an accelerator is sent to a bubble that isn't registered\n" +
    " for either the bubble or the bubble's parent, the bubble isn't closed."
]
focus_search.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Strategy for finding the next focusable view:\n' +
    ' - keep going down the first child, stop when you find a focusable view or\n' +
    '   a focus traversable view (in that case return it) or when you reach a view\n' +
    '   with no children.\n' +
    ' - go to the right sibling and start the search from there (by invoking\n' +
    '   FindNextFocusableViewImpl on that view).\n' +
    ' - if the view has no right sibling, go up the parents until you find a parent\n' +
    '   with a right sibling and start the search from there.',
  ' Strategy for finding the previous focusable view:\n' +
    ' - keep going down on the right until you reach a view with no children, if it\n' +
    '   it is a good candidate return it.\n' +
    ' - start the search on the left sibling.\n' +
    ' - if there are no left sibling, start the search on the parent (without going\n' +
    '   down).'
]
focus_traversal_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A View that can act as a pane.',
  ' BorderView is a view containing a native window with its own view hierarchy.\n' +
    ' It is interesting to test focus traversal from a view hierarchy to an inner\n' +
    ' view hierarchy.',
  ' Test focus traversal with full keyboard access off on Mac.',
  ' Test toggling full keyboard access correctly changes the focused view on Mac.',
  ' See explanation in InitContentView.\n' +
    ' NOTE: The failure mode of this test (if http://crbug.com/453699 were to\n' +
    ' regress) is a timeout, due to exponential run time.'
]
widget_focus_manager.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WidgetFocusManager ----------------------------------------------------------',
  ' static',
  ' AutoNativeNotificationDisabler ----------------------------------------------'
]
highlight_border.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static'
]
input_event_activation_protector.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
element_tracker_views.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tracks views associated with a specific ui::ElementIdentifier, whether or not\n' +
    ' they are visible or attached to a widget.',
  ' Tracks Widgets which are not yet visible, or for which we have received an\n' +
    ' OnWidgetVisibilityChanged(true) event but IsVisible() does not yet report\n' +
    ' true for the Widget.\n' +
    ' Therefore, it should only be created and maintained for a Widget for which\n' +
    ' IsVisible() does not return true.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
element_tracker_views_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A subclass of View that has metadata.',
  ' Watches events on the ElementTracker and converts the resulting values back\n' +
    ' into Views from the original ui::TrackedElement objects. Monitoring\n' +
    ' callbacks in this way could be done with gmock but the boilerplate would be\n' +
    ' unfortunately complicated (for some events, the correct parameters are not\n' +
    ' known until after the call is made, since the call itself might create the\n' +
    ' element in question). So instead we use this helper class.',
  " The following tests ensure conformity with the different platforms' Views\n" +
    ' implementation to ensure that Views are reported as visible to the user at\n' +
    ' the correct times, including during Widget close/delete.',
  ' This is a gross corner case where a Widget might not report IsVisible()\n' +
    " during show, but we're still showing views and could conceivably add another\n" +
    ' view as part of a callback.',
  ' Verifies that Views on different Widgets are differentiated by the system.',
  ` The following are variations on the "view's context changes when it moves\n` +
    ' between widgets" test, but with an override context callback modifying\n' +
    ' what context is returned for one or both widgets.'
]
interaction_sequence_views.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
interaction_sequence_views_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This suite contains tests which integrate the functionality of\n' +
    ' ui::InteractionSequence with Views elements like Widgets and buttons.\n' +
    ' Similar suites should be created for other platforms.',
  ' The tests are failing on debug swiftshader on arm64, see\n' +
    ' https://ci.chromium.org/ui/p/chromium/builders/ci/fuchsia-fyi-arm64-dbg/9234/overview\n' +
    ' TODO(crbug.com/42050042): Re-enable the tests once we get rid of swiftshader.',
  ' The tests are failing on debug swiftshader on arm64, see\n' +
    ' https://ci.chromium.org/ui/p/chromium/builders/ci/fuchsia-fyi-arm64-dbg/9234/overview\n' +
    ' TODO(crbug.com/42050042): Re-enable the tests once we get rid of swiftshader.',
  ' NameView tests:',
  ' The tests are failing on debug swiftshader on arm64, see\n' +
    ' https://ci.chromium.org/ui/p/chromium/builders/ci/fuchsia-fyi-arm64-dbg/9234/overview\n' +
    ' TODO(crbug.com/42050042): Re-enable the tests once we get rid of swiftshader.',
  ' The tests are failing on debug swiftshader on arm64, see\n' +
    ' https://ci.chromium.org/ui/p/chromium/builders/ci/fuchsia-fyi-arm64-dbg/9234/overview\n' +
    ' TODO(crbug.com/42050042): Re-enable the tests once we get rid of swiftshader.'
]
interaction_test_util_mouse.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Currently, touch is only supported on ChromeOS Ash.',
  " Ends any drag currently in progress or that starts during this object's\n" +
    ' lifetime. This is needed because the drag controller can get out of sync with\n' +
    ' mouse event handling - especially when running ChromeOS-on-Linux. This can\n' +
    ' result in weird test hangs/timeouts during mouse-up after a drag, or (more\n' +
    ' insidiously) during test shutdown.\n' +
    ' Once started, the DragEnder will kill any drags that start until:\n' +
    '  - Stop() is called.\n' +
    '  - The Aura window it is watching goes away.\n' +
    '  - The DragEnder is destroyed (which should happen no earlier than the end of\n' +
    '    ShutDownOnMainThread()).',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
interaction_test_util_views.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " On Wayland on Linux, window activation isn't guaranteed to work (based on\n" +
    ' what compositor extensions are installed). So instead, make a best effort to\n' +
    ' wait for the widget to activate, and if it fails, skip the test as it cannot\n' +
    ' possibly pass.',
  ' Waits for the dropdown pop-up and selects the specified item from the list.',
  ' Sends a mouse click to the specified `target`.\n' +
    ' Views are EventHandlers but Widgets are not despite having the same API for\n' +
    ' event handling, so use a templated approach to support both cases.',
  ' Sends a tap gesture to the specified `target`.\n' +
    ' Views are EventHandlers but Widgets are not despite having the same API for\n' +
    ' event handling, so use a templated approach to support both cases.',
  ' Sends a key press to the specified `target`. Returns true if the view is\n' +
    ' still valid after processing the keypress.',
  ' static',
  ' static',
  ' static',
  ' static'
]
interaction_test_util_views_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
interactive_views_test.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
interactive_views_test_internal.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Basic observer for low-level activation changes. Relays when a widget\n' +
    ' receives focus.',
  ' Caches the last-known native window associated with a context.\n' +
    ' Useful for executing ClickMouse() and ReleaseMouse() commands, as no target\n' +
    ' element is provided for those commands. A NativeWindowTracker is used to\n' +
    ' prevent using a cached value after the native window has been destroyed.'
]
interactive_views_test_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test that elements named in the main test sequence are available in\n' +
    ' subsequences.',
  ' Test that various automatic binding methods work with verbs and conditions.',
  ' Verifies that WaitForViewProperty() compiles outside of the views namespace\n' +
    ' (this was a problem previously).'
]
view_focus_observer.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_focus_observer_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
widget_focus_observer.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
widget_focus_observer_unittest.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Dummy supplier that doesn't do anything."
]
animating_layout_manager.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the ChildLayout data for the child view in the proposed layout, or\n' +
    ' nullptr if not found.',
  ' Describes the type of fade, used by LayoutFadeInfo (see below).',
  ' Makes a copy of the given layout with only visible child views (non-visible\n' +
    ' children are omitted).',
  ' Returns true if the two proposed layouts have the same visible views, with\n' +
    ' the same parameters, in the same order.',
  ' Holds data about a view that is fading in or out as part of an animation.',
  ' Manages the animation and various callbacks from the animation system that\n' +
    ' are required to update the layout during animations.',
  ' AnimatingLayoutManager:',
  ' Returns the space in which to calculate the target layout.',
  ' static'
]
animating_layout_manager_test_util.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
animating_layout_manager_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a size which is the intersection of |size| and the constraints\n' +
    ' provided by |bounds|, if any.',
  ' View that allows directly setting minimum size.',
  ' Layout that provides a predictable target layout for an\n' +
    ' AnimatingLayoutManager.',
  ' Version of FillLayout that ignores invisible views.',
  ' Test fixture which creates an AnimatingLayoutManager and instruments it so\n' +
    ' the animations can be directly controlled via gfx::AnimationContainerTestApi.',
  ' Regression test for issues: crbug.com/1021332, crbug.com/1003500',
  ' Regression test for issues: crbug.com/1021332, crbug.com/1003500',
  ' Regression test for crbug.com/1037625: crash in SetViewVisibility() (1/2)',
  ' Regression test for crbug.com/1037625: crash in SetViewVisibility() (2/2)',
  ' Regression test for crbug.com/1037947 (1/2)',
  ' Regression test for crbug.com/1037947 (2/2) - Tests a case during sliding\n' +
    ' where if an animation is reversed after a fading-in and fading-out views have\n' +
    ' exchanged relative positions in the layout, the new fading-out view will\n' +
    ' slide behind the wrong view.\n' +
    ' Incorrect behavior (C slides behind B):\n' +
    ' [A]    [B]\n' +
    ' [A]C] [B]\n' +
    ' [A][C]B]\n' +
    ' [A][B[C]   <--- animation is reversed here\n' +
    ' [A] [B]C]\n' +
    ' [A]    [B]\n' +
    ' Correct behavior (C slides behind A):\n' +
    ' [A]    [B]\n' +
    ' [A]C] [B]\n' +
    ' [A][C]B]\n' +
    ' [A][B[C]   <--- animation is reversed here\n' +
    ' [A][C[B]\n' +
    ' [A]C] [B]\n' +
    ' [A]    [B]',
  ' Regression test for issue crbug.com/1040173 (1/2):\n' +
    ' PostOrQueueAction does not delay an action after FadeIn is called.',
  ' Regression test for issue crbug.com/1040173 (2/2):\n' +
    ' PostOrQueueAction does not delay an action after FadeIn is called.',
  ' Regression test for issues crbug.com/1040618 and crbug.com/1040676:\n' +
    ' Views hidden due to layout constraints were not shown after a flex rule\n' +
    ' change and FadeIn() was called.',
  ' Regression test for issue 1046393 (crash/use-after-free when removing view\n' +
    ' during animation).',
  ' Test that when one view can flex to fill the space yielded by another view\n' +
    ' which is hidden, and that such a layout change triggers animation.',
  ' Test that when one view can flex to fill the space yielded by another view\n' +
    ' which is removed, and that such a layout change triggers animation.',
  ' Test that when an animation starts and then the target changes mid-stream,\n' +
    ' the animation redirects.',
  ' Test that when an animation starts and then the target changes near the end\n' +
    ' of the animation, the animation resets.',
  " Test which explores an Animating Layout Manager's behavior in an\n" +
    ' environment where rich animation is not allowed.',
  ' Layout manager which immediately lays out its child views when it is\n' +
    ' invalidated.',
  ' Allows an AnimatingLayoutManager to be observed so that we can wait for an\n' +
    ' animation to complete in real time. Call WaitForAnimationToComplete() to\n' +
    ' pause execution until an animation (if any) is completed.',
  " Test which explores an animating layout manager's response to available size\n" +
    ' changes.',
  ' Available Size Tests --------------------------------------------------------',
  ' Flex Rule Tests -------------------------------------------------------------',
  ' Animating Layout in Flex Layout ---------------------------------------------',
  ' Test without animation.',
  ' Regression test for crbug.com/1311708\n' +
    ' This test will fail without the fix made to\n' +
    ' AnimatingLayoutManager::GetPreferredSize().',
  ' Realtime Tests --------------------------------------------------------------',
  ' Test fixture for testing animations in realtime. Provides a parent view with\n' +
    ' an ImmediateLayoutManager so that when animation frames are triggered, the\n' +
    ' host view is laid out immediately. Animation durations are kept short to\n' +
    ' prevent tests from taking too long.',
  ' TODO(dfried): figure out why these tests absolutely do not animate properly\n' +
    " on Mac. Whatever magic makes the compositor animation runner go doesn't seem\n" +
    ' to want to work on Mac in non-browsertests :(',
  ' Test fixture for testing sequences of the following four actions:\n' +
    ' * animating layout manager configured on host view\n' +
    ' * host view added to parent view\n' +
    ' * parent view added to widget\n' +
    ' * child view added to host view\n' +
    ' The result will either be an animation or no animation, but both will have\n' +
    ' the same final layout. We will not test all possible sequences, but a\n' +
    ' representative sample based on what sequences of actions we are (a) likely to\n' +
    ' see and (b) hit most possible code paths.'
]
box_layout.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' BoxLayoutFlexSpecification --------------------------------------------------',
  ' BoxLayout --------------------------------------------------'
]
box_layout_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verifies that a BoxLayout correctly handles child spacing, flex layout, and\n' +
    ' empty preferred size, simultaneously.',
  ' Regression test for crbug.com/331484014.\n' +
    " In a horizontal layout, a label's height should grow when it is wrapped into\n" +
    ' multiple lines due to insufficient width.'
]
box_layout_view.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
box_layout_view_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
composite_layout_tests.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This test suite simulates the kind of nested layouts we find in e.g. the\n' +
    " toolbar without actually pulling in browser code. It's designed to test\n" +
    ' interactions between multiple levels of Flex and Animating layouts, in a\n' +
    ' situation that resembles how they are actually used.\n' +
    ' The test cases are designed to probe edge cases and interactions that are\n' +
    ' difficult to simulate in either the FlexLayout or AnimatingLayoutManager unit\n' +
    ' tests. They are not browser tests however, and uses TaskEnvironment and\n' +
    ' AnimationContainerTestApi to step animations rather than running them in\n' +
    ' realtime. This makes these tests as quick as unit tests, so they do not incur\n' +
    ' the costs associated with browser tests.\n' +
    ' This suite is part of views_unittests.',
  ' Base class for elements in the toolbar that animate; a stand-in for e.g.\n' +
    ' ToolbarIconContainer.',
  ' Simulates an avatar button on the Chrome toolbar, with a fixed-size icon and\n' +
    ' a label that can animate in and out.',
  ' Simulates extensions buttons in the new toolbar extensions view, with a fixed\n' +
    ' button on the right and buttons to the left that can animate in and out and\n' +
    ' be hidden if there is insufficient space.',
  ' Simulates a toolbar with buttons on either side, a "location bar", and mock\n' +
    ' versions of the extensions container and avatar button.',
  ' Test suite. Sets up the mock toolbar and ties animation of all child elements\n' +
    ' together so they can be controlled for testing. Use the utility methods here\n' +
    ' as much as possible rather than calling methods on the individual Views.',
  ' ------------\n Basic tests.',
  ' ----------------------------------------------------------\n' +
    ' Tests which add/remove extension icons from the container.',
  ' -----------------------------------------------\n' +
    ' Tests which show/hide existing extension icons.',
  ' ----------------------------------\n Tests where child views are moved.',
  ' -----------------------------------------------\n' +
    ' Tests combining two different animating views.',
  ' -----------------------\n Tests in limited space.'
]
delegating_layout_manager.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fill_layout.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fill_layout_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
flex_layout.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Module-private declarations -------------------------------------------------',
  ' Layout information for a specific child view in a proposed layout.',
  ' Private implementation ------------------------------------------------------',
  ' These definitions are required due to the C++ spec.',
  ' Calculates and maintains 1D spacing between a sequence of child views.',
  ' Represents a specific stored layout given a set of size bounds.',
  ' FlexLayout\n' +
    ' -------------------------------------------------------------------',
  ' static',
  ' static'
]
flex_layout_types.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Default Flex Rules ----------------------------------------------------------',
  ' Helper object that lazily returns either the width or height of a LazySize\n' +
    ' (see below).',
  " Some of a view's sizing methods can be expensive to compute. This provides\n" +
    ' a lazy-eval value that behaves like a smart pointer but is more lightweight\n' +
    ' than base::LazyInstance.',
  ' Interpolates a size between minimum, preferred size, and upper bound based on\n' +
    ' sizing rules, returning the resulting ideal size.',
  ' FlexSpecification -----------------------------------------------------------',
  ' Inset1D ---------------------------------------------------------------------',
  ' Span ------------------------------------------------------------------------'
]
flex_layout_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Custom flex rule that snaps a view between its preferred size and half that\n' +
    ' size in each dimension.',
  ' static',
  ' Size Tests ------------------------------------------------------------------',
  ' Visibility and Inclusion Tests ----------------------------------------------',
  ' Child Positioning Tests -----------------------------------------------------',
  ' Height-for-width tests ------------------------------------------------------',
  ' Host insets tests -----------------------------------------------------------',
  ' Include Host Insets Tests ---------------------------------------------------',
  ' Default Main Axis Margins Tests ---------------------------------------------',
  ' Alignment Tests -------------------------------------------------------------',
  ' Flex Tests ------------------------------------------------------------------',
  " This is a test for the case where one child's flex rule will cause it to\n" +
    ' scale to its minimum size, resulting in the other view getting more space\n' +
    ' than it otherwise would.',
  " This is a test for the case where one child's flex rule will cause it to\n" +
    ' drop out, resulting in the other view getting more space *than its preferred\n' +
    ' size*.',
  ' This is a regression test for a case where a view marked as having flex\n' +
    ' weight but which could not flex larger than its preferred size would cause\n' +
    ' other views at that weight to not receive available flex space.',
  ' Tests that views allowed to scale up to their maximum size will do so.',
  ' Tests that views allowed to scale up to their maximum size will do so.',
  ' A higher priority view which can expand past its maximum size should displace\n' +
    " a lower priority view up to the first view's preferred size.",
  ' When a view is allowed to flex above its preferred size, it will still yield\n' +
    ' that additional space to a lower-priority view, if there is space for the\n' +
    ' second view.',
  ' Once lower-priority views have reached their preferred sizes, a\n' +
    ' higher-priority view which can expand past its preferred size should start to\n' +
    ' consume the remaining space.',
  ' If two views can both scale past their preferred size with the same priority,\n' +
    " once space has been allocated for each's preferred size, additional space\n" +
    ' will be divided according to flex weight.',
  ' If two views can both scale past their preferred size once space has been\n' +
    " allocated for each's preferred size, additional space will be given to the\n" +
    ' higher-precedence view.',
  ' Available Size Tests -------------------------------------------------------',
  ' Flex Allocation Order -------------------------------------------------------',
  ' Specific Regression Cases ---------------------------------------------------',
  ' Test case (and example code) for crbug.com/1012119:\n' +
    ' "FlexLayout ignores custom flex rule if it contradicts preferred size"',
  ' Test case (and example code) for crbug.com/1012136:\n' +
    ' "FlexLayout makes children with preferred main axis size 0 invisible even if\n' +
    '  they are kUnbounded"',
  ' Test case (and example code) for crbug.com/1012136:\n' +
    ' "FlexLayout makes children with preferred main axis size 0 invisible even if\n' +
    '  they are kUnbounded"',
  ' Test case should be fixed by:\n' +
    ' https://chromium-review.googlesource.com/c/chromium/src/+/2420128\n' +
    ' Specifically, a label in a flex layout should report preferred height of\n' +
    ' |max_lines| * |line_height| when width is zero, which should affect the\n' +
    ' height bound of the layout.',
  ' Regression test for crbug.com/1239888:\n' +
    ' A vertical layout nested in a horizontal layout should be laid out properly.\n' +
    ' Specifically, it should get its full height if its child views need to grow\n' +
    ' vertically if they are compressed horizontally.',
  ' Pixel-Perfect/Advanced Tests ------------------------------------------------',
  ' NOTE: these are tests ensuring the quasi-multipass behavior of FlexLayout\n' +
    ' (i.e. special-case handling when views do not take up exactly as much space\n' +
    ' as they are offered and need to have the excess redistributed).',
  ' Flex rule that steps each dimension by 5.',
  ' When a view does not take all of the space granted it when excess space is\n' +
    ' being distributed (views flexing above their preferred size) the remaining\n' +
    ' space should be distributed to other views at that flex order.',
  ' When preferred size of views is zero and adding in zero-size views in the\n' +
    ' "allocate excess flex space" phase would put us above the total available\n' +
    ' size, none of them should show.',
  ' Individual cross-axis alignment test ----------------------------------------',
  ' Cross-axis Fit Tests --------------------------------------------------------',
  ' Tests for cross-axis alignment that checks three different conditions:\n' +
    '  - child1 fits entirely in the space provided, with margins\n' +
    "  - child2 fits in the space, but its margins don't\n" +
    '  - child3 does not fit in the space provided',
  ' Nested Layout Tests ---------------------------------------------------------',
  ' No flex in cross-axis direction.',
  ' Drop out on main axis, flex on cross axis.',
  ' Preferred height-for-width on main axis, scale to minimum snap to zero on\n' +
    ' cross axis. (Note: Vertical only!)'
]
flex_layout_view.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
flex_layout_view_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
layout_manager.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
layout_manager_base.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adjusts |child_available_size| by adding the difference between the host\n' +
    " view's size and the size available to it."
]
layout_manager_base_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Dummy class that minimally implements LayoutManagerBase for basic\n' +
    ' functionality testing.',
  ' This layout layout lays out included child views in the upper-left of the\n' +
    ' host view with kChildViewPadding around them. Views that will not fit are\n' +
    ' made invisible. Child views are expected to overlap as they all have the\n' +
    ' same top-left corner.',
  ' Test LayoutManager functionality of LayoutManagerBase:',
  ' Base for tests that evaluate the LayoutManager functionality of\n' +
    ' LayoutManagerBase (rather than the LayoutManagerBase-specific behavior).',
  " An ignored view's visibility and layout are managed outside of the layout\n" +
    " manager, whether that's in the view itself or in a manual layout method in\n" +
    ' its parent view.'
]
layout_manager_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
layout_provider.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
layout_types.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' SizeBound -------------------------------------------------------------------',
  ' SizeBounds ------------------------------------------------------------------'
]
normalized_geometry.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' NormalizedPoint -------------------------------------------------------------',
  ' NormalizedSize --------------------------------------------------------------',
  ' NormalizedInsets ------------------------------------------------------------',
  ' NormalizedSizeBounds --------------------------------------------------------',
  ' NormalizedRect --------------------------------------------------------------',
  ' Normalization and Denormalization -------------------------------------------'
]
normalized_geometry_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
proposed_layout.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
proposed_layout_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
table_layout.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A LayoutElement has a size and location along one axis. It contains methods\n' +
    ' that are used along both axes.',
  ' Invokes ResetSize on all the layout elements.',
  ' Distributes delta among the resizable elements. Each resizable element is\n' +
    ' given (resize() / total_resize * delta) DIP of extra space.',
  ' Returns the sum of the size of the elements from `start` to\n' +
    ' `start` + `length`.',
  ' Advances `index` past any padding elements.',
  ' As the name implies, this represents a Column. Column contains default values\n' +
    ' for views originating in this column.',
  ' Identifies the location in the grid of a particular view, along with\n' +
    ' placement information and size information.'
]
table_layout_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' View that lets you set the minimum size.',
  ' Test linked column sizes, and the column size limit.',
  " Verifies the sizing of a view that doesn't start in the first column\n" +
    ' and has a column span > 1 (crbug.com/254092).',
  ' Tests that space leftover due to rounding is distributed to the last\n' +
    ' resizable column.',
  ' Make sure that for views that span columns the underlying columns are resized\n' +
    ' based on the resize percent of the column.',
  ' Make sure that for views that span both fixed and resizable columns the\n' +
    ' underlying resiable column is resized and the fixed sized column is not.',
  ' Make sure that for views that span both fixed and resizable columns the\n' +
    ' underlying resizable column is resized and the fixed sized column is not.\n' +
    ' The host width in this test is shorter than the minimum size of columns.'
]
table_layout_view.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
masked_targeter_delegate.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
type_conversion.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
type_conversion_unittest.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_factory_internal.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_factory_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
metrics.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
metrics_aura.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
metrics_mac.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Default double click interval in milliseconds.\n Same as what gtk uses.'
]
mouse_watcher.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Amount of time between when the mouse moves outside the Host's zone and when\n" +
    ' the listener is notified.'
]
mouse_watcher_view_host.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ` Returns whether or not the cursor is currently in the view's "zone" which\n` +
    ' is defined as a slightly larger region than the view.',
  " Returns true if the mouse is over the view's window."
]
native_window_tracker_aura.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
paint_info.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Layer's paint info should use the corner scaling logic to compute\n" +
    " the recording which is what Views uses to compte the view's\n" +
    ' paint_recording_bounds_, with exception that a view touches the right/bottom\n' +
    ' edges of the parent, and its layer has to be able to paint to these\n' +
    ' edges. Such cases should be handled case by case basis.',
  ' static',
  '  static',
  ' The root layer should use the ScaleToEnclosingRect, the same logic that\n' +
    ' cc(chrome compositor) is using.'
]
paint_info_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Device scale factors',
  '  ___________\n' +
    ' |     1     |\n' +
    ' |___________|\n' +
    ' | 3 | 4 | 5 | <-- 2 (encapsulates 3, 4 and 5)\n' +
    ' |___|___|___|\n' +
    ' |   7   | 8 | <-- 6 (encapsulates 7 and 8)\n' +
    ' |_______|___|\n' +
    ' |r_0| encapsulates 1, 2 and 6.',
  ' Verifies that the child recording bounds completely cover the parent\n' +
    ' recording bounds.',
  " Make sure the PaintInfo used for view's layer uses the\n corderedbounds."
]
painter.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' SolidRoundRectPainter -------------------------------------------------------',
  ' Creates a round rect painter with a 1 pixel border. The border paints on top\n' +
    ' of the background.',
  ' SolidFocusPainter -----------------------------------------------------------',
  ' ImagePainter ---------------------------------------------------------------',
  ' ImagePainter stores and paints nine images as a scalable grid.',
  ' Painter --------------------------------------------------------------------',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
rect_based_targeting_utils.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
rect_based_targeting_utils_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
repeat_controller.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' RepeatController, public:',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' RepeatController, private:',
  ' static',
  ' static'
]
repeat_controller_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
round_rect_painter.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
run_all_unittests_main.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
selection_controller.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
selection_controller_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Regression test for https://crbug.com/856609',
  ' Regression test for https://crbug.com/731252\n' +
    ' This test validates that drags which are:\n' +
    '   a) Above or below the text, and\n' +
    '   b) Past one end of the text\n' +
    ' behave properly with regard to RenderText::kDragToEndIfOutsideVerticalBounds.\n' +
    ' When that option is true, drags outside the text that are horizontally\n' +
    ' "towards" the text should select all of it; when that option is false, those\n' +
    ' drags should have no effect.'
]
platform_style.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Linux clips bubble windows that extend outside their parent window\n' +
    ' bounds.',
  ' static',
  ' static',
  ' static'
]
typography_provider.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
ax_event_counter.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
button_test_api.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
capture_tracking_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
combobox_test_api.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An dummy implementation of MenuRunnerHandler to check if the dropdown menu is\n' +
    ' shown or not.'
]
desktop_test_views_delegate_aura.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_window_tree_host_win_test_api.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dialog_test.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
focus_manager_test.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' FocusManagerTest',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TestFocusChangeListener',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TestWidgetFocusChangeListener'
]
layout_test_utils.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_runner_test_api.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_test_utils.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TestMenuDelegate -----------------------------------------------------------',
  ' MenuControllerTestApi ------------------------------------------------------',
  ' ReleaseRefTestViewsDelegate ------------------------------------------------'
]
mock_drag_controller.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_input_event_activation_protector.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_native_widget.cc [
  ', Copyright 2023 The Chromium Authors\n' +
    ', Use of this source code is governed by a BSD-style license that can be\n' +
    ', found in the LICENSE file.'
]
native_widget_factory.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_views_test_helper.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
slider_test_api.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_desktop_screen_ozone.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
test_layout_manager.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_layout_provider.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_views.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_views_delegate_aura.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_widget_observer.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_controls_factory_desktop_aura_ozone.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface to provide Aura implementation of UI control.\n static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
view_metadata_test_utils.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_skia_gold_pixel_diff.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_skia_gold_pixel_diff_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_drawing_test_utils.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_test_base.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_test_helper.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_test_helper_aura.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static',
  ' static'
]
views_test_utils.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
webview_test_helper.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
widget_activation_waiter.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Use in tests to wait until a Widget's activation change to a particular\n" +
    ' value. To use create and call Wait().'
]
widget_animation_waiter.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
widget_show_state_waiter.cc [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Use in tests to wait until a Widget's show state changes to a particular\n" +
    ' value. To use create and call Wait().'
]
widget_test.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
widget_test_api.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
widget_test_aura.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Perform a pre-order traversal of |children| and all descendants, looking for\n' +
    ' |first| and |second|. If |first| is found before |second|, return true.\n' +
    ' When a layer is found, it is set to null. Returns once |second| is found, or\n' +
    ' when there are no children left.\n' +
    ' Note that ui::Layer children are bottom-to-top stacking order.',
  ' static',
  ' static',
  ' static',
  ' TODO(crbug.com/40118868): Revisit the macro expression once build flag switch\n' +
    ' of lacros-chrome is complete.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
widget_test_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Insert |widget| into |expected| and ensure it's reported by GetAllWidgets().",
  ' Close |widgets[0]|, and expect all |widgets| to be removed.',
  ' Ensure that Widgets with various root windows are correctly reported by\n' +
    ' WidgetTest::GetAllWidgets().',
  ' As above, but with desktop native widgets (i.e. DesktopNativeWidgetAura on\n' +
    ' Aura).'
]
touch_selection_controller_impl.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constants defining the visual attributes of selection handles',
  ' When a handle is dragged, the drag position reported to the client view is\n' +
    ' offset vertically to represent the cursor position. This constant specifies\n' +
    ' the offset in pixels above the bottom of the selection (see pic below). This\n' +
    ' is required because say if this is zero, that means the drag position we\n' +
    ' report is right on the text baseline. In that case, a vertical movement of\n' +
    ' even one pixel will make the handle jump to the line below it. So when the\n' +
    ' user just starts dragging, the handle will jump to the next line if the user\n' +
    ' makes any vertical movement. So we have this non-zero offset to prevent this\n' +
    ' jumping.\n' +
    ' Editing handle widget showing the padding and difference between the position\n' +
    ' of the EventType::kGestureScrollUpdate event and the drag position reported\n' +
    ' to the client:\n' +
    '                            ___________\n' +
    '    Selection Highlight --->_____|__|<-|---- Drag position reported to client\n' +
    '                              _  |  O  |\n' +
    '            Bottom Padding __|   |   <-|---- EventType::kGestureScrollUpdate\n' +
    '            position\n' +
    '                             |_  |_____|<--- Editing handle widget\n' +
    '                                 | |\n' +
    '                                  T\n' +
    '                          Horizontal Padding',
  ' Minimum height for selection handle bar. If the bar height is going to be\n' +
    ' less than this value, handle will not be shown.',
  " Maximum amount that selection handle bar can stick out of client view's\n" +
    ' boundaries.',
  ' Opacity of the selection handle image.',
  ' Delay before showing the quick menu after it is requested, in milliseconds.',
  ' Vertical offset to apply from the bottom of the selection/text baseline to\n' +
    ' the top of the handle image.',
  ' Padding to apply horizontally around and vertically below the handle image.\n' +
    ' This is included in the touch handle target area to make dragging the handle\n' +
    ' easier (see pic above).',
  " Return the appropriate handle image based on the bound's type",
  ' Returns the appropriate handle vector icon based on the handle bound type.',
  ' Returns the appropriate handle image model based on the handle bound type.',
  ' Calculates the bounds of the widget containing the selection handle based\n' +
    " on the SelectionBound's type and location.",
  " Convenience methods to convert a |bound| from screen to the |client|'s\n" +
    ' coordinate system and vice versa.\n' +
    ' Note that this is not quite correct because it does not take into account\n' +
    ' transforms such as rotation and scaling. This should be in TouchEditable.\n' +
    ' TODO(varunjain): Fix this.',
  ' A View that displays the text selection handle.'
]
touch_selection_controller_impl_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Should match kSelectionHandleBarMinHeight in touch_selection_controller.',
  ' Should match kSelectionHandleBarBottomAllowance in\n' +
    ' touch_selection_controller.',
  ' For selection bounds |b1| and |b2| in a paragraph of text, returns -1 if |b1|\n' +
    ' is physically before |b2|, +1 if |b2| is before |b1|, and 0 if they are at\n' +
    ' the same location.',
  ' Tests that the selection handles are placed appropriately when selection in\n' +
    ' a Textfield changes.',
  ' Tests that the selection handles are placed appropriately in bidi text.',
  ' Tests if the selection update callbacks are called appropriately when\n' +
    ' selection handles are moved.',
  ' Tests that we can handle the hidden handle getting exposed as a result of a\n' +
    ' drag and that it maintains the correct orientation when exposed.',
  ' Touch selection menu is not supported on Cast.',
  ' Tests that the magnifier is shown when directly dragging the cursor in the\n' +
    ' textfield, i.e. when performing a scroll gesture on the textfield rather than\n' +
    ' on the touch handles.',
  ' Tests that touch handles are correctly shown when directly dragging the\n' +
    ' cursor in the textfield.',
  ' Tests that the quick menu is hidden when moving the cursor with a dragging\n' +
    ' gesture on the textfield.',
  ' A simple implementation of TouchEditable that allows faking cursor position\n' +
    ' inside its boundaries.',
  ' Tests if the touch editing handle is shown or hidden properly according to\n' +
    ' the cursor position relative to the client boundaries.',
  " Tests that the touch selection controller doesn't crash when a handle widget\n" +
    ' is destroyed while touch selection is still active. Regression test for\n' +
    ' https://crbug.com/1448682.'
]
touch_selection_menu_runner_views.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_selection_menu_runner_views_unittest.cc [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that the default touch selection menu runner is installed and opening\n' +
    ' and closing the menu works properly.',
  ' Tests that the anchor rect for the quick menu is adjusted to account for the\n' +
    ' handles. When the width of the anchor rect is too small to fit the quick\n' +
    ' menu, the bottom of the anchor rect should be expanded so that the quick menu\n' +
    ' will not overlap with the handles.',
  ' Tests that running one of menu actions closes the menu properly.',
  ' Tests that closing the menu widget cleans up the menu runner state properly.',
  ' Regression test for shutdown crash. https://crbug.com/1146270',
  ' Tests that pressing a menu button records a histogram entry.'
]
touch_selection_menu_views.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constants to apply when touch text editing redesign is disabled.',
  ' Constants to apply when touch text editing redesign is enabled.',
  ' Padding to add space between the menu and the selection bounds and handles.',
  ' Padding to apply horizontally around button labels.'
]
view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Default horizontal drag threshold in pixels.\n Same as what gtk uses.',
  ' Default vertical drag threshold in pixels.\n Same as what gtk uses.',
  ' The following are used to offset the keys for the callbacks associated with\n' +
    ' the bounds element callbacks.',
  " Returns the top view in |view|'s hierarchy.",
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' ViewMaskLayer\n' +
    ' This class is responsible for creating a masking layer for a view that paints\n' +
    ' to a layer. It tracks the size of the layer it is masking.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' View, public:',
  ' Creation and lifetime -------------------------------------------------------',
  ' Tree operations -------------------------------------------------------------',
  ' Size and disposition --------------------------------------------------------',
  ' Transformations -------------------------------------------------------------',
  ' RTL positioning -------------------------------------------------------------',
  ' Layout ----------------------------------------------------------------------',
  ' Attributes ------------------------------------------------------------------',
  ' Coordinate conversion -------------------------------------------------------',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' Painting --------------------------------------------------------------------',
  ' The following is temporary. It is present to help diagnose a potential UaF.',
  ' RTL painting ----------------------------------------------------------------',
  ' Input -----------------------------------------------------------------------',
  ' Accelerators ----------------------------------------------------------------',
  ' Focus -----------------------------------------------------------------------',
  ' Tooltips --------------------------------------------------------------------',
  ' Context menus ---------------------------------------------------------------',
  ' Drag and drop ---------------------------------------------------------------',
  ' static',
  ' Accessibility----------------------------------------------------------------',
  ' Scrolling -------------------------------------------------------------------',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' View, protected:',
  ' Size and disposition --------------------------------------------------------',
  ' Tree operations -------------------------------------------------------------',
  ' Painting --------------------------------------------------------------------',
  ' Accelerated Painting --------------------------------------------------------',
  ' Input -----------------------------------------------------------------------',
  ' Focus -----------------------------------------------------------------------',
  ' System events ---------------------------------------------------------------',
  ' Tooltips --------------------------------------------------------------------',
  ' Drag and drop ---------------------------------------------------------------',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' View, private:',
  ' DropInfo --------------------------------------------------------------------',
  ' Painting --------------------------------------------------------------------',
  ' Tree operations -------------------------------------------------------------',
  ' Size and disposition --------------------------------------------------------',
  ' static',
  ' static',
  ' Transformations -------------------------------------------------------------',
  ' Coordinate conversion -------------------------------------------------------',
  ' Accelerated painting --------------------------------------------------------',
  ' Layout ----------------------------------------------------------------------',
  ' Input -----------------------------------------------------------------------',
  ' Accelerators ----------------------------------------------------------------',
  ' Focus -----------------------------------------------------------------------',
  ' System events ---------------------------------------------------------------',
  ' Tooltips --------------------------------------------------------------------',
  ' Drag and drop ---------------------------------------------------------------',
  ' This block requires the existence of METADATA_HEADER_BASE(View) in the class\n' +
    ' declaration for View.'
]
view_class_properties.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' aura_constants.cc also defines these types.'
]
view_constants.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_constants_aura.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_model.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' views in `entries_` are owned by their parents, no need to delete them.'
]
view_model_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a string containing the x-coordinate of each of the views in |model|.',
  ' Returns a string containing the id of each of the views in |model|.'
]
view_model_utils.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used in calculating ideal bounds.',
  ' static',
  ' static',
  ' static'
]
view_model_utils_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Makes sure SetViewBoundsToIdealBounds updates the view appropriately.',
  ' Assertions for DetermineMoveIndex.'
]
view_shadow.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_shadow_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Tests the shadow layer will not shift when the view's layer is reparented to\n" +
    ' another layer.'
]
view_targeter.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_targeter_delegate.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " The minimum percentage of a view's area that needs to be covered by a rect\n" +
    ' representing a touch region in order for that view to be considered by the\n' +
    ' rect-based targeting algorithm.',
  ' TODO(tdanderson): Move the contents of rect_based_targeting_utils.(h|cc)\n' +
    '                   into here.'
]
view_targeter_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A derived class of View used for testing purposes.',
  ' A derived class of View having a triangular-shaped hit test mask.',
  ' TODO(tdanderson): Clean up this test suite by moving common code/state into\n' +
    '                   ViewTargeterTest and overriding SetUp(), TearDown(), etc.\n' +
    '                   See crbug.com/355680.',
  ' Verifies that the the functions ViewTargeter::FindTargetForEvent()\n' +
    ' and ViewTargeter::FindNextBestTarget() are implemented correctly\n' +
    ' for key events.',
  ' Verifies that the the functions ViewTargeter::FindTargetForEvent()\n' +
    ' and ViewTargeter::FindNextBestTarget() are implemented correctly\n' +
    ' for scroll events.',
  ' Convenience to make constructing a GestureEvent simpler.',
  ' Verifies that the the functions ViewTargeter::FindTargetForEvent()\n' +
    ' and ViewTargeter::FindNextBestTarget() are implemented correctly\n' +
    ' for gesture events.',
  ' Tests that the contents view is targeted instead of the root view for\n' +
    ' gesture events that should be targeted to the contents view. Also\n' +
    ' tests that the root view is targeted for gesture events which should\n' +
    ' not be targeted to any other view in the views tree.',
  ' Tests that calls to FindTargetForEvent() and FindNextBestTarget() change\n' +
    ' the location of a gesture event to be in the correct coordinate space.',
  ' Tests that the functions ViewTargeterDelegate::DoesIntersectRect()\n' +
    ' and MaskedTargeterDelegate::DoesIntersectRect() work as intended when\n' +
    ' called on views which are derived from ViewTargeterDelegate.\n' +
    ' Also verifies that ViewTargeterDelegate::DoesIntersectRect() can\n' +
    ' be called from the ViewTargeter installed on RootView.',
  ' Tests that calls made directly on the hit-testing methods in View\n' +
    ' (HitTestPoint(), HitTestRect(), etc.) return the correct values.'
]
view_tracker.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_tracker_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if |ancestor| is an ancestor of |layer|.',
  ' Convenience functions for walking a View tree.',
  ' Convenience functions for walking a Layer tree.',
  ' Given the root nodes of a View tree and a Layer tree, makes sure the two\n' +
    ' trees are in sync.',
  ' Constructs a View tree with the specified depth.',
  ' A derived class for testing purpose.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Metadata\n' +
    '//////////////////////////////////////////////////////////////////////////////',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Layout\n' +
    '//////////////////////////////////////////////////////////////////////////////',
  ' Tests that SizeToPreferredSize will trigger a Layout if the size has changed\n' +
    ' or if layout is marked invalid.',
  ' A view that provides direct and indirect ways to trigger\n' +
    ' `LayoutSuperclass<>()`.',
  ' Verifies that LayoutSuperclass<>() can only be invoked while layout is\n' +
    ' occurring.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Accessibility Property Setters\n' +
    '//////////////////////////////////////////////////////////////////////////////',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' OnBoundsChanged\n' +
    '//////////////////////////////////////////////////////////////////////////////',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' OnStateChanged\n' +
    '//////////////////////////////////////////////////////////////////////////////',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' MouseEvent\n' +
    '//////////////////////////////////////////////////////////////////////////////',
  ' Confirm that a view can be deleted as part of processing a mouse press.',
  ' Detect the return value of OnMouseDragged',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Painting\n' +
    '//////////////////////////////////////////////////////////////////////////////',
  ' Helper class to create a Widget with standard parameters that is closed when\n' +
    ' the helper class goes out of scope.',
  ' A derived class for testing paint.',
  ' Tests the correctness of the rect-based targeting algorithm implemented in\n' +
    ' View::GetEventHandlerForRect(). See http://goo.gl/3Jp2BD for a description\n' +
    ' of rect-based targeting.',
  ' Tests that GetEventHandlerForRect() and GetTooltipHandlerForPoint() behave\n' +
    ' as expected when different views in the view hierarchy return false\n' +
    ' when GetCanProcessEventsWithinSubtree() is called.',
  ' Tests that the Textfield view respond appropiately to cut/copy/paste.',
  ' Tests that only Views where SchedulePaint was invoked get repainted.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Accelerators\n' +
    '//////////////////////////////////////////////////////////////////////////////',
  ' A Widget with a TestView in the view hierarchy. Used for accelerator tests.',
  ' On non-ChromeOS aura there is extra logic to determine whether a view should\n' +
    ' handle accelerators or not (see View::CanHandleAccelerators for details).\n' +
    ' This test targets that extra logic, but should also work on other platforms.',
  ' TODO(themblsha): Bring this up on non-Mac platforms. It currently fails\n' +
    ' because TestView::AcceleratorPressed() is not called. See\n' +
    ' http://crbug.com/667757.',
  ' Test that BridgedContentView correctly handles Accelerator key events when\n' +
    ' subject to OS event dispatch.',
  ' TODO(crbug.com/41287573): these tests were initially commented out when\n' +
    ' getting aura to run. Figure out if still valuable and either nuke or fix.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Native view hierachy\n' +
    '//////////////////////////////////////////////////////////////////////////////',
  ' Test that\n' +
    ' a) a view can track the current top level widget by overriding\n' +
    '    View::ViewHierarchyChanged() and View::NativeViewHierarchyChanged().\n' +
    ' b) a widget has the correct parent after reparenting.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Transformations\n' +
    '//////////////////////////////////////////////////////////////////////////////',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' OnVisibleBoundsChanged()',
  ' Assertions around painting and focus gain/lost.',
  " Verifies SetBounds(same bounds) doesn't trigger a SchedulePaint().",
  ' Verifies AddChildView() and RemoveChildView() schedule appropriate paints.',
  ' Tests conversion methods with a transform.',
  ' Tests conversion methods to and from screen coordinates.',
  ' Tests conversion methods for rectangles.',
  ' Verifies that AddedToWidget and RemovedFromWidget are called for a view when\n' +
    ' it is added to hierarchy.\n' +
    ' The tree looks like this:\n' +
    ' widget\n' +
    ' +-- root\n' +
    ' then v1 is added to root:\n' +
    '     v1\n' +
    '     +-- v2\n' +
    ' finally v1 is removed from root.',
  ' Verifies if the child views added under the root are all deleted when calling\n' +
    ' RemoveAllChildViews.\n' +
    ' The tree looks like this:\n' +
    ' root\n' +
    ' +-- child1\n' +
    '     +-- foo\n' +
    '         +-- bar0\n' +
    '         +-- bar1\n' +
    '         +-- bar2\n' +
    ' +-- child2\n' +
    ' +-- child3',
  ' Verifies if GetIndexOf() returns the correct index for the specified child\n' +
    ' view.\n' +
    ' The tree looks like this:\n' +
    ' root\n' +
    ' +-- child1\n' +
    '     +-- foo1\n' +
    ' +-- child2',
  ' Verifies that the child views can be reordered correctly.',
  ' Verifies that GetViewByID returns the correctly child view from the specified\n' +
    ' ID.\n' +
    ' The tree looks like this:\n' +
    ' v1\n' +
    ' +-- v2\n' +
    '     +-- v3\n' +
    '     +-- v4',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' FocusManager\n' +
    '//////////////////////////////////////////////////////////////////////////////',
  ' A widget that always claims to be active, regardless of its real activation\n' +
    ' status.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Layers\n' +
    '//////////////////////////////////////////////////////////////////////////////',
  ' Test implementation of LayerAnimator.',
  ' Verify that setting an identity transform after SetPaintToLayer() has been\n' +
    " called doesn't destroy the layer.",
  ' Verify that calling DestroyLayer() while a non-identity transform is present\n' +
    " doesn't destroy the layer.",
  ' Verifies turning on a layer wires up children correctly.',
  ' Verifies the bounds of a layer are updated if the bounds of ancestor that\n' +
    " doesn't have a layer change.",
  " Verifies the view observer is triggered when the clip rect of view's layer is\n" +
    ' updated.',
  ' Make sure layers are positioned correctly in RTL.',
  ' Make sure that resizing a parent in RTL correctly repositions its children.',
  ' Makes sure a transform persists after toggling the visibility.',
  ' Verifies a transform persists after removing/adding a view with a transform.',
  ' Makes sure that layer visibility is correct after toggling View visibility.',
  ' Tests that the layers in the subtree are orphaned after a View is removed\n' +
    ' from the parent.',
  " Makes sure child views with layers aren't painted when paint starts at an\n" +
    ' ancestor.',
  " Tests that the visibility of child layers are updated correctly when a View's\n" +
    ' visibility changes.',
  ' This test creates a random View tree, and then randomly reorders child views,\n' +
    ' reparents views etc. Unrelated changes can appear to break this test. So\n' +
    ' marking this as FLAKY.',
  ' Verifies when views are reordered the layer is also reordered. The widget is\n' +
    ' providing the parent layer.',
  ' Verifies that the layer of a view can be acquired properly.',
  ' Verify the z-order of the layers as a result of calling RecreateLayer().',
  ' Verify the z-order of the layers as a result of calling RecreateLayer when\n' +
    ' the widget is the parent with the layer.',
  " Verifies RecreateLayer() moves all Layers over, even those that don't have\n" +
    ' a View.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeTheme\n' +
    '//////////////////////////////////////////////////////////////////////////////',
  ' See comment above test for details.',
  ' See comment above test for details.',
  ' Creates and adds a new child view to |parent| that has a layer.',
  ' This test does the following:\n' +
    ' . creates a couple of views with layers added to the root.\n' +
    ' . Add a view that overrides OnThemeChanged(). In OnThemeChanged() another\n' +
    ' view is added. This sequence triggered DCHECKs or crashes previously. This\n' +
    " tests verifies that doesn't happen. Reason for crash was OnThemeChanged() was\n" +
    ' called before the layer hierarchy was updated. OnThemeChanged() should be\n' +
    ' called after the layer hierarchy matches the view hierarchy.',
  ' A View that removes its Layer when hidden.',
  ' Test that Views can safely manipulate Layers during Widget closure.',
  ' A View that keeps the children with a special ID above other children.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Observer tests.\n' +
    '//////////////////////////////////////////////////////////////////////////////',
  ' Provides a simple parent view implementation which tracks layer change\n' +
    ' notifications from child views.',
  ' Tests the following cases.\n' +
    ' 1. We receive the OnChildLayerChanged() notification when a layer change\n' +
    '    occurs in a child view.\n' +
    " 2. We don't receive two layer changes when a child with an existing layer\n" +
    '    creates a new layer.',
  ' This view always resizes the associated layer when bounds change.',
  ' Confirms that the size of a View and the size of a region-attached layer stay\n' +
    ' in sync.'
]
view_unittest_aura.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a widget of TYPE_CONTROL.\n' +
    ' The caller takes ownership of the returned widget.',
  ' Returns a view with a layer with the passed in |bounds| and |layer_name|.\n' +
    ' The caller takes ownership of the returned view.',
  ' Test that wm::RecreateLayers() recreates the layers for all child windows and\n' +
    ' all child views and that the z-order of the recreated layers matches that of\n' +
    ' the original layers.\n' +
    ' Test hierarchy:\n' +
    ' w1\n' +
    ' +-- v1\n' +
    ' +-- v2 (no layer)\n' +
    '     +-- v3 (no layer)\n' +
    '     +-- v4\n' +
    ' +-- w2\n' +
    '     +-- v5\n' +
    '         +-- v6\n' +
    ' +-- v7\n' +
    '     +-- v8\n' +
    '     +-- v9'
]
view_utils.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_delegate.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_features.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Please keep alphabetized.',
  ' Use a high-contrast style for ink drops when in platform high-contrast mode,\n' +
    ' including full opacity and a high-contrast color',
  ' Only paint views that are invalidated/dirty (i.e. a paint was directly\n' +
    ' scheduled on those views) as opposed to painting all views that intersect\n' +
    ' an invalid rectangle on the layer.',
  ' Used to enable keyboard-accessible tooltips in Views UI, as opposed\n' +
    ' to kKeyboardAccessibleTooltip in //ui/base/ui_base_features.cc.',
  ' Used to enable additional a11y attributes when announcing text.'
]
views_perftests.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_switches.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Please keep alphabetized.',
  ' Disables the disregarding of potentially unintended input events such as\n' +
    ' button clicks that happen instantly after the button is shown. Use this for\n' +
    ' integration tests that do automated clicks etc.',
  ' Draws a semitransparent rect to indicate the bounds of each view.',
  ' Captures stack traces on View construction to provide better debug info.'
]
views_test_suite.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
any_widget_observer.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
any_widget_observer_singleton.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
any_widget_observer_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_capture_client.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This comparator facilitates constructing DesktopCaptureClient WeakPtr sets.',
  ' static',
  ' static'
]
desktop_drag_drop_client_ozone.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The minimum alpha required so we would treat the pixel as visible.',
  ' Returns true if |image| has any visible regions (defined as having a pixel\n' +
    ' with alpha > |kMinAlpha|).',
  ' Drops the dragged data if no policy restrictions exist (Data Leak Prevention\n' +
    ' stack uninitialised) or if there are rules allowing the data transfer.\n' +
    ' Otherwise the drag is cancelled.',
  ' A callback that runs the drop closure, if there is one, to perform the data\n' +
    ' drop. If this callback is destroyed without running, the |drag_cancel|\n' +
    ' closure will run.'
]
desktop_drag_drop_client_ozone_linux.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_drag_drop_client_ozone_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Platforms have different approaches to handling window coordinates.  For\n' +
    " instance, Wayland doesn't use window origin (it is always zero) and treats\n" +
    ' coordinates of pointer events as local ones (always within the window), but\n' +
    ' X11 1) uses the origin and may adjust it so that a window gets non-zero\n' +
    ' origin, see X11Window::OnConfigureEvent(), and 2) treats mouse coordinates as\n' +
    " global ones, so that the event may be considered being 'outside the window'\n" +
    ' and discarded, which will make some tests in this suite failing.\n' +
    ' To ensure the drag to be always started within the drag widget, we choose\n' +
    ' size of the drag widget and location so that the location stays within the\n' +
    ' widget, even if the platform adjusts its position.\n' +
    ' See crbug.com/1119787',
  ' DragDropDelegate which counts the number of each type of drag-drop event.',
  ' crbug.com/1151836 was null dereference during drag and drop.\n' +
    ' A possible reason was invalid sequence of events, so here we just drop data\n' +
    ' without any notifications that should come before (like drag enter or drag\n' +
    ' motion).  Before this change, that would hit some DCHECKS in the debug build\n' +
    ' or cause crash in the release one, now it is handled properly.  Methods of\n' +
    ' FakeDragDropDelegate ensure that data in the event is always valid.\n' +
    ' The error message rendered in the console when this test is running is the\n' +
    ' expected and valid side effect.\n' +
    ' See more information in the bug.'
]
desktop_drag_drop_client_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_drop_target_win.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_event_client.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_focus_rules.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_focus_rules_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Verifies we don't attempt to activate a window in another widget.",
  ' Verifies root windows are not activatable.'
]
desktop_native_cursor_manager.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_native_cursor_manager_win.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_native_widget_aura.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class provides functionality to create a top level widget to host a\n' +
    ' child window.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopNativeWidgetAura, public:',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopNativeWidgetAura, internal::NativeWidgetPrivate implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopNativeWidgetAura, aura::WindowDelegate implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopNativeWidgetAura, ui::EventHandler implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopNativeWidgetAura, wm::ActivationDelegate implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopNativeWidgetAura, wm::ActivationChangeObserver implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopNativeWidgetAura, aura::client::FocusChangeObserver implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopNativeWidgetAura, aura::WindowDragDropDelegate implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopNativeWidgetAura, aura::WindowTreeHostObserver implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopNativeWidgetAura, private:'
]
desktop_native_widget_aura_interactive_uitest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This tests ensures that when a widget with an active child widget are\n' +
    ' showing, and a new widget is shown, the widget and its child are both\n' +
    ' deactivated. This covers a regression where deactivating the child widget\n' +
    ' would activate the parent widget at the same time the new widget receives\n' +
    ' activation, causing windows to lock when minimizing / maximizing (see\n' +
    ' crbug.com/1284537).',
  ' Tests to make sure that a widget that shows an active child has activation\n' +
    " correctly propagate to the child's content window. This also tests to make\n" +
    " sure that when this child window is closed, and the desktop widget's window\n" +
    " tree host remains active, the widget's content window has its activation\n" +
    ' state restored. This tests against a regression where the desktop widget\n' +
    " would not receive activation when it's child bubbles were closed (see\n" +
    ' crbug.com/1294404).'
]
desktop_native_widget_aura_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Verifies creating a Widget with a parent that is not in a RootWindow doesn't\n" +
    ' crash.',
  ' Verifies that the Aura windows making up a widget instance have the correct\n' +
    ' bounds after the widget is resized.',
  ' Verifies GetNativeView() is initially hidden. If the native view is initially\n' +
    ' shown then animations can not be disabled.',
  " Verifies that the native view isn't activated if Widget requires that.",
  ' Verifies that if the DesktopWindowTreeHost is already shown, the native view\n' +
    " still reports not visible as we haven't shown the content window.",
  ' TODO(crbug.com/40607034): investigate fixing and enabling on Chrome OS.',
  ' Verify that the cursor state is shared between two native widgets.',
  " Verifies FocusController doesn't attempt to access |content_window_| during\n" +
    ' destruction. Previously the FocusController was destroyed after the window.\n' +
    ' This could be problematic as FocusController references |content_window_| and\n' +
    ' could attempt to use it after |content_window_| was destroyed. This test\n' +
    " verifies this doesn't happen. Note that this test only failed under ASAN.",
  ' TODO(crbug.com/40607034): investigate fixing and enabling on Chrome OS.',
  ' Verifies that a widget can be destroyed when running a nested message-loop.',
  ' DesktopNativeWidgetAura::CloseNow is protected.\n' +
    ' Create a new object to override CloseNow so we can test deleting\n' +
    ' the native widget.',
  ' Series of tests that verifies a null NativeWidgetDelegate does not cause\n' +
    ' a crash.',
  ' TODO(crbug.com/40192931): Under Fuchsia pop-up and fullscreen windows are not\n' +
    ' reparented to be top-level, so the following tests are not valid.',
  ' This class provides functionality to create fullscreen and top level popup\n' +
    ' windows. It additionally tests whether the destruction of these windows\n' +
    ' occurs correctly in desktop AURA without crashing.\n' +
    ' It provides facilities to test the following cases:-\n' +
    ' 1. Child window destroyed which should lead to the destruction of the\n' +
    '    parent.\n' +
    ' 2. Parent window destroyed which should lead to the child being destroyed.',
  ' This test validates that when a top level owned popup Aura window is\n' +
    ' resized, the widget is resized as well.',
  ' This test validates that when a top level owned popup Aura window is\n' +
    ' repositioned, the widget is repositioned as well.',
  ' The following code verifies we can correctly destroy a Widget from a mouse\n' +
    " enter/exit. We could test move/drag/enter/exit but in general we don't run\n" +
    ' nested run loops from such events, nor has the code ever really dealt\n' +
    ' with this situation.',
  ' Generates two moves (first generates enter, second real move), a press, drag\n' +
    ' and release stopping at |last_event_type|.',
  ' Creates a widget and invokes GenerateMouseEvents() with |last_event_type|.',
  " Verifies deleting the widget from a mouse pressed event doesn't crash.",
  " Verifies deleting the widget from a mouse released event doesn't crash.",
  ' TODO(crbug.com/40607034): investigate fixing and enabling on Chrome OS.',
  ' This test verifies that whether mouse events when a modal dialog is\n' +
    ' displayed are eaten or received by the dialog.',
  ' Tests whether we can activate the top level widget when a modal dialog is\n' +
    ' active.',
  ' This test validates that sending WM_CHAR/WM_SYSCHAR/WM_SYSDEADCHAR\n' +
    ' messages via the WindowEventTarget interface implemented by the\n' +
    ' HWNDMessageHandler class does not cause a crash due to an unprocessed\n' +
    ' event',
  ' Tests that reparenting a destkop widget to another desktop widget does not\n' +
    ' crash.'
]
desktop_screen_ozone.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_screen_position_client.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if bounds passed to window in SetBounds should be treated as\n' +
    ' though they are in screen coordinates.'
]
desktop_screen_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////'
]
desktop_window_tree_host.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_window_tree_host_lacros.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Chrome do not expect the pointer (mouse/touch) events are dispatched to\n' +
    ' chrome during move loop. The mouse events are already consumed by\n' +
    ' ozone-wayland but touch events are sent to the `aura::WindowEventDispatcher`\n' +
    ' to update the touch location. Consume touch events at system handler level so\n' +
    ' that chrome will not see the touch events.',
  ' static',
  ' static'
]
desktop_window_tree_host_linux.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
desktop_window_tree_host_platform.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A list of all (top-level) windows that have been created but not yet\n' +
    ' destroyed.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopWindowTreeHostPlatform:',
  ' static',
  ' static',
  ' static',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopWindowTreeHost:',
  ' Linux subclasses this host and adds some Linux specific bits.',
  ' static',
  ' static',
  ' static'
]
desktop_window_tree_host_platform_impl_interactive_uitest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Dispatches a motion event targeted to |point_in_screen|.',
  ' An event handler which counts the number of mouse moves it has seen.',
  ' A fake handler, which just stores the hittest and pointer location values.',
  ' This is used to return a customized result to NonClientHitTest.',
  ' This is used to return HitTestNonClientFrameView on create call.',
  ' Test host that can intercept calls to the real host.',
  ' These tests are run using either click or touch events.',
  ' On Lacros, the resize and drag operations are handled by compositor,\n' +
    ' so this test does not make much sense.',
  ' Tests that the window is maximized in response to a double click event.',
  ' Tests that the window does not maximize in response to a double click event,\n' +
    ' if the first click was to a different target component than that of the\n' +
    ' second click.',
  ' Tests that the window does not maximize in response to a double click event,\n' +
    ' if the double click was interrupted by a right click.',
  ' Test that calling Widget::Deactivate() sets the widget as inactive wrt to\n' +
    ' Chrome even if it not possible to deactivate the window wrt to the x server.\n' +
    ' This behavior is required by several interactive_ui_tests.',
  ' Chrome attempts to make mouse capture look synchronous on Linux. Test that\n' +
    ' Chrome synchronously switches the window that mouse events are forwarded to\n' +
    ' when capture is changed.'
]
desktop_window_tree_host_platform_impl_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This tests the wayland and linux(x11) implementation of the\n' +
    ' DesktopWindowTreeHostPlatform.',
  ' A NonClientFrameView with a window mask with the bottom right corner cut out.',
  ' Checks that the visibility of the content window of\n' +
    ' `DesktopWindowTreeHostPlatform` matches the visibility of the ui compositor.',
  ' Checks that a call to `SetZOrderLevel` on a `PlatformWindow` sets the z order\n' +
    ' on the associated `Widget`.'
]
desktop_window_tree_host_platform_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Calling show/hide/show triggers changing visibility of the native widget.',
  ' Tests that the minimization information is propagated to the content window.',
  ' Tests that the window shape is updated from the\n' +
    ' |NonClientView::GetWindowMask|.',
  ' Calling show/hide/show triggers changing visibility of the native widget.',
  ' A Widget that allows setting the min/max size for the widget.',
  ' Verifies that setting widget bounds, just after creating it, with the same\n' +
    ' size passed in InitParams does not lead to a "bounds change" event. Prevents\n' +
    ' regressions, such as https://crbug.com/1151092.'
]
desktop_window_tree_host_win.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' While the mouse is locked we want the invisible mouse to stay within the\n' +
    ' confines of the screen so we keep it in a capture region the size of the\n' +
    ' screen.  However, on windows when the mouse hits the edge of the screen some\n' +
    ' events trigger and cause strange issues to occur. To stop those events from\n' +
    ' occurring we add a small border around the edge of the capture region.\n' +
    ' This constant controls how many pixels wide that border is.',
  ' Updates the cursor clip region. Used for mouse locking.',
  ' Identifies the DesktopWindowTreeHostWin associated with the\n' +
    ' WindowEventDispatcher.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopWindowTreeHostWin, public:',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopWindowTreeHostWin, DesktopWindowTreeHost implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopWindowTreeHostWin, WindowTreeHost implementation:',
  ' GetBoundsInPixels and SetBoundsInPixels work in pixel coordinates, whereas\n' +
    ' other get/set methods work in DIP.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopWindowTreeHostWin, wm::AnimationHost implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopWindowTreeHostWin, HWNDMessageHandlerDelegate implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopWindowTreeHostWin, private:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DesktopWindowTreeHost, public:',
  ' static'
]
desktop_window_tree_host_win_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This test validates that we do not leak the root accessibility object when\n' +
    ' handing it out.',
  ' This test validates that we do not leak the caret accessibility object when\n' +
    ' handing it out.',
  ' This test validates that we do not leak the root accessibility object when\n' +
    ' handing it out (UIA mode).'
]
window_event_filter_lacros.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_event_filter_linux.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_move_client_platform.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_widget_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verifies setting the bounds of a dialog parented to a Widget with a\n' +
    ' PlatformDesktopNativeWidget is positioned correctly.',
  ' Verifies that setting the bounds of a control parented to something other\n' +
    ' than the root window is positioned correctly.',
  ' Verifies that the initial bounds of the widget is fully on the screen.',
  ' Verifies that the initial bounds of the widget is fully within the bounds of\n' +
    ' the parent.'
]
drop_helper.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
drop_helper_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A view implementation for validating drop location.',
  ' Verifies that drop coordinates are dispatched in View coordinates.'
]
focus_manager_event_handler.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_widget_aura.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adds `window` as a child of `parent`. If `parent` is nullptr, find an\n' +
    ' appropriate parent by consulting an implementation of WindowParentingClient\n' +
    ' attached at the root Window of the tree where `window` lives.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeWidgetAura, public:',
  ' static',
  ' static',
  ' static',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeWidgetAura, internal::NativeWidgetPrivate implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeWidgetAura, aura::WindowDelegate implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeWidgetAura, aura::WindowObserver implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeWidgetAura, ui::EventHandler implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeWidgetAura, wm::ActivationDelegate implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeWidgetAura, wm::ActivationChangeObserver implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeWidgetAura, aura::client::FocusChangeObserver:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeWidgetAura, aura::WindowDragDropDelegate implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeWidgetAura, wm::TransientWindowObserver implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeWidgetAura, protected:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeWidgetAura, private:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Widget, public:',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' internal::NativeWidgetPrivate, public:',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
native_widget_aura_interactive_uitest.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' When requesting view focus from a non-active top level widget, focus is not\n' +
    ' instantly given. Instead, the view is firstly stored and then it is attempted\n' +
    ' to activate the widget. If widget is currently not activatable, focus should\n' +
    ' not be grabbed. And focus will be given/restored the next time the widget is\n' +
    ' made active. (crbug.com/621791)'
]
native_widget_aura_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " TestFocusRules is intended to provide a way to manually set a window's\n" +
    ' activatability so that the focus rules can be tested.',
  ' Verifies CenterWindow() constrains to parent size.',
  ' View which handles both mouse and gesture events.',
  ' Verifies that when the mouse click interrupts the gesture scroll, the view\n' +
    ' where the gesture scroll starts should receive the scroll end event.',
  ' Tests that GetRestoreBounds returns the window bounds even if the window is\n' +
    ' transformed.',
  ' A WindowObserver that counts kShowStateKey property changes.',
  ' Tests that window transitions from normal to minimized and back do not\n' +
    ' involve extra show state transitions.',
  ' Used by ShowMaximizedDoesntBounceAround. See it for details.',
  ' This simulates BrowserView, which creates a custom RootView so that\n' +
    ' OnNativeWidgetSizeChanged that is invoked during Init matters.',
  " Verifies the size of the widget doesn't change more than once during Init if\n" +
    ' the window ends up maximized. This is important as otherwise\n' +
    ' RenderWidgetHostViewAura ends up getting resized during construction, which\n' +
    ' leads to noticeable flashes.',
  ' Verifies the resize behavior when added to the layout manager.',
  ' View subclass that tracks whether it has gotten a gesture event.',
  " Verifies a capture isn't set on touch press and that the view that gets\n" +
    ' the press gets the release.',
  ' Verifies views with layers are targeted for events properly.',
  ' Verifies views with layers are targeted for events properly.',
  ' Verifies views with layers that have SetCanProcessEventWithinSubtree(false)\n' +
    ' set are ignored for event targeting (i.e. the underlying child window can\n' +
    ' still be the target of those events).',
  ' Verifies that widget->FlashFrame() sets aura::client::kDrawAttentionKey,\n' +
    ' and activating the window clears it.',
  ' Used to track calls to WidgetDelegate::OnWidgetMove().',
  ' This test simulates what happens when a window is normally maximized. That\n' +
    " is, it's layer is acquired for animation then the window is maximized.\n" +
    ' Acquiring the layer resets the bounds of the window. This test verifies the\n' +
    ' Widget is still notified correctly of a move in this case.',
  ' Tests that if a widget has a view which should be initially focused when the\n' +
    ' widget is shown, this view should not get focused if the associated window\n' +
    ' can not be activated.',
  ' Tests that the transient child bubble window is only visible if the parent is\n' +
    ' visible.',
  ' Tests that for a child transient window, if its modal type is\n' +
    ' ui::mojom::ModalType::kWindow, then its visibility is controlled by its\n' +
    " transient parent's visibility.",
  ' Tests that widgets that are created minimized have the correct restore\n' +
    ' bounds.',
  ' Tests that the `kDeskUuidKey` is set if the `workspace` parameter is\n' +
    " a uuid, and that the `kWindowWorkspaceKey` is set if it's a string\n" +
    ' representation of an integer.',
  " Series of tests that verifies having a null NativeWidgetDelegate doesn't\n" +
    ' crash.'
]
native_widget_private.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
native_widget_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' |widget| has the toplevel NativeWidget.',
  ' |toplevel_widget| has the toplevel NativeWidget.',
  ' GetTopLevelNativeWidget() finds the closest top-level widget.'
]
root_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40821061): This class is for debug purpose only.\n' +
    ' Remove it after resolving the issue.',
  ' Used by RootView to create a hidden child that can be used to make screen\n' +
    " reader announcements on platforms that don't have a reliable system API call\n" +
    ' to do that.\n' +
    " We use a separate view because the RootView itself supplies the widget's\n" +
    ' accessible name and cannot serve double-duty (the inability for views to make\n' +
    ' their own announcements without changing their accessible name or description\n' +
    ' is the reason this system exists at all).',
  ' This event handler receives events in the pre-target phase and takes care of\n' +
    ' the following:\n' +
    '   - Shows keyboard-triggered context menus.',
  " macOS doesn't have keyboard-triggered context menus.",
  ' This event handler receives events in the post-target phase and takes care of\n' +
    ' the following:\n' +
    '   - Generates context menu, or initiates drag-and-drop, from gesture events.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' RootView, public:',
  ' Creation and lifetime -------------------------------------------------------',
  ' Tree operations -------------------------------------------------------------',
  ' Focus -----------------------------------------------------------------------',
  ' System events ---------------------------------------------------------------',
  ' Accessibility ---------------------------------------------------------------',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' RootView, FocusTraversable implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' RootView, ui::EventProcessor overrides:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' RootView, View overrides:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' RootView, protected:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' RootView, private:'
]
root_view_targeter.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
root_view_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Verifies deleting a View in OnKeyPressed() doesn't crash and that the\n" +
    ' target is marked as destroyed in the returned EventDispatchDetails.',
  ' Tracks whether a context menu is shown.',
  ' Tests that context menus are shown for certain key events (Shift+F10\n' +
    ' and VKEY_APPS) by the pre-target handler installed on RootView.',
  ' View which handles all gesture events.',
  ' View which handles all mouse events.',
  ' Verifies that the gesture handler stored in the root view is reset after\n' +
    ' mouse is released. Note that during mouse event handling,\n' +
    ' `RootView::SetMouseAndGestureHandler()` may be called to set the gesture\n' +
    ' handler. Therefore we should reset the gesture handler when mouse is\n' +
    ' released. We may remove this test in the future if the implementation of the\n' +
    ' product code changes.',
  ' Tests that context menus are shown for long press by the post-target handler\n' +
    ' installed on the RootView only if the event is targetted at a view which can\n' +
    ' show a context menu.',
  ' Tests that context menus are not shown for disabled views on a long press.',
  ' View class which destroys itself when it gets an event of type\n' +
    ' |delete_event_type|.',
  ' View class which remove itself when it gets an event of type\n' +
    ' |remove_event_type|.',
  ' View class which generates a nested event the first time it gets an event of\n' +
    ' type |nested_event_type|. This is used to simulate nested event loops which\n' +
    ' can cause |RootView::mouse_event_handler_| to get reset.',
  " Verifies deleting a View in OnMouseExited() doesn't crash.",
  " Verifies deleting a View in OnMouseEntered() doesn't crash.",
  " Verifies removing a View in OnMouseEntered() doesn't crash.",
  " Verifies clearing the root view's |mouse_move_handler_| in OnMouseExited()\n" +
    " doesn't crash.",
  " Verifies clearing the root view's |mouse_move_handler_| in OnMouseExited()\n" +
    " doesn't crash, in the case where the root view is targeted, because\n" +
    " it's the first enabled view encountered walking up the target tree.",
  " Verifies clearing the root view's |mouse_move_handler_| in OnMouseEntered()\n" +
    " doesn't crash.",
  ' View class which deletes its owning Widget when it gets a mouse exit event.',
  ' Test that there is no crash if a View deletes its parent Widget in\n' +
    ' View::OnMouseExited().',
  ' Test that there is no crash if a View deletes its parent widget as a result\n' +
    ' of a mouse exited event which was propagated from one of its children.',
  ' Ensure only one layout happens during Widget initialization, and ensure it\n' +
    " happens at the ContentView's preferred size.",
  ' Also test Aura desktop Widget codepaths.',
  ' Tests that AnnounceAlert sets up the correct text value on the hidden\n' +
    ' view, and that the resulting hidden view actually stays hidden.',
  " If RootView::OnMousePressed() receives a double-click event that isn't\n" +
    ' handled by any views, it should still report it as handled if the first click\n' +
    ' was handled. However, it should *not* if the first click was unhandled.\n' +
    ' Regression test for https://crbug.com/1055674.'
]
sublevel_manager.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
sublevel_manager_unittest.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Widgets should be stacked according to their sublevel regardless\n' +
    ' the order of showing.',
  ' Level should takes precedence over sublevel.\n' +
    ' TODO(crbug.com/40237029): disabled because currently non-desktop widgets\n' +
    " ignore z-order level (except on ash) and we don't have a reliable way to\n" +
    ' test desktop widgets.',
  ' Widgets are re-ordered only within the same level.',
  ' SetSublevel() should trigger re-ordering.',
  ' The stacking order between non-sibling widgets depend on the sublevels\n' +
    ' of the children of their most recent common ancestor.',
  ' The sublevel manager should be able to handle the Widget re-parenting.',
  ' Invisible widgets should be skipped to work around MacOS where\n' +
    ' stacking above them is no-op (crbug.com/1369180).\n' +
    ' When they become invisible, sublevels should be respected.',
  ' TODO(crbug.com/40227915): We should also test NativeWidgetType::kDesktop,\n' +
    ' but currently IsWindowStackedAbove() does not work for desktop widgets.'
]
tooltip_manager.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
tooltip_manager_aura.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TooltipManagerAura public:',
  ' static',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TooltipManagerAura, TooltipManager implementation:'
]
unique_widget_ptr.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
unique_widget_ptr_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Make sure explicitly resetting the |unique_widget_ptr| variable properly\n' +
    ' closes the widget. TearDown() will ensure |widget_| has been cleared.',
  ' Same as above, only testing that going out of scope will accomplish the same\n' +
    ' thing.',
  ' Check that proper move semantics for assignments work.',
  ' Check that move construction functions correctly.',
  ' Make sure that any external closing of the widget is properly tracked in the\n' +
    ' |unique_widget_ptr|.',
  ' When the NativeWidget is destroyed, ensure that the Widget is also destroyed\n' +
    ' which in turn clears the |unique_widget_ptr|.'
]
widget.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' If |view| has a layer the layer is added to |layers|. Else this recurses\n' +
    ' through the children. This is used to build a list of the layers created by\n' +
    ' views that are direct children of the Widgets layer.',
  ' Create a native widget implementation.\n' +
    ' First, use the supplied one if non-NULL.\n' +
    ' Finally, make a default one.',
  ' static',
  ' A default implementation of WidgetDelegate, used by Widget when no\n' +
    ' WidgetDelegate is supplied.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Widget, PaintAsActiveLock:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Widget, PaintAsActiveLockImpl:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Widget, InitParams:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Widget, public:',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' Unconverted methods (see header) --------------------------------------------',
  ' Converted methods (see header) ----------------------------------------------',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Widget, NativeWidgetDelegate implementation:',
  ' TODO(tdanderson): We should not be calling the OnMouse*() functions on\n' +
    '                   RootView from anywhere in Widget. Use\n' +
    '                   SendEventToSink() instead. See crbug.com/348087.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Widget, ui::EventSource implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Widget, FocusTraversable implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Widget, ui::NativeThemeObserver implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Widget, ui::ColorProviderSource:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Widget, protected:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Widget, private:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' internal::NativeWidgetPrivate, NativeWidget implementation:'
]
widget_aura_utils.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
widget_delegate.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WidgetDelegate:',
  ' TODO(ffred): refactor this method.',
  ' Returns the icon to be displayed in the window.',
  ' TODO (kylixrd): This will be removed once Widget no longer "owns" the\n' +
    ' WidgetDelegate.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WidgetDelegateView:'
]
widget_delegate_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
widget_deletion_observer.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
widget_hwnd_utils.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
widget_interactive_uitest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A View that closes the Widget and exits the current message-loop when it\n' +
    ' receives a mouse-release event.',
  ' A view that does a capture on ui::EventType::kGestureTapDown events.',
  ' A view that always processes all mouse events.',
  ' A View that shows a different widget, sets capture on that widget, and\n' +
    ' initiates a nested message-loop when it receives a mouse-press event.',
  ' A view that runs closures in response to drag events.',
  ' Give the OS an opportunity to process messages for an activation change, when\n' +
    ' there is actually no change expected (e.g. ShowInactive()).',
  ' Activate a widget, and wait for it to become active. On non-desktop Aura\n' +
    ' this is just an activation. For other widgets, it means activating and then\n' +
    ' spinning the run loop until the OS has activated the window.',
  ' Like for ActivateSync(), wait for a widget to become active, but Show() the\n' +
    ' widget rather than calling Activate().',
  ' Calls ShowInactive() on a Widget, and spins a run loop. The goal is to give\n' +
    ' the OS a chance to activate a widget. However, for this case, the test\n' +
    " doesn't expect that to happen, so there is nothing to wait for.",
  ' Tests whether activation and focus change works correctly in Windows.\n' +
    ' We test the following:-\n' +
    ' 1. If the active aura window is correctly set when a top level widget is\n' +
    '    created.\n' +
    ' 2. If the active aura window in widget 1 created above, is set to NULL when\n' +
    '    another top level widget is created and focused.\n' +
    ' 3. On focusing the native platform window for widget 1, the active aura\n' +
    '    window for widget 1 should be set and that for widget 2 should reset.\n' +
    ' TODO(ananta): Discuss with erg on how to write this test for linux x11 aura.',
  ' Verifies bubbles result in a focus lost when shown.',
  ' TODO(dtapuska): Disabled due to it being flaky crbug.com/817531',
  ' Tests mouse move outside of the window into the "resize controller" and back\n' +
    ' will still generate an OnMouseEntered and OnMouseExited event..',
  ' Test view focus restoration when a widget is deactivated and re-activated.',
  ' Test z-order of child widgets relative to their parent.\n' +
    ' TODO(crbug.com/40776787): Disabled on Mac due to flake',
  " Test view focus retention when a widget's HWND is disabled and re-enabled.",
  ' This class subclasses the Widget class to listen for activation change\n' +
    ' notifications and provides accessors to return information as to whether\n' +
    ' the widget is active. We need this to ensure that users of the widget\n' +
    ' class activate the widget only when the underlying window becomes really\n' +
    ' active. Previously we would activate the widget in the WM_NCACTIVATE\n' +
    ' message which is incorrect because APIs like FlashWindowEx flash the\n' +
    ' window caption by sending fake WM_NCACTIVATE messages.',
  ' Tests whether the widget only becomes active when the underlying window\n' +
    ' is really active.',
  ' On Windows if we create a fullscreen window on a thread, then it affects the\n' +
    ' way other windows on the thread interact with the taskbar. To workaround\n' +
    ' this we reduce the bounds of a fullscreen window by 1px when it loses\n' +
    ' activation. This test verifies the same.',
  ' Ensure the window rect and client rects are correct with a window that was\n' +
    ' maximized.',
  ' Tests whether the focused window is set correctly when a modal window is\n' +
    ' created and destroyed. When it is destroyed it should focus the owner window.',
  ' Test that touch selection quick menu is not activated when opened.',
  " ExitFullscreenRestoreState doesn't use DesktopAura widgets. On Mac, there are\n" +
    ' currently only Desktop widgets and fullscreen changes have to coordinate with\n' +
    ' the OS. See BridgedNativeWidgetUITest for native Mac fullscreen tests.\n' +
    ' Maximize on mac is also (intentionally) a no-op.',
  ' Test that window state is not changed after getting out of full screen.',
  ' Testing initial focus is assigned properly for normal top-level widgets,\n' +
    ' and subclasses that specify a initially focused child view.',
  ' Maximize is not implemented on macOS, see crbug.com/868599',
  ' Widget::Show/ShowInactive should not restore a maximized window',
  ' TODO(davidbienvenu): Get this test to pass on Linux and ChromeOS by hiding\n' +
    ' the root window when desktop widget is minimized.\n' +
    ' Tests that root window visibility toggles correctly when the desktop widget\n' +
    ' is minimized and maximized on Windows, and the Widget remains visible.',
  ' Test that focus is restored to the widget after a minimized window\n' +
    ' is activated.',
  ' Tests that minimizing a widget causes the gesture_handler\n' +
    ' to be cleared when the widget is minimized.',
  ' Tests that when a desktop native widget has modal transient child, it should\n' +
    ' avoid restore focused view itself as the modal transient child window will do\n' +
    ' that, thus avoids having multiple focused view visually (crbug.com/727641).',
  ' Helper class for CaptureLostTrackingWidget to store whether\n' +
    ' OnMouseCaptureLost has been invoked for a widget.',
  ' Used to verify OnMouseCaptureLost() has been invoked.',
  ' See description in TestCapture().',
  ' See description in TestCapture(). Creates DesktopNativeWidget.',
  ' Tests to ensure capture is correctly released from a Widget with capture when\n' +
    ' it is destroyed. Test for crbug.com/622201.',
  ' TODO(kylixrd): Rename this test once Widget ownership is normalized.',
  ' Test that no state is set if capture fails.',
  ' Checks that if a mouse-press triggers a capture on a different widget (which\n' +
    ' consumes the mouse-release event), then the target of the press does not have\n' +
    ' capture.',
  ' Tests some grab/ungrab events. Only one Widget can have capture at any given\n' +
    ' time.',
  " Disabled on Mac. Desktop Mac doesn't have system modal windows since Carbon\n" +
    ' was deprecated. It does have application modal windows, but only Ash requests\n' +
    ' those.',
  ' Investigate enabling for Chrome OS. It probably requires help from the window\n' +
    ' service.',
  ' Test that when opening a system-modal window, capture is released.',
  ' Regression test for http://crbug.com/382421 (Linux-Aura issue).\n' +
    ' TODO(pkotwicz): Make test pass on CrOS and Windows.\n' +
    ' TODO(tapted): Investigate for toolkit-views on Mac http;//crbug.com/441064.',
  ' Test that a synthetic mouse exit is sent to the widget which was handling\n' +
    ' mouse events when a different widget grabs capture. Except for Windows,\n' +
    ' which does not send a synthetic mouse exit.',
  ' Widget observer which grabs capture when the widget is activated.',
  ' Test that setting capture on widget activation of a non-toplevel widget\n' +
    ' (e.g. a bubble on Linux) succeeds.',
  ' Used to verify OnMouseEvent() has been invoked.',
  " Verifies if a mouse event is received on a widget that doesn't have capture\n" +
    " on Windows that it is correctly processed by the widget that doesn't have\n" +
    ' capture. This behavior is not desired on OSes other than Windows.',
  ' Test input method focus changes affected by top window activaction.',
  ' Test input method focus changes affected by focus changes within 1 window.',
  " Widget::Deactivate() doesn't work for CrOS, because it uses NWA instead of\n" +
    ' DNWA (which just activates the last active window) and involves the\n' +
    ' AuraTestHelper which sets the input method as DummyInputMethod.',
  ' Test input method focus changes affected by focus changes cross 2 windows\n' +
    ' which shares the same top window.',
  " Widget::Deactivate() doesn't work for CrOS, because it uses NWA instead of\n" +
    ' DNWA (which just activates the last active window) and involves the\n' +
    ' AuraTestHelper which sets the input method as DummyInputMethod.',
  " Test input method focus changes affected by textfield's state changes.",
  ' Test input method should not work for accelerator.',
  ' Cancels a DnD session started by `RunShellDrag()`.'
]
widget_interactive_uitest_utils.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
widget_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(tdanderson): This utility function is used in different unittest\n' +
    '                   files. Move to a common location to avoid\n' +
    '                   repeated code.',
  ' Convenience to make constructing a GestureEvent simpler.',
  ' A view that keeps track of the events it receives, and consumes all scroll\n' +
    ' gesture events and ui::EventType::kScroll events.',
  ' A view that implements GetMinimumSize.',
  ' An event handler that simply keeps a count of the different types of events\n' +
    ' it receives.',
  ' Tests that the internal name is propagated through widget initialization to\n' +
    ' the native widget and back.',
  ' Test that Widget::InitParams::autosize allows widget to\n' +
    ' automatically resize when content view size changes.',
  ' Verify that there is no change in focus if |enable_arrow_key_traversal| is\n' +
    ' false (the default).',
  ' Verify that arrow keys can change focus if |enable_arrow_key_traversal| is\n' +
    ' set to true.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Widget::GetTopLevelWidget tests.',
  ' Test if a focus manager and an inputmethod work without CHECK failure\n' +
    ' when window activation changes.',
  ' Tests visibility of child widgets.',
  ' Test that child widgets are positioned relative to their parent.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Widget ownership tests.\n' +
    ' Tests various permutations of Widget ownership specified in the\n' +
    ' InitParams::Ownership param. Make sure that they are properly destructed\n' +
    ' during shutdown.',
  ' A bag of state to monitor destructions.',
  ' A Widget subclass that updates a bag of state when it is destroyed.',
  ' NativeWidget owns its Widget, part 1.1: NativeWidget is a non-desktop\n' +
    ' widget, CloseNow() destroys Widget and NativeWidget synchronously.',
  ' NativeWidget owns its Widget, part 1.2: NativeWidget is a non-desktop\n' +
    ' widget, Close() destroys Widget and NativeWidget asynchronously.',
  ' NativeWidget owns its Widget, part 1.3: NativeWidget is a desktop\n' +
    ' widget, Close() destroys Widget and NativeWidget asynchronously.',
  ' NativeWidget owns its Widget, part 1.4: NativeWidget is a desktop\n' +
    ' widget. Unlike desktop widget, CloseNow() might destroy Widget and\n' +
    ' NativeWidget asynchronously.',
  ' NativeWidget owns its Widget, part 2.1: NativeWidget is a non-desktop\n' +
    ' widget. CloseNow() the parent should destroy the child.',
  ' NativeWidget owns its Widget, part 2.2: NativeWidget is a desktop\n' +
    ' widget. CloseNow() the parent should destroy the child.',
  ' NativeWidget owns its Widget, part 3.1: NativeWidget is a non-desktop\n' +
    ' widget, destroyed out from under it by the OS.',
  ' NativeWidget owns its Widget, part 3.2: NativeWidget is a desktop\n' +
    ' widget, destroyed out from under it by the OS.',
  ' Widget owns its NativeWidget, part 1.',
  ' Widget owns its NativeWidget, part 2: destroy the parent view.',
  ' Widget owns its NativeWidget, part 3: has a WidgetDelegateView as contents.',
  ' Widget owns its NativeWidget, part 4: Widget::CloseNow should be idempotent.',
  ' Widget owns its NativeWidget, part 5: Widget::Close should be idempotent.',
  ' Tests for CLIENT_OWNS_WIDGET. The client holds a unique_ptr<Widget>.\n' +
    ' The NativeWidget will be destroyed when the platform window is closed.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    " Test to verify using various Widget methods doesn't crash when the underlying\n" +
    ' NativeView and NativeWidget is destroyed. Currently, for\n' +
    ' the WIDGET_OWNS_NATIVE_WIDGET ownership pattern, the NativeWidget will not be\n' +
    ' destroyed, but |native_widget_| will still be set to nullptr.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Widget observer tests.',
  ' This test appears to be flaky on Mac.',
  ' This class simulates a focus manager that moves focus to a second widget when\n' +
    ' the first one is closed. It simulates a situation where a sequence of widget\n' +
    ' observers might try to call Widget::Close in response to a OnWidgetClosing().',
  ' This class observes a widget and counts the number of times OnWidgetClosing\n' +
    ' is called.',
  " Makes sure close notifications aren't sent more than once when a Widget is\n" +
    ' shutting down. Test for crbug.com/714334',
  ' An extension to WidgetBoundsChanged to ensure notifications are forwarded\n' +
    ' by the NativeWidget implementation.',
  ' An extension to the WidgetBoundsChangedNative test above to ensure move\n' +
    ' notifications propagate to the WidgetDelegate.',
  ' Test correct behavior when widgets close themselves in response to visibility\n' +
    ' changes.',
  ' Test behavior of NativeWidget*::GetWindowPlacement on the native desktop.',
  ' On desktop-Linux cheat and use non-desktop widgets. On X11, minimize is\n' +
    " asynchronous. Also (harder) showing a window doesn't activate it without\n" +
    ' user interaction (or extra steps only done for interactive ui tests).\n' +
    ' Without that, show_state remains in ui::SHOW_STATE_INACTIVE throughout.\n' +
    ' TODO(tapted): Find a nice way to run this with desktop widgets on Linux.',
  ' Test that widget size constraints are properly applied immediately after\n' +
    ' Init(), and that SetBounds() calls are appropriately clamped.',
  ' When a non-desktop widget has a desktop child widget, due to the\n' +
    ' async nature of desktop widget shutdown, the parent can be destroyed before\n' +
    ' its child. Make sure that parent() returns nullptr at this time.',
  ' Tests that SetBounds() and GetWindowBoundsInScreen() is symmetric when the\n' +
    ' widget is visible and not maximized or fullscreen.',
  ' Chrome OS widgets need the shell to maximize/fullscreen window.\n' +
    ' Disable on desktop Linux because windows restore to the wrong bounds.\n' +
    ' See http://crbug.com/515369.',
  ' Test that GetRestoredBounds() returns the original bounds of the window.',
  ' The key-event propagation from Widget happens differently on aura and\n' +
    ' non-aura systems because of the difference in IME. So this test works only on\n' +
    ' aura.',
  ' Test to ensure that after minimize, view width is set to zero. This is only\n' +
    ' the case for desktop widgets on Windows. Other platforms retain the window\n' +
    ' size while minimized.',
  ' Desktop native widget Aura tests are for non Chrome OS platforms.\n' +
    ' This class validates whether paints are received for a visible Widget.\n' +
    ' It observes Widget visibility and Close() and tracks whether subsequent\n' +
    ' paints are expected.',
  " Test to ensure that the aura Window's visibility state is set to visible if\n" +
    ' the underlying widget is hidden and then shown.',
  ' Tests that wheel events generated from scroll events are targeted to the\n' +
    ' views under the cursor when the focused view does not processed them.',
  ' Tests that if a scroll-begin gesture is not handled, then subsequent scroll\n' +
    ' events are not dispatched to any view.',
  ' Tests that event-handlers installed on the RootView get triggered correctly.\n' +
    ' TODO(tdanderson): Clean up this test as part of crbug.com/355680.',
  ' ui::EventHandler which handles all mouse press events.',
  ' No touch on desktop Mac. Tracked in http://crbug.com/445520.',
  ' Test that mouse presses and mouse releases are dispatched normally when a\n' +
    ' touch is down.',
  ' Tests that when there is no active capture, that a mouse press causes capture\n' +
    ' to be set.',
  ' An EventHandler which shows a Widget upon receiving a mouse event. The Widget\n' +
    ' proceeds to take capture.',
  ' Tests that if explicit capture occurs during a mouse press, that implicit\n' +
    ' capture is not applied.',
  ' Ensures that when multiple objects are intercepting OS-level events, that one\n' +
    ' can safely close a Widget that has capture.',
  ' Tests to make sure that child widgets do not cause their parent widget to\n' +
    ' paint inactive immediately when they are closed. This avoids having the\n' +
    ' parent paint as inactive in the time between when the bubble is closed and\n' +
    " when it's eventually destroyed by its native widget (see crbug.com/1303549).",
  ' Tests that there is no crash when paint as active lock is removed for child\n' +
    ' widget while its parent widget is being closed.',
  ' Widget used to destroy itself when OnNativeWidgetDestroyed is called.',
  ' Verifies that widget destroyed itself in OnNativeWidgetDestroyed does not\n' +
    ' crash in ASan.',
  ' Verifies WindowClosing() is invoked correctly on the delegate when a Widget\n' +
    ' is closed.',
  ' No touch on desktop Mac. Tracked in http://crbug.com/445520.',
  ' See description of RunGetNativeThemeFromDestructor() for details.',
  " Verifies GetNativeTheme() from the destructor of a WidgetDelegateView doesn't\n" +
    ' crash. |is_first_run| is true if this is the first call. A return value of\n' +
    ' true indicates this should be run again with a value of false.\n' +
    " First run uses DesktopNativeWidgetAura (if possible). Second run doesn't.",
  ' See description of RunGetNativeThemeFromDestructor() for details.',
  ' Used by HideCloseDestroy. Allows setting a boolean when the widget is\n' +
    ' destroyed.',
  ' An observer that registers that an animation has ended.',
  ' An observer that registers the bounds of a widget on destruction.',
  ' Verifies Close() results in destroying.',
  ' Tests that killing a widget while animating it does not crash.',
  ' Test Widget::CloseAllSecondaryWidgets works as expected across platforms.\n' +
    " ChromeOS doesn't implement or need CloseAllSecondaryWidgets() since\n" +
    ' everything is under a single root window.',
  ' Test that the NativeWidget is still valid during OnNativeWidgetDestroying(),\n' +
    ' and properties that depend on it are valid, when closed via CloseNow().',
  ' Test that the NativeWidget is still valid during OnNativeWidgetDestroying(),\n' +
    ' and properties that depend on it are valid, when closed via Close().',
  ' Broken on Linux. See http://crbug.com/515379.\n' +
    ' TODO(crbug.com/40118868): Revisit the macro expression once build flag switch\n' +
    ' of lacros-chrome is complete.',
  ' Tests that we do not crash when a Widget is destroyed by going out of\n' +
    ' scope (as opposed to being explicitly deleted by its NativeWidget).',
  ' Tests that we do not crash when a Widget is destroyed before it finishes\n' +
    ' processing of pending input events in the message loop.',
  ' No touch on desktop Mac. Tracked in http://crbug.com/445520.',
  ' A view that consumes mouse-pressed event and gesture-tap-down events.',
  ' Checks if RootView::*_handler_ fields are unset when widget is hidden.\n' +
    ' Fails on chromium.webkit Windows bot, see crbug.com/264872.',
  ' Tests that the |gesture_handler_| member in RootView is always NULL\n' +
    ' after the dispatch of a ui::EventType::kGestureEnd event corresponding to\n' +
    ' the release of the final touch point on the screen, but that\n' +
    ' ui::EventType::kGestureEnd events corresponding to the removal of any other\n' +
    ' touch point do not modify |gesture_handler_|.',
  ' Tests that gesture events which should not be processed (because\n' +
    ' RootView::OnEventProcessingStarted() has marked them as handled) are not\n' +
    ' dispatched to any views.',
  ' Tests that a (non-scroll) gesture event is dispatched to the correct views\n' +
    ' in a view hierarchy and that the default gesture handler in RootView is set\n' +
    ' correctly.',
  ' Tests that gesture scroll events will change the default gesture handler in\n' +
    ' RootView if the current handler to which they are dispatched does not handle\n' +
    ' gesture scroll events.',
  ' TODO(b/271490637): on Mac a drag controller should still be notified when\n' +
    ' drag will start. Figure out how to write a unit test for Mac. Then remove\n' +
    ' this build flag check.',
  ' Verifies that the drag controller is notified when the view drag will start.',
  ' A class used in WidgetTest.GestureEventLocationWhileBubbling to verify\n' +
    ' that when a gesture event bubbles up a View hierarchy, the location\n' +
    ' of a gesture event seen by each View is in the local coordinate space\n' +
    ' of that View.',
  ' Verifies that the location of a gesture event is always in the local\n' +
    ' coordinate space of the View receiving the event while bubbling.',
  ' Test the result of Widget::GetAllChildWidgets().',
  ' Used by DestroyChildWidgetsInOrder. On destruction adds the supplied name to\n' +
    ' a vector.',
  ' See description of RunDestroyChildWidgetsTest(). Parent uses\n' +
    ' DesktopNativeWidgetAura.',
  ' See description of RunDestroyChildWidgetsTest(). Both parent and child use\n' +
    ' DesktopNativeWidgetAura.',
  ' See description of RunDestroyChildWidgetsTest().',
  ' Verifies nativeview visbility matches that of Widget visibility when\n' +
    ' SetFullscreen is invoked.',
  ' Verifies nativeview visbility matches that of Widget visibility when\n' +
    ' SetFullscreen is invoked, for a widget provided with a desktop widget.',
  ' Used to delete the widget when the supplied bounds changes.',
  ... 22 more items
]
widget_utils.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_reorderer.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Sets |hosted_windows| to a mapping of the views with an associated window to\n' +
    ' the window that they are associated to. Only views associated to a child of\n' +
    ' |parent_window| are returned.',
  " Sets |order| to the list of views whose layer / associated window's layer\n" +
    ' is a child of |parent_layer|. |order| is sorted in ascending z-order of\n' +
    ' the views.\n' +
    ' |hosts| are the views with an associated window whose layer is a child of\n' +
    ' |parent_layer|.',
  ' Class which reorders windows as a result of the kHostViewKey property being\n' +
    ' set on the window.'
]
window_reorderer_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Sets the name of |window| and |window|'s layer to |name|.",
  ' Returns a string containing the name of each of the child windows (bottommost\n' +
    ' first) of |parent|. The format of the string is "name1 name2 name3 ...".',
  ' Test that views with layers and views with associated windows are reordered\n' +
    ' according to the view hierarchy.',
  ' Test that different orderings of:\n' +
    ' - adding a window to a parent widget\n' +
    ' - adding a "host" view to a parent widget\n' +
    ' - associating the "host" view and window\n' +
    ' all correctly reorder the child windows and layers.',
  ' It is possible to associate a window to a view which has a parent layer\n' +
    ' (other than the widget layer). In this case, the parent layer of the host\n' +
    ' view and the parent layer of the associated window are different. Test that\n' +
    ' the layers and windows are properly reordered in this case.',
  ' Test that a layer added beneath a view is restacked correctly.'
]
fullscreen_handler.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' FullscreenHandler, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' FullscreenHandler, private:'
]
hwnd_message_handler.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' MoveLoopMouseWatcher is used to determine if the user canceled or completed a\n' +
    " move. win32 doesn't appear to offer a way to determine the result of a move,\n" +
    ' so we install hooks to determine if we got a mouse up and assume the move\n' +
    ' completed.',
  ' static',
  ' static',
  ' static',
  ' static',
  ' Called from OnNCActivate.',
  ' Enables or disables the menu item for the specified command and menu.',
  ' The thickness of an auto-hide taskbar in pixels.',
  ' Convert |param| to the gfx::ResizeEdge used in gfx::SizeRectToAspectRatio().',
  ' Windows does not flag synthesized mouse messages from touch or pen in all\n' +
    " cases. This causes us grief as we don't want to process touch and mouse\n" +
    ' messages concurrently. Hack as per msdn is to check if the time difference\n' +
    ' between the touch/pen message and the mouse move is within 500 ms and at the\n' +
    ' same location as the cursor.',
  ' Returns true if the window is arranged via Snap. For example, the browser\n' +
    ' window is snapped via buttons shown when the mouse is hovered over window\n' +
    ' maximize button.',
  ' A scoping class that prevents a window from being able to redraw in response\n' +
    ' to invalidations that may occur within it for the lifetime of the object.\n' +
    ' Why would we want such a thing? Well, it turns out Windows has some\n' +
    ' "unorthodox" behavior when it comes to painting its non-client areas.\n' +
    ' Occasionally, Windows will paint portions of the default non-client area\n' +
    ' right over the top of the custom frame. This is not simply fixed by handling\n' +
    ' WM_NCPAINT/WM_PAINT, with some investigation it turns out that this\n' +
    ' rendering is being done *inside* the default implementation of some message\n' +
    ' handlers and functions:\n' +
    '  . WM_SETTEXT\n' +
    '  . WM_SETICON\n' +
    '  . WM_NCLBUTTONDOWN\n' +
    '  . EnableMenuItem, called from our WM_INITMENU handler\n' +
    ' The solution is to handle these messages and call DefWindowProc ourselves,\n' +
    ' but prevent the window from being able to update itself for the duration of\n' +
    ' the call. We do this with this class, which automatically calls its\n' +
    " associated Window's lock and unlock functions as it is created and destroyed.\n" +
    ' See documentation in those methods for the technique used.\n' +
    ' The lock only has an effect if the window was visible upon lock creation, as\n' +
    " it doesn't guard against direct visiblility changes, and multiple locks may\n" +
    ' exist simultaneously to handle certain nested Windows messages.\n' +
    " This lock is disabled when DirectComposition is used and there's a child\n" +
    ' rendering window, as the WS_CLIPCHILDREN on the parent window should\n' +
    ' prevent the glitched rendering and making the window contents non-visible\n' +
    ' can cause a them to disappear for a frame.\n' +
    ' We normally skip locked updates when Aero is on for two reasons:\n' +
    " 1. Because it isn't necessary. However, for windows without WS_CAPTION a\n" +
    '    close button may still be drawn, so the resize lock remains enabled for\n' +
    '    them. See http://crrev.com/130323\n' +
    ' 2. Because toggling the WS_VISIBLE flag may occur while the GPU process is\n' +
    "    attempting to present a child window's backbuffer onscreen. When these\n" +
    '    two actions race with one another, the child window will either flicker\n' +
    '    or will simply stop updating entirely.\n' +
    ' IMPORTANT: Do not use this scoping object for large scopes or periods of\n' +
    '            time! IT WILL PREVENT THE WINDOW FROM BEING REDRAWN! (duh).\n' +
    " I would love to hear Raymond Chen's explanation for all this. And maybe a\n" +
    ' list of other messages that this applies to ;-)',
  ' static HWNDMessageHandler member initialization.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' HWNDMessageHandler, public:',
  ' static',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' HWNDMessageHandler, gfx::WindowImpl overrides:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' HWNDMessageHandler, private:',
  ' Message handlers ------------------------------------------------------------',
  ' On some systems with a high-resolution track pad and running Windows 10,\n' +
    ' using the scrolling gesture (two-finger scroll) on the track pad\n' +
    ' causes it to also generate a WM_POINTERDOWN message if the window\n' +
    " isn't focused. This leads to a WM_POINTERACTIVATE message and the window\n" +
    ' gaining focus and coming to the front. This code detects a\n' +
    ' WM_POINTERACTIVATE coming from the track pad and kills the activation\n' +
    ' of the window. NOTE: most other trackpad messages come in as mouse\n' +
    ' messages, including WM_MOUSEWHEEL instead of WM_POINTERWHEEL.',
  ' static',
  ' static',
  ' Declared in pen_event_handler_util.h.'
]
hwnd_message_handler_headless.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Default headless window size used when no window size was provided in\n' +
    ' creation params.',
  ' In headless mode there is no screen size that would define maximized window\n' +
    ' dimensions. So just double the current window size assuming the user will\n' +
    ' expect it to increase.',
  ' In headless mode where we have to manually scale window bounds because we\n' +
    ' cannot rely on the platform window size since it gets clamped to the monitor\n' +
    ' work area.',
  " Headless window don't capture mouse."
]
hwnd_util.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
pen_event_processor.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
pen_event_processor_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
pen_id_handler.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Declared private in PenIdStatics.'
]
pen_id_handler_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests TryGetPenUniqueId for devices that have a guid. The unique guid should\n' +
    ' be correctly maped to a unique pen id, which is the value that is returned\n' +
    ' by TryGetPenUniqueId.',
  ' Simulate statics not being set. This should result in TryGetGuid returning\n' +
    ' std::nullopt.\n' +
    ' Ultimately TryGetPenUniqueId should return null.'
]
scoped_enable_unadjusted_mouse_events_win.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' From the HID Usage Tables specification.',
  ' static'
]
scoped_fullscreen_visibility.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
fake_ipen_device.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fake_ipen_device_statics.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
caption_button_layout_constants.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
client_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' ClientView, public:',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' ClientView, View overrides:'
]
custom_frame_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The frame border is only visible in restored mode and is hardcoded to 4 px on\n' +
    ' each side regardless of the system window border size.',
  " In the window corners, the resize areas don't actually expand bigger, but the\n" +
    ' 16 px at the end of each edge triggers diagonal resizing.',
  ' The titlebar never shrinks too short to show the caption button plus some\n' +
    ' padding below it.',
  ' The titlebar has a 2 px 3D edge along the top and bottom.',
  ' The icon is inset 2 px from the left frame border.',
  ' The space between the window icon and the title text.',
  ' The space between the title text and the caption buttons.',
  ' TODO(crbug.com/40118868): Revisit the macro expression once build flag switch\n' +
    ' of lacros-chrome is complete.',
  ' static'
]
custom_frame_view_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that there is a default button ordering before initialization causes\n' +
    ' a configuration file check.',
  ' Tests that layout places the buttons in order, that the restore button is\n' +
    ' hidden and the buttons are placed after the title.',
  ' Tests that setting the buttons to leading places them before the title.',
  ' Tests that layouts occurring while maximized swap the maximize button for the\n' +
    ' restore button',
  ' Tests that when the parent cannot maximize that the maximize button is not\n' +
    ' visible',
  ' Tests that when the parent cannot minimize that the minimize button is not\n' +
    ' visible',
  ' Tests that when maximized that the edge button has an increased width.'
]
dialog_client_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The group used by the buttons.  This name is chosen voluntarily big not to\n' +
    ' conflict with other groups that could be in the dialog content.',
  ' Returns true if the given view should be shown (i.e. exists and is\n' +
    ' visible).',
  ' Returns the bounding box required to contain |size1| and |size2|, placed one\n' +
    ' atop the other.',
  ' Simple container to bubble child view changes up the view hierarchy.'
]
dialog_client_view_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class for tests. Also acts as the dialog delegate and contents view for\n' +
    ' TestDialogClientView.',
  ' Test that views inside the dialog client view have the correct focus order.',
  ' Test that the contents view gets its preferred size in the basic dialog\n' +
    ' configuration.',
  ' Test the effect of the button strip on layout.',
  ' Ensure the minimum, maximum and preferred sizes of the contents view are\n' +
    ' respected by the client view, and that the client view includes the button\n' +
    ' row in its minimum and preferred size calculations.',
  ' Ensure button widths are linked under MD.',
  ' Ensures that the focus of the button remains after a dialog update.',
  ' Ensures that the focus of the button remains after a dialog update that\n' +
    ' contains multiple buttons.',
  ' Ensures that the focus persistence works correctly when buttons are removed.',
  ' Ensures that clicks are ignored for short time after view has been shown.',
  ' Ensures that taps are ignored for a short time after the view has been shown.',
  ' Ensures that touch events are ignored for a short time after the view has\n' +
    ' been shown.',
  ' TODO(crbug.com/40269697): investigate the tests on ChromeOS and\n fuchsia',
  " Ensures that unintended clicks are protected properly when a root window's\n" +
    ' bound has been changed.',
  ' Ensures that unintended clicks are protected properly when a root window has\n' +
    ' been closed.',
  ' Ensures that repeated clicks with short intervals after view has been shown\n' +
    ' are also ignored.'
]
dialog_delegate.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Class that ensures that dialogs are logically "parented" to their parent for\n' +
    ' various purposes, including testing, theming, and Tutorials.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DialogDelegate::Params:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DialogDelegate:',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DialogDelegateView:'
]
dialog_delegate_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Unlike the previous two tests, this test simulates a key press at the level\n' +
    " of the dialog's Widget, so the return-to-close-dialog behavior does happen.",
  ' Tests default focus is assigned correctly when showing a new dialog.',
  ' A dialog for testing initial focus with only an OK button.',
  " If the Widget can't be activated while the initial focus View is requesting\n" +
    ' focus, test it is still able to receive focus once the Widget is activated.',
  ' If the initially focused View provided is unfocusable, check the next\n' +
    ' available focusable View is focused.'
]
frame_background.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Fill the top with the frame color first so we have a constant background\n' +
    ' for areas not covered by the theme image.'
]
frame_caption_button.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ink drop parameters.',
  ' The duration of the fade out animation of the old icon during a crossfade\n' +
    ' animation as a ratio of the duration of |swap_images_animation_|.',
  " The ratio applied to the button's alpha when the button is disabled.",
  ' Custom highlight path generator for clipping ink drops and drawing focus\n' +
    ' rings.',
  ' static',
  ' static'
]
frame_caption_button_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hit_test_utils.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hit_test_utils_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_frame_view.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeFrameView, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeFrameView, NonClientFrameView overrides:'
]
non_client_view.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_button_order_provider.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowButtonOrderProvider, public:',
  ' static',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowButtonOrderProvider, protected:'
]
window_shape.cc [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
windows_stationarity_monitor.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
windows_stationarity_monitor_aura.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  ' static'
]
views_content_browser_client.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_content_client.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_content_client_main_parts.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_content_client_main_parts_aura.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_content_client_main_parts_chromeos.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
views_content_client_main_parts_desktop_aura.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
views_content_main_delegate.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' {83FAC8EE-7A0E-4dbb-A3F6-6F500D7CAB1A}'
]
test_web_contents_handler.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_web_dialog_delegate.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
web_dialog_delegate.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
web_dialog_delegate_unittest.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This test validates that:\n' +
    ' 1. AddWebUIMessageHandler() takes ownership of the passed-in handlers, and\n' +
    ' 2. GetWebUIMessageHandlers() passes ownership of the handlers back'
]
web_dialog_ui.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  " Don't unregister our user data. During the teardown of the WebContents, this\n" +
    ' will be deleted, but the WebContents will already be destroyed.\n' +
    ' This object is owned indirectly by the WebContents. WebUIs can change, so\n' +
    " it's scary if this WebUI is changed out and replaced with something else,\n" +
    ' since the user data will still point to the old delegate. But the delegate is\n' +
    ' itself the owner of the WebContents for a dialog so will be in scope, and the\n' +
    " HTML dialogs won't swap WebUIs anyway since they don't navigate.",
  ' Note: chrome.send() must always be enabled for dialogs, since dialogs rely on\n' +
    ' chrome.send() to notify their handlers that the dialog should be closed. See\n' +
    ' the "dialogClose" message handler above in\n' +
    ' WebDialogUIBase::HandleRenderFrameCreated().'
]
web_dialog_ui_unittest.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
web_dialog_web_contents_delegate.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Incognito profiles are not long-lived, so we always want to store a\n' +
    ' non-incognito profile.\n' +
    ' TODO(akalin): Should we make it so that we have a default incognito\n' +
    " profile that's long-lived?  Of course, we'd still have to clear it out\n" +
    ' when all incognito browsers close.'
]
color_change_handler.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
main.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
main_delegate.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser_context.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a delegate to initialize a HostZoomMap and persist its information.\n' +
    ' This is called during creation of each StoragePartition.'
]
browser_main_parts.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser_main_parts_aura.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
content_browser_client.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
devtools_frontend.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This constant should be in sync with\n' +
    ' the constant\n' +
    ' kMaxMessageChunkSize in chrome/browser/devtools/devtools_ui_bindings.cc.',
  ' static'
]
devtools_manager_delegate.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
devtools_server.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
aura_context.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
content_window.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fill_layout.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser_page_handler.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
guest_view_manager_delegate.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
web_view.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
webshell_guest_view.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
webui.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
webui_controller_factory.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
content_client.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
content_renderer_client.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
render_frame_observer.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper to manage the various V8 required scopes and variables.'
]
mojo_web_ui_controller.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
app_management_mojom_traits.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
app_management_mojom_traits_unittests.cc [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
untrusted_web_ui_browsertest_util.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
untrusted_web_ui_controller.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
untrusted_web_ui_controller_factory.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
webui_allowlist.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
webui_allowlist_provider.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
accelerator_filter.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' AcceleratorFilter, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' AcceleratorFilter, EventFilter implementation:'
]
base_focus_rules.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' BaseFocusRules, protected:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' BaseFocusRules, FocusRules implementation:'
]
capture_controller.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' CaptureController, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' CaptureController, aura::client::CaptureClient implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' ScopedCaptureClient:',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' CaptureController::TestApi'
]
capture_controller_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' aura::client::CaptureDelegate which allows querying whether native capture\n' +
    ' has been acquired.',
  ' Makes sure that internal details that are set on mouse down (such as\n' +
    ' mouse_pressed_handler()) are cleared when another root window takes capture.',
  ' Makes sure that when one window gets capture, it forces the release on the\n' +
    ' other. This is needed has to be handled explicitly on Linux, and is a sanity\n' +
    ' check on Windows.',
  ' Verifies the touch target for the WindowEventDispatcher gets reset on\n' +
    ' releasing capture.',
  ' Test that native capture is released properly when the window with capture\n' +
    ' is reparented to a different root window while it has capture.',
  ' Test that a call to `PrepareForShutdown()` releases capture from capture\n' +
    ' window and also prevents capture window from being set afterwards.',
  ' A delegate that deletes a window on scroll cancel gesture event.',
  ' Tests a scenario when a window gets deleted while a capture is being set on\n' +
    ' it and when that window releases its capture prior to being deleted.\n' +
    ' This scenario should end safely without capture being set.'
]
compound_event_filter.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' CompoundEventFilter, public:',
  ' static',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' CompoundEventFilter, private:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' CompoundEventFilter, ui::EventHandler implementation:'
]
compound_event_filter_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An event filter that consumes all gesture events.',
  ' A keypress only hides the cursor on ChromeOS (crbug.com/304296).',
  ' Touch visually hides the cursor on ChromeOS and Windows.',
  " Tests that if an event filter consumes a gesture, then it doesn't focus the\n" +
    ' window.',
  " Verifies we don't attempt to hide the mouse when the mouse is down and a\n" +
    ' touch event comes in.',
  ' Windows synthesizes mouse messages for touch events. We should not be\n' +
    ' showing the cursor when we receive such messages.'
]
coordinate_conversion.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
coordinate_conversion_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cursor_loader.cc [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cursor_loader_unittest.cc [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test the cursor image cache when fallbacks for system cursors are used.'
]
cursor_manager.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents the cursor state which is composed of cursor type, visibility, and\n' +
    ' mouse events enable state. When mouse events are disabled, the cursor is\n' +
    ' always invisible.',
  ' static'
]
cursor_manager_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verifies that LockCursor/UnlockCursor work correctly with\n' +
    ' EnableMouseEvents and DisableMouseEvents',
  ' Verifies that the mouse events enable state changes correctly when\n' +
    ' ShowCursor/HideCursor and EnableMouseEvents/DisableMouseEvents are used\n' +
    ' together.',
  ' Verifies that calling DisableMouseEvents multiple times in a row makes no\n' +
    ' difference compared with calling it once.\n' +
    ' This is a regression test for http://crbug.com/169404.',
  ' Verifies that calling EnableMouseEvents multiple times in a row makes no\n' +
    ' difference compared with calling it once.',
  ' This test validates that the cursor visiblity state is restored when a\n' +
    ' CursorManager instance is destroyed and recreated.'
]
cursor_util.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Get a cache for lottie animations.',
  ' Converts the SkBitmap to use a different alpha type. Returns true if bitmap\n' +
    ' was modified, otherwise returns false.',
  " Only rotate the cursor's hotpoint. |hotpoint_in_out| is used as\n" +
    ' both input and output. |cursor_bitmap_width| and |cursor_bitmap_height|\n' +
    ' should be the width and height of the cursor before bitmap rotation.',
  " Rotate the cursor's bitmap and hotpoint.\n" +
    ' |bitmap_in_out| and |hotpoint_in_out| are used as\n' +
    ' both input and output.',
  ' Create bitmaps from bitmap pixels. |image_rep| has a scale and holds\n' +
    ' bitmap pixels for that scale.',
  ' Create bitmaps from static lottie. |image_rep| is unscaled and contains\n' +
    ' a paint record for the lottie animation.',
  ' Create bitmaps from animated lottie.',
  ' Cursor resource data indexed by CursorType. Make sure to respect the order\n' +
    ' defined at ui/base/cursor/mojom/cursor_type.mojom.'
]
cursor_util_unittest.cc [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Parameterized test for cursor bitmaps with premultiplied and unpremultiplied\n' +
    ' alpha.'
]
default_activation_client.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Takes care of observing root window destruction & destroying the client.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DefaultActivationClient, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DefaultActivationClient, ActivationClient implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DefaultActivationClient, aura::WindowObserver implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' DefaultActivationClient, private:'
]
default_screen_position_client.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
easy_resize_window_targeter.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
focus_controller.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' When a modal window is activated, we bring its entire transient parent chain\n' +
    ' to the front. This function must be called before the modal transient is\n' +
    ' stacked at the top to ensure correct stacking order.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' FocusController, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' FocusController, ActivationClient implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' FocusController, aura::client::FocusClient implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' FocusController, ui::EventHandler implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' FocusController, aura::WindowObserver implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' FocusController, private:',
  ' Defines a macro that is meant to be called from SetActiveWindow(), which\n' +
    ' checks whether the activation was interrupted by checking whether\n' +
    ' |pending_activation_| has a value or not. In this case, it early-outs from\n' +
    ' the SetActiveWindow() stack.\n' +
    ' clang-format off',
  ' clang-format on'
]
focus_controller_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' EXPECT_DCHECK executes statement and expects a DCHECK death when DCHECK is\n' +
    ' enabled.',
  ' ActivationChangeObserver and FocusChangeObserver that keeps track of whether\n' +
    ' it was notified about activation changes or focus changes with a deleted\n' +
    ' window.',
  ' Hides a window when activation changes.',
  ' ActivationChangeObserver that deletes the window losing activation.',
  ' FocusChangeObserver that deletes the window losing focus.',
  ' Used to fake the handling of events in the pre-target phase.',
  ' BaseFocusRules subclass that allows basic overrides of focus/activation to\n' +
    ' be tested. This is intended more as a test that the override system works at\n' +
    ' all, rather than as an exhaustive set of use cases, those should be covered\n' +
    ' in tests for those FocusRules implementations.',
  ' Common infrastructure shared by all FocusController test types.',
  ' Test base for tests where focus is directly set to a target window.',
  ' Focus and Activation changes via ActivationClient API.',
  ' Focus and Activation changes via input events.',
  ' Test base for tests where focus is implicitly set to a window as the result\n' +
    ' of a disposition change to the focused window or the hierarchy that contains\n' +
    ' it.',
  ' Focus and Activation changes in response to window visibility changes.',
  ' Focus and Activation changes in response to window parent visibility\n' +
    ' changes.',
  ' Focus and Activation changes in response to window destruction.',
  ' Focus and Activation changes in response to window parent destruction.',
  ' Focus and Activation changes in response to window removal.',
  ' Focus and Activation changes in response to window parent removal.',
  ' Runs direct focus change tests (input events and API calls).',
  ' Runs implicit focus change tests for disposition changes to target.',
  " Runs implicit focus change tests for disposition changes to target's parent\n" +
    ' hierarchy.',
  " Runs all implicit focus change tests (changes to the target and target's\n" +
    ' parent hierarchy)',
  ' Runs all possible focus change tests.',
  ' Runs focus change tests that apply only to the target. For example,\n' +
    ' implicit activation changes caused by window disposition changes do not\n' +
    ' occur when changes to the containing hierarchy happen.',
  ' - Focuses a window, verifies that focus changed.',
  ' - Activates a window, verifies that activation changed.',
  ' - Focuses a window, verifies that focus events were dispatched.',
  ' - Focuses or activates a window multiple times, verifies that events are only\n' +
    '   dispatched when focus/activation actually changes.',
  ' - Activates a window, verifies that activation events were dispatched.',
  ' - Attempts to active a hidden window, verifies that current window is\n' +
    '   attempted to be reactivated and the appropriate event dispatched.',
  ' - Input events/API calls shift focus between focusable windows within the\n' +
    '   active window.',
  ' - Input events/API calls to a child window of an inactive window shifts\n' +
    '   activation to the activatable parent and focuses the child.',
  ' - Input events/API calls to focus the parent of the focused window do not\n' +
    '   shift focus away from the child.',
  ' - Verifies that FocusRules determine what can be focused.',
  ' - Verifies that FocusRules determine what can be activated.',
  ' - Verifies that attempts to change focus or activation from a focus or\n' +
    '   activation change observer are ignored.',
  ' See description above DontPassDeletedWindow() for details.',
  ' See description above TransientChildWindowActivationTest() for details.',
  ' If a mouse event was handled, it should not activate a window.',
  ' Mouse over window should activate it.',
  ' Mouse over window with active parent should not focus it.'
]
ime_util_chromeos.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Moves the window to ensure caret not in rect.\n' +
    ' Returns whether the window was moved or not.'
]
ime_util_chromeos_unittest.cc [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_animation_disabler.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
shadow_controller.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the shadow style to be applied to |losing_active| when it is losing\n' +
    ' active to |gaining_active|. |gaining_active| may be of a type that hides when\n' +
    ' inactive, and as such we do not want to render |losing_active| as inactive.',
  ' ShadowController::Impl ------------------------------------------------------',
  ' Real implementation of the ShadowController. ShadowController observes\n' +
    ' ActivationChangeObserver, which are per ActivationClient, where as there is\n' +
    ' only a single Impl (as it observes all window creation by way of an\n' +
    ' EnvObserver).',
  ' static',
  ' static',
  ' ShadowController ------------------------------------------------------------'
]
shadow_controller_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that various methods in Window update the Shadow object as expected.',
  " Tests that the window's shadow's bounds are updated correctly.",
  " Tests that the window's shadow's bounds are not updated if not following\n" +
    ' the window bounds.',
  ' Tests that activating a window changes the shadow style.',
  ' Tests that shadow gets updated when the window show state changes.',
  ' Tests that we use smaller shadows for tooltips and menus.',
  ' http://crbug.com/120210 - transient parents of certain types of transients\n' +
    ' should not lose their shadow when they lose activation to the transient.',
  ' Tests that the shadow color will be updated by setting the shadow colors map.'
]
shadow_types.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
transient_window_controller.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static'
]
transient_window_manager.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if the given `window` has a cycle in its transient window\n' +
    ' hierarchy.',
  ' static',
  ' static'
]
transient_window_manager_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.',
  ' Tests that creating a transient tree with a cycle in it will crash on a\n' +
    ' CHECK. See a crash that can happen if we allow cycles http://b/286947509.',
  ' Various assertions for transient children.',
  ' Tests that transient children are stacked as a unit when using stack above.',
  ' Tests that transient children are stacked as a unit when using stack below.',
  ' Tests that transient windows are stacked properly when created.',
  ' Tests for a crash when window destroyed inside\n' +
    ' UpdateTransientChildVisibility loop.',
  ' Tests that windows are restacked properly after a call to AddTransientChild()\n' +
    ' or RemoveTransientChild().',
  ' Used by NotifyDelegateAfterDeletingTransients. Adds a string to a vector when\n' +
    ' OnWindowDestroyed() is invoked so that destruction order can be verified.',
  ' Verifies the delegate is notified of destruction after transients are\n' +
    ' destroyed.',
  ' Verifies TransientWindowObserver is notified appropriately.',
  ' Tests that the lifetime of the transient window will be determined by its\n' +
    ' transient parent by default. But the transient window is still able to\n' +
    ' outlive the transient parent if we explicitly\n' +
    ' `set_parent_controls_lifetime()` to false through its transient window\n' +
    ' manager.'
]
transient_window_stacking_client.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Populates |ancestors| with all transient ancestors of |window| that are\n' +
    ' siblings of |window|. Returns true if any ancestors were found, false if not.',
  ' Replaces |window1| and |window2| with their possible transient ancestors that\n' +
    ' are still siblings (have a common transient parent).  |window1| and |window2|\n' +
    ' are not modified if such ancestors cannot be found.',
  ' static'
]
transient_window_stacking_client_unittest.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that transient children are stacked as a unit when using stack above.',
  ' Tests that transient children are stacked as a unit when using stack below.',
  ' Tests that windows can be stacked above windows with a NULL layer delegate.\n' +
    ' Windows have a NULL layer delegate when they are in the process of closing.\n' +
    ' See crbug.com/443433'
]
visibility_controller.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Property set on all windows whose child windows' visibility changes are\n" +
    ' animated.',
  ' A window with this property set will animate upon its visibility changes.'
]
visibility_controller_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Check that a transparency change to 0 will not cause a hide call to be\n' +
    ' ignored.',
  " Check that a hiding animation would not change a window's bounds in screen.",
  ' Test if SetWindowVisibilityChagngesAnimated will animate the specified\n' +
    ' window.'
]
window_animations.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A base class for hiding animation observer which has two roles:\n' +
    ' 1) Notifies AnimationHost at the end of hiding animation.\n' +
    " 2) Detaches the window's layers for hiding animation and deletes\n" +
    ' them upon completion of the animation. This is necessary to a)\n' +
    ' ensure that the animation continues in the event of the window being\n' +
    ' deleted, and b) to ensure that the animation is visible even if the\n' +
    ' window gets restacked below other windows when focus or activation\n' +
    ' changes.\n' +
    ' The subclass will determine when the animation is completed.',
  ' TODO(crbug.com/40657251): Find a better home and merge with\n' +
    '     ash::metris_util::ForSmoothness.',
  ' A HidingWindowAnimationObserver that deletes observer and detached\n' +
    ' layers upon the completion of the implicit animation.',
  ' Gets/sets the WindowVisibilityAnimationType associated with a window.\n' +
    ' TODO(beng): redundant/fold into method on public api?',
  ' Augment the host window so that the enclosing bounds of the full\n' +
    ' animation will fit inside of it.',
  ' Shows a window using an animation, animating its opacity from 0.f to 1.f,\n' +
    ' its visibility to true, and its transform from |start_transform| to\n' +
    ' |end_transform|.',
  ' Hides a window using an animation, animating its opacity from 1.f to 0.f,\n' +
    ' its visibility to false, and its transform to |end_transform|.',
  ' Show/Hide windows using a shrink animation.',
  ' Show/Hide windows using a vertical Glenimation.',
  ' Show/Hide windows using a fade.',
  ' A HidingWindowAnimationObserver that deletes observer and detached\n' +
    ' layers when the last_sequence has been completed or aborted.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' ImplicitHidingWindowAnimationObserver',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' ScopedHidingAnimationSettings',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' External interface'
]
window_animations_unittest.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A simple AnimationHost implementation for the NotifyHideCompleted test.',
  ' The rotation animation for hiding a window should not leak the animation\n' +
    ' observer.',
  ' The rotation animation for hiding a window should not crash with a zero\n' +
    ' duration.',
  ' The rotation animation for hiding a window should not crash when terminated\n' +
    ' by LayerAnimator::StopAnimating().'
]
window_modality_controller.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowModalityController, public:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowModalityController, aura::EventFilter implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowModalityController, aura::EnvObserver implementation:',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowModalityController, aura::WindowObserver implementation:'
]
window_properties.cc [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_util.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Invokes |map_func| on all the children of |to_clone|, adding the newly\n' +
    ' cloned children to |parent|. If |map_func| returns nullptr on\n' +
    " the layer owner, all its layer's children will not be cloned.\n" +
    ' WARNING: It is assumed that |parent| is ultimately owned by a LayerTreeOwner.',
  ' Invokes Mirror() on all the children of |to_mirror|, adding the newly cloned\n' +
    ' children to |parent|.\n' +
    ' WARNING: It is assumed that |parent| is ultimately owned by a LayerTreeOwner.'
]
window_util_unittest.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test if the recreate layers does not recreate layers that have\n' +
    ' already been acquired.',
  ' Test if map_func is correctly executed in RecreateLayerWithClosure.'
]
wm_core_switches.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' If present animations are disabled.'
]
wm_state.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
activation_change_observer.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
activation_client.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
activation_delegate.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
animation_host.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_activation_change_observer.cc [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_tooltip_disabler.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
tooltip_client.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_move_client.cc [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A property key to store a client that handles window moves.'
]
run_all_unittests.cc [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
testing_cursor_client_observer.cc [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wm_test_helper.cc [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
> ./out/extract-comments/ui_.cc.json
.h 2674
accelerated_widget_mac.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class through which an AcceleratedWidget may be bound to draw the contents\n' +
    ' of an NSView. An AcceleratedWidget may be bound to multiple different views\n' +
    ' throughout its lifetime (one at a time, though).',
  ' AcceleratedWidgetMac owns a tree of CALayers. The widget may be passed\n' +
    ' to a ui::Compositor, which will, through its output surface, call the\n' +
    ' CALayerFrameSink interface. The CALayers may be installed in an NSView\n' +
    ' by setting the AcceleratedWidgetMacNSView for the helper.'
]
accelerated_widget_mac_export.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ca_layer_frame_sink.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface to an NSView that will embed content described by CALayerParams\n' +
    ' in its hierarchy.'
]
ca_layer_frame_sink_provider.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ca_layer_tree_coordinator.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A structure that holds the tree of CALayers to display composited content.\n' +
    ' The CALayer tree may consist of a GLRendererLayerTree if the OpenGL renderer\n' +
    ' is being used, or a CARendererLayerTree if the CoreAnimation renderer is\n' +
    ' being used.\n' +
    ' This is instantiated in the GPU process and sent to the browser process via\n' +
    ' the cross-process CoreAnimation API.'
]
ca_renderer_layer_tree.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The CARendererLayerTree will construct a hierarchy of CALayers from a linear\n' +
    ' list provided by the CoreAnimation renderer using the algorithm and structure\n' +
    ' referenced described in\n' +
    ' https://docs.google.com/document/d/1DtSN9zzvCF44_FQPM7ie01UxGHagQ66zfF5L9HnigQY/edit?usp=sharing'
]
ca_transaction_observer.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' CATransactionCoordinator is an interface to undocumented macOS APIs which\n' +
    ' run callbacks at different stages of committing a CATransaction to the\n' +
    ' window server. There is no guarantee that it will call registered observers\n' +
    ' at all.\n' +
    ' - Pre-commit: After all outstanding CATransactions have committed and after\n' +
    '   layout, but before the new layer tree has been sent to the window server.\n' +
    '   Safe to block here waiting for drawing/layout in other processes (but\n' +
    "   you're on the main thread, so be reasonable).\n" +
    ' - Post-commit: After the new layer tree has been sent to the server but\n' +
    '   before the transaction has been finalized. In post-commit, the screen area\n' +
    "   occupied by the window and its shadow are frozen, so it's important to\n" +
    '   block as briefly as possible (well under a frame) or else artifacts will\n' +
    '   be visible around affected windows if screen content is changing behind\n' +
    '   them (think resizing a browser window while a video plays in a second\n' +
    '   window behind it). This is a great place to call -[CATransaction commit]\n' +
    '   (or otherwise flush pending changes to the screen) in other processes,\n' +
    '   because their updates will appear atomically.\n' +
    ' It has been observed that committing a CATransaction in the GPU process\n' +
    " which changes which IOSurfaces are assigned to layers' contents is *faster*\n" +
    " if done during the browser's post-commit phase vs. its pre-commit phase."
]
display_ca_layer_tree.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used to create a CALayer tree for displaying compositor output. This is\n' +
    ' created with a CALayer (usually the layer of a layer-hosting NSView) to use\n' +
    ' as the root layer of a small layer tree that displays contents specified via\n' +
    " CALayerParams from a compositor's output."
]
io_surface_context.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_resize_helper_mac.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WindowResizeHelperMac is used to make resize appear smooth. That is to\n' +
    ' say, make sure that the window size and the size of the contents being drawn\n' +
    ' in that window are resized in lock-step. This is accomplished by waiting\n' +
    ' inside AppKit drawing routines on the UI thread for the compositor to produce\n' +
    ' a frame of same size as the NSView that hosts an AcceleratedWidgetMac. When a\n' +
    ' resize occurs, the view controller can wait for a frame of the correct size\n' +
    ' by calling WindowResizeHelperMac::WaitForSingleTaskToRun() until a timeout\n' +
    ' occurs, or the corresponding AcceleratedWidgetMac has a renderer frame of the\n' +
    ' same size as its NSView.\n' +
    ' By posting tasks to the custom task_runner(), other threads indicate tasks\n' +
    ' that are required to pick up a new frame. In the ordinary run of things these\n' +
    ' would be posted to the |target_task_runner|; the UI thread given as an\n' +
    ' argument to Init(). Posting instead to task_runner() will cause the tasks to\n' +
    ' be posted to the UI thread (as usual), and will also enqueue them into a\n' +
    ' queue which will be read and run in WaitForSingleTaskToRun(), potentially\n' +
    ' before the task posted to the UI thread is run. Some care is taken (see\n' +
    ' WrappedTask) to make sure that the messages are only executed once.\n' +
    ' This is further complicated because, in order for a frame to appear, it is\n' +
    ' also necessary to run tasks posted by the ui::Compositor. To accomplish this,\n' +
    ' the task_runner() that WindowResizeHelperMac provides can be used to\n' +
    ' construct a ui::Compositor. When the Compositor posts tasks to it, they are\n' +
    ' enqueued in the aforementioned queue, which may be pumped by\n' +
    ' WindowResizeHelperMac::WaitForSingleTaskToRun().'
]
accessibility_features.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Define all the base::Features used by ui/accessibility.',
  ' This file declares base::Features related to the ui/accessibility code.\n' +
    ' If your flag is for all platforms, include it in the first section. If\n' +
    ' the flag is build-specific, include it in the appropriate section or\n' +
    ' add a new section if needed.\n' +
    ' Keep all sections ordered alphabetically.\n' +
    ' Include the base declaration, and a bool "is...Enabled()" getter for\n' +
    ' convenience and consistency. The bool method does not need a comment. Place a\n' +
    ' comment above the feature flag describing what the flag does when enabled.\n' +
    ' For example, a new entry should look like:\n' +
    '    // <<effect of the experiment>>\n' +
    '    AX_BASE_EXPORT BASE_DECLARE_FEATURE(kNewFeature);\n' +
    '    AX_BASE_EXPORT bool IsNewFeatureEnabled();\n' +
    ' In the .cc file, a corresponding new entry should look like:\n' +
    '    BASE_FEATURE(kNewFeature, "NewFeature",\n' +
    '    base::FEATURE_DISABLED_BY_DEFAULT); bool IsNewFeatureEnabled() {\n' +
    '      return base::FeatureList::IsEnabled(::features::kNewFeature);\n' +
    '    }\n' +
    ' Your feature name should start with "kAccessibility". There is no need to\n' +
    ' include the words "enabled" or "experimental", as these are implied. We\n' +
    ' include accessibility to differentiate these features from others in\n' +
    ' Chromium.',
  ' Enable PDF OCR for Select-to-Speak. It will be disabled by default on\n' +
    ' platforms other than ChromeOS as STS is available only on ChromeOS.',
  ' Use Alternative mechanism for acquiring image descriptions.',
  ' Disable the accessibility engine after a certain\n' +
    ' number of user input events spanning a minimum amount of time with no\n' +
    ' accessibility API usage in that time.',
  ' Recognize "aria-virtualcontent" as a valid aria property.',
  ' Use language detection to determine the language\n' +
    ' of text content in page and exposed to the browser process AXTree.',
  ' Restrict AXModes to web content related modes only when an IA2\n' +
    ' query is performed on a web content node.\n' +
    ' TODO(crbug.com/40266474): Remove flag once the change has been confirmed\n' +
    ' safe.',
  ' Serialize accessibility information from the Views tree and\n' +
    ' deserialize it into an AXTree in the browser process.',
  ' Support aria element reflection. For example:\n' +
    '     element.ariaActiveDescendantElement = child;',
  " Turn on browser vocalization of 'descriptions' tracks.",
  ' Expose document markers on inline text boxes in addition to\n' +
    ' static nodes. (Note: This will make it possible for AXPosition in the browser\n' +
    ' process to handle document markers, which will be platform agnositc)',
  ' Performs a move over a copy of merge tree update.',
  ' Use Chrome-specific accessibility COM API.',
  ' Selectively enable accessibility depending on the\n' +
    ' UIA APIs that are called. (Note: This will make it possible for\n' +
    ' non-screenreader services to enable less of the accessibility system)',
  " Use the browser's UIA provider when requested by\n" +
    ' an accessibility client.',
  ' TODO(accessibility): Should this be moved to ash_features.cc?',
  ' Adds option to enable Accessibility accelerator.',
  ' Adds option to limit the movement on the screen.',
  ' Integrate with FaceGaze.',
  ' Adds reduced animations toggle to kiosk quick settings.',
  ' Allow context checking with the accessibility Dictation\n feature.',
  ' Download Google TTS High Quality voices.',
  ' Whether the screen magnifier can follow the ChromeVox focus.',
  ' Whether the screen magnifier can follow the Select to Speak focus.',
  ' Control mouse with keyboard.',
  ' Control blink rate of text cursor.',
  ' Control whether the overscroll setting is available.',
  ' Controls whether the Select to Speak keyboard shortcut is enabled.',
  ' Controls whether the shake cursor to locate feature is available.',
  ' Controls whether the turn on magnifier at accelerator dialog feature is\n' +
    ' available.',
  ' Controls whether the disable trackpad feature is enabled.',
  ' Controls whether the flash screen for notifications feature is available.',
  ' Controls whether the filter keys features are available.',
  ' Disable max node and timeout limits on the\n' +
    " AXTreeSnapshotter's Snapshot method, and track related histograms.",
  ' Controls the maximum amount of nodes in a given snapshot. We set an\n' +
    ' arbitrarily high value as the default to simulate there being no max nodes\n' +
    ' limit.',
  ' Use the experimental Accessibility Service.\n' +
    ' TODO(katydek): Provide a more descriptive name here.',
  ' Open Read Anything side panel when the browser is opened, and\n' +
    " call distill after the navigation's load-complete event. (Note: The browser\n" +
    ' is only being opened to render one webpage, for the sake of generating\n' +
    ' training data for Screen2x data collection. The browser is intended to be\n' +
    ' closed by the user who launches Chrome once the first distill call finishes\n' +
    ' executing.)\n' +
    " Note: This feature should be used along with 'ScreenAIDebugModeEnabled=true'\n" +
    ' and --no-sandbox.',
  ' Identify and annotate the main node of the AXTree where one was not already\n' +
    ' provided.',
  ' Use OCR to make inaccessible (i.e. untagged) PDFs\n' +
    ' accessibility. (Note: Due to the size of the OCR component, this feature\n' +
    ' targets only desktop versions of Chrome for now.)',
  ' Show the Read Aloud feature in Read Anything.',
  ' Use automatic voice switching in the Read Aloud feature in Read Anything.',
  ' Use automatic voice switching in the Read Aloud feature in Read Anything.',
  ' Enable automatic word highlighting in Read Anything Read Aloud.',
  ' Enable phrase highlighting in Read Anything Read Aloud.',
  ' Use screen2x integration for Read Anything to distill web pages\n' +
    ' using an ML model.',
  ' Enable rules based algorithm for distilling content. Should be enabled by\n' +
    ' default.',
  ' Enable images to be distilled via algorithm. Should be disabled by\n' +
    ' default.',
  ' Enable Reading Mode to work on Google Docs. Should be disabled by default.',
  ' Enable "load more" button to show at the end of Reading Mode panel.\n' +
    ' Should be disabled by default.',
  ' Write some ScreenAI library debug data in /tmp.',
  " ScreenAI library's Main Content Extraction service is enabled.",
  " ScreenAI library's OCR service is enabled.",
  ' Enables to use the Screen AI component available for testing.\n' +
    ' If enabled, ScreenAI library will be loaded from //third_party/screen-ai.',
  " Set NSAccessibilityRemoteUIElement's RemoteUIApp to YES to fix\n" +
    ' some accessibility bugs in PWA Mac. (Note: When enabling\n' +
    " NSAccessibilityRemoteUIElement's RemoteUIApp previously, chromium would hang.\n" +
    ' See: https://crbug.com/1491329).'
]
accessibility_prefs.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Define all the prefs used by ui/accessibility.',
  ' Local state prefs.',
  ' Whether different accessibility filtering modes for performance are allowed.\n' +
    ' Exposed only to mobile Android.'
]
accessibility_switches.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Define all the command-line switches used by ui/accessibility.',
  ' Returns true if experimental accessibility language detection is enabled.',
  ' Returns true if experimental accessibility language detection support for\n' +
    ' dynamic content is enabled.',
  ' Returns true if experimental accessibility Switch Access text is enabled.',
  ' Returns true if Switch Access point scanning is enabled.',
  ' For development / testing only.\n' +
    ' When enabled the switch generates expectations files upon running an\n' +
    ' ax_inspect test. For example, when running content_browsertests, it saves\n' +
    ' output of failing accessibility tests to their expectations files in\n' +
    ' content/test/data/accessibility/, overwriting existing file content.'
]
accessibility_state.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides methods for measuring accessibility state on Android via\n' +
    ' org.chromium.ui.accessibility.AccessibilityState.'
]
aura_window_properties.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Value is a serialized |AXTreeID| because code in //ui/aura/mus needs\n' +
    ' to serialize the window property, but //ui/aura cannot depend on\n' +
    ' //ui/accessibility and hence cannot know about the type AXTreeID.\n' +
    ' (Note: it would probably be better if this was a base::UnguessableToken\n' +
    ' instead of a std::string.)',
  ' Whether to force a window to be invisible with its children ignored. Used\n' +
    ' to hide the non-lock screen contents when the lock screen is shown.'
]
ax_action_data.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A compact representation of an accessibility action and the arguments\n' +
    ' associated with that action.'
]
ax_action_handler.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The class you normally want to inherit from other classes when you want to\n' +
    ' make them visible to accessibility clients, since it automatically registers\n' +
    ' a valid AXTreeID with the AXActionHandlerRegistry when constructing the\n' +
    ' instance.\n' +
    ' If you need more control over how the AXTreeID associated to this class is\n' +
    ' set, please inherit directly from AXActionHandlerBase instead.'
]
ax_action_handler_base.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Classes that host an accessibility tree in the browser process that also wish\n' +
    ' to become visible to accessibility clients (e.g. for relaying targets to\n' +
    ' source accessibility trees), can subclass this class. However, unless you\n' +
    ' need to have more control over how |tree_id_| is set, most classes will want\n' +
    ' to inherit from AXActionHandler instead, which manages it automatically.\n' +
    ' Subclasses can use |tree_id| when annotating their |AXNodeData| for clients\n' +
    ' to respond with the appropriate target node id.'
]
ax_action_handler_registry.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An observer is informed of all automation actions.',
  ' This class generates and saves a runtime id for an accessibility tree.\n' +
    ' It provides a few distinct forms of generating an id:\n' +
    '     - from a frame id (which consists of a process and routing id)\n' +
    '     - from a backing |AXActionHandlerBase| object\n' +
    ' The first form allows underlying instances to change but refer to the same\n' +
    ' frame.\n' +
    ' The second form allows this registry to track the object for later retrieval.'
]
ax_action_target.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' AXActionTarget is an abstract interface that can be used to carry out\n' +
    ' accessibility actions on nodes from an AXTreeSource without knowing the\n' +
    ' concrete class of that AXTreeSource.'
]
ax_active_popup.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_assistant_structure.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_base_export.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines AX_BASE_EXPORT so that functionality implemented by the\n' +
    ' ui/accessibility:ax_base module can be exported to consumers.'
]
ax_bit_map.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' A helper class to store AX-related boolean enums.'
]
ax_clipping_behavior.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " The clipping behavior to perform on bounds. Clipping limits a node's bounding\n" +
    " box to the visible sizes of it's ancestors - which may be hidden or scrolled\n" +
    ' out of view. For a longer discussion on clipping behavior see the link below.\n' +
    ' https://chromium.googlesource.com/chromium/src/+/lkgr/docs/accessibility/offscreen.md\n' +
    '   kUnclipped: Do not apply clipping to bound results\n' +
    '   kClipped:   Apply clipping to bound results'
]
ax_common.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Enable fast fails on clusterfuzz and other builds used to debug Chrome,\n' +
    ' in order to help narrow down illegal states more quickly.',
  " SANITIZER_CHECK's use case is severe, but recoverable situations that need\n" +
    ' priority debugging. They trigger on Clusterfuzz, debug and sanitizer builds.\n' +
    ' Prefer DCHECK() when enabled because it logs messages in the crash tool,\n' +
    ' unlike CHECK().',
  ' Fall back on an ordinary DCHECK.'
]
ax_computed_node_data.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Computes and stores information about an `AXNode` that is slow or error-prone\n' +
    " to compute in the tree's source, e.g. in Blink. This class holds cached\n" +
    ' values that should be re-computed when the associated `AXNode` is in any way\n' +
    ' modified.'
]
ax_coordinate_system.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The coordinate system of bounds or points. The origin for all coordinate\n' +
    ' systems is the upper left hand corner of the region. Frame coordinates\n' +
    ' correspond to the current frame and root frame coordinates are relative to\n' +
    ' the topmost accessibility tree of the same type. For web content, root frame\n' +
    ' coordinates are relative to the root frame of the web page. From within an\n' +
    ' accessibility tree whose root is an iframe, frame coordinates are relative to\n' +
    ' the region of the iframe. From an iframe leaf accessibility node, frame\n' +
    ' coordinates are relative to the containing accessibility tree. For native UI,\n' +
    ' frame coordinates are relative to the current window whereas root frame\n' +
    ' coordinates are relative to the top-level window. The frame coordinates are\n' +
    ' equivalent to the root frame coordinates when the current accessibility tree\n' +
    ' is the root accessibility tree.\n' +
    '   kScreenPhysicalPixels: Relative to screen space in hardware pixels\n' +
    '   kScreenDIPs:     Relative to screen space in device-independent pixels\n' +
    '                    (i.e. accounting for display DPI)\n' +
    '   kRootFrame:      Relative to the top-level accessibility tree of\n' +
    '                    the same type\n' +
    '   kFrame:          Relative to the current accessibility tree'
]
ax_enum_localization_util.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a localized string that corresponds to the name of the given action.'
]
ax_enum_util.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ax::mojom::Event',
  ' ax::mojom::Role',
  ' ax::mojom::State',
  ' ax::mojom::Action',
  ' ax::mojom::ActionFlags',
  ' ax::mojom::DefaultActionVerb',
  ' ax::mojom::Mutation',
  ' ax::mojom::StringAttribute',
  ' ax::mojom::IntAttribute',
  ' ax::mojom::FloatAttribute',
  ' ax::mojom::BoolAttribute',
  ' ax::mojom::IntListAttribute',
  ' ax::mojom::StringListAttribute',
  ' ax::mojom::ListStyle',
  ' ax::mojom::MarkerType',
  ' ax::mojom::HighlightType',
  ' ax::mojom::MoveDirection',
  ' ax::mojom::Command',
  ' ax::mojom::InputEventType',
  ' ax::mojom::TextBoundary',
  ' ax::mojom::TextAlign',
  ' ax::mojom::WritingDirection',
  ' ax::mojom::TextPosition',
  ' ax::mojom::TextStyle',
  ' ax:mojom::TextDecorationStyle',
  ' ax::mojom::AriaCurrentState',
  ' ax::mojom::HasPopup',
  ' ax::mojom::IsPopup',
  ' ax::mojom::InvalidState',
  ' ax::mojom::Restriction',
  ' ax::mojom::CheckedState',
  ' ax::mojom::SortDirection',
  ' ax::mojom::NameFrom',
  ' ax::mojom::DescriptionFrom',
  ' ax::mojom::EventFrom',
  ' ax::mojom::Gesture',
  ' ax::mojom::TextAffinity',
  ' ax::mojom::TreeOrder',
  ' ax::mojom::ImageAnnotationStatus',
  ' ax::mojom::AriaNotificationInterrupt',
  ' ax::mojom::AriaNotificationPriority',
  ' Convert from the string representation of an enum defined in ax_enums.mojom\n' +
    ' into the enum value. The first time this is called, builds up a map.\n' +
    ' Relies on the existence of ToString(enum).'
]
ax_error_types.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Flags for the possible ways an AXTree serialization could fail.'
]
ax_event.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_event_generator.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Subclass of AXTreeObserver that automatically generates AXEvents to fire\n' +
    ' based on changes to an accessibility tree.  Every platform\n' +
    ' tends to want different events, so this class lets each platform\n' +
    ' handle the events it wants and ignore the others.',
  ' Parses the attribute and updates |result| and returns true if a match is\n' +
    ' found, or returns false if no match is found.',
  ' Does a NOTREACHED if no match is found.'
]
ax_event_intent.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Describes what caused an accessibility event to be raised. For example, a\n' +
    ' character could have been typed, a word replaced, or a line deleted. Or, the\n' +
    ' selection could have been extended to the beginning of the previous word, or\n' +
    ' it could have been moved to the end of the next line.'
]
ax_export.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines AX_EXPORT so that functionality implemented by the\n' +
    ' ui/accessibility module can be exported to consumers.'
]
ax_hypertext.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Stores the hypertext for an `AXNode` in the accessibility tree. Hypertext has\n' +
    ' nothing to do with HTML but is how displayed text and embedded objects are\n' +
    ' represented in ATK and IAccessible2 APIs.\n' +
    ' Hypertext is computed as follows: If this node is a leaf, returns the inner\n' +
    ' text of this node. This is equivalent to its visible accessible name.\n' +
    ' Otherwise, if this node is not a leaf, represents every non-textual child\n' +
    ' node with a special "embedded object character", and every textual child node\n' +
    ' with its inner text. Textual nodes include e.g. static text and white space.\n' +
    ' Each non-textual child node is also called a hyperlink.'
]
ax_language_detection.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This module implements language detection enabling Chrome to automatically\n' +
    ' detect the language for runs of text within the page.\n' +
    ' Node-level language detection runs once per page after the load complete\n' +
    ' event. This involves two passes:\n' +
    '   *Detect* walks the tree from the given root using cld3 to detect up to 3\n' +
    '            potential languages per node. A ranked list is created enumerating\n' +
    '            all potential languages on a page.\n' +
    '   *Label* re-walks the tree, assigning a language to each node considering\n' +
    '           the potential languages from the detect phase, page level\n' +
    '           statistics, and the assigned languages of ancestor nodes.\n' +
    ' Optionally an embedder may run *sub-node* language detection which attempts\n' +
    ' to assign languages for runs of text within a node, potentially down to the\n' +
    ' individual character level. This is useful in cases where a single paragraph\n' +
    ' involves switching between multiple languages, and where the speech engine\n' +
    " doesn't automatically switch voices to handle different character sets.\n" +
    ' Due to the potentially small lengths of text runs involved this tends to be\n' +
    ' lower in accuracy, and works best when a node is composed of multiple\n' +
    ' languages with easily distinguishable scripts.',
  ' AXLanguageInfo represents the local language detection data for all text\n' +
    ' within an AXNode. Stored on AXNode.',
  ' Each AXLanguageSpan contains a language, a probability, and start and end\n' +
    ' indices. The indices are used to specify the substring that contains the\n' +
    ' associated language. The string which the indices are relative to is not\n' +
    ' included in this structure.\n' +
    ' Also, the indices are relative to a Utf8 string.\n' +
    ' See documentation on GetLanguageAnnotationForStringAttribute for details\n' +
    ' on how to associate this object with a string.',
  ' A single AXLanguageInfoStats instance is stored on each AXTree and contains\n' +
    ' statistics on detected languages for all the AXNodes in that tree.\n' +
    ' We rely on these tree-level statistics when labelling individual nodes, to\n' +
    ' provide extra signals to increase our confidence in assigning a detected\n' +
    ' language.\n' +
    ' These tree level statistics are also used to send reports on the language\n' +
    ' detection feature to enable tuning.\n' +
    ' The Label step will only assign a detected language to a node if that\n' +
    ' language is one of the most frequent languages on the page.\n' +
    ' For example, if a single node has detected_languages (in order of probability\n' +
    ' assigned by cld_3): da-DK, en-AU, fr-FR, but the page statistics overall\n' +
    ' indicate that the page is generally in en-AU and ja-JP, it is more likely to\n' +
    ' be a mis-recognition of Danish than an accurate assignment, so we assign\n' +
    ' en-AU instead of da-DK.',
  ' AXLanguageDetectionObserver is registered as a change observer on an AXTree\n' +
    ' and will run language detection after each update to the tree.\n' +
    ' We have kept this observer separate from the AXLanguageDetectionManager as we\n' +
    ' are aiming to launch language detection in two phases and wanted to try keep\n' +
    ' the code paths somewhat separate.\n' +
    ' TODO(chrishall): After both features have launched we could consider merging\n' +
    ' AXLanguageDetectionObserver into AXLanguageDetectionManager.\n' +
    ' TODO(chrishall): Investigate the cost of using AXTreeObserver, given that it\n' +
    ' has many empty virtual methods which are called for every AXTree change and\n' +
    ' we are only currently interested in OnAtomicUpdateFinished.',
  ' AXLanguageDetectionManager manages all of the context needed for language\n' +
    ' detection within an AXTree.'
]
ax_mode.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used when an AT that only require basic accessibility information, such as\n' +
    ' a dictation tool, is present.',
  ' Used when complete accessibility access is desired but a third-party AT is\n' +
    ' not present.',
  ' Used when an AT that requires full accessibility access, such as a screen\n' +
    ' reader, is present.',
  ' Similar to kAXModeComplete, used when an AT that requires full accessibility\n' +
    ' access, but does not need all HTML properties or attributes.',
  ' Used when only tools that only need autofill functionality are present.\n' +
    ' Some third password managers require kHTML.\n' +
    ' TODO (aldietz): investigate what is needed by password managers in kHTML and\n' +
    ' see if that may be folded into kAXModeBasic.',
  ' If adding a new named set of mode flags, please update BundleHistogramValue.',
  ' For debugging, test assertions, etc.'
]
ax_mode_histogram_logger.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_mode_observer.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_node.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is used to represent a node in an accessibility tree (`AXTree`).'
]
ax_node_data.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Return true if |attr| should be interpreted as the id of another node\n' +
    ' in the same tree.',
  ' Return true if |attr| should be interpreted as a list of ids of\n' +
    ' nodes in the same tree.',
  ' A compact representation of the accessibility information for a\n' +
    ' single accessible object, in a form that can be serialized and sent from\n' +
    ' one process to another.'
]
ax_node_id_forward.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines the type used for AXNode IDs, which are unique for a given context,\n' +
    ' such as a renderer, or Views, but not guaranteed to be unique within the\n' +
    ' current process or WebContents, which can contain multiple renderers.\n' +
    ' Because Accessibility APIs often need uniqueness within a WebContents,\n' +
    ' a AXUniqueId will be generated in order to differentiate a node in one\n' +
    ' renderer from another.',
  ' If a node is not yet or no longer valid, its ID should have a value of\n' +
    ' kInvalidAXNodeID.\n' +
    ' Note: positive AXNodeIDs match DOM node ids generated by Blink. They are used\n' +
    ' for objects that contain that matching DOM node.',
  ' The browser needs to generate an AXNodeID for objects that it inserts in\n' +
    ' the hierarchy, such as "extra mac nodes"',
  ' A new AXTree is constructed with an empty document. The root must have a\n' +
    ' unique AXNodeID that will not match any other id.',
  " The renderer needs to generate an AXNodeID for objects that don't have a DOM\n" +
    ' node. These start with this value and subsequent ids each subtract 1.'
]
ax_node_position.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a human-readable representation of `AXPositionKind`.',
  ' AXNodePosition includes implementations of AXPosition methods which require\n' +
    ' knowledge of the AXPosition AXNodeType (which is unknown by AXPosition).'
]
ax_offscreen_result.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The onscreen state of result bounds or points. Any object is offscreen if\n' +
    ' it is fully clipped or scrolled out of view by any of its ancestors so that\n' +
    ' it is not rendered on the screen. For a longer discussion on what offscreen\n' +
    ' means in the context of Chromium see the link below.\n' +
    ' https://chromium.googlesource.com/chromium/src/+/lkgr/docs/accessibility/offscreen.md\n' +
    '   kOnscreen:  The resulting bound or point is onscreen\n' +
    '   kOffscreen: The resulting bound or point is offscreen'
]
ax_position.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' Defines the type of position in the accessibility tree.\n' +
    ' A tree position is used when referring to a specific child of a node in the\n' +
    ' accessibility tree.\n' +
    ' A text position is used when referring to a specific character of text inside\n' +
    ' a particular node.\n' +
    ' A null position is used to signify that the provided data is invalid or that\n' +
    ' a boundary has been reached.',
  ' Defines how creating the next or previous position should behave whenever we\n' +
    ' are at or are crossing a text boundary, (such as the start of a word or the\n' +
    " end of a sentence), or whenever we are crossing the initial position's\n" +
    ' anchor. Note that the "anchor" is the node to which an AXPosition is attached\n' +
    ' to. It is provided when a position is created.',
  ' Defines whether moving to the next or previous position should consider the\n' +
    ' initial position before testing for the given boundary/behavior.\n' +
    ' kCheckInitialPosition should be used if the current position should be\n' +
    ' maintained if it meets the boundary criteria. Otherwise,\n' +
    ' kDontCheckInitialPosition will move to the next/previous position before\n' +
    ' testing for the specified boundary.',
  ' Describes in further detail what type of boundary a current position is on.\n' +
    ' For complex boundaries such as format boundaries, it can be useful to know\n' +
    ' why a particular boundary was chosen.',
  ' When converting to an unignored position, determines how to adjust the new\n' +
    ' position in order to make it valid, either moving backward or forward in\n' +
    ' the accessibility tree.',
  ' Specifies how AXPosition::ExpandToEnclosingTextBoundary behaves.\n' +
    ' As an example, imagine we have the text "hello world" and a position before\n' +
    ' the space character. We want to expand to the surrounding word boundary.\n' +
    ' Since we are right at the end of the first word, we could either expand to\n' +
    ' the left first, find the start of the first word and then use that to find\n' +
    ' the corresponding word end, resulting in the word "Hello". Another\n' +
    ' possibility is to expand to the right first, find the end of the next word\n' +
    ' and use that as our starting point to find the previous word start, resulting\n' +
    ' in the word "world".',
  ' Some platforms require most objects, including empty objects, to be\n' +
    ' represented by an "embedded object character" in order for text navigation to\n' +
    ' work correctly. This enum controls whether a replacement character will be\n' +
    ' exposed for such objects.\n' +
    ' When an embedded object is replaced by this special character, the\n' +
    ' expectations are the same with this character as with other ordinary\n' +
    ' characters.\n' +
    ' For example, with UIA on Windows, we need to be able to navigate inside and\n' +
    ' outside of this character as if it was an ordinary character, using the\n' +
    ' `AXPlatformNodeTextRangeProvider` methods. Since an "embedded object\n' +
    ' character" is the only character in a node, we also treat this character as a\n' +
    ' word.\n' +
    ' However, there is a special case for UIA. kExposeCharacterForHypertext is\n' +
    ' used mainly to enable the hypertext logic and calculation for cases where the\n' +
    ' embedded object character is not needed. This logic is IA2 and ATK specific,\n' +
    ' and should not be used for UIA relevant calls and calculations. As a result,\n' +
    ' we have the kUIAExposeCharacterForTextContent which avoids the IA2/ATK\n' +
    ' specific logic for the text calculation but also keeps the same embedded\n' +
    ' object character behavior for cases when it is needed.',
  ' Controls whether embedded objects are represented by a replacement\n' +
    ' character. This is initialized to a per-platform default but can be\n' +
    ' overridden for testing.\n' +
    ' On some platforms, most objects are represented in the text of their parents\n' +
    ' with a special "embedded object character" and not with their actual text\n' +
    ' contents. Also on the same platforms, if a node has only ignored descendants,\n' +
    ' i.e., it appears to be empty to assistive software, we need to treat it as a\n' +
    ' character and a word boundary. For example, an empty text field should act as\n' +
    ' a character and a word boundary when a screen reader user tries to navigate\n' +
    ' through it, otherwise the text field would be missed by the user.\n' +
    ' Tests should use ScopedAXEmbeddedObjectBehaviorSetter to change this.\n' +
    " TODO(crbug.com/40764129) Don't export this so tests can't change it.",
  ' Forward declarations.',
  ' A position in the accessibility tree.\n' +
    ' This class could either represent a tree position or a text position.\n' +
    ' Tree positions point to either a child of a specific node or at the end of a\n' +
    ' node (i.e. an "after children" position).\n' +
    ' Text positions point to either a character offset in the text inside a\n' +
    ' particular node including text from all its children, or to the end of the\n' +
    ` node's text, (i.e. an "after text" position).\n` +
    ' On tree positions that have a leaf node as their anchor, we also need to\n' +
    ' distinguish between "before text" and "after text" positions. To do this, if\n' +
    ` the child index is 0 and the anchor is a leaf node, then it's an "after text"\n` +
    ' position. If the child index is |BEFORE_TEXT| and the anchor is a leaf node,\n' +
    ' then this is a "before text" position.\n' +
    ` It doesn't make sense to have a "before text" position on a text position,\n` +
    ' because it is identical to setting its offset to the first character.\n' +
    ' To avoid re-computing either the text offset or the child index when\n' +
    ' converting between the two types of positions, both values are saved after\n' +
    ' the first conversion.\n' +
    ' This class template uses static polymorphism in order to allow sub-classes to\n' +
    ' be created from the base class without the base class knowing the type of the\n' +
    ' sub-class in advance.\n' +
    ' The template argument |AXPositionType| should always be set to the type of\n' +
    ' any class that inherits from this template, making this a\n' +
    ' "curiously recursive template".\n' +
    ' This class can be copied using the |Clone| method. It is designed to be\n' +
    ' immutable.'
]
ax_range.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Specifies how AXRange::GetText treats any formatting changes, such as\n' +
    ' paragraph breaks, that have been introduced by layout. For example, consider\n' +
    ' the following HTML snippet: "A<div>B</div>C".',
  ' A range delimited by two positions in the AXTree.\n' +
    ' In order to avoid any confusion regarding whether a deep or a shallow copy is\n' +
    ' being performed, this class can be moved, but not copied.'
]
ax_relative_bounds.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The relative bounding box of an AXNode.\n' +
    " This is an efficient, compact, serializable representation of a node's\n" +
    ' bounding box that requires minimal changes to the tree when layers are\n' +
    ' moved or scrolled. Computing the absolute bounding box of a node requires\n' +
    ' walking up the tree and applying node offsets and transforms until reaching\n' +
    ' the top.\n' +
    ' If the offset container id is valid, the bounds are relative\n' +
    ' to the node with that offset container id.\n' +
    ' Otherwise, for a node other than the root, the bounds are relative to\n' +
    ' the root of the tree, and for the root of a tree, the bounds are relative\n' +
    ' to its immediate containing node.'
]
ax_role_properties.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file contains various helper functions that determine whether a\n' +
    ' specific accessibility role meets certain criteria.\n' +
    ' Please keep these functions in alphabetic order.',
  " When using these functions in Blink, it's necessary to add the function names\n" +
    ' to third_party/blink/tools/blinkpy/presubmit/audit_non_blink_usage.py, in\n' +
    ' order to pass presubmit.',
  ' Returns true for text parents that can have inline text box children.',
  ' Returns true for object roles that have the attribute "Children\n' +
    ' Presentational: True" as defined in the ARIA Specification.\n' +
    ' https://www.w3.org/TR/wai-aria-1.1/#childrenArePresentational.',
  ' Returns true if the given role is an alert or alert-dialog type.',
  ' Returns true if the given role is a candidate to be labeled with a classname\n' +
    ' of TextView on Android.',
  ' Returns true if the provided role belongs to a native or an ARIA button.',
  ' Returns true if the provided role belongs to a cell or a table header.',
  ' Returns true if the provided role belongs to an object on which a click\n' +
    ' handler is commonly attached, or to an object that carries out an action when\n' +
    ' clicked, such as activating itself, opening a dialog or closing a menu.\n' +
    ' A button and a checkbox fall in the first category, whilst a color well and a\n' +
    ' list menu option in the second. Note that a text field, or a similar element,\n' +
    ' also carries out an action when clicked. It focuses itself, so the action\n' +
    ' verb is "activate". Not all roles that inherently support a click handler or\n' +
    ' that can potentially be focused are included, because in that case even a div\n' +
    ' could be made clickable or focusable.\n' +
    ' The reason for the existence of this function is that certain screen readers,\n' +
    ' such as Jaws, might need to report such objects as clickable to their users,\n' +
    ' so that users will know that they could activate them if they so choose.',
  ' Returns true if the provided role is any of the checkbox-related roles.',
  ' Returns true if the provided role is any of the combobox-related roles.',
  ' Returns true if the provided role is a container that can hold the choices\n' +
    ' for a combobox. For example, a dialog could pop up a list of choices for a\n' +
    ' user, and so a dialog is a potential combobox container.',
  ' Returns true if the provided role belongs to a container with selectable\n' +
    ' children.',
  ' Returns true if the provided role is a control.',
  ' Returns true if the provided role is a control on the Android platform.',
  ' Returns true for an <input> used for a date or time.',
  ' Returns true if the provided role represents a dialog.',
  ' Returns true if the role represents an HTML embedding element, i.e. an\n' +
    ' element that can embed content from another source such as an <iframe> or a\n' +
    ' <embed>.\n' +
    ' Can return false for an embedding element if an ARIA role was used, e.g.\n' +
    ' <iframe role="region">.',
  ' Returns true if the provided role is a form.',
  ' Returns true if crossing into or out of the provided role should count as\n' +
    ' crossing a format boundary.',
  ' Returns true if the provided role belongs to a grid, treegrid, listgrid\n' +
    ' or tree. Returns false for table.',
  ' Returns true if the provided role belongs to a heading.',
  ' Returns true if the provided role belongs to an iframe.',
  ' Returns true if the provided role belongs to an image, graphic, canvas, etc.',
  ' Returns true if the provided role is for any kind of image or video.',
  ' Returns true if the provided role is item-like, specifically if it can hold\n' +
    ' pos_in_set and set_size values. Roles that are item-like are not set-like.',
  ' Returns true if the provided role is likely to be an active descendant.',
  ' Returns true if the role is a subclass of the ARIA Landmark abstract role.',
  ' Returns true if the provided role belongs to a link.',
  ' Returns true if the provided role belongs to a list.',
  ' Returns true if the provided role belongs to a list item.',
  ' Returns true if the provided role belongs to a menu item, including menu item\n' +
    ' checkbox and menu item radio buttons.',
  ' Returns true if the provided role belongs to a menu or related control.',
  ' Returns true if the provided role belongs to a node that is at the root of\n' +
    ' what most accessibility APIs consider to be a document, such as the root of a\n' +
    ' webpage, an iframe, or a PDF.',
  ' Returns true if the provided role is presentational in nature, i.e. a node\n' +
    ' whose implicit native role semantics will not be mapped to the accessibility\n' +
    ' API.',
  ' Returns true if the provided role belongs to a radio.',
  ' Returns true if the provided role supports a range-based value, such as a\n' +
    ' slider.',
  ' Returns true if this object supports readonly.\n' +
    ' Note: This returns false for table headers, it is up to the caller to make\n' +
    '       sure that they are included IFF they are within an ARIA-1.1+\n' +
    "       role='grid' or 'treegrid', and not role='table'.",
  ' Returns true if the provided role is at the root of a window-like container,\n' +
    ' (AKA a widget in Views terminology), such as the root of the web contents, a\n' +
    ' window, a dialog or the whole desktop.',
  ' Returns true if the provided role belongs to a widget that can contain a\n' +
    ' table or grid row.',
  ' Returns true if the role is a subclass of the ARIA Section abstract role.',
  ' Returns true if the role is a subclass of the ARIA Sectionhead role.',
  ' Returns true if the role is a subclass of the ARIA Select abstract role.',
  ' Returns true if the role is one of those exposed by the HTML <select>\n' +
    ' element.',
  ' Returns true if the provided role either requires or has an implicit value\n' +
    ' for aria-selected state.',
  ' Returns true if the provided role supports aria-selected state.',
  ' Returns true if the provided role is ordered-set like, specifically if it\n' +
    ' can hold set_size values. Roles that are set-like are not item-like.',
  ' Returns true if the provided role belongs to a non-interactive list.',
  ' Returns true if the role is a subclass of the ARIA Structure abstract role.',
  ' Returns true if the provided role belongs to a table or grid column, and the\n' +
    ' table is not used for layout purposes.',
  ' Returns true if the provided role belongs to a table header.',
  ' Returns true if the provided role belongs to an item that could be contained\n' +
    ' in a table-like container. For example, a cell or a column header.',
  ' Returns true if the provided role belongs to a table, a grid or a treegrid.\n' +
    ' On Android this also returns true for the roles: lists, list boxes,\n' +
    ' trees, description lists and directories.',
  ' Returns true if the provided role belongs to a table or grid row, and the\n' +
    ' table is not used for layout purposes.',
  ' Returns true if the provided role belongs to a table, a grid, or a treegrid.',
  ' Returns true if the provided role is text-related, e.g., static text, line\n' +
    ' break, or inline text box.',
  ' Returns true if the provided role belongs to a native text field, i.e.\n' +
    ' <input> or <textarea>.',
  ' Returns true if the provided role fits the description of a UIA embedded\n' +
    ' objects. See the method definition for more details.',
  ' Returns false if |role| is a layout table, or whatever `IsTableLike` returns.',
  ' Returns false if |role| is a layout table cell, or whatever\n' +
    ' `IsCellOrTableHeader` returns.',
  ' Returns true if the provided role represents a window.',
  ' Returns true if the node should be read only by default',
  ' Returns true if the role supports expand/collapse.',
  ' Returns true if the role supports hierarchical level.',
  ' Returns true if the provided role can have an orientation.',
  ' Returns true if the provided role can have the required attribute,\n' +
    ' e.g. <div contenteditable aria-required></div> or <input required>',
  ' Returns true if the provided role supports toggle.',
  ' Returns true if the provided role is one of the roles considered plain\n' +
    ' elements. Check AXObject::IsPlainContent()',
  ' Returns true if the provided role allows for arrow keys expanding or\n' +
    ' collapsing the element.\n' +
    ' https://www.w3.org/WAI/ARIA/apg/patterns/treeview/examples/treeview-1b/'
]
ax_selection.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' #include "ui/accessibility/ax_enums.mojom-forward.h"',
  ' A data structure that can store either the selected range of nodes in the\n' +
    ' accessibility tree, or the location of the caret in the case of a\n' +
    ' "collapsed" selection.'
]
ax_serializable_tree.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_table_info.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This helper class computes info about tables and grids in AXTrees.'
]
ax_text_attributes.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A compact representation of text attributes, such as spelling markers and\n' +
    ' style information, on an `AXNode`. This data represents a snapshot at a given\n' +
    ' time and is not intended to be held for periods of time. For this reason, it\n' +
    ' is a move-only class, to encourage deliberate short-term usage.'
]
ax_text_utils.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Convenience method needed to implement platform-specific text\n' +
    ' accessibility APIs like IAccessible2. Search forwards or backwards\n' +
    ' (depending on |direction|) from the given |start_offset| until the\n' +
    ' given boundary is found, and return the offset of that boundary,\n' +
    ' using the vector of line break character offsets in |line_breaks|.',
  ' Returns a string ID that corresponds to the name of the given action.',
  ' Returns the non-localized string representation of a supported action.\n' +
    ' Some APIs on Linux and Windows need to return non-localized action names.',
  ' Returns indices of all word starts in |text|.',
  ' Returns indices of all word ends in |text|.',
  ' Returns indices of all sentence starts in |text|.',
  ' Returns indices of all sentence ends in |text|.'
]
ax_tree.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These values are persisted to logs. Entries should not be renumbered and\n' +
    ' numeric values should never be reused.\n' +
    ' LINT.IfChange(AXTreeUnserializeError)',
  ' LINT.ThenChange(/tools/metrics/histograms/metadata/accessibility/enums.xml:AccessibilityTreeUnserializeError)',
  ' AXTree is a live, managed tree of AXNode objects that can receive\n' +
    ' updates from another AXTreeSource via AXTreeUpdates, and it can be\n' +
    ' used as a source for sending updates to another client tree.\n' +
    " It's designed to be subclassed to implement support for native\n" +
    ' accessibility APIs on a specific platform.',
  ' Sets the flag that indicates whether the accessibility tree is currently\n' +
    ' being updated, and ensures that it is reset to its previous value when the\n' +
    ' instance is destructed. An accessibility tree that is being updated is\n' +
    ' unstable and should not be traversed.'
]
ax_tree_checks.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Data for AXTree checks that run when DHECKs are on.\n' +
    ' TODO(accessibility) Use the mojo struct directly in C++ code to avoid having\n' +
    ' to typemap it.'
]
ax_tree_combiner.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This helper class takes multiple accessibility trees that reference each\n' +
    ' other via tree IDs, and combines them into a single accessibility tree\n' +
    ' that spans all of them.\n' +
    ' Since node IDs are relative to each ID, it has to renumber all of the IDs\n' +
    ' and update all of the attributes that reference IDs of other nodes to\n' +
    ' ensure they point to the right node.\n' +
    ' It also makes sure the final combined tree points to the correct focused\n' +
    ' node across all of the trees based on the focused tree ID of the root tree.'
]
ax_tree_data.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " The data associated with an accessibility tree that's global to the\n" +
    ' tree and not associated with any particular node in the tree.'
]
ax_tree_fuzzer_util.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(janewman): Replace usage with ...FuzzedDataProvider...'
]
ax_tree_id.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A unique ID representing an accessibility tree.',
  ' For use in std::unordered_map.',
  ' The value to use when an AXTreeID is unknown.'
]
ax_tree_manager.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface for a class that owns an AXTree and manages its connections\n' +
    ' to other AXTrees in the same page or desktop (parent and child trees)\n' +
    " as well as a mapping of AXNode's by ID for supporting `GetNodeFromTree`\n" +
    ' and related methods.\n' +
    ' Note, the tree manager may be created for a tree which has unknown (not\n' +
    ' valid) tree id. A such tree is not registered with the tree map and thus\n' +
    ' cannot be retrieved from the map. When the tree gets data and tree id, then\n' +
    ' it is registered in the map automatically (see OnTreeDataChanged callback\n' +
    ' notification). The mechanism implements the tree id data integrirty between\n' +
    " the tree map and trees, also it doesn't allow to register two different trees\n" +
    ' with unknown IDs.'
]
ax_tree_manager_base.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class that owns an accessibility tree and manages its connections to other\n' +
    ' accessibility trees. Each accessibility tree could be connected to one parent\n' +
    ' tree and multiple child trees, the whole collection essentially being a\n' +
    ' forest of trees representing user interface elements. Each tree is typically\n' +
    ' backed by a rendering surface.\n' +
    ' This class is movable but not copyable.'
]
ax_tree_manager_map.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class manages AXTreeManager instances. It is a wrapper around a\n' +
    " std::unordered_map. AXTreeID's are used as the key for the map. Since\n" +
    " AXTreeID's might refer to AXTreeIDUnknown, callers should not expect\n" +
    ' AXTreeIDUnknown to map to a particular AXTreeManager.'
]
ax_tree_observer.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used when you want to be notified when changes happen to an AXTree.\n' +
    ' |OnAtomicUpdateFinished| is notified at the end of an atomic update.\n' +
    ' It provides a vector of nodes that were added or changed, for final\n' +
    ' postprocessing.'
]
ax_tree_serializer.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' AXTreeSerializer is a helper class that serializes incremental\n' +
    ' updates to an AXTreeSource as a AXTreeUpdateType struct.\n' +
    ' These structs can be unserialized by a client object such as an\n' +
    ' AXTree. An AXTreeSerializer keeps track of the tree of node ids that its\n' +
    ' client is aware of so that it will never generate an AXTreeUpdateType that\n' +
    ' results in an invalid tree.\n' +
    " Every node in the source tree must have an id that's a unique positive\n" +
    ' integer, the same node must not appear twice.\n' +
    ' Usage:\n' +
    ' You must call SerializeChanges() every time a node in the tree changes,\n' +
    ' and send the generated AXTreeUpdateType to the client. Changes to the\n' +
    ' AXTreeData, if any, are also automatically included in the AXTreeUpdateType.\n' +
    ' If a node is added, call SerializeChanges on its parent.\n' +
    ' If a node is removed, call SerializeChanges on its parent.\n' +
    ' If a whole new subtree is added, just call SerializeChanges on its root.\n' +
    ' If the root of the tree changes, call SerializeChanges on the new root.\n' +
    ' AXTreeSerializer will avoid re-serializing nodes that do not change.\n' +
    ' For example, if node 1 has children 2, 3, 4, 5 and then child 2 is\n' +
    ' removed and a new child 6 is added, the AXTreeSerializer will only\n' +
    ' update nodes 1 and 6 (and any children of node 6 recursively). It will\n' +
    ' assume that nodes 3, 4, and 5 are not modified unless you explicitly\n' +
    ' call SerializeChanges() on them.\n' +
    ' As long as the source tree has unique ids for every node and no loops,\n' +
    ' and as long as every update is applied to the client tree, AXTreeSerializer\n' +
    ' will continue to work. If the source tree makes a change but fails to\n' +
    ' call SerializeChanges properly, the trees may get out of sync - but\n' +
    " because AXTreeSerializer always keeps track of what updates it's sent,\n" +
    ' it will never send an invalid update and the client tree will not break,\n' +
    ' it just may not contain all of the changes.',
  ' In order to keep track of what nodes the client knows about, we keep a\n' +
    ' representation of the client tree - just IDs and parent/child\n' +
    " relationships, and a marker indicating whether it's been dirtied."
]
ax_tree_source.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An AXTreeSource is an abstract interface for a serializable\n' +
    ' accessibility tree. The tree may be in some other format or\n' +
    ' may be computed dynamically, but maintains the properties that\n' +
    " it's a strict tree, it has a unique id for each node, and all\n" +
    ' of the accessibility information about a node can be serialized\n' +
    ' as an AXNodeData. This is the primary interface to use when\n' +
    ' an accessibility tree will be sent over an IPC before being\n' +
    ' consumed.'
]
ax_tree_source_annotator.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is an interface for a class that could be used by any `AXTreeSource` to\n' +
    ' provide automatically generated accessible names, such as automatically\n' +
    ' generated alt text for unlabeled images. A specific annotator may be able to\n' +
    ' work on multiple `AXNodeSource`s, e.g. `AXNode*` and `WebAXObject`.'
]
ax_tree_source_checker.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_source_observer.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is an interface for a class that observes changes to an `AXTreeSource`.'
]
ax_tree_update.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An AXTreeUpdate is a serialized representation of an atomic change\n' +
    ' to an AXTree. The sender and receiver must be in sync; the update\n' +
    ' is only meant to bring the tree from a specific previous state into\n' +
    ' its next state. Trying to apply it to the wrong tree should immediately\n' +
    ' die with a fatal assertion.\n' +
    ' An AXTreeUpdate consists of an optional node id to clear (meaning\n' +
    " that all of that node's children and their descendants are deleted),\n" +
    ' followed by an ordered vector of zero or more AXNodeData structures to\n' +
    ' be applied to the tree in order. An update may also include an optional\n' +
    ' update to the AXTreeData structure that applies to the tree as a whole.\n' +
    ' Suppose that the next AXNodeData to be applied is |node|. The following\n' +
    ' invariants must hold:\n' +
    ' 1. Either\n' +
    '   a) |node.id| is already in the tree, or\n' +
    '   b) the tree is empty, and\n' +
    '      |node| is the new root of the tree, and\n' +
    '      |node.role| == WebAXRoleRootWebArea.\n' +
    ' 2. Every child id in |node.child_ids| must either be already a child\n' +
    '        of this node, or a new id not previously in the tree. It is not\n' +
    '        allowed to "reparent" a child to this node without first removing\n' +
    '        that child from its previous parent.\n' +
    ' 3. When a new id appears in |node.child_ids|, the tree should create a\n' +
    '        new uninitialized placeholder node for it immediately. That\n' +
    '        placeholder must be updated within the same AXTreeUpdate, otherwise\n' +
    "        it's a fatal error. This guarantees the tree is always complete\n" +
    '        before or after an AXTreeUpdate.'
]
ax_tree_update_forward.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_update_util.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' If 2 or more tree updates can all be merged into others,\n' +
    ' process the whole set of tree updates, copying them to |dst|,\n' +
    ' and returning true.  Otherwise, return false and |dst|\n' +
    ' is left unchanged.\n' +
    ' Merging tree updates helps minimize the overhead of calling\n' +
    ' Unserialize multiple times.'
]
ax_updates_and_events.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_action_data_mojom_traits.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_assistant_structure_mojom_traits.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_event_intent_mojom_traits.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_event_mojom_traits.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_location_changes_mojom_traits.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_mode_mojom_traits.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_node_data_mojom_traits.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_relative_bounds_mojom_traits.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_checks_mojom_traits.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_data_mojom_traits.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_id_mojom_traits.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_update_mojom_traits.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_updates_and_events_mojom_traits.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
null_ax_action_target.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A do-nothing action target.'
]
atk_util_auralinux.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These values are duplicates of the GDK values that can be found in\n' +
    " <gdk/gdktypes.h>. ATK expects the GDK values, but we don't want to depend on\n" +
    ' GDK here.',
  ' This singleton class initializes ATK (accessibility toolkit) and\n' +
    ' registers an implementation of the AtkUtil class, a global class that\n' +
    ' every accessible application needs to register once.'
]
automation_api_util.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Parses a string representing an event type into an Event tuple.',
  ' Possible tree changes to listen to using addTreeChangeObserver. Note that\n' +
    ' listening to all tree changes can be expensive.'
]
automation_ax_tree_wrapper.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class that wraps one AXTree and all of the additional state\n' +
    ' and helper methods needed to use it for the automation API.'
]
automation_position.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class that wraps an AXPosition to make available in javascript.\n' +
    ' For new additions, consider whether it should be public to the\n' +
    ' chrome.automation extension api. If so, please update\n' +
    ' extensions/common/api/automation.idl.'
]
automation_tree_manager_owner.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Virtual class that owns one or more AutomationAXTreeWrappers.\n' +
    ' TODO(crbug.com/1357889): Merge some of this interface with\n' +
    ' AXTreeManager if possible.'
]
automation_v8_bindings.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Class that creates V8 bindings for Automation. This class should contain\n' +
    ' logic about converting to/from V8 values but should not contain logic about\n' +
    ' accessibility.'
]
automation_v8_router.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Pure virtual class that allows Automation to route information in and\n' +
    ' out of V8. This should be implemented by each V8 version of Automation,\n' +
    ' for example in Extensions and in the AccessibilityService.'
]
v8_handler_function_wrapper.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Virtual class which can wrap a handler function passed to V8 either with\n' +
    ' Gin or V8 function callbacks. This enables some AutomationV8Routers to\n' +
    ' use V8 bindings and others to use gin.'
]
ax_android_constants.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Classnames.',
  ' View constants.'
]
ax_event_intent_mac.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Describes the type of the AXTextStateChangeIntent, as defined by Mac's\n" +
    ' accessibility framework.\n' +
    ' Broadly, there are two types of intents that may be attached to accessibility\n' +
    ' events: an editing intent or a selection intent.\n' +
    ' The enumeration values are taken from the WebKit source code, but they are\n' +
    " modified slightly to comply with Chromium's C++ Style Guide. Please do not\n" +
    ' renumber.',
  " Describes the type of the editing intent, as defined by Mac's accessibility\n" +
    ' framework.\n' +
    ' The enumeration values are taken from the WebKit source code, but they are\n' +
    " modified slightly to comply with Chromium's C++ Style Guide. Please do not\n" +
    ' renumber.',
  " Describes the directionality of a selection intent, as defined by Mac's\n" +
    ' accessibility framework.\n' +
    ' The enumeration values are taken from the WebKit source code, but they are\n' +
    " modified slightly to comply with Chromium's C++ Style Guide. Please do not\n" +
    ' renumber.',
  ' Describes the amount by which the selection has moved or has been extended\n' +
    " by, as defined by Mac's accessibility framework.\n" +
    ' The enumeration values are taken from the WebKit source code, but they are\n' +
    " modified slightly to comply with Chromium's C++ Style Guide. Please do not\n" +
    ' renumber.',
  ' Describes a selection operation in an AXTextStateChangeIntent.',
  ' The equivalent of an accessibility event intent (AXEventIntent), as\n' +
    " defined by Mac's accessibility framework.",
  " Converts from Chromium's AXEventIntent to Mac's AXTextStateChangeIntent."
]
ax_fragment_root_delegate_win.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Delegate interface for clients of AXFragmentRootWin. This allows the client\n' +
    ' to relate the fragment root to its neighbors in a loosely coupled way.'
]
ax_fragment_root_win.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' UI Automation on Windows requires the root of a multi-element provider to\n' +
    ' implement IRawElementProviderFragmentRoot. Our internal accessibility trees\n' +
    ' may not know their roots for right away; for example, web content may\n' +
    ' deserialize the document for an iframe before the host document. Because of\n' +
    ' this, and because COM rules require that the list of interfaces returned by\n' +
    ' QueryInterface remain static over the lifetime of an object instance, we\n' +
    ' implement IRawElementProviderFragmentRoot on its own node for each HWND, with\n' +
    ' the root of our internal accessibility tree for that HWND as its sole child.\n' +
    ' Since UIA derives some information from the underlying HWND hierarchy, we\n' +
    ' expose one fragment root per HWND. The class that owns the HWND is expected\n' +
    ' to own the corresponding AXFragmentRootWin.'
]
ax_node_id_delegate.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A delegate for a tree manager that is responsible for assigning identifiers\n' +
    ' to nodes suitable for transmission to an accessibility tool. Generally, such\n' +
    ' identifiers must be unique within their containing native window.'
]
ax_platform.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Process-wide accessibility platform state.',
  ' Traits type in support of base::ScopedObservation.'
]
ax_platform_atk_hyperlink.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_platform_for_test.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A process-wide AXPlatform instance for use by tests.',
  ' Provides a way for tests to temporarily override the accessibility mode flags\n' +
    " accessible by the test's fake AXPlatform. Observers are not notified of the\n" +
    ' change.'
]
ax_platform_node.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' AXPlatformNode is the abstract base class for an implementation of\n' +
    ' native accessibility APIs on supported platforms (e.g. Windows, Mac OS X).\n' +
    ' An object that wants to be accessible can derive from AXPlatformNodeDelegate\n' +
    ' and then call AXPlatformNode::Create. The delegate implementation should\n' +
    ' own the AXPlatformNode instance (or otherwise manage its lifecycle).'
]
ax_platform_node_auralinux.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This deleter is used in order to ensure that we properly always free memory\n' +
    ' used by AtkAttributeSet.',
  ' Some ATK interfaces require returning a (const gchar*), use\n' +
    ' this macro to make it safe to return a pointer to a temporary\n' +
    ' string.',
  ' This class with an enum is used to generate a bitmask which tracks the ATK\n' +
    " interfaces that an AXPlatformNodeAuraLinux's ATKObject implements.",
  ' Implements accessibility on Aura Linux using ATK.'
]
ax_platform_node_base.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(nektar): Move this struct over to AXNode so that it can be accessed by\n' +
    ' AXPosition.'
]
ax_platform_node_cocoa.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Determines if this object is alive, i.e. it hasn't been detached.",
  ' Returns true if this accessible element should be included into the ax tree.',
  ' Returns true if this object should expose its accessible name using\n' +
    ' accessibilityLabel (legacy AXDescription attribute).',
  ' Returns an accessible element serving as a title UI element, an element\n' +
    ' representing the accessible name of the object and which is exposed via\n' +
    ' accessibilityTitleUIElement (or AXTitleUIElement legacy attribute) not via\n' +
    ' accessibilityTitle (or legacy AXTitle attribute) or accessibilityLabel\n' +
    ' (legacy AXDescription attribute).',
  ' Maps AX roles to native roles. Returns NSAccessibilityUnknownRole if not\n' +
    ' found.',
  ' Maps AX roles to native subroles. Returns nil if not found.',
  ' Maps AX events to native notifications. Returns nil if not found.',
  " Returns this node's internal role, i.e. the one that is stored in\n" +
    ' the internal accessibility tree as opposed to the platform tree.',
  ' Returns the data necessary to queue an NSAccessibility announcement if\n' +
    ' |eventType| should be announced, or nil otherwise.',
  ' Ask the system to announce |announcementText|. This is debounced to happen\n' +
    ' at most every |kLiveRegionDebounceMillis| per node, with only the most\n' +
    ' recent announcement text read, to account for situations with multiple\n' +
    ' notifications happening one after another (for example, results for\n' +
    ' find-in-page updating rapidly as they come in from subframes).'
]
ax_platform_node_delegate.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A TextAttributeMap is a map between the text offset in UTF-16 characters in\n' +
    ' the node hypertext and the TextAttributeList that starts at that location.\n' +
    ' An empty TextAttributeList signifies a return to the default node\n' +
    ' TextAttributeList.',
  ' An object that wants to be accessible should derive from this class.\n' +
    ' AXPlatformNode subclasses use this interface to query all of the information\n' +
    ' about the object in order to implement native accessibility APIs.\n' +
    ' Note that AXPlatformNode has support for accessibility trees where some\n' +
    ' of the objects in the tree are not implemented using AXPlatformNode.\n' +
    ' For example, you may have a native window with platform-native widgets\n' +
    ' in it, but in that window you have custom controls that use AXPlatformNode\n' +
    " to provide accessibility. That's why GetParent, ChildAtIndex, HitTestSync,\n" +
    ' and GetFocus all return a gfx::NativeViewAccessible - so you can return a\n' +
    ' native accessible if necessary, and AXPlatformNode::GetNativeViewAccessible\n' +
    ' otherwise.'
]
ax_platform_node_delegate_utils_win.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if the value pattern is supported'
]
ax_platform_node_id.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The underlying type of a uniquely-generated accessibility node identifier for\n' +
    ' use with the platform. The actual id store can only a accommodate 32 bit\n' +
    ' integers on Windows, because IAccessible2 uses LONG for get_uniqueID() and\n' +
    ' for event target ids. In addition, the signed values have special meaning, so\n' +
    ' the id must be between 1 and 2^31-1.\n' +
    ' These ids must not be conflated with the int id or AXNodeId, that comes with\n' +
    ' web node data, which are only unique within their source frame.\n' +
    ' Instances may only be created by AXUniqueId. Take care when storing an\n' +
    ' instance, as its value is not guaranteed to be unique once the AXUniqueId\n' +
    ' from whence it came is destroyed.\n' +
    " Instances are implicitly convertible to (but not from) the platform's node\n" +
    ' identifier type so that they may be used directly when calling the\n' +
    " platform's accessibility APIs."
]
ax_platform_node_ios.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/336611337): This interface exists since the long-term\n' +
    ' plan is to migrate functionality from //content/browser/accessibility to\n' +
    ' //ui/accessibility, but not all functionality needed to make this happen is\n' +
    ' directly available through existing //ui/accessibility classes. Once the\n' +
    ' functionality here is available elsewhere, this class can be removed.'
]
ax_platform_node_mac.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Convenience function to determine whether an internal object role should\n' +
    ' expose its accessible name in AXValue (as opposed to AXTitle/AXDescription).'
]
ax_platform_node_test_helper.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_platform_node_textchildprovider_win.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_platform_node_textprovider_win.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_platform_node_textrangeprovider_win.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_platform_node_ui_kit_element.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' AXPlatformNodeUIKitElement is a wrapper around AXPlatformNodeIOS.\n' +
    ' This class converts the cross-platform a11y tree into a format UIKit can\n' +
    ' query.',
  ' The accessibility tree node associated with this wrapper.',
  ' This creates a UIKit accessibility element around the given\n' +
    ' AXPlatformNodeIOS.',
  ' Invalidate children for a non-ignored ancestor (including self).',
  ' Disconnect this wrapper node from its associated node in the accessibility\n' +
    ' tree.'
]
ax_platform_node_unittest.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_platform_node_win.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This nonstandard GUID is taken directly from the Mozilla sources\n' +
    ' (https://searchfox.org/mozilla-central/source/accessible/windows/msaa/ServiceProvider.cpp#60).',
  ' IMPORTANT!\n' +
    ' These values are written to logs.  Do not renumber or delete\n' +
    ' existing items; add new entries to the end of the list.\n' +
    ' LINT.IfChange',
  ' LINT.ThenChange(/tools/metrics/histograms/metadata/accessibility/enums.xml:AccessibilityWinAPIEnum)\n' +
    ' Macros to use at the top of any AXPlatformNodeWin (or derived class) method\n' +
    ' that implements a UIA COM interface. The error code UIA_E_ELEMENTNOTAVAILABLE\n' +
    ' signals to the OS that the object is no longer valid and no further methods\n' +
    ' should be called on it.',
  ' A helper for tracing calls for functions implementing accessibility COM\n' +
    ' interfaces.',
  ' A simple interface for a class that wants to be notified when Windows\n' +
    ' accessibility APIs are used by a client, a strong indication that full\n' +
    ' accessibility support should be enabled.',
  ' Get an observer list that allows modules across the codebase to\n' +
    ' listen to when usage of Windows accessibility APIs is detected.',
  ' Used to simplify calling StartFiringUIAEvents and EndFiringEvents'
]
ax_platform_node_win_unittest.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_platform_relation_win.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' AXPlatformRelationWin\n' +
    ' A simple implementation of IAccessibleRelation, used to represent a\n' +
    ' relationship between one accessible node in the tree and\n' +
    ' potentially multiple target nodes. Also contains a utility function\n' +
    ' to compute all of the possible IAccessible2 relations and reverse\n' +
    ' relations given the internal relation id attributes.'
]
ax_platform_text_boundary.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Converts from an ATK text boundary to an ax::mojom::TextBoundary.',
  ' Same as above, but for an older version of the API.',
  ' Converts from an IAccessible2 text boundary to an ax::mojom::TextBoundary.',
  ' Converts from a UI Automation text unit to an ax::mojom::TextBoundary.'
]
ax_platform_tree_manager.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Abstract interface for a class that manages AXPlatformNodes and is\n' +
    ' able to query for them via `GetPlatformNodeFromTree`. Extends\n' +
    ' AXTreeManager, so AXNodes are also managed.'
]
ax_platform_tree_manager_delegate.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Pure abstract class that is used by `AXPlatformTreeManager` to gather\n' +
    ' information or perform actions that are implemented differently between the\n' +
    ' Web Content and the Views layers.\n' +
    ' TODO(nektar): Change `AXPlatformTreeManager` to take this delegate in its\n' +
    ' constructor and store it as a member variable.'
]
ax_private_attributes_mac.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Private WebKit accessibility attributes.'
]
ax_private_roles_mac.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Private WebKit accessibility roles.'
]
ax_private_webkit_constants_mac.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Native mac notifications fired.',
  ' The following native mac notifications are not fired:\n' +
    ' AXLayoutComplete: Voiceover does not use this, it is considered too spammy.',
  ' Attributes used for NSAccessibilitySelectedTextChangedNotification and\n' +
    ' NSAccessibilityValueChangedNotification.'
]
ax_system_caret_win.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class representing the position of the caret to assistive software on\n' +
    " Windows. This is required because Chrome doesn't use the standard system\n" +
    ' caret and because some assistive software still relies on specific\n' +
    ' accessibility APIs to retrieve the caret position.'
]
ax_unique_id.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' AXUniqueId provides IDs for accessibility objects that are guaranteed to be\n' +
    ' unique for the entire Chrome instance. New values are generated via\n' +
    " `Create()`, and an instance's value is available for reuse when the instance\n" +
    ' is destroyed. Instances are implicitly convertible to (but not from)\n' +
    ' AXPlatformNodeId.'
]
ax_utils_mac.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An AXTextMarker is used by applications like Chrome to store a position in\n' +
    " the accessibility tree's text representation. It is a data structure whose\n" +
    ' contents are opaque to the system but whose allocation and deallocation is\n' +
    ' managed by it. The contents are interpreted by the application that created\n' +
    ' it.\n' +
    ' An AXTextMarkerRange is a pair of AXTextMarkers. The data in each of the\n' +
    ' two AXTextMarkers is provided by the application, but similar to an\n' +
    ' AXTextMarker its memory storage is managed by the system.',
  ' Uses a system API to verify that the given object is an AXTextMarker object.',
  ' Uses a system API to verify that the given object is an AXTextMarkerRange\n' +
    ' object.',
  ' Returns the AXNodePosition representing the given AXTextMarker.',
  ' Returns the AXRange representing the given AXTextMarkerRange.',
  ' Returns the AXTextMarker representing the given AXNodePosition.',
  ' Returns the AXTextMarkerRange representing the given AXRange.',
  ' Returns the AXTextMarker representing the position within the given node.',
  ' Returns the AXTextMarkerRange representing the given AXTextMarker objects.',
  ' Returns the start text marker from the given AXTextMarkerRange.',
  ' Returns the end text marker from the given AXTextMarkerRange.'
]
browser_accessibility.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A `BrowserAccessibility` object represents one node in the accessibility tree\n' +
    ' on the browser side. It wraps an `AXNode` and assists in exposing\n' +
    " web-specific information from the node. It's owned by a\n" +
    ' `BrowserAccessibilityManager`.\n' +
    ' There are subclasses of BrowserAccessibility for each platform where we\n' +
    ' implement some of the native accessibility APIs that are only specific to the\n' +
    ' Web.',
  ' TODO(https://crbug.com/358567091): Move this logic outside of\n' +
    ' BrowserAccessibility to avoid platform-specific code in the base class.'
]
browser_accessibility_auralinux.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser_accessibility_cocoa.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used to store changes in edit fields, required by VoiceOver in order to\n' +
    ' support character echo and other announcements during editing.',
  ' Returns true if the given object is an NSRange instance.',
  ' BrowserAccessibilityCocoa is a cocoa wrapper around the BrowserAccessibility\n' +
    " object. The renderer converts webkit's accessibility tree into a\n" +
    ' WebAccessibility tree and passes it to the browser process over IPC.\n' +
    ' This class converts it into a format Cocoa can query.',
  ' This creates a cocoa browser accessibility object around\n' +
    " the cross platform BrowserAccessibility object, which can't be nullptr.",
  " Clear this object's pointer to the wrapped BrowserAccessibility object\n" +
    ' because the wrapped object has been deleted, but this object may\n' +
    ' persist if the system still has references to it.',
  ' Invalidate children for a non-ignored ancestor (including self).',
  ' Get the BrowserAccessibility that this object wraps.',
  ' Computes the text that was added or deleted in a text field after an edit.',
  " Convert from the view's local coordinate system (with the origin in the upper\n" +
    ' left) to the primary NSScreen coordinate system (with the origin in the lower\n' +
    ' left).',
  ' Return the method name for the given attribute. For testing only.',
  ' Find the index of the given row among the descendants of this object\n' +
    ' or return nil if this row is not found.',
  ' Choose the appropriate accessibility object to receive an action depending\n' +
    ' on the characteristics of this accessibility node.',
  ' Returns a text marker that points to the last character in the document that\n' +
    ' can be selected with Voiceover.',
  ' Index of a row, column, or tree item.',
  ' A string indicating the role of this object as far as accessibility\n' +
    ' is concerned.',
  ' Returns a text marker that points to the first character in the document that\n' +
    ' can be selected with Voiceover.',
  ' A string indicating the subrole of this object as far as accessibility\n' +
    ' is concerned.',
  ' The tabs owned by a tablist.'
]
browser_accessibility_com_win.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This nonstandard GUID is taken directly from the Mozilla sources\n' +
    ' (https://searchfox.org/mozilla-central/source/accessible/windows/msaa/ServiceProvider.cpp#110).',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' BrowserAccessibilityComWin\n' +
    ' Class implementing the windows accessible interface used by screen readers\n' +
    ' and other assistive technology (AT). It typically is created and owned by\n' +
    ' a BrowserAccessibilityWin delegate. When this owner goes away, the\n' +
    ' BrowserAccessibilityComWin objects may continue to exists being held onto by\n' +
    ' MSCOM (due to reference counting). However, such objects are invalid and\n' +
    ' should gracefully fail by returning E_FAIL from all MSCOM methods.\n' +
    '//////////////////////////////////////////////////////////////////////////////'
]
browser_accessibility_ios.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser_accessibility_mac.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser_accessibility_manager.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Required by the several platform specific\n' +
    ' `BrowserAccessibilityManager::ToBrowserAccessibilityManager...()` methods\n' +
    ' declared below.',
  ' To be called when a BrowserAccessibilityManager fires a generated event.\n' +
    ' Provides the host, the event fired, and which node id the event was for.',
  ' This is all of the information about the current find in page result,\n' +
    ' so we can activate it if requested.',
  ' Manages a tree of BrowserAccessibility objects.'
]
browser_accessibility_manager_auralinux.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manages a tree of BrowserAccessibilityAuraLinux objects.'
]
browser_accessibility_manager_ios.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser_accessibility_manager_mac.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser_accessibility_manager_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manages a tree of BrowserAccessibilityWin objects.'
]
browser_accessibility_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
child_iterator.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
child_iterator_base.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
compute_attributes.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Compute the attribute value instead of returning the "raw" attribute value\n' +
    ' for those attributes that have computation methods.'
]
accessibility_bridge_fuchsia.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Interface for clients to interact with fuchsia's platform accessibility\n" +
    ' framework.'
]
accessibility_bridge_fuchsia_impl.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
accessibility_bridge_fuchsia_registry.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40212066): Investigate using window ID instead of\n' +
    ' Window*.\n' +
    ' This class manages a mapping between aura root windows and their respective\n' +
    ' accessibility bridge instances. This class does NOT own the accessibility\n' +
    ' bridge instances themselves.'
]
ax_platform_node_fuchsia.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Backing entity for chrome objects that want to be accessible on fuchsia.\n' +
    ' This class bridges between the chrome and fuchsia node representations.'
]
browser_accessibility_fuchsia.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Fuchsia-specific wrapper for a AXPlatformNode. Each\n' +
    ' BrowserAccessibilityFuchsia object is owned by a\n' +
    ' BrowserAccessibilityManagerFuchsia.'
]
browser_accessibility_manager_fuchsia.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manages a tree of BrowserAccessibilityFuchsia objects.'
]
semantic_provider.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manages the connection with the Fuchsia Semantics API.\n' +
    ' Semantic nodes can be added or deleted. When a batch of nodes would leave the\n' +
    ' Fuchsia semantic tree in a valid state, they are committed. Please see\n' +
    ' |fuchsia.accessibility.semantics| API for more documentation on valid\n' +
    ' semantic trees.'
]
semantic_provider_impl.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Clients instantiate this class, which connects to the Fuchsia semantics API.\n' +
    ' This object must remain alive across the entire lifespan of the corresponding\n' +
    ' fuchsia view.'
]
scoped_co_mem_array.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' RAII type for COM arrays.\n' +
    ' Example:\n' +
    '   base::win::ScopedCoMemArray<LONG> columns;\n' +
    '   get_selectedColumns(columns.Receive(), columns.ReceiveSize())\n' +
    '   ...\n' +
    '   return;  <-- memory released'
]
ax_api_type.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_call_statement_invoker_auralinux.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Optional tri-state object.',
  ' Invokes a script instruction describing a call unit which represents\n' +
    ' a sequence of calls.'
]
ax_call_statement_invoker_mac.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Invokes a script instruction describing a call unit which represents\n' +
    ' a sequence of calls.'
]
ax_call_statement_invoker_win.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Optional tri-state object.',
  ' Invokes a script instruction describing a call unit which represents\n' +
    ' a sequence of calls.'
]
ax_element_wrapper_mac.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Optional tri-state id object.',
  ' A wrapper around either AXUIElement or NSAccessibilityElement object.'
]
ax_event_recorder.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Listens for native accessibility events fired by a given\n' +
    ' BrowserAccessibilityManager and saves human-readable log strings for\n' +
    ' each event fired to a vector. Construct an instance of this class to\n' +
    ' begin listening, call GetEventLogs() to get all of the logs so far, and\n' +
    ' destroy it to stop listening.\n' +
    ' A log string should be of the form "<event> on <node>" where <event> is\n' +
    ' the name of the event fired (platform-specific) and <node> is information\n' +
    ' about the accessibility node on which the event was fired, for example its\n' +
    ' role and name.\n' +
    ' The implementation is highly platform-specific; a subclass is needed for\n' +
    ' each platform does most of the work.\n' +
    ' As currently designed, there should only be one instance of this class.'
]
ax_event_recorder_auralinux.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class has two distinct event recording code paths. When we are\n' +
    ' recording events in-process (typically this is used for\n' +
    " DumpAccessibilityEvents tests), we use ATK's global event handlers. Since\n" +
    " ATK doesn't support intercepting events from other processes, if we have a\n" +
    ' non-zero PID or an accessibility application name pattern, we use AT-SPI2\n' +
    ' directly to intercept events.\n' +
    ' TODO(crbug.com/40722484) AT-SPI2 should be capable of intercepting events\n' +
    ' in-process as well, thus it should be possible to remove the ATK code path\n' +
    ' entirely.'
]
ax_event_recorder_fuchsia.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_event_recorder_mac.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implementation of AXEventRecorder that uses AXObserver to watch for\n' +
    ' NSAccessibility events.'
]
ax_event_recorder_win.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_event_recorder_win_uia.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_inspect.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tree selector used to identify an accessible tree to traverse, it can be\n' +
    ' built by a pre-defined tree type like Chromium to indicate that Chromium\n' +
    ' browser tree should be traversed and/or by a string pattern which matches\n' +
    ' an accessible name of a root of some accessible subtree.',
  ' A single property filter specification. Represents a parsed string of the\n' +
    ' filter_str;match_str format, where `filter_str` has\n' +
    ' :line_num_0,...:line_num_N format, `match_str` has format of\n' +
    ' property_str=value_str, value_str is optional. For example,\n' +
    ' AXSubrole=* or :1,:3;AXDOMClassList.\n' +
    ' Longer version: `filter_str` is a comma separated list of the line\n' +
    ' indexes from the output accessible tree, and serves to narrow down the\n' +
    ' property calls to the accessible object placed on those line indexes only;\n' +
    ' `match_str` is used to match properties by property name and value.\n' +
    ' For example, :1,:3;AXDOMClassList=*\n' +
    ' will query a AXDOMClassList attribute on accessible objects placed at 1st\n' +
    ' and 3rd lines in the output accessible tree.\n' +
    ' Also see AXInspectScenario::From() for more information.',
  ' A single node filter specification  which will exclude any node where the\n' +
    ' value of the named property matches the given pattern.\n' +
    ' This can be used to exclude nodes based on properties like role, for\n' +
    ' example to exclude all inlineTextBox nodes under blink we would use a\n' +
    ' NodeFilter of the form:\n' +
    "   {property='internalRole', pattern='inlineTextBox'};"
]
ax_inspect_scenario.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Describes the test execution flow, which is parsed from a sequence\n' +
    ' of testing directives (instructions). The testing directives are typically\n' +
    ' found in a testing file in the comment section. For example, such section\n' +
    " in a dump_tree HTML test file will instruct to wait for 'bananas' text in\n" +
    ' a document and then dump an accessible tree which includes aria-live property\n' +
    ' on all platforms:\n' +
    ' <!--\n' +
    ' @WAIT-FOR:bananas\n' +
    ' @MAC-ALLOW:AXARIALive\n' +
    ' @WIN-ALLOW:live*\n' +
    ' @UIA-WIN-ALLOW:LiveSetting*\n' +
    ' @BLINK-ALLOW:live*\n' +
    ' @BLINK-ALLOW:container*\n' +
    ' @AURALINUX-ALLOW:live*\n' +
    ' -->'
]
ax_inspect_test_helper.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A helper class for writing accessibility tree dump tests.'
]
ax_inspect_utils.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Constructs a const formattable value. Refers to FormatValue.',
  ' * Constructs a key for a formattable set represented by dictionary. It adds\n' +
    ' * the _setkey_ prefix to a string key.  Refers to FormatValue.',
  ' * Constructs an ordered key for a formattable dictionary by appending position\n' +
    ' * number to a string key for sorting. It makes the keys to be traversed\n' +
    ' * according to their position when the dictionary is formatted. Refers to\n' +
    ' * FormatValue.',
  ' * Formats a value.'
]
ax_inspect_utils_auralinux.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_inspect_utils_mac.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if the given accessibility attribute is valid, and could have\n' +
    ' been exposed on certain accessibility objects.',
  ' Return AXElement in a tree by a given criteria.',
  ' Returns AXUIElement and its application process id by a given tree selector.',
  ' Returns AXUIElement for a window having title matching the given pattern.'
]
ax_inspect_utils_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Handles both IAccessible/MSAA events and IAccessible2 events.',
  ' Returns HWND of window matching a given tree selector.',
  ' Returns IA2 Interfaces',
  ' Represent MSAA child, either as IAccessible object or as VARIANT.',
  ' Represents MSAA children of an IAccessible object.'
]
ax_optional.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used for template specialization.',
  ' Implements stateful value_s. Similar to std::optional, but multi-state\n' +
    ' allowing nullable value_s.'
]
ax_property_node.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Property node is a tree-like structure, representing a property or collection\n' +
    ' of properties and its invocation arguments. A collection of properties is\n' +
    ' specified by putting a wildcard into a property name, for exampe, AXRole*\n' +
    ' will match both AXRole and AXRoleDescription properties. Parameters of a\n' +
    ' property are given in parentheses like a conventional function call, for\n' +
    ' example, AXCellForColumnAndRow([0, 0]) will call AXCellForColumnAndRow\n' +
    ' parameterized property for column/row 0 indexes.'
]
ax_script_instruction.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A single script instruction. See AXInspectScenario.\n' +
    ' Note: this is only for executing tests or for running a script via\n' +
    ' ax_dump_tree/ax_dump_events for inspecting from out of process.'
]
ax_target_win.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_transform_mac.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the base::Value representation of the given NSObject.',
  ' Returns the base::Value::Dict representation of the given AXCustomContent.',
  ' Returns the base::Value representation of the given NSAccessibilityElement.',
  ' Returns the base::Value representation of the given AXPosition.',
  ' Returns the base::Value representation of the given AXTextMarker.',
  ' Returns the base::Value representation of the given AXTextMarkerRange.',
  ' Returns the base::Value::Dict representation of the given NSAttributedString.',
  ' Returns the base::Value representation of CGColorRef in the form CGColor(r,\n' +
    ' g, b, a).',
  ' Returns the base::Value representation of nil.',
  ' Returns the base::Value::List representation of the given NSArray.',
  ' Returns the base::Value::Dict representation of the given NSDictionary.',
  ' Returns the base::Value::Dict representation of the given NSPoint.',
  ' Returns the base::Value::Dict representation of the given NSSize.',
  ' Returns the base::Value::Dict representation of the given NSRect.',
  ' Returns the base::Value::Dict representation of the given NSRange.'
]
ax_tree_formatter.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A utility class for formatting platform-specific accessibility information,\n' +
    ' for use in testing, debugging, and developer tools.\n' +
    ' This is extended by a subclass for each platform where accessibility is\n' +
    ' implemented.'
]
ax_tree_formatter_auralinux.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_formatter_base.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A utility class for formatting platform-specific accessibility information,\n' +
    ' for use in testing, debugging, and developer tools.\n' +
    ' This is extended by a subclass for each platform where accessibility is\n' +
    ' implemented.'
]
ax_tree_formatter_mac.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_formatter_uia_win.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_formatter_win.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_indexer.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Indexes an accessible tree: associates each accessible node of the tree\n' +
    ' * with its DOM id (if any) and to a line index in the formatted accessible\n' +
    ' * tree the node is placed at.\n' +
    ' *\n' +
    ' * GetDOMId returns DOM id by an accessible node;\n' +
    ' * ChildrenContainer returns accessible children for an accessible node;\n' +
    ' * Compare is the Compare named requirements, used to compare two nodes.'
]
ax_tree_indexer_auralinux.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_indexer_mac.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' NSAccessibilityElement or AXUIElement accessible node comparator.\n' +
    ' NSAccessibility tree indexer.'
]
ax_tree_indexer_win.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
one_shot_accessibility_tree_search.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A function that returns whether or not a given node matches, given the\n' +
    ' start element of the search as an optional comparator.',
  ' This class provides an interface for searching the accessibility tree from\n' +
    ' a given starting node, with a few built-in options and allowing an arbitrary\n' +
    ' number of predicates that can be used to restrict the search.\n' +
    ' This class is meant to perform one search. Initialize it, then iterate\n' +
    ' over the matches, and then delete it.\n' +
    " This class stores raw pointers to the matches in the tree! Don't keep this\n" +
    ' object around if the tree is mutating.'
]
provide_ax_platform_for_tests.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A test event listener that provides an `AXPlatformForTest`. An instance is\n' +
    ' guaranteed to be alive for the lifetime of the listener, and is reset\n' +
    ' following each test.'
]
sequence_affine_com_object_root_win.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A CComObjectRoot for a single-threaded object that uses a `SEQUENCE_CHECKER`\n' +
    ' to assert that reference counting is performed on the correct sequence.'
]
test_ax_node_id_delegate.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_ax_node_wrapper.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' For testing, a TestAXNodeWrapper wraps an AXNode, implements\n' +
    ' AXPlatformNodeDelegate, and owns an AXPlatformNode.'
]
test_ax_platform_tree_manager_delegate.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
uia_registrar_win.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' UIA custom events.',
  ' {3761326A-34B2-465A-835D-7A3D8F4EFB92}',
  ' UIA custom properties.',
  ' {cc7eeb32-4b62-4f4c-aff6-1c2e5752ad8e}',
  ' {28A68D78-3EA6-4FE4-B7C6-1E0F089A72A5}'
]
test_ax_node_helper.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' For testing, a TestAXNodeHelper wraps an AXNode. This is a simple\n' +
    ' version of TestAXNodeWrapper.'
]
test_ax_tree_update.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These utility classes, help construct an AXTreeUpdate  together with all of\n' +
    ' the updated nodes more easily. Only for use in tests for constructing /\n' +
    ' updating simple accessibility trees.',
  ' Used to construct AXTreeUpdate node.',
  ' Used to construct an accessible tree from a hierarchical list of nodes\n' +
    ' {<node_properties>, {<node_children>}}. For example,\n' +
    ' {Role::kRootWebArea, {"text"}} will create the following tree:\n' +
    ' kRootWebArea\n' +
    ' ++kStaticText "text"'
]
test_single_ax_tree_manager.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test only.\n' +
    ' A basic implementation of AXTreeManager that supports a single tree,\n' +
    " and doesn't perform any walking across multiple trees."
]
tree_generator.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is only used for fuzz testing.\n' +
    ' A class to create all possible trees with up to <n> nodes and the\n' +
    ' ids [1...n].\n' +
    ' There are two parts to the algorithm:\n' +
    ' The tree structure is formed as follows: without loss of generality,\n' +
    ' the first node becomes the root and the second node becomes its\n' +
    ' child. Thereafter, choose every possible parent for every other node.\n' +
    ' So for node i in (3...n), there are (i - 1) possible choices for its\n' +
    ' parent, for a total of (n-1)! (n minus 1 factorial) possible trees.\n' +
    ' The second optional part is the assignment of ids to the nodes in the tree.\n' +
    ' There are exactly n! (n factorial) permutations of the sequence 1...n,\n' +
    ' and each of these is assigned to every node in every possible tree.\n' +
    ' The total number of trees for a given <n>, including permutations of ids, is\n' +
    ' n! * (n-1)!\n' +
    ' n = 2: 2 trees\n' +
    ' n = 3: 12 trees\n' +
    ' n = 4: 144 trees\n' +
    ' n = 5: 2880 trees\n' +
    ' Note that the generator returns all trees with sizes *up to* <n>, which\n' +
    ' is a bit larger.\n' +
    " This grows really fast! Still, it's very helpful for exhaustively testing\n" +
    ' tree code on smaller trees at least.'
]
action_id.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' clang-format on',
  ' clang-format off',
  ' clang-format on',
  ' Note that this second include is not redundant. The second inclusion of the\n' +
    ' .inc file serves to undefine the macros the first inclusion defined.'
]
actions.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Class returned from ActionItem::BeginUpdate() in order to allow a "batch"\n' +
    ' update of the ActionItem state without triggering ActionChanged callbacks\n' +
    ' for each state change. Will trigger one update once the instance goes out of\n' +
    ' scope, assuming any changes were actually made.',
  ' Context object designed to allow any class property to be attached to it.\n' +
    ' This allows invoking the action with any additional contextual information\n' +
    ' without requiring the action item itself have any knowledge of that\n' +
    ' information.'
]
animation_utils.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_utils_android.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Converts |color| to a CSS color string. If |color| is null, the empty string\n' +
    ' is returned.',
  ' Conversions between a Java color and an Optional<SkColor>. Java colors are\n' +
    ' represented as 64-bit signed integers. Valid colors are in the range\n' +
    ' [std::numeric_limits<int32_t>::min(), std::numeric_limits<int32_t>::max()].\n' +
    ' while |kInvalidJavaColor| is reserved for representing a null/unset color.'
]
delegated_frame_host_android.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_android_manager.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dummy_screen_android.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates Screen containing one dummy Display that does not\n' +
    ' communicate with Java layer.'
]
edge_effect.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A base class for overscroll-related Android effects.'
]
event_forwarder.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
handle_view_resources.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Bridge to Java bitmap resources for selection handle.'
]
modal_dialog_manager_bridge.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " The JNI bridge for the Java's `ModalDialogManager`. This bridge's lifetime is\n" +
    " managed by the Java's `ModalDialogManager`."
]
modal_dialog_wrapper.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Allows dialogs defined by ui::DialogModel() to be shown in android.\n' +
    ' This makes a best effort to map between ui::DialogModel() and Java\n' +
    ' PropertyModel.\n' +
    ' Maps title, an optional single paragraph, and ok and cancel buttons.\n' +
    ' Default labels for IDS_APP_OK and IDS_APP_CANCEL will be used for buttons\n' +
    ' if labels are not specified.\n' +
    ' Replacements (if any) are performed in paragraph text, but any emphasis is\n' +
    ' not included since it is not supported in android dialogs.'
]
overscroll_glow.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides lazy, customized EdgeEffect creation.',
  ' |OverscrollGlow| mirrors its Android counterpart, OverscrollGlow.java.\n' +
    ' * Conscious tradeoffs were made to align this as closely as possible with the\n' +
    ' * original Android Java version.'
]
overscroll_refresh.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A Java counterpart will be generated for this enum.\n' +
    ' GENERATED_JAVA_ENUM_PACKAGE: org.chromium.ui',
  ' Simple pull-to-refresh styled effect. Listens to scroll events, conditionally\n' +
    ' activating when:\n' +
    "   1) The scroll begins when the page's root layer 1) has no vertical scroll\n" +
    '      offset and 2) lacks the overflow-y:hidden property.\n' +
    "   2) The page doesn't consume the initial scroll events.\n" +
    '   3) The initial scroll direction is upward.\n' +
    ' The actuall pull response, animation and action are delegated to the\n' +
    ' provided refresh handler.'
]
overscroll_refresh_handler.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
progress_bar_config.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides drawing information about the progress bar drawn in java UI.\n' +
    ' See WindowAndroid.ProgressBarConfig.'
]
nine_patch_resource.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
resource.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
resource_manager.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A Java counterpart will be generated for this enum.\n' +
    ' GENERATED_JAVA_ENUM_PACKAGE: org.chromium.ui.resources',
  ' The ResourceManager serves as a cache for resources obtained through Android\n' +
    ' APIs and consumed by the compositor.'
]
resource_manager_impl.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
system_ui_resource_type.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A Java counterpart will be generated for this enum.\n' +
    ' GENERATED_JAVA_ENUM_PACKAGE: org.chromium.ui.resources'
]
ui_resource_provider.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
screen_android.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_android_export.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines UI_ANDROID_EXPORT so that functionality implemented by the UI module\n' +
    ' can be exported to consumers.'
]
ui_android_features.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Keep sorted!',
  ' Feature controlling whether or not HDR is enabled on Android.\n' +
    ' TODO(crbug.com/40263227): Leave this as a kill switch until Android U\n' +
    ' ships.',
  ' Enables converting trackpad click gestures to mouse events in\n' +
    ' order for them to be interpreted similar to a desktop\n' +
    ' experience (i.e. double-click to select word.)',
  ' Use the old-style opening of an External Picker when uploading files.',
  ' Flip the back/forward direction of navigation gestures when the UI language\n' +
    ' is an RTL language.',
  ' Reports all of the available pointer types (i.e. coarse, fine) to content\n' +
    ' rather than just the first one detected.',
  ' Reports bottom overscrolls on the web page.',
  ' Kill switch to turn off validation in TextViewWithLeading that requires a\n' +
    ' leading value to be configured.',
  ' Use ACTION_OPEN_DOCUMENT rather than ACTION_GET_CONTENT when selecting a\n' +
    ' file.',
  ' TODO(b/328601354): Cleanup flag after investigating nothing is broken after\n' +
    ' changing the default behavior for EventForwarder observers.'
]
view_android.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' View-related parameters from frame updates.',
  ' A simple container for a UI layer.\n' +
    ' At the root of the hierarchy is a WindowAndroid, when attached.\n' +
    ' Dispatches input/view events coming from Java layer. Hit testing against\n' +
    ' those events is implemented so that the |ViewClient| will be invoked\n' +
    ' when the event got hit on the area defined by |layout_params_|.\n' +
    ' Hit testing is done in the order of parent -> child, and from top\n' +
    ' of the stack to back among siblings.'
]
view_android_observer.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_android.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Android implementation of the activity window.\n' +
    ' WindowAndroid is also the root of a ViewAndroid tree.'
]
window_android_compositor.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Android interface for compositor-related tasks.'
]
window_android_observer.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
aura_export.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines AURA_EXPORT so that functionality implemented by the aura module\n' +
    ' can be exported to consumers.'
]
aura_constants.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Values used with property key kResizeBehaviorKey.',
  ' A value used to represent an unassigned workspace for `kWindowWorkspaceKey`.',
  ' A value used to represent a window being assigned to all workspaces for\n' +
    ' `kWindowWorkspaceKey`.',
  ' Alphabetical sort.',
  ' A property key to store whether accessibility touch exploration gets handled\n' +
    ' by the window and all touches pass through directly.',
  ' A property key to store whether activation on pointer event is enabled or\n' +
    ' not. The default value is true, which means windows are activated when a\n' +
    ' pointer down event occurs on them.',
  ' A property key to store whether animations are disabled for the window. Type\n' +
    ' of value is an int.',
  ' A property key to store the app icon, typically larger for shelf icons, etc.\n' +
    ' This is not transported to the window service.',
  ' A property key to store the aspect ratio of the window.',
  ' A property key to store the avatar icon that will be displayed on the window\n' +
    ' frame to indicate the owner of the window when needed.',
  " A property key to indicate if a client window's layer is drawn.\n" +
    ' It is passed to the Window Service side for the occlusion tracker to process\n' +
    ' since the info is only available at the client side.',
  ' A property key to store if a window is a constrained window or not.',
  ' A property key to store if a window was created by a user gesture.',
  ' A property key to indicate the uuid of the desk this window belongs to.',
  ' A property key to indicate that a window should show that it deserves\n' +
    ' attention.',
  ' A property key to store the focus client on the window.',
  ' A property key to store the headless window bounds. This lets\n' +
    ' RenderWidgetHostViewAura find the requested headless window bounds which may\n' +
    ' be different from platform window bounds.',
  ' A property key to store the host window of a window. This lets\n' +
    ' WebContentsViews find the windows that should constrain NPAPI plugins.',
  ' The modal parent of a child modal window.',
  ' A property key to store the window modality.',
  ' A property key to store the name of the window; mostly used for debugging.',
  ' A property key to store anchor to attach an owned anchored window to (such\n' +
    ' as tooltips, menus, etc).',
  ' A property key to store if a window drop shadow and resize shadow of a\n' +
    ' window are exactly the same as the window bounds, i.e. if resizing a window\n' +
    ' immediately resizes its shadows. Generally, resizing and content rendering\n' +
    ' happen in server side without any client involved, so without any delay in\n' +
    ' communication this value should be true: shadow bounds are the same as\n' +
    ' window bounds which define content bounds. For LaCros and other windows with\n' +
    ' server-controlled shadow but client-controlled content, this value should be\n' +
    ' false to ensure that the shadow is not immediately resized along with window\n' +
    ' in server side. Instead, the shadow waits for client content to catch up with\n' +
    ' the new window bounds first to avoid a gap between shadow and content\n' +
    ' (crbug.com/1199497).\n' +
    ' TODO(crbug.com/40197040): all exo clients that use server side resize shadow\n' +
    ' should have this property set to true.',
  ' A property key to store the accessible parent of a native view. This is\n' +
    ' used to allow WebContents to access their accessible parents for use in\n' +
    ' walking up the accessibility tree via platform APIs.',
  ' A property key to store the preferred size of the window.',
  ' A property key to store the resize behavior, which is a bitmask of the\n' +
    ' ResizeBehavior values.',
  ' A property key to store the restore bounds in screen coordinates for a\n' +
    ' window.',
  ' A property key to store ui::WindowShowState for a window.\n' +
    ' See ui/base/ui_base_types.h for its definition.',
  ' A property key to store the display id on which to put the fullscreen window.\n' +
    ' display::kInvalidDisplayId means use the display the window is currently on.',
  ' A property key to store ui::WindowShowState for a window to restore back to\n' +
    ' from the current window show state.',
  ' A property key to store the raster scale. This affects the scale that exo\n' +
    ' windows are rasterized at. Currently, this only applies for lacros windows.',
  ' A property key to indicate if a window is currently being restored. Normally\n' +
    " restoring a window equals to changing window's state to normal window state.\n" +
    ' This property will be used on Chrome OS to decide if we should use window\n' +
    ' state restore stack to decide which window state the window should restore\n' +
    " back to, and it's not always the normal window state. As an example,\n" +
    ' unminimizing a window will restore the window back to its pre-minimized\n' +
    ' window state, which can have a non-normal window state. Note this property\n' +
    ' does not have any effort on any other operation systems except Chrome OS.',
  ' A property key to store key event dispatch policy. The default value is\n' +
    ' false, which means IME receives a key event in PREDISPATCH phace before a\n' +
    " window receives it. If it's true, a window receives a key event before IME.",
  ' A property key to store the title of the window; sometimes shown to users.',
  ' The inset of the topmost view in the client view from the top of the\n' +
    ' non-client view. The topmost view depends on the window type. The topmost\n' +
    ' view is the tab strip for tabbed browser windows, the toolbar for popups,\n' +
    ' the web contents for app windows and varies for fullscreen windows.',
  ' A property key to store the window icon, typically 16x16 for title bars.',
  ' The corner radius of a window in DIPs. Currently only used for shadows.\n' +
    ' Default is -1, meaning "unspecified". 0 Ensures corners are square.',
  ' A property key to indicate a desk index of a workspace this window belongs\n' +
    ' to. The default value is kWindowWorkspaceUnassignedWorkspace.',
  ' A property key to store the z-ordering.',
  ' Alphabetical sort.'
]
capture_client.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by an object that manages input capture.\n' +
    ' The intended semantics of window-capture are that:\n' +
    '   * At most one window on the system can register as "capturing" input.\n' +
    '   * If a window is capturing input, then all input events will get routed to\n' +
    '     this window.\n' +
    '   * The window may choose to release capture while processing an event. The\n' +
    '     resulting behavior is platform dependent (e.g. whether the event is\n' +
    '     redispatched to the window server).',
  ' Sets/Gets the capture client on the root Window.',
  ' A utility function to get the current capture window. Returns NULL\n' +
    " if the window doesn't have a root window, or there is no capture window."
]
capture_client_observer.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used to observe changes in capture.'
]
capture_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " This interface provides API to change the root Window's capture state without\n" +
    ' exposing them as RootWindow API.'
]
cursor_client.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface that receives cursor change events.',
  ' Sets/Gets the activation client for the specified window.'
]
cursor_client_observer.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cursor_shape_client.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface to query information related to a cursor.'
]
default_capture_client.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drag_drop_client.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by an object that controls a drag and drop session.'
]
drag_drop_client_observer.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observes drag-and-drop sessions. NOTE: drop could be asynchronous. Therefore,\n' +
    ' an active async drop could be interrupted by a new drag-and-drop session. In\n' +
    ' this case, observers are NOT notified of the interrupted async drop.\n' +
    ' Some possible calling orders are listed below:\n' +
    ' 1. Sync/async drop completion: `OnDragStarted()` -> `OnDragUpdated()` ->\n' +
    ' `OnDragCompleted()` -> `OnDropCompleted()`.\n' +
    ' 2. Async drop cancellation: OnDragStarted()` -> `OnDragUpdated()` ->\n' +
    ' `OnDragCompleted()` -> `OnDragCancelled()`.'
]
drag_drop_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Delegate interface for drag and drop actions on aura::Window.'
]
event_client.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by an object that alters event processing.',
  ' Sets/Gets the event client on the root Window.'
]
focus_change_observer.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(beng): this interface will be OBSOLETE by FocusChangeEvent.'
]
focus_client.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by an object that manages window focus.',
  ' Sets/Gets the focus client on the root Window.'
]
screen_position_client.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by an object that changes coordinates within a root\n' +
    ' Window into system coordinates.',
  ' Sets/Gets the activation client on the Window.'
]
transient_window_client.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TransientWindowClient is used to add or remove transient windows. Transient\n' +
    ' children get the following behavior:\n' +
    ' . The transient parent destroys any transient children when it is\n' +
    '   destroyed. This means a transient child is destroyed if either its parent\n' +
    '   or transient parent is destroyed.\n' +
    ' . If a transient child and its transient parent share the same parent, then\n' +
    '   transient children are always ordered above the transient parent.\n' +
    ' Transient windows are typically used for popups and menus.',
  ' Sets/gets the TransientWindowClient. This does *not* take ownership of\n' +
    ' |client|. It is assumed the caller will invoke SetTransientWindowClient(NULL)\n' +
    ' before deleting |client|.'
]
transient_window_client_observer.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
visibility_client.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " An interface implemented by an object that manages the visibility of Windows'\n" +
    ' layers as Window visibility changes.',
  ' Sets the VisibilityClient on the Window.',
  " Gets the VisibilityClient for the window. This will crawl up |window|'s\n" +
    ' hierarchy until it finds one.'
]
window_parenting_client.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implementations of this object are used to help locate a default parent for\n' +
    ' NULL-parented Windows.',
  ' Set/Get a window tree client for the RootWindow containing |window|. |window|\n' +
    ' must not be NULL.',
  ' Adds |window| to an appropriate parent by consulting an implementation of\n' +
    " WindowParentingClient attached at the root Window resolved by 'context',\n" +
    " 'screen_bounds' and 'display_id'. The final location may be a window\n" +
    ' hierarchy other than the one supplied via |context|, which must not be\n' +
    ' NULL. `screen_bounds` may be empty and `display_id` maybe invalid.'
]
window_stacking_client.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Sets/gets the WindowStackingClient. This does *not* take ownership of\n' +
    ' |client|. It is assumed the caller will invoke SetWindowStackingClient(NULL)\n' +
    ' before deleting |client|.'
]
window_types.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " This isn't a property because it can't change after the window has been\n" +
    ' initialized.'
]
env.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A singleton object that tracks general state within Aura.'
]
env_input_state_controller.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
env_observer.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_injector.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used to inject events as if they came from the OS.'
]
host_frame_rate_throttler.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used to throttle the frame rate of hosts that are occluded.'
]
input_state_lookup.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' InputStateLookup is used to obtain the state of input devices.'
]
input_state_lookup_win.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Windows implementation of InputStateLookup.'
]
layout_manager.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by an object that places child windows.'
]
native_window_occlusion_tracker.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is a shim between WindowOcclusionTracker and os-specific\n' +
    ' window occlusion tracking classes (currently just\n' +
    ' NativeWindowOcclusionTrackerWin).'
]
native_window_occlusion_tracker_win.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class keeps track of whether any HWNDs are occluding any app windows.\n' +
    ' It notifies the host of any app window whose occlusion state changes. Most\n' +
    " code should not need to use this; it's an implementation detail."
]
null_window_targeter.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' NullWindowTargeter can be installed on a root window to prevent it from\n' +
    ' dispatching events such as during shutdown.'
]
scoped_enable_unadjusted_mouse_events.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Scoping class that ensures correctly exit unadjusted mouse input. Start using\n' +
    ' unadjusted mouse events (i.e. WM_INPUT on Windows) when this is constructed.\n' +
    ' Destroying an instance of this class will exit the unadjusted mouse event\n' +
    ' mode.'
]
scoped_keyboard_hook.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Destroying an instance of this class will clean up the KeyboardHook instance\n' +
    ' owned by WindowTreeHost and prevent future system key events from being\n' +
    ' captured.  If the KeyboardHook or WindowTreeHost instances were already\n' +
    ' destroyed, then destroying this instance is a noop.'
]
scoped_simple_keyboard_hook.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This subclass of ScopedKeyboardHook will not set up a system-level keyboard\n' +
    ' hook or call into any WindowTreeHost methods for lock state or cleanup.\n' +
    ' It allows for disabling system-level keyboard lock functionality while\n' +
    ' continuing to support browser-level keyboard lock.\n' +
    " TODO(joedow): Remove this class after 'system-keyboard-lock' is removed."
]
scoped_window_capture_request.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A scoped move-only object which is associated with a request to make a\n' +
    ' non-root window individually capturable by a FrameSinkVideoCapturer. This\n' +
    ' request is tracked as long as this object lives. Once all requests are\n' +
    ' destroyed, the window will no longer be uniquely identifiable by a\n' +
    ' viz::SubtreeCaptureId, and can no longer be individually capturable by the\n' +
    ' FrameSinkVideoCapturer.\n' +
    ' Note that making a window capturable forces the layer tree root at its layer\n' +
    ' to be promoted to a render surface that draw into a render pass.\n' +
    ' See https://crbug.com/1143930 for more details.'
]
scoped_window_event_targeting_blocker.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Temporarily blocks the event targeting by setting kNone targeting policy to\n' +
    ' |window_|. The original event targeting policy will be restored if all\n' +
    ' targeting blockers are removed from |window_|.'
]
scoped_window_targeter.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ScopedWindowTargeter is used to temporarily replace the event-targeter for a\n' +
    ' window. Upon construction, it installs a new targeter on the window, and upon\n' +
    ' destruction, it restores the previous event-targeter on the window.'
]
screen_ozone.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' display::Screen implementation on top of ui::PlatformScreen provided by\n' +
    ' Ozone.'
]
aura_test_base.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A base class for aura unit tests.\n' +
    ' TODO(beng): Instances of this test will create and own a RootWindow.'
]
aura_test_helper.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A helper class owned by tests that does common initialization required for\n' +
    ' Aura use. This class creates a root window with clients and other objects\n' +
    ' that are necessary to run test on Aura.'
]
aura_test_suite.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The aura test suite is configured in such a way that Env is shared across\n' +
    ' all tests. If a test needs to install a fresh copy of env it can create an\n' +
    ' instance of this. The constructor destroys the global instance, and the\n' +
    ' destructor reinstates it.\n' +
    ' Typical usage is:\n' +
    '    MyTest::SetUp() {\n' +
    '      env_reinstaller_ = std::make_unique<EnvReinstaller>();\n' +
    '      my_test_env_ = Env::CreateInstance()\n' +
    '      AuraTestBase::SetUp();\n' +
    '    }\n' +
    '    MyTest::TearDown() {\n' +
    '      AuraTestBase::TearDown();\n' +
    '      my_test_env_.reset();\n' +
    '      env_reinstaller_.reset();\n' +
    '    }\n' +
    " TODO(sky): this is ugly. Instead look into having each test install it's own\n" +
    ' Env. https://crbug.com/822968'
]
aura_test_utils.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
default_event_generator_delegate.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
env_test_helper.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_generator_delegate_aura.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implementation of ui::test::EventGeneratorDelegate for Aura.'
]
find_window.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Searches the given Window's hierarchy, including the root Window parameter\n" +
    ' itself, for one matching the given predicate.\n' +
    ' The predicate returns true to indicate a match (this Window pointer will be\n' +
    ' returned) or false to continue searching. If there is no match, this function\n' +
    ' returns null.\n' +
    ' The callback must not mutate the window hierarchy.',
  ' Like the above variant but searches the hierarchies of all windows in the\n' +
    ' environment.',
  ' Searches all Windows in the environment and returns a pointer to the first\n' +
    ' one found with the matching title. Returns null if not found.'
]
test_cursor_client.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_focus_client.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_screen.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A minimal, testing Aura implementation of display::Screen.\n' +
    ' TODO(bruthig): Consider extending gfx::test::TestScreen.'
]
test_window_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WindowDelegate implementation with all methods stubbed out.',
  ' A simple WindowDelegate implementation for these tests. It owns itself\n' +
    ' (deletes itself when the Window it is attached to is destroyed).',
  ' A simple WindowDelegate that has a hit-test mask.',
  ' Keeps track of mouse/key events.'
]
test_window_parenting_client.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_window_targeter.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A test WindowTargeter implementation that would always return the\n' +
    ' EventTarget it received from FindTargetForEvent or FindNextBestTarget\n' +
    ' as the EventTarget that should receive the event.'
]
test_windows.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Sets the Env to use for creation of new Windows. If null, Env::GetInstance()\n' +
    ' is used.',
  ' Creates a test window. If parent window is nullptr, then the caller must take\n' +
    ' ownership of the created window.',
  ' Returns true if |upper| is above |lower| in the window stacking order.',
  " Returns true if |upper|'s layer is above |lower|'s layer in the layer\n" +
    ' stacking order.',
  ' Returns a string containing the id of each of the child windows (bottommost\n' +
    ' first) of |parent|. The format of the string is "id1 id2 id...".'
]
ui_controls_aurawin.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_controls_factory_aura.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_controls_ozone.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_event_dispatcher_test_api.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_occlusion_tracker_test_api.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_test_api.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defined in class_property.h (which we do not include)',
  ' Aura window implementation. Interesting events are sent to the\n' +
    ' WindowDelegate.'
]
window_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Delegate interface for aura::Window.'
]
window_event_dispatcher.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WindowEventDispatcher orchestrates event dispatch within a window tree\n' +
    ' owned by WindowTreeHost. WTH also owns the WED.\n' +
    ' TODO(beng): In progress, remove functionality not directly related to\n' +
    '             event dispatch.'
]
window_event_dispatcher_observer.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WindowEventDispatcherObservers are added to Env and observe *all*\n' +
    ' WindowEventDispatchers.'
]
window_observer.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_occlusion_change_builder.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface for WindowOcclusionTracker to update window occlusion info.'
]
window_occlusion_tracker.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Notifies tracked Windows when their occlusion state change.\n' +
    ' To start tracking the occlusion state of a Window, call\n' +
    '   aura::Window::TrackOcclusionState()\n' +
    ' A Window is occluded if its bounds and transform are not animated and one of\n' +
    ' these conditions is true:\n' +
    ' - The Window is hidden (Window::IsVisible() is true).\n' +
    ' - The bounds of the Window are completely covered by opaque and axis-aligned\n' +
    '   Windows whose bounds and transform are not animated.\n' +
    ' Note that an occluded window may be drawn on the screen by window switching\n' +
    ' features such as "Alt-Tab" or "Overview".'
]
window_targeter.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_tracker.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is used to track an ordered list of Windows. When a Window is\n' +
    ' destroyed it is removed from the list of Windows.'
]
window_tree_host.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WindowTreeHost bridges between a native window and the embedded RootWindow.\n' +
    ' It provides the accelerated widget and maps events from the native os to\n' +
    ' aura.'
]
window_tree_host_observer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_tree_host_platform.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The unified WindowTreeHost implementation for platforms\n' +
    ' that implement PlatformWindow.'
]
aura_extra_export.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines AURA_EXTRA_EXPORT so that functionality implemented by the aura-extra\n' +
    ' module can be exported to consumers.'
]
window_position_in_root_monitor.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WindowPositionInRootMonitor notifies a callback any time the position of a\n' +
    ' window, relative to the root, changes. Changes are only sent when attached\n' +
    ' to a valid root.'
]
accelerator.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class describe a keyboard accelerator (or keyboard shortcut).\n' +
    ' Keyboard accelerators are registered with the FocusManager.\n' +
    ' It has a copy constructor and assignment operator so that it can be copied.\n' +
    ' It also defines the < operator so that it can be used as a key in a std::map.',
  ' While |modifiers| may include EF_IS_REPEAT, EF_IS_REPEAT is not considered\n' +
    ' an intrinsic part of an Accelerator. This is done so that an accelerator\n' +
    ' for a particular KeyEvent matches an accelerator with or without the repeat\n' +
    ' flag. A side effect of this is that == (and <) does not consider the\n' +
    ' repeat flag in its comparison.',
  ' An interface that classes that want to register for keyboard accelerators\n' +
    ' should implement.',
  " Since accelerator code is one of the few things that can't be cross platform\n" +
    ' in the chrome UI, separate out just the GetAcceleratorForCommandId() from\n' +
    ' the menu delegates.'
]
accelerator_manager.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' AcceleratorManger handles processing of accelerators. A delegate may be\n' +
    ' supplied which is notified as unique accelerators are added and removed.'
]
accelerator_map.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is a wrapper around an internal std::map of type\n' +
    ' |std::map<Accelerator, V>| where |V| is the mapped value.\n' +
    ' Accelerators in Chrome on all platforms are specified with the |key_code|,\n' +
    ' aka VKEY, however certain keys (eg. brackets, comma, period, plus, minus),\n' +
    ' are in different places based on the keyboard layout. In some cases the\n' +
    " VKEYs don't exist, in some cases they now conflict with other shortcuts.\n" +
    ' Chrome OS uses a positional mapping for this subset of keys. Shortcuts\n' +
    ' based on these keys are determined by the position of the key on a US\n' +
    ' keyboard. This was already the case for all non-latin alphabet keyboards\n' +
    ' (Chinese, Japanese, Arabic, Russian, etc.).\n' +
    ' To achieve this on Chrome OS for the remaining layouts, an additional\n' +
    ' remapping may happen to the accelerator used for lookup based on the state\n' +
    ' of |use_positional_lookup_|. When false no remapping occurs. When true,\n' +
    ' the |code| aka DomCode (which is by definition fixed position), is used to\n' +
    ' find the US layout VKEY, and that VKEY is used to lookup in the map.\n' +
    ' Other non-positional keys, eg. alphanumeric, F-keys, and special keys are\n' +
    ' all not remapped. Alphanumeric keys always continue to follow the\n' +
    ' |code|/VKEY defined by the current layout as is existing behavior.'
]
right_alt_event_property.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Sets the right alt property on the given event to mark the event is supposed\n' +
    ' to be used as the right alt key for the purposes of accelerators.',
  ' Checks if the right alt property is set on the given event.'
]
global_media_keys_listener_win.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implementation of MediaKeysListener that uses RegisterHotKey to globally\n' +
    ' listen for media key presses. It only allows for a single instance to be\n' +
    ' created in order to prevent conflicts form multiple listeners.'
]
media_keys_listener.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Create MediaKeyListener to receive accelerators on media keys.'
]
media_keys_util.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These values are persisted to logs. Entries should not be renumbered and\n' +
    ' numeric values should never be reused.',
  ' The name of the histogram that records |MediaHardwareKeyAction|.',
  ' Records a media hardware key action to the\n' +
    ' |kMediaHardwareKeyActionHistogramName| histogram.'
]
menu_label_accelerator_util.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " This function escapes every '&' in label by replacing it with '&&', to avoid\n" +
    ' having single ampersands in user-provided strings treated as accelerators.'
]
menu_label_accelerator_util_linux.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Change windows accelerator style to GTK style. (GTK uses _ for\n' +
    ' accelerators.  Windows uses & with && as an escape for &.)',
  ' Removes the "&" accelerators from a Windows label.'
]
accelerator_mojom_traits.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_accelerator_cocoa.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' On macOS, accelerators are primarily handled by the main menu. Most\n' +
    ' accelerators have an associated NSMenuItem. Each NSMenuItem is specified with\n' +
    ' a `key_equivalent` and `modifier_mask`. This function takes a ui::Accelerator\n' +
    ' and returns the associated `key_equivalent` and `modifier_mask`.'
]
test_accelerator_target.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' AcceleratorTarget implementation suitable for tests. Tracks calls to\n' +
    ' AcceleratorPressed() and allows for configuration of values returned by\n' +
    ' various functions.'
]
base_window.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides an interface to perform actions on windows, and query window\n' +
    ' state.'
]
class_property.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This header should be included by code that defines ClassProperties.\n' +
    ' To define a new ClassProperty:\n' +
    '  #include "foo/foo_export.h"\n' +
    '  #include "ui/base/class_property.h"\n' +
    '  DEFINE_EXPORTED_UI_CLASS_PROPERTY_TYPE(FOO_EXPORT, MyType)\n' +
    '  namespace foo {\n' +
    '    // Use this to define an exported property that is primitive,\n' +
    "    // or a pointer you don't want automatically deleted.\n" +
    '    DEFINE_UI_CLASS_PROPERTY_KEY(MyType, kMyKey, MyDefault)\n' +
    '    // Use this to define an exported property whose value is a heap\n' +
    '    // allocated object, and has to be owned and freed by the class.\n' +
    '    DEFINE_OWNED_UI_CLASS_PROPERTY_KEY(gfx::Rect, kRestoreBoundsKey, nullptr)\n' +
    '  }  // foo namespace\n' +
    ' To define a new type used for ClassProperty.\n' +
    '  // outside all namespaces:\n' +
    '  DEFINE_EXPORTED_UI_CLASS_PROPERTY_TYPE(FOO_EXPORT, MyType)\n' +
    ' If a property type is not exported, use\n' +
    ' DEFINE_UI_CLASS_PROPERTY_TYPE(MyType) which is a shorthand for\n' +
    ' DEFINE_EXPORTED_UI_CLASS_PROPERTY_TYPE(, MyType).\n' +
    ' If the properties are used outside the file where they are defined\n' +
    ' their accessor methods should also be declared in a suitable header\n' +
    ' using DECLARE_EXPORTED_UI_CLASS_PROPERTY_TYPE(FOO_EXPORT, MyType)\n' +
    ' Cascading properties:\n' +
    ' Use the DEFINE_CASCADING_XXX macros to create a class property type that\n' +
    ' will automatically search up an instance hierarchy for the first defined\n' +
    ' property. This only affects the GetProperty() call. SetProperty() will\n' +
    ' still explicitly set the value on the given instance. This is useful for\n' +
    ' hierarchies of instances which a single set property can effect a whole sub-\n' +
    ' tree of instances.\n' +
    ' In order to use this feature, you must override GetParentHandler() on the\n' +
    ' class that inherits PropertyHandler.',
  ' Type of a function to delete a property that this window owns.',
  ' No single new-style cast works for every conversion to/from int64_t, so we\n' +
    ' need this helper class.',
  ' Template implementation is necessary in the .h file unless we want to break\n' +
    ' [DECLARE|DEFINE]_EXPORTED_UI_CLASS_PROPERTY_TYPE() below into different\n' +
    ' macros for owned and unowned properties; implementing them as pure templates\n' +
    ' makes them nearly impossible to implement or use incorrectly at the cost of a\n' +
    ' small amount of code duplication across libraries.',
  ' Macros to declare the property getter/setter template functions.',
  ' Macros to instantiate the property getter/setter template functions.'
]
clipboard.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Clipboard:\n' +
    ' - reads from and writes to the system clipboard.\n' +
    ' - specifies an ordering in which to write types to the clipboard\n' +
    '   (see PortableFormat).\n' +
    ' - is generalized for all targets/operating systems.'
]
clipboard_android.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Documentation on the underlying Android API this ultimately abstracts is\n' +
    ' available at https://developer.android.com/guide/topics/text/copy-paste.'
]
clipboard_buffer.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' |ClipboardBuffer| designates which clipboard buffer the action should be\n' +
    ' applied to.\n' +
    ' TODO(huangdarwin): Use an #ifdef per platform for kSelection and kDrag.'
]
clipboard_constants.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ----- PLATFORM NEUTRAL MIME TYPES -----',
  ' Non-standard type for downloading files after drop events. Only works on\n' +
    ' Windows. See https://crbug.com/860557 and https://crbug.com/425170.',
  ' ----- CHROMEOS MIME TYPES -----',
  ' ----- LINUX & CHROMEOS & FUCHSIA MIME TYPES -----',
  ' ----- EVERYTHING EXCEPT FOR APPLE MIME TYPES -----',
  ' TODO(dcheng): This name is temporary. See crbug.com/106449.',
  ' ----- APPLE UNIFORM TYPES -----',
  ' Mail.app and TextEdit accept drags that have both HTML and image types on\n' +
    " them, but don't process them correctly <http://crbug.com/55879>. Therefore,\n" +
    " if there is an image type, don't put the HTML data on as HTML, but rather\n" +
    " put it on as this Chrome-only type. External apps won't see HTML but\n" +
    ' Chrome will know enough to read it as HTML. <http://crbug.com/55879>',
  ' Data type always placed on dragging pasteboards. There is never any data\n' +
    " associated with this type; it's only used to ensure that Chromium supports\n" +
    ' any drag initiated inside of Chromium, whether or not data has been\n' +
    ' associated with it.',
  ' Data type placed on dragging pasteboards when the drag is initiated from a\n' +
    ' renderer that is privileged. There is never any data associated with this\n' +
    ' type.',
  ' Data type placed on dragging pasteboards when the drag is initiated from a\n' +
    ' renderer. If the initiator has a tuple origin (e.g. https://example.com),\n' +
    ' the data is a string representation (i.e. the result of calling\n' +
    ' `url::Origin::Serialize()`). Otherwise, the initiator has an opaque origin\n' +
    ' and the data is the empty string.\n' +
    ' This format is intentionally chosen for safer backwards compatibility with\n' +
    ' previous versions of Chrome, which always set an empty string for the data.\n' +
    ' When newer versions of Chrome attempt to interpret this data as an origin,\n' +
    ' they will safely treat it as a unique opaque origin.',
  ' A type specifying DataTransfer custom data. The data is pickled.',
  ' It is the common convention on the Mac and on iOS that password managers tag\n' +
    " confidential data with this type. There's no data associated with this\n" +
    ' type. See http://nspasteboard.org/ for more info.',
  ' A publicly-used type for the name of a URL.',
  ' A type specifying that WebKit or a WebKit-derived browser engine like Blink\n' +
    " was the last to write to the pasteboard. There's no data associated with this\n" +
    ' type.',
  ' A type used by WebKit to add an array of URLs with titles to the clipboard.',
  ' A type used to track the source URL of data put in the clipboard.',
  ' ----- ANDROID MIME TYPES -----',
  ' ----- OTHER RELATED CONSTANTS -----',
  ' Max number of custom formats which can be registered per write operation.\n' +
    ' Windows / X11 clipboards enter an unrecoverable state after registering\n' +
    " some amount of unique formats, and there's no way to un-register these\n" +
    ' formats. For these clipboards, we use a conservative limit to avoid\n' +
    ' registering too many formats.',
  ' Web prefix for web custom format types.'
]
clipboard_data.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Clipboard data format used by ClipboardInternal.',
  ' ClipboardData contains data copied to the Clipboard for a variety of formats.\n' +
    ' It mostly just provides APIs to cleanly access and manipulate this data.'
]
clipboard_format_type.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Platform neutral holder for native data representation of a clipboard type.\n' +
    ' Copyable and assignable, since this is an opaque value type.'
]
clipboard_ios.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
clipboard_mac.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Documentation on the underlying MacOS API this ultimately abstracts is\n' +
    ' available at https://developer.apple.com/documentation/appkit/nspasteboard\n' +
    ' and\n' +
    ' https://developer.apple.com/library/archive/documentation/General/Conceptual/Devpedia-CocoaApp/Pasteboard.html.'
]
clipboard_metrics.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used to log formats read/written from/to the platform clipboard.\n' +
    " This enum's values are persisted to logs. Do not reuse or renumber values.",
  ' Records the time interval between when the specified |data| was committed to\n' +
    ' the clipboard and when it was read. Read time is assumed to be now.'
]
clipboard_monitor.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A singleton instance to monitor and notify ClipboardObservers for clipboard\n' +
    ' changes.'
]
clipboard_non_backed.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' In-memory clipboard implementation not backed by an underlying platform.\n' +
    " This clipboard can be used where there's no need to sync the clipboard with\n" +
    ' an underlying platform, and can substitute platform clipboards like\n' +
    " ClipboardWin on Windows or ClipboardMac on MacOS. As this isn't backed by an\n" +
    " underlying platform, the clipboard data isn't persisted after an instance\n" +
    ' goes away.'
]
clipboard_observer.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observer that receives the notifications of clipboard events.'
]
clipboard_ozone.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Clipboard implementation for Ozone-based ports. It delegates the platform\n' +
    ' specifics to the PlatformClipboard instance provided by the Ozone platform.\n' +
    ' Currently, used on Linux Desktop, i.e: X11 and Wayland, and Lacros platforms.'
]
clipboard_sequence_number_token.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Identifies a unique clipboard state. This can be used to version the data on\n' +
    ' the clipboard and determine whether it has changed.'
]
clipboard_test_template.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    " This header doesn't use REGISTER_TYPED_TEST_SUITE_P like most\n" +
    ' type-parameterized gtests. There are lot of test cases in here that are only\n' +
    ' enabled on certain platforms. However, preprocessor directives in macro\n' +
    " arguments result in undefined behavior (and don't work on MSVC). Instead,\n" +
    " 'parameterized' tests should typedef TypesToTest (which is used to\n" +
    ' instantiate the tests using the TYPED_TEST_SUITE macro) and then #include\n' +
    ' this header.\n' +
    ' TODO(dcheng): This is really horrible. In general, all tests should run on\n' +
    ' all platforms, to avoid this mess.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  ' A mock delegate for testing.',
  ' Hack for tests that need to call static methods of ClipboardTest.',
  ' |NamesOfTypesToTest| provides a way to differentiate between different\n' +
    ' clipboard tests that include this file. See docs in gtest-typed-test.h',
  ' TODO(crbug.com/40681589): This test fails with ClipboardAndroid, but passes\n' +
    " with the TestClipboard as RTF isn't implemented in ClipboardAndroid.",
  ' MultipleBufferTest only ran on Linux because Linux is the only platform that\n' +
    ' supports the selection buffer by default.',
  ' Some platforms store HTML as UTF-8 internally. Make sure fragment indices are\n' +
    ' adjusted appropriately when converting back to UTF-16.',
  ' TODO(estade): Port the following test (decide what target we use for urls)',
  ' TODO(tonikitoo, msisov): enable back for ClipboardOzone implements\n' +
    ' selection support. https://crbug.com/911992',
  ' See crbug.com/1477344 for more details on the issue.',
  ' TODO(crbug.com/41372437): Re-enable this test once death tests work on\n' +
    ' Android.',
  ' Only kN32_SkColorType bitmaps are allowed into the clipboard to prevent\n' +
    ' surprising buffer overflows due to bits-per-pixel assumptions.',
  ' Test that platform-specific functionality works, with a predefined format in\n' +
    ' On X11 Linux, this test uses a simple MIME type, text/plain.\n' +
    ' On Windows, this test uses a pre-defined ANSI format, CF_TEXT, and tests that\n' +
    ' the Windows implicitly converts this to UNICODE as expected.',
  ' Test writing all formats we have simultaneously.',
  " TODO(dcheng): Fix this test for Android. It's rather involved, since the\n" +
    ' clipboard change listener is posted to the Java message loop, and spinning\n' +
    ' that loop from C++ to trigger the callback in the test requires a non-trivial\n' +
    ' amount of additional work.',
  ' Simple test that the sequence number appears to change when the clipboard is\n' +
    ' written to.\n' +
    ' TODO(dcheng): Add a version to test ClipboardBuffer::kSelection.',
  " Test that writing empty parameters doesn't try to dereference an empty data\n" +
    ' vector. Not crashing = passing.',
  ' Policy controller is only intended to be used in Chrome OS, so the following\n' +
    ' policy related tests are only run on Chrome OS.',
  " Test that copy/paste would work normally if the policy controller didn't\n" +
    ' restrict the clipboard data.',
  ' Test that pasting clipboard data would not work if the policy controller\n' +
    ' restricted it.',
  ' Checks that source DTEs provided through the custom MIME type can be parsed.'
]
clipboard_util.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Encodes a bitmap to a PNG. This is an expensive method that must be\n' +
    ' called on a sequence that allows long-running CPU operations.',
  ' Prefer EncodeBitmapToPng() if possible. Use this method only when encoding\n' +
    ' must be done synchronously from a sequence which does not allow long-running\n' +
    ' CPU operations, such as while writing to the clipboard from the UI thread,\n' +
    ' which may cause jank.'
]
clipboard_util_mac.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns an array of NSPasteboardItems that represent the given `urls` and\n' +
    ' `titles`.',
  ' For each pasteboard type in `item` that is not in `pboard`, add the type\n' +
    ' and its associated data.',
  ' For a given pasteboard, reads and extracts the URLs to be found on it. If\n' +
    ' `include_files` is set, then any file references on the pasteboard will be\n' +
    ' returned as file URLs. Returns an array of URLAndTitle objects each holding\n' +
    ' a URL and title pair read from the pasteboard. If no URLs were successfully\n' +
    ' read, the array will be empty.',
  ' For a given pasteboard, extracts the files found on it.',
  ' Writes files to a given pasteboard.',
  ' Gets the NSPasteboard specified from the clipboard buffer.',
  ' If there is RTF data on the pasteboard, returns an HTML version of it.\n' +
    ' Otherwise returns nil.'
]
clipboard_util_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Contains helper functions for working with the clipboard and IDataObjects.',
  '///////////////////////////////////////////////////////////////////////////\n' +
    ' These methods check to see if |data_object| has the requested type.\n' +
    ' Returns true if it does.',
  '///////////////////////////////////////////////////////////////////////////\n' +
    ' Helper methods to extract information from an IDataObject.  These methods\n' +
    ' return true if the requested data type is found in |data_object|.',
  ' Only returns true if url->is_valid() is true.',
  ' Only returns true if |*filenames| is not empty.',
  ' Creates a new STGMEDIUM object to hold files.',
  ' Fills a vector of display names of "virtual files" in the data store, but\n' +
    ' does not actually retrieve the file contents. Display names are assured to be\n' +
    ' unique. Method is called on drag enter of the Chromium drop target, when only\n' +
    ' the display names are needed. If there are no display names, returns nullopt.',
  ' Retrieves "virtual file" contents via creation of intermediary temp files.\n' +
    ' Method is called on dropping on the Chromium drop target. Since creating\n' +
    ' the temp files involves file I/O, the method is asynchronous and the caller\n' +
    ' must provide a callback function that receives a vector of pairs of temp\n' +
    ' file paths and display names. The method will invoke the callback with an\n' +
    ' empty vector if there are no virtual files in the data object.\n' +
    ' TODO(crbug.com/41452260): Implement virtual file extraction to\n' +
    " dynamically stream data to the renderer when File's bytes are actually\n" +
    ' requested',
  ' This represents custom MIME types a web page might set to transport its\n' +
    ' own types of data for drag and drop. It is sandboxed in its own CLIPFORMAT\n' +
    ' to avoid polluting the ::RegisterClipboardFormat() namespace with random\n' +
    ' strings from web content.',
  ' Helper method for converting between MS CF_HTML format and plain\n' +
    ' text/html.'
]
clipboard_win.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Documentation on the underlying Win32 API this ultimately abstracts is\n' +
    ' available at\n' +
    ' https://docs.microsoft.com/en-us/windows/win32/dataxchg/clipboard.'
]
custom_data_helper.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Due to restrictions of most operating systems, we don't directly map each\n" +
    ' type of custom data to a native data transfer type. Instead, we serialize\n' +
    ' each key-value pair into the pickle as a pair of string objects, and then\n' +
    ' write the binary data in the pickle to the native data transfer object.'
]
file_info.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " struct that bundles a file's path with an optional display name.",
  ' Returns UTF8 file:// URL. |file_path| is expected to be an absolute path, and\n' +
    " will be encoded as one regardless. E.g. '/path' and 'path' both encode as\n" +
    " 'file:///path'.",
  ' Returns a list of ui::FileInfo from the text/uri-list CRLF-separated file://\n' +
    ' URLs in |uri_list| as per\n' +
    ' https://www.iana.org/assignments/media-types/text/uri-list\n' +
    ' URLs which cannot be parsed are ignored.',
  ' Returns UTF8 text/uri-list CRLF-separated file:// URLs from filenames.'
]
scoped_clipboard_writer.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' |ScopedClipboardWriter|:\n' +
    ' - is a wrapper for |Clipboard|.\n' +
    ' - simplifies writing data to the system clipboard.\n' +
    ' - handles packing data into a Clipboard::ObjectMap.\n' +
    ' Upon deletion, the class atomically writes all data to the clipboard,\n' +
    ' avoiding any potential race condition with other processes that are also\n' +
    ' writing to the system clipboard.'
]
clipboard_test_util.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper functions to read images from clipboard synchronously.'
]
test_clipboard.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Platform-neutral ui::Clipboard mock used for tests.'
]
url_file_parser.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A completely arbitrary cut-off size (16kB), above which\n' +
    ' `ExtractURLFromURLFileContents` will refuse to parse. Because parsing\n' +
    ' is done in-memory by string splitting, dealing with large files invites\n' +
    ' hangs. See an example at https://crbug.com/1401639.',
  ' Given the string contents of a .url file, returns a string version of the URL\n' +
    ' found. Returns an empty string if no URL can be found.\n' +
    ' Implementation note: This function does not do full validation of the file\n' +
    ' contents. If a malformed file is passed in, this function may or may not\n' +
    ' manage to find any URLs within.'
]
accessibility_focus_overrider.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This object is used to enable cross-process accessibility focus querying.\n' +
    ' The following bullet points describe the need for this class:\n' +
    ' * The NSViews in out-of-process NSViews (e.g, for PWAs) will return a\n' +
    '   NSRemoteAccessibilityElement from -[NSView accessibilityFocusedUIElement].\n' +
    ' * The focus query is then continued in the browser process by a call to\n' +
    '   -[NSApplication accessibilityFocusedUIElement].\n' +
    ' * The default implementation -[NSApplication accessibilityFocusedUIElement]\n' +
    "   in turn queries -[NSApplication keyWindow]'s accessibilityFocusedUIElement\n" +
    '   method.\n' +
    ' * This is not what the PWA process wants. The PWA process wants its focus,\n' +
    "   not the browser's focus.\n" +
    " * To make this happen, when the PWA process' NSViews are focused, they\n" +
    "   force the browser's  -[NSApplication accessibilityFocusedUIElement] to\n" +
    '   return their accessibility focus.\n' +
    ' The above-required overriding of focus is done by instantiating an\n' +
    ' AccessibilityFocusOverrider and updating its state when the NSView in the\n' +
    ' PWA process is focused.'
]
animation_utils.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
appkit_utils.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Whether a force-click event on the touchpad should invoke Quick Look.',
  ' Returns true if both CGFloat values are equal.'
]
base_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A view that provides common functionality that many views will need:\n' +
    ' - Automatic registration for mouse-moved events.\n' +
    ' - Funneling of mouse and key events to two methods\n' +
    ' - Coordinate conversion utilities',
  ' |tracking| determines whether a CrTrackingArea is initialized during the\n' +
    ' constructor.',
  " Process an NSEventTypeLeftMouseUp event on this view that wasn't dispatched\n" +
    ' already to BaseView (e.g. if captured via an event monitor). This may\n' +
    ' generate a synthetic NSEventTypeMouseExited if the mouse exited the view area\n' +
    ' during a drag and should be invoked after a call to -mouseEvent: for the\n' +
    ' mouse up.',
  ' Override these methods (mouseEvent, keyEvent, forceTouchEvent) in a\n' +
    ' subclass.',
  ' keyEvent should return kEventHandled if it handled the event, or\n' +
    " kEventNotHandled if it should be forwarded to BaseView's super class.",
  ' Useful rect conversions (doing coordinate flipping)',
  ' A notification that a view may issue when it receives first responder status.\n' +
    ' The name is |kViewDidBecomeFirstResponder|, the object is the view, and the\n' +
    ' NSSelectionDirection is wrapped in an NSNumber under the key\n' +
    ' |kSelectionDirection|.'
]
bubble_closer.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Monitors mouse events to allow a regular window to have menu-like popup\n' +
    ' behavior when clicking outside the window. This is needed because macOS\n' +
    ' suppresses window activation events when clicking rapidly.'
]
cocoa_base_utils.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Retrieves the WindowOpenDisposition used to open a link from a user gesture\n' +
    ' represented by |event|. For example, a Cmd+Click would mean open the\n' +
    ' associated link in a background tab.',
  ' Retrieves the WindowOpenDisposition used to open a link from a user gesture\n' +
    ' represented by |event|, but instead use the modifier flags given by |flags|,\n' +
    ' which is the same format as |-NSEvent modifierFlags|. This allows\n' +
    ' substitution of the modifiers without having to create a new event from\n' +
    ' scratch.'
]
command_dispatcher.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' CommandDispatcher guides the processing of key events to ensure key commands\n' +
    ' are executed in the appropriate order. In particular, it allows a first\n' +
    ' responder  to handle an event asynchronously and return unhandled events\n' +
    ' via -redispatchKeyEvent:. An NSWindow can use CommandDispatcher by\n' +
    ' implementing CommandDispatchingWindow and overriding\n' +
    ' -[NSWindow performKeyEquivalent:] and -[NSWindow sendEvent:] to call the\n' +
    ' respective CommandDispatcher methods.',
  ' The main entry point for key events. The CommandDispatchingWindow should\n' +
    ' override -[NSResponder performKeyEquivalent:] and call this instead. Returns\n' +
    ' YES if the event is handled.',
  ' Validate a user interface item (e.g. an NSMenuItem), consulting |handler| for\n' +
    ' -commandDispatch: item actions.',
  ' Sends a key event to -[NSApp sendEvent:]. This is used to allow default\n' +
    ' AppKit handling of an event that comes back from CommandDispatcherTarget,\n' +
    ' e.g. key equivalents in the menu, or window manager commands like Cmd+`. Once\n' +
    ' the event returns to the window at -preSendEvent:, handling will stop. The\n' +
    ' event must be of type |NSEventTypeKeyDown|, |NSEventTypeKeyUp|, or\n' +
    ' |NSEventTypeFlagsChanged|. Returns YES if the event is handled.',
  ' The CommandDispatchingWindow should override -[NSWindow sendEvent:] and call\n' +
    ' this before a native -sendEvent:. Ensures that a redispatched event is not\n' +
    ' reposted infinitely. Returns YES if the event is handled.',
  " Dispatch a -commandDispatch: action either to |handler| or a parent window's\n" +
    ' handler.',
  " If the NSWindow's firstResponder implements CommandDispatcherTarget, then\n" +
    ' it is allowed to grant itself exclusive access to certain keyEquivalents,\n' +
    ' preempting the usual consumer order.',
  ' The System Keyboard Lock API <https://w3c.github.io/keyboard-lock/>\n' +
    ' allows web contents to override keyEquivalents normally reserved by the\n' +
    ' browser. If the firstResponder returns |YES| from this method, then\n' +
    ' keyEquivalents shortcuts should be skipped.',
  ' Provides CommandDispatcher with the means to redirect key equivalents at\n' +
    ' different stages of event handling.',
  ' Gives the delegate a chance to process the keyEquivalent before the first\n' +
    ' responder. See https://crbug.com/846893#c5 for more details on\n' +
    ' keyEquivalent consumer ordering. |window| is the CommandDispatchingWindow\n' +
    ' that owns CommandDispatcher, not the window of the event.',
  ' Gives the delegate a chance to process the keyEquivalent after the first\n' +
    ' responder has declined to process the event. See https://crbug.com/846893#c5\n' +
    ' for more details on keyEquivalent consumer ordering.\n' +
    ' |window| is the CommandDispatchingWindow that owns CommandDispatcher, not the\n' +
    ' window of the event.',
  ' The set of methods an NSWindow subclass needs to implement to use\n' +
    ' CommandDispatcher.',
  ' Parent window to defer command dispatching to.',
  ' If set, NSUserInterfaceItemValidations for -commandDispatch: and\n' +
    ' -commandDispatchUsingKeyModifiers: will be redirected to the command handler.\n' +
    ' Retains |commandHandler|.',
  ' Returns the associated CommandDispatcher.',
  ' Short-circuit to the default -[NSResponder performKeyEquivalent:] which\n' +
    ' CommandDispatcher calls as part of its -performKeyEquivalent: flow.',
  ' Short-circuit to the default -validateUserInterfaceItem: implementation.',
  ' AppKit will call -[NSUserInterfaceValidations validateUserInterfaceItem:] to\n' +
    ' validate UI items. Any item whose target is FirstResponder, or nil, will\n' +
    ' traverse the responder chain looking for a responder that implements the\n' +
    " item's selector. Thus NSWindow is usually the last to be checked and will\n" +
    ' handle any items that are not validated elsewhere in the chain. Implement the\n' +
    ' following so that menu items with these selectors are validated by\n' +
    ' CommandDispatchingWindow.'
]
constrained_window_animation.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class for all constrained window animation classes.',
  ' An animation to show a window.',
  ' An animation to hide a window.',
  ' An animation that pulses the window by growing it then shrinking it back.'
]
cursor_accessibility_scale_factor.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' macOS has an accessibility pointer size user preference. The OS renders\n' +
    ' larger Chrome and web content cursors using this scale factor (1.0 - 4.0).\n' +
    ' Call `GetCursorAccessibilityScaleFactor` to access the value in a one-time\n' +
    ' manner, or use `CursorAccessibilityScaleFactorObserver` to get a callback\n' +
    ' whenever the value changes.',
  ' Returns the current accessibility pointer size user preference.',
  " An class to observe macOS's accessibility pointer size user preference. This\n" +
    ' will call the registered observers every time that preference value changes.\n' +
    ' Be sure to use this class in the browser process. Notifications about\n' +
    ' NSUserDefaults changes are blocked by the sandbox, so this class will not\n' +
    ' work in renderer or other such sandboxed processes.',
  ' Adds an observer block that is called when the accessibility pointer size\n' +
    ' user preference changes. Returns an opaque token to represent the\n' +
    ' observation; call -removeObserver: to remove the observation when it is no\n' +
    ' longer needed.',
  ' Removes the observer block corresponding to the token.'
]
cursor_utils.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
defaults_utils.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a text insertion caret blink period derived from insertion point\n' +
    ' flash rate settings in NSUserDefaults. If no settings exist in defaults,\n' +
    ' returns std::nullopt.'
]
find_pasteboard.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manages the find pasteboard. Use this to copy text to the find pasteboard,\n' +
    ' to get the text currently on the find pasteboard, and to receive\n' +
    ' notifications when the text on the find pasteboard has changed. You should\n' +
    ' always use this class instead of accessing\n' +
    ' [NSPasteboard pasteboardWithName:NSPasteboardNameFind] directly.\n' +
    ' This is not thread-safe and must be used on the main thread.\n' +
    ' This is supposed to be a singleton.',
  ' Returns the singleton instance of this class.',
  ' Returns the current find text. This is never nil; if there is no text on the\n' +
    ' find pasteboard, this returns an empty string.',
  ' Sets the current find text to `newText` and sends a\n' +
    ' `kFindPasteboardChangedNotification` to the default notification center if\n' +
    ' it the new text different from the current text. `newText` must not be nil.',
  ' This method is meant to be overridden in tests.'
]
menu_controller.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Called as each item is created during menu or submenu creation.',
  ' Called after all menu items in a menu or submenu are created.',
  " A controller for the cross-platform menu model. The menu that's created\n" +
    ' has the tag and represented object set for each menu item. The object is a\n' +
    ' NSValue holding a pointer to the model for that level of the menu (to\n' +
    ' allow for hierarchical menus). The tag is the index into that model for\n' +
    ' that particular item. It is important that the model outlives this object\n' +
    ' as it only maintains weak references.',
  ' Note that changing this will have no effect if you use\n' +
    ' |-initWithModel:useWithPopUpButtonCell:| or after the first call to |-menu|.',
  ' NIB-based initializer. This does not create a menu. Clients can set the\n' +
    ' properties of the object and the menu will be created upon the first call to\n' +
    ' |-maybeBuildWithColorProvider:| or |-menu|.',
  ' Builds a NSMenu from the pre-built model (must not be nil). Changes made\n' +
    ' to the contents of the model after calling this will not be noticed. If\n' +
    ' the menu will be displayed by a NSPopUpButtonCell, it needs to be of a\n' +
    ' slightly different form (0th item is empty).',
  ' Programmatically close the constructed menu.',
  ' Access to the constructed menu if the complex initializer was used. If the\n' +
    ' menu has not bee built yet it will be built on the first call.',
  ' Whether the menu is currently open.',
  ' Whether the NSMenu has been built.'
]
menu_utils.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns an appropriate event (with a location) suitable for showing a context\n' +
    " menu. Uses [NSApp currentEvent] if it's a non-nil mouse click event,\n" +
    ' otherwise creates an autoreleased dummy event located at `anchor`, where\n' +
    ' `anchor` is in screen coordinates.',
  ' Same as above, but `position` is in window coordinates relative to `window`\n' +
    ' instead.',
  ' Pops up `menu` using `event`, targeting `view`. If `allow_nested_tasks` is\n' +
    ' true, tasks (such as IPCs) will be allowed to execute while the menu is being\n' +
    ' displayed. If specified, `context` is used to inform ElementTrackerMac of the\n' +
    ' menu being shown.'
]
nsmenu_additions.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Sets a block that cr_menuItemForKeyEquivalentEvent: calls before\n' +
    ' beginning its search for a matching menu item. Useful for code\n' +
    ' outside of /content to arrange for code execution (to perform custom\n' +
    ' menu item updates, for example) before the search begins.\n' +
    ' This method does not support multiple pre-search blocks. It will\n' +
    ' CHECK() if called after a block has already been set.',
  ' Searches the menu and its submenus for the item with the keyboard\n' +
    ' equivalent matching `event`. Returns nil if no corresponding\n' +
    ' menu item exists.',
  ' Locates the menu item corresponding to `chromeCommand` and flashes\n' +
    ' its owning menu title in the menu bar (without executing the command).\n' +
    ' Also causes VoiceOver to speak the menu item. Returns NO if the\n' +
    " command wasn't found in the menus."
]
nsmenuitem_additions.h [
  ' Copyright 2009 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns YES if the menu item is enabled and a call to\n' +
    ' [menu performKeyEquivalent:`event`] would cause the\n' +
    ' menu item to fire.',
  " Convenience method for setting a menu item's key equivalent.",
  " Convenience method for clearing a menu item's key equivalent. After calling,\n" +
    ' the item has no keyEquivalent string or mask.',
  ' Used by tests to set internal state without having to change global input\n' +
    ' source.',
  ' Returns whether the named keyboard layout has the command-qwerty behavior,\n' +
    ' meaning that the layout acts as though it was QWERTY when the command key is\n' +
    ' held.',
  ' Returns a suitable keyboard shortcut modifier mask for `event`. In\n' +
    " particular, NSEventModifierFlagFunction may be present in the event's\n" +
    ' modifiers but it may not indicate the user is pressing the Function key (it\n' +
    ' exists, for example, when pressing a function key like Up Arrow). This\n' +
    ' distinction matters when evaluating a key event as a possible keyboard\n' +
    ' shortcut.'
]
nswindow_test_util.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' static void SetFullscreenFakedForTesting(bool);\n' +
    ' static bool IsFullscreenFakedForTesting();'
]
permissions_utils.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The ability to screen capture is restricted and requires a permission\n' +
    ' authorization. This function returns `true` if screen capture permission was\n' +
    ' already granted by the user and `false` if it was not.',
  ' Explicitly request from the user permission to capture the screen. Returns\n' +
    ' `true` if the user granted permission and `false` if the user did not. If the\n' +
    ' user previously declined to give permission, this will just return `false`\n' +
    ' immediately without prompting the user.',
  ' Screen sharing will fail if the following conditions are met:\n' +
    ' * The running instance of Chrome has not yet screen shared this session.\n' +
    ' * Chrome has updated.\n' +
    ' * Chrome has fallen out of a macOS system permission cache.\n' +
    ' If Chrome has access to capture the screen, take a screenshot of the whole\n' +
    ' screen. This will warm up the cache in the relevant processes. See\n' +
    ' https://crbug.com/1317690 for more information.'
]
quartz_util.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Calls +[CATransaction begin].',
  ' Calls +[CATransaction commit].'
]
remote_accessibility_api.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' NSAccessibilityRemoteUIElement is a private class in AppKit.',
  ' Helper functions to implement the above functions using std::vectors instead\n' +
    ' of NSData.'
]
remote_layer_api.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The CGSConnectionID is used to create the CAContext in the process that is\n' +
    ' going to share the CALayers that it is rendering to another process to\n' +
    ' display.',
  ' The CAContextID type identifies a CAContext across processes. This is the\n' +
    ' token that is passed from the process that is sharing the CALayer that it is\n' +
    ' rendering to the process that will be displaying that CALayer.',
  ' The CAContext has a static CAContextID which can be sent to another process.\n' +
    ' When a CALayerHost is created using that CAContextID in another process, the\n' +
    ' content displayed by that CALayerHost will be the content of the CALayer\n' +
    ' that is set as the |layer| property on the CAContext.',
  ' The CALayerHost is created in the process that will display the content\n' +
    ' being rendered by another process. Setting the |contextId| property on\n' +
    ' an object of this class will make this layer display the content of the\n' +
    ' CALayer that is set to the CAContext with that CAContextID in the layer\n' +
    ' sharing process.',
  ' This function will check if all of the interfaces listed above are supported\n' +
    ' on the system, and return true if they are.'
]
secure_password_input.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Enables the secure password input mode while in scope.'
]
text_services_context_menu.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is used to append and handle the Speech and BiDi submenu for the\n' +
    ' context menu.'
]
tool_tip_base_view.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An NSView that allows tooltip text to be set at the current mouse location.\n' +
    " It can take effect immediately, but won't appear unless the tooltip delay has\n" +
    ' elapsed.',
  ' Set the current tooltip. It is the responsibility of the caller to set a nil\n' +
    ' tooltip when the mouse cursor leaves the appropriate region.'
]
touch_bar_util.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a touch bar identifier with the given |id|.',
  ' Creates a touch Bar item identifier.'
]
tracking_area.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The CrTrackingArea can be used in place of an NSTrackingArea to shut off\n' +
    ' messaging to the |owner| at a specific point in time.',
  ' Designated initializer. Forwards all arguments to the superclass, but wraps\n' +
    ' |owner| in a proxy object.',
  ' Prevents any future messages from being delivered to the |owner|.',
  ' Scoper //////////////////////////////////////////////////////////////////////',
  ' Use an instance of this class to call |-clearOwner| on the |tracking_area_|\n' +
    ' when this goes out of scope.'
]
user_interface_item_command_handler.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used by CommandDispatchingWindow to implement NSUserInterfaceItemValidations\n' +
    ' for items with -commandDispatch: and -commandDispatchUsingKeyModifiers:.',
  ' Called by CommandDispatchingWindow to validate menu and toolbar items. All\n' +
    ' the items we care about have been set with the -commandDispatch or\n' +
    ' -commandDispatchUsingKeyModifiers selectors and a target of FirstResponder in\n' +
    " IB. If it's not one of those, it should be handled elsewhere in the responder\n" +
    ' chain.',
  ' Called by CommandDispatchingWindow to execute commands. This assumes that the\n' +
    " command is supported and doesn't check, otherwise it would have been disabled\n" +
    ' in the UI in validateUserInterfaceItem:.',
  ' Same as |-commandDispatch:|, but executes commands using a disposition\n' +
    ' determined by the key flags. If the window is in the background and the\n' +
    ' command key is down, ignore the command key, but process any other modifiers.'
]
views_hostable.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface that it used to stitch a content::WebContentsView into a\n' +
    ' views::View.\n' +
    ' TODO(ccameron): Move this to components/remote_cocoa.',
  ' The protocol through which an NSView indicates support for the\n' +
    ' ViewsHostableView interface.'
]
window_size_constants.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' It is not valid to make a zero-sized window. Use this constant instead.'
]
command_id_constants.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Starting command ID for showing an arbitrarily high (variable) number of\n' +
    ' items. NOTE: This id is shared with Chrome command IDs. Therefore, this ID\n' +
    ' must be greater than any bounding Chrome command ID.'
]
cursor.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ref-counted cursor that supports both default and custom cursors.'
]
cursor_factory.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cursor_size.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cursor_mojom_traits.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_cursor.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ref-counted base class for platform-specific cursors.\n' +
    ' Sub-classes of PlatformCursor are expected to wrap platform-specific cursor\n' +
    ' resources (e.g. HCURSOR on Windows). Those resources also have\n' +
    ' platform-specific deletion methods that must only be called once the last\n' +
    ' cursor is destroyed, thus requiring a ref-counted type.\n' +
    ' While default cursors (all other than kCustom in\n' +
    ' ui/base/cursor/cursor_type.mojom) are used often during any Chrome session\n' +
    ' and could perhaps be kept alive for the duration of the program, custom\n' +
    ' cursors might incur in high memory usage. Because of this, all types of\n' +
    ' cursors are expected to be ref-counted.'
]
data_transfer_endpoint.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' EndpointType can represent either the source of the transferred data or the\n' +
    ' destination trying to read the data.\n' +
    ' Whenever a new format is supported, a new enum should be added.',
  ' DataTransferEndpoint represents:\n' +
    ' - The source of the data being ransferred.\n' +
    ' - The destination trying to access the data.\n' +
    ' - Whether the user should see a notification if the data access is not\n' +
    ' allowed.\n' +
    ' Passing DataTransferEndpoint as a nullptr is equivalent to\n' +
    ' DataTransferEndpoint(kDefault, true). Both specify the same types of\n' +
    ' endpoints (not a URL/ARC++/...etc, and should show a notification to the user\n' +
    ' if the data read is not allowed.)'
]
data_transfer_endpoint_serializer.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The MIME Type chromium/x-data-transfer-endpoint holds metadata\n' +
    ' from DataTransferEndpoint objects. It is currently used as a\n' +
    ' communication medium to transfer information about clipboard sources.\n' +
    ' The MIME type data is a JSON string in the form:\n' +
    ' {\n' +
    '   "endpoint_type": "<endpoint type>",\n' +
    '   "url": "https://www.google.com"\n' +
    ' }',
  ' Encodes DataTransferEndpoints into a JSON string in the format as described\n' +
    ' above.',
  ' Decodes JSON strings into DataTransferEndpoint objects.\n' +
    ' If no type or url found, nullptr is returned.'
]
data_transfer_policy_controller.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The DataTransfer policy controller controls transferring data via\n' +
    ' drag-and-drop and clipboard read operations. It allows/disallows transferring\n' +
    ' the data given the source of the data and the destination trying to access\n' +
    ' the data and a set of rules controlling these source and destination.'
]
mock_data_transfer_policy_controller.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A mocked data transfer policy controller for testing.'
]
default_style.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file contains the constants that provide the default style for UI\n' +
    ' controls and dialogs.',
  ' Default font size delta for messages in dialogs. Note that on Windows, the\n' +
    ' "base" font size is determined by consulting the system for the font used in\n' +
    ' native MessageBox dialogs. On Mac, it is [NSFont systemFontSize]. Linux\n' +
    ' consults the default font description for a GTK Widget context. On ChromeOS,\n' +
    ' ui::ResourceBundle provides a description via IDS_UI_FONT_FAMILY_CROS.',
  ' Default font size delta for views::Badge.',
  ' Default font size delta for dialog buttons, textfields, and labels.\n' +
    ' For CR2023, prefer using views::style::STYLE_BODY_3 instead.',
  ' Font size delta for dialog titles.'
]
device_form_factor.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the form factor of current device. For platforms other than Android\n' +
    ' and iOS, DEVICE_FORM_FACTOR_DESKTOP is always returned.'
]
download_file_info.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Encapsulates the info about a file to be downloaded.'
]
download_file_interface.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines the interface to observe the status of file download.',
  ' Defines the interface to control how a file is downloaded.'
]
drag_drop_types.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drag_source_win.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A base IDropSource implementation. Handles notifications sent by an active\n' +
    ' drag-drop operation as the user mouses over other drop targets on their\n' +
    ' system. This object tells Windows whether or not the drag should continue,\n' +
    ' and supplies the appropriate cursors.'
]
drop_target_event.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Note: This object must not outlive the OSExchangeData used to construct it,\n' +
    ' as it stores that by reference.'
]
drop_target_win.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Windows interface.',
  ' A DropTarget implementation that takes care of the details of dnd. While\n' +
    ' this class is concrete, subclasses will most likely want to override various\n' +
    ' OnXXX methods.\n' +
    " Because DropTarget is ref counted you shouldn't delete it directly,\n" +
    ' rather wrap it in a scoped_refptr. Be sure and invoke RevokeDragDrop(m_hWnd)\n' +
    ' before the HWND is deleted too.\n' +
    ' This class is meant to be used in a STA and is not multithread-safe.'
]
os_exchange_data.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' OSExchangeData\n' +
    '  An object that holds interchange data to be sent out to OS services like\n' +
    '  clipboard, drag and drop, etc. This object exposes an API that clients can\n' +
    '  use to specify raw data and its high level type. This object takes care of\n' +
    '  translating that into something the OS can understand.\n' +
    '/////////////////////////////////////////////////////////////////////////////',
  ' NOTE: Support for html and file contents is required by TabContentViewWin.\n' +
    ' TabContentsViewGtk uses a different class to handle drag support that does\n' +
    ' not use OSExchangeData. As such, file contents and html support is only\n' +
    ' compiled on windows.'
]
os_exchange_data_provider.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Controls whether or not filenames should be converted to file: URLs when\n' +
    ' getting a URL.',
  ' Provider defines the platform specific part of OSExchangeData that\n' +
    ' interacts with the native system.'
]
os_exchange_data_provider_builder_mac.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " We can't include os_exchange_data_provider_mac.h from arbitrary C++ files\n" +
    ' because it depends on the Objective-C headers.'
]
os_exchange_data_provider_factory.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Builds platform specific OSExchangeDataProviders.'
]
os_exchange_data_provider_factory_ozone.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Builds platform specific OSExchangeDataProviders.'
]
os_exchange_data_provider_mac.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' OSExchangeDataProvider implementation for Mac.'
]
os_exchange_data_provider_non_backed.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Simple OSExchangeDataProvider implementation for aura-based ports with no\n' +
    ' actual platform integration. So data managed by this class is exchangeable\n' +
    ' only among Chromium windows and is available only while it is alive.'
]
os_exchange_data_provider_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
emoji_panel_helper.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns whether showing the Emoji Panel is supported on this version of\n' +
    ' the operating system.',
  ' Invokes the commands to show the Emoji Panel.',
  ' Invokes the commands to show the Emoji Panel in tablet mode (ChromeOS only).',
  ' Show the emoji picker pre scrolled to a specific category',
  ' Sets a callback to show the emoji panel (ChromeOS only).',
  ' Sets a callback to show the emoji panel in tablet mode (ChromeOS only).'
]
fullscreen_win.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if the active window is running in fullscreen mode.'
]
glib_cast.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
glib_integers.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' GLib/GObject/Gtk all use their own integer typedefs. They are copied here\n' +
    " for forward declaration reasons so we don't pull in all of glib/gtypes.h\n" +
    ' when we just need a gpointer.'
]
scoped_gobject.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Similar to a scoped_refptr for GObject types.',
  " Create a ScopedGObject and do not increase the GObject's reference count.\n" +
    ' This is usually used to reference a newly-created GObject, which are created\n' +
    ' with a reference count of 1 by default.',
  " Create a ScopedGObject and increase the GObject's reference count by 1.\n" +
    ' This is usually used to reference an existing GObject.'
]
scoped_gsignal.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ScopedGSignal manages the lifecycle of a GLib signal connection.\n' +
    ' It disconnects the signal when this object is destroyed or goes out of scope.\n' +
    ' This class should be used on a single sequence.'
]
hit_test.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Define the HT* values so that this header can be included whether or not\n' +
    ' windows.h has been included. The definitions must exactly match to avoid\n' +
    ' redefinition errors when compiling source files which also include windows.h.\n' +
    ' Those source files conveniently provide a check that these values match.\n' +
    ' windows.h is not included here because of the namespace pollution it causes.',
  ' Defines the same symbolic names used by the WM_NCHITTEST Notification under\n' +
    ' win32 (the integer values are not guaranteed to be equivalent). We do this\n' +
    ' because we have a whole bunch of code that deals with window resizing and\n' +
    ' such that requires these values.',
  ' Returns true if the |component| is for resizing, like HTTOP or HTBOTTOM.',
  ' Returns true if the |component| is HTCAPTION or one of the resizing\n' +
    ' components.'
]
idle.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' For MacOSX, InitIdleMonitor needs to be called first to setup the monitor.',
  ' Calculate the Idle state. |idle_threshold| is the amount of time (in seconds)\n' +
    ' before the user is considered idle.',
  ' Calculate Idle time in seconds.',
  ' Checks synchronously if Idle state is IDLE_STATE_LOCKED.'
]
idle_internal.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An optional idle state set by tests via a ScopedSetIdleState to override the\n' +
    ' actual idle state of the system.'
]
idle_polling_service.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Polls the system to determine whether the user is idle or the screen is\n' +
    ' locked and notifies observers.'
]
idle_time_provider.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Provides an interface for querying a user's idle time and screen state."
]
scoped_set_idle_state.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
component_extension_ime_manager.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents an engine in component extension IME.',
  ' Represents a component extension IME.',
  ' This class manages component extension input method.'
]
component_extension_ime_manager_delegate.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides an interface to list/load/unload for component extension IME.'
]
extension_ime_util.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Extension IME related utilities.',
  ' Extension id, path (relative to |chrome::DIR_RESOURCES|) and IME engine\n' +
    ' id for the builtin-in Braille IME extension.',
  ' The fake language name used for ARC IMEs.',
  ' Returns InputMethodID for |engine_id| in |extension_id| of extension IME.\n' +
    ' This function does not check |extension_id| is installed extension IME nor\n' +
    ' |engine_id| is really a member of |extension_id|.',
  ' Returns InputMethodID for |engine_id| in |extension_id| of component\n' +
    ' extension IME, This function does not check |extension_id| is component one\n' +
    ' nor |engine_id| is really a member of |extension_id|.',
  ' Returns InputMethodID for |engine_id| in |extension_id| of ARC IME.\n' +
    ' This function does not check |extension_id| is one for ARC IME nor\n' +
    ' |engine_id| is really an installed ARC IME.',
  ' Returns extension ID if |input_method_id| is extension IME ID or component\n' +
    ' extension IME ID. Otherwise returns an empty string ("").',
  ' Returns InputMethodID from engine id (e.g. xkb:fr:fra), or returns itself if\n' +
    ' the |engine_id| is not a known engine id.\n' +
    ' The caller must make sure the |engine_id| is from system input methods\n' +
    ' instead of 3rd party input methods.',
  ' Returns true if |input_method_id| is extension IME ID. This function does not\n' +
    ' check |input_method_id| is installed extension IME.',
  ' Returns true if |input_method_id| is component extension IME ID. This\n' +
    ' function does not check |input_method_id| is really allowlisted one or not.\n' +
    ' If you want to check |input_method_id| is allowlisted component extension\n' +
    ' IME, please use ComponentExtensionIMEManager::Isallowlisted instead.',
  ' Returns true if |input_method_id| is a Arc IME ID. This function does not\n' +
    ' check |input_method_id| is really a installed Arc IME.',
  ' Returns true if the |input_method_id| is the extension based xkb keyboard,\n' +
    ' otherwise returns false.',
  ' Returns input method component id from the extension-based InputMethodID\n' +
    ' for component IME extensions. This function does not check that\n' +
    ' |input_method_id| is installed.',
  ' Only used when ash::features::kImeKoreanModeSwitchDebug flag is enabled.\n' +
    ' TODO(b/302460634): Remove when no longer needed.'
]
fake_ime_keyboard.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fake_input_method_delegate.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ime_assistive_window_handler_interface.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Contains bounds for windows controlled by handler.',
  ' A interface to handle the assistive windows related method call.'
]
ime_bridge.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' IMEBridge provides access of each IME related handler. This class\n' +
    ' is used for IME implementation.'
]
ime_bridge_observer.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A interface to observe changes in the IMEBridge.'
]
ime_candidate_window_handler_interface.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A interface to handle the candidate window related method call.'
]
ime_keyboard.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ime_keyboard_impl.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Version of ImeKeyboard used when chrome is run on device.'
]
ime_keymap.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Translates the DOM4 key code string to ui::KeyboardCode.',
  ' Translates the ui::KeyboardCode to DOM4 key code string.'
]
ime_keyset.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used by the virtual keyboard to represent different key layouts for\n' +
    " different purposes. 'kNone' represents the default key layout.\n" +
    ' Used in UMA, so this enum should not be reordered.'
]
input_method_ash.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A `ui::InputMethod` implementation for Ash.'
]
input_method_delegate.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides access to read/persist Input Method-related properties.'
]
input_method_descriptor.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A structure which represents an input method.'
]
input_method_manager.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class manages input methods handles. Classes can add themselves as\n' +
    ' observers. Clients can get an instance of this library class by:\n' +
    ' InputMethodManager::Get().'
]
input_method_ukm.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Records an event in UKM, under the InputMethod.NonCompliantApi metric.\n' +
    ' Ignores invalid sources.',
  ' Records an event in UKM, under the InputMethod.Assistive.Match metric.\n' +
    ' Ignores invalid sources.\n' +
    ' `type` is a value in the chromeos.AssistiveType enum.'
]
input_method_util.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Map from language code to associated input method IDs, etc.',
  ' A class which provides miscellaneous input method utility functions.'
]
mock_component_extension_ime_manager.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_component_extension_ime_manager_delegate.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_ime_candidate_window_handler.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_ime_engine_handler.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_ime_input_context_handler.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_input_method_manager.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The mock InputMethodManager for testing.'
]
mock_input_method_manager_impl.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The mock implementation of InputMethodManager for testing.'
]
text_input_method.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface representing an input method that can read and manipulate text\n' +
    ' in a TextInputTarget. For example, this can represent a Japanese input method\n' +
    ' that can compose and insert Japanese characters into a TextInputTarget.'
]
text_input_target.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface representing an input target that supports text editing via a\n' +
    ' TextInputMethod. Applications like Chrome browser, Android apps, Linux apps\n' +
    ' should all implement this interface in order to support TextInputMethods.\n' +
    ' All strings related to IME operations should be UTF-16 encoded and all\n' +
    ' indices/ranges relative to those strings should be UTF-16 code units.'
]
typing_session_manager.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
autocorrect_info.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents autocorrection.'
]
candidate_window.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' CandidateWindow represents the structure of candidates generated from IME.'
]
character_composer.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class to recognize compose and dead key sequence.\n' +
    ' Outputs composed character.',
  ' Abstract class for determining whether a ComposeBuffer forms a valid\n' +
    ' character composition sequence.',
  ' Implementation of |ComposeChecker| using a compact generated tree.'
]
character_composer_data.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' DO NOT EDIT.\n' +
    '   GENERATED BY generate_character_composer_data.py\n' +
    '   FROM character_composer_sequences.txt'
]
composition_text.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A struct represents the status of an ongoing composition text.'
]
constants.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The name of the property that is attach to the key event and indicates\n' +
    ' whether it was from the virtual keyboard.\n' +
    ' This is used where the key event is simulated by the virtual keyboard\n' +
    ' (e.g. IME extension API) as well as the input field implementation (e.g.\n' +
    ' Textfield).',
  ' kPropertyFromVKIsMirroringIndex is an index into kPropertyFromVK\n' +
    ' and is used when the key event occurs when mirroring is detected.'
]
dummy_input_method.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dummy_text_input_client.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Dummy implementation of TextInputClient. All functions do nothing.\n' +
    ' TODO(crbug.com/1277388): Replace this class with FakeTextInputClient.'
]
events.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Gets and sets whether the key event should be autorepeated or not.'
]
fake_text_input_client.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Fake in-memory implementation of TextInputClient used for testing.\n' +
    " This class should act as a 'reference implementation' for TextInputClient."
]
input_method_fuchsia.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Handles input from physical keyboards and the IME service.'
]
keyboard_client.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Handles keyboard events from the Fuchsia keyboard service.'
]
virtual_keyboard_controller_fuchsia.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manages visibility of the onscreen keyboard.'
]
grammar_fragment.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A struct represents a fragment of grammar edit suggestion.'
]
ime_key_event_dispatcher.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by the object that handles key events sent from an\n' +
    ' ui::InputMethod.'
]
ime_text_span.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
infolist_entry.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The data model of infolist window.'
]
input_method_factory.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a new instance of InputMethod and returns it.',
  ' Makes CreateInputMethod return a MockInputMethod.'
]
input_method_initializer.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Initializes thread-local resources for input method. This function should be\n' +
    ' called in the UI thread before input method is used.',
  ' Shutdown thread-local resources for input method. This function should be\n' +
    ' called in the UI thread after input method is used.',
  ' Initializes thread-local resources for input method. This function is\n' +
    ' intended to be called from Setup function of unit tests.',
  ' Initializes thread-local resources for input method. This function is\n' +
    ' intended to be called from TearDown function of unit tests.'
]
input_method.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by an object that encapsulates a native input method\n' +
    ' service provided by the underlying operating system, and acts as a "system\n' +
    ' wide" input method for all Chrome windows. A class that implements this\n' +
    ' interface should behave as follows:\n' +
    ' - Receives a keyboard event directly from a message dispatcher for the\n' +
    '   system through the InputMethod::DispatchKeyEvent API, and forwards it to\n' +
    '   an underlying input method for the OS.\n' +
    ' - The input method should handle the key event either of the following ways:\n' +
    '   1) Send the original key down event to the focused window, which is e.g.\n' +
    '      a NativeWidgetAura (NWA) or a RenderWidgetHostViewAura (RWHVA), using\n' +
    '      ImeKeyEventDispatcher API, then send a Char event using\n' +
    '      TextInputClient::InsertChar API to a text input client, which is, again,\n' +
    '      e.g. NWA or RWHVA, and then send the original key up event to the same\n' +
    '      window.\n' +
    '   2) Send VKEY_PROCESSKEY event to the window using the DispatchKeyEvent API,\n' +
    '      then update IME status (e.g. composition text) using TextInputClient,\n' +
    '      and then send the original key up event to the window.\n' +
    ' - Keeps track of the focused TextInputClient to see which client can call\n' +
    '   APIs, OnTextInputTypeChanged, OnCaretBoundsChanged, and CancelComposition,\n' +
    '   that change the state of the input method.\n' +
    ' In Aura environment, aura::WindowTreeHost creates an instance of\n' +
    ' ui::InputMethod and owns it.'
]
input_method_base.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A helper class providing functionalities shared among ui::InputMethod\n' +
    ' implementations.'
]
input_method_minimal.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A minimal implementation of ui::InputMethod, which supports only the direct\n' +
    ' input without any compositions or conversions.'
]
input_method_observer.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
composition_text_util_pango.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Extracts composition text information (text, underlines, selection range)\n' +
    ' from given Gtk preedit data (utf-8 text, pango attributes, cursor position).'
]
fake_input_method_context.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A fake implementation of LinuxInputMethodContext, which does nothing.'
]
input_method_auralinux.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A ui::InputMethod implementation for Aura on Linux platforms. The\n' +
    ' implementation details are separated to ui::LinuxInputMethodContext\n' +
    ' interface.'
]
linux_input_method_context.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface of input method context for input method frameworks on\n' +
    ' GNU/Linux and likes.',
  ' An interface of callback functions called from LinuxInputMethodContext.'
]
linux_input_method_context_factory.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Callers may set the returned reference to set the factory.',
  ' The test context factory has higher precedence than the ozone factory.',
  ' Returns a platform specific input method context.'
]
text_edit_command_auralinux.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents a command that performs a specific operation on text.\n' +
    ' Copy and assignment are explicitly allowed; these objects live in vectors.'
]
input_method_mac.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A ui::InputMethod implementation for Mac.\n' +
    " On the Mac, key events don't pass through InputMethod.\n" +
    ' Instead, NSTextInputClient calls are bridged to the currently focused\n' +
    ' ui::TextInputClient object.'
]
mock_input_method.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A mock ui::InputMethod implementation for testing. You can get the instance\n' +
    ' of this class as the global input method with calling\n' +
    ' SetUpInputMethodFactoryForTesting() which is declared in\n' +
    ' ui/base/ime/init/input_method_factory.h'
]
ime_types_mojom_traits.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
text_edit_command_mojom_traits.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
surrounding_text_tracker.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tracks the surrounding text. Because IMF works in an asynchronous manner,\n' +
    ' there will be timing gap that IM-Engine sends some request to the text input\n' +
    ' client, and the commit is actually notified.\n' +
    ' This class gives it a try to fill the gap by caching and emulating the\n' +
    ' latest surrounding text under the assumption that text editing requests are\n' +
    ' processed in a common manner.'
]
text_edit_commands.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Text editing commands for use by ui::TextInputClient.\n' +
    ' Declares named values for each of the text edit commands.'
]
text_input_action.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This mode corresponds to enterkeyhint\n' +
    ' https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-enterkeyhint-attribute\n' +
    ' A Java counterpart will be generated for this enum.\n' +
    ' GENERATED_JAVA_ENUM_PACKAGE: org.chromium.ui.base.ime'
]
text_input_client.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by a View that needs text input support.\n' +
    ' All strings related to IME operations should be UTF-16 encoded and all\n' +
    ' indices/ranges relative to those strings should be UTF-16 code units.'
]
text_input_flags.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Intentionally keep in sync with blink::WebTextInputFlags defined in:\n' +
    ' third_party/blink/public/platform/web_text_input_type.h'
]
text_input_mode.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This mode corrensponds to inputmode\n' +
    ' http://www.whatwg.org/specs/web-apps/current-work/#attr-fe-inputmode'
]
text_input_type.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TextInputType is the enum type representing every type of text input fields.\n' +
    ' TextInputType should include all types defined in blink::WebTextInputType\n' +
    ' defined in: third_party/WebKit/public/platform/WebTextInputType.h\n' +
    ' A Java counterpart will be generated for this enum.\n' +
    ' GENERATED_JAVA_ENUM_PACKAGE: org.chromium.ui.base.ime'
]
utf_offset.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Given UTF8 string and its valid offset, returns the offset in UTF16.\n' +
    ' Returns nullopt if the given offset is invalid (not at a valid boundary\n' +
    ' or out of range).',
  ' Given UTF16 string and its valid offset, returns the offset in UTF8.\n' +
    ' Returns nullopt if the given offset is invalid (not at a valid boundary\n' +
    ' or out of range).'
]
virtual_keyboard_controller.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class provides functionality to display the on screen keyboard and\n' +
    ' add observers to observe changes in it.'
]
virtual_keyboard_controller_observer.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This observer class provides a method to observe on screen\n' +
    ' keyboard changes.'
]
virtual_keyboard_controller_stub.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(aluh): Rename to fake.\n' +
    ' This class provides a fake VirtualKeyboardController with minimal behavior.'
]
input_method_win_base.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A common InputMethod base implementation for Windows.'
]
input_method_win_tsf.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An InputMethod implementation based on Windows TSF API.'
]
mock_tsf_bridge.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
on_screen_keyboard_display_manager_input_pane.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class provides an implementation of the OnScreenKeyboardDisplayManager\n' +
    ' that uses InputPane which is available on Windows >= 10.0.10240.0.'
]
on_screen_keyboard_display_manager_tab_tip.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class provides an implementation of the VirtualKeyboardController\n' +
    ' that uses heuristics and the TabTip.exe to display the on screen keyboard.\n' +
    ' Used on Windows > 7 and Windows < 10.0.10240.0'
]
tsf_bridge.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TSFBridge provides high level IME related operations on top of Text Services\n' +
    ' Framework (TSF). TSFBridge is managed by TLS because TSF related stuff is\n' +
    ' associated with each thread and not allowed to access across thread boundary.\n' +
    ' To be consistent with IMM32 behavior, TSFBridge is shared in the same thread.\n' +
    ' TSFBridge is used by the web content text inputting field, for example\n' +
    ' DisableIME() should be called if a password field is focused.\n' +
    ' TSFBridge also manages connectivity between TSFTextStore which is the backend\n' +
    ' of text inputting and current focused TextInputClient.\n' +
    ' All methods in this class must be used in UI thread.'
]
tsf_event_router.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class monitors TSF related events and forwards them to given\n' +
    ' |observer|.'
]
tsf_input_scope.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns InputScope list corresoponding to ui::TextInputType and\n' +
    ' ui::TextInputMode.\n' +
    ' This function is only used from following functions but declared for test.',
  ' Returns an instance of ITfInputScope, which is the Windows-specific\n' +
    ' category representation corresponding to ui::TextInputType and\n' +
    ' ui::TextInputMode that we are using to specify the expected text type\n' +
    ' in the target field.\n' +
    ' The returned instance has 0 reference count. The caller must maintain its\n' +
    ' reference count.',
  ' A wrapper of the SetInputScope API exported by msctf.dll.'
]
tsf_text_store.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' d5138268-a1bf-4308-bcbf-2e739398e234\n' +
    ' Bootstrap the definition of the GUID for the URL property which\n' +
    ' will be defined in the windows SDK.\n' +
    ' https://docs.microsoft.com/en-us/windows/win32/tsf/predefined-properties',
  ' TSFTextStore is used to interact with the input method via TSF manager.\n' +
    ' TSFTextStore have a string buffer which is manipulated by TSF manager through\n' +
    ' ITextStoreACP interface methods such as SetText().\n' +
    ' When the input method updates the composition, TSFTextStore calls\n' +
    ' TextInputClient::SetCompositionText(). And when the input method finishes the\n' +
    ' composition, TSFTextStore calls TextInputClient::InsertText().\n' +
    ' How TSFTextStore works:\n' +
    '  - Assume the document is empty and in focus.\n' +
    '  - The user enters "a".\n' +
    '    - The input method set composition as "a".\n' +
    '    - TSF manager calls TSFTextStore::RequestLock().\n' +
    '    - TSFTextStore callbacks ITextStoreACPSink::OnLockGranted().\n' +
    '    - In OnLockGranted(), TSF manager calls\n' +
    '      - TSFTextStore::OnStartComposition()\n' +
    '      - TSFTextStore::SetText()\n' +
    '        The pending string buffer is set as "a".\n' +
    '        The document whole buffer is set as "a".\n' +
    '      - TSFTextStore::OnUpdateComposition()\n' +
    '      - TSFTextStore::OnEndEdit()\n' +
    '        TSFTextStore can get the composition information such as underlines.\n' +
    '   - TSFTextStore calls TextInputClient::SetCompositionText().\n' +
    '     "a" is shown with an underline as composition string.\n' +
    " - The user enters 'b'.\n" +
    '    - The input method set composition as "ab".\n' +
    '    - TSF manager calls TSFTextStore::RequestLock().\n' +
    '    - TSFTextStore callbacks ITextStoreACPSink::OnLockGranted().\n' +
    '    - In OnLockGranted(), TSF manager calls\n' +
    '      - TSFTextStore::SetText()\n' +
    '        The pending string buffer is set as "b".\n' +
    '        The document whole buffer is changed to "ab".\n' +
    '      - TSFTextStore::OnUpdateComposition()\n' +
    '      - TSFTextStore::OnEndEdit()\n' +
    '   - TSFTextStore calls TextInputClient::SetCompositionText().\n' +
    '     "ab" is shown with an underline as composition string.\n' +
    ' - The user enters <space>.\n' +
    '    - The input method set composition as "aB".\n' +
    '    - TSF manager calls TSFTextStore::RequestLock().\n' +
    '    - TSFTextStore callbacks ITextStoreACPSink::OnLockGranted().\n' +
    '    - In OnLockGranted(), TSF manager calls\n' +
    '      - TSFTextStore::SetText()\n' +
    '        The pending string buffer is set as "B".\n' +
    '        The document whole buffer is changed to "aB".\n' +
    '      - TSFTextStore::OnUpdateComposition()\n' +
    '      - TSFTextStore::OnEndEdit()\n' +
    '   - TSFTextStore calls TextInputClient::SetCompositionText().\n' +
    '     "aB" is shown with an underline as composition string.\n' +
    ' - The user enters <enter>.\n' +
    '    - The input method commits "aB".\n' +
    '    - TSF manager calls TSFTextStore::RequestLock().\n' +
    '    - TSFTextStore callbacks ITextStoreACPSink::OnLockGranted().\n' +
    '    - In OnLockGranted(), TSF manager calls\n' +
    '      - TSFTextStore::OnEndComposition()\n' +
    '      - TSFTextStore::OnEndEdit()\n' +
    '        TSFTextStore knows "aB" is committed.\n' +
    '   - TSFTextStore calls TextInputClient::InsertText().\n' +
    '     "aB" is shown as committed string.\n' +
    '   - TSFTextStore clears the pending string buffer.\n' +
    '   - TSFTextStore verified if the document whole buffer is the same as the\n' +
    '     buffer returned from TextInputClient. If the buffer is different, then\n' +
    '     call OnSelectionChange(), OnLayoutChange() and\n' +
    '     OnTextChange() of ITextStoreACPSink to let TSF manager know that the\n' +
    '     string buffer has been changed other than IME.\n' +
    ' About the locking scheme:\n' +
    ' When TSF manager manipulates the string buffer it calls RequestLock() to get\n' +
    ' the lock of the document. If TSFTextStore can grant the lock request, it\n' +
    ' callbacks ITextStoreACPSink::OnLockGranted().\n' +
    ' RequestLock() is called from only one thread, but called recursively in\n' +
    ' OnLockGranted() or OnSelectionChange() or OnLayoutChange() or OnTextChange().\n' +
    ' If the document is locked and the lock request is asynchronous, TSFTextStore\n' +
    ' queues the request. The queued requests will be handled after the current\n' +
    ' lock is removed.\n' +
    ' More information about document locks can be found here:\n' +
    '   http://msdn.microsoft.com/en-us/library/ms538064\n' +
    ' More information about TSF can be found here:\n' +
    '   http://msdn.microsoft.com/en-us/library/ms629032'
]
virtual_keyboard_debounce_timer.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class debounces a method call to the on-screen keyboard show/hide.\n' +
    ' This is used to throttle the TryShow/TryHide system API calls to OS and it\n' +
    " doesn't introduce a strong guarantee about the keyboard visibility itself as\n" +
    ' that is ultimately controlled by the OS input service.'
]
element_identifier.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Overview:\n' +
    ' ElementIdentifier provides a named opaque value that can be used to identify\n' +
    ' individual (or potentially groups of) elements in the UI.\n' +
    ' Unique identifier constants must be both declared and defined. To create a\n' +
    ' publicly-visible identifier, declare a new unique value in your .h file,\n' +
    ' with the following; the string name of the identifier will be the same as\n' +
    " the identifier's C++ identifier (in this case, kMyIdentifierName):\n" +
    '   DECLARE_ELEMENT_IDENTIFIER_VALUE(kMyIdentifierName);\n' +
    ' If the identifier should be exported, declare it with the following instead:\n' +
    '   DECLARE_EXPORTED_ELEMENT_IDENTIFIER_VALUE(MY_EXPORT, kMyIdentifierName);\n' +
    ' Regardless of whether the declared identifier is exported or not, make sure\n' +
    ' it is defined in the corresponding .cc file:\n' +
    '   DEFINE_ELEMENT_IDENTIFIER_VALUE(kMyIdentifierName);\n' +
    ' If you want to add an identifier as a class member, use the following; the\n' +
    ' string name of the identifier will be in the form\n' +
    ' "MyClass::kMyIdentifierName":\n' +
    '   class MyClass {\n' +
    '     DECLARE_CLASS_ELEMENT_IDENTIFIER_VALUE(kMyIdentifierName);\n' +
    '   };\n' +
    ' Then in the corresponding .cc file, add the following:\n' +
    '   DEFINE_CLASS_ELEMENT_IDENTIFIER_VALUE(MyClass, kMyIdentifierValue);\n' +
    ' If you want to create an identifier local to a .cc file or to a method, you\n' +
    ' can instead use the following all-in-one declaration. Note that this is only\n' +
    ' really useful in tests and that the resulting identifier name is mangled\n' +
    ' with the file and line number:\n' +
    '   DEFINE_LOCAL_ELEMENT_IDENTIFIER_VALUE(kMyIdentifierName);\n' +
    " That's it! You can now initialize an ElementIdentifier using this value, or\n" +
    ' pass it directly to a method:\n' +
    '   ElementIdentifier my_id = kMyIdentifierName;\n' +
    '   ElementIdentifier my_id2 = my_id;\n' +
    '   MyFuncThatTakesAnIdentifier(kMyIdentifierName);\n' +
    '   MyFuncThatTakesAnIdentifier(my_id2);\n' +
    ' ElementIdentifier behaves more or less like other mutable primitive types; it\n' +
    ' is default-constructable (producing a null value) and supports the ==, !=, <,\n' +
    ' !, and (bool) operators as well as assignment and copy [1]. This means you\n' +
    ' can use ElementIdentifier as a key in std::set and std::map, and it is safe\n' +
    ' to use in both DCHECK and test assertions:\n' +
    '   ElementIdentifier id1;\n' +
    '   ElementIdentifier id2 = kMyIdentifierName;\n' +
    '   std::map<ElementIdentifier, int> map;\n' +
    '   map.emplace(id2, 4);\n' +
    '   DCHECK(!id1);\n' +
    '   EXPECT_TRUE(static_cast<bool>(id2));\n' +
    '   DCHECK_NE(id1, id2);\n' +
    '   EXPECT_FALSE(base::Contains(map, id1));\n' +
    '   ASSERT_EQ(4, map[id2]);\n' +
    ' -----\n' +
    ' [1] Please note that while operator < will provide a strict ordering, the\n' +
    '   specific order of two ElementIdentifier constants may vary by build and\n' +
    '   should not be relied upon; operator < is only provided for compatibility\n' +
    '   with sorted STL containers.',
  ' Defines the underlying value that an ElementIdentifier holds (namely, the\n' +
    ' address of an instance of this class). Because these objects are only\n' +
    ' declared statically, the value of an ElementIdentifier is always valid and\n' +
    ' two ElementIdentifiers are equal if and only if they hold the address of the\n' +
    ' same instance of this class.\n' +
    ' Instances of this object are named for debugging/logging purposes only, the\n' +
    ' value of name() should never be used for any other purpose.',
  ' Holds a globally-unique, value-typed identifier from a set of identifiers\n' +
    ' which can be declared in any static scope.\n' +
    ' This type is comparable and supports operator bool and negation, where\n' +
    ' default-constructed instances have false value and all other values evaluate\n' +
    ' as true. It can also be used as the key in std::set, std::map, and similar\n' +
    ' collections.',
  ' The context of an element is unique to the top-level, primary window that the\n' +
    ' element is associated with. Elements in secondary UI (bubbles, menus,\n' +
    ' drop-downs, etc.) will be associated with the same context as elements in the\n' +
    ' primary window itself.\n' +
    ' The value used should be consistent across a toolkit and unique between\n' +
    ' primary windows; a memory address or handle of the window object can\n' +
    " typically be used (e.g. in Views, we use the address of the primary window's\n" +
    ' Widget). A zero or null value should always correspond to "no context".\n' +
    ' Please note that you must consistently use the same pointer or handle type\n' +
    ' across your framework when creating contexts; because of the vagaries of C++\n' +
    ' up- and down-casting (especially with multiple inheritance) constructing an\n' +
    ' ElementContext from different pointer types can produce different results,\n' +
    ' even for the same underlying object.\n' +
    ' ElementContext objects are assignable, have boolean value based on whether\n' +
    ' the underlying value is null, and support operator < for use in maps and\n' +
    ' sets.',
  ' Required for interoperability with PropertyHandler.',
  ' Declaring identifiers outside a scope:\n' +
    ' Note: if you need to use the identifier outside the current component, use\n' +
    ' DECLARE/DEFINE_EXPORTED_... below.',
  ' Use this code in the .h file to declare a new identifier.',
  ' Use this code in the .cc file to define a new identifier.',
  ' Declaring identifiers that can be used in other components:\n' +
    ' Note: unlike other declarations, this identifier will not be constexpr in\n' +
    ' most cases.',
  ' Use this code in the .h file to declare a new exported identifier.',
  ' Use this code in the .cc file to define a new exported identifier.',
  ' Declaring identifiers in a class:',
  ' Use this code in your class declaration in its .h file to declare an\n' +
    ' identifier that is scoped to your class.',
  ' Use this code in your class definition .cc file to define the member\n' +
    ' variables',
  ' Declaring local identifiers in functions, class methods, or local to a .cc\n' +
    ' file (often used in tests). File and line are included to guarantee that the\n' +
    ' text of the name generated is unique, though that makes the exact text\n' +
    ' harder to predict.',
  ' This helper macro is required because of how __LINE__ is handled when passed\n' +
    ' between macros, you need an intermediate macro in order to stringify it.\n' +
    ' DO NOT CALL DIRECTLY; used by DEFINE_LOCAL_ELEMENT_IDENTIFIER_VALUE().',
  ' Use this code to declare a local identifier from within a macro; you should\n' +
    ' pass the __FILE__ and __LINE__ values for `File` and `Line`. The name will be\n' +
    ' mangled with the file and line so that it can be used in local or module\n' +
    ' scope (typically in tests) without having to worry about name collisions.',
  ' Use this code to declare a local identifier in a function body or module\n' +
    ' scope. The name will be mangled with the file and line so that it can be used\n' +
    ' (typically in tests) without having to worry about name collisions.'
]
element_test_util.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides a platform-less pseudoelement for use in ElementTracker and\n' +
    ' InteractionSequence tests.',
  ' Provides a platform-less test element in a fictional UI framework.',
  ' Provides a platform-less test element in a fictional UI framework distinct\n' +
    ' from `TestElement`.',
  ' Convenience typedef for unique pointers to test elements.'
]
element_tracker.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents a unique type of event, you may create these as needed using the\n' +
    ' DECLARE_CUSTOM_ELEMENT_EVENT_TYPE() and DEFINE_CUSTOM_ELEMENT_EVENT_TYPE()\n' +
    ' macros (see definitions at the bottom of this file).\n' +
    ' For testing purposes, if you need a local event type guaranteed to avoid\n' +
    ' global name collisions, use DEFINE_LOCAL_ELEMENT_EVENT_TYPE() instead.\n' +
    ' Currently, custom event types are imlpemented using ElementIdentifier, since\n' +
    ' both have the same API requirements.',
  ' Represents a visible UI element in a platform-agnostic manner.\n' +
    ' A pointer to this object may be stored after the element becomes visible, but\n' +
    ' is only valid until the "element hidden" event is called for this element;\n' +
    ' see `ElementTracker` below. If you want to hold a pointer that will be valid\n' +
    ' only as long as the element is visible, use a SafeElementReference.\n' +
    ' You should derive a class for each UI framework whose elements you wish to\n' +
    ' track. See README.md for information on how to create your own framework\n' +
    ' implementations.',
  ' Provides a delegate for UI framework-specific implementations to notify of\n' +
    ' element tracker events.\n' +
    ' An element must be visible before events can be sent for that element;\n' +
    ' NotifyElementHidden() must be called before the element is destroyed or\n' +
    ' changes context or identifier.',
  ' Tracks elements as they become visible, are activated by the user, and\n' +
    ' eventually become hidden. Tracks only visible elements.\n' +
    ' NOT THREAD SAFE. Should only be accessed from the main UI thread.',
  ' Holds an TrackedElement reference and nulls it out if the element goes\n' +
    ' away. In other words, acts as a weak reference for TrackedElements.',
  ' Macros for declaring custom element event types. Put the DECLARE call in\n' +
    ' your public header file and the DEFINE in corresponding .cc file. For local\n' +
    ' values to be used in tests, use DEFINE_LOCAL_CUSTOM_ELEMENT_EVENT_TYPE()\n' +
    ' defined below instead.\n' +
    ' Note: if you need to use the identifier outside the current component, use\n' +
    ' DECLARE/DEFINE_EXPORTED_... below.',
  ' Macros for declaring custom element event types that can be accessed in other\n' +
    ' components. Put the DECLARE call in your public header file and the DEFINE\n' +
    ' call in the corresponding .cc file.',
  ' Macros for declaring custom class element event type. Put the DECLARE call in\n' +
    ' your .h file in your class declaration, and the DEFINE in the corresponding\n' +
    ' .cc file.',
  ' This produces a unique, mangled name that can safely be used in macros called\n' +
    ' by tests without having to worry about global name collisions. For production\n' +
    ' code, use DECLARE/DEFINE above instead. You should pass __FILE__ and __LINE__\n' +
    ' for `File`, and `Line`, respectively.',
  ' This produces a unique, mangled name that can safely be used in tests\n' +
    ' without having to worry about global name collisions. For production code,\n' +
    ' use DECLARE/DEFINE above instead.'
]
element_tracker_mac.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tracked element representing a native Mac visual element (typically a menu or\n' +
    ' menu item, since we use Views for everything else).',
  ' Helper class for translating between Mac visual elements and TrackedElements.\n' +
    ' Largely used to track native menus and menu items, as almost all other\n' +
    ' surfaces are rendered using Views.'
]
expect_call_in_scope.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(dfried): move this code to base/test.',
  ' Declares a MockCallback that will cause the current test to fail if called\n' +
    ' before the first EXPECT_CALL or EXPECT_CALL_IN_SCOPE (see below).',
  ' Requires that a specific base::MockCallback is called inside a specific block\n' +
    ' of code, or the current test will fail. `Block` may be a single statement or\n' +
    ' a block of code enclosed in {}.\n' +
    ' Syntax for the first two arguments is the same as EXPECT_CALL().',
  ' As EXPECT_CALL_IN_SCOPE but expects `Name1` and `Name2` to be called in order\n' +
    ' in the specified `Block`.',
  ' As EXPECT_CALL_IN_SCOPE but expects `Name1`, `Name2`, and `Name3` to be\n' +
    ' called in order in the specified `Block`.'
]
framework_specific_implementation.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents a type that has different implementations in different frameworks.\n' +
    ' This provides a very simple RTTI implementation so that we can retrieve\n' +
    ' platform-specific implementations from platform-agnostic systems (such as\n' +
    ' ElementTracker).\n' +
    ' To use this class, implement a base class for your implementations:\n' +
    '   class ThingBase : public FrameworkSpecificImplementation {\n' +
    '     ~ThingBase() override;  // optional, include if class has local data\n' +
    '     // <-- common implementation here\n' +
    '   };\n' +
    ' Then, in your framework-specific .h file:\n' +
    '   class ThingInMyFramework : public ThingBase {\n' +
    '    public:\n' +
    '     ~ThingInMyFramework() override;\n' +
    '     DECLARE_FRAMEWORK_SPECIFIC_METADATA()\n' +
    '   };\n' +
    ' In the corresponding .cc file:\n' +
    '   DEFINE_FRAMEWORK_SPECIFIC_METADATA(ThingInMyFramework)\n' +
    ' For factory classes or other singleton-type classes that need to be listed\n' +
    ' in a registry, use FrameworkSpecificRegistrationList<ThingBase> (see below).',
  ' These macros can be used to help define platform-specific subclasses of\n' +
    ' base classes derived from FrameworkSpecificImplementation.',
  ' Holds a list of framework-specific singletons, which all derive from\n' +
    ' `BaseClass` (which must in turn be derived from\n' +
    ' FrameworkSpecificImplementation) and which must be default-constructible.\n' +
    ' Semantically, this behaves as a very simple ordered STL collection of\n' +
    ' `BaseClass`. Insertion is only done via MaybeRegister().'
]
interaction_sequence.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Follows an expected sequence of user-UI interactions and provides callbacks\n' +
    ' at each step. Useful for creating interaction tests and user tutorials.\n' +
    ' An interaction sequence consists of an ordered series of steps, each of which\n' +
    ' refers to an interface element tagged with a ElementIdentifier and each of\n' +
    ' which represents that element being either shown, activated, or hidden. Other\n' +
    ' unrelated events such as element hover or focus are ignored (but could be\n' +
    ' supported in the future).\n' +
    ' Each step has an optional callback that is triggered when the expected\n' +
    ' interaction happens, and an optional callback that is triggered when the step\n' +
    ' ends - either because the next step has started or because the user has\n' +
    ' aborted the sequence (typically by dismissing UI such as a dialog or menu,\n' +
    ' resulting in the element from the current step being hidden/destroyed). Once\n' +
    ' the first callback is called/the step starts, the second callback will always\n' +
    ' be called.\n' +
    ' Furthermore, when the last step in the sequence completes, in addition to its\n' +
    ' end callback, an optional sequence-completed callback will be called. If the\n' +
    ' user aborts the sequence or if this object is destroyed, then an optional\n' +
    ' sequence-aborted callback is called instead.\n' +
    ' To use a InteractionSequence, start with a builder:\n' +
    '  sequence_ = InteractionSequence::Builder()\n' +
    '      .SetCompletedCallback(base::BindOnce(...))\n' +
    '      .AddStep(InteractionSequence::WithInitialElement(initial_element))\n' +
    '      .AddStep(InteractionSequence::StepBuilder()\n' +
    '          .SetElementID(kDialogElementID)\n' +
    '          .SetType(StepType::kShown)\n' +
    '          .SetStartCallback(...)\n' +
    '          .Build())\n' +
    '      .AddStep(...)\n' +
    '      .Build();\n' +
    '  sequence_->Start();\n' +
    ' For more detailed instructions on using the ui/base/interaction library, see\n' +
    ' README.md in this folder.'
]
interaction_sequence_test_util.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' When waiting for mock callbacks in a run loop, post the trigger this far in\n' +
    ' advance to allow any existing processing to finish. Needs to be long enough\n' +
    " that it won't be overtaken on slower machines.\n" +
    " Note that this is Probably Bad and is only being used because we're trying to\n" +
    ' coordinate between external signals and step callbacks without triggering the\n' +
    ' external signals from the step callbacks.\n' +
    ' In the future we might want to rewrite these tests to do it other ways.'
]
interaction_test_util.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Describes the result of a trying to perform a specific action as part of a\n' +
    ' test. Returned by individual functions and action simulators (see\n' +
    ' `InteractionTestUtil::Simulator` below).',
  ' Platform- and framework-independent utility for delegating specific common\n' +
    ' actions to framework-specific handlers. Use so you can write your\n' +
    ' interaction tests without having to worry about framework specifics.\n' +
    ' Simulators are checked in the order they are added, so if more than one\n' +
    ' simulator can handle a particular action, add the one that has the more\n' +
    ' specific/desired behavior first.\n' +
    ' Example usage:\n' +
    ' class MyTest {\n' +
    '   void SetUp() override {\n' +
    '     test_util_.AddSimulator(\n' +
    '         std::make_unique<InteractionTestUtilSimulatorViews>());\n' +
    ' #if BUILDFLAG(IS_MAC)\n' +
    '     test_util_.AddSimulator(\n' +
    '         std::make_unique<InteractionTestUtilSimulatorMac>());\n' +
    ' #endif\n' +
    '     ...\n' +
    '   }\n' +
    '   InteractionTestUtil test_util_;\n' +
    ' };\n' +
    ' TEST_F(MyTest, TestClickButton) {\n' +
    '   ...\n' +
    '   step.SetStartCallback(base::BindLambdaForTesting([&] (\n' +
    '       InteractionSequence* seq, TrackedElement* element) {\n' +
    '     ActionResult result = test_util_.PressButton(element);\n' +
    '     if (result == ActionResult::kError)\n' +
    '       seq->FailForTesting();\n' +
    '     else if (result = ActionResult::kNotSupportedOnThisPlatform)\n' +
    '       seq->SkipForTesting();\n' +
    '   }))\n' +
    '   ...\n' +
    ' }'
]
interaction_test_util_mac.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mac implementation of InteractionTestUtil::Simulator.\n' +
    ' Add one to your InteractionTestUtil instance to get Mac native menu support.'
]
interactive_test.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides basic interactive test functionality.\n' +
    ' Interactive tests use InteractionSequence, ElementTracker, and\n' +
    ' InteractionTestUtil to provide a common library of concise test methods. This\n' +
    ' convenience API is nicknamed "Kombucha" (see\n' +
    ' //chrome/test/interaction/README.md for more information).\n' +
    ' This class is not a test fixture; it is a mixin that can be added to an\n' +
    ' existing test fixture using `InteractiveTestT<T>` - or just use\n' +
    ' `InteractiveTest`, which *is* a test fixture.\n' +
    ' Also, since this class does not implement input automation for any particular\n' +
    ' framework, you are more likely to want e.g. InteractiveViewsTest[Api] or\n' +
    ' InteractiveBrowserTest[Api], which inherit from this class.',
  ' Template that adds InteractiveTestApi to any test fixture. No simulators are\n' +
    ' attached to test_util() so if you want to use verbs like PressButton() you\n' +
    ' will need to install your own simulator.',
  ' A simple test fixture that brings in all of the features of\n' +
    ' InteractiveTestApi. No simulators are attached to test_util() so if you want\n' +
    ' to use verbs like PressButton() you will need to install your own simulator.\n' +
    ' Provided for convenience, but generally you will want InteractiveViewsTest\n' +
    ' or InteractiveBrowserTest instead.',
  ' Template definitions:',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static'
]
interactive_test_internal.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Element that is present during interactive tests that actions can bounce\n' +
    ' events off of.',
  ' Class that implements functionality for InteractiveTest* that should be\n' +
    ' hidden from tests that inherit the API.',
  ' Specifies an element either by ID or by name.',
  ' Implements an element that is shown when an observed state matches a desired\n' +
    ' value or pattern, and hidden when it does not.',
  ' Applies `matcher` to `value` and returns the result; on failure a useful\n' +
    ' error message is printed using `test_name`, `value`, and `matcher`.\n' +
    ' Steps which use this method will fail if it returns false, printing out the\n' +
    ' details of the step in the usual way.',
  ' Similar to `std::invocable<T, Args...>`, but does not put constraints on the\n' +
    ' parameters passed to the invocation method.',
  ' Applies if `T` has bound state (such as a lambda expression with captures).',
  ' Helper for matching a function pointer.',
  ' Applies if `T` is a function pointer (but not a pointer to an instance\n' +
    ' member function).',
  ' Optionally converts `function` to something that is compatible with a\n' +
    ' base::OnceCallback.',
  ' Helper struct that captures information about what signature a function-like\n' +
    ' object would have if it were bound.',
  ' DoNothing always has a void return type but no defined signature.',
  ' Optionally converts `function` to something that is compatible with a\n' +
    " base::RepeatingCallback, or returns it as-is if it's already a callback.",
  ' Requires that `F` resolves to some kind of callable object with call\n' +
    ' signature `S`.',
  ' Helper for `HasCompatibleSignature`; see recursive implementation below.',
  ' Requires that `F` resolves to some kind of callable object whose signature\n' +
    ' can be rectified to `S`; see `base::RectifyCallback` for more information.\n' +
    ' (Basically, `F` can omit arguments from the left of `S`; these arguments\n' +
    ' will be ignored.)',
  ' This is the leaf state for the recursive compatibility computation; see\n' +
    ' below.',
  ' Implementation for `HasCompatibleSignature`.\n' +
    ' This removes arguments one by one from the left of the target signature `S`\n' +
    ' to see if `F` has that signature. The recursion stops when one matches, or\n' +
    ' when the arg list is empty (in which case the leaf state is hit, above).',
  ' Checks that `T` is a reference wrapper around any type.',
  ' Helper to determine the type used to match a value. The default is to just\n' +
    ' use the decayed value type.',
  ' Specialization for string types used in Chrome. For any representation of a\n' +
    ' string using character type, the type used for matching is the corresponding\n' +
    ' `std::basic_string`.\n' +
    ' Add to this template if different character formats become supported (e.g.\n' +
    ' char8_t, char32_t, wchar_t, etc.)',
  ' Gets the appropriate matchable type for `T`. This affects string-like types\n' +
    ' (e.g. `const char*`) as the corresponding `Matcher` should match a\n' +
    ' `std::string` or `std::u16string`.',
  ' Determines if `T` is a valid type to be used in a matcher. This precludes\n' +
    ' string-like types (const char*, constexpr char16_t[], etc.) in favor of\n' +
    ' `std::string` and `std::u16string`.',
  ' Accepts any function-like object that is compatible with\n' +
    ' `InteractionSequence::StepCallback`.',
  ' Accepts any function-like object that can be used with `Check()` and\n' +
    ' `CheckResult()`.',
  ' Converts an ElementSpecifier to an element ID or name and sets it onto\n' +
    ' `builder`.',
  ' Takes an argument expected to be a literal value and retrieves the literal\n' +
    " value by either calling the object (if it's callable), unwrapping it (if it's\n" +
    ' a `std::reference_wrapper`) or just returning it otherwise.\n' +
    ' This allows e.g. passing deferred or computed values to the `Log()` verb.'
]
polling_state_observer.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observer which polls a state that cannot be observed via listeners/callbacks.\n' +
    ' Continues to poll for the lifetime of the test.\n' +
    ' Because this is a polling observer, the value is only valid at the moment it\n' +
    ' is observed, and transient values may be missed. For transient values, prefer\n' +
    ' deterministic state observation, custom events, etc.\n' +
    ' Designed for use with the `InteractiveTestApi::PollState()` verb.',
  ' Need out-of-line declaration of static class variables on some platforms.',
  ' static',
  ' Observer which polls a specific element that cannot be observed via\n' +
    ' listeners/callbacks. If an element with `identifier` in `context` is present,\n' +
    ' the observed value will be updated to the result of `poll_element_callback`,\n' +
    ' whereas if the element is not present in the context, it will be\n' +
    ' std::nullopt.\n' +
    ' If `context` is not specified, then the element will be located in any\n' +
    ' context.\n' +
    ' Because this is a polling observer, the value is only valid at the moment it\n' +
    ' is observed, and transient values may be missed. For transient values, prefer\n' +
    ' deterministic state observation, custom events, etc.\n' +
    ' Designed for use with the `InteractiveTestApi::PollElement()` verb.'
]
state_observer.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class for all state change observers. Observes some state of the system,\n' +
    ' which we can then wait on.\n' +
    ' Used with `InteractiveTestApi::ObserveState()` and `WaitForState()`.\n' +
    ' Value type `T` must be default-constructible and copy-assignable.',
  ' State observer that uses a `ScopedObservation<T, Source, Observer>` to watch\n' +
    ' for state changes using an observer pattern.\n' +
    ' You will still need to override the specific observer methods to detect:\n' +
    '  - The actual state change\n' +
    '     - call `OnStateObserverStateChanged()`\n' +
    '  - The "source destroyed" message (optional)\n' +
    '     - call `OnObservationStateObserverSourceDestroyed()`\n' +
    ' If the initial state may vary, you can also override\n' +
    ' `GetStateObserverInitialState()`. Use `source()` to extract the relevant\n' +
    ' information.\n' +
    ' An example can be found in chrome/test/interaction/README.md.',
  ' Uniquely identifies a state associated with `ObserverType`.\n' +
    ' Use the DECLARE/DEFINE macros below to create unique identifiers, similarly\n' +
    ' to how ElementIdentifier, etc. work.',
  ' The following macros create a state identifier value for use in tests.\n' +
    ' The associated type of observer should be specified along with the unique\n' +
    ' identifier name:\n' +
    ' ```\n' +
    ' DECLARE_STATE_IDENTIFIER_VALUE(MyObserverType, kMyState);\n' +
    ' ```\n' +
    ' `DECLARE_STATE_IDENTIFIER_VALUE()` and `DEFINE_STATE_IDENTIFIER_VALUE()` are\n' +
    ' for use in .h and .cc files, respectively, as with declaring\n' +
    ' `ElementIdentifier`s.\n' +
    ' To declare a `StateIdentifier` local to a .cc file or method body, use\n' +
    ' DEFINE_LOCAL_STATE_IDENTIFIER_VALUE() instead. This will create a file- and\n' +
    ' line-mangled name that will not suffer name collisions with other\n' +
    ' identifiers.'
]
formatter.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file contains implementation details, the public interface is declared\n' +
    ' in time_format.h.',
  ' Formatter for a (format, length) combination.  May either be instantiated\n' +
    ' with six parameters for use in TimeFormat::Simple() or with twelve parameters\n' +
    ' for use in TimeFormat::Detailed().',
  ' Class to hold all Formatters, intended to be used in a global LazyInstance.',
  ' Windows compilation requires full definition of FormatterContainer before\n' +
    ' LazyInstance<FormatterContainter> may be declared.',
  ' For use in unit tests only.'
]
l10n_font_util.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the preferred size of the contents view of a window based on\n' +
    ' its localized size data and the given font. The width in cols is held in a\n' +
    ' localized string resource identified by |col_resource_id|, the height in the\n' +
    ' same fashion.'
]
l10n_util.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file contains utility functions for dealing with localized\n content.',
  " Takes normalized locale as |locale|. Returns language part (before '-').",
  " Takes normalized locale as |locale|. Returns country part (after '-').",
  ' This method translates a generic locale name to one of the locally defined\n' +
    ' ones. This method returns true if it succeeds.\n' +
    ' If |perform_io| is false, this will not perform any I/O but may return false\n' +
    ' positives on Android and iOS. See the |kPlatformLocales| documentation in\n' +
    ' l10n_util.cc for more information.',
  ' Convenience wrapper for the above (with |perform_io| set to true).',
  ' This method is responsible for determining the locale as defined below. In\n' +
    " nearly all cases you shouldn't call this, rather use GetApplicationLocale\n" +
    ' defined on browser_process.\n' +
    ' Returns the locale used by the Application.  First we use the value from the\n' +
    ' command line (--lang), second we try the value in the prefs file (passed in\n' +
    ' as |pref_locale|), finally, we fall back on the system locale. We only return\n' +
    " a value if there's a corresponding resource DLL for the locale.  Otherwise,\n" +
    ' we fall back to en-us. |set_icu_locale| determines whether the resulting\n' +
    ' locale is set as the default ICU locale before returning it.',
  ' Convenience version of GetApplicationLocale() that sets the resulting locale\n' +
    ' as the default ICU locale before returning it.',
  ' Returns true if a display name for |locale| is available in the locale\n' +
    ' |display_locale|.',
  ' This method returns the display name of the `locale` code in `display_locale`\n' +
    ' without the country. For example, for `locale` = "en-US" and `display_locale`\n' +
    ' = "en", it returns "English" in English, per "en". Chrome has different\n' +
    ' strings for some languages depending on the locale. To get the display name\n' +
    ' of `locale` in the UI language of Chrome, `display_locale` can be set to the\n' +
    ' return value of g_browser_process->GetApplicationLocale() in the UI thread.\n' +
    ' If `is_for_ui` is true, U+200F is appended so that it can be rendered\n' +
    ' properly in a RTL Chrome.',
  ' This method returns the display name of the locale code in |display_locale|.\n' +
    ' For example, for |locale| = "en-US" and |display_locale| = "en",\n' +
    ' it returns "English (United States)". To get the display name of\n' +
    ' |locale| in the UI language of Chrome, |display_locale| can be\n' +
    ' set to the return value of g_browser_process->GetApplicationLocale()\n' +
    ' in the UI thread.\n' +
    ' If |is_for_ui| is true, U+200F is appended so that it can be\n' +
    ' rendered properly in a RTL Chrome.',
  ' Returns the display name of the |country_code| in |display_locale|.',
  ' Converts all - into _, to be consistent with ICU and file system names.',
  ' Produce a vector of parent locales for given locale.\n' +
    ' It includes the current locale in the result.\n' +
    ' sr_Cyrl_RS generates sr_Cyrl_RS, sr_Cyrl and sr.',
  ' Checks if a string is plausibly a syntactically-valid locale string,\n' +
    ' for cases where we want the valid input to be a locale string such as\n' +
    " 'en', 'pt-BR', 'fil', 'es-419', 'zh-Hans-CN', 'i-klingon' or\n" +
    " 'de_DE@collation=phonebook', but we don't want to limit it to\n" +
    " locales that Chrome actually knows about, so 'xx-YY' should be\n" +
    " accepted, but 'z', 'German', 'en-$1', or 'abcd-1234' should not.\n" +
    ' Case-insensitive. Based on BCP 47, see:\n' +
    '   http://unicode.org/reports/tr35/#Unicode_Language_and_Locale_Identifiers\n' +
    ' Mac Note: See l10n_util_mac.h for some NSString versions and other support.',
  ' Pulls resource string from the string bundle and returns it.',
  ' Given a format string, replace $i with replacements[i] for all\n' +
    ' i < replacements.size(). Additionally, $$ is replaced by $.\n' +
    ' If non-NULL |offsets| will be replaced with the start points of the replaced\n' +
    ' strings.',
  ' Get a resource string and replace $i with replacements[i] for all\n' +
    ' i < replacements.size(). Additionally, $$ is replaced by $.\n' +
    ' If non-NULL |offsets| will be replaced with the start points of the replaced\n' +
    ' strings.',
  ' Convenience wrappers for the above.',
  ' Variants that return the offset(s) of the replaced parameters. The\n' +
    ' vector based version returns offsets ordered by parameter. For example if\n' +
    ' invoked with a and b offsets[0] gives the offset for a and offsets[1] the\n' +
    ' offset of b regardless of where the parameters end up in the string.',
  ' Convenience functions to get a string with a single integer as a parameter.\n' +
    ' The result will use non-ASCII(native) digits if required by a locale\n' +
    ' convention (e.g. Persian, Bengali).\n' +
    ' If a message requires plural formatting (e.g. "3 tabs open"), use\n' +
    ' GetPluralStringF*, instead. To format a double, integer or percentage alone\n' +
    ' without any surrounding text (e.g. "3.57", "123", "45%"), use\n' +
    ' base::Format{Double,Number,Percent}. With more than two numbers or\n' +
    ' number + surrounding text, use base::i18n::MessageFormatter.\n' +
    ' // Note that native digits have to be used in UI in general.\n' +
    ' base::{Int*,Double}ToString convert a number to a string with\n' +
    ' ASCII digits in non-UI strings.',
  ' Convenience functions to format a string with a single number that requires\n' +
    ' plural formatting. Note that a simple 2-way rule (singular vs plural)\n' +
    ' breaks down for a number of languages. Instead of two separate messages\n' +
    ' for singular and plural, use this method with one message in ICU syntax.\n' +
    ' See http://userguide.icu-project.org/formatparse/messages and\n' +
    ' go/plurals (Google internal) for more details and examples.\n' +
    ' For complex messages with input parameters of multiple types (int,\n' +
    ' double, time, string; e.g. "At 3:45 on Feb 3, 2016, 5 files are downloaded\n' +
    ' at 3 MB/s."), use base::i18n::MessageFormatter.\n' +
    ' message_format_unittests.cc also has more examples of plural formatting.',
  " Get a string when you only care about 'single vs multiple' distinction.\n" +
    ' The message pointed to by |message_id| should be in ICU syntax\n' +
    " (see the references above for Plural) with 'single', 'multiple', and\n" +
    " 'other' (fallback) instead of 'male', 'female', and 'other' (fallback).",
  ' In place sorting of std::u16string strings using collation rules for\n' +
    ' |locale|.',
  ' Returns a vector of available locale codes from ICU. E.g., a vector\n' +
    ' containing en-US, es, fr, fi, pt-PT, pt-BR, etc.',
  ' Returns whether we should show a locale to the user as a supported UI locale.\n' +
    ' This is similar to CheckAndResolveLocale, except that it excludes some\n' +
    ' languages from being shown.',
  ' Returns the subset of locales from GetAcceptLanguages which we should show\n' +
    ' to the user as a supported UI locale.\n' +
    ' E.g., a vector containing en-US, en-CA, en-GB, es, fr, pt-PT, pt-BR, etc.',
  ' Returns a vector of locale codes usable for accept-languages.',
  ' Returns a vector of untranslated locale codes usable for accept-languages.',
  ' Returns true if |locale| is in a predefined |AcceptLanguageList|.',
  ' Returns true if |locale| is in a predefined |AcceptLanguageList| and\n' +
    ' a display name for the |locale| is available in the locale |display_locale|.',
  ' Filters the input vector of languages. Returns only those in the\n' +
    ' |AcceptLanguageList|.',
  ' Returns the preferred size of the contents view of a window based on\n' +
    ' designer given constraints which might dependent on the language used.'
]
l10n_util_android.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
l10n_util_collator.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used by SortStringsUsingMethod. Invokes a method on the objects passed to\n' +
    ' operator (), comparing the string results using a collator.',
  ' Used by SortStringsUsingMethod. Invokes a method on the objects passed to\n' +
    ' operator (), comparing the string results using <.',
  ' Sorts the objects in |elements| using the method |method|, which must return\n' +
    ' a string. Sorting is done using a collator, unless a collator can not be\n' +
    ' found in which case the strings are sorted using the operator <.',
  " Compares two elements' string keys and returns true if the first element's\n" +
    " string key is less than the second element's string key. The Element must\n" +
    ' have a method like the follow format to return the string key.\n' +
    ' const std::u16string& GetStringKey() const;\n' +
    ' This uses the locale specified in the constructor.',
  ' Specialization of operator() method for std::u16string version.',
  ' In place sorting of |elements| of a vector according to the string key of\n' +
    ' each element in the vector by using collation rules for |locale|.\n' +
    ' |begin_index| points to the start position of elements in the vector which\n' +
    ' want to be sorted. |end_index| points to the end position of elements in the\n' +
    ' vector which want to be sorted.'
]
l10n_util_ios.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Get localized language name using NSLocale Foundation API. If the system\n' +
    " API returns null or an empty string, ICU's formatting style of an unknown\n" +
    ' language will be used which is "xyz (XYZ)" where the input is parsed into\n' +
    ' language and script by the - token and reformatted as\n' +
    ' "$lowercase_language ($UPPERCASE_SCRIPT)". If the - token is not found, the\n' +
    ' lowercase version of |locale| will be returned.\n' +
    ' TODO(jshin): the locale id is not always ll-SSSS, but can be ll-RR,\n' +
    ' ll-SSSS-RR (SSSS: 4 letter script, RR: 2 letter or 3 digit region code).\n' +
    ' There are more complicated forms, too (per BCP 47).\n' +
    ' Consider changing this calling the ICU directly instead of trying to\n' +
    ' emulate it in case of a fallback. Though how not sure whether iOS API\n' +
    ' exposes the necessary function from ICU, and iOS is trying to not depend\n' +
    ' on ICU to reduce the package size.'
]
l10n_util_mac.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Remove the Windows-style accelerator marker (for labels, menuitems, etc.)\n' +
    ' and change "..." into an ellipsis.\n' +
    ' Returns the result in an autoreleased NSString.',
  ' Pulls resource string from the string bundle and returns it.',
  ' Get a resource string and replace $1-$2-$3 with |a| and |b|\n' +
    ' respectively.  Additionally, $$ is replaced by $.',
  ' Variants that return the offset(s) of the replaced parameters. (See\n' +
    ' app/l10n_util.h for more details.)',
  ' Same as GetNSString, but runs the result through FixUpWindowsStyleLabel\n' +
    ' before returning it.',
  ' Same as GetNSStringF, but runs the result through FixUpWindowsStyleLabel\n' +
    ' before returning it.',
  ' Get a resource string using |number| with a locale-specific plural rule.\n' +
    ' |message_id| points to a message in the ICU syntax.\n' +
    ' See http://userguide.icu-project.org/formatparse/messages and\n' +
    ' go/plurals (Google internal).',
  ' Same as GetPluralNSStringF, but runs the result through\n' +
    ' FixUpWindowsStyleLabel before returning it.',
  ' Support the override of the locale with the value from Cocoa.'
]
l10n_util_mac_bridge.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An Objective-C wrapper around namespaced C++ l10n methods.'
]
l10n_util_win.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the locale-dependent extended window styles.\n' +
    ' This function is used for adding locale-dependent extended window styles\n' +
    ' (e.g. WS_EX_LAYOUTRTL, WS_EX_RTLREADING, etc.) when creating a window.\n' +
    ' Callers should OR this value into their extended style value when creating\n' +
    ' a window.',
  ' TODO(xji):\n' +
    ' This is a temporary name, it will eventually replace GetExtendedStyles',
  ' Give an HWND, this function sets the WS_EX_LAYOUTRTL extended style for the\n' +
    ' underlying window. When this style is set, the UI for the window is going to\n' +
    ' be mirrored. This is generally done for the UI of right-to-left languages\n' +
    ' such as Hebrew.',
  ' See https://devblogs.microsoft.com/oldnewthing/20050915-23/?p=34173\n' +
    ' and https://devblogs.microsoft.com/oldnewthing/20060626-11/?p=30743 as to why\n' +
    ' we need these next three functions.',
  " Allow processes to override the configured locale with the user's Windows UI\n" +
    ' languages.  This function should generally be called once early in\n' +
    ' Application startup.',
  ' Retrieve the locale override, or an empty vector if the locale has not been\n' +
    ' or failed to be overridden.',
  ' Pulls resource string from the string bundle and returns it.'
]
time_format.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Methods to format time values as strings.'
]
layout.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the ResourceScaleFactor used by `view`.'
]
linux_desktop.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns desktop environment info as list of values.'
]
menu_source_utils.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the menu source type based on `event_flags`.'
]
base_type_conversion.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Various metadata methods pass types either by value or const ref depending on\n' +
    ' whether the types are "small" (defined as "fundamental, enum, or pointer").\n' +
    ' ArgType<T> gives the appropriate type to use as an argument in such cases.',
  ' General Type Conversion Template Functions ---------------------------------',
  ' The following definitions and macros are needed only in cases where a type\n' +
    ' is a mere alias to a POD type AND a specialized type converter is also needed\n' +
    ' to handle different the string conversions different from the existing POD\n' +
    ' type converter. See SkColor below as an example of their use.\n' +
    ' NOTE: This should be a rare occurrence and if possible use a unique type and\n' +
    ' a TypeConverter specialization based on that unique type.',
  ' Types and macros for generating enum converters ----------------------------',
  ' *****************************************************************\n' +
    ' * NOTE: The ENUM macros *must* be placed outside any namespace. *\n' +
    ' *****************************************************************\n' +
    ' Use this macro only if your enum converters need to be accessible across\n' +
    ' modules. Place this in the header file for the module and use the other macro\n' +
    ' below as described.',
  ' Generate the code to define a enum type to and from std::u16string\n' +
    ' conversions. The first argument is the type T, and the rest of the argument\n' +
    ' should have the enum value and string pairs defined in a format like\n' +
    ' "{enum_value0, string16_value0}, {enum_value1, string16_value1} ...".\n' +
    ' Both enum_values and string16_values need to be compile time constants.',
  ' String Conversions ---------------------------------------------------------',
  ' Special conversions for wrapper types --------------------------------------',
  ' Special Conversions for std:unique_ptr<T> and T* types ----------------------'
]
metadata_cache.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The MetaDataCache speeds up frequent traversals over the meta data for\n' +
    ' various classes by caching one instance of ClassMetaData for each class on\n' +
    ' which metadata is required.\n' +
    ' MetaDataCache is implemented as a singleton. This also implies that each\n' +
    ' instance of ClassMetaData registered into the cache represents one and only\n' +
    ' one class type.',
  ' These functions are rarely called directly, rather they are called from\n' +
    ' within the macros used to declare the metadata for a class. See the macros in\n' +
    ' reflections_macros.h\n' +
    ' Registers the class metadata into the global cache. Will DCHECK if the\n' +
    ' metadata for a class is already registered.',
  ' Help function for creating and registering the metadata container into the\n' +
    ' global cache for a given class. The metadata information is owned by the\n' +
    ' given class.'
]
metadata_header_macros.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Generate Metadata's accessor functions and internal class declaration.\n" +
    ' This should be used in a header file of the View class or its subclasses.',
  ' When adding metadata to a templated class, use this macro. `class_name` is\n' +
    ' the base name of the template class. If the `ancestor_class_name` is also a\n' +
    " templated class, define a type alias with a `using foo = bar<baz>'`\n" +
    ' statement. Then use that alias for the parameter.',
  ' A version of METADATA_HEADER for View, the root of the metadata hierarchy.\n' +
    ' Here METADATA_ACCESSORS_INTERNAL_BASE is called.'
]
metadata_impl_macros.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Generate the implementation of the metadata accessors and internal class with\n' +
    " additional macros for defining the class' properties.",
  ' The following macro overloads the above macros. For most cases, only two\n' +
    ' parameters are used. In some instances when a class is nested within another\n' +
    ' class, the first parameter should be the outer scope with the remaining\n' +
    ' parameters same as the non-nested macro.',
  ' This macro is used for defining template specializations for a templated view\n' +
    " class. `class_name_alias` is as the name indicates; it's an alias of the\n" +
    ' instantiated template type. This is typically in the form of: `using foo =\n' +
    ' bar<baz>;`. `template_name` is the base name of the templated class such as\n' +
    ' `bar` from the previous alias. END_METADATA works the same as the non-\n' +
    ' templated versions.',
  " This will fail to compile if the property accessors aren't in the form of\n" +
    ' SetXXXX and GetXXXX. If an explicit type converter is specified, it must have\n' +
    ' already been specialized. See the comments in type_converter.h for further\n' +
    ' information.',
  " This will fail to compile if the property accessor isn't in the form of\n" +
    ' GetXXXX. If an explicit type converter is specified, it must have already\n' +
    ' been specialized. See the comments in type_converter.h for further\n' +
    ' information.',
  ' Adds a ui::ClassProperty of key |property_key| to metadata.\n' +
    ' If the property value is an pointer of type |TValue*|, specify\n' +
    ' |property_type| as |TValue| to allow inspecting the actually value.\n' +
    ' Otherwise the metadata will treat the pointer as it is.'
]
metadata_macros_internal.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Internal Metadata Generation Helpers ---------------------------------------',
  ' TODO(kylixrd@): Remove kViewClassName[] from macros once all references to it\n' +
    ' have been eradicated and IsViewClass<T> is being used instead.',
  ' Metadata Accessors ---------------------------------------------------------',
  ' A version of METADATA_ACCESSORS_INTERNAL for View, the root of the metadata\n' +
    ' hierarchy; here GetClassName() is not declared as an override.\n' +
    ' This also introduces the ReinterpretToBaseClass(), which should exist at the\n' +
    ' root of the hierarchy on which the metadata will be attached. This will take\n' +
    ' the given void*, which should be some instance of a subclass of this base\n' +
    ' class, and return a properly typed class_name*. The body of this function\n' +
    ' does a reinterpret_cast<> of the void* to obtain a class_name*. Doing a\n' +
    ' direct static_cast<> from the void* may result in an incorrect\n' +
    ' pointer-to-instance, which may cause a crash. Using this intermediate step of\n' +
    ' reinterpret_cast<> provides more information to the compiler in order to\n' +
    ' obtain the proper result from the static_cast<>. See |AsClass(void* obj)|\n' +
    ' in property_metadata.h for additional info.',
  ' Metadata Class -------------------------------------------------------------',
  ' See the comment above on the METADATA_ACCESSORS_INTERNAL_BASE macro for more\n' +
    ' information. NOTE: This function should not be modified to access |this|,\n' +
    ' directly or indirectly. It should only do what is necessary to convert |obj|\n' +
    ' to a properly typed pointer.'
]
metadata_types.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used to identify the CallbackList<> within the PropertyChangedVectors map.',
  ' Used to generate property keys when a single field needs multiple property\n' +
    ' keys - for example, if you have a single "bounds" field which is a gfx::Rect\n' +
    ' and want to have four separate properties that all use that field, you can\n' +
    ' use MakeUniquePropertyKey() rather than using &bounds_ + 0, &bounds_ + 1,\n' +
    ' and so on. This avoids unsafe buffer use warnings.',
  ' Interface for classes that provide ClassMetaData (via macros in\n' +
    ' metadata_header_macros.h). GetClassMetaData() is automatically overridden and\n' +
    ' implemented in the relevant macros, so a class must merely have\n' +
    ' MetaDataProvider somewhere in its ancestry.',
  " Represents the 'meta data' that describes a class. Using the appropriate\n" +
    ' macros in ui/base/metadata/metadata_impl_macros.h, a descendant of this\n' +
    ' class is declared within the scope of the containing class. See information\n' +
    ' about using the macros in the comment for the views::View class.',
  ' Abstract base class to represent meta data about class members.\n' +
    ' Provides basic information (such as the name of the member), and templated\n' +
    ' accessors to get/set the value of the member on an object.'
]
metadata_utils.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
property_metadata.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Works around static casting issues related to the void*. See the comment on\n' +
    ' the METADATA_ACCESSORS_INTERNAL_BASE macro for more information about why\n' +
    ' this is necessary. NOTE: The reinterpret_cast<> here is merely to bring\n' +
    ' ReinterpretToBaseClass() into scope and make it callable. The body of that\n' +
    ' function does not access |this|, so this call is safe.',
  ' Represents meta data for a specific read-only property member of class\n' +
    ' |TClass|, with underlying type |TValue|, as the type of the actual member.\n' +
    " Using a separate |TRet| type for the getter function's return type to allow\n" +
    ' it to return a type with qualifier and by reference.',
  ' Represents meta data for a specific property member of class |TClass|, with\n' +
    ' underlying type |TValue|, as the type of the actual member.\n' +
    ' Allows for interaction with the property as if it were the underlying data\n' +
    " type (|TValue|), but still uses the Property's functionality under the hood\n" +
    ' (so it will trigger things like property changed notifications).',
  ' Represents metadata for a ui::ClassProperty attached on a class instance.\n' +
    ' Converts property value to |TValue| when possible. This allows inspecting\n' +
    ' the actual value when the property is a pointer of type |TValue*|.'
]
button_menu_item_model.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A model representing the rows of buttons that should be inserted in a button\n' +
    ' containing menu item.'
]
combobox_model.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A data model for a combo box.'
]
combobox_model_observer.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observer for the ComboboxModel.'
]
dialog_model.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class for a Delegate associated with (owned by) a model. Provides a link\n' +
    ' from the delegate back to the model it belongs to (through ::dialog_model()),\n' +
    ' from which fields and the DialogModelHost can be accessed.',
  ' DialogModel represents a platform-and-toolkit agnostic data + behavior\n' +
    ' portion of a dialog. This contains the semantics of a dialog, whereas\n' +
    ' DialogModelHost implementations (like views::BubbleDialogModelHost) are\n' +
    ' responsible for interfacing with toolkits to display them. This provides a\n' +
    ' separation of concerns where a DialogModel only needs to be concerned with\n' +
    ' what goes into a dialog, not how it shows.\n' +
    ' DialogModel is supported in views, and android. See\n' +
    ' //ui/android/modal_dialog_wrapper.h for limitations of android support.\n' +
    ' Example usage (with views as an example DialogModelHost implementation). Note\n' +
    ' that visual presentation (except order of elements) is entirely up to\n' +
    ' DialogModelHost, and separate from client code:\n' +
    ' constexpr int kNameTextfield = 1;\n' +
    ' class Delegate : public ui::DialogModelDelegate {\n' +
    '  public:\n' +
    '   void OnDialogAccepted() {\n' +
    '     LOG(ERROR) << "Hello "\n' +
    '                << dialog_model()->GetTextfield(kNameTextfield)->text();\n' +
    '   }\n' +
    ' };\n' +
    ' auto model_delegate = std::make_unique<Delegate>();\n' +
    ' auto* model_delegate_ptr = model_delegate.get();\n' +
    ' auto dialog_model =\n' +
    '     ui::DialogModel::Builder(std::move(model_delegate))\n' +
    '         .SetTitle(u"Hello, world!")\n' +
    '         .AddOkButton(base::BindOnce(&Delegate::OnDialogAccepted,\n' +
    '                                     base::Unretained(model_delegate_ptr)))\n' +
    '         .AddTextfield(\n' +
    '             u"Name", std::u16string(),\n' +
    '             ui::DialogModelTextfield::Params().SetUniqueId(kNameTextfield))\n' +
    '         .Build();\n' +
    ' // DialogModelBase::Host specific. In this example, uses views-specific\n' +
    ' // code to set a view as an anchor.\n' +
    ' auto bubble =\n' +
    '     std::make_unique<views::BubbleDialogModelHost>(std::move(dialog_model));\n' +
    ' bubble->SetAnchorView(anchor_view);\n' +
    ' views::Widget* const widget =\n' +
    '     views::BubbleDialogDelegate::CreateBubble(std::move(bubble));\n' +
    ' widget->Show();'
]
dialog_model_field.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(pbos): Move this to separate header.\n' +
    ' DialogModelLabel is an exception to below classes. This is not a\n' +
    ' DialogModelField but rather represents a text label and styling. This is used\n' +
    ' with DialogModelParagraph and DialogModelCheckbox for instance and has\n' +
    ' support for styling text replacements and showing a link.',
  ' These "field" classes represent entries in a DialogModel. They are owned\n' +
    ' by the model and either created through the model or DialogModel::Builder.\n' +
    " These entries can be referred to by setting the field's ElementIdentifier in\n" +
    ' construction parameters (::Params::SetId()). They can then\n' +
    ' later be acquired through DialogModel::GetFieldByUniqueId() methods.\n' +
    ' These fields own the data corresponding to their field. For instance, the\n' +
    ' text of a textfield in a model is read using DialogModelTextfield::text() and\n' +
    ' stays in sync with the visible dialog (through DialogModelHosts).',
  ' Field class representing a paragraph.',
  ' Field class representing a checkbox with descriptive text.',
  ' Field class representing a combobox and corresponding label to describe the\n' +
    ' combobox:\n' +
    '     <label>   [combobox]\n' +
    ' Ex: Folder    [My Bookmarks]',
  ' Field class representing a menu item:\n' +
    '     <icon> <label>\n' +
    ' Ex: [icon] Open URL',
  ' Field class representing a separator.',
  ' Field class representing a title.\n' +
    ' TODO(pengchaocai): Remove DialogModelTitleItem once DialogModel supports\n' +
    ' multiple sections and titles live in sections as optional strings.',
  ' Field class representing a textfield and corresponding label to describe the\n' +
    ' textfield:\n' +
    '     <label>   [textfield]\n' +
    ' Ex: Name      [My email]',
  ' Field base class representing a "custom" field. Used for instance to inject\n' +
    ' custom Views into dialogs that use DialogModel.',
  ' Field class representing a section. A section is a list of fields which may\n' +
    ' include subsections too (tree structure).'
]
dialog_model_host.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Platform-agnostic interface for toolkit integrations.'
]
dialog_model_menu_model_adapter.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_model.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The following classes encapsulate the various ways that a model may provide\n' +
    ' or otherwise specify an icon or image. Most notably, these are used by the\n' +
    ' MenuModel and SimpleMenuModel for building actual menus.\n' +
    ' The VectorIconModel represents the combination of the icon path and its\n' +
    ' optional color id. The optional color is provided by the color id which is\n' +
    ' eventually resolved by the ColorProvider from the correct context. This class\n' +
    ' is only used internal to ImageModel and should never be instantiated except\n' +
    ' by ImageModel.',
  ' ImageModel encapsulates one of several image representations. See FromXXXX\n' +
    ' static-factory functions for supported formats.'
]
image_model_utils.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
list_model.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A list model that manages a list of ItemType pointers. Items added to the\n' +
    ' model are owned by the model. An item can be taken out of the model by\n' +
    ' RemoveAt.'
]
list_model_observer.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
list_selection_model.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Selection model represented as a list of indexes. In addition to the set of\n' +
    ' selected indices ListSelectionModel maintains the following:\n' +
    ' active: The index of the currently visible item in the list. This will be\n' +
    '         nullopt if nothing is selected.\n' +
    ' anchor: The index of the last item the user clicked on. Extending the\n' +
    '         selection extends it from this index. This will be nullopt if nothing\n' +
    '         is selected.\n' +
    ' Typically there is only one selected item, in which case the anchor and\n' +
    ' active index correspond to the same thing.'
]
menu_model.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by an object that provides the content of a menu.'
]
menu_model_delegate.h [
  ' Copyright 2010 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_separator_types.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' For a separator we have the following types.'
]
simple_combobox_model.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A simple data model for a combobox that takes a vector of\n' +
    ' SimpleComboboxModel::Item that has support for icons and secondary dropdown\n' +
    ' text. Items with empty text represent separators.'
]
simple_menu_model.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Boolean-like value that determines if a menu item should be marked as\n' +
    ' "new". Cannot be constructed in a truthy sate except by a fixed set of\n' +
    ' classes, forcing the use of those classes (or wrappers around those classes)\n' +
    ' in order to display as new. This prevents creating menu items which are\n' +
    ' marked as "new" for an extended/indefinite period of time.',
  ' A simple MenuModel implementation with an imperative API for adding menu\n' +
    ' items. This makes it easy to construct fixed menus. Menus populated by\n' +
    ' dynamic data sources may be better off implementing MenuModel directly.\n' +
    ' The breadth of MenuModel is not exposed through this API.'
]
table_model.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' third_party/icu/source/common/unicode/uversion.h will set namespace icu.',
  ' The model driving the TableView.',
  ' TableColumn specifies the title, alignment and size of a particular column.'
]
table_model_observer.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observer for a TableModel. Anytime the model changes, it must notify its\n' +
    ' observer.'
]
tree_model.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TreeModelNode --------------------------------------------------------------',
  ' Type of class returned from the model. This is a low-level interface.\n' +
    ' Generally you will want to use TreeNode or TreeNodeWithValue which provides\n' +
    ' a basic implementation for storing the tree hierarchy. See\n' +
    ' tree_node_model.h.',
  ' Observer for the TreeModel. Notified of significant events to the model.',
  ' TreeModel ------------------------------------------------------------------',
  ' The model for TreeView. This is a low-level interface and requires a lot\n' +
    ' of bookkeeping for the tree to be implemented. Generally you will want to\n' +
    ' use TreeNodeModel which provides a standard implementation for basic\n' +
    ' hierarchy and observer notification. See tree_node_model.h.'
]
tree_node_iterator.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Iterator that iterates over the descendants of a node. The iteration does\n' +
    ' not include the node itself, only the descendants. The following illustrates\n' +
    ' typical usage:\n' +
    ' while (iterator.has_next()) {\n' +
    '   Node* node = iterator.Next();\n' +
    '   // do something with node.\n' +
    ' }'
]
tree_node_model.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TreeNodeModel and TreeNodes provide an implementation of TreeModel around\n' +
    ' TreeNodes.\n' +
    ' TreeNodes own their children, so that deleting a node deletes all\n' +
    ' descendants.\n' +
    ' TreeNodes do NOT maintain a pointer back to the model. As such, if you\n' +
    ' are using TreeNodes with a TreeNodeModel you will need to notify the observer\n' +
    ' yourself any time you make any change directly to the TreeNodes. For example,\n' +
    ' if you directly invoke set_title on a node it does not notify the observer,\n' +
    ' you will need to do it yourself. This includes the following methods: Add,\n' +
    ' Remove and set_title. TreeNodeModel provides cover methods that mutate the\n' +
    ' TreeNodes and notify the observer. If you are using TreeNodes with a\n' +
    ' TreeNodeModel use the cover methods to save yourself the headache.\n' +
    ' The following example creates a TreeNode with two children and then\n' +
    ' creates a TreeNodeModel from it:\n' +
    ' std::unique_ptr<TreeNodeWithValue<int>> root =\n' +
    '     std::make_unique<TreeNodeWithValue<int>>();\n' +
    ' root->Add(\n' +
    '     std::make_unique<TreeNodeWithValue<int>>(u"child 1", 0));\n' +
    ' root->Add(\n' +
    '     std::make_unique<TreeNodeWithValue<int>>(u"child 2", 1));\n' +
    ' TreeNodeModel<TreeNodeWithValue<int>> model(std::move(root));\n' +
    ' Two variants of TreeNode are provided here:\n' +
    ' . TreeNode itself is intended for subclassing. It has one type parameter\n' +
    '   that corresponds to the type of the node. When subclassing use your class\n' +
    '   name as the type parameter, e.g.:\n' +
    '   class MyTreeNode : public TreeNode<MyTreeNode> .\n' +
    ' . TreeNodeWithValue is a trivial subclass of TreeNode that has one type\n' +
    '   type parameter: a value type that is associated with the node.\n' +
    ' Which you use depends upon the situation. If you want to subclass and add\n' +
    " methods, then use TreeNode. If you don't need any extra methods and just\n" +
    ' want to associate a value with each node, then use TreeNodeWithValue.\n' +
    ' Regardless of which TreeNode you use, if you are using the nodes with a\n' +
    ' TreeView take care to notify the observer when mutating the nodes.',
  ' TreeNode -------------------------------------------------------------------',
  ' See above for documentation. Example:\n' +
    '   class MyNode : public ui::TreeNode<MyNode> {\n' +
    '     ...<custom class logic>...\n' +
    '   };\n' +
    '   using MyModel = ui::TreeNodeModel<MyNode>;',
  ' TreeNodeWithValue ----------------------------------------------------------',
  ' See top of file for documentation. Example:\n' +
    '  using MyNode = ui::TreeNodeWithValue<MyData>;\n' +
    '  using MyModel = ui::TreeNodeModel<MyNode>;',
  ' TreeNodeModel --------------------------------------------------------------',
  ' TreeModel implementation intended to be used with TreeNodes.'
]
clipboard_blink_mojom_traits.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_base_types_mojom_traits.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_open_disposition_mojom_traits.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
nine_image_painter_factory.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A macro to define arrays of IDR constants used with CreateImageGridPainter.',
  ' Defines an empty image for use in macros for creating an image grid for a\n' +
    ' ring of eight images.',
  ' A macro to define arrays of IDR constants used with CreateImageGridPainter\n' +
    ' where only a ring of eight images is provided and center image is empty.',
  ' A macro to define arrays of IDR constants used with CreateImageGridPainter\n' +
    ' where it can only be streched horizontally.',
  ' A macro to define arrays of IDR constants used with CreateImageGridPainter\n' +
    ' where it can only be streched vertically.',
  " Creates a NineImagePainter from an array of image ids. It's expected the\n" +
    ' array came from the IMAGE_GRID macro.'
]
owned_window_anchor.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Structure that describes anchor for an owned window. Owned windows are the\n' +
    ' windows that must be owned by their context (for example, menus, tooltips),\n' +
    ' and they must be positioned in such a way that a system compositor can\n' +
    ' reposition them using provided anchor. Ozone/Wayland is an example user of\n' +
    ' this.'
]
page_transition_types.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Types of transitions between pages. These are stored in the history\n' +
    ' database to separate visits, and are reported by the renderer for page\n' +
    ' navigations.\n' +
    " WARNING: don't change these numbers. They are written directly into the\n" +
    ' history database, so future versions will need the same values to match\n' +
    ' the enums.\n' +
    ' A type is made of a core value and a set of qualifiers. A type has one\n' +
    ' core value and 0 or or more qualifiers.\n' +
    ' A Java counterpart will be generated for this enum.  This is why the enum\n' +
    ' uses int32_t and not uint32_t as the underlying type (jint cannot\n' +
    ' represent uint32_t).\n' +
    ' GENERATED_JAVA_ENUM_PACKAGE: org.chromium.ui.base',
  ' Compares two PageTransition types ignoring qualifiers. |rhs| is taken to\n' +
    ' be a compile time constant, and hence must not contain any qualifiers.',
  ' Compares two PageTransition types including qualifiers. Rarely useful,\n' +
    ' PageTransitionCoreTypeIs() is more likely what you need.',
  ' Simplifies the provided transition by removing any qualifier',
  ' Returns true if the given transition is a top-level frame transition, or\n' +
    ' false if the transition was for a subframe.',
  ' Returns whether a transition involves a redirection',
  ' Returns whether a transition is a new navigation (rather than a return\n' +
    ' to a previously committed navigation).',
  ' Return the qualifier',
  ' Returns true if the transition can be triggered by the web instead of\n' +
    ' through UI or similar.',
  ' Return a string version of the core type values.',
  " Ban operator== and operator!= as it's way too easy to forget to strip the\n" +
    ' qualifiers. Use PageTransitionCoreTypeIs() instead or, in rare cases,\n' +
    ' PageTransitionTypeIncludingQualifiersIs().'
]
mock_touch_ui_controller.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
pointer_device.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the maximum number of simultaneous touch contacts supported\n' +
    ' by the device. In the case of devices with multiple digitizers (e.g.\n' +
    ' multiple touchscreens), the value MUST be the maximum of the set of\n' +
    ' maximum supported contacts by each individual digitizer.\n' +
    ' For example, suppose a device has 3 touchscreens, which support 2, 5,\n' +
    ' and 10 simultaneous touch contacts, respectively. This returns 10.\n' +
    ' http://www.w3.org/TR/pointerevents/#widl-Navigator-maxTouchPoints',
  ' Bit field values indicating available pointer types. Identical to\n' +
    ' blink::PointerType enums, enforced by compile-time assertions in\n' +
    ' third_party/blink/public/common/web_preferences/web_preferences.cc.\n' +
    ' GENERATED_JAVA_ENUM_PACKAGE: org.chromium.ui.base\n' +
    ' GENERATED_JAVA_PREFIX_TO_STRIP: POINTER_TYPE_',
  ' Bit field values indicating available hover types. Identical to\n' +
    ' blink::HoverType enums, enforced by compile-time assertions in\n' +
    ' third_party/blink/public/common/web_preferences/web_preferences.cc.\n' +
    ' GENERATED_JAVA_ENUM_PACKAGE: org.chromium.ui.base\n' +
    ' GENERATED_JAVA_PREFIX_TO_STRIP: HOVER_TYPE_',
  ' These values are persisted to logs. Entries should not be renumbered and\n' +
    ' numeric values should never be reused. See PointerDigitizerType in:\n' +
    ' tools/metrics/histograms/metadata/input/enums.xml',
  ' Description of an input pointer device.'
]
touch_editing_controller.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by widget that has text that can be selected/edited\n' +
    ' using touch.'
]
touch_ui_controller.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Central controller to handle touch UI modes.'
]
empty_filter.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Empty filter is a fake filter. Always returns the same input position as\n' +
    ' the filtered position. Mainly used for testing purpose.'
]
empty_predictor.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An empty predictor class. This will not generate any prediction.'
]
input_filter.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class expects a sequence of inputs with coordinates and timestamps to\n' +
    ' return a smooth path from the sent coordinates.'
]
input_predictor.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class expects a sequence of inputs with their coordinates and timestamps\n' +
    ' and models the input path. It then can predict the coordinates at any given\n' +
    ' time.'
]
input_predictor_unittest_helpers.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class for predictor unit tests'
]
kalman_filter.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This Kalman filter is used to predict state in one axles.'
]
kalman_predictor.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Class to perform kalman filter prediction inherited from InputPredictor.\n' +
    ' This predictor uses kalman filters to predict the current status of the\n' +
    ' motion. Then it predict the future points using <current_position,\n' +
    ' predicted_velocity, predicted_acceleration>. Each kalman_filter will only\n' +
    ' be used to predict one dimension (x, y).'
]
least_squares_predictor.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class use a quadratic least square regression model:\n' +
    ' y = b0 + b1 * x + b2 * x ^ 2.\n' +
    ' See https://en.wikipedia.org/wiki/Linear_least_squares_(mathematics)'
]
linear_predictor.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class use a linear model for prediction\n' +
    ' You can choose between a first order equation:\n' +
    ' pred_p = last_p + velocity*pred_time\n' +
    ' and a second order equation:\n' +
    ' pred_p = last_p + velocity*pred_dt + 0.5*acceleration*pred_dt^2'
]
linear_resampling.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class use linear extrapolates / interpolates to resample events to\n' +
    ' frame_time - kResampleLatency. This resampling logic is to match the\n' +
    " resampling behavior on Android. It's not designed for pointerevent's\n" +
    ' PredictedEvent and should not be used for that purpose.\n' +
    ' Resampling on Android see:\n' +
    ' https://android.googlesource.com/platform/frameworks/native/+/master/libs/input/InputTransport.cpp'
]
one_euro_filter.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class uses the 1€ filter from third party.\n' +
    ' See this page : http://cristal.univ-lille.fr/~casiez/1euro/\n' +
    ' to know how the filter works and how to tune it'
]
prediction_metrics_handler.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Class used for evaluating input prediction.\n' +
    ' The basic idea is to buffer predicted and real events to be able to compare\n' +
    ' a predicted position to its corresponding interpolated real position with\n' +
    ' few metrics.'
]
prediction_unittest_helpers.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
allowlist.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The purpose of this function template is to support resource allowlisting,\n' +
    ' which is a mechanism for filtering out unused resources from the .pak files\n' +
    ' that we ship. The grit program generates macros that look like this:\n' +
    ' #define IDS_FOO (::ui::AllowlistedResource<123>(), 123)\n' +
    ' A reference via the macro to the resource causes the function template to be\n' +
    ' instantiated with the given resource identifier and (because of the used\n' +
    ' attribute) emitted into the object file. After the program is linked, the\n' +
    ' used resource identifiers can be found by searching the debug info in the\n' +
    " linker's output file for instantiations of the template. The implementation\n" +
    ' of this lives in tools/resources/generate_resource_allowlist.py.\n' +
    ' In ELF linkers, the function definitions themselves are dropped from the\n' +
    ' final output file because of --gc-sections (debug info is immune to\n' +
    ' --gc-sections). In COFF and Mach-O, the used attribute also causes the linker\n' +
    " to preserve the function definitions in the output file, but that shouldn't\n" +
    ' affect binary size significantly because all of the function definitions are\n' +
    " the same, which means that they can be ICF'd together (or, more likely, ICF'd\n" +
    ' with an existing empty function).\n' +
    ' Because the AllowlistedResource function is constexpr, the definitions of the\n' +
    ' resource macros are integral constant expressions, which means that they can\n' +
    ' appear in places like case statements in switches.'
]
data_pack.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' DataPack represents a read-only view onto an on-disk file that contains\n' +
    " (key, value) pairs of data.  It's used to store static resources like\n" +
    ' translation strings and images.',
  ' Pack Entry and Alias. This removes padding between fields, and alignment\n' +
    ' requirements, which makes the structs usable for aliasing into the input\n' +
    ' buffer directly.\n' +
    ' TODO(davidben): Ideally we would load these structures through memcpy, or\n' +
    ' a little-endian variant of base/big_endian.h, rather than type-punning\n' +
    ' pointers. This code currently depends on Chromium disabling strict aliasing.'
]
data_pack_literal.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
data_pack_with_resource_sharing_lacros.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is used in lacros to reduce memory usage. The majority\n' +
    ' of the resources that are needed by lacros-chrome ship with ash-chrome.\n' +
    ' To avoid memory mapping similar (large) files (resulting in increased memory\n' +
    ' usage), this class shares resources with ash-chrome. Sharing is\n' +
    ' done by determining which resources are identical and maintaining a\n' +
    ' mapping file that maps from lacros-chrome resource id to ash-chrome\n' +
    ' resource id. Resources that are unique to lacros-chrome are placed\n' +
    ' in a fallback file.\n' +
    ' The mapping file is recreated as necessary.'
]
mock_resource_bundle_delegate.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
resource_bundle.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ResourceBundle is a central facility to load images and other resources,\n' +
    ' such as theme graphics. Every resource is loaded only once.'
]
resource_bundle_android.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Loads "resources.apk" from the .apk. Falls back to loading from disk, which\n' +
    ' is necessary for tests.',
  ' Loads a PAK file from the APK and makes the contained resources accessible.',
  ' Returns the file descriptor and region for resources.pak.',
  ' Returns the file descriptor and region for chrome_100_percent.pak.',
  ' Returns the file descriptor and region for the locale .pak file.',
  ' Returns the file descriptor and region for the secondary locale .pak file.',
  ' Tell ResourceBundle to locate locale pak files via\n' +
    ' GetPathForAndroidLocalePakWithinApk rather than looking for them on disk.',
  ' Tell ResourceBundle to load secondary locale .pak files.',
  " Returns the path within the apk for the given locale's .pak file, or an\n" +
    " empty string if it doesn't exist.\n" +
    ' Only locale paks for the active Android language can be retrieved.\n' +
    ' If |in_split| is true, look into bundle split-specific location (e.g.\n' +
    " 'assets/locales#lang_<lang>/<locale>.pak', otherwise use the default\n" +
    " WebView-related location, i.e. 'assets/stored-locales/<locale>.pak'.\n" +
    ' If |log_error|, logs the path to logcat, but does not abort.',
  ' Called in test when there are no locale pak files available.',
  ' Get the density of the primary display. Use this instead of using Display\n' +
    ' to avoid initializing Display in child processes.'
]
resource_bundle_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' NOTE: This needs to be called before initializing ResourceBundle if your\n' +
    ' resources are not stored in the executable.',
  ' Loads and returns an icon from the app module.',
  ' Loads and returns a cursor from the app module.'
]
resource_data_dll_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
resource_handle.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
resource_scale_factor.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Supported resource scale factors for the platform. This is used as an index\n' +
    ' into the array `kResourceScaleFactorScales` which maps the enum value to a\n' +
    ' float. `kScaleFactorNone` is used for density independent resources such as\n' +
    ' string, html/js files or an image that can be used for any scale factors\n' +
    ' (such as wallpapers).',
  ' Returns the image scale for the scale factor passed in.',
  ' Changes the value of `GetSupportedScaleFactors` to `scale_factors`. Use\n' +
    ' `ScopedSetSupportedResourceScaleFactors` for unit tests to avoid affecting\n' +
    ' the state of other tests.',
  ' Returns a vector with the scale factors which are supported by this\n' +
    ' platform, in ascending order.',
  ' Returns the supported ResourceScaleFactor which most closely matches `scale`.',
  ' Returns a resource scale factor value that can be used to load a resource\n' +
    ' that will later be scaled to `scale` minimizing quality loss. This means\n' +
    ' that, instead of the closest resource scale factor, it might return a\n' +
    ' resource meant for a bigger scale factor.',
  ' Returns the maximum supported ResourceScaleFactor.',
  ' Returns the maximum supported ResourceScaleFactor as a float.',
  ' Returns true if the scale passed in is the list of supported scales for\n' +
    ' the platform.',
  ' Class which changes the value of GetSupportedResourceScaleFactors() to\n' +
    ' `new_scale_factors` for the duration of its lifetime.'
]
scoped_file_writer.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Convenience class to write data to a file. Usage is the following:\n' +
    ' 1) Create a new instance, passing a base::FilePath.\n' +
    ' 2) Call Write() repeatedly to write all desired data to the file.\n' +
    ' 3) Call valid() whenever you want to know if something failed.\n' +
    ' 4) The file is closed automatically on destruction. Though it is possible\n' +
    '    to call the Close() method before that.\n' +
    ' If an I/O error happens, a PLOG(ERROR) message will be generated, and\n' +
    ' a flag will be set in the writer, telling it to ignore future Write()\n' +
    ' requests. This allows the caller to ignore error handling until the\n' +
    ' very end, as in:\n' +
    '   {\n' +
    '     base::ScopedFileWriter  writer(<some-path>);\n' +
    '     writer.Write(&foo, sizeof(foo));\n' +
    '     writer.Write(&bar, sizeof(bar));\n' +
    '     ....\n' +
    '     writer.Write(&zoo, sizeof(zoo));\n' +
    '     if (!writer.valid()) {\n' +
    '        // An error happened.\n' +
    '     }\n' +
    '   }   // closes the file.'
]
scoped_startup_resource_bundle.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ensures there is a loaded shared ResourceBundle for accesses to localized\n' +
    ' strings. This class should be used to scope calls that access early startup\n' +
    ' messages through ResourceBundle::GetLocalizedString(...). Since the user\n' +
    ' locale is stored into Local State, it can be accessed during early\n' +
    ' startup phases. Therefore, locale from the command-line or the system locale\n' +
    ' is used instead.\n' +
    ' TODO(http://crbug.com/1365983): This class is scoping the early localized\n' +
    ' string accesses. A better way to handle locale and Chrome resource bundle on\n' +
    ' startup should be used.'
]
temporary_shared_resource_path_chromeos.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Return temporary shared resource path name for `shared_resource_path` which\n' +
    ' represents the name of shared resource pak.\n' +
    ' Shared resource pak is renamed to this temporary name on Lacros launch to\n' +
    ' avoid being accessed asynchronously before the verification. It will be moved\n' +
    " back after it's verified in DataPackWithResourceSharing.\n" +
    ' Note that the temporary shared resource file path might differ between ash\n' +
    ' and lacros if the version is not up to date.'
]
scoped_visibility_tracker.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class tracks the total time it is visible, based on receiving\n' +
    ' OnShown/OnHidden notifications, which are logically idempotent.'
]
shortcut_mapping_pref_delegate.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40203434): Remove this class once kDeviceI18nShortcutsEnabled\n' +
    ' policy is deprecated.'
]
template_expressions.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file defines utility functions for replacing template expressions.\n' +
    ' For example "Hello ${name}" could have ${name} replaced by the user\'s name.',
  ' Map of strings for template replacement in |ReplaceTemplateExpressions|.',
  ' Convert a dictionary to a replacement map. This helper function is to assist\n' +
    ' migration to using TemplateReplacements directly (which is preferred).\n' +
    ' TODO(dschuyler): remove this function by using TemplateReplacements directly.',
  ' Replace $i18n*{foo} in the format string with the value for the foo key in\n' +
    ' |replacements|.  If the key is not found in the |replacements| that item will\n' +
    ' be unaltered.',
  ' Replace $i18n*{foo} in the HTML template contained in |source| with the\n' +
    ' value for the foo key in |replacements| and return the result in |output|.\n' +
    ' Only $i18n*{...} expressions in the HTML portion of the JS source will be\n' +
    ' replaced; such expressions in the rest of the JS code will be left unaltered.\n' +
    ' If no template is found, |source| will be returned in |output| unaltered. If\n' +
    ' a key is not found in the |replacements| that item will be unaltered. Returns\n' +
    ' true on success, false on failure. On failure, |output| will not populated.\n' +
    ' Replacement will fail if a single HTML template string cannot be identified\n' +
    ' (e.g. not terminated, multiple _template: html`... in a single file), or if\n' +
    ' executing the replacements would be unsafe (e.g. result in unescaped\n' +
    ' backticks or "${" within the HTML string).\n' +
    ' Note: Currently, this only supports the legacy Polymer syntax, i.e.:\n' +
    '     _template: html` ... `,'
]
cocoa_helper.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' CocoaTestHelperWindow behaves differently from a regular NSWindow in the\n' +
    ' following ways:\n' +
    ' - It allows -isKeyWindow to be manipulated to test things like focus rings\n' +
    "   (which background windows won't normally display).\n" +
    ' - It ignores the system setting for full keyboard access and returns a value\n' +
    '   based on pretendFullKeyboardAccessIsEnabled.',
  ' Value to return for -isKeyWindow.',
  ' Value to return for -isOnActiveSpace. Posts\n' +
    ' NSWorkspaceActiveSpaceDidChangeNotification when set.',
  ' Whether to handle the key view loop as if full keyboard access is enabled.',
  ' Whether to use or ignore the default constraints for window sizing and\n' +
    ' placement.',
  " All of the window's valid key views, in order.",
  ' Init a borderless non-deferred window with a backing store.',
  ' Init with a default frame.',
  ' Sets the responder passed in as first responder, and sets the window\n' +
    ' so that it will return "YES" if asked if it key window. It does not actually\n' +
    ' make the window key.',
  ' Clears the first responder duty for the window and returns the window\n' +
    ' to being non-key.',
  ' A test class that all tests that depend on AppKit should inherit from.\n' +
    ' Sets up paths correctly, and makes sure that any windows created in the test\n' +
    ' are closed down properly by the test.'
]
idle_test_utils.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_appearance_listener.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Listener to observe the keyboard coming up or down.',
  ' Returns YES if the keyboard is currently visible.'
]
ui_image_test_utils.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a new UIImage of size |size| with a solid color of |color|. This\n' +
    ' is the same as calling UIImageWithSizeAndSolidColorAndScale with a scale\n' +
    ' of 1.0.',
  ' Returns a new UIImage of size |size| with a solid color of |color|\n' +
    ' at scale |scale|.',
  ' Disclaimer, this is a testing function with plenty of limitations:\n' +
    ' Requires the UIImages to be backed by a CGImage, ignores colorspace, may\n' +
    ' return false negatives, not efficient, and probably other things.\n' +
    ' Returns whether the pixels in |image_1| are equal to the pixels in\n' +
    ' |image_2|.\n' +
    " This is unlike UIImage's |isEqual:| method which only returns YES if the\n" +
    " memory backing the images is the same (see Apple's response to\n" +
    ' radar://30188145).'
]
menu_test_observer.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The MenuTestObserver is a helper class for testing around NSMenu. It can\n' +
    ' be used to verify that a menu has or has not been opened, as well as to\n' +
    ' perform some action while the menu is tracking.',
  ' A flag to indicate whether the menu is currently open.',
  ' A flag to indicate if the menu has ever been opened.',
  ' If YES, this test observer will close the menu after it is opened.',
  ' An optional block callback to run after the menu has been opened. This will\n' +
    ' be called before closing the menu if |closeAfterOpening| is YES.',
  ' Designated initializer. This does not retain the |menu|.'
]
mock_base_window.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ns_ax_tree_validator.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Validates the accessibility tree rooted at `root`. If at least one problem is\n' +
    ' found, returns an `AXTreeProblemDetails` as described above; if not, returns\n' +
    ' std::nullopt.',
  ' Prints the accessibility tree rooted at `root`. This function is useful for\n' +
    ' debugging failures of ValidateNSAXTree tests.'
]
scoped_fake_full_keyboard_access.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A singleton class which swizzles [NSApp isFullKeyboardAccessEnabled] so\n' +
    ' that it returns the value set using set_full_keyboard_access_state().'
]
scoped_fake_nswindow_focus.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Simulates key and main status by listening for -makeKeyWindow,\n' +
    ' -makeMainWindow and -orderOut:. This allows test coverage of code relying on\n' +
    ' window focus changes without resorting to an interactive_ui_test.'
]
scoped_fake_nswindow_fullscreen.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Simulates fullscreen transitions on NSWindows. This allows testing fullscreen\n' +
    " logic without relying on the OS's fullscreen behavior as that tends to be\n" +
    ' flaky, even in interactive tests. We only allow one NSWindow per process to\n' +
    ' be fullscreen at a time, which should be sufficient for tests.'
]
scoped_preferred_scroller_style_mac.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Overrides system setting for scrollbar style with NSScrollerOverlay if we\n' +
    ' want the scrollbar to overlay. Otherwise, override with\n' +
    ' NSScrollerStyleLegacy which means "always show scrollbars".'
]
skia_gold_matching_algorithm.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Describes what algorithm to use to match golden images.\n' +
    ' Fuzzy and Sobel algorithms have adjustable parameters:\n' +
    ' Fuzzy has the max number of different pixels, the max per-channel delta sum\n' +
    ' (i.e. how much a pixel can differ by and still be considered the same), and\n' +
    ' how many border pixels to ignore. The number of ignored border pixels is\n' +
    ' mainly to make the Sobel filter work better, as if an edge goes all the way\n' +
    " to the border of the image, the pixels along the border won't be blacked\n" +
    ' out due to the Sobel filter.\n' +
    ' Sobel has the parameters of fuzzy + the edge threshold, which determines how\n' +
    ' much of the image should be blacked out based on the generated Sobel filter.\n' +
    ' In general, it works like this:\n' +
    ' 1. Try an exact comparison check against all approved images for the test,\n' +
    ' returning success if a hash matches.\n' +
    ' 2. Get the most recent image for the trace (test + any reported JSON keys,\n' +
    ' e.g. OS/hardware information)\n' +
    ' 3. If the algorithm is Sobel, generate a Sobel filter and black out parts\n' +
    ' of the image based on the provided edge threshold.\n' +
    ' 4. Do a fuzzy comparison of the images.\n' +
    ' To determine the suitable parameter values using historical data for a test:\n' +
    ' https://cs.chromium.org/chromium/src/content/test/gpu/gold_inexact_matching/determine_gold_inexact_parameters.py',
  ' With this algorithm, an image is regarded to match a golden image when:\n' +
    '   1. the image is an exact match, and\n' +
    '   2. the set of golden images for the test must only contain a single image.\n' +
    ' This algorithm is used in Ash pixel testing to facilitate the gold image\n' +
    ' revision update.\n' +
    ' The main difference between this and `ExactSkiaGoldMatchingAlgorithm` is:\n' +
    ' * ExactSkiaGoldMatchingAlgorithm\n' +
    '   Your test can match multiple valid Gold images. For a test run, if the\n' +
    "   pixel output is one of the Gold images, we consider it's valid and test\n" +
    '   would pass.\n' +
    '   Any committers can approve a new Gold image. The new Gold image would be\n' +
    '   added to the valid Gold images set.\n' +
    ' * PositiveIfOnlyImageAlgorithm\n' +
    '   There is only 1 valid Gold image. No one can approve a new Gold image if\n' +
    '   there is already a Gold image. In order to updating the Gold image, you\n' +
    "   need to add a revision to the screenshot name, so it's treated as a new\n" +
    "   test from Gold's perspective.\n" +
    ' Say you have a button pixel test with screenshot name `pwd_manager_button1`.\n' +
    ' With ExactSkiaGoldMatchingAlgorithm:\n' +
    '   When a cl updates all button styles, the cl owner may approve all new\n' +
    '   styles via Skia Gold, gets a button style owner to approve it, and merges\n' +
    '   the change.\n' +
    '   In this case, the feature owner(pwd manager UI owner) would not get\n' +
    "   notified. If you as feature owner don't want this behavior, you can use\n" +
    ' PositiveIfOnlyImageAlgorithm:\n' +
    '   Your screenshot name would be `pwd_manager_button1.rev0`. When a cl updates\n' +
    '   all button styles, the cl owner need to edit your test case, change the\n' +
    "   screenshot name to `pwd_manager_button1.rev1`, and seek feature owner's\n" +
    '   approval for the test case change. In this way, feature owner would know\n' +
    '   the UI changes.\n' +
    ' This algorithm would increase the Gold image maintenance cost. Toolkit owners\n' +
    ' who regularly update styles might be hindered as they need to edit all test\n' +
    ' cases. So use your best judgement for the algorithm you choose.'
]
skia_gold_pixel_diff.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Keys used to identify test environment information that can possibly affect\n' +
    ' pixel output. If your test depends on some new environment information, add\n' +
    ' it here and update |TestEnvironmentKeyToString|.',
  ' This is the utility class for Skia Gold pixeltest.'
]
test_dialog_model_host.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_controls.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A set of utility functions to generate native events in platform\n' +
    ' independent way. Note that since the implementations depend on a window being\n' +
    ' top level, these can only be called from test suites that are not sharded.\n' +
    ' For aura tests, please look into |aura::test:EventGenerator| first. This\n' +
    ' class provides a way to emulate events in synchronous way and it is often\n' +
    ' easier to write tests with this class than using |ui_controls|.\n' +
    ' Many of the functions in this class include a variant that takes a Closure.\n' +
    ' The version that takes a Closure waits until the generated event is\n' +
    ' processed. Once the generated event is processed the Closure is Run (and\n' +
    ' deleted). Note that this is a somewhat fragile process in that any event of\n' +
    ' the correct type (key down, mouse click, etc.) will trigger the Closure to be\n' +
    ' run. Hence a usage such as\n' +
    '   SendKeyPress(...);\n' +
    '   SendKeyPressNotifyWhenDone(..., task);\n' +
    ' might trigger |task| early.\n' +
    ' Note: Windows does not currently do anything with the |window| argument for\n' +
    ' these functions, so passing NULL is ok.',
  ' Per the above comment, these methods can only be called from non-sharded test\n' +
    " suites. This method ensures that they're not accidently called by sharded\n" +
    ' tests.',
  ' Reset the state in ui controls logic that are updated by the test to the\n' +
    ' initial state.',
  ' Generates keyboard accelerator state in bitmap from each key boolean.',
  ' Send a key press with/without modifier keys. This will trigger a key release\n' +
    ' event after the key press.\n' +
    " If you're writing a test chances are you want the variant in ui_test_utils.\n" +
    ' See it for details.',
  ' The keys that may be held down while generating a keyboard/mouse event.',
  ' Not supported on win.\n TODO(crbug.com/40256300): Support this on win.',
  ' Sends a key press and/or release message with/without modifier keys.\n' +
    ' `key_event_types` is a bitmask of KeyEventType constants that indicates what\n' +
    ' events are generated.',
  ' This value specifies that no window hint is given and an appropriate target\n' +
    ' window should be deduced from the target or current mouse position.',
  ' Simulate a mouse move.\n' +
    ' The `window_hint` - if specified - helps the method correctly target the\n' +
    ' appropriate window on platforms where mouse events must be explicitly\n' +
    ' targeted.\n' +
    ' Returns false on Windows if the desired position is not over a window\n' +
    ' belonging to the current process.',
  ' Used to indicate the state of the button when generating events.',
  ' Sends a mouse down and/or up message with optional one or multiple\n' +
    ' accelerator keys. The click will be sent to wherever the cursor\n' +
    ' currently is, so be sure to move the cursor before calling this\n' +
    ' (and be sure the cursor has arrived!).\n' +
    ' |accelerator_state| is a bitmask of AcceleratorState.\n' +
    ' The `window_hint` - if specified - helps the method correctly target the\n' +
    ' appropriate window on platforms where mouse events must be explicitly\n' +
    ' targeted.',
  ' Same as SendMouseEvents with UP | DOWN.',
  ' Send WM_POINTER messages to generate touch events. There is no way to detect\n' +
    " when events are received by chrome, it's up to users of this API to detect\n" +
    ' when events arrive. |action| is a bitmask of the TouchType constants that\n' +
    ' indicate what events are generated, |num| is the number of the touch\n' +
    ' pointers, |screen_x| and |screen_y| are the screen coordinates of a touch\n' +
    ' pointer.',
  ' Sends a TouchEvent to the window system. |action| is a bitmask of the\n' +
    ' TouchType constants that indicates what events are generated, |id| identifies\n' +
    ' the touch point.\n' +
    ' TODO(mukai): consolidate this interface with the Windows SendTouchEvents.',
  " Forces the platform implementation to use screen coordinates, even if they're\n" +
    ' not really available, the next time that ui_controls::SendMouseMove() or\n' +
    ' ui_controls::SendMouseMoveNotifyWhenDone() is called, or some other method\n' +
    ' using these methods internally, e.g. ui_test_utils::SendMouseMoveSync(). All\n' +
    ' following calls will behave normally (unless this method is called again).',
  ' Returns true when tests need to use extra Tab and Shift-Tab key events\n' +
    ' to traverse to the desired item; because the application is configured to\n' +
    ' traverse more elements for accessibility reasons.',
  ' TODO(vincentchiang): Move to another test API file.\n' +
    ' Update the test display configurations in accordance to the passed in\n' +
    ' |display_specs| which is a comma separated list of display specs. See\n' +
    ' ash::DisplayManagerTestApi::UpdateDisplay for detail.'
]
ui_controls_aura.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface to provide Aura implementation of UI control.'
]
ui_controls_internal_win.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A utility functions for windows to send key or mouse events and\n' +
    ' run the task. These functions are internal, but exported so that\n' +
    ' aura implementation can use these utility functions.'
]
view_tree_validator.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Validates the view tree rooted at |root|. If at least one problem is found,\n' +
    ' returns a |ViewTreeProblemDetails| as described above; if not, returns an\n' +
    ' empty option.'
]
windowed_nsnotification_observer.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class starts watching for an NSNotification upon construction and can\n' +
    ' wait until the notification is observed. This guarantees that notifications\n' +
    ' fired between calls to -init and -wait will be caught.',
  ' Watch for an NSNotification on the default notification center for the given\n' +
    ' |notificationSender|, or a nil object if omitted.',
  ' Watch for an NSNotification on the default notification center from a\n' +
    ' particular object.',
  ' Watch for an NSNotification on the shared workspace notification center for\n' +
    ' the given application.',
  ' Waits for |minimumCount| notifications to be observed and returns YES.\n' +
    ' Returns NO on a timeout. This can be called multiple times.',
  ' Returns YES if any notification has been observed, or spins a RunLoop until\n' +
    ' it either is observed, or a timeout occurs. Returns NO on a timeout.'
]
bytes_formatting.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Simple API ------------------------------------------------------------------',
  ' Simple call to return a byte quantity as a string in human-readable format.\n' +
    ' Ex: FormatBytes(512) => "512 B"\n' +
    ' Ex: FormatBytes(101479) => "99.1 kB"',
  ' Simple call to return a speed as a string in human-readable format.\n' +
    ' Ex: FormatSpeed(512) => "512 B/s"\n' +
    ' Ex: FormatSpeed(101479) => "99.1 kB/s"',
  ' Less-Simple API -------------------------------------------------------------',
  ' Return the unit type that is appropriate for displaying the amount of bytes\n' +
    " passed in. Most of the time, an explicit call to this isn't necessary; just\n" +
    ' use FormatBytes()/FormatSpeed() above.',
  ' Return a byte quantity as a string in human-readable format with an optional\n' +
    ' unit suffix. Specify in the |units| argument the units to be used.\n' +
    ' Ex: FormatBytes(512, DATA_UNITS_KIBIBYTE, true) => "0.5 kB"\n' +
    ' Ex: FormatBytes(10*1024, DATA_UNITS_MEBIBYTE, false) => "0.1"',
  ' As above, but with "/s" units for speed values.\n' +
    ' Ex: FormatSpeed(512, DATA_UNITS_KIBIBYTE, true) => "0.5 kB/s"\n' +
    ' Ex: FormatSpeed(10*1024, DATA_UNITS_MEBIBYTE, false) => "0.1"'
]
theme_provider.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' ThemeProvider\n' +
    '   ThemeProvider is an abstract class that defines the API that should be\n' +
    '   implemented to provide bitmaps and color information for a given theme.\n' +
    '//////////////////////////////////////////////////////////////////////////////'
]
themed_vector_icon.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_base_features.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if the system should use WM_POINTER events for touch events.',
  ' Used to enable forced colors mode for web content.',
  ' Used to enable the eye-dropper in the refresh color-picker.',
  ' Used to enable keyboard accessible tooltips in in-page content\n' +
    ' (i.e., inside Blink). See\n' +
    ' ::views::features::kKeyboardAccessibleTooltipInViews for\n' +
    ' keyboard-accessible tooltips in Views UI.',
  ' Indicates whether DrmOverlayManager should used the synchronous API to\n' +
    ' perform pageflip tests.',
  ' The type of predictor to use for the resampling events. These values are\n' +
    " used as the 'predictor' feature param for\n" +
    ' |blink::features::kResamplingScrollEvents|.',
  ' Enables resampling of scroll events using an experimental latency of +3.3ms\n' +
    ' instead of the original -5ms.',
  ' The type of prediction used. TimeBased uses a fixed timing, FramesBased uses\n' +
    ' a ratio of the vsync refresh rate. The timing/ratio can be changed on the\n' +
    ' command line through a `latency` param.',
  ' The default values for `latency`',
  ' The type of filter to use for filtering events. These values are used as the\n' +
    " 'filter' feature param for |blink::features::kFilteringScrollPrediction|.",
  ' Android only feature, for swipe to move cursor.',
  ' Enables UI debugging tools such as shortcuts.',
  ' Enables Raw Draw.',
  ' This feature indicates that this device should have variable refresh rates\n' +
    ' enabled by default if available. This overrides the default value of\n' +
    ' |kEnableVariableRefreshRate|. This flag is added by cros-config and not\n' +
    ' exposed in the chrome://flags UI.',
  ' Enables the variable refresh rate feature for Borealis gaming only.',
  ' Enables the variable refresh rate feature at all times.',
  ' Font Smoothing, a CoreText technique, simulates optical sizes to enhance text\n' +
    ' readability at smaller scales. In practice, it leads to an increased\n' +
    ' perception of text weight, creating discrepancies between renderings in UX\n' +
    ' design tools and actual macOS displays. This feature is only effective when\n' +
    ' ChromeRefresh2023 is enabled.',
  ' Use font settings for contrast and gamma as specified in system settings.\n' +
    ' If not set, these values fall back to the pre-defined Skia defaults.',
  ' Increases the contrast of text to align more closely with contemporary\n' +
    ' applications.',
  ' Use the UTF-8 encoding for SVG images instead of UTF-16.'
]
ui_base_paths.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file declares path keys for various special directories. These can be\n' +
    ' used with the PathService to access these directories and files.',
  ' Call once to register the provider for the path keys defined above.'
]
ui_base_switches.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines all the command-line switches used by ui/base.',
  ' Test related.'
]
ui_base_switches_util.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_base_types.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Alias until all clients of `WindowShowState` have been migrated.\n' +
    ' Will be removed once that is complete.',
  ' Alias for the old enumerators of `WindowShowState` until all clients have\n' +
    ' been migrated. Will be removed once that is complete.',
  ' Specifies which edges of the window are tiled.\n' +
    ' Wayland can notify the application if certain edge of the window is\n' +
    ' "tiled": https://wayland.app/protocols/xdg-shell#xdg_toplevel:enum:state.\n' +
    ' Chromium should not draw frame decorations for the tiled edges.',
  " MdTextButtons have various button styles that can change the button's\n" +
    ' relative prominence/priority. The relative priority (least to greatest) is\n' +
    ' as follows:\n' +
    ' kText -> kDefault -> kTonal -> kProminent\n' +
    ' The default styles are described as below.\n' +
    ' kDefault: White background with blue text and a solid outline.\n' +
    ' kProminent: Blue background with white text.\n' +
    ' kTonal: Cyan background with black text.\n' +
    ' kText: White background with blue text but no outline.',
  ' The class of window and its overall z-order. Only the Mac provides this\n' +
    ' level of z-order granularity. For other platforms, which only provide a\n' +
    ' distinction between "normal" and "always on top" windows, any of the values\n' +
    ' here that aren\'t `kNormal` are treated equally as "always on top".\n' +
    ' TODO(crbug.com/40237029): For non-desktop widgets on Linux and Windows,\n' +
    ' this z-order currently does not have any effect.',
  ' TODO(varunjain): Remove MENU_SOURCE_NONE (crbug.com/250964)\n' +
    ' A Java counterpart will be generated for this enum.\n' +
    ' GENERATED_JAVA_ENUM_PACKAGE: org.chromium.ui.base\n' +
    ' These are used in histograms, do not remove/renumber entries. Only add at the\n' +
    ' end just before MENU_SOURCE_TYPE_LAST. Also remember to update the\n' +
    ' MenuSourceType enum listing in tools/metrics/histograms/enums.xml.\n' +
    ' Lastly, any new type here needs to be synced with ui_base_types.mojom.',
  ' Where an owned anchored window should be anchored to. Used by such backends\n' +
    " as Wayland, which doesn't provide clients with on screen coordinates, but\n" +
    ' rather forces them to position children windows relative to toplevel windows.\n' +
    ' They use anchor bounds, anchor position, gravity and constraints to\n' +
    ' reposition such windows if the originally intended position caused the\n' +
    ' surface to be constrained.',
  ' What direction an owned window should be positioned relatively to its anchor.',
  ' How an owned window can be resized/repositioned by a system compositor.'
]
user_activity_detector.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Watches for input events and notifies observers that the user is active.'
]
user_activity_observer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface for classes that want to be notified about user activity.\n' +
    ' Implementations should register themselves with UserActivityDetector.'
]
view_prop.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ViewProp maintains a key/value pair for a particular view. ViewProp is\n' +
    " designed as a replacement for the Win32's SetProp, but does not make use of\n" +
    ' window manager memory. ViewProp shares similar semantics as SetProp, the\n' +
    ' value for a particular view/key pair comes from the last ViewProp created.'
]
color_manager_util.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A 2.4 gamma for the BT2087 transfer function.',
  ' These structs are used for holding ColorSpace enums, and the version of the\n' +
    ' color management protocol their support was introduced.',
  ' A map from the zcr_color_manager_v1 chromaticity_names enum values\n' +
    ' representing well-known chromaticities, to their equivalent PrimaryIDs.\n' +
    ' See components/exo/wayland/protocol/chrome-color-management.xml',
  ' A map from the zcr_color_manager_v1 eotf_names enum values\n' +
    ' representing well-known EOTFs, to their equivalent TransferIDs.\n' +
    ' See components/exo/wayland/protocol/chrome-color-management.xml',
  ' A map from the SDR zcr_color_manager_v1 eotf_names enum values\n' +
    ' representing well-known EOTFs, to their equivalent transfer functions.\n' +
    ' See components/exo/wayland/protocol/chrome-color-management.xml',
  ' A map from the HDR zcr_color_manager_v1 eotf_names enum values\n' +
    ' representing well-known EOTFs, to their equivalent transfer functions.\n' +
    ' See components/exo/wayland/protocol/chrome-color-management.xml',
  ' A map from zcr_color_manager_v1 matrix_names enum values to\n' +
    ' gfx::ColorSpace::MatrixIDs.',
  ' A map from zcr_color_manager_v1 range_names enum values to\n' +
    ' gfx::ColorSpace::RangeIDs.'
]
wayland_client_input_types.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_display_util.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Convert int64_t display id into pair of uint32_t.',
  ' Convert pair of uint32_t into display id int64_t.'
]
wayland_input_types_impl.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file is designed to be included from wayland_*_input_types.cc only,\n' +
    ' in order to share the mapping rules.\n' +
    ' So please do not use in other places.',
  ' List all TextInputType here.\n' +
    " This is used to create a mapping between TextInputType and Wayland's\n" +
    ' zcr_extended_text_input_v1_input_type.\n' +
    ' If a new entry is added to TextInputType, then corresponding code\n' +
    " needs to be added to the wayland's extension, ozone/wayland (wayland client),\n" +
    ' and components/exo (wayland compositor).',
  ' Similar to MAP_TYPES, list all TextInputMode. See above how to update.',
  ' Similar to MAP_TYPES, list all TextInputFlags. See above how to update.',
  ' Note: we assume that the source file including this header implementation\n' +
    ' already includes either text-input-extension-unstable-v1-server-protocol.h\n' +
    ' or text-input-extension-unstable-v1-client-protocol.h.'
]
wayland_server_input_types.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Coverts zcr_extended_text_input::input_type into ui::TextInputType.\n' +
    ' Returns nullopt if unknown type is given.\n' +
    ' This can happen if wayland client (e.g. Lacros) and wayland compositor\n' +
    ' (e.g. exo) have version skew, so that the wayland client sends a new\n' +
    ' type that the wayland compositor cannot understand.',
  ' Converts zcr_extended_text_input::input_mode into ui::TextInputMode.',
  ' Converts a bit set of ui::TextInputFlags into a bit set of\n' +
    ' zcr_extended_text_input::input_flags.\n' +
    ' Returns a pair of (converted result, unrecognized flags).'
]
i18n_source_stream.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
jstemplate_builder.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This provides some helper methods for building and rendering an\n' +
    ' internal html page.  The flow is as follows:\n' +
    " - instantiate a builder given a webframe that we're going to render content\n" +
    '   into\n' +
    ' - load the template html and load the jstemplate javascript into the frame\n' +
    ' - given a json data object, run the jstemplate javascript which fills in\n' +
    '   template values',
  ' A helper function that generates a string of HTML to be loaded.  The\n' +
    ' string includes the HTML and the javascript code necessary to generate the\n' +
    ' full page with support for i18n Templates.',
  ' Assigns the given json data into |loadTimeData|, without a <script> tag.'
]
resource_path.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
web_ui_util.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Convenience routine to convert SkBitmap object to data url\n' +
    ' so that it can be used in WebUI.',
  ' Convenience routine to convert an in-memory PNG to a data url for WebUI use.',
  ' Extracts a disposition from click event arguments. |args| should contain\n' +
    ' an integer button and booleans alt key, ctrl key, meta key, and shift key\n' +
    ' (in that order), starting at |start_index|.',
  ' Parse a formatted scale factor string into float and sets to |scale_factor|.',
  ' Parses a URL containing some path [{frame}]@{scale}x. If it contains a\n' +
    ' scale factor then it is returned and the associated part of the URL is\n' +
    ' removed from the returned  |path|, otherwise the default scale factor is\n' +
    ' returned and |path| is left intact. If it contains a frame index then it\n' +
    ' is returned and the associated part of the URL is removed from the\n' +
    ' returned |path|, otherwise the default frame index is returned and |path|\n' +
    ' is left intact.',
  ' Helper function to set some default values (e.g., font family, size,\n' +
    ' language, and text direction) into the given dictionary. Requires an\n' +
    ' application locale (i.e. g_browser_process->GetApplicationLocale()).',
  ' Get a CSS declaration for common text styles for all of Web UI.',
  ' Appends the CSS declaration returned by GetWebUiCssTextDefaults() as an\n' +
    ' inline stylesheet.',
  ' Get some common font styles for all of WebUI.',
  ' A helper function that generates a string of HTML to be loaded. The returned\n' +
    ' string has all $i8n{...} placeholders replaced with localized strings and\n' +
    ' also includes an script that injects `loadTimeDataRaw` in the global `window`\n' +
    ' scope.'
]
accessibility_ids_win.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Windows accessibility (MSAA) notifications are posted on an\n' +
    ' accessible object using its owning HWND and a long integer child id.\n' +
    ' Positive child ids can be used to enumerate the children of an object,\n' +
    ' so in Chromium we use only negative values to represent ids of specific\n' +
    ' accessible objects.\n' +
    ' Chromium currently has two separate systems that use accessibility ids:\n' +
    ' * views (ui/views/accessibility), and\n' +
    ' * web (content/browser/accessibility)\n' +
    ' These constants ensure they use non-overlapping id ranges.'
]
atl_module.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Ensure that we have exactly one ATL module registered. It's safe to\n" +
    " call this more than once. ATL functions will crash if there's no\n" +
    ' ATL module registered, or if you try to register two of them, so\n' +
    ' dynamically registering one if needed makes it much easier for us\n' +
    ' to support different build configurations like multi-dll without\n' +
    ' worrying about which side of a module boundary each ATL module object\n' +
    ' belongs on.\n' +
    ' This function must be implemented in this header file rather than a\n' +
    " source file so that it's inlined into the module where it's included,\n" +
    ' rather than in the "ui" module.'
]
event_creation_utils.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Send a mouse event to Windows input queue using ::SendInput, to screen\n' +
    ' point |point|. Returns true if the mouse event was sent, false if not.'
]
foreground_helper.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper class for moving a window to the foreground.\n' +
    ' Windows XP and later will not allow a window which is in the background to\n' +
    ' move to the foreground, unless requested by the current window in the\n' +
    ' foreground.  For automated testing, we really want some of our windows\n' +
    ' to be capable of moving to the foreground.\n' +
    ' This is probably leveraging a windows bug.'
]
hidden_window.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns an HWND that can be used as a temporary parent. The returned HWND is\n' +
    ' never destroyed.'
]
hwnd_metrics.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The size, in pixels, of the non-client frame around a window on |monitor|.'
]
hwnd_subclass.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Classes implementing this interface get the opportunity to handle and consume\n' +
    ' messages before they are sent to their target HWND.',
  ' An object that instance-subclasses a window. If the window has already been\n' +
    ' instance-subclassed, that subclassing is lost.'
]
internal_constants.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This window property if set on the window does not activate the window for a\n' +
    ' touch based WM_MOUSEACTIVATE message.',
  ' This class name is assigned to legacy windows created for screen readers that\n' +
    ' expect each web content container to be in its own HWNDs.',
  ' This property is put on an HWND so the compositor output knows to treat it\n' +
    ' as transparent and draw to it using WS_EX_LAYERED (if using the software\n' +
    ' compositor).'
]
lock_state.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if the screen is currently locked.'
]
message_box_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " A wrapper around Windows' MessageBox function. Using a Chrome specific\n" +
    ' MessageBox function allows us to control certain RTL locale flags so that\n' +
    " callers don't have to worry about adding these flags when running in a\n" +
    ' right-to-left locale.'
]
mouse_wheel_util.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Marks the passed |hwnd| as supporting mouse-wheel message rerouting.\n' +
    ' We reroute the mouse wheel messages to such HWND when they are under the\n' +
    ' mouse pointer (but are not the active window). Callers own the returned\n' +
    ' object.',
  ' Forwards mouse wheel messages to the window under it.\n' +
    ' Windows sends mouse wheel messages to the currently active window.\n' +
    ' This causes a window to scroll even if it is not currently under the mouse\n' +
    ' wheel. The following code gives mouse wheel messages to the window under the\n' +
    ' mouse wheel in order to scroll that window. This is arguably a better user\n' +
    ' experience.  The returns value says whether the mouse wheel message was\n' +
    ' successfully redirected.'
]
power_setting_change_listener.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface for classes that want to listen to power setting changes.',
  ' Create an instance of this class in any object that wants to listen\n' +
    ' for power setting changes.'
]
scoped_ole_initializer.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
session_change_observer.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Calls the provided callback on WM_WTSSESSION_CHANGE messages along with\n' +
    ' managing the tricky business of observing a singleton object. Only\n' +
    ' WTS_SESSION_LOCK and WTS_SESSION_UNLOCK events trigger the callback\n' +
    ' because those are the only events existing observers handle.'
]
shell.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Open the folder at |full_path| via the Windows shell. It is an error if\n' +
    ' |full_path| does not refer to a folder.\n' +
    ' Note: Must be called on a thread that allows blocking.',
  ' Invokes the default verb on the file specified by |full_path| via the Windows\n' +
    ' shell. Usually, the default verb is "open" unless specified otherwise for the\n' +
    ' file type.\n' +
    ' In the event that there is no default application registered for the\n' +
    ' specified file, asks the user via the Windows "Open With" dialog.  Returns\n' +
    ' |true| on success.\n' +
    ' Note: Must be called on a thread that allows blocking.',
  ' Disables the ability of the specified window to be pinned to the taskbar or\n' +
    ' the Start menu. This will remove "Pin this program to taskbar" from the\n' +
    ' taskbar menu of the specified window.',
  ' Sets the application id, app icon, relaunch command and relaunch display name\n' +
    ' for the given window. |app_icon_index| should be set to 0 if the app icon\n' +
    ' file only has a single icon.',
  ' Sets the application id given as the Application Model ID for the window\n' +
    ' specified.  This method is used to insure that different web applications\n' +
    ' do not group together on the Win7 task bar.',
  ' Sets the application icon for the window specified.',
  ' Sets the relaunch command and relaunch display name for the window specified.\n' +
    ' Windows will use this information for grouping on the taskbar, and to create\n' +
    ' a shortcut if the window is pinned to the taskbar.',
  ' Clears the Window Property Store on an HWND.'
]
touch_input.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wrapper for GetTouchInputInfo, which is not defined before Win7. For\n' +
    " earlier OS's, this function returns FALSE."
]
win_cursor.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ref counted class to hold a Windows cursor, i.e. an HCURSOR. Clears the\n' +
    ' resources on destruction.'
]
win_cursor_factory.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_event_target.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This interface is implemented by classes who get input events forwarded to\n' +
    ' them from others. E.g. would be a win32 parent child relationship where the\n' +
    ' child forwards input events to the parent after doing minimal processing.'
]
window_open_disposition.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_open_disposition_utils.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Translates event flags from a click on a link into the user's desired window\n" +
    ' disposition.  For example, a middle click would mean to open a background\n' +
    ' tab.  |disposition_for_current_tab| is the disposition to return if the flags\n' +
    ' suggest opening in the current tab; for example, a caller could set this to\n' +
    ' NEW_FOREGROUND_TAB to prevent a click from overwriting the current tab by\n' +
    ' default.',
  ' As with DispositionFromClick(), but using |event_flags| as in ui::MouseEvent.'
]
wm_role_names_linux.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Return the status-icon wm_role_name. Only used to construct status-icon\n' +
    ' windows for x11.'
]
selection_owner.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Owns a specific X11 selection on an X window.\n' +
    ' The selection owner object keeps track of which xwindow is the current\n' +
    ' owner, and when its |xwindow_|, offers different data types to other\n' +
    ' processes.'
]
selection_requestor.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Requests and later receives data from the X11 server through the selection\n' +
    ' system.\n' +
    ' X11 uses a system called "selections" to implement clipboards and drag and\n' +
    ' drop. This class interprets messages from the stateful selection request\n' +
    ' API. SelectionRequestor should only deal with the X11 details; it does not\n' +
    ' implement per-component fast-paths.'
]
selection_utils.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a list of all text atoms that we handle.',
  ' Places the intersection of |desired| and |offered| into |output|.',
  ' Takes the raw bytes of the std::u16string and copies them into |bytes|.',
  ' Tokenizes and parses the Selection Data as if it is a URI List.',
  '/////////////////////////////////////////////////////////////////////////////',
  ' Represents the selection in different data formats. Binary data passed in is\n' +
    ' assumed to be allocated with new char[], and is owned by SelectionFormatMap.',
  '/////////////////////////////////////////////////////////////////////////////',
  ' A holder for data with optional X11 deletion semantics.'
]
x11_property_change_waiter.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Blocks till the value of |property| on |window| changes.'
]
x11_ui_controls_test_helper.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_clipboard_helper.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper class that provides core X11 clipboard integration code. Shared by\n' +
    ' both legacy and Ozone X11 backends.\n' +
    ' TODO(crbug.com/40551833): Merge into X11ClipboardOzone class once ozone\n' +
    ' migration is complete and legacy backend gets removed.'
]
x11_cursor.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ref counted class to hold an X11 cursor resource.  Clears the X11 resources\n' +
    ' on destruction'
]
x11_cursor_factory.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' CursorFactory implementation for X11 cursors.'
]
x11_cursor_loader.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is a port of libxcursor.'
]
x11_desktop_window_move_client.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " When we're dragging tabs, we need to manually position our window."
]
x11_display_manager.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' XDisplayManager class\n' +
    ' Responsible for fetching and maintaining list of |display::Display|s\n' +
    ' representing X11 screens connected to the system. XRandR extension is used\n' +
    ' when version >= 1.3 is available, otherwise it falls back to\n' +
    ' |DefaultScreenOfDisplay| Xlib API.\n' +
    ' Scale Factor information and simple hooks are delegated to API clients\n' +
    ' through |XDisplayManager::Delegate| interface. To get notifications about\n' +
    ' dynamic display changes, clients must register |DisplayObserver| instances\n' +
    ' and feed |XDisplayManager| with |x11::Event|s.\n' +
    ' All bounds and size values are assumed to be expressed in pixels.'
]
x11_display_util.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Builds a list of displays for fallback.',
  ' Builds a list of displays from the current screen information offered by\n' +
    ' the X server.',
  ' Returns the refresh interval of the primary display. If there is no connected\n' +
    ' primary display, returns the refresh interval of the first connected display.',
  ' A distance metric for ranges [min1, max1), [min2, max2).  Exposed for unit\n' +
    ' testing.\n' +
    " - Returns 0 if the ranges touch at an endpoint but don't overlap.\n" +
    '   Eg. [10, 20), [20, 30) -> 0\n' +
    " - Returns a positive value if the ranges don't overlap.  The value is the\n" +
    '   space between the ranges.\n' +
    '   Eg. [10, 20), [30, 40) -> 10\n' +
    ' - Returns a negative value if the ranges overlap.  The value is the\n' +
    '   amount of overlap between the ranges.\n' +
    '   Eg. [10, 30), [20, 30) -> -10\n' +
    ' - Returns a negative value if one range fully encompasses the other.  The\n' +
    '   value will have a magnitude between the size of each range.\n' +
    '   Eg. [10, 40), [20, 30) -> -20',
  ' A distance metric for rectangles.  Uses `RangeDistance()` along each\n' +
    ' dimension. See the comment for `RangeDistance()` for an explanation of the\n' +
    ' return value for overlapping or encompassing ranges.  The first value of the\n' +
    ' returned pair is the larger of the two distances.',
  ' Given `displays` with bounds in pixel coordinates, uses each display scale\n' +
    ' factor to update bounds to DIP coordinates.'
]
x11_drag_context.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_drag_drop_client.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Converts the current set of X masks into the set of ui::EventFlags.',
  ' Works for both incoming and outgoing drags.  For the incoming drags, receives\n' +
    ' XDND events via HandleXdndEvent() and routes them to OnXdnd...() handlers;\n' +
    ' outgoing drags are handled via Handle...() methods.  Both ways end up in\n' +
    ' SendXdnd...() calls that target the window that is currently at the drag\n' +
    ' location.  If the target is another Chrome window, the event is delivered\n' +
    ' directly to its XdndHandler, bypassing the X server.\n' +
    ' The owner is notified about the ongoing drag through the Delegate interface.'
]
x11_gl_egl_utility.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns display attributes for the given |platform_type|.',
  ' Sets custom alpha and buffer size.'
]
x11_global_shortcut_listener.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' X11-specific implementation of the class that listens for global shortcuts.'
]
x11_idle_query.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_move_loop.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Runs a nested run loop and grabs the mouse. This is used to implement\n' +
    ' dragging.'
]
x11_move_loop_delegate.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Receives mouse events while the X11MoveLoop is tracking a drag.'
]
x11_os_exchange_data_provider.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Generic OSExchangeDataProvider implementation for X11.  Lacks the event\n' +
    ' handling; the subclass should listen for SelectionRequest X events and\n' +
    ' route them to the |selection_owner_|.'
]
x11_pointer_grab.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Grabs the pointer. It is unnecessary to ungrab the pointer prior to grabbing\n' +
    ' it.',
  ' Sets the cursor to use for the duration of the active pointer grab.',
  ' Ungrabs the pointer.'
]
x11_screensaver.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_shm_image_pool.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates XImages backed by shared memory that will be shared with the X11\n' +
    ' server for processing.'
]
x11_software_bitmap_presenter.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_user_input_monitor.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " This is the actual implementation of event monitoring. It's separated from\n" +
    ' UserInputMonitorLinux since it needs to be deleted on the IO thread.'
]
x11_util.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file declares utility functions for X11 (Linux only).',
  ' Draws an SkPixmap on |drawable| using the given |gc|, converting to the\n' +
    ' server side visual as needed.',
  ' These functions cache their results ---------------------------------',
  ' Returns true if the system supports XINPUT2.',
  ' Return true iff the display supports MIT-SHM.',
  ' Coalesce all pending motion events (touch or mouse) that are at the top of\n' +
    ' the queue, and return the number eliminated, storing the last one in\n' +
    ' |last_event|.',
  ' Sets whether |window| should use the OS window frame.',
  ' These functions do not cache their results --------------------------',
  ' Returns true if the shape extension is supported.',
  ' Get the X window id for the default root window',
  " Returns the user's current desktop.",
  ' Sets _GTK_HIDE_TITLEBAR_WHEN_MAXIMIZED on |window|.',
  ' Returns the raw bytes from a property with minimal\n' +
    ' interpretation. |out_data| should be freed by XFree() after use.',
  ' Sets the WM_CLASS attribute for a given X11 window.',
  ' Sets the WM_WINDOW_ROLE attribute for a given X11 window.',
  ' Sends a message to the x11 window manager, enabling or disabling the\n' +
    ' states |state1| and |state2|.',
  ' Sends a NET_WM_MOVERESIZE message to the x11 window manager, enabling the\n' +
    ' move/resize mode.  As per NET_WM_MOVERESIZE spec, |location| is the position\n' +
    ' in pixels (relative to the root window) of mouse button press, and\n' +
    ' |direction| indicates whether this is a move or resize event, and if it is a\n' +
    ' resize event, which edges of the window the size grip applies to.',
  ' Checks if the window manager has set a specific state.',
  ' Determine whether we should default to native decorations or the custom\n' +
    ' frame based on the currently-running window manager.',
  ' Queries the desktop |window| is on, kAllDesktops if sticky. Returns false if\n' +
    ' property not found.',
  ' Attempts to guess the window maager. Returns WM_OTHER or WM_UNNAMED\n' +
    " if we can't determine it for one reason or another.",
  ' The same as GuessWindowManager(), but returns the raw string.  If we\n' +
    ` can't determine it, return "Unknown".`,
  ' These values are persisted to logs.  Entries should not be renumbered and\n' +
    ' numeric values should never be reused.\n' +
    ' Append new window managers before kMaxValue and update LinuxWindowManagerName\n' +
    ' in tools/metrics/histograms/enums.xml accordingly.\n' +
    ' See also tools/metrics/histograms/README.md#enum-histograms',
  ' Returns a buest-effort guess as to whether |window_manager| is tiling (true)\n' +
    ' or stacking (false).',
  ' Returns true if a given window is in full-screen mode.',
  ' Suspends or resumes the X screen saver, and returns whether the operation was\n' +
    ' successful.  Must be called on the UI thread. If called multiple times with\n' +
    ' |suspend| set to true, the screen saver is not un-suspended until this method\n' +
    ' is called an equal number of times with |suspend| set to false.',
  ' Returns the preferred Skia colortype for an X11 visual.  Returns\n' +
    " kUnknown_SkColorType if there isn't a suitable colortype.",
  ' Return true if VulkanSurface is supported.',
  ' Returns an icon for a native window referred by |target_window_id|. Can be\n' +
    ' any window on screen.'
]
x11_whole_screen_move_loop.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Runs a nested run loop and grabs the mouse. This is used to implement\n' +
    ' dragging.'
]
x11_workspace_handler.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Listens for global workspace changes and notifies observers.'
]
x11_xrandr_interval_only_vsync_provider.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
devicetype_utils.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Assuming the given localization resources takes a device type parameter, this\n' +
    ' will substitute the appropriate device in (e.g. Chromebook, Chromebox).',
  ' Returns the name of the Chrome device type (e.g. Chromebook, Chromebox).',
  ' Returns the resource ID for the current Chrome device type (e.g. Chromebook,\n' +
    ' Chromebox).',
  ' Returns the name (plural forms) of the Chrome device type (e.g. Chromebooks,\n' +
    ' Chromeboxes).',
  ' Returns the resource ID for the current Chrome device type in plural forms\n' +
    ' (e.g. Chromebooks, Chromeboxes).'
]
shill_error.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
network_element_localized_strings_provider.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file contains functions to add localized strings used by\n' +
    ' components in ash/webui/common/resources/network/.',
  ' Adds the strings needed for network elements to |html_source|.',
  ' Same as AddLocalizedStrings but for a LocalizedValuesBuilder.',
  ' Adds ONC strings used by the details dialog used in Settings and WebUI.',
  ' Adds strings used by the details dialog used in Settings and WebUI.',
  ' Adds strings used by the configuration dialog used in Settings and\n' +
    ' WebUI.',
  ' Adds error strings for networking UI.'
]
ui_chromeos_export.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
user_activity_power_manager_notifier.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Notifies the power manager via D-Bus when the user is active.'
]
color_id.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' clang-format on',
  ' ColorId contains identifiers for all input, intermediary, and output colors\n' +
    ' known to the core UI layer.  Embedders can extend this enum with additional\n' +
    ' values that are understood by the ColorProvider implementation.  Embedders\n' +
    ' define enum values from kUiColorsEnd.  Values named beginning with "kColor"\n' +
    ' represent the actual colors; the rest are markers.',
  ' clang-format off',
  ' clang-format on',
  ' Note that this second include is not redundant. The second inclusion of the\n' +
    ' .inc file serves to undefine the macros the first inclusion defined.'
]
color_metrics.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_mixer.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ColorMixer represents a single conceptual mapping of a set of inputs, via a\n' +
    ' collection of transforms, to a set of outputs.  Examples of plausible\n' +
    ' ColorMixers are "the UI element colors, as constructed from core color\n' +
    ' primitive values", "the way a set of high contrast colors overwrites default\n' +
    ' values", "the final output colors for all parts of a single UI area", or\n' +
    ' "a layer that enforces contrast minima on a variety of inputs".  ColorMixers\n' +
    ' are chained together into a pipeline by a ColorProvider, and thus may rely\n' +
    ' completely, partly, or not at all on the inputs and outputs of previous\n' +
    ' mixers in the pipeline.'
]
color_mixers.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adds all ui/-side color mixers to `provider`.'
]
color_provider.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A ColorProvider holds the complete pipeline of ColorMixers that compute\n' +
    ' result colors for UI elements.  ColorProvider is meant to be a long-lived\n' +
    ' object whose internal list of mixers does not change after initial\n' +
    ' construction.  Separate ColorProviders should be instantiated for e.g.\n' +
    ' windows with different themes.\n' +
    ' TODO(pkasting): Figure out ownership model and lifetime.'
]
color_provider_key.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' All the information needed to seed the creation of a `ColorProvider`.\n' +
    ' Equivalient `ColorProviderKey`s are guaranteed to generate the same colors.'
]
color_provider_manager.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manages and provides color providers.\n' +
    ' In most cases, use ColorProviderManager::Get() to obtain an instance to the\n' +
    ' manager and then call GetColorProviderFor() to get a ColorProvider. It is not\n' +
    ' necessary to construct a ColorProviderManager manually.'
]
color_provider_source.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Encapsulates the theme bits that are used to uniquely identify a\n' +
    ' ColorProvider instance (i.e. the bits that comprise the ColorProviderKey).\n' +
    ' Notifies observers when the ColorProvider instance that maps to these theme\n' +
    ' bits changes. References are managed to avoid dangling pointers in the case\n' +
    ' the source or the observer are deleted.'
]
color_provider_source_observer.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Implemented by classes wanting access to the ColorProviderSource's current\n" +
    ' ColorProvider instance and receives updates on changes to the instance\n' +
    ' supplied. Can only observe a single ColorProviderSource at a time.'
]
color_provider_utils.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The following functions convert various values to strings intended for\n' +
    ' logging. Do not retain the results for longer than the scope in which these\n' +
    ' functions are called.',
  ' Converts the ColorMode.',
  ' Converts the ContrastMode.',
  ' Converts the ForcedColors.',
  ' Converts SystemTheme.',
  ' Converts ColorId.',
  ' Converts SkColor to string. Check if color matches a standard color palette\n' +
    ' value and return it as a string. Otherwise return as an rgba(xx, xxx, xxx,\n' +
    ' xxx) string.',
  ' Converts Color Provider Color Id in string format from kColorXXX to\n' +
    ' "--color-X-X-X" for CSS',
  ' Converts SkColor in ARGB format to CSS color in RGBA color. Returns the color\n' +
    ' in a Hex string representation.',
  ' Creates a map of RendererColorIds to SkColors from `color_provider`. This is\n' +
    ' used when sending ColorProvider colors to renderer processes. Sending a map\n' +
    ' keyed with RendererColorIds (as opposed to ColorIds) allows us to validate\n' +
    ' the ids that are sent to the renderer.',
  ' Used in combination with CreateRendererColormap() to create the ColorProvider\n' +
    ' in the renderer process.',
  ' Adds colors for emulating Windows 10 default high contrast color themes\n' +
    ' to `mixer`. Used to support the devtools forced colors emulation feature.',
  ' Creates a color provider emulating Windows 10 default high contrast color\n' +
    ' themes.',
  ' TODO(samomekarajr): Forced colors web tests currently rely on specific set of\n' +
    ' hardcoded colors for for determining which system colors to render. This\n' +
    ' function should be updated once the web driver support spec for forced colors\n' +
    ' mode is updated.',
  ' TODO(crbug.com/40779801): Enhance this function by incorporating platform\n' +
    ' specific overrides, particularly for CSS system colors.\n' +
    ' Creates a default fallback color provider for Blink Pages that are not\n' +
    ' associated with a web view. This includes tests, dummy pages, and non\n' +
    ' ordinary pages. These scenarios do not use the normal machinery to establish\n' +
    ' color providers in the renderer. The color mappings for this provider are\n' +
    ' derived from old Aura colors for controls.',
  ' Scrollbars have three main colors. This function completes the\n' +
    ' definition of colors for all scrollbar parts in relation to the three main\n' +
    ' ones.',
  ' Completes color definitions for the controls defined in\n' +
    ' NativeThemeBase::ControlColorId when in forced colors mode.',
  ' Completes default color definitions for the RendererColorIds that are non\n' +
    ' web native.',
  ' Completes default color definitions for the CSS system colors.',
  ' Returns a default set of color maps for tests and non ordinary pages. These\n' +
    ' places do not use the normal machinery to establish a color provider in the\n' +
    ' renderer since they are not associated with a web view.',
  ' Returns true if `color_provider` and `renderer_color_map` map renderer\n' +
    ' color ids to the same SkColor.',
  ' Sets the callback for converting a ChromeColorId to a string name. This is\n' +
    ' used by ColorIdName. Only one callback is allowed.'
]
color_recipe.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A ColorRecipe describes how to construct an output color from a series of\n' +
    ' transforms.  Recipes take an input color and mixer, then apply their\n' +
    ' transforms in order to produce the output.  This means that a recipe with no\n' +
    ' transforms will return its input color unchanged.'
]
color_test_ids.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test-only color IDs.'
]
color_transform.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Callback is a function which transforms an |input| color, optionally using a\n' +
    ' |mixer| (to obtain other colors). Do not depend on the callback running\n' +
    " except if it's necessary for the final color.",
  ' ColorTransform wraps Callback and can be chained together in ColorRecipes,\n' +
    " where each will be applied to the preceding transform's output.",
  ' Functions to create common transforms:',
  ' A transform which blends the result of |foreground_transform| atop the result\n' +
    ' of |background_transform| with alpha |alpha|.',
  ' A transform which modifies the result of |foreground_transform| to contrast\n' +
    ' with the result of |background_transform| by at least |contrast_ratio|, if\n' +
    ' possible.  If |high_contrast_foreground_transform| is non-null, its result is\n' +
    ' used as the blend target.',
  ' A transform which blends the result of |transform| toward the color with max\n' +
    ' contrast until it has contrast of at least |contrast_ratio| with its original\n' +
    ' value.',
  ' A transform which blends the result of |transform| toward the color with max\n' +
    ' contrast by |alpha|.',
  ' A transform which computes the contrast of the result of |transform| against\n' +
    ' the color with max contrast; then returns a color with that same contrast,\n' +
    ' but against the opposite endpoint.',
  ' A transform which returns the default icon color for the result of\n' +
    ' |transform|.',
  " A transform which returns the transform's input color (i.e. does nothing).\n" +
    ' This is useful to supply as an argument to other transforms to control how\n' +
    ' the input color is routed.',
  ' A transform which returns the color with max contrast against the result of\n' +
    ' |transform|.',
  ' A transform which returns the end point color with min contrast against the\n' +
    ' result of |transform|.',
  ' A transform which returns the resulting paint color of the result of\n' +
    ' |foreground_transform| over the result of |background_transform|.',
  ' A transform which runs one of two output transforms based on whether the\n' +
    ' result of |input_transform| is dark.',
  ' A transform which sets the result of |transform| to have alpha |alpha|.',
  ' A transform that gets a Google color with a similar hue to the result of\n' +
    ' `foreground_transform` and a similar contrast against the result of\n' +
    ' `background_transform`, subject to being at least `min_contrast` and at most\n' +
    " `max_contrast`. If the result of `foreground_transform` isn't very saturated,\n" +
    ' grey will be used instead.\n' +
    ' Each of the following constraints takes precedence over the ones below it.\n' +
    '   1. Ensure `min_contrast`, if possible, lest the UI become unreadable. If\n' +
    '      there are no sufficiently-contrasting colors of the desired hue, falls\n' +
    '      back to white/grey 900.\n' +
    '   2. Avoid returning a lighter color than the background if the input was\n' +
    '      darker, and vice versa. Inverting the relationship between foreground\n' +
    '      and background could look odd.\n' +
    '   3. Ensure `max_contrast`, if possible, lest some UI elements stick out too\n' +
    '      much.\n' +
    '   4. Adjust the relative luminance of the returned color as little as\n' +
    '      possible, to minimize distortion of the intended color.\n' +
    ' Other than prioritizing (1), this order is subjective.',
  ' Like the version above, but the constraints are modified:\n' +
    '   1. Ensure `min_contrast`, if possible, with both backgrounds\n' +
    '      simultaneously.\n' +
    '   2. If the foreground is lighter than both backgrounds, make it lighter; if\n' +
    "      it's darker than both, make it darker; if it's between the two, keep it\n" +
    '      between.\n' +
    '   3. Ensure `max_contrast_with_nearer` against the lower-contrast ("nearer")\n' +
    '      background.\n' +
    '   4. Unchanged.',
  ' A transform that returns the HSL shifted color given the input color.'
]
core_default_color_mixer.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adds a color mixer to |provider| that provides kColorSetCoreDefaults.'
]
css_system_color_mixer.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adds a color mixer to `provider` for system colors. Intended\n' +
    ' for colors used by Blink to support CSS system colors.'
]
palette.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' For a given color, provides the color values for the tonal range between 0\n' +
    ' and 100 in the HCT color space.',
  ' A collection of TonalPalettes representing the reference palette for a\n' +
    ' particular color configuration.'
]
palette_factory.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' For the desired `seed_color` and `variant`, generates the correct type of\n' +
    ' `Palette`.'
]
fluent_ui_color_mixer.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adds a color mixer to `provider` for fluent mappings.'
]
system_color_utils.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
material_ui_color_mixer.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adds a color mixer to `provider` for material mappings.'
]
native_color_mixers.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adds a color mixer to |provider| that provide kColorSetNative.\n' +
    ' This function should be implemented on a per-platform basis in\n' +
    ' relevant subdirectories.',
  ' Adds a color mixer to |provider| that can add to kColorSetNative.\n' +
    ' Intended for colors needed by ui/ that this platform overrides but\n' +
    ' are outside the set defined in the core mixer.'
]
ref_color_mixer.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adds a color mixer to `provider` that provides the reference color tokens for\n' +
    ' Google Material 3.'
]
sys_color_mixer.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adds a color mixer to `provider` that provides the system color tokens for\n' +
    ' Google Material 3.'
]
system_theme.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Don't change the order or value of these entries as they are stored in prefs\n" +
    ' and logged in UMA. This must be kept in sync with the SystemTheme enum in\n' +
    ' chrome/browser/resources/settings/appearance_page/appearance_page.ts.'
]
ui_color_mixer.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adds a color mixer to |provider| that combine the above color sets with\n' +
    ' recipes as necessary to produce all colors needed by ui/.'
]
accent_color_observer.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Monitors the HKCU\\SOFTWARE\\Microsoft\\Windows\\DWM reg key for changes and\n' +
    ' provides access to the accent color (and related colors), as well as support\n' +
    ' for firing callbacks when changes occur.'
]
animation_throughput_reporter.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Reports cc::FrameSequenceMetrics::ThroughputData of layer animations.\n' +
    ' Throughput is defined as the ratio between number frames presented (actual\n' +
    ' screen updates) for the animations and the number frames expected.\n' +
    ' DroppedFrames/SkippedFrames is the other part of the story. It is a ratio\n' +
    ' between dropped/skipped frames over the expected frames.\n' +
    ' See also docs/speed/graphics_metrics_definitions.md.\n' +
    ' cc::FrameSequenceMetrics::ThroughputData contains the numbers of produced\n' +
    ' frames and expected frames and could be used to calculate the two metrics.\n' +
    ' All layer animation sequences created after its construction are consider\n' +
    ' as part of the animation being tracked. Graphics throughput tracking is\n' +
    ' stopped when all relevant layer animation sequences finish. The report\n' +
    ' callback is invoked on the next frame presentation if there is enough data\n' +
    ' and none of the layer animation sequences is aborted.'
]
callback_layer_animation_observer.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A LayerAnimationObserver that invokes a Callback when all observed\n' +
    " LayerAnimationSequence's have started and finished.\n" +
    ' Example usage:\n' +
    '  class Foobar {\n' +
    '    // The Callback that will be invoked when all the animation sequences have\n' +
    '    // started.\n' +
    '    void AnimationStartedCallback(\n' +
    '        const CallbackLayerAnimationObserver& observer) {\n' +
    '      // Do stuff.\n' +
    '    }\n' +
    '    // The Callback that will be invoked when all the animation sequences have\n' +
    '    // finished.\n' +
    '    bool AnimationEndedCallback(\n' +
    '        const CallbackLayerAnimationObserver& observer) {\n' +
    '      // Do stuff.\n' +
    '      return true;  // Returns true so that |observer| destroys itself.\n' +
    '    }\n' +
    '    // Example method that uses the CallbackLayerAnimationObserver.\n' +
    '    void Animate() {\n' +
    '      ui::LayerAnimator* animator_1 = layer_1->GetAnimator();\n' +
    '      ui::LayerAnimator* animator_2 = layer_2->GetAnimator();\n' +
    '      CallbackLayerAnimationObserver* observer =\n' +
    '          new CallbackLayerAnimationObserver(\n' +
    '              base::BindRepeating(&Foobar::AnimationStartedCallback),\n' +
    '              base::Unretained(this));\n' +
    '              base::BindRepeating(&Foobar::AnimationEndedCallback),\n' +
    '              base::Unretained(this));\n' +
    '      animator_1->AddObserver(observer);\n' +
    '      animator_2->AddObserver(observer);\n' +
    '      // Set up animation sequences on |animator_1| and |animator_2|.\n' +
    "      // The callback won't be invoked until SetActive() is called.\n" +
    '      observer->SetActive();\n' +
    '    }\n' +
    '  }\n' +
    ' TODO(bruthig): Unify the CallbackLayerAnimationObserver with the\n' +
    ' ImplicitAnimationObserver. (See www.crbug.com/542825).'
]
canvas_painter.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class provides a simple helper for rasterizing from a PaintContext\n' +
    ' interface directly into a bitmap.  After constructing an instance of a\n' +
    ' CanvasPainter, the context() can be used to do painting using the normal\n' +
    ' composited paint paths.  When the painter is destroyed, any painting done\n' +
    ' with the context() will be rastered into the provided output bitmap.\n' +
    ' TODO(enne): rename this class to be PaintContextRasterizer or some such.'
]
clip_recorder.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class to provide scoped clips of painting to a DisplayItemList. The clip\n' +
    ' provided will be applied to any DisplayItems added to the DisplayItemList\n' +
    ' while this object is alive. In other words, any nested recorders will be\n' +
    ' clipped.'
]
closure_animation_observer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Runs a callback at the end of the animation. This observe also destroys\n' +
    ' itself afterwards.'
]
compositor.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class abstracts the creation of the 3D context for the compositor. It is\n' +
    ' a global object.',
  ' Compositor object to take care of GPU painting.\n' +
    ' A Browser compositor object is responsible for generating the final\n' +
    " displayable form of pixels comprising a single widget's contents. It draws an\n" +
    " appropriately transformed texture for each transformed view in the widget's\n" +
    ' view hierarchy.'
]
compositor_animation_observer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
compositor_export.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
compositor_lock.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implemented by clients which take compositor lock. Used to notify the client\n' +
    ' when their lock times out.',
  ' A helper class used to manage compositor locks. Should be created/used by\n' +
    ' classes which want to provide out compositor locking.',
  ' This class represents a lock on the compositor, that can be used to prevent\n' +
    " commits to the compositor tree while we're waiting for an asynchronous\n" +
    ' event. The typical use case is when waiting for a renderer to produce a frame\n' +
    ' at the right size. The caller keeps a reference on this object, and drops the\n' +
    ' reference once it desires to release the lock.\n' +
    ' By default, the lock will be cancelled after a short timeout to ensure\n' +
    ' responsiveness of the UI, so the compositor tree should be kept in a\n' +
    ' "reasonable" state while the lock is held. The timeout length, or no timeout,\n' +
    ' can be requested at the time the lock is created.\n' +
    " Don't instantiate this class directly, use Compositor::GetCompositorLock."
]
compositor_observer.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A compositor observer is notified when compositing completes.'
]
compositor_switches.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
debug_utils.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Log the layer hierarchy. Mark layers which contain |mouse_location| with '*'.",
  ' Print the layer hierarchy to |out|. Mark layers which contain\n' +
    " |mouse_location| with '*'."
]
float_animation_curve_adapter.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
host_begin_frame_observer.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A BeginFrameObserver implementation that forwards begin frame messages to\n' +
    ' registered sub-SimpleBeginFrameObservers.\n' +
    ' In case the host thread is slow, frame message scan get queued up.\n' +
    ' Provides coalescing of begin frame messages in this case, by gathering\n' +
    ' pending messages into a single message call.'
]
layer.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Layer manages a texture, transform and a set of child Layers. Any View that\n' +
    ' has enabled layers ends up creating a Layer to manage the texture.\n' +
    ' A Layer can also be created without a texture, in which case it renders\n' +
    ' nothing and is simply used as a node in a hierarchy of layers.\n' +
    ' Coordinate system used in layers is DIP (Density Independent Pixel)\n' +
    ' coordinates unless explicitly mentioned as pixel coordinates.\n' +
    ' NOTE: Unlike Views, each Layer does *not* own its child Layers. If you\n' +
    ' delete a Layer and it has children, the parent of each child Layer is set to\n' +
    ' NULL, but the children are not deleted.'
]
layer_animation_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Layer animations interact with the layers using this interface.'
]
layer_animation_element.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' LayerAnimationElements represent one segment of an animation between two\n' +
    ' keyframes. They know how to update a LayerAnimationDelegate given a value\n' +
    ' between 0 and 1 (0 for initial, and 1 for final).'
]
layer_animation_observer.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' LayerAnimationObservers are notified when animations complete.',
  ' An implicit animation observer is intended to be used in conjunction with a\n' +
    ' ScopedLayerAnimationSettings object in order to receive a notification when\n' +
    ' all implicit animations complete.\n' +
    ' TODO(bruthig): Unify the ImplicitAnimationObserver with the\n' +
    ' CallbackLayerAnimationObserver. (See www.crbug.com/542825).'
]
layer_animation_sequence.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Contains a collection of layer animation elements to be played one after\n' +
    ' another. Although it has a similar interface to LayerAnimationElement, it is\n' +
    ' not a LayerAnimationElement (i.e., it is not permitted to have a sequence in\n' +
    ' a sequence). Sequences own their elements, and sequences are themselves owned\n' +
    ' by a LayerAnimator.\n' +
    " TODO(vollick) Create a 'blended' sequence for transitioning between\n" +
    ' sequences.'
]
layer_animator.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' When a property of layer needs to be changed it is set by way of\n' +
    ' LayerAnimator. This enables LayerAnimator to animate property changes.\n' +
    ' NB: during many tests, set_disable_animations_for_test is used and causes\n' +
    ' all animations to complete immediately. The layer animation is ref counted\n' +
    ' so that if its owning layer is deleted (and the owning layer is only other\n' +
    ' class that should ever hold a ref ptr to a LayerAnimator), the animator can\n' +
    ' ensure that it is not disposed of until it finishes executing. It does this\n' +
    ' by holding a reference to itself for the duration of methods for which it\n' +
    ' must guarantee that |this| is valid.'
]
layer_animator_collection.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A collection of LayerAnimators that should be updated at each animation step\n' +
    ' in the compositor.'
]
layer_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A delegate interface implemented by an object that renders to a Layer.'
]
layer_observer.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
layer_owner.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
layer_threaded_animation_delegate.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Attach CC keyframe_models using this interface.'
]
layer_tree_owner.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Scoping object that owns a Layer and all its descendants.'
]
layer_type.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scroll_input_handler.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Class to feed UI-thread scroll events to a cc::InputHandler. Inspired by\n' +
    ' ui::InputHandlerProxy but greatly simplified.'
]
paint_cache.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class that holds the output of a PaintRecorder to be reused when the\n' +
    ' object that created the PaintRecorder has not been changed/invalidated.'
]
paint_context.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
paint_recorder.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class to hide the complexity behind setting up a recording into a\n' +
    ' DisplayItem. This is meant to be short-lived within the scope of recording\n' +
    ' taking place, the DisplayItem should be removed from the PaintRecorder once\n' +
    ' recording is complete and can be cached.'
]
presentation_time_recorder.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' PresentationTimeRecorder records the time between when an UI update is\n' +
    ' requested, and the requested UI change has been presented to the user\n' +
    ' (screen). This measure the longest presentation time for each commit by\n' +
    ' skipping updates made after the last request and next commit.  Use this if\n' +
    ' you want to measure the drawing performance in continuous operation that\n' +
    " doesn't involve animations (such as window dragging). Call |RequestNext()|\n" +
    ' when you made modification to UI that should expect it will be presented.',
  ' Creates a PresentationTimeRecorder that records timing histograms of\n' +
    ' presentation time and (if given) max latency. The time range is 1 to 200 ms,\n' +
    ' with 50 buckets.'
]
property_change_reason.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
recyclable_compositor_mac.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' RecyclableCompositorMac\n' +
    ' A ui::Compositor and a gfx::AcceleratedWidget (and helper) that it draws\n' +
    ' into. This structure is used to efficiently recycle these structures across\n' +
    ' tabs (because creating a new ui::Compositor for each tab would be expensive\n' +
    ' in terms of time and resources).'
]
scoped_animation_duration_scale_mode.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Speed up or slow down animations for testing or debugging.'
]
scoped_layer_animation_settings.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Scoped settings allow you to temporarily change the animator's settings and\n" +
    ' these changes are reverted when the object is destroyed. NOTE: when the\n' +
    ' settings object is created, it applies the default transition duration\n' +
    ' (200ms).'
]
animation_throughput_reporter_test_base.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
begin_main_frame_waiter.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
direct_layer_tree_frame_sink.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class submits compositor frames to an in-process Display, with the\n' +
    " client's frame being the root surface of the Display."
]
draw_waiter_for_test.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is only to be used for test. It allows execution of other tasks on\n' +
    ' the current message loop before the current task finishs (there is a\n' +
    ' potential for re-entrancy).'
]
fake_context_factory.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
in_process_context_factory.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
layer_animation_observer_test_api.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test API to provide internal access to the LayerAnimationObserver class.'
]
layer_animation_stopped_waiter.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class capable of waiting until a layer has stopped animating. Supports\n' +
    ' animations that delete the layer on completion.'
]
layer_animator_test_controller.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Allows tests to access sequences owned by the animator.'
]
multi_layer_animator_test_controller.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test API class to control multiple LayerAnimators.'
]
multi_layer_animator_test_controller_delegate.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_compositor_host.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_compositor_host_ozone.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_context_factories.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Set up the compositor ContextFactory for a test environment. Unit tests that\n' +
    ' do not have a full content environment need to call this before initializing\n' +
    ' the Compositor. Some tests expect pixel output, and they should pass true for\n' +
    ' |enable_pixel_output|. Most unit tests should pass false.'
]
test_layer_animation_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_layer_animation_observer.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Listens to animation ended notifications. Remembers the last sequence that\n' +
    ' it was notified about.'
]
test_layers.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a string containing the name of each of the child layers (bottommost\n' +
    ' first) of |parent|. The format of the string is "name1 name2 ..."'
]
test_suite.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_utils.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Runs a RunLoop until the next frame is presented with an optional timeout.\n' +
    ' Returns true if a frame is presented. Otherwise, returns false.'
]
throughput_report_checker.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
throughput_tracker.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class to track the throughput of Compositor. The tracking is identified by\n' +
    ' an id. The id is passed into impl side and be used as the sequence id to\n' +
    ' create and stop a kCustom typed cc::FrameSequenceTracker. The class is\n' +
    ' move-only to have only one holder of the id. When ThroughputTracker is\n' +
    ' destroyed with an active tracking, the tracking will be canceled and report\n' +
    ' callback will not be invoked.'
]
throughput_tracker_host.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface for ThroughputTracker to call its host.'
]
total_animation_throughput_reporter.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Reports cc::FrameSequenceMetrics::ThroughputData between the first animation\n' +
    ' start and the last animation ends on a compositor.\n' +
    ' Please see AnimationThroughputReporter for the definition of the throughput\n' +
    ' and jack metrics.\n' +
    ' See also docs/speed/graphics_metrics_definitions.md.\n' +
    ' cc::FrameSequenceMetrics::CustomReportData contains the numbers of produced\n' +
    ' frames, expected frames and jank count.\n' +
    ' The tracking starts when the first animation observer is added to the\n' +
    ' compositor, then stopped when the last animation observer is removed.  The\n' +
    ' report callback is invoked on the next begin frame if there is enough data.\n' +
    ' Since this observes multiple animations, aborting one of animations will\n' +
    ' not cancel the tracking, and the data will be reported as normal.\n' +
    ' The reporter will not fire if ScopedThroughputReporterBlocker is active.\n' +
    ' This allows to measure throughput from the very first animation (when\n' +
    ' reporter was created) till the specific expected animation ends even if\n' +
    ' there were delays between the animations.'
]
transform_animation_curve_adapter.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
transform_recorder.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class to provide scoped transforms of painting to a DisplayItemList. The\n' +
    ' transform provided will be applied to any DisplayItems added to the\n' +
    ' DisplayItemList while this object is alive. In other words, any nested\n' +
    ' recorders will be transformed.'
]
shadow.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Simple class that draws a drop shadow around content at given bounds.'
]
accelerator_util.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns |event| as a ui::Accelerator.'
]
display.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class typically, but does not always, correspond to a physical display\n' +
    ' connected to the system. A fake Display may exist on a headless system, or a\n' +
    ' Display may correspond to a remote, virtual display.\n' +
    ' Note: The screen and display currently uses pixel coordinate\n' +
    ' system. For platforms that support DIP (density independent pixel),\n' +
    ' |bounds()| and |work_area| will return values in DIP coordinate\n' +
    ' system, not in backing pixels.'
]
display_change_notifier.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' DisplayChangeNotifier is a class implementing the handling of DisplayObserver\n' +
    ' notification for Screen.'
]
display_export.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines DISPLAY_EXPORT so that functionality implemented by the UI module\n' +
    ' can be exported to consumers.'
]
display_features.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_finder.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the display containing |point|. If no displays contain |point|, then\n' +
    ' this returns the display closest to |point|.',
  ' Returns the display in |displays| with the biggest intersection of |rect|.\n' +
    ' If none of the displays intersect |rect| null is returned.',
  ' Returns an iterator into |displays| of the Display whose bounds contains\n' +
    ' |point_in_screen|, or displays.end() if no Displays contains\n' +
    ' |point_in_screen|.'
]
display_layout.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An identifier used to manage display layout in DisplayManager /\n' +
    ' DisplayLayoutStore.',
  ' DisplayPlacement specifies where the display (D) is placed relative to\n' +
    ' parent (P) display. In the following example, D given by |display_id| is\n' +
    ' placed at the left side of P given by |parent_display_id|, with a negative\n' +
    ' offset and a top-left offset reference.\n' +
    '        +      +--------+\n' +
    ' offset |      |        |\n' +
    '        +      |   D    +--------+\n' +
    '               |        |        |\n' +
    '               +--------+   P    |\n' +
    '                        |        |\n' +
    '                        +--------+'
]
display_layout_builder.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A utility class to create a DisplayLayout instance.'
]
display_list.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Maintains an ordered list of Displays as well as operations to add, remove\n' +
    ' and update said list. Additionally maintains DisplayObservers and updates\n' +
    ' them as appropriate.'
]
display_observer.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observers for display configuration changes.',
  ' Caller must ensure the lifetime of `observer` outlives ScopedDisplayObserver\n' +
    ' and ScopedOptionalDisplayObserver.  The "Optional" version does not care\n' +
    ' whether there is a display::Screen::GetScreen() to observe or not and will\n' +
    ' silently noop when there is not.  The non-optional ScopedDisplayObserver\n' +
    ' will CHECK that display::Screen::GetScreen() exists on construction to\n' +
    ' receive events from.'
]
display_switches.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Keep sorted.',
  ' TODO(kylechar): This overlaps with --screen-config. Unify flags and remove.'
]
display_transform.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates an exact gfx::Transform for a rotation.',
  ' Maps display::Display::Rotation to gfx::OverlayTransform.'
]
display_util.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
virtual_display_util_linux.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Linux implementation of VirtualDisplayUtil. This uses remote desktop code\n' +
    ' (remoting::X11DesktopResizer) to do the X11/XRandR heavy lifting.'
]
ca_display_link_mac.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cv_display_link_mac.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' CVDisplayLinkMac indirectly owns a CVDisplayLink (via\n' +
    ' DisplayLinkMacSharedState), and may be used to create VSync callbacks.'
]
display_link_mac.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " VSync parameters parsed from CVDisplayLinkOutputCallback's parameters.",
  ' Object used to control the lifetime of callbacks from DisplayLinkMac.\n' +
    ' See notes in DisplayLinkMac::RegisterCallback'
]
test_screen_mac.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A test screen implementation for Mac.\n' +
    ' It implements the minimal functionalities such as using a valid display id to\n' +
    ' create a display for the screen.'
]
virtual_display_util_mac.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This interface creates system-level virtual displays to support the automated\n' +
    ' integration testing of display information and window management APIs in\n' +
    ' multi-screen device environments. It updates the displays that the normal mac\n' +
    ' screen impl sees, but not `TestScreenMac`.'
]
apply_content_protection_task.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
configure_displays_task.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ConfigureDisplaysTask is in charge of applying the display configuration as\n' +
    ' requested by Ash. If the original request fails, the task will attempt to\n' +
    ' modify the request by downgrading the resolution of one or more of the\n' +
    ' displays and try again until it either succeeds a modeset or exhaust all\n' +
    ' available options.\n' +
    ' Displays are bandwidth constrained in 2 ways: (1) system memory bandwidth\n' +
    ' (ie: scanning pixels from memory), and (2) link bandwidth (ie: scanning\n' +
    ' pixels from the SoC to the display). Naturally all displays share (1),\n' +
    ' however with DisplayPort Multi-stream Transport (DP MST), displays may also\n' +
    ' share (2). The introduction of MST support drastically increases the\n' +
    ' likelihood of modeset failures due to (2) since multiple displays will all be\n' +
    ' sharing the same physical connection.\n' +
    " If we're constrained by (1), reducing the resolution of any display will\n" +
    " relieve pressure. However if we're constrained by (2), only those displays on\n" +
    ' the saturated link can relieve pressure.\n' +
    ' Note that the |enable_vrr| property is not modified in the event of a\n' +
    ' downgrade, as it does not affect bandwidth and changing its value would not\n' +
    ' cause a failing request to succeed.'
]
content_protection_key_manager.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ContentProtectionKeyManager is responsible for managing the provisioned HDCP\n' +
    ' key for the displays.\n' +
    ' Some drivers such as msm expose "Content Protection Key" connector prop that\n' +
    ' needs a key to enable HDCP. The key is typically provisioned from a server.',
  ' The Workflow when a key is required:\n' +
    '  1. Check for a valid key request function.\n' +
    '  2. Look for the "Content Protection Key" connector property to verify if the\n' +
    '     key is required.\n' +
    '  3. Check for keys that are cached for the HDCP capable displays, if they\n' +
    "     don't exist get the provisioned key from the server.\n" +
    '  4. Inject the key into the kernel by writing the key into the\n' +
    '     "Content Protection Key" connector property of each HDCP capable display.'
]
content_protection_manager.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Fulfills client requests to query and apply per-display or all display\n' +
    ' content protection, and notifies observers of display security changes.\n' +
    ' Changes are detected by polling as required by the kernel API, since\n' +
    ' authentication latency depends on hardware topology, and the hardware may\n' +
    ' temporarily drop authentication, in which case the kernel automatically tries\n' +
    ' to re-establish protection.'
]
default_touch_transform_setter.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_change_observer.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An object that observes changes in display configuration and updates\n' +
    ' DisplayManager.'
]
display_configurator.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class interacts directly with the system display configurator.'
]
display_layout_manager.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_layout_store.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_manager.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' DisplayManager maintains the current display configurations,\n' +
    ' and notifies observers when configuration changes.',
  ' Since DisplayManagerObserver and DisplayObserver has custom methods to add\n' +
    ' and remove observers, we need define new trait customizations to use\n' +
    ' `base::ScopedObservation` and `base::ScopedMultiSourceObservation`. See\n' +
    ' `base/scoped_observation_traits.h` for more details.'
]
display_manager_export.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_manager_observer.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_port_observer.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' DisplayPortObserver keeps track of which USB-C ports are used for displays\n' +
    ' and notifies Type C Daemon in ChromiumOS.'
]
display_properties_parser.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
json_converter.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This will return false if `value` is not a dict.\n' +
    ' Otherwise this will call the overload above.',
  ' This will modify `dict` in place.'
]
managed_display_info.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A map between display mode size and zoom factor, used to preserve\n' +
    ' the zoom factor when the user changes the display mode.',
  " A class that represents the display's mode info.",
  ' ManagedDisplayInfo contains metadata for each display. This is used to create\n' +
    ' |Display| as well as to maintain extra infomation to manage displays in ash\n' +
    ' environment. This class is intentionally made copiable.',
  ' Creates a managed display info. Note that if a valid |bounds| is not\n' +
    ' supplied, the returned ManagedDisplayInfo never called UpdateDisplaySize(),\n' +
    ' which means that transformations, such as rotation, are not properly applied.'
]
query_content_protection_task.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
action_logger.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
action_logger_util.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Strings returned by TestNativeDisplayDelegate::GetActionsAndClear() to\n' +
    ' describe various actions that were performed.',
  ' String returned by TestNativeDisplayDelegate::GetActionsAndClear() if no\n' +
    ' actions were requested.',
  ' Returns a string describing a TestNativeDisplayDelegate::Configure()\n' +
    ' call.',
  ' Returns a string describing a TestNativeDisplayDelegate::SetHDCPState() call.',
  ' Returns a string describing a TestNativeDisplayDelegate::SetHdcpKeyProp()\n' +
    ' call.',
  ' Returns a string describing a\n' +
    ' TestNativeDisplayDelegate::SetColorCalibration() call.',
  ' Returns a string describing a\n' +
    ' TestNativeDisplayDelegate::SetColorTemperatureAdjustment() call.',
  ' Returns a string describing a TestNativeDisplayDelegate::SetGammaAdjustment()\n' +
    ' call.',
  ' Returns a string describing a TestNativeDisplayDelegate::SetPrivacyScreen()\n' +
    ' call.',
  ' Joins a sequence of strings describing actions (e.g. kScreenDim) such\n' +
    ' that they can be compared against a string returned by\n' +
    ' ActionLogger::GetActionsAndClear().  The list of actions must be\n' +
    ' terminated by a NULL pointer.'
]
fake_display_delegate.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A NativeDisplayDelegate implementation that manages fake displays. Fake\n' +
    ' displays mimic physical displays but do not actually exist. This is because\n' +
    ' Chrome OS does not take over the entire display when running off device and\n' +
    ' instead runs inside windows provided by the parent OS. Fake displays allow us\n' +
    ' to simulate different connected display states off device and to test display\n' +
    ' configuration and display management code.\n' +
    ' The size and number of displays can controlled via --screen-config=X\n' +
    ' command line flag. The format is as follows, where [] are optional:\n' +
    '   native_mode[#other_modes][^dpi][/options]\n' +
    ' native_mode: the native display mode, with format:\n' +
    '   WxH[%R]\n' +
    '     W: display width in pixels [int]\n' +
    '     H: display height in pixels [int]\n' +
    '     R: display refresh rate [float]\n' +
    ' other_modes: list of other of display modes, with format:\n' +
    '   #WxH[%R][:WxH[%R]]\n' +
    '     W,H,R: same meaning as in native_mode.\n' +
    "   Note: The first mode is delimited with '#' and any subsequent modes are\n" +
    "         delimited with ':'.\n" +
    ' dpi: display DPI used to set physical size, with format:\n' +
    '   ^D\n' +
    '     D: display DPI [int]\n' +
    ' options: options to set on display snapshot, with format:\n' +
    '   /[a][c][i][o]\n' +
    '     a: display is aspect preserving [literal a]\n' +
    '     c: display has color correction matrix [literal c]\n' +
    '     i: display is internal [literal i]\n' +
    '     o: display has overscan [literal o]\n' +
    ' Examples:\n' +
    ' Two 800x800 displays, with first display as internal display:\n' +
    '  --screen-config=800x800/i,800x800\n' +
    ' One 1600x900 display as internal display with 120 refresh rate and high-DPI:\n' +
    '  --screen-config=1600x900%120^300/i\n' +
    ' One 1920x1080 display with alternate resolutions:\n' +
    '  --screen-config=1920x1080#1600x900:1280x720\n' +
    ' No displays:\n' +
    '  --screen-config=none\n' +
    ' FakeDisplayDelegate also implements FakeDisplayController which provides a\n' +
    ' way to change the display state at runtime.'
]
fake_display_snapshot.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " A display snapshot that doesn't correspond to a physical display, used when\n" +
    ' running off device.'
]
test_display_layout_manager.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_native_display_delegate.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_device_manager_test_api.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_transform_controller_test_api.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_device_manager.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A unique identifier to identify |ui::TouchscreenDevices|. The primary id\n' +
    ' reflected by |id_| is persistent across system restarts and hotplugs. The\n' +
    ' secondary id represented by |secondary_id_|, reflects the physical port\n' +
    ' information. This is consistent and safe as long as the device is connected\n' +
    ' to the same port along the same path.',
  ' A struct that represents all the data required for touch calibration for the\n' +
    ' display.',
  ' This class is responsible for managing all the touch device associations with\n' +
    ' the display. It also provides an API to set and retrieve touch calibration\n' +
    ' data for a given touch device.',
  ' Returns true if the device has any external touch devices attached.'
]
touch_transform_controller.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TouchTransformController matches touchscreen displays with touch\n' +
    ' input-devices and computes the coordinate transforms between display space\n' +
    ' and input-device space.'
]
touch_transform_setter.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TouchTransformSetter is used by TouchTransformController to apply the actual\n' +
    ' settings.'
]
update_display_configuration_task.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_manager_test_util.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Resets the synthesized display id for testing. This\n' +
    ' is necessary to avoid overflowing the output index.',
  ' Generates a fake, synthesized display ID..',
  ' Uses |id| as a seed to produce the next synthesized ID.',
  " Generates the next fake connector index for displays who's ID was generated\n" +
    ' by hashing their EDIDs.',
  ' Increases the most significant digit of |id| by one. For example:\n' +
    ' for 2200000000, this function returns 3200000000.\n' +
    ' Note: this method is chosen for readability purposes only. It creates a an\n' +
    ' easy-to-read relationship between |id| and the returned value, so that a\n' +
    ' reader of test logs can look at the two IDs and recognize they are related.'
]
display_manager_util.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a string describing |state|.',
  ' Returns a string describing |state|.',
  ' Returns the number of displays in |displays| that should be turned on, per\n' +
    ' |state|.  If |display_power| is non-NULL, it is updated to contain the\n' +
    ' on/off state of each corresponding entry in |displays|.',
  ' Determines whether |a| is within an epsilon of |b|.',
  ' Returns a string describing |state|.',
  ' Sets bits in |protection_mask| for each ContentProtectionMethod supported by\n' +
    ' the display |type|. Returns false for unknown display types.',
  ' Returns a list of display zooms supported by the given |mode|.',
  ' Returns a list of display zooms supported by the given |display_width|.',
  ' Returns a list of display zooms based on the provided |dsf| of the display.\n' +
    ' This is useful for displays that have a non unity device scale factors\n' +
    ' applied to them.',
  ' Creates the display mode list for internal display\n' +
    ' based on |native_mode|.',
  ' Defines parameters needed to construct a ManagedDisplayMode for Unified\n' +
    ' Desktop.',
  ' Creates the display mode list for unified display\n' +
    ' based on |native_mode| and |scales|.',
  ' Returns true if the first display should unconditionally be considered an\n' +
    ' internal display.',
  ' If |a_bounds| and |b_bounds| share an edge, the shared edges are computed and\n' +
    ' filled in |a_edge| and |b_edge|, and true is returned. Otherwise, it returns\n' +
    ' false.',
  ' If |display_a| and |display_b| share an edge, the shared edges are computed\n' +
    ' and filled in |a_edge_in_screen| and |b_edge_in_screen|, and true is\n' +
    ' returned. Otherwise, it returns false.',
  ' Sorts id list using `CompareDisplayIds()` in display.h.',
  ' Check if the list is sorted using `CompareDisplayIds()` in display.h.',
  ' Generate sorted DisplayIdList from iterators.',
  ' Creates sorted DisplayIdList.',
  ' Get the display id after the output index (8 bits) is masked out.',
  ' Defines parameters needed to set mixed mirror mode.',
  ' Defines mirror modes used to change the display mode.',
  ' Defines the error types of mixed mirror mode parameters.',
  ' Verifies whether the mixed mirror mode parameters are valid.\n' +
    ' |connected_display_ids| is the id list for all connected displays. Returns\n' +
    ' error type for the parameters.'
]
display_color_management_mojom_traits.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' GammaCurve',
  ' ColorCalibration',
  ' ColorTemperatureAdjustment',
  ' GammaAdjustment'
]
display_configuration_params_mojom_traits.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_constants_mojom_traits.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_layout_mojom_traits.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_mode_mojom_traits.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_mojom_traits.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_snapshot_mojom_traits.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gamma_ramp_rgb_entry_mojom_traits.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
screen_info_mojom_traits.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
screen_infos_mojom_traits.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_display_for_new_windows.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constructing a ScopedDisplayForNewWindows allows temporarily switching\n' +
    ' display for new windows during the lifetime of this object.'
]
screen.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A utility class for getting various info about screen size, displays,\n' +
    ' cursor position, etc.\n' +
    ' Also, can notify DisplayObservers about global workspace changes. The\n' +
    ' availability of that functionality depends on a platform.\n' +
    ' Note that this class does not represent an individual display connected to a\n' +
    ' computer -- see the Display class for that. A single Screen object exists\n' +
    ' regardless of the number of connected displays.',
  ' TODO(oshima): move this to separate apple specific file.',
  ' TODO(crbug.com/40222482): Make this static private member of\n' +
    ' ScopedNativeScreen.',
  ' ScopedNativeScreen creates a native screen if there is no screen created yet\n' +
    ' (e.g. by a unit test).'
]
screen_base.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Simple screen implementation with a display list.'
]
screen_info.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This structure roughly parallels display::Display. It may be desirable to\n' +
    ' deprecate derived counterparts of ui/display types; see crbug.com/1208469.'
]
screen_infos.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Information about a set of screens that are relevant to a particular widget.\n' +
    ' This includes an id for the screen currently showing the widget.\n' +
    ' This structure roughly parallels display::DisplayList. It may be desirable to\n' +
    ' deprecate derived counterparts of ui/display types; see crbug.com/1208469.'
]
tablet_state.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tracks whether we are in the process of entering or exiting tablet mode.\n' +
    " Here's the description of how TabletState transition goes:\n" +
    ' TabletState is changed to `kEnteringTabletMode` before starting the process\n' +
    ' to enter tablet mode and then changed to `kInTabletMode` when the transition\n' +
    ' process has completed.\n' +
    ' TabletState is changed to `kExitingabletMode` before stating the process to\n' +
    ' exit tablet mode and then changed to `kInClamshellMode` when the transition\n' +
    ' process has completed.',
  ' Returns true if the tablet state is in the process of transition.'
]
display_manager_test_api.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Sets the display mode that matches the |resolution| for |display_id|.',
  ' Creates the display layout from position and offset for the current display\n' +
    ' list. If you simply want to create a new layout that is independent of\n' +
    ' current displays, use DisplayLayoutBuilder or simply create a new\n' +
    ' DisplayLayout and set display id fields (primary, ids in placement) manually.',
  ' Creates the DisplayIdList from ints.',
  ' Create the N number of DisplayIdList starting from |start_id},'
]
display_matchers.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Matcher for DisplayMode size and refresh rate.'
]
display_test_util.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Use this class instead of calling `SetInternalDisplayIds()` in unit tests to\n' +
    ' avoid leaking the state to other tests.',
  ' Create a list of ManagedDisplayInfo from the string specs.\n' +
    ' If a list of existing displays are present, the function will\n' +
    ' reuse the display ID.'
]
test_screen.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A dummy implementation of Screen that contains a single\n' +
    ' Display only. The contained Display can be accessed and modified via\n' +
    ' TestScreen::display().\n' +
    " NOTE: Adding and removing DisplayObserver's are no-ops and observers\n" +
    ' will NOT be notified ever.'
]
virtual_display_util.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This interface creates system-level virtual displays to support the automated\n' +
    ' integration testing of display information and window management APIs in\n' +
    ' multi-screen device environments. It updates displays that display::Screen\n' +
    ' impl sees, but is generally not compatible with `TestScreen` subclasses.'
]
display_color_management.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A structure that specifies curves for the red, green, and blue color\n' +
    ' channels.',
  ' A structure that contains color calibration information extracted from an\n' +
    ' ICC profile. This is a more general structure than the usual SkColorSpace\n' +
    ' or gfx::ColorSpace that is extracted from an ICC profile in that it allows\n' +
    ' for lookup table based curves and separate curves for each color channel.\n' +
    ' This functionality was added historically (in https://crbug.com/471749 and\n' +
    ' https://crbug.com/495196, for ChromeOS), and may be more information than\n' +
    ' is needed (in which case, the internals of this can be replaced with an\n' +
    ' SkColorSpace or similar).',
  " A structure that contains the transformation to make to the display's color\n" +
    ' due to adaptations for color temperature (e.g, https://crbug.com/705816, for\n' +
    ' ChromeOS night light).',
  ' A structure that contains a per-channel transformation to make in the\n' +
    " display's color space to adjust the brightness of the screen (e.g,\n" +
    ' b/109942195, for Chromecast gamma adaptation).'
]
display_config.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_configuration_params.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_constants.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' 1 inch in mm.',
  ' Display ID that represents an invalid display. Often used as a default value\n' +
    ' before display IDs are known.',
  " Display ID that represents a valid display to be used when there's no actual\n" +
    ' display connected.',
  ' Display ID for a virtual display assigned to a unified desktop.',
  ' Invalid year of manufacture of the display.',
  ' Used to determine if the two scale factor values are considered the same.\n' +
    ' TODO(crbug.com/40255259): Remove this when the scale factor precision issue\n' +
    ' in lacros is fixed.',
  ' The minimum HDR headroom for an HDR capable display. On macOS, when a\n' +
    " display's brightness is set to maximum, it can report that there is no\n" +
    ' HDR headroom via maximumExtendedDynamicRangeColorComponentValue being 1.\n' +
    ' On Windows, when the SDR slider is at its maximum, it is possible for the\n' +
    ' reported SDR white level to be brighter than the maximum brightness of the\n' +
    ' display. These situations can create appearance that a display is rapidly\n' +
    ' fluctuating between being HDR capable and HDR incapable. To avoid this\n' +
    ' confusion, set this as the minimum maximum relative luminance for HDR\n' +
    ' capable displays.',
  ' Set SDR content to 75% of display brightness so SDR colors look good\n' +
    ' and there is no perceived brightness change during SDR-HDR.',
  ' Set the HDR level multiplier to 4x so that the bright areas of the videos\n' +
    ' are not overexposed, and maintain local contrast.',
  ' Used to describe the state of a multi-display configuration.',
  ' Video output types.',
  ' Content protection methods applied on video output.',
  ' Bitmask of all the different HDCP types.',
  ' HDCP protection state.',
  ' The orientation of the panel in respect to the natural device orientation.',
  ' The existence, or lack thereof, and state of an ePrivacy screen.',
  ' Whether a configuration should be seamless or full. Full configuration may\n' +
    ' result in visible artifacts such as blanking to achieve the specified\n' +
    ' configuration. Seamless configuration requests will fail if the system cannot\n' +
    ' achieve it without visible artifacts.',
  ' A flag to allow ui/display and ozone to adjust the behavior of display\n' +
    ' configurations.',
  ' A bitmask of flags as defined in display::ModesetFlag.',
  ' Enum of possible states for variable refresh rates pertaining to a display.',
  ' Defines the float values closest to repeating decimal scale factors.',
  ' The total number of display zoom factors to enumerate.',
  ' A pair representing the list of zoom values for a given minimum display\n' +
    ' resolution width.',
  ' A pair representing the list of zoom values for a given minimum default dsf.',
  ' For displays with a device scale factor of unity, we use a static list of\n' +
    ' initialized zoom values. For a given resolution width of a display, we can\n' +
    ' find its associated list of zoom values by simply finding the last bucket\n' +
    ' with a width less than the given resolution width.\n' +
    ' Ex. A resolution width of 1024, we will use the bucket with the width of 960.',
  ' Displays with a default device scale factor have a static list of initialized\n' +
    ' zoom values that includes a zoom level to go to the native resolution of the\n' +
    ' display. Ensure that the list of DSFs are in sync with the list of default\n' +
    ' device scale factors in display_change_observer.cc.',
  ' Valid Displays',
  ' Dru',
  ' Chell',
  ' Chromebook special panels',
  ' A map of DRM formats and modifiers that are supported by the hardware planes\n' +
    ' of the display.\n' +
    ' See third_party/libdrm/src/include/drm/drm_fourcc.h for the canonical list of\n' +
    ' formats and modifiers',
  ' Converts the display connection type from enum to string.'
]
display_geometry.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_mode.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class represents the basic information for a native mode. Platforms may\n' +
    ' extend this class to add platform specific information about the mode.',
  ' Used by gtest to print readable errors.'
]
display_snapshot.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class represents the state of a display at one point in time. Platforms\n' +
    ' may extend this class in order to add platform specific configuration and\n' +
    ' identifiers required to configure this display.'
]
display_types_export.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines DISPLAY_TYPES_EXPORT so that functionality implemented by the\n' +
    ' DISPLAY_TYPES module can be exported to consumers.'
]
fake_display_controller.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Controls the fake display state. Provided by the NativeDisplayDelegate if\n' +
    ' it is intended for use off device where there are no physical displays and\n' +
    ' we need to fake the display state.'
]
gamma_ramp_rgb_entry.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides a single entry for a gamma correction table in a GPU.\n' +
    ' Each color component is UNORM16 fixed point format. This means each component\n' +
    ' must be in the range [0, 2^16) and 0xffff represents the maximum value for\n' +
    ' the color component.'
]
native_display_delegate.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface for classes that perform display configuration actions on behalf\n' +
    ' of DisplayConfigurator.\n' +
    ' Implementations may perform calls asynchronously. In the case of functions\n' +
    ' taking callbacks, the callbacks may be called asynchronously when the results\n' +
    ' are available. The implementations must provide a strong guarantee that the\n' +
    ' callbacks are always called.'
]
native_display_observer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observer class used by NativeDisplayDelegate to announce when the display\n' +
    ' configuration changes.'
]
unified_desktop_utils.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines a display position in the unified display matrix.',
  ' Type of the matrix that represents the display layout in Unified Desktop\n' +
    ' mode. The ID of a display is placed in a cell in the matrix where that\n' +
    ' display is desired to be placed in the actual layout.',
  ' Validates that:\n' +
    ' - The matrix is not empty.\n' +
    ' - There are no holes (empty display IDs) in the matrix.\n' +
    ' - All matrix rows have equal non-zero widths.',
  ' Validates that the given display |layout| is convertable to a valid Unified\n' +
    ' Desktop layout matrix. If yes, then the matrix will be built and filled in\n' +
    ' |out_matrix| and true is returned. False is returned and |out_matrix| will be\n' +
    ' unchanged.\n' +
    ' Rules of a valid Unified Desktop layout:\n' +
    " - All IDs in the |layout|'s |primary_id| and |placement_list| must exist in\n" +
    '   the display |ids_list|.\n' +
    ' - There is a placement for each display in the |ids_list| except the primary\n' +
    '   display.\n' +
    ' - The primary display must be the root.\n' +
    ' - There is a path from each display to the root display with no cycles.\n' +
    ' - No placement offsets are allowed.\n' +
    " - The |layout|'s |placement_list| is not required to be sorted.\n" +
    ' - A display can only have at most one child on either of its sides.\n' +
    ' - Layouts that specify a display grid must be complete; i.e. no empty holes\n' +
    '   in the grid.'
]
display_util.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These values are persisted to logs. Entries should not be renumbered and\n' +
    ' numeric values should never be reused.',
  ' Returns true if a given size is allowed. Will return false for certain bogus\n' +
    ' sizes in mm that should be ignored.',
  " Returns 64-bit persistent ID for the specified manufacturer's ID and\n" +
    ' product_code_hash, and the index of the output it is connected to.\n' +
    ' |output_index| is used to distinguish the displays of the same type. For\n' +
    ' example, swapping two identical display between two outputs will not be\n' +
    " treated as swap. The 'serial number' field in EDID isn't used here because\n" +
    ' it is not guaranteed to have unique number and it may have the same fixed\n' +
    ' value (like 0).',
  ' Uses |edid_parser| to extract a gfx::ColorSpace which will be IsValid() if\n' +
    ' both gamma and the color primaries were correctly found.',
  ' Returns true if one of following conditions is met.\n' +
    ' 1) id1 is internal.\n' +
    " 2) output index of id1 < output index of id2 and id2 isn't internal.",
  ' Returns true if the `display_id` is internal.',
  ' Returns true if the system has at least one internal display.',
  ' Gets/Sets an id of display corresponding to internal panel.',
  ' Converts the color string name into a gfx::ColorSpace profile.',
  ' Returns the forced display color profile, which is given by\n' +
    ' "--force-color-profile".',
  ' Indicates if a display color profile is being explicitly enforced from the\n' +
    ' command line via "--force-color-profile".',
  ' Taken from DisplayChangeObserver::CreateDisplayColorSpaces()\n' +
    ' Constructs the raster DisplayColorSpaces out of |snapshot_color_space|,\n' +
    ' including the HDR ones if present and |allow_high_bit_depth| is set.',
  " A connector's index is a combination of:\n" +
    " 1) |display_index| the display's index in DRM       bits 0-7\n" +
    " 2) |device_index| the display's DRM's index         bits 8-15\n" +
    ' e.g. - A 3rd display in a 2nd DRM would produce a connector index == 0x0102\n' +
    '        (since display index == 2 and DRM index == 1)'
]
display_util_export.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines DISPLAY_UTIL_EXPORT so that functionality implemented by the\n' +
    ' display_util module can be exported to consumers.'
]
edid_parser.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class parses a EDID (Extended Display Identification Data) binary blob\n' +
    ' passed on constructor, and provides access to the parsed information, plus\n' +
    ' a few utility postprocessings.'
]
gpu_info_util.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helpers for internal pages like chrome://gpu.  Create a dictionary with two\n' +
    ' values named description (string) and value (depends on the helper).'
]
audio_edid_scan.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The WMI service allows the querying of monitor-type devices which report\n' +
    ' Extended Display Identification Data (EDID).  The WMI service can be\n' +
    ' queried for a list of COM objects which represent the "paths" which\n' +
    ' are associated with individual EDID devices.  Querying each of those\n' +
    ' paths using the WmiGetMonitorRawEEdidV1Block method returns the EDID\n' +
    ' blocks for those devices.  We query the extended blocks which contain\n' +
    ' the Short Audio Descriptor (SAD), and parse them to obtain a bitmask\n' +
    ' indicating which audio content is supported.  The bitmask bits are\n' +
    ' defined in edid_parser.h, as returned from the EdidParser::audio_formats()\n' +
    ' method.  If multiple EDID devices are present, the intersection is\n' +
    ' reported as the bitmask.'
]
base_window_finder_win.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class used to locate a window. This is intended to be used with the\n' +
    ' various win32 functions that iterate over windows.\n' +
    ' A subclass need only override ShouldStopIterating to determine when\n' +
    ' iteration should stop.'
]
color_profile_reader.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Monitor ICC profiles are stored in the filesystem, and a blocking read from\n' +
    " file is required to read them. This is expensive and shouldn't be done on the\n" +
    ' main thread, so this class manages asynchronously doing these readings and\n' +
    ' calling back into its client when the profiles are noticed to have changed.'
]
display_config_helper.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the manufacturer ID of the monitor identified by `path`. Returns 0 if\n' +
    ' `path` is nullopt or a failure occurred.',
  ' Returns the manufacturer product code of the monitor identified by `path`.\n' +
    ' Returns 0 if `path` is nullopt or a failure occurred.'
]
display_info.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Gathers the parameters necessary to create a win::ScreenWinDisplay.'
]
dpi.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Deprecated. Use --force-device-scale-factor instead.\n' +
    ' Sets the device scale factor that will be used unless overridden on the\n' +
    ' command line by --force-device-scale-factor.',
  ' Deprecated. Use win::ScreenWin::GetScaleFactorForHWND instead.\n' +
    " Gets the system's scale factor. For example, if the system DPI is 96 then the\n" +
    ' scale factor is 1.0. This does not handle per-monitor DPI.',
  ' Deprecated. Use win::ScreenWin::GetDPIForHWND instead.\n' +
    ' Returns the equivalent DPI for |device_scaling_factor|.',
  " Returns a factor to adjust a system font's height by, to adjust for\n" +
    ' accessibility measures already built into the font, in order to prevent\n' +
    ' applying the same scale factor twice. Value should be in the range\n' +
    ' 0.0 (exclusive) to 1.0 (inclusive).\n' +
    ' Windows will add text scaling factor into the logical size of its default\n' +
    " system fonts (which it does *not* do for DPI scaling). Since we're scaling\n" +
    ' the entire UI by a combination of text scale and DPI scale, this results in\n' +
    ' double scaling. Call this function to unscale the font before using it in\n' +
    ' any of our rendering code.',
  ' Note: These methods do not take accessibility adjustments into account.',
  ' Equivalent to GetDPIScale() but ignores the --force-device-scale-factor flag.',
  ' Returns the equivalent scaling factor for |dpi|.',
  ' Gets the default DPI for the system.'
]
local_process_window_finder_win.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper class to determine if a particular point contains a window from our\n' +
    ' process.'
]
scaling_util.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Whether or not |a| shares an edge with |b|.',
  ' Returns a DisplayPlacement for |current| relative to |parent|.\n' +
    " Note that DisplayPlacement's are always in DIPs, so this also performs the\n" +
    ' required scaling.\n' +
    ' Examples (The offset is indicated by the arrow.):\n' +
    ' Scaled and Unscaled Coordinates\n' +
    ' +--------------+    +          Since both DisplayInfos are of the same scale\n' +
    ' |              |    |          factor, relative positions remain the same.\n' +
    ' |    Parent    |    V\n' +
    ' |      1x      +----------+\n' +
    ' |              |          |\n' +
    ' +--------------+  Current |\n' +
    '                |    1x    |\n' +
    '                +----------+\n' +
    ' Unscaled Coordinates\n' +
    ' +--------------+               The 2x DisplayInfo is offset to maintain a\n' +
    ' |              |               similar neighboring relationship with the 1x\n' +
    " |    Parent    |               parent. Current's position is based off of the\n" +
    ' |      1x      +----------+    percentage position along its parent. This\n' +
    ' |              |          |    percentage position is preserved in the scaled\n' +
    ' +--------------+  Current |    coordinates.\n' +
    '                |    2x    |\n' +
    '                +----------+\n' +
    ' Scaled Coordinates\n' +
    ' +--------------+  +\n' +
    ' |              |  |\n' +
    ' |    Parent    |  V\n' +
    ' |      1x      +-----+\n' +
    ' |              + C 2x|\n' +
    ' +--------------+-----+\n' +
    ' Unscaled Coordinates\n' +
    ' +--------------+               The parent DisplayInfo has a 2x scale factor.\n' +
    ' |              |               The offset is adjusted to maintain the\n' +
    ' |              |               relative positioning of the 1x DisplayInfo in\n' +
    " |    Parent    +----------+    the scaled coordinate space. Current's\n" +
    ' |      2x      |          |    position is based off of the percentage\n' +
    ' |              |  Current |    position along its parent. This percentage\n' +
    ' |              |    1x    |    position is preserved in the scaled\n' +
    ' +--------------+          |    coordinates.\n' +
    '                |          |\n' +
    '                +----------+\n' +
    ' Scaled Coordinates\n' +
    ' +-------+    +\n' +
    ' |       |    V\n' +
    ' | Parent+----------+\n' +
    ' |   2x  |          |\n' +
    ' +-------+  Current |\n' +
    '         |    1x    |\n' +
    '         |          |\n' +
    '         |          |\n' +
    '         +----------+\n' +
    ' Unscaled Coordinates\n' +
    '         +----------+           In this case, parent lies between the top and\n' +
    '         |          |           bottom of parent. The roles are reversed when\n' +
    ' +-------+          |           this occurs, and current is placed to maintain\n' +
    " |       |  Current |           parent's relative position along current.\n" +
    ' | Parent|    1x    |\n' +
    ' |   2x  |          |\n' +
    ' +-------+          |\n' +
    '         +----------+\n' +
    ' Scaled Coordinates\n' +
    '  ^      +----------+\n' +
    '  |      |          |\n' +
    '  + +----+          |\n' +
    '    |Prnt|  Current |\n' +
    '    | 2x |    1x    |\n' +
    '    +----+          |\n' +
    '         |          |\n' +
    '         +----------+\n' +
    ' Scaled and Unscaled Coordinates\n' +
    ' +--------+                     If the two DisplayInfos are bottom aligned or\n' +
    ' |        |                     right aligned, the DisplayPlacement will\n' +
    ' |        +--------+            have an offset of 0 relative to the\n' +
    ' |        |        |            bottom-right of the DisplayInfo.\n' +
    ' |        |        |\n' +
    ' +--------+--------+',
  ' Returns the squared distance between two rects.\n' +
    ' The distance between two rects is the length of the shortest segment that can\n' +
    ' be drawn between two rectangles. This segment generally connects two opposing\n' +
    ' corners between rectangles like this...\n' +
    ' +----------+\n' +
    ' |          |\n' +
    ' +----------+\n' +
    '             \\  <--- Shortest Segment\n' +
    '              \\\n' +
    '               +---+\n' +
    '               |   |\n' +
    '               |   |\n' +
    '               +---+\n' +
    ' For rectangles that share coordinates within the same axis, that generally\n' +
    ' means the segment is parallel to the axis and perpendicular to the edges.\n' +
    '                 One of many shortest segments\n' +
    '  +----------+  /                            \\    +--------+\n' +
    '  |          |  |                             \\   |        |\n' +
    '  |          |  V  +---+                       \\  +--------+\n' +
    '  |          |-----|   |                        \\-->|\n' +
    '  +----------+     |   |                            +----+\n' +
    '                   |   |                            |    |\n' +
    '                   +---+                            +----+\n' +
    ' For rectangles that intersect each other, the distance is the negative value\n' +
    ' of the overlapping area, so callers can distinguish different amounts of\n' +
    ' overlap.\n' +
    ' The squared distance is used to avoid taking the square root as the common\n' +
    ' usage is to compare distances greater than 1 unit.'
]
screen_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
screen_win_display.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A display used by ScreenWin.\n' +
    ' It holds a display and additional parameters used for DPI calculations.'
]
scoped_screen_win.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' [Deprecated]\n' +
    ' TODO(crbug.com/40222482): The initialization code of this class should be\n' +
    ' moved to the test that depends on it.\n' +
    ' ScopedScreenWin construct a instance of ScreenWinDisplay with bounds\n' +
    ' (1920,1080). This will allow unittests to query the details about ScreenWin\n' +
    ' using static methods. ScopedScreenWin needs to be initialized before running\n' +
    ' the code that queries ScreenWin.'
]
screen_util_win.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a MONITORINFOEX from |monitor|, |work|, and |device_name|.'
]
virtual_display_util_win.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This interface creates system-level virtual displays to support the automated\n' +
    ' integration testing of display information and window management APIs in\n' +
    ' multi-screen device environments. It updates the displays that the normal\n' +
    ' windows screen impl sees.',
  ' Utility that waits until desired display configs are observed.\n' +
    ' TODO(btriebw): Generalize this class and share it among VirtualDisplayUtil\n' +
    ' classes.'
]
uwp_text_scale_factor.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides access to UWP TextScaleFactor, an accessibility feature.\n' +
    ' TODO(dfried): In the future we may need to expand this class to capture\n' +
    ' other UWP-only metrics and functionality. At that point, we probably want to\n' +
    ' rename the class and/or put it in base/win.'
]
drag_event_android.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Event class used to carry the info from Java DragEvent through native.\n' +
    ' All coordinates are in DIPs.'
]
event_handler_android.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Dispatches events to appropriate targets. The default implementations of\n' +
    ' all of the specific handlers do nothing. Implementations should set\n' +
    ' themselves to the ViewAndroid in the view tree to get the calls routed.\n' +
    ' Use bool return type to stop propagating the call i.e. overriden method\n' +
    ' should return true to indicate that the event was handled and stop\n' +
    ' the processing.'
]
gesture_event_android.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Event class used to carry the info that match the blink::WebGestureEvent.\n' +
    " This was devised because we can't use the blink type in ViewAndroid tree\n" +
    ' since hit testing requires templated things to modify these events.\n' +
    ' All coordinates are in DIPs.'
]
gesture_event_type.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " This file contains a list of GestureEventType's usable by GestureEventAndroid\n" +
    ' providing a direct mapping to and from their corresponding\n' +
    ' blink::WebGestureEvent types.\n' +
    ' A Java counterpart will be generated for this enum.\n' +
    ' GENERATED_JAVA_ENUM_PACKAGE: org.chromium.ui.base'
]
key_event_android.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Event class used to carry the info from Java KeyEvent through native.\n' +
    ' This is used mainly as a conveyor of Java event object.'
]
key_event_utils.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
motion_event_android.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implementation of ui::MotionEvent wrapping a native Android MotionEvent.\n' +
    ' All *input* coordinates are in device pixels (as with Android MotionEvent),\n' +
    ' while all *output* coordinates are in DIPs (as with WebTouchEvent).'
]
caps_lock_event_rewriter.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' CapsLockEventRewriter rewrites Fn + RightAlt events into CapsLock.'
]
discard_key_event_rewriter.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This rewriter remaps modifier key events based on settings/preferences.\n' +
    ' Also, updates modifier flags along with the remapping not only\n' +
    ' for KeyEvent instances but also motion Event instances, such as mouse\n' +
    ' events and touch events.'
]
event_property.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Returns keyboard device_id for the `event`. If there's property set via\n" +
    " SetKeyboardDeviceId, the value will be returned. Otherwise, `event`'s\n" +
    ' `source_device_id` will be returned, which assumes the event is\n' +
    ' KeyEvent.',
  " Sets the device_id to the `event`'s property."
]
event_rewriter_ash.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' EventRewriterAsh makes various changes to keyboard-related events,\n' +
    ' including KeyEvents and some other events with keyboard modifier flags:\n' +
    ' - maps certain non-character keys according to user preferences\n' +
    '   (Control, Alt, Search, Caps Lock, Escape, Backspace, Diamond);\n' +
    ' - maps Command to Control on Apple keyboards;\n' +
    ' - converts numeric pad editing keys to their numeric forms;\n' +
    ' - converts top-row function keys to special keys where necessary;\n' +
    ' - handles various key combinations like Search+Backspace -> Delete\n' +
    '   and Search+number to Fnumber;\n' +
    ' - handles key/pointer combinations like Alt+Button1 -> Button3.'
]
event_rewriter_metrics.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Enum used to record the usage of the modifier keys on all devices. Do not\n' +
    ' edit the ordering of the values.',
  ' Enum used to record the source of function key rewrites.',
  ' Records when modifier keys are pressed to metrics for tracking usage of\n' +
    ' various metrics before and after remapping.'
]
event_rewriter_utils.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents physical key for internal use of EventRewriter implementation\n' +
    ' to remember key state before rewriting.'
]
fake_event_rewriter_ash_delegate.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Fake implementation of EventRewriterAsh::Delegate to be used by tests.'
]
keyboard_capability.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Keyboard layout1 map between top row keys to function keys.',
  ' Keyboard layout2 map between top row keys to function keys.',
  ' Keyboard wilco/drallion map between top row keys to function keys.\n' +
    ' TODO(dpad): Handle privacy screen better on drallion devices.\n' +
    ' TODO(zhangwenyu): Both F3 and F12 map to VKEY_ZOOM for wilco. Handle edge\n' +
    ' case when creating the top row accelerator alias for VKEY_ZOOM key.',
  ' A map between six pack keys to search system keys.',
  ' A map between six pack keys to function keys.',
  ' A map between six pack keys to alt system keys.',
  ' A keyboard util API to provide various keyboard capability information, such\n' +
    ' as top row key layout, existence of certain keys, what is top right key, etc.'
]
keyboard_device_id_event_rewriter.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " This rewriter adjusts the KeyEvent's device id (e.g. for synthesized\n" +
    ' repeated event), and if the adjusted id is different from the original one,\n' +
    ' annotates it to the rewritten event, while preserving the original\n' +
    ' `source_device_id` which is used in various purposes than event rewriting.\n' +
    " Also, this annotates last KeyEvent's (possibly adjusted) device id to\n" +
    ' Mouse/Touch events, which will be used for modifier rewriting in later\n' +
    ' stages.\n' +
    ' In later stages, device id to be used for rewriting can be taken by\n' +
    ' looking at the property, or `source_device_id` if it is missing.'
]
keyboard_info_metrics.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Enum to represent the 1-indexed\n' +
    ' `ui::KeyboardCapability::KeyboardTopRowLayout` in histograms, since enum\n' +
    ' histograms are required to use 0-indexed enums. This enum also adds an\n' +
    ' additional value "kLayout2WithAssistant". Note that this enum has been\n' +
    ' reordered and should not be considered interchangeable with\n' +
    ' ui::KeyboardCapability::KeyboardTopRowLayout.\n' +
    ' This enum should mirror the enum `KeyboardTopRowLayout` in\n' +
    ' tools/metrics/histograms/enums.xml and values should not be changed.',
  ' This enum is used to track metrics around how keys are used and comparing it\n' +
    ' against their physical presence on the device.'
]
keyboard_layout_util.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(dpad): Remove this function once `KeyboardCapability` fully supports the\n' +
    ' HasAssistantKey API. Returns true if one of the keyboards currently connected\n' +
    ' to the device has an Assistant key.'
]
keyboard_modifier_event_rewriter.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This rewriter remaps modifier key events based on settings/preferences.\n' +
    ' Also, updates modifier flags along with the remapping not only\n' +
    ' for KeyEvent instances but also motion Event instances, such as mouse\n' +
    ' events and touch events.'
]
modifier_split_dogfood_controller.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(b/339873990): Clean this up once key is no longer guarding the feature.\n' +
    ' Tracks whether the modifier split feature should be enabled in all UI visible\n' +
    ' ways. It can either be enabled directly via flag + key or via dogfood flag +\n' +
    ' internal google account.'
]
pref_names.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constants for the names of various preferences, for easier changing.\n' +
    ' TODO:: Those pref names probably need to live in a better place.',
  ' *************** PROFILE PREFS ***************\n' +
    ' These are attached to the user profile',
  ' Integer prefs which determine how we remap modifier keys (e.g. swap Alt and\n' +
    ' Control.) Possible values for these prefs are 0-7. See ModifierKey enum in\n' +
    ' src/ui/events/ash/mojom/modifier_key.mojom'
]
top_row_action_keys.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(dpad): Handle display mirror top row keys.\n' +
    ' This enum should mirror the enum `KeyboardTopRowLayout` in\n' +
    ' tools/metrics/histograms/enums.xml and values should not be changed.'
]
back_gesture_event.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Indicates the edge of the screen where the gesture started.\n' +
    ' GENERATED_JAVA_ENUM_PACKAGE: org.chromium.ui.base',
  ' This event provides information about gestures which start at the edge of a\n' +
    ' browser window and should trigger a back/forward navigation on the associated\n' +
    " web contents. This maps closely to Android's concept of back gesture\n" +
    ' navigation.'
]
base_event_utils.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Common functions to be used for all platforms.',
  ' Generate an unique identifier for events.',
  ' Checks if |flags| contains system key modifiers.',
  ' Create a timestamp based on the current time.',
  ' Overrides the clock used by EventTimeForNow for testing.\n' +
    " This doesn't take the ownership of the clock.",
  ' Converts an event timestamp ticks to seconds (floating point representation).\n' +
    ' WARNING: This should only be used when interfacing with platform code that\n' +
    ' does not use base::Time* types.',
  ' Converts an event timestamp in seconds to TimeTicks.\n' +
    ' WARNING: This should only be used when interfacing with platform code that\n' +
    ' does not use base::Time* types.',
  ' Returns false if an event timestamp is clearly bogus given that the event\n' +
    ' was generated a short time before |now|. Some fraction of devices, across\n' +
    ' all platforms provide bogus event timestamps. See\n' +
    ' https://crbug.com/650338#c1.',
  ' Ensures that the event timestamp values are coming from the same underlying\n' +
    ' monotonic clock as base::TimeTicks::Now() and if it is not then falls\n' +
    ' back to using the current ticks for event timestamp.'
]
blink_event_util.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The scroll percentage per mousewheel tick. Used to determine scroll delta\n' +
    ' if percent based scrolling is enabled.',
  ' Convenience wrapper for |CreateWebGestureEvent| using the supplied |data|.',
  ' Transforms coordinates and other properties of |event|, by\n' +
    ' 1) translating / shifting by |delta| and\n' +
    ' 2) scaling by |scale|.\n' +
    ' If |event| does not need to change, returns nullptr.\n' +
    ' Otherwise, returns the transformed version of |event|.',
  ' Convenience method that converts an instance to blink event.'
]
blink_features.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This feature allows native EventType::kMouseExit events to be passed\n' +
    ' through to blink as mouse leave events. Traditionally these events were\n' +
    ' converted to mouse move events due to a number of inconsistencies on\n' +
    ' the native platforms. crbug.com/450631',
  ' When enabled, this feature prevent blink sending key event to web unless it\n' +
    ' is on installed PWA.'
]
did_overscroll_params.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fling_booster.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is used to track fling state and provide "fling boosting".\n' +
    ' Boosting is a feature where successive flings can repeatedly increase the\n' +
    ' fling velocity so that users can scroll through long documents. This\n' +
    ' boosting logic occurs only in certain circumstances so we track the state\n' +
    ' and conditions in this class. The FlingController will request the velocity\n' +
    ' for all flings from this class; if FlingBooster decides the fling should be\n' +
    " boosted it'll add the new fling's velocity to the previous one's."
]
web_input_event.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' If a valid event cannot be created, the returned event type will be UNKNOWN.'
]
web_input_event_builders_win.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
web_input_event_traits.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Utility class for performing operations on and with WebInputEvents.'
]
cocoa_event_utils.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Conversion between wheel delta amounts and number of pixels to scroll.',
  ' Converts the Cocoa |modifiers| bitsum into a ui::EventFlags bitsum.',
  ' Retrieves a bitsum of ui::EventFlags represented by |event|,\n' +
    ' but instead use the modifier flags given by |modifiers|,\n' +
    ' which is the same format as |-NSEvent modifierFlags|. This allows\n' +
    ' substitution of the modifiers without having to create a new event from\n' +
    ' scratch.',
  ' Returns true for |NSEventTypeKeyUp| and for |NSEventTypeFlagsChanged| when\n' +
    ' modifier key was released.',
  ' Convert an NSEvent to an opaque serialization using CGEventCreateData.',
  ' Create an NSEvent from an opaque serialization using CGEventCreateFromData.\n' +
    ' The result is autoreleased.'
]
device_data_manager.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Keeps track of device mappings and event transformations.'
]
device_data_manager_test_api.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test interfaces for calling private functions of DeviceDataManager.\n' +
    ' Usage depends upon exactly what you want to do, but often times you will\n' +
    ' configure the set of devices (keyboards and/or touchscreens) and then call\n' +
    ' OnDeviceListsComplete().'
]
device_hotplug_event_observer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Listener for specific input device hotplug events.'
]
device_util_linux.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Find sysfs device path for this device.',
  ' Finds device type (internal or external) based on device path.'
]
events_devices_export.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gamepad_device.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents a gamepad device state.'
]
haptic_touchpad_effects.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Modifies the intensity of effects.'
]
input_device.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents an input device state.'
]
input_device_event_observer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' DeviceDataManager observer used to announce input hotplug events.'
]
input_device_observer_android.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is a singleton responsible to notify the\n' +
    ' InputDeviceChangeObserver whenever an input change\n' +
    ' happened on the Java side.'
]
input_device_observer_win.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_device.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents a keyboard device state.'
]
microphone_mute_switch_monitor.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Monitors the state of the Microphone mute switch device - Chrome OS devices\n' +
    ' may have a hardware toggle that disables audio input. The toggle state is\n' +
    ' exposed using the SW_MUTE_DEVICE event on an input device.\n' +
    ' MicrophoneMuteSwitchMonitor can be used to track the state of the microphone\n' +
    " mute switch. The switch state will be updated by the input device's event\n" +
    ' converter, and can be observed using the Observer interface exposed by the\n' +
    ' MicrophoneMuteSwitchMonitor.\n' +
    ' NOTE: The mute switch state will be monitored only on Chrome OS with ozone.'
]
stylus_state.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Current state of the stylus (ie, inside or outside of the device).'
]
touch_device_transform.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touchpad_device.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents a touchpad device state.'
]
touchscreen_device.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents a Touchscreen device state.'
]
device_data_manager_x11.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' CrOS touchpad metrics gesture types',
  ' A bitfield describing which scroll axes are enabled for a device.',
  ' A class that extracts and tracks the input events data. It currently handles\n' +
    ' mouse, touchpad and touchscreen devices.'
]
device_list_cache_x11.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class to cache the current XInput device list. This minimized the\n' +
    ' round-trip time to the X server whenever such a device list is needed. The\n' +
    ' update function will be called on each incoming\n' +
    ' x11::Input::HierarchyEvent::opcode event.'
]
events_devices_x11_export.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_factory_x11.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Functions related to determining touch devices.'
]
xinput_util.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
event.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Note: In order for Clone() to work properly, every concrete class\n' +
    ' transitively inheriting Event must implement Clone() explicitly, even if any\n' +
    ' ancestors have provided an implementation.',
  ' NOTE: Pen (stylus) events use TouchEvent with kPen. They were\n' +
    ' originally implemented as MouseEvent but switched to TouchEvent when UX\n' +
    ' decided not to show hover effects for pen.',
  ' A KeyEvent is really two distinct classes, melded together due to the\n' +
    ' DOM legacy of Windows key events: a keystroke event (is_char_ == false),\n' +
    ' or a character event (is_char_ == true).\n' +
    ' For a keystroke event,\n' +
    ' -- |bool is_char_| is false.\n' +
    ' -- |EventType Event::type()| can be EventType::kKeyPressed or\n' +
    ' EventType::kKeyReleased.\n' +
    ' -- |DomCode code_| and |int Event::flags()| represent the physical key event.\n' +
    '    - code_ is a platform-independent representation of the physical key,\n' +
    '      based on DOM UI Events KeyboardEvent |code| values. It does not\n' +
    '      vary depending on key layout.\n' +
    '      http://www.w3.org/TR/DOM-Level-3-Events-code/\n' +
    '    - Event::flags() provides the active modifiers for the physical key\n' +
    '      press. Its value reflects the state after the event; that is, for\n' +
    '      a modifier key, a press includes the corresponding flag and a release\n' +
    '      does not.\n' +
    ' -- |DomKey key_| provides the meaning (character or action) of the key\n' +
    '    event, in the context of the active layout and modifiers. It corresponds\n' +
    '    to DOM UI Events KeyboardEvent |key| values.\n' +
    '    http://www.w3.org/TR/DOM-Level-3-Events-key/\n' +
    ' -- |KeyboardCode key_code_| supports the legacy web event |keyCode| field,\n' +
    '    and its VKEY_ values are chosen to match Windows/IE for compatibility.\n' +
    '    For printable characters, this may or may not be a layout-mapped value,\n' +
    '    imitating MS Windows: if the mapped key generates a character that has\n' +
    '    an associated VKEY_ code, then key_code_ is that code; if not, then\n' +
    '    key_code_ is the unmapped VKEY_ code. For example, US, Greek, Cyrillic,\n' +
    '    Japanese, etc. all use VKEY_Q for the key beside Tab, while French uses\n' +
    '    VKEY_A. The stored key_code_ is non-located (e.g. VKEY_SHIFT rather than\n' +
    '    VKEY_LSHIFT, VKEY_1 rather than VKEY_NUMPAD1).\n' +
    ' -- |uint32_t scan_code_| [IS_OZONE only] supports remapping of the top\n' +
    '    function row based on a sysfs attribute provided by the kernel. This\n' +
    '    allows devices to have a custom top row layout and still be able to\n' +
    '    perform translation back and forth between F-Key and Action-Key. The\n' +
    '    value of this scan code is device specific.\n' +
    ' For a character event,\n' +
    ' -- |bool is_char_| is true.\n' +
    ' -- |EventType Event::type()| is EventType::kKeyPressed.\n' +
    ' -- |DomCode code_| is DomCode::NONE.\n' +
    ' -- |DomKey key_| is a UTF-16 code point.\n' +
    ' -- |KeyboardCode key_code_| is conflated with the character-valued key_\n' +
    '    by some code, because both arrive in the wParam field of a Windows event.'
]
event_constants.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Event flags currently supported. It is OK to add values to the middle of\n' +
    ' this list and/or reorder it, but make sure you also touch the various other\n' +
    ' enums/constants that want to stay in sync with this. For example,\n' +
    ' KeyEventFlags and MouseEventFlags should not overlap EventFlags.',
  ' Used to denote no flags explicitly',
  ' Universally applicable status bits.',
  ' Modifier key state.',
  ' GUI Key (e.g. Command on OS X keyboards, Search on Chromebook keyboards,\n' +
    ' Windows on MS-oriented keyboards)',
  ' Function key.',
  ' Other keyboard states.',
  ' Mouse buttons.',
  ' An artificial value used to bridge platform differences.\n' +
    ' Many commands on Mac as Cmd+Key are the counterparts of\n' +
    ' Ctrl+Key on other platforms.',
  ' Flags specific to key events.\n' +
    ' WARNING: If you add or remove values make sure traits for serializing these\n' +
    ' values are updated.',
  ' Key event fabricated by the underlying IME without a user action. (Linux X11\n' +
    ' only)',
  ' Do not remap; the event was created with the desired final values.',
  ' Windows extended key (see WM_KEYDOWN doc)',
  ' Event was generated by a stylus button',
  ' Event was generated by customizing a button on a mouse or graphics tablet.',
  ' Flags specific to mouse events.',
  ' Indicates this mouse event is generated from an unconsumed touch/gesture\n' +
    ' event.',
  ' Indicates this event was generated from touch accessibility mode.',
  ' Indicates this mouse event is generated because the cursor was just hidden.\n' +
    ' This can be used to update hover state.',
  ' Indicates this mouse event is from high precision touchpad and will come with\n' +
    ' a high precision delta.',
  ' Indicates this mouse event is generated when users is requesting to scroll by\n' +
    ' pages.',
  ' Indicates this mouse event is unadjusted mouse events that has unadjusted\n' +
    ' movement delta, i.e. is from WM_INPUT on Windows.',
  ' Indicates this mouse event should not trigger mouse warping (which moves the\n' +
    ' mouse to another display when the mouse hits the window boundaries).',
  ' Flags specific to touch events.',
  ' Indicates this touch event is reserved for gesture recognition and\n' +
    ' should not be handled in the event handler.',
  ' These value match the Windows default.',
  ' Result of dispatching an event.',
  ' Phase of the event dispatch.',
  ' Phase information used for a ScrollEvent. ScrollEventPhase is for scroll\n' +
    ' stream from user gesture, EventMomentumPhase is for inertia scroll stream\n' +
    ' after user gesture.',
  ' Momentum phase information used for a ScrollEvent.',
  ' Pointing device type.',
  ' Device type for gesture events.'
]
event_dispatcher.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Dispatches events to appropriate targets.'
]
event_handler.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Dispatches events to appropriate targets.  The default implementations of\n' +
    ' all of the specific handlers (e.g. OnKeyEvent, OnMouseEvent) do nothing.'
]
event_latency_metadata.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The struct contains metadata about EventLatency events.\n' +
    ' There should only be POD classes in this struct to keep the metadata to a\n' +
    ' minimum.'
]
event_modifiers.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Modifier key state for Evdev.\n' +
    ' Chrome relies on the underlying OS to interpret modifier keys such as Shift,\n' +
    ' Ctrl, and Alt. The Linux input subsystem does not assign any special meaning\n' +
    ' to these keys, so this work must happen at a higher layer (normally X11 or\n' +
    ' the console driver). When using evdev directly, we must do it ourselves.\n' +
    ' The modifier state is shared between all input devices connected to the\n' +
    ' system. This is to support actions such as Shift-Clicking that use multiple\n' +
    ' devices.\n' +
    ' Normally a modifier is set if any of the keys or buttons assigned to it are\n' +
    ' currently pressed. However some keys toggle a persistent "lock" for the\n' +
    ' modifier instead, such as CapsLock. If a modifier is "locked" then its state\n' +
    ' is inverted until it is unlocked.'
]
event_observer.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' EventObservers are notified of events but are unable to modify the events or\n' +
    ' mark them as handled before they are dispatched to EventHandlers.\n' +
    ' Window service clients may use this interface for observation of events that\n' +
    ' target the window manager or other clients. Clients should limit the types\n' +
    ' and duration of observation, as there is a system-wide perf/battery penalty,\n' +
    ' especially for frequently occurring events, like mouse moves. Events with\n' +
    " targets outside of the client's scope will have a null target."
]
event_processor.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' EventProcessor inherits EventSink to receive an event from an EventSource\n' +
    ' and dispatches it to a tree of EventTargets.'
]
event_rewriter.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Return status of EventRewriter operations; see that class below.\n' +
    ' TODO(kpschoedel): Remove old API.',
  ' EventRewriter provides a mechanism for Events to be rewritten\n' +
    ' before being dispatched from EventSource to EventSink.'
]
event_rewriter_continuation.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used to forward events from an EventRewriter. This is expected to be used\n' +
    ' only by cooperation between EventSource and EventRewriter. The methods are\n' +
    ' implemented by a subclass in EventSource, and called only via the\n' +
    ' corresponding EventRewriter functions (which validate the continuation).'
]
event_sink.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' EventSink receives events from an EventSource.'
]
event_source.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' EventSource receives events from the native platform (e.g. X11, win32 etc.)\n' +
    ' and sends the events to an EventSink.'
]
event_switches.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_target.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_target_iterator.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface that allows iterating over a set of EventTargets.',
  ' Provides EventTargetIterator implementations for iterating over a list of\n' +
    ' EventTargets. The list is iterated in the reverse order, since typically the\n' +
    ' EventTargets are maintained in increasing z-order in the lists.'
]
event_targeter.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_utils.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Common functions to be used for all platforms except Android.',
  " Key used to store keyboard 'state' values in Event::Properties.",
  " Key used to store keyboard 'group' values in Event::Properties.",
  " Key used to store 'hardware key code' values in Event::Properties.",
  ' Key used to store mouse event flag telling EventType::kMouseExited must\n' +
    ' actually be interpreted as "crossing intermediate window" in blink context.',
  ' Returns a ui::Event wrapping a native event. Ownership of the returned value\n' +
    ' is transferred to the caller.',
  ' Get the EventType from a native event.',
  ' Get the EventFlags from a native event.',
  ' Get the timestamp from a native event.\n' +
    ' Note: This is not a pure function meaning that multiple applications on the\n' +
    ' same native event may return different values.',
  ' Get the timestamp to use for latency metrics from |native_event|.\n' +
    ' |current_time| is a timestamp returned by EventTimeForNow which will be\n' +
    ' compared to the |native_event| timestamp to calculate latency. This is\n' +
    ' different from EventTimeFromNative because on some platforms (eg. Windows)\n' +
    ' EventTimeFromNative returns a synthesized timestamp.',
  ' Get the location from a native event.  The coordinate system of the resultant\n' +
    ' |Point| has the origin at top-left of the "root window".  The nature of\n' +
    ' this "root window" and how it maps to platform-specific drawing surfaces is\n' +
    ' defined in ui/aura/root_window.* and ui/aura/window_tree_host*.',
  ' Gets the location in native system coordinate space.',
  ' Returns the KeyboardCode from a native event.',
  ' Returns the DOM KeyboardEvent code (physical location in the\n' +
    ' keyboard) from a native event.',
  ' Returns true if the keyboard event is a character event rather than\n' +
    ' a keystroke event.',
  ' Returns the flags of the button that changed during a press/release.',
  ' Returns the detailed pointer information for mouse events.',
  ' Returns the movement vector associated with this mouse movement event.',
  ' Gets the mouse wheel offsets from a native event.',
  ' Gets the mouse wheel tick counts from a native event, with a value of 120\n' +
    ' representing a whole tick.',
  ' Returns whether platform events should be copied when ui::Events are copied.',
  ' Creates a new, invalid event.',
  ' Returns if the platform event is valid.',
  ' Returns the detailed pointer information for touch events.',
  ' Gets the fling velocity from a native event. is_cancel is set to true if\n' +
    ' this was a tap down, intended to stop an ongoing fling.',
  ' Returns whether this is a scroll event and optionally gets the amount to be\n' +
    ' scrolled. |x_offset|, |y_offset| and |finger_count| can be NULL.',
  ' Returns whether natural scrolling should be used for touchpad.',
  ' Returns whether or not the internal display produces touch events.',
  ' Like ComputeEventLatencyOS, but for events whose timestamp comes from a\n' +
    ' TOUCHINPUT structure instead of PlatformEvent.',
  ' Like ComputeEventLatencyOS, but for events whose timestamp comes from a\n' +
    ' POINTER_INFO structure instead of PlatformEvent.',
  ' Returns true if |message| identifies a mouse event that was generated as the\n' +
    ' result of a touch event.',
  ' Converts scan code and lParam each other.  The scan code\n' +
    ' representing an extended key contains 0xE000 bits.',
  ' Creates a CHROME_MSG from the given KeyEvent if there is no native_event.',
  ' Registers a custom event type.',
  ' Updates the location of |located_event| from |current_window_origin| to be in\n' +
    " |target_window_origin|'s coordinate system so that it can be dispatched to a\n" +
    ' window based on |target_window_origin|.',
  ' The following utilities are useful for debugging and tracing.',
  ' Returns a string description of an event type.',
  ' Returns a vector of string representations of EventFlags.',
  ' Returns a a vector of string representations of KeyEventFlags.',
  ' Returns a a vector of string representations of MouseEventFlags.'
]
events_base_export.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
events_export.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_event_sink.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Translates Fuchsia input events to Chrome ui::Events.'
]
pointer_events_handler.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper class for keying into a map.',
  ' Channel processors for fuchsia.ui.pointer.TouchSource and MouseSource\n' +
    ' protocols. It manages the channel state, collects touch and mouse events, and\n' +
    ' surfaces them to FlatlandWindow as ui::Event events for further processing\n' +
    ' and dispatch. ui::Events have logical coordinates and they might be scaled by\n' +
    ' the view pixel ratio in FlatlandWindow to get physical coordinates.'
]
pointer_event_utility.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A helper class for crafting a fuchsia.ui.pointer.TouchEvent table.',
  ' A helper class for crafting a fuchsia.ui.pointer.MouseEvent table.'
]
gesture_curve.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An abstraction of curve-based gesture motion, allowing platform-specific\n' +
    ' motion tailoring.'
]
filtered_gesture_provider.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides filtered gesture detection and dispatch given a sequence of touch\n' +
    ' events and touch event acks.'
]
gesture_configuration.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_detection_export.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_detector.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Port of GestureDetector.java from Android\n' +
    ' * platform/frameworks/base/core/java/android/view/GestureDetector.java\n' +
    ' * Change-Id: Ib470735ec929b0b358fca4597e92dc81084e675f\n' +
    ' * Please update the Change-Id as upstream Android changes are pulled.'
]
gesture_event_data.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_event_data_packet.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Acts as a transport container for gestures created (directly or indirectly)\n' +
    ' by a touch event.'
]
gesture_listeners.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Client through which |GestureDetector| signals gesture detection.',
  ' Client through which |GestureDetector| signals double-tap detection.',
  ' A convenience class to extend when you only want to listen for a subset\n' +
    ' of all the gestures. This implements all methods in the\n' +
    ' |GestureListener| and |DoubleTapListener| but does\n' +
    ' nothing and returns false for all applicable methods.'
]
gesture_provider.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Given a stream of |MotionEvent|'s, provides gesture detection and gesture\n" +
    ' event dispatch.'
]
gesture_provider_config_helper.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_touch_uma_histogram.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Records some touch/gesture event specific details (e.g. what gestures are\n' +
    ' targetted to which components etc.)'
]
scale_gesture_detector.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Port of ScaleGestureDetector.java from Android\n' +
    ' * platform/frameworks/base/core/java/android/view/ScaleGestureDetector.java\n' +
    ' * Change-Id: I3e7926a4f6f9ab4951f380bd004499c78b3bda69\n' +
    ' * Please update the Change-Id as upstream Android changes are pulled.'
]
scale_gesture_listeners.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Client through which |ScaleGestureDetector| signals scale detection.',
  ' A convenience class to extend when you only want to listen for a subset of\n' +
    ' scaling-related events. This implements all methods in\n' +
    ' |ScaleGestureListener| but does nothing.\n' +
    ' |OnScale()| returns false so that a subclass can retrieve the accumulated\n' +
    ' scale factor in an overridden |OnScaleEnd()|.\n' +
    ' |OnScaleBegin() returns true.'
]
snap_scroll_controller.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Port of SnapScrollController.java from Chromium\n' +
    ' Controls the scroll snapping behavior based on scroll updates.'
]
touch_disposition_gesture_filter.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface with which the |TouchDispositionGestureFilter| forwards gestures\n' +
    ' for a given touch event.',
  ' Given a stream of touch-derived gesture packets, produces a refined gesture\n' +
    ' sequence based on the ack dispositions of the generating touch events.'
]
gesture_event_details.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
web_gesture_curve_impl.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fixed_velocity_curve.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fling_curve.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' FlingCurve can be used to scroll a UI element suitable for touch screen-based\n' +
    ' flings.'
]
gesture_provider_aura.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides gesture detection and dispatch given a sequence of touch events\n' +
    ' and touch event acks.'
]
gesture_recognizer.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A GestureRecognizer is an abstract base class for conversion of touch events\n' +
    ' into gestures.'
]
gesture_recognizer_impl.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(tdresser): Once the unified gesture recognition process sticks\n' +
    ' (crbug.com/332418), GestureRecognizerImpl can be cleaned up\n' +
    ' significantly.'
]
gesture_recognizer_impl_mac.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Stub implementation of GestureRecognizer for Mac. Currently only serves to\n' +
    ' provide a no-op implementation of TransferEventsTo().'
]
gesture_types.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TransferTouchesBehavior customizes the behavior of\n' +
    ' GestureRecognizer::TransferEventsTo.',
  ' An abstract type for consumers of gesture-events created by the\n' +
    ' gesture-recognizer.',
  ' GestureEventHelper creates implementation-specific gesture events and\n' +
    ' can dispatch them.'
]
motion_event_aura.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implementation of MotionEvent which takes a stream of ui::TouchEvents.'
]
physics_based_fling_curve.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' PhysicsBasedFlingCurve generates animation curve, similar to\n' +
    " DirectManipulation's fling curve that can be used to scroll a UI element\n" +
    ' suitable for touch screen-based flings.'
]
ui_events_param_traits_macros.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_event_counter.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class tracks the total number of keypresses based on the OnKeyboardEvent\n' +
    ' calls it receives from the client.\n' +
    ' Multiple key down events for the same key are counted as one keypress until\n' +
    ' the same key is released.'
]
keyboard_hook.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Intercepts keyboard events typically handled by the OS or browser.\n' +
    ' Destroying the instance will unregister and clean up the keyboard hook.'
]
keyboard_hook_base.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dom_code.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Declares named values for each of the recognized DOM Code values.'
]
dom_codes_array.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Declares an array containing all the currently defined DomCode values.'
]
dom_key.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Integer representation of UI Events KeyboardEvent.key value.\n' +
    ' The semantics follow the web string form[1]: the value is either a\n' +
    ' Unicode character or one of a defined set of additional values[2].\n' +
    ' There is one notable difference from the UI Events string key: for\n' +
    " the 'Dead' key, this type provides a whole range of values that also\n" +
    ' encode the associated combining character. (They are not quite the\n' +
    ' same thing: a dead key is a non-printing operator that modifies a\n' +
    ' subsequent printing character, whereas a Unicode combining character\n' +
    ' is a printable character in its own right that attaches to a preceding\n' +
    ' character in a string.) This allows the interpretation of any keystroke\n' +
    ' to be carried as a single integer value.\n' +
    ' DomKey::NONE is a sentinel used to indicate an error or undefined value.\n' +
    ' It is not the same as Unicode code point 0 (ASCII NUL) or the valid DOM\n' +
    " key 'Unidentified'.\n" +
    ' References:\n' +
    ' [1] http://www.w3.org/TR/uievents/#widl-KeyboardEvent-key\n' +
    ' [2] http://www.w3.org/TR/DOM-Level-3-Events-key/',
  ' |dom_key_data.inc| describes the non-printable DomKey values, and is\n' +
    ' included here to create constants for them in the DomKey:: scope.'
]
dom_keyboard_layout.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Class for a single keyboard layout (if there is only one group) or single\n' +
    ' layout group within a keyboard layout.\n' +
    ' Note that a "group" is not a group of layouts but is rather a "sub-group"\n' +
    ' of a layout. Most layouts have a single group, but layouts can be divided\n' +
    ' into multiple groups. These groups are effectively separate sub-layouts that\n' +
    ' can be enabled within the layout. For example, a Japanese layout can have a\n' +
    ' main group and a separate "kana" group.',
  ' An array of DomCodes that identifies the Writing System Keys on the\n' +
    ' keyboard.\n' +
    ' The Writing System Keys are those that change meaning (i.e., they produce\n' +
    ' a different KeyboardEvent key value) based on the current keyboard layout.\n' +
    ' See https://www.w3.org/TR/uievents-code/#key-alphanumeric-writing-system\n' +
    ' This is used by the Keyboard Map API\n' +
    ' (see https://wicg.github.io/keyboard-map/)'
]
dom_keyboard_layout_manager.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dom_keyboard_layout_map.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Generates a map representing the physical keys on the current keyboard\n' +
    ' layout.  Each entry maps a DomCode string to a DomKey string.  The current\n' +
    ' layout is determined by the underlying OS platform which may be the active\n' +
    ' layout or the first ASCII capable layout available.\n' +
    ' More info at: https://wicg.github.io/keyboard-map/'
]
dom_keyboard_layout_map_base.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides the platform agnostic logic for generating a dom keyboard layout\n' +
    ' map, subclassing is required for each platform to retrieve the layout\n' +
    ' information from the underlying operating system.'
]
keycode_converter.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' For reference, the W3C UI Event spec is located at:\n' +
    ' http://www.w3.org/TR/uievents/',
  ' This structure is used to define the keycode mapping table.\n' +
    ' It is defined here because the unittests need access to it.',
  " A class to convert between the current platform's native keycode (scancode)\n" +
    ' and platform-neutral |code| values (as defined in the W3C UI Events\n' +
    ' spec (http://www.w3.org/TR/uievents/).'
]
dom_us_layout_data.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This table maps a DomCode to a printable character, assuming US layout.\n' +
    ' It is used by DomCodeToUsLayoutDomKey(), which provides a fallback\n' +
    ' interpretation when there is no other way to map a physical key.',
  ' This table maps a DomCode to a DomKey, assuming US keyboard layout.\n' +
    ' It is used by DomCodeToUsLayoutDomKey(), which provides a fallback\n' +
    ' interpretation when there is no other way to map a physical key.',
  ' This table maps a DomKey to a non-located KeyboardCode.',
  ' IME and Composition Keys\n' +
    ' http://www.w3.org/TR/DOM-Level-3-Events-key/#keys-composition',
  ' This table, used by DomCodeToUsLayoutKeyboardCode() and\n' +
    ' UsLayoutKeyboardCodeToDomCode(), maps between DOM Level 3 .code values\n' +
    ' and legacy Windows-based VKEY values, where the VKEYs are interpreted\n' +
    ' positionally (located) following a base US English layout.',
  ' This table, used by UsLayoutKeyboardCodeToDomCode(), maps legacy\n' +
    ' Windows-based VKEY values that are not part of kDomCodeToKeyboardCodeMap[]\n' +
    ' to suitable DomCode values, where practical.'
]
keyboard_code_conversion.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper functions to get the meaning of a DOM |code| in a\n' +
    ' platform independent way. It supports control characters as well.\n' +
    ' It assumes a US keyboard layout is used, so it may only be used when there\n' +
    ' is no native event or no better way to get the character.\n' +
    ' For example, if a virtual keyboard implementation can only generate key\n' +
    ' events with key_code and flags information, then there is no way for us to\n' +
    ' determine the actual character that should be generate by the key. Because\n' +
    ' a key_code only represents a physical key on the keyboard, it has nothing\n' +
    ' to do with the actual character printed on that key. In such case, the only\n' +
    ' thing we can do is to assume that we are using a US keyboard and get the\n' +
    ' character according to US keyboard layout definition. Preferably, such\n' +
    ' events should be created using a full KeyEvent constructor, explicitly\n' +
    ' specifying the character and DOM 3 values as well as the legacy VKEY.',
  ' Helper function to map a physical key state (dom_code and flags)\n' +
    ' to a meaning (dom_key and character, together corresponding to the\n' +
    ' DOM keyboard event |key| value), along with a corresponding non-located\n' +
    ' Windows-based key_code.\n' +
    ' This follows a US keyboard layout, so it should only be used when there\n' +
    ' is no other better way to obtain the meaning (e.g. actual keyboard layout).\n' +
    ' Returns true and sets the output parameters if the (dom_code, flags) pair\n' +
    ' has an interpretation in the US English layout; otherwise the output\n' +
    ' parameters are untouched.',
  ' Helper function to map a physical key (dom_code) to a meaning (dom_key\n' +
    ' and character, together corresponding to the DOM keyboard event |key|\n' +
    ' value), along with a corresponding non-located Windows-based key_code.\n' +
    ' Unlike |DomCodeToUsLayoutDomKey| this function only maps non-printable,\n' +
    ' or action, keys.',
  ' Obtains the control character corresponding to a physical key;\n' +
    ' that is, the meaning of the physical key state (dom_code, and flags\n' +
    ' containing EF_CONTROL_DOWN) under the base US English layout.\n' +
    ' Returns true and sets the output parameters if the (dom_code, flags) pair\n' +
    ' is interpreted as a control character; otherwise the output parameters\n' +
    ' are untouched.',
  ' Returns a Windows-based VKEY for a non-printable DOM Level 3 |key|.\n' +
    ' The returned VKEY is non-located (e.g. VKEY_SHIFT).',
  ' Determine the non-located VKEY corresponding to a located VKEY.\n' +
    ' Most modifier keys have two kinds of KeyboardCode: located (e.g.\n' +
    ' VKEY_LSHIFT and VKEY_RSHIFT), that indentify one of two specific\n' +
    ' physical keys, and non-located (e.g. VKEY_SHIFT) that identify\n' +
    ' only the operation. Similarly digit keys have a number-pad variant\n' +
    ' (e.g. VKEY_NUMPAD1 on the number pad vs VKEY_1 on the main keyboard),\n' +
    ' except that in this case the main keyboard code doubles as the\n' +
    ' non-located value.',
  ' Determine the located VKEY corresponding to a non-located VKEY.',
  ' Returns a DOM Level 3 |code| from a Windows-based VKEY value.\n' +
    ' This assumes a US layout and should only be used when |code| cannot be\n' +
    ' determined from a physical scan code, for example when a key event was\n' +
    ' generated synthetically by JavaScript with only a VKEY value supplied.',
  ' Returns the Windows-based VKEY value corresponding to a DOM Level 3 |code|,\n' +
    ' assuming a base US English layout. The returned VKEY is located\n' +
    ' (e.g. VKEY_LSHIFT).',
  ' Returns the Windows-based VKEY value corresponding to a DOM Level 3 |code|,\n' +
    ' assuming a base US English layout. The returned VKEY is non-located\n' +
    ' (e.g. VKEY_SHIFT).',
  ' Returns the ui::EventFlags value associated with a modifier key,\n' +
    ' or 0 (EF_NONE) if the key is not a modifier.',
  ' Returns the physical DOM code along with a corresponding non-located\n' +
    ' Windows-based key_code.'
]
keyboard_code_conversion_android.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns DomKey from an Android character and keycode.'
]
keyboard_code_conversion_fuchsia.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Converts a Fuchsia KeyMeaning to a DomKey.'
]
keyboard_code_conversion_mac.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' We use windows virtual keycodes throughout our keyboard event related code,\n' +
    ' including unit tests. But Mac uses a different set of virtual keycodes.\n' +
    " This function converts a windows virtual keycode into Mac's virtual key code\n" +
    ' and corresponding unicode character. |flags| is the Cocoa modifiers mask\n' +
    ' such as NSEventModifierFlagControl, NSEventModifierFlagShift, etc.\n' +
    " When success, the corresponding Mac's virtual key code will be returned.\n" +
    ' |keyboard_character| is the corresponding keyboard character, suitable for\n' +
    ' use in -[NSEvent characters]. If NSEventModifierFlagShift appears in |flags|,\n' +
    ' |us_keyboard_shifted_character| is |keyboard_character| with a shift modifier\n' +
    ' applied using a US keyboard layout (otherwise unmodified).\n' +
    ' |us_keyboard_shifted_character| is suitable for -[NSEvent\n' +
    ' charactersIgnoringModifiers] (which ignores all modifiers except for shift).\n' +
    " -1 will be returned if the keycode can't be converted.\n" +
    ' This function is mainly for simulating keyboard events in unit tests.\n' +
    ' See |KeyboardCodeFromNSEvent| for reverse conversion.',
  ' Returns the WindowsKeyCode from the Mac key code.',
  ' Returns the KeyboardCode from a |char_code| from AppKit classes.',
  ' This implementation cribbed from:\n' +
    '   content/browser/render_host/input/web_input_event_builder_mac.mm\n' +
    ' Converts |event| into a |KeyboardCode|.  The mapping is not direct as the Mac\n' +
    ' has a different notion of key codes.',
  ' Map a |event| to a |DomKey|. |DomKey::NONE| is returned on a failed\n' +
    ' mapping and the callee should may wish to convert this to\n' +
    ' |DomKey::UNIDENTIFIED| before handing the value off.',
  ' Map |key_code| to a unicode char based on the params provided.'
]
keyboard_code_conversion_win.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Methods to convert ui::KeyboardCode/Windows virtual key type methods.'
]
keyboard_code_conversion_x.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a character on a standard US PC keyboard from an XEvent.',
  ' Returns DomKey and character from an XEvent.',
  ' Converts a KeyboardCode into an X KeySym.',
  ' Returns a XKeyEvent keycode (scancode) for a KeyboardCode. Keyboard layouts\n' +
    ' are usually not injective, so inverse mapping should be avoided when\n' +
    ' practical. A round-trip keycode -> KeyboardCode -> keycode will not\n' +
    ' necessarily return the original keycode.',
  ' Converts an X keycode into ui::KeyboardCode.'
]
keyboard_code_conversion_xkb.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These functions are used by X11 targets and by Ozone/XKBcommon targets.',
  ' Returns the DomKey associated with a non-character xkb_keysym_t.\n' +
    ' Returns DomKey::NONE for unrecognized keysyms, which includes\n' +
    ' all printable characters.',
  ' TODO(kpschoedel) crbug.com/442757\n' +
    ' Returns the dead key combining character associated with an xkb_keysym_t,\n' +
    ' or 0 if the keysym is not recognized.\n' +
    ' char16_t DeadXKeySymToCombiningCharacter(xkb_keysym_t keysym);',
  ' Return the DomKey determined by the XKB layout result (keysym, character).'
]
keyboard_codes.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_codes_posix.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Copyright (C) 2006 Michael Emmel mike.emmel@gmail.com. All rights reserved.\n' +
    ' * Copyright (C) 2008, 2009 Google Inc.\n' +
    ' *\n' +
    ' * Redistribution and use in source and binary forms, with or without\n' +
    ' * modification, are permitted provided that the following conditions\n' +
    ' * are met:\n' +
    ' * 1. Redistributions of source code must retain the above copyright\n' +
    ' *    notice, this list of conditions and the following disclaimer.\n' +
    ' * 2. Redistributions in binary form must reproduce the above copyright\n' +
    ' *    notice, this list of conditions and the following disclaimer in the\n' +
    ' *    documentation and/or other materials provided with the distribution.\n' +
    ' *\n' +
    " * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n" +
    ' * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n' +
    ' * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n' +
    ' * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n' +
    ' * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n' +
    ' * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n' +
    ' * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES, LOSS OF USE, DATA, OR\n' +
    ' * PROFITS, OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n' +
    ' * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n' +
    ' * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n' +
    ' * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.',
  ' When adding a new KeyboardCode, be sure to also update the associated mojom\n' +
    ' file at ash/public/mojom/accelerator_keys.mojom.'
]
keyboard_codes_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_defines_win.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This header file contains all of the VK_* defines from WinUser.h plus two\n' +
    ' VK_DBE_* constants from ime.h. This allows keyboard_codes_win.h to be\n' +
    ' compiled without pulling in windows.h, thus improving compile times and\n' +
    ' reducing namespace pollution.\n' +
    ' These macros must exactly match those generated by including windows.h so\n' +
    " that translation units that pull in both headers don't see conflicting\n" +
    ' definitions.'
]
keycodes_x_export.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keysym_to_unicode.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a Unicode character corresponding to the given |keysym|.  If the\n' +
    " |keysym| doesn't represent a printable character, returns zero.  We don't\n" +
    ' support characters outside the Basic Plane, and this function returns zero\n' +
    ' in that case.'
]
platform_key_map_win.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_xkb.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' libxkbcommon uses explicit reference counting for its structures,\n' +
    ' so we need to trigger its cleanup.'
]
xkb_keysym.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file provides definitions of the xkbcommon keysym type (xkb_keysym_t)\n' +
    ' and values (XKB_KEY_...) for both xkbcommon and traditional X11.'
]
mobile_scroller.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Native port of android.widget.Scroller.\n' +
    ' * Change-Id: I4365946f890a76fcfa78ca9d69f2a8e0848095a9\n' +
    ' * Please update the Change-Id as upstream Android changes are pulled.'
]
event_latency_metadata_mojom_traits.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_mojom_traits.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
null_event_targeter.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' NullEventTargeter can be installed on a root window to prevent it from\n' +
    ' dispatching events such as during shutdown.'
]
cursor_controller.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manager for per-window cursor settings.\n' +
    ' This is used to apply a rotation & acceleration to each vector added to the\n' +
    ' cursor position on ChromeOS.\n' +
    ' This has 3 uses:\n' +
    '  (1) Fixing cursor movement direction for rotated displays.\n' +
    '  (2) Fixing cursor movement speed based on scale factor.\n' +
    '  (3) Tweaking cursor movement speed on external displays.\n' +
    ' This HACK is necessary because ash handles rotation and handles scaling but\n' +
    ' does NOT handle the cursor movement (except that it sends a message to x11 or\n' +
    ' ozone to activate this hack).\n' +
    " TODO(spang): Don't worry, we have a plan to remove this."
]
device_event.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
device_event_observer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
device_manager.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
device_manager_manual.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
device_manager_udev.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cursor_delegate_evdev.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
device_event_dispatcher_evdev.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface used by device objects for event dispatch.'
]
event_converter_evdev.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_converter_evdev_impl.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_converter_test_util.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_device_info.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " ABS_MT_SLOT isn't valid options for EVIOCGMTSLOTS ioctl.",
  ' Input device types.',
  ' Status of Keyboard Device',
  ' Device information for Linux input devices\n' +
    ' This stores and queries information about input devices; in\n' +
    ' particular it knows which events the device can generate.'
]
event_device_test_util.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_device_util.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
event_dispatch_callback.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_factory_evdev.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ozone events implementation for the Linux input subsystem ("evdev").\n' +
    ' This is a UI thread object, but creates its own thread for I/O. See\n' +
    ' InputDeviceFactoryEvdev for the I/O thread part.'
]
event_thread_evdev.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wrapper for events thread.'
]
fake_keyboard_heuristic_metrics.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gamepad_event_converter_evdev.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
heatmap_palm_detector.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface for touch screen heatmap palm detector.'
]
imposter_checker_evdev.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
imposter_checker_evdev_state.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The state for imposter checker evdev which helps in disabling/enabling\n' +
    ' keyboard check.'
]
input_controller_evdev.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ozone InputController implementation for the Linux input subsystem ("evdev").'
]
input_device_factory_evdev.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manager for event device objects. All device I/O starts here.'
]
input_device_factory_evdev_metrics.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_device_factory_evdev_proxy.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Thread safe proxy for InputDeviceFactoryEvdev.\n' +
    ' This is used on the UI thread to proxy calls to the real object on\n' +
    ' the device I/O thread.'
]
input_device_opener.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_device_opener_evdev.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_device_settings_evdev.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_injector_evdev.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_evdev.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Keyboard for evdev.\n' +
    ' This object is responsible for combining all attached keyboards into\n' +
    ' one logical keyboard, applying modifiers & implementing key repeat.\n' +
    ' It also currently also applies the layout.'
]
keyboard_mouse_combo_device_metrics.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Enum for combo device classification metrics.\n' +
    ' This enum should mirror the enum `ComboDeviceClassification` in\n' +
    ' tools/metrics/histograms/enums.xml and values should not be changed.'
]
event_reader_libevdev_cros.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Basic wrapper for libevdev-cros.\n' +
    ' This drives libevdev-cros from a file descriptor and calls delegate\n' +
    ' with the updated event state from libevdev-cros.\n' +
    " The library doesn't support all devices currently. In particular there\n" +
    ' is no support for keyboard events.'
]
gesture_feedback.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Touch event log paths.',
  ' Utility functions for generating gesture related logs. These logs will be\n' +
    ' included in user feedback reports.'
]
gesture_interpreter_libevdev_cros.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Convert libevdev-cros events to ui::Events using libgestures.\n' +
    ' This builds a GestureInterpreter for an input device (touchpad or\n' +
    ' mouse).\n' +
    ' Raw input events must be preprocessed into a form suitable for\n' +
    ' libgestures. The kernel protocol only emits changes to the device state,\n' +
    ' so changes must be accumulated until a sync event. The full device state\n' +
    ' at sync is then processed by libgestures.\n' +
    ' Once we have the state at sync, we convert it to a HardwareState object\n' +
    ' and forward it to libgestures. If any gestures are produced, they are\n' +
    ' converted to ui::Events and dispatched.'
]
gesture_logging.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' libgestures.so binds to this function for logging.\n' +
    ' TODO(spang): Fix libgestures to not require this.\n' +
    ' clang-format off',
  ' clang-format on'
]
gesture_properties_service.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gesture_property_provider.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Not for public consumption, so we wrap it in namespace internal.',
  ' A struct holding device properties that are useful when interacting with\n' +
    ' the gestures lib.',
  ' Provide the interface to access the CrOS gesture library properties.\n' +
    ' It maintains the property data for all input devices that runs with\n' +
    ' the gesture library.\n' +
    ' The class also parses the configuration files on the system to\n' +
    ' initialize the specified property values. The configuration files are\n' +
    ' currently in the xorg-conf format so that they can be shared with non-Ozone\n' +
    ' builds.',
  ' Wrapper of GesturesProp related functions. We group them together so that we\n' +
    ' can friend them all at once.',
  ' GesturesProp logging function.',
  ' Implementation of GesturesProp declared in gestures.h\n' +
    ' libgestures requires that this be in the top level namespace. We have also\n' +
    ' to put it in the header file so that other classes will be able to use the\n' +
    ' gesture property objects.'
]
gesture_timer_provider.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
haptic_touchpad_handler.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Handles communication with haptic touchpads via the evdev force feedback\n' +
    ' interface.\n' +
    ' Checks that the device is capable of performing all of the required haptic\n' +
    ' effects, then takes control over haptic effects from the kernel.\n' +
    ' Performs haptic effects requested by the UI, and also provides a callback to\n' +
    ' perform the appropriate haptic effects when the gesture library determines\n' +
    ' that a physical button click (press or release) has occurred.'
]
libinput_event_converter.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Use libinput (freedesktop.org/wiki/Software/libinput) to read events from\n' +
    ' old touchpads that are not supported by libgestures.\n' +
    ' Note that although libinput can read inputs from any number of devices, this\n' +
    ' implementation only attaches one device per libinput context.'
]
microphone_mute_switch_event_converter_evdev.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mouse_button_map_evdev.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mouse button map for Evdev.\n' +
    ' Chrome relies on the underlying OS to interpret mouse buttons. The Linux\n' +
    ' input subsystem does not assign any special meaning to these keys, so\n' +
    ' this work must happen at a higher layer (normally X11 or the console driver).\n' +
    ' When using evdev directly, we must do it ourselves.\n' +
    ' The mouse button map is shared between all input devices connected to the\n' +
    ' system.'
]
mouse_button_property.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Retrieves the Forward/Back Mouse button property from the given event.\n' +
    ' Returns nullopt if the property does not exist on the given event.',
  ' Sets the Forward/Back Mouse button property on the given event to be used to\n' +
    ' differentiate between the different forward/back buttons on devices.'
]
numberpad_metrics.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Combine delegate callbacks and FeatureUsageMetrics state for each metric.',
  ' A class that records number-pad related metrics.'
]
stylus_button_event_converter_evdev.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
tablet_event_converter_evdev.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fake_cursor_delegate_evdev.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_evdev_debug_buffer.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_evdev_types.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Number of supported touch slots. ABS_MT_SLOT messages with\n' +
    ' value >= kNumTouchEvdevSlots are ignored.',
  ' Contains information about an in progress touch.',
  ' Contains information about stylus event, the useful relate ddevice info and\n' +
    ' the timestamp.'
]
touch_event_converter_evdev.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' See if we compile against new enough headers and add missing definition\n' +
    ' if the headers are too old.'
]
edge_touch_filter.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
false_touch_finder.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Finds touches which are should be filtered.'
]
heuristic_stylus_palm_detection_filter.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A heuristic implementation of PalmDetectionFilter.\n' +
    ' Relies on firmware palm detection, but modifies behavior _after_ a stylus\n' +
    ' touch since our mutual-exclusion of stylus/touch means that we do not trust\n' +
    ' the device right after stylus.\n' +
    ' Configured with 3 inputs:\n' +
    ' 1. How many strokes to hold on to when holding.\n' +
    ' 2. TimeDelta for cancellation: any strokes started within this delta are\n' +
    ' cancelled automatically.\n' +
    ' 3. TimeDelta for hold: any strokes started after the cancellation and before\n' +
    " this are held for the stroke count (as above). If they're cancelled\n" +
    ' externally, we never report them. If they terminate before the count, we\n' +
    ' output all items.\n' +
    ' NOTE: This filter is only intended for certain boards of hardware that have\n' +
    ' poor interaction between a mutually exclusive stylus and finger input:\n' +
    ' Turning it on for devices where is not intended will probably degrade\n' +
    ' performance and create a poor UX.'
]
neural_stylus_palm_detection_filter.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An implementation of PalmDetectionFilter that relies on a DNN implementation\n' +
    ' to decide on palm detection. Requires a configured model as an argument.\n' +
    ' Heuristics are added for handling short strokes'
]
neural_stylus_palm_detection_filter_model.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An abstract model utilized by NueralStylusPalmDetectionFilter.'
]
neural_stylus_palm_detection_filter_util.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Data for a single touch event.'
]
open_palm_detection_filter.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A simple implementation of PalmDetectionFilter.\n' +
    ' Does not delay or set anything to palm.'
]
palm_detection_filter.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An abstract palm detection filter. It has two functions:\n' +
    ' 1. To decide which touches to "hold"\n' +
    ' 2. To decide which touches to suppress / "cancel".\n' +
    ' Interface is similar to that of TouchFilter but enshrines the "hold" as a\n' +
    ' first class citizen.'
]
palm_detection_filter_factory.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' In a named namespace for testing.',
  ' Returns either an empty string or a comma separated floating point numbers,\n' +
    ' used in transforming touch_major/touch_minor radius. The parsed numbers are\n' +
    ' used as described in:\n' +
    ' https://source.chromium.org/chromium/chromium/src/+/HEAD:ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_model.h;l=63',
  ' Returns the model version to use on the current device. If empty will use\n' +
    ' alpha model.'
]
onedevice_train_palm_detection_filter_inference.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' Code generated by tf.native.'
]
onedevice_train_palm_detection_filter_inference_beta.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' Code generated by tf.native.'
]
onedevice_train_palm_detection_filter_model.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A simplified Neural stylus Palm Detection Model, trained on the data based on\n' +
    ' a single device class but translatable to others. Neural inference\n' +
    ' implementation based on inline neural net inference.'
]
shared_palm_detection_filter_state.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_filter.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
events_ozone.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wrap a "native" ui::Event in another ui::Event & dispatch it.\n' +
    ' This is really unfortunate, but exists for two reasons:\n' +
    '   1. Some of the ui::Event constructors depend on global state that\n' +
    '   is only used when building from a "native" event. For example:\n' +
    '   last_click_event_ is used when constructing MouseEvent from\n' +
    '   NativeEvent to determine click count.\n' +
    '   2. Events contain a reference to a "native event", which some code\n' +
    '   depends on. The ui::Event might get mutated during dispatch, but\n' +
    "   the native event won't. Some code depends on the fact that the\n" +
    '   "native" version of the event is unmodified.\n' +
    ' We are trying to fix both of these issues, but in the meantime we\n' +
    ' define NativeEvent == ui::Event.\n' +
    ' Returns `ui::EventResult` for the `ui::Event`.',
  ' Disable native level event handling including dispatch,\n' +
    ' capture or mouse movements for tests.',
  ' Event::Properties constants for IBus-GTK and fcitx-GTK.\n' +
    ' Both of them in async mode use gtk-specific XKeyEvent::state bits 24 and 25.\n' +
    ' 24 is handled and 25 is ignored.\n' +
    ' Note that they use more bits, but Chrome does not handle it now.\n' +
    ' cf)\n' +
    ' https://github.com/ibus/ibus/blob/dd4cc5b028c35f9bb8fa9d3bdc8f26bcdfc43d40/src/ibustypes.h#L88\n' +
    ' https://github.com/fcitx/fcitx/blob/289b2f674d95651d4e0d0c77a48e3a2f0da40efe/src/lib/fcitx-utils/keysym.h#L47\n' +
    ' https://mail.gnome.org/archives/gtk-devel-list/2013-June/msg00003.html',
  ' Handled is the 24-th bit.',
  ' Ignored is the 25-th bit.',
  ' Sets the `flags` as keyboard ime flag property to given `properties`.',
  " Sets the keyboard ime flags to the given `event`'s properties.\n" +
    ' `flags` should be the bitwise-or of the flags defined just above.',
  ' Returns the keyboard ime flags for the given `event`. If it does not have,\n' +
    ' 0 will be returned.'
]
features.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gamepad_event.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' We care about three type of gamepad events.'
]
gamepad_observer.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gamepad_provider_ozone.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_auto_repeat_handler.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_layout_engine.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A KeyboardLayoutEngine provides a platform-independent interface to\n' +
    ' key mapping. Key mapping provides a meaning (DomKey and character,\n' +
    ' and optionally Windows key code) for a physical key press (DomCode\n' +
    ' and modifier flags).\n' +
    ' This interface does not expose individual layouts because it must support\n' +
    ' platforms that only provide for one active system layout, and/or platforms\n' +
    ' where layouts have no accessible representation.'
]
keyboard_layout_engine_manager.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_layout_engine_test_utils.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper for tests that require the keyboard layout to be fully initialised.\n' +
    ' The platform may set the keyboard layout asynchronously, but the layout is\n' +
    ' required when handling key events.  Tests that do not manipulate the keyboard\n' +
    ' layout configuration directly may use this helper.\n' +
    ' See crbug.com/1186996'
]
no_keyboard_layout_engine.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_keyboard_layout_engine.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Sets a KeyboardLayoutEngine as the global layout engine used by ui::KeyEvent.'
]
stub_keyboard_layout_engine.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
xkb_evdev_codes.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
xkb_key_code_converter.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' XKB scan code values are platform-dependent; this provides the layout engine\n' +
    ' with the mapping from DomCode to xkb_keycode_t. (This mapping is in principle\n' +
    ' derivable from the XKB keyboard layout, but xkbcommon does not provide a\n' +
    ' practical interface to do so.)'
]
xkb_keyboard_layout_engine.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
xkb_modifier_converter.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Handles the conversions about XKB modifiers, names and ui::EventFlags.'
]
platform_event_dispatcher.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' See documentation for |PlatformEventDispatcher::DispatchEvent()| for\n' +
    ' explanation of the meaning of the flags.',
  ' PlatformEventDispatcher receives events from a PlatformEventSource and\n' +
    ' dispatches them.'
]
platform_event_observer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' PlatformEventObserver can be installed on a PlatformEventSource, and it\n' +
    ' receives all events that are dispatched to the dispatchers.'
]
platform_event_source.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' PlatformEventSource receives events from a source and dispatches the events\n' +
    ' to the appropriate dispatchers.'
]
scoped_event_dispatcher.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A temporary PlatformEventDispatcher can be installed on a\n' +
    ' PlatformEventSource that overrides all installed event dispatchers, and\n' +
    ' always gets a chance to dispatch the event first. The PlatformEventSource\n' +
    ' returns a ScopedEventDispatcher object in such cases. This\n' +
    ' ScopedEventDispatcher object can be used to dispatch the event to any\n' +
    ' previous overridden dispatcher. When this object is destroyed, it removes the\n' +
    ' override-dispatcher, and restores the previous override-dispatcher.'
]
wayland_event_watcher.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WaylandEventWatcher is a base class that provides a read/prepare/dispatch\n' +
    ' functionality to derived WaylandEventWatcherFDWatch and\n' +
    ' WaylandEventWatcherGlib classes. These classes serve a single purpose - they\n' +
    ' use libevent or libglib (depends on the build configuration of Chromium) to\n' +
    ' watch a Wayland file descriptor and get notified when they can read events\n' +
    ' from an event queue. They also strictly follow a strict prepare/read/dispatch\n' +
    " dance to ensure Wayland client event loop's integration into the previously\n" +
    ' mentioned event loop libraries is correct. The events that the instance of\n' +
    ' this class dispatches trigger input objects (e.g: WaylandPointer,\n' +
    ' WaylandKeyboard, and others) callbacks, indirectly leading to calls into\n' +
    ' WaylandEventSource, so feeding the platform events pipeline.'
]
wayland_event_watcher_fdwatch.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WaylandEventWatcherFdWatch implementation that uses Glib for event polling.'
]
wayland_event_watcher_glib.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WaylandEventWatcher implementation that uses Glib for event polling.\n' +
    ' The event loop integration is done according to the manual available at\n' +
    ' https://bit.ly/3tCjobF'
]
x11_event_source.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Responsible for notifying X11EventSource when new x11::Events are available\n' +
    ' to be processed/dispatched.',
  ' PlatformEventSource implementation for X11, both Ozone and non-Ozone.\n' +
    ' Receives X11 events from X11EventWatcher and sends them to registered\n' +
    ' PlatformEventDispatchers/x11::EventObservers. Handles receiving, pre-process,\n' +
    ' translation and post-processing of x11::Events.'
]
x11_event_watcher_fdwatch.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' X11EventWatcher implementation which uses MessagePumpForUI::FdWatcher\n' +
    ' API to be notified about incoming XEvents.'
]
x11_event_watcher_glib.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A X11EventWatcher implementation which uses a Glib GSource API to be\n' +
    " notified for incoming XEvents. It must run in the browser process' main\n" +
    ' thread when use_glib GN flag is set (i.e: MessagePumpGlib is in place).'
]
x11_hotplug_event_handler.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Parses X11 native devices and propagates the list of active devices to an\n' +
    ' observer.'
]
platform_event.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40267204): Both gfx::NativeEvent and ui::PlatformEvent\n' +
    " are typedefs for native event types on different platforms, but they're\n" +
    ' slightly different and used in different places. They should be merged.',
  ' Cross platform typedefs for native event types.'
]
pointer_details.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Pointer ID type.',
  ' Pointer id which means it needs to be initialized for all pointer types.',
  ' Pointer id to be used by Mouse events.',
  ' Structure for handling common fields between touch and mouse to support\n' +
    ' PointerEvents API.'
]
scoped_target_handler.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " An EventHandler that replaces an EventTarget's target handler with itself to\n" +
    ' pass events first to the original handler and second to an additional new\n' +
    ' EventHandler. The new handler gets called after the original handler even\n' +
    ' if it calls SetHandled() on the event but not if StopPropagation() is called\n' +
    ' on the event.'
]
cocoa_test_event_utils.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Converts |window_point| in |window| coordinates (origin at bottom left of\n' +
    ' window frame) to a point in global display coordinates for a CGEvent (origin\n' +
    ' at top left of primary screen).',
  ' Converts |event| to an NSEvent with a timestamp from ui::EventTimeForNow(),\n' +
    ' and attaches |window| to it.',
  ' Create synthetic mouse events for testing. Currently these are very\n' +
    ' basic, flesh out as needed.  Points are all in window coordinates;\n' +
    ' where the window is not specified, coordinate system is undefined\n' +
    ' (but will be repeated when the event is queried).',
  ' Return a mouse down and an up event with the given |clickCount| at\n' +
    " |view|'s midpoint.",
  ' Return a right mouse down and an up event with the given |clickCount| at\n' +
    " |view|'s midpoint.",
  ' Creates a test scroll event. |has_precise_deltas| determines the value of\n' +
    ' -[NSEvent hasPreciseScrollingDeltas] - usually NO for a mouse wheel and YES\n' +
    ' for a trackpad. If |window| is nil, |location| is assumed to be AppKit screen\n' +
    ' coordinates (origin in bottom left of primary screen).',
  ' Returns a key-down event with isARepeat:YES.',
  ' Returns a key event with the given character.',
  ' Returns a key event with the given type and modifier flags.',
  ' Returns a key event with the given key code, type, and modifier flags.',
  ' Returns a key event for pressing or releasing a modifier key (aka\n' +
    ' NSEventTypeFlagsChanged). For example |key_code| == kVK_Shift with\n' +
    ' (|modifiers| & NSEventModifierFlagShift) != 0 means Shift is pressed and\n' +
    ' |key_code| == kVK_Shift with (|modifiers| & NSEventModifierFlagShift) == 0\n' +
    ' means Shift is released.',
  ' Returns a mouse enter event.',
  ' Returns a mouse exit event.',
  ' Return an "other" event with the given type.',
  " Time interval since system startup. Tests shouldn't rely on this.",
  ' Creates a key event in a particular window.'
]
event_generator.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' See EventGenerator::GestureScrollSequenceWithCallback for details.',
  ' A delegate interface for EventGenerator to abstract platform-specific event\n' +
    ' targeting and coordinate conversion.',
  ' ui::test::EventGenerator is a tool that generates and dispatches events.\n' +
    ' Unlike |ui_controls| package in ui/base/test, this does not use platform\n' +
    ' native message loops. Instead, it sends events to the event dispatcher\n' +
    ' synchronously.\n' +
    ' This class is not suited for the following cases:\n' +
    ' 1) If your test depends on native events (ui::Event::native_event()).\n' +
    '   This return is empty/NULL event with EventGenerator.\n' +
    ' 2) If your test involves nested run loop, such as\n' +
    '    menu or drag & drop. Because this class directly\n' +
    '    post an event to WindowEventDispatcher, this event will not be\n' +
    '    handled in the nested run loop.\n' +
    ' 3) Similarly, |base::MessagePumpObserver| will not be invoked.\n' +
    ' 4) Any other code that requires native message loops, such as\n' +
    '    tests for WindowTreeHostWin/WindowTreeHostX11.\n' +
    ' If one of these applies to your test, please use |ui_controls|\n' +
    ' package instead.\n' +
    ' Note: The coordinates of the points in API is determined by the\n' +
    ' EventGeneratorDelegate.',
  ' This generates key events for moidfiers as well as the key with\n' +
    ' modifiers.\n' +
    ' TODO(crbug.com/40256427): Remove this once the EventGenerator is\n' +
    ' modified to generate the same sequence.'
]
events_test_utils.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
events_test_utils_x11.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Initializes a test touchpad device for scroll events.',
  ' Initializes a list of touchscreen devices for touch events.',
  ' Initializes a list of non-touch, non-cmt pointer devices.'
]
keyboard_hook_monitor_utils.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Simulates a KeyboardHook being registered by calling the appropriate method\n' +
    ' on the KeyboardHookMonitorImpl instance.\n' +
    ' This method is exposed to allow testing this behavior outside of //ui/events.',
  ' Simulates a KeyboardHook being unregistered by calling the appropriate method\n' +
    ' on the KeyboardHookMonitorImpl instance.\n' +
    ' This method is exposed to allow testing this behavior outside of //ui/events.'
]
keyboard_layout.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Changes the active keyboard layout for the scope of this object.'
]
motion_event_test_utils.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_event_test_tick_clock.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper class to mock ui events tick clock. On construction it registers a\n' +
    ' simple test tick clock for ui events. On destruction, it clears the test\n' +
    ' clock.\n' +
    ' Example:\n' +
    '   TEST_F(SomeFixture, MyTest) {\n' +
    '        ScopedEventTestTickClock clock;\n' +
    '        clock.SetNowSeconds(1200);\n' +
    '   }'
]
scoped_event_waiter.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A test helper class that waits until a specified event target receives the\n' +
    ' target event.'
]
test_event.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_event_handler.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " A simple EventHandler that keeps track of the number of key events that it's\n" +
    ' seen.'
]
test_event_processor.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_event_rewriter.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Counts number of events observed.'
]
test_event_rewriter_continuation.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This interface exposes EventRewriterContinuation interface to\n' +
    ' test code outside of ui/events.'
]
test_event_source.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Trivial testing EventSource that does nothing but send and count events.\n' +
    ' If no sink is provided, it acts as its own sink, which also counts events.'
]
test_event_target.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_event_targeter.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An EventTargeter which is used to allow a bubbling behaviour in event\n' +
    ' dispatch: if an event is not handled after being dispatched to its\n' +
    ' |initial_target|, the event is dispatched to the next-best target as\n' +
    ' specified by FindNextBestTarget().\n' +
    ' Bubbling behaviour is controlled by |should_bubble| at creation time.'
]
x11_event_waiter.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' X11 Event Waiter class'
]
event_type.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Event types.'
]
scroll_input_type.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scroll_types.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bitset_32.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Port of BitSet32 from Android\n' +
    ' * platform/system/core/include/utils/BitSet.h\n' +
    ' * Change-Id: 02c9460a0a05f27e0501f9e64cdf24091e7d3579\n' +
    ' * Please update the Change-Id as upstream Android changes are pulled.'
]
motion_event.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Abstract class for a generic motion-related event, patterned after that\n' +
    " subset of Android's MotionEvent API used in gesture detection."
]
motion_event_generic.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A generic MotionEvent implementation.'
]
velocity_tracker.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Port of VelocityTracker from Android\n' +
    ' * platform/frameworks/native/include/input/VelocityTracker.h\n' +
    ' * Change-Id: I4983db61b53e28479fc90d9211fafff68f7f49a6\n' +
    ' * Please update the Change-Id as upstream Android changes are pulled.'
]
velocity_tracker_state.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Port of VelocityTrackerState from Android\n' +
    ' * platform/frameworks/base/core/jni/android_view_VelocityTracker.cpp\n' +
    ' * Change-Id: I3517881b87b47dcc209d80dbd0ac6b5cf29a766f\n' +
    ' * Please update the Change-Id as upstream Android changes are pulled.'
]
events_win_utils.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Utility functions for Windows specific events code.',
  ' Get the EventType from a native event.',
  ' Get the EventFlags from a native event.',
  ' Get the timestamp from a native event.\n' +
    ' Note: This is not a pure function meaning that multiple applications on the\n' +
    ' same native event may return different values.',
  ' Convert |event_time|, a count of milliseconds from the clock used by\n' +
    ' ::GetTickCount(), to a value comparable to the base::TimeTicks clock.\n' +
    ' |current_time| is a value returned in the recent past by EventTimeForNow,\n' +
    ' which will be compared to the current result of ::GetTickCount() for\n' +
    ' calibration.',
  ' Convert |event_time|, a timestamp from the clock used by\n' +
    ' ::QueryPerformanceCounter(), to a value comparable to the base::TimeTicks\n' +
    ' clock. Must not be called if base::TimeTicks::IsHighResolution() returns\n' +
    ' false.',
  ' Get the location from a native event.  The coordinate system of the resultant\n' +
    ' |Point| has the origin at top-left of the "root window".  The nature of\n' +
    ' this "root window" and how it maps to platform-specific drawing surfaces is\n' +
    ' defined in ui/aura/root_window.* and ui/aura/window_tree_host*.',
  ' Gets the location in native system coordinate space.',
  ' Returns the KeyboardCode from a native event.',
  ' Returns the DOM KeyboardEvent code (physical location in the\n' +
    ' keyboard) from a native event.',
  ' Returns true if the keyboard event is a character event rather than\n' +
    ' a keystroke event.',
  ' Returns the flags of the button that changed during a press/release.',
  ' Returns the detailed pointer information for mouse events.',
  ' Gets the mouse wheel offsets from a native event.',
  ' Returns the detailed pointer information for touch events.',
  ' Clear the touch id from bookkeeping if it is a release/cancel event.',
  ' Gets the fling velocity from a native event. is_cancel is set to true if\n' +
    ' this was a tap down, intended to stop an ongoing fling.',
  ' Returns whether this is a scroll event and optionally gets the amount to be\n' +
    ' scrolled.',
  ' Makes EventLatencyTimeFromTickClock call the given |clock| to find the\n' +
    ' current time ticks. If |clock| is nullptr, it will call ::GetTickCount(),\n' +
    ' which is the default.'
]
keyboard_hook_monitor.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides a way to receive notifications when a low-level keyboard hook is\n' +
    ' registered or unregistered and to query hook registration status.\n' +
    ' Note that the KeyboardHookMonitor impl is bound to the thread which creates\n' +
    ' it.  In the browser process, this will be the UI thread.  All methods should\n' +
    ' be called on that thread and all observer methods will be run on that thread.'
]
keyboard_hook_monitor_impl.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An implementation of the KeyboardHookMonitor interface which is used to\n' +
    ' notify listeners of KeyboardHook registration events and provide status.\n' +
    ' Note that this class is bound to the thread which creates it.  In the browser\n' +
    ' process, this will be the UI thread.  All methods should be called on that\n' +
    ' thread and all observer methods will be run on that thread.'
]
keyboard_hook_observer.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used in conjunction with the KeyboardHookMonitor class to receive\n' +
    ' notifications when a low-level keyboard hook is registered or unregistered.'
]
keyboard_hook_win_base.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Exposes a method to drive the Windows KeyboardHook implementation by feeding\n' +
    ' it key event data.  This method is used by both the low-level keyboard hook\n' +
    ' and by unit tests which simulate the hooked behavior w/o actually installing\n' +
    ' a hook (doing so would cause problems with test parallelization).'
]
system_event_state_lookup.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if the Shift key is currently pressed.',
  ' Returns true if either Control key is pressed (including due to AltGraph).',
  ' Returns true if either Alt key is currently pressed.',
  ' Returns true if the AltRight (i.e. either Alt or AltGraph) key is pressed.\n' +
    ' This is used in events_win.cc to detect the physical AltGraph key.',
  ' Returns true if the Windows key is currently pressed.',
  ' Returns true if the caps lock state is on.',
  ' Returns true if the num lock state is on.',
  ' Returns true if the scroll lock state is on.'
]
events_x_export.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
events_x_utils.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Gets the EventType from a x11::Event.',
  ' Gets the EventFlags from a x11::KeyEvent.  `send_event` indicates if the\n' +
    ' event was sent by an X11 client instead of the server.',
  ' Gets the EventFlags from a x11::Event.',
  ' Gets the timestamp from a x11::Event.',
  ' Gets the location from a x11::Event.  The coordinate system of the resultant\n' +
    ' |Point| has the origin at top-left of the "root window".  The nature of\n' +
    ' this "root window" and how it maps to platform-specific drawing surfaces is\n' +
    ' defined in ui/aura/root_window.* and ui/aura/window_tree_host*.',
  ' Gets the location in native system coordinate space.',
  " Returns the 'real' button for an event. The button reported in slave events\n" +
    ' does not take into account any remapping (e.g. using xmodmap), while the\n' +
    ' button reported in master events do. This is a utility function to always\n' +
    ' return the mapped button.',
  ' Returns the flags of the button that changed during a press/release.',
  ' Gets the mouse wheel offsets from a x11::Event.',
  ' Gets the force from a native_event. Normalized to be [0, 1]. Default is 0.0.',
  ' Gets the tilt x from a native_event. Value in degree. Default is 0.0.',
  ' Gets the tilt y from a native_event. Value in degree. Default is 0.0.',
  ' Gets the pointer details from an x11::Event.',
  ' Gets the touch id from a x11::Event.',
  ' Gets the radius along the X/Y axis from a x11::Event. Default is 1.0.',
  ' Gets the angle of the major axis away from the X axis. Default is 0.0.',
  ' Gets the force from a native_event. Normalized to be [0, 1]. Default is 0.0.',
  ' Gets the pointer details from an x11::Event.',
  ' Returns whether this is a scroll event and optionally gets the amount to be\n' +
    ' scrolled. |x_offset|, |y_offset| and |finger_count| can be NULL.',
  ' Gets the fling velocity from a x11::Event. is_cancel is set to true if\n' +
    ' this was a tap down, intended to stop an ongoing fling.',
  ' Uses the XModifierStateWatcher to determine if alt is pressed or not.',
  ' Proxies the XModifierStateWatcher::state() to return the current state of\n' +
    ' modifier keys.'
]
x11_event_translation.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Translates a XEvent into a ui::Event.',
  ' Convenience function that translates XEvent into ui::KeyEvent',
  ' Convenience function that translates XEvent into ui::MouseEvent',
  ' Convenience function that translates XEvent into ui::MouseWheelEvent',
  ' Convenience function that translates XEvent into ui::TouchEvent'
]
file_manager_export.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines FILE_MANAGER_EXPORT so that functionality implemented by the\n' +
    ' FILE_MANAGER module can be exported to consumers.'
]
achoreographer_compat.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
android_surface_control_compat.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
java_bitmap.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A Java counterpart will be generated for this enum.\n' +
    ' GENERATED_JAVA_ENUM_PACKAGE: org.chromium.ui.gfx\n' +
    ' The order and values here match AndroidBitmapFormat, as verified\n' +
    ' by static_asserts in java_bitmap.cc.',
  ' This class wraps a JNI AndroidBitmap object to make it easier to use. It\n' +
    ' handles locking and unlocking of the underlying pixels, along with wrapping\n' +
    ' various JNI methods.',
  ' Converts |skbitmap| to a Java-backed bitmap (android.graphics.Bitmap).\n' +
    ' Note: |skbitmap| is assumed to be non-null, non-empty and one of RGBA_8888 or\n' +
    ' RGB_565 formats.',
  ' Converts |bitmap| to an SkBitmap of the same size and format.\n' +
    ' Note: |jbitmap| is assumed to be non-null, non-empty and of format RGBA_8888.',
  ' Returns a Skia color type value for the requested input java Bitmap.Config.',
  ' Converts |bitmap| to an SkBitmap of the same size and format.\n' +
    ' Note: |j_bitmap| is assumed to be non-null, non-empty and of format\n' +
    ' RGBA_8888.',
  ' Converts |skbitmap| to a Java-backed bitmap (android.graphics.Bitmap).\n' +
    ' Note: return nullptr jobject if |skbitmap| is null or empty.'
]
view_configuration.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Provides access to Android's ViewConfiguration for gesture-related constants.\n" +
    ' Note: All methods may be safely called from any thread.'
]
animation.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class used in implementing animations. You only need use this class if\n' +
    " you're implementing a new animation type, otherwise you'll likely want one of\n" +
    ' LinearAnimation, SlideAnimation, ThrobAnimation or MultiAnimation.\n' +
    ' To subclass override Step, which is invoked as the animation progresses and\n' +
    ' GetCurrentValue() to return the value appropriate to the animation.'
]
animation_container.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' AnimationContainer is used by Animation to manage the underlying\n' +
    ' AnimationRunner. Internally each Animation creates a single\n' +
    ' AnimationContainer. You can group a set of Animations into the same\n' +
    ' AnimationContainer by way of Animation::SetContainer. Grouping a set of\n' +
    ' Animations into the same AnimationContainer ensures they all update and start\n' +
    ' at the same time.\n' +
    ' AnimationContainer is ref counted. Each Animation contained within the\n' +
    ' AnimationContainer own it.'
]
animation_container_element.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface for the elements the AnimationContainer contains. This is\n' +
    ' implemented by Animation.'
]
animation_container_observer.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The observer is notified after every update of the animations managed by\n' +
    ' the container.'
]
animation_delegate.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' AnimationDelegate\n' +
    '  Implement this interface when you want to receive notifications about the\n' +
    '  state of an animation.'
]
animation_delegate_notifier.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' AnimationDelegateNotifier adapts AnimationDelegate (which is used by\n' +
    ' inheritance) into an object that is used by composition. This can be useful\n' +
    ' to compose the functionality of an AnimationDelegate subclass into an object\n' +
    ' that inherits directly from AnimationDelegate.'
]
animation_export.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
animation_runner.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface for custom animation runner. CompositorAnimationRunner can control\n' +
    ' animation tick with this.'
]
animation_test_api.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Class to provide access to Animation internals for testing.',
  ' For manual animation time control in tests. Creating this object will\n' +
    ' pause the AnimationRunner of |container| immediately.'
]
animation_curve.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An animation curve is a function that returns a value given a time.',
  ' Two methods are provided for sampling curves: GetValue and\n' +
    ' GetTransformedValue. Use GetTransformedValue when a timing function is\n' +
    ' being applied to the sampled animation curve.\n' +
    ' RAW_PTR_EXCLUSION: #macro'
]
keyframe_animation_export.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyframe_effect.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is a simplified version of cc::KeyframeEffect. Its sole purpose is the\n' +
    ' management of its collection of KeyframeModels. Ticking them, updating their\n' +
    ' state, and deleting them as required.\n' +
    ' For background on the name of this class, please refer to the WebAnimations\n' +
    ' spec: https://www.w3.org/TR/web-animations-1/#the-keyframeeffect-interface\n' +
    ' TODO(crbug.com/40531111): Make cc::KeyframeEffect a subclass of\n' +
    ' KeyframeEffect and share common code.'
]
keyframe_model.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyframed_animation_curve-inl.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyframed_animation_curve.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
target_property.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A set of target properties.'
]
animation_utils.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
timing_function.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' See http://www.w3.org/TR/css3-transitions/.'
]
transition.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
linear_animation.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Linear time bounded animation. As the animation progresses AnimateToState is\n' +
    ' invoked.'
]
multi_animation.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' MultiAnimation is an animation that consists of a number of sub animations.\n' +
    ' To create a MultiAnimation pass in the parts, invoke Start() and the delegate\n' +
    ' is notified as the animation progresses. By default MultiAnimation runs until\n' +
    ' Stop is invoked, see |set_continuous()| for details.'
]
slide_animation.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Slide Animation\n' +
    ' Used for reversible animations and as a general helper class. Typical usage:\n' +
    ' #include "ui/gfx/animation/slide_animation.h"\n' +
    ' class MyClass : public AnimationDelegate {\n' +
    '  public:\n' +
    '   MyClass() {\n' +
    '     animation_.SetSlideDuration(base::Milliseconds(500));\n' +
    '   }\n' +
    '   void OnMouseEntered(const ui::MouseEvent& event) {\n' +
    '     animation_.Show();\n' +
    '   }\n' +
    '   void OnMouseExited(const ui::MouseEvent& event) {\n' +
    '     animation_.Hide();\n' +
    '   }\n' +
    '   void AnimationProgressed(const Animation* animation) {\n' +
    '     CHECK_EQ(animation, &animation_);\n' +
    '     hover_image_.SetOpacity(animation_.GetCurrentValue());\n' +
    '   }\n' +
    '  private:\n' +
    '   SlideAnimation animation_{this};\n' +
    ' }'
]
test_animation_delegate.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Trivial AnimationDelegate implementation. AnimationEnded/Canceled quit the\n' +
    ' message loop.'
]
throb_animation.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A subclass of SlideAnimation that can continually slide. All of the Animation\n' +
    ' methods behave like that of SlideAnimation: transition to the next state.\n' +
    ' The StartThrobbing method causes the ThrobAnimation to cycle between hidden\n' +
    ' and shown for a set number of cycles.\n' +
    ' A ThrobAnimation has two durations: the duration used when behavior like\n' +
    ' a SlideAnimation, and the duration used when throbbing.'
]
tween.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bidi_line_iterator.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A simple wrapper class for the bidirectional iterator of ICU.\n' +
    ' This class uses the bidirectional iterator of ICU to split a line of\n' +
    ' bidirectional texts into visual runs in its display order.'
]
blit.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Scrolls the given subset of the given canvas by the given offset.\n' +
    ' The canvas should not have a clip or a transform applied, since platforms\n' +
    ' may implement those operations differently.'
]
break_list.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' BreakLists manage ordered, non-overlapping, and non-repeating ranged values.\n' +
    ' These may be used to apply ranged colors and styles to text, for an example.\n' +
    ' Each break stores the start position and value of its associated range.\n' +
    ' A solitary break at position 0 applies to the entire space [0, max_).\n' +
    ' |max_| is initially 0 and should be set to match the available ranged space.\n' +
    ' The first break always has position 0, to ensure all positions have a value.\n' +
    ' The value of the terminal break applies to the range [break.first, max_).\n' +
    ' The value of other breaks apply to the range [break.first, (break+1).first).'
]
buffer_format_util.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a span containing all buffer formats.',
  ' Returns the number of bits of alpha for the specified format.',
  ' Returns the number of planes for |format|.',
  ' Returns whether |format| is multiplanar.',
  ' Returns the subsampling factor applied to the given zero-indexed |plane| of\n' +
    ' |format| both horizontally and vertically.',
  ' Returns the alignment requirement to store a row of the given zero-indexed\n' +
    ' |plane| of |format|.',
  ' Returns the number of bytes used to store a row of the given zero-indexed\n' +
    ' |plane| of |format|.',
  ' Returns the number of bytes used to the plane of a given |format|.',
  ' Returns the number of bytes used to store all the planes of a given |format|.',
  ' Returns the name of |format| as a string.',
  ' Multiplanar buffer formats (e.g, YUV_420_BIPLANAR, YVU_420, P010) can be\n' +
    ' tricky when the size of the primary plane is odd, because the subsampled\n' +
    " planes will have a size that is not a divisor of the primary plane's size.\n" +
    ' This indicates that odd height multiplanar formats are supported.',
  ' Converts a gfx::BufferFormat to its corresponding VkFormat.'
]
buffer_types.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The format needs to be taken into account when mapping a buffer into the\n' +
    " client's address space.",
  ' The usage mode affects how a buffer can be used. Only buffers created with\n' +
    " *_CPU_READ_WRITE_* can be mapped into the client's address space and accessed\n" +
    ' by the CPU.\n' +
    ' *_VDA_WRITE is for cases where a video decode accelerator writes into the\n' +
    ' buffers.\n' +
    ' PROTECTED_* are for HW protected buffers that cannot be read by the CPU and\n' +
    ' can only be read in protected GPU contexts or scanned out to overlays.\n' +
    " At present, SCANOUT implies GPU_READ_WRITE. This doesn't apply to other\n" +
    ' SCANOUT_* values.',
  ' TODO(reveman): Add GPU_READ_WRITE for use-cases where SCANOUT is not\n' +
    ' required.',
  ' Used to identify the plane of a GpuMemoryBuffer to use when creating a\n' +
    ' SharedImage.'
]
buffer_usage_util.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the name of |usage| as a string.'
]
ca_layer_params.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The parameters required to add a composited frame to a CALayer. This\n' +
    ' is used only on macOS.'
]
ca_layer_result.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is the result of ProcessForCALayerOverlays() and is for macOS only.\n' +
    ' This enum is used for histogram states and should only have new values added\n' +
    ' to the end before COUNT. tools/metrics/histograms/enums.xml should be updated\n' +
    ' together.\n' +
    ' All changes made to enum CALayerResult should be added to\n' +
    ' ui/gfx/mojom/ca_layer_result.mojom.'
]
canvas.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Canvas is a PaintCanvas wrapper that provides a number of methods for\n' +
    ' common operations used throughout an application built using ui/gfx.\n' +
    ' All methods that take integer arguments (as is used throughout views)\n' +
    " end with Int. If you need to use methods provided by PaintCanvas, you'll\n" +
    " need to do a conversion. In particular you'll need to use |SkIntToScalar()|,\n" +
    ' or if converting from a scalar to an integer |SkScalarRound()|.\n' +
    ' A handful of methods in this class are overloaded providing an additional\n' +
    ' argument of type SkBlendMode. SkBlendMode specifies how the\n' +
    ' source and destination colors are combined. Unless otherwise specified,\n' +
    ' the variant that does not take a SkBlendMode uses a transfer mode\n' +
    ' of kSrcOver_Mode.'
]
client_native_pixmap.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This represents a buffer that can be written to directly by regular CPU code,\n' +
    ' but can also be read by the GPU.\n' +
    ' NativePixmap is its counterpart in GPU process.'
]
client_native_pixmap_factory.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The Ozone interface allows external implementations to hook into Chromium to\n' +
    ' provide a client pixmap for non-GPU processes (though ClientNativePixmap\n' +
    ' instances created using this interface can be used in the GPU process).'
]
codec_export.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
jpeg_codec.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface for encoding/decoding JPEG data. This is a wrapper around Skia\n' +
    ' image codecs, with a simpler interface for callers. This is only used for UI\n' +
    ' elements; Blink has its own more complicated JPEG decoder which handles,\n' +
    ' among other things, partially downloaded data.'
]
png_codec.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface for encoding and decoding PNG data. This is a wrapper around\n' +
    ' libpng, which has an inconvenient interface for callers. This is currently\n' +
    ' designed for use in tests only (where we control the files), so the handling\n' +
    " isn't as robust as would be required for a browser (see Decode() for more).\n" +
    ' WebKit has its own more complicated PNG decoder which handles, among other\n' +
    ' things, partially downloaded data.'
]
vector_wstream.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
webp_codec.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface for encoding WebP data. This is currently only used\n' +
    ' in the devtools protocol to encode screenshots, so currently only minimally\n' +
    ' supports lossy encoding.'
]
color_analysis.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class exposes the sampling method to the caller, which allows\n' +
    ' stubbing out for things like unit tests. Might be useful to pass more\n' +
    ' arguments into the GetSample method in the future (such as which\n' +
    ' cluster is being worked on, etc.).\n' +
    ' Note: Samplers should be deterministic, as the same image may be analyzed\n' +
    ' twice with two sampler instances and the results displayed side-by-side\n' +
    ' to the user.',
  ' This sampler will pick pixels from an evenly spaced grid.',
  ' Returns the color in an ARGB |image| that is closest in RGB-space to the\n' +
    ' provided |color|. Exported for testing.',
  ' Returns an SkColor that represents the calculated dominant color in the\n' +
    ' image. This uses a KMean clustering algorithm to find clusters of pixel\n' +
    ' colors in RGB space.\n' +
    ' |png|/|bitmap| represents the data of a png/bitmap encoded image.\n' +
    ' |lower_bound| represents the minimum bound of HSL values to allow.\n' +
    ' |upper_bound| represents the maximum bound of HSL values to allow.\n' +
    ' See color_utils::IsWithinHSLRange() for description of these bounds.\n' +
    ' RGB KMean Algorithm (N clusters, M iterations):\n' +
    ' 1.Pick N starting colors by randomly sampling the pixels. If you see a\n' +
    '   color you already saw keep sampling. After a certain number of tries\n' +
    '   just remove the cluster and continue with N = N-1 clusters (for an image\n' +
    '   with just one color this should devolve to N=1). These colors are the\n' +
    '   centers of your N clusters.\n' +
    ' 2.For each pixel in the image find the cluster that it is closest to in RGB\n' +
    "   space. Add that pixel's color to that cluster (we keep a sum and a count\n" +
    '   of all of the pixels added to the space, so just add it to the sum and\n' +
    '   increment count).\n' +
    ' 3.Calculate the new cluster centroids by getting the average color of all of\n' +
    '   the pixels in each cluster (dividing the sum by the count).\n' +
    ' 4.See if the new centroids are the same as the old centroids.\n' +
    '     a) If this is the case for all N clusters than we have converged and\n' +
    '        can move on.\n' +
    '     b) If any centroid moved, repeat step 2 with the new centroids for up\n' +
    '        to M iterations.\n' +
    ' 5.Once the clusters have converged or M iterations have been tried, sort\n' +
    '   the clusters by weight (where weight is the number of pixels that make up\n' +
    '   this cluster).\n' +
    ' 6.Going through the sorted list of clusters, pick the first cluster with the\n' +
    "   largest weight that's centroid falls between |lower_bound| and\n" +
    '   |upper_bound|. Return that color.\n' +
    '   If no color fulfills that requirement return the color with the largest\n' +
    '   weight regardless of whether or not it fulfills the equation above.',
  ' Computes a dominant color using the above algorithm and reasonable defaults\n' +
    ' for |lower_bound|, |upper_bound| and |sampler|.',
  ' Computes a dominant color for the first |height| rows of |bitmap| using the\n' +
    ' above algorithm and a reasonable default sampler. If |find_closest| is true,\n' +
    ' the returned color will be the closest color to the true K-mean color that\n' +
    ' actually appears in the image; if false, the true color is returned\n' +
    ' regardless of whether it actually appears.',
  ' Computes a dominant color using the above algorithm and reasonable defaults\n' +
    ' for |lower_bound|, |upper_bound| and |sampler|.',
  ' These enums specify general values to look for when calculating prominent\n' +
    ' colors from an image. For example, a "light vibrant" prominent color would\n' +
    ' tend to be brighter and more saturated. The best combination of color\n' +
    ' attributes depends on how you plan to apply the color.',
  ' A color value with an associated weight.',
  ' Used to filter colors from swatches. Called with the candidate color and will\n' +
    ' return true if the color should be allowed.',
  ' The maximum number of pixels to consider when generating swatches.',
  ' Returns a vector of |Swatch| that represent the prominent colors of the\n' +
    ' bitmap within |region|. The |max_swatches| is the maximum number of swatches.\n' +
    ' For landscapes, good values are in the range 12-16. For images which are\n' +
    " largely made up of people's faces then this value should be increased to\n" +
    ' 24-32. |filter| is an optional filter that can filter out unwanted colors.\n' +
    ' This is an implementation of the Android Palette API:\n' +
    ' https://developer.android.com/reference/android/support/v7/graphics/Palette',
  ' Returns a vector of RGB colors that represents the bitmap based on the\n' +
    ' |color_profiles| provided. For each value, if a value is succesfully\n' +
    ' calculated, the calculated value is fully opaque. For failure, the calculated\n' +
    ' value is transparent. |region| can be provided to select a specific area of\n' +
    ' the bitmap. |filter| is an optional filter that can filter out unwanted\n' +
    ' colors. If |filter| is not provided then we will filter out uninteresting\n' +
    ' colors.'
]
color_conversion_sk_filter_cache.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_conversions.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' All the methods below are exposed for blink::color conversions.'
]
color_palette.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A placeholder value for unset colors. This should never be visible and is red\n' +
    ' as a visual flag for misbehaving code.',
  ' The number refers to the shade of darkness. Each color in the MD\n' +
    ' palette ranges from 050-900.',
  ' The following are the values that correspond to the above kGoogleGreyXXX\n' +
    ' values, which are the opaque colors created from the following alpha values\n' +
    ' applied to kGoogleGrey900 on a white background.\n' +
    ' These values are from the palette of greys specified in the Material Refresh\n' +
    ' spec.',
  " An alpha value for designating a control's disabled state. In specs this is\n" +
    ' sometimes listed as 0.38a.'
]
color_space.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These forward declarations are used to give IPC code friend access to private\n' +
    ' fields of gfx::ColorSpace for the purpose of serialization and\n' +
    ' deserialization.',
  ' Used to serialize a gfx::ColorSpace through the GPU command buffer.',
  ' Used to represent a color space for the purpose of color conversion.\n' +
    ' This is designed to be safe and compact enough to send over IPC\n' +
    ' between any processes.',
  ' Stream operator so ColorSpace can be used in assertion statements.'
]
color_space_export.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_space_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Must be included after d3d headers, use #if to avoid lint errors.'
]
color_transform.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_utils.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents an HSL color.',
  ' The blend alpha and resulting color when blending to achieve a desired\n' +
    ' contrast raio.',
  ' The maximum contrast that can be achieved (i.e. white against black).',
  ' The minimum contrast between text and background that is still readable.\n' +
    ' This value is taken from w3c accessibility guidelines.',
  ' The minimum contrast between button glyphs, focus indicators, large text, or\n' +
    ` other "have to see it but perhaps don't have to read fine detail" cases and\n` +
    ' background.',
  ' Determines the contrast ratio of two colors or two relative luminance values\n' +
    ' (as computed by RelativeLuminance()), calculated according to\n' +
    ' http://www.w3.org/TR/WCAG20/#contrast-ratiodef .',
  ' The relative luminance of |color|, that is, the weighted sum of the\n' +
    ' linearized RGB components, normalized to 0..1, per BT.709.  See\n' +
    ' http://www.w3.org/TR/WCAG20/#relativeluminancedef .',
  " The luma of |color|, that is, the weighted sum of the gamma-compressed R'G'B'\n" +
    " components, per BT.601, a.k.a. the Y' in Y'UV.  See\n" +
    ' https://en.wikipedia.org/wiki/Luma_(video).',
  ' Note: these transformations assume sRGB as the source color space',
  ' Determines whether the given |hsl| falls within the given range for each\n' +
    ' component. All components of |hsl| are expected to be in the range [0, 1].\n' +
    ' If a component is negative in either |lower_bound| or |upper_bound|, that\n' +
    ' component will be ignored.\n' +
    ' For hue, the lower bound should be in the range [0, 1] and the upper bound\n' +
    ' should be in the range [(lower bound), (lower bound + 1)].\n' +
    ' For saturation and value, bounds should be specified in the range [0, 1],\n' +
    ' with the lower bound less than the upper bound.',
  ' Makes |hsl| valid input for HSLShift(). Sets values of hue, saturation\n' +
    ' and lightness which are outside of the valid range [0, 1] to -1.  -1 is a\n' +
    " special value which indicates 'no change'.",
  ' Returns whether pasing |hsl| to HSLShift() would have any effect.  Assumes\n' +
    ' |hsl| is a valid shift (as defined by MakeHSLShiftValid()).',
  ' HSL-Shift an SkColor. The shift values are in the range of 0-1, with the\n' +
    " option to specify -1 for 'no change'. The shift values are defined as:\n" +
    ' hsl_shift[0] (hue): The absolute hue value - 0 and 1 map\n' +
    '    to 0 and 360 on the hue color wheel (red).\n' +
    ' hsl_shift[1] (saturation): A saturation shift, with the\n' +
    '    following key values:\n' +
    '    0 = remove all color.\n' +
    '    0.5 = leave unchanged.\n' +
    '    1 = fully saturate the image.\n' +
    ' hsl_shift[2] (lightness): A lightness shift, with the\n' +
    '    following key values:\n' +
    '    0 = remove all lightness (make all pixels black).\n' +
    '    0.5 = leave unchanged.\n' +
    '    1 = full lightness (make all pixels white).',
  ' Returns a blend of the supplied colors, ranging from |background| (for\n' +
    ' |alpha| == 0) to |foreground| (for |alpha| == 255). The alpha channels of\n' +
    ' the supplied colors are also taken into account, so the returned color may\n' +
    ' be partially transparent.',
  ' As above, but with alpha specified as 0..1.',
  ' Returns the color that results from painting |foreground| on top of\n' +
    ' |background|.',
  ' Returns true if |color| contrasts more with white than the darkest color.',
  ' Returns whichever of white or the darkest available color contrasts more with\n' +
    ' |color|.',
  ' Returns whichever of white or the darkest available color contrasts less with\n' +
    ' |color|.',
  ' Blends towards the color with max contrast by |alpha|. The alpha of\n' +
    ' the original color is preserved.',
  ' Returns whichever of |foreground1| or |foreground2| has higher contrast with\n' +
    ' |background|.',
  ' Alpha-blends |default_foreground| toward either |high_contrast_foreground|\n' +
    ' (if specified) or the color with max contrast with |background| until either\n' +
    ' the result has a contrast ratio against |background| of at least\n' +
    ' |contrast_ratio| or the blend can go no further.  Returns the blended color\n' +
    ' and the alpha used to achieve that blend.  If |default_foreground| already\n' +
    ' has sufficient contrast, returns an alpha of 0 and color of\n' +
    ' |default_foreground|.',
  ' Invert a color.',
  ' Gets a Windows system color as a SkColor',
  ' Derives a color for icons on a UI surface based on the text color on the same\n' +
    ' surface.',
  ' Gets a Google color with a similar hue to `color` and a similar contrast\n' +
    ' against `background_color`, subject to being at least `min_contrast` and at\n' +
    " most `max_contrast`. If `color` isn't very saturated, grey will be used\n" +
    ' instead.\n' +
    ' Each of the following constraints takes precedence over the ones below it.\n' +
    '   1. Ensure `min_contrast`, if possible, lest the UI become unreadable. If\n' +
    '      there are no sufficiently-contrasting colors of the desired hue, falls\n' +
    '      back to white/grey 900.\n' +
    '   2. Avoid returning a lighter color than the background if the input was\n' +
    '      darker, and vice versa. Inverting the relationship between `color` and\n' +
    '      `background_color` could look odd.\n' +
    '   3. Ensure `max_contrast`, if possible, lest some UI elements stick out too\n' +
    '      much.\n' +
    '   4. Adjust the relative luminance of the returned color as little as\n' +
    '      possible, to minimize distortion of the intended color.\n' +
    ' Other than prioritizing (1), this order is subjective.',
  ' Like the version above, but the constraints are modified:\n' +
    '   1. Ensure `min_contrast`, if possible, with both backgrounds\n' +
    '      simultaneously.\n' +
    "   2. If the input is lighter than both backgrounds, make it lighter; if it's\n" +
    "      darker than both, make it darker; if it's between the two, keep it\n" +
    '      between.\n' +
    '   3. Ensure `max_contrast_with_nearer` against the lower-contrast ("nearer")\n' +
    '      background.\n' +
    '   4. Unchanged.',
  " Creates an rgba string for an SkColor. For example: 'rgba(255,0,255,0.5)'.",
  " Creates an rgb string for an SkColor. For example: '255,0,255'.",
  ' Sets the darkest available color to |color|.  Returns the previous darkest\n' +
    ' color.',
  ' Returns the luminance of the darkest, midpoint, and lightest colors.'
]
decorated_text.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Encapsulates styling information for some given text.'
]
decorated_text_mac.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a NSAttributedString from |decorated_text|.'
]
delegated_ink_metadata.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Maximum number of points that can be drawn. This is used to limit the total\n' +
    ' number of ink trail tokens that we will store, and the total number of points\n' +
    ' that we will store to provide to the Direct Composition APIs. It should match\n' +
    ' the exact number of points that the OS Compositor will store to draw as part\n' +
    ' of a trail.',
  ' This class stores all the metadata that is gathered when the WebAPI\n' +
    ' updateInkTrailStartPoint is called. This metadata flows from blink,\n' +
    ' through cc, and into viz in order to produce a delegated ink trail on the\n' +
    ' end of what was already rendered.\n' +
    ' Explainer for the feature:\n' +
    ' https://github.com/WICG/ink-enhancement/blob/main/README.md'
]
delegated_ink_point.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class stores the information required to draw a single point of a\n' +
    ' delegated ink trail. When the WebAPI |updateInkTrailStartPoint| is called,\n' +
    ' the renderer requests that the browser begin sending these to viz. Viz\n' +
    ' will collect them, and then during |DrawAndSwap| will use the\n' +
    ' DelegatedInkPoints that have arrived from the browser along with the\n' +
    ' DelegatedInkMetadata that the renderer sent to draw a delegated ink trail on\n' +
    ' the screen, connected to the end of the already rendered ink stroke.\n' +
    ' Explainer for the feature:\n' +
    ' https://github.com/WICG/ink-enhancement/blob/main/README.md'
]
display_color_spaces.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The values are set so std::max() can be used to find the widest.',
  ' This structure is used by a display::Display to specify the color space that\n' +
    ' should be used to display content of various types. This lives in here, as\n' +
    ' opposed to in ui/display because it is used directly by components/viz.'
]
extension_set.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
favicon_size.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Size (along each axis) of the favicon.',
  ' If the width or height is bigger than the favicon size, a new width/height\n' +
    ' is calculated and returned in width/height that maintains the aspect\n' +
    ' ratio of the supplied values.'
]
font.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Font provides a wrapper around an underlying font. Copy and assignment\n' +
    ' operators are explicitly allowed, and cheap.\n' +
    ' Figure of font metrics:\n' +
    '   +--------+-------------------+------------------+\n' +
    '   |        |                   | internal leading |\n' +
    '   |        | ascent (baseline) +------------------+\n' +
    '   | height |                   | cap height       |\n' +
    '   |        |-------------------+------------------+\n' +
    '   |        | descent (height - baseline)          |\n' +
    '   +--------+--------------------------------------+',
  ' Returns the Font::Weight that matches |weight| or the next bigger one.'
]
font_fallback.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Given a font, returns the fonts that are suitable for fallback.',
  ' Finds a fallback font to render the specified |text| with respect to an\n' +
    ' initial |font|. Returns the resulting font via out param |result|. Returns\n' +
    ' |true| if a fallback font was found.'
]
font_fallback_linux.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Exposed fallback font caches methods for testing.',
  ' Return a font family which provides a glyph for the Unicode code point\n' +
    ' specified by character.\n' +
    '   c: an UTF-32 code point\n' +
    '   preferred_locale: preferred locale identifier for |c|\n' +
    '                     (e.g. "en", "ja", "zh-CN")\n' +
    ' Return whether the request was successful or not.'
]
font_fallback_skia_impl.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
font_fallback_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Internals of font_fallback_win.cc exposed for testing.',
  ' Parses comma separated SystemLink |entry|, per the format described here:\n' +
    ' http://msdn.microsoft.com/en-us/goglobal/bb688134.aspx\n' +
    ' Sets |filename| and |font_name| respectively. If a field is not present\n' +
    ' or could not be parsed, the corresponding parameter will be cleared.',
  ' Parses a font |family| in the format "FamilyFoo & FamilyBar (TrueType)".\n' +
    " Splits by '&' and strips off the trailing parenthesized expression."
]
font_list.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' FontList represents a list of fonts and provides metrics which are common\n' +
    ' across the fonts.  FontList is copyable and quite cheap to copy.\n' +
    ' The format of font description strings is a subset of that used by Pango, as\n' +
    ' described at\n' +
    ' http://developer.gnome.org/pango/stable/pango-Fonts.html#pango-font-description-from-string\n' +
    ' Pango font description strings should not be passed directly into FontLists.\n' +
    ' The format is "<FONT_FAMILY_LIST>,[STYLES] <SIZE>", where:\n' +
    ' - FONT_FAMILY_LIST is a comma-separated list of font family names,\n' +
    ' - STYLES is an optional space-separated list of style names (case-sensitive\n' +
    '   "Italic" "Ultra-Light" "Light" "Normal" "Semi-Bold" "Bold" "Ultra-Bold"\n' +
    '   "Heavy" are supported), and\n' +
    ' - SIZE is an integer font size in pixels with the suffix "px"\n' +
    ' Here are examples of valid font description strings:\n' +
    ' - "Arial, Helvetica, Italic Semi-Bold 14px"\n' +
    ' - "Arial, 14px"'
]
font_list_impl.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' FontListImpl is designed to provide the implementation of FontList and\n' +
    ' intended to be used only from FontList.  You must not use this class\n' +
    ' directly.\n' +
    ' FontListImpl represents a list of fonts either in the form of Font vector or\n' +
    ' in the form of a string representing font names, styles, and size.\n' +
    ' FontListImpl could be initialized either way without conversion to the other\n' +
    ' form. The conversion to the other form is done only when asked to get the\n' +
    ' other form.\n' +
    ' For the format of font description string, see font_list.h for details.'
]
font_names_testing.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  'Reference for fonts available on Android:\n' +
    'Jelly Bean:\n' +
    '  https://android.googlesource.com/platform/frameworks/base/+/jb-release/data/fonts/system_fonts.xml\n' +
    'KitKat:\n' +
    '  https://android.googlesource.com/platform/frameworks/base/+/kitkat-release/data/fonts/system_fonts.xml\n' +
    'master:\n' +
    '  https://android.googlesource.com/platform/frameworks/base/+/master/data/fonts/fonts.xml\n' +
    'Note that we have to support the full range from JellyBean to the latest\n' +
    'dessert.'
]
font_render_params.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A collection of parameters describing how text should be rendered on Linux.',
  ' A query used to determine the appropriate FontRenderParams.',
  ' Returns the appropriate parameters for rendering the font described by\n' +
    ' |query|. If |family_out| is non-NULL, it will be updated to contain the\n' +
    ' recommended font family from |query.families|.',
  " Clears GetFontRenderParams()'s cache. Intended to be called by tests that are\n" +
    " changing Fontconfig's configuration.",
  ' Gets the device scale factor to query the FontRenderParams.',
  ' Sets the device scale factor for FontRenderParams to decide\n' +
    ' if it should enable subpixel positioning.'
]
font_render_params_linux.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Queries Fontconfig for rendering settings and updates |params_out| and\n' +
    ' |family_out| (if non-nullptr). Returns false on failure.'
]
font_util.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Initialize the library fonts.'
]
font_util_win.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
frame_data.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Contains per frame data, and is passed along with SwapBuffer, PostSubbuffer,\n' +
    ' CommitOverlayPlanes type methods.'
]
gdi_util.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Creates a BITMAPV4HEADER structure given the bitmap's size.  You probably\n" +
    ' only need to use BMP V4 if you need transparency (alpha channel). This\n' +
    ' function sets the AlphaMask to 0xff000000, meaning this header is for a\n' +
    ' 32-bits-per-pixel ARGB8888 bitmap.',
  ' Calculate scale to fit an entire page on DC.',
  ' Apply scaling to the DC.'
]
generic_shared_memory_id.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines an ID type which is used across all types of shared memory\n' +
    ' allocations in content/. This ID type is in ui/gfx, as components outside\n' +
    ' content/ may need to hold an ID (but should not generate one).',
  ' Generates GUID which can be used to trace shared memory using its\n' +
    ' GenericSharedMemoryId.'
]
axis_transform2d.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class implements the subset of 2D linear transforms that only\n' +
    ' translation and uniform scaling are allowed.\n' +
    ' Internally this is stored as a vector for pre-scale, and another vector\n' +
    ' for post-translation. The class constructor and member accessor follows\n' +
    ' the same convention, but a scalar scale factor is also accepted.\n' +
    ' Results of the *Map* methods are clamped with ClampFloatGeometry().\n' +
    ' See the definition of the function for details.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
box_f.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A 3d version of gfx::RectF, with the positive z-axis pointed towards\n' +
    ' the camera.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
clamp_float_geometry.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Clamps |value| (float, double or long double) within the range of\n' +
    ' [numeric_limits<float>::lowest() / 1e6, numeric_limits<float::max() / 1e6f].\n' +
    ' Returns 0 for NaN. This avoids NaN and infinity values immediately, and\n' +
    ' reduce the chance of producing NaN and infinity values for future unclamped\n' +
    ' operations like offsetting and scaling by devices / page scale factor.'
]
cubic_bezier.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
decomposed_transform.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Contains the components of a factored transform. These components may be\n' +
    ' blended and recomposed.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
dip_util.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file contains helper functions to move between DIPs (device-independent\n' +
    ' pixels) and physical pixels, by multiplying or dividing by device scale\n' +
    ' factor. These help show the intent of the caller by naming the operation,\n' +
    ' instead of directly performing a scale operation. More complicated\n' +
    ' transformations between coordinate spaces than DIP<->physical pixels should\n' +
    ' be done via more explicit means.\n' +
    ' Note that functions that receive integer values will convert them to floating\n' +
    ' point values, which can itself be a lossy operation for large integers. The\n' +
    ' intention of these methods is to be used for UI values which are relatively\n' +
    ' small.'
]
double4.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' This header defines Double4 type for vectorized SIMD operations used in\n' +
    ' optimized transformation code. The type should be only used for local\n' +
    " variables, or inline function parameters or return values. Don't use the\n" +
    ' type in other cases (e.g. for class data members) due to constraints\n' +
    ' (e.g. alignment).\n' +
    ' Here are some examples of usages:\n' +
    '   double matrix[4][4] = ...;\n' +
    '   // The scalar value will be applied to all components.\n' +
    '   Double4 c0 = Load(matrix[0]) + 5;\n' +
    '   Double4 c1 = Load(matrix[1]) * Double4{1, 2, 3, 4};\n' +
    '   Double4 v = c0 * c1;\n' +
    '   // s0/s1/s2/s3 are preferred to x/y/z/w for consistency.\n' +
    '   double a = v.s0 + Sum(c1);\n' +
    '   // v.s3210 is equivalent to {v.s3, v.s2, v.s1, v.s0}.\n' +
    '   // Should use this form instead of __builtin_shufflevector() etc.\n' +
    '   Double4 swapped = {v[3], v[2], v[1], v[0]};\n' +
    '   // Logical operations.\n' +
    '   bool b1 = AllTrue(swapped == c0);\n' +
    '   // & is preferred to && to reduce branches.\n' +
    '   bool b2 = AllTrue((c0 == c1) & (c0 == v) & (c0 >= swapped));\n' +
    '   Store(swapped, matrix_[2]);\n' +
    '   Store(v, matrix_[3]);\n' +
    ' We use the gcc extension (supported by clang) instead of the clang extension\n' +
    ' to make sure the code can compile with either gcc or clang.\n' +
    ' For more details, see\n' +
    '   https://gcc.gnu.org/onlinedocs/gcc/Vector-Extensions.html',
  ' The parameter should be the result of Double4/Float4 operations that would\n' +
    ' produce bool results if they were original scalar operators, e.g.\n' +
    '   auto b4 = double4_a == double4_b;\n' +
    ' A zero value of a component of |b4| means false, otherwise true.\n' +
    ' This function checks whether all 4 components in |b4| are true.\n' +
    ' |&| instead of |&&| is used to avoid branches, which results shorter and\n' +
    " faster code in most cases. It's used like:\n" +
    '   if (AllTrue(double4_a == double4_b))\n' +
    '     ...\n' +
    '   if (AllTrue((double4_a1 == double4_b1) & (double4_a2 == double4_b2)))\n' +
    '     ...'
]
geometry_export.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
geometry_skia_export.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
insets.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This can be used to represent a space within a rectangle, by "shrinking" the\n' +
    ' rectangle by the inset amount on all four sides. Alternatively, it can\n' +
    ' represent a border that has a different thickness on each side.',
  ' Helper methods to scale a gfx::Insets to a new gfx::Insets.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
insets_conversions.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns an Insets with each component from the input InsetsF floored.',
  ' Returns an Insets with each component from the input InsetsF ceiled.',
  ' Returns a Point with each component from the input PointF rounded.'
]
insets_f.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A floating point version of gfx::Insets.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
insets_outsets_base.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The common base template class for Insets and Outsets.\n' +
    ' Represents the widths of the four borders or margins of an unspecified\n' +
    ' rectangle. It stores the thickness of the top, left, bottom and right\n' +
    ' edges, without storing the actual size and position of the rectangle itself.'
]
insets_outsets_f_base.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is the base template class of InsetsF and OutsetsF.'
]
linear_gradient.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class that defines a linear gradient mask.\n' +
    ' Up to 6 steps are supported.\n' +
    ' ex. Horizontal linear gradient that starts in the middle.\n' +
    ' LinearGradient gradient(0);\n' +
    ' gradient.AddStep(20, 0);\n' +
    ' gradient.AddStep(30, 255);\n' +
    ' gradient.AddStep(70, 255);\n' +
    ' gradient.AddStep(80, 0);'
]
mask_filter_info.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class defines a mask filter to be applied to the given rect.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
matrix3_f.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' Matrix addition. Produces a new matrix by adding the corresponding elements\n' +
    ' together.',
  ' Matrix subtraction. Produces a new matrix by subtracting elements of rhs\n' +
    ' from corresponding elements of lhs.'
]
matrix44.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  " This is the underlying data structure of Transform. Don't use this type\n" +
    ' directly.\n' +
    ' Throughout this class, we will be speaking in column vector convention.\n' +
    ' i.e. Applying a transform T to vector V is T * V.\n' +
    ' The components of the matrix and the vector look like:\n' +
    '    \\  col\n' +
    ' r   \\     0        1        2        3\n' +
    ' o  0 | scale_x  skew_xy  skew_xz  trans_x |   | x |\n' +
    ' w  1 | skew_yx  scale_y  skew_yz  trans_y | * | y |\n' +
    '    2 | skew_zx  skew_zy  scale_z  trans_z |   | z |\n' +
    '    3 | persp_x  persp_y  persp_z  persp_w |   | w |\n' +
    " Note that the names are just for remembering and don't have the exact\n" +
    ' meanings when other components exist.\n' +
    ' The components correspond to the DOMMatrix mij (i,j = 1..4) components:\n' +
    '   i = col + 1\n' +
    '   j = row + 1'
]
geometry_mojom_traits.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
outsets.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This can be used to represent a space surrounding a rectangle, by\n' +
    ' "expanding" the rectangle by the outset amount on all four sides.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
outsets_f.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A floating point version of gfx::Outsets.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
point.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A point has an x and y coordinate.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.',
  ' Helper methods to scale a gfx::Point to a new gfx::Point.'
]
point3_f.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A point has an x, y and z coordinate.',
  ' Add a vector to a point, producing a new point offset by the vector.',
  " Subtract a vector from a point, producing a new point offset by the vector's\n" +
    ' inverse.',
  ' Subtract one point from another, producing a vector that represents the\n' +
    ' distances between the two points along each axis.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
point_conversions.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a Point with each component from the input PointF floored.',
  ' Returns a Point with each component from the input PointF ceiled.',
  ' Returns a Point with each component from the input PointF rounded.'
]
point_f.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A floating version of gfx::Point.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
quad_f.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A Quad is defined by four corners, allowing it to have edges that are not\n' +
    ' axis-aligned, unlike a Rect.',
  ' Add a vector to a quad, offseting each point in the quad by the vector.',
  ' Subtract a vector from a quad, offseting each point in the quad by the\n' +
    ' inverse of the vector.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
quaternion.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' |s| is an arbitrary, real constant.',
  ' |s| is an arbitrary, real constant.',
  ' |s| is an arbitrary, real constant.',
  ' Returns true if the x, y, z, w values of |lhs| and |rhs| are equal. Note that\n' +
    ' two quaternions can represent the same orientation with different values.\n' +
    ' This operator will return false in that scenario.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
rect.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines a simple integer rectangle class.  The containment semantics\n' +
    ' are array-like; that is, the coordinate (x, y) is considered to be\n' +
    ' contained by the rectangle, but the coordinate (x + width, y) is not.\n' +
    ' The class will happily let you create malformed rectangles (that is,\n' +
    ' rectangles with negative width and/or height), but there will be assertions\n' +
    ' in the operations (such as Contains()) to complain in this case.',
  ' Constructs a rectangle with |p1| and |p2| as opposite corners.\n' +
    ' This could also be thought of as "the smallest rect that contains both\n' +
    ' points", except that we consider points on the right/bottom edges of the\n' +
    ' rect to be outside the rect.  So technically one or both points will not be\n' +
    ' contained within the rect, because they will appear on one of these edges.',
  ' Scales the rect and returns the enclosing rect. The components are clamped\n' +
    ' if they would overflow.',
  ' Scales |rect| by scaling its four corner points. If the corner points lie on\n' +
    ' non-integral coordinate after scaling, their values are rounded to the\n' +
    ' nearest integer. The components are clamped if they would overflow.\n' +
    ' This is helpful during layout when relative positions of multiple gfx::Rect\n' +
    ' in a given coordinate space needs to be same after scaling as it was before\n' +
    ' scaling. ie. this gives a lossless relative positioning of rects.',
  ' Scales `rect` by `scale` and rounds to enclosing rect, but for each edge, if\n' +
    ' the distance between the edge and the nearest integer grid is smaller than\n' +
    ' `error`, the edge is snapped to the integer grid.  The default error is 0.001\n' +
    ' , which is used by cc/viz. Use this when scaling the window/layer size.',
  ' Return a maximum rectangle that is covered by the a or b.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
rect_conversions.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the smallest Rect that encloses the given RectF if possible.\n' +
    ' The returned Rect is larger than or equal to the input RectF, unless the\n' +
    ' the geometry values exceed int range and are clamped to int.',
  ' Similar to ToEnclosingRect(), but for each edge, if the distance between the\n' +
    ' edge and the nearest integer grid is smaller than |error|, the edge is\n' +
    ' snapped to the integer grid. Unlike ToNearestRect() which only accepts\n' +
    ' integer rect with or without floating point error, this function also accepts\n' +
    ' non-integer rect. The default error is 0.001, which is used in cc/viz.',
  ' Returns the largest Rect that is enclosed by the given RectF if possible.\n' +
    ' The returned rect is smaller than or equal to the input rect, but if\n' +
    ' the input RectF is too small and no enclosed Rect exists, the returned\n' +
    ' rect is an empty Rect at |ToCeiledPoint(rect.origin())|.',
  ' Similar to ToEnclosedRect(), but for each edge, if the distance between the\n' +
    ' edge and the nearest integer grid is smaller than |error|, the edge is\n' +
    ' snapped to the integer grid. Unlike ToNearestRect() which only accepts\n' +
    ' integer rect with or without floating point error, this function also accepts\n' +
    ' non-integer rect.',
  ' Returns the Rect after snapping the corners of the RectF to an integer grid.\n' +
    ' This should only be used when the RectF you provide is expected to be an\n' +
    ' integer rect with floating point error. If it is an arbitrary RectF, then\n' +
    ' you should use a different method.',
  ' Returns true if the Rect produced after snapping the corners of the RectF\n' +
    ' to an integer grid is withing |distance|.',
  ' Returns the Rect after rounding the corners of the RectF to an integer grid.',
  ' Returns a Rect obtained by flooring the values of the given RectF.\n' +
    ' Please prefer the previous two functions in new code.'
]
rect_f.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A floating version of gfx::Rect.',
  ' Constructs a rectangle with |p1| and |p2| as opposite corners.\n' +
    ' This could also be thought of as "the smallest rect that contains both\n' +
    ' points", except that we consider points on the right/bottom edges of the\n' +
    ' rect to be outside the rect.  So technically one or both points will not be\n' +
    ' contained within the rect, because they will appear on one of these edges.',
  ' Return a maximum rectangle in which any point is covered by either a or b.',
  ' Returns the rect in |dest_rect| corresponding to |r] in |src_rect| when\n' +
    ' |src_rect| is mapped to |dest_rect|.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
resize_utils.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Updates |rect| to adhere to the |aspect_ratio| of the window, if it has\n' +
    ' been set. |resize_edge| refers to the edge of the window being sized.\n' +
    ' |min_window_size| and |max_window_size| are expected to adhere to the\n' +
    ' given aspect ratio.\n' +
    ' |aspect_ratio| must be valid and is found using width / height.',
  ' As above, but computes a size for `rect` such that it has the right aspect\n' +
    ' ratio after subtracting `excluded_margin` from it.  This lets the aspect\n' +
    ' ratio ignore fixed borders, like a title bar.  For example, if\n' +
    ' `excluded_margin` is (10, 5) and `aspect_ratio` is 1.0f, then the resulting\n' +
    ' rectangle might have a size of (30, 25) or (40, 35).  One could use the\n' +
    " margin for drawing in the edges, and the part that's left over would have the\n" +
    ' proper aspect ratio: 20/20 or 30/30, respectively.'
]
rounded_corners_f.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents the geometry of a region with rounded corners, expressed as four\n' +
    ' corner radii in the order: top-left, top-right, bottom-right, bottom-left.'
]
rrect_f.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
rrect_f_builder.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' RRectFBuilder is implemented to make the parameter setting easier for RRectF.\n' +
    ' For example: To build an RRectF at point(40, 50) with size(60,70),\n' +
    ' with corner radii {(1, 2),(3, 4),(5, 6),(7, 8)}, use:\n' +
    '  RRectF a = RRectFBuilder()\n' +
    '                  .set_origin(40, 50)\n' +
    '                  .set_size(60, 70)\n' +
    '                  .set_upper_left(1, 2)\n' +
    '                  .set_upper_right(3, 4)\n' +
    '                  .set_lower_right(5, 6)\n' +
    '                  .set_lower_left(7, 8)\n' +
    '                  .Build();'
]
sin_cos_degrees.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.'
]
size.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A size has width and height values.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.',
  ' Helper methods to scale a gfx::Size to a new gfx::Size.'
]
size_conversions.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a Size with each component from the input SizeF floored.',
  ' Returns a Size with each component from the input SizeF ceiled.',
  ' Returns a Size with each component from the input SizeF rounded.'
]
size_f.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A floating version of gfx::Size.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
skia_conversions.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Convert between Skia and gfx types.',
  ' TODO(crbug.com/40237414): Remove this function in favor of the other form.'
]
fuzzer_util.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
geometry_util.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file defines gtest macros for floating-point geometry types. The\n' +
    ' difference from EXPECT_EQ is that each floating-point value is checked with\n' +
    ' something equivalent to EXPECT_FLOAT_EQ which can tolerate floating-point\n' +
    ' errors.',
  ' For integer geometry types, or for floating-point geometry types when you\n' +
    ' know there are no floating-point errors, you can just use EXPECT_EQ.'
]
three_point_cubic_bezier.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
transform.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' 4x4 Transformation matrix. Depending on the complexity of the matrix, it may\n' +
    ' be internally stored as an AxisTransform2d (float precision) or a full\n' +
    ' Matrix44 (4x4 double precision). Which one is used only affects precision and\n' +
    ' performance.\n' +
    ' - On construction (including constructors and static functions returning a\n' +
    '   new Transform object), AxisTransform2d will be used if it the matrix will\n' +
    '   be 2d scale and/or translation, otherwise Matrix44, with some exceptions\n' +
    '   (e.g. ColMajor()) described in the method comments.\n' +
    ' - On mutation, if the matrix has been using AxisTransform2d and the result\n' +
    '   can still be 2d scale and/or translation, AxisTransform2d will still be\n' +
    '   used, otherwise Matrix44, with some exceptions (e.g. set_rc()) described\n' +
    '   in the method comments.\n' +
    ' - On assignment, the new matrix will keep the choice of the rhs matrix.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
transform_operation.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40237414): Remove dependency to Skia.'
]
transform_operations.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Transform operations are a decomposed transformation matrix. It can be\n' +
    ' applied to obtain a Transform at any time, and can be blended\n' +
    ' intelligently with other transform operations, so long as they represent the\n' +
    ' same decomposition. For example, if we have a transform that is made up of\n' +
    ' a rotation followed by skew, it can be blended intelligently with another\n' +
    ' transform made up of a rotation followed by a skew. Blending is possible if\n' +
    ' we have two dissimilar sets of transform operations, but the effect may not\n' +
    ' be what was intended. For more information, see the comments for the blend\n' +
    ' function below.'
]
transform_util.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a scale transform at |anchor| point.',
  ' Interpolates the decomposed components |to| with |from| using the\n' +
    ' routines described in\n' +
    ' https://www.w3.org/TR/css-transforms-2/#interpolation-of-decomposed-3d-matrix-values\n' +
    ' |progress| is in the range [0, 1]. If 0 we will return |from|, if 1, we will\n' +
    ' return |to|.',
  ' Accumulates the decomposed components |to| with |from| using the\n' +
    ' routines described in\n' +
    ' https://www.w3.org/TR/css-transforms-2/#combining-transform-lists',
  ' Calculates a transform with a transformed origin. The resulting transform is\n' +
    ' created by composing P * T * P^-1 where P is a constant transform to the new\n' +
    ' origin.',
  ' Calculates a transform which would transform |src| to |dst|.',
  ' Returns the 2d axis transform that maps the clipping frustum to the square\n' +
    ' from [-1, -1] (the original bottom-left corner) to [1, 1] (the original\n' +
    ' top-right corner).',
  ' Returns the 2d axis transform that maps from ([-1, -1] .. [1, 1]) to\n' +
    ' ([x, y] .. [x + width, y + height]).',
  ' Compute 2D scale if possible, clamped with ClampFloatGeometry().',
  ' Compute 2D scale, and fall back to fallback_value if not possible.',
  ' Returns an approximate max scale value of the transform even if it has\n' +
    ' perspective. Prefer to use ComputeTransform2dScaleComponents if there is no\n' +
    ' perspective, since it can produce more accurate results.'
]
triangle_f.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vector2d.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines a simple integer vector class.  This class is used to indicate a\n' +
    ' distance in two dimensions between two points. Subtracting two points should\n' +
    ' produce a vector, and adding a vector to a point produces the point at the\n' +
    " vector's distance from the original point.",
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
vector2d_conversions.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a Vector2d with each component from the input Vector2dF floored.',
  ' Returns a Vector2d with each component from the input Vector2dF ceiled.',
  ' Returns a Vector2d with each component from the input Vector2dF rounded.'
]
vector2d_f.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines a simple float vector class.  This class is used to indicate a\n' +
    ' distance in two dimensions between two points. Subtracting two points should\n' +
    ' produce a vector, and adding a vector to a point produces the point at the\n' +
    " vector's distance from the original point.",
  ' Return the cross product of two vectors, i.e. the determinant.',
  ' Return the dot product of two vectors.',
  ' Return a vector that is |v| scaled by the given scale factors along each\n' +
    ' axis.',
  ' Return a vector that is |v| scaled by the given scale factor.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
vector3d_f.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines a simple float vector class.  This class is used to indicate a\n' +
    ' distance in two dimensions between two points. Subtracting two points should\n' +
    ' produce a vector, and adding a vector to a point produces the point at the\n' +
    " vector's distance from the original point.",
  ' Return the cross product of two vectors.',
  ' Return the dot product of two vectors.',
  ' Return a vector that is |v| scaled by the given scale factors along each\n' +
    ' axis.',
  ' Return a vector that is |v| scaled by the components of |s|',
  ' Return a vector that is |v| scaled by the given scale factor.',
  ' Returns the angle between |base| and |other| in degrees.',
  ' Returns the clockwise angle between |base| and |other| where |normal| is the\n' +
    ' normal of the virtual surface to measure clockwise according to.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
geometry_skia_export.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gfx_export.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gfx_skia_export.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gpu_extra_info.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Specification of a feature that can be enabled/disable in ANGLE'
]
gpu_fence.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' GpuFence objects own a GpuFenceHandle and release the resources in it when\n' +
    ' going out of scope as appropriate.'
]
gpu_fence_handle.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40728014): Make this a class instead of struct.'
]
gpu_memory_buffer.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40584691): Convert this to a proper class to ensure the state\n' +
    ' is always consistent, particularly that the only one handle is set at the\n' +
    ' same time and it corresponds to |type|.',
  ' This interface typically correspond to a type of shared memory that is also\n' +
    ' shared with the GPU. A GPU memory buffer can be written to directly by\n' +
    ' regular CPU code, but can also be read by the GPU.'
]
half_float.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Floats are expected to be within +/- 65535.0;'
]
harfbuzz_font_skia.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hdr_metadata.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Content light level info (CLLI) metadata from CTA 861.3.',
  ' SMPTE ST 2086 color volume metadata.',
  ' Nominal diffuse white level (NDWL) metadata.',
  ' HDR metadata for extended range color spaces.',
  ' HDR metadata common for HDR10 and WebM/VP9-based HDR formats.',
  ' HDR metadata types as described in\n' +
    ' https://w3c.github.io/media-capabilities/#enumdef-hdrmetadatatype'
]
hdr_metadata_mac.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This can be used for rendering content using AVSampleBufferDisplayLayer via\n' +
    ' the key kCVImageBufferContentLightLevelInfoKey or for rendering content using\n' +
    ' a CAMetalLayer via CAEDRMetadata.',
  ' This can be used for rendering content using AVSampleBufferDisplayLayer via\n' +
    ' the key kCVImageBufferMasteringDisplayColorVolumeKey or for rendering content\n' +
    ' using a CAMetalLayer via CAEDRMetadata.'
]
hdr_static_metadata.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This structure is used to define the HDR static capabilities of a display.\n' +
    ' Reflects CEA 861.G-2018, Sec.7.5.13, "HDR Static Metadata Data Block"\n' +
    " A value of 0.0 in any of the fields means that it's not indicated."
]
icc_profile.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used to represent a full ICC profile, usually retrieved from a monitor. It\n' +
    ' can be lossily compressed into a ColorSpace object. This structure should\n' +
    ' only be sent from higher-privilege processes to lower-privilege processes,\n' +
    ' as parsing this structure is not secure.'
]
icon_util.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' The IconUtil class contains helper functions for manipulating Windows icons.\n' +
    ' The class interface contains methods for converting an HICON handle into an\n' +
    ' SkBitmap object and vice versa. The class can also create a .ico file given\n' +
    ' a PNG image contained in an SkBitmap object. The following code snippet\n' +
    ' shows an example usage of IconUtil::CreateHICONFromSkBitmap():\n' +
    '   SkBitmap bitmap;\n' +
    '   // Fill |bitmap| with valid data\n' +
    '   bitmap.setConfig(...);\n' +
    '   bitmap.allocPixels();\n' +
    '   ...\n' +
    '   // Convert the bitmap into a Windows HICON\n' +
    '   base::win::ScopedHICON icon(IconUtil::CreateHICONFromSkBitmap(bitmap));\n' +
    '   if (!icon.is_valid()) {\n' +
    '     // Handle error\n' +
    '     ...\n' +
    '   }\n' +
    '   // Use the icon with a WM_SETICON message\n' +
    '   ::SendMessage(hwnd, WM_SETICON, static_cast<WPARAM>(ICON_BIG),\n' +
    '                 reinterpret_cast<LPARAM>(icon.get()));\n' +
    '/////////////////////////////////////////////////////////////////////////////'
]
icon_util_unittests_resource.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
buffer_w_stream.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Writes bytes to a std::vector that can be fetched. This is used to record the\n' +
    ' output of skia image encoding.'
]
canvas_image_source.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' CanvasImageSource is useful if you need to generate an image for a scale\n' +
    ' factor using Canvas. It creates a new Canvas with target scale factor and\n' +
    ' generates ImageSkiaRep when drawing is completed.'
]
image.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An Image wraps an image any flavor, be it platform-native GdkBitmap/NSImage,\n' +
    ' or a SkBitmap. This also provides easy conversion to other image types\n' +
    ' through operator overloading. It will cache the converted representations\n' +
    ' internally to prevent double-conversion.\n' +
    ' The lifetime of both the initial representation and any converted ones are\n' +
    " tied to the lifetime of the Image's internal storage. To allow Images to be\n" +
    ' cheaply passed around by value, the actual image data is stored in a ref-\n' +
    ' counted member. When all Images referencing this storage are deleted, the\n' +
    ' actual representations are deleted, too.\n' +
    ' Images can be empty, in which case they have no backing representation.\n' +
    ' Attempting to use an empty Image will result in a crash.'
]
image_family.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A collection of images at different sizes. The images should be different\n' +
    ' representations of the same basic concept (for example, an icon) at various\n' +
    ' sizes and (optionally) aspect ratios. A method is provided for finding the\n' +
    ' most appropriate image to fit in a given rectangle.\n' +
    ' NOTE: This is not appropriate for storing an image at a single logical pixel\n' +
    ' size, with high-DPI bitmap versions; use an Image or ImageSkia for that. Each\n' +
    ' image in an ImageFamily should have a different logical size (and may also\n' +
    ' include high-DPI representations).'
]
image_internal.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This holds internal declarations for the machinery of gfx::Image. These are\n' +
    ' only for the internal use of gfx::Image; do not use them elsewhere.',
  ' An ImageRep is the object that holds the backing memory for an Image. Each\n' +
    ' RepresentationType has an ImageRep subclass that is responsible for freeing\n' +
    ' the memory that the ImageRep holds. When an ImageRep is created, it expects\n' +
    ' to take ownership of the image, without having to retain it or increase its\n' +
    ' reference count.',
  ' The Storage class acts similarly to the pixels in a SkBitmap: the Image\n' +
    ' class holds a refptr instance of Storage, which in turn holds all the\n' +
    ' ImageReps. This way, the Image can be cheaply copied.\n' +
    ' This class is deliberately not RefCountedThreadSafe. Making it so does not\n' +
    ' solve threading issues, as gfx::Image and its internal classes are\n' +
    ' themselves not threadsafe.'
]
image_platform.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file declares platform-specific helper functions in gfx::internal for\n' +
    ' use by image.cc.\n' +
    ' The functions are implemented in image_generic.cc (all platforms other than\n' +
    ' iOS), image_ios.mm and image_mac.mm.',
  ' TODO(crbug.com/40286491): Remove callers to this function.'
]
image_png_rep.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " An ImagePNGRep represents a bitmap's png encoded data and the scale factor it\n" +
    ' was intended for.'
]
image_skia.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Container for the same image at different densities, similar to NSImage.\n' +
    ' Image height and width are in DIP (Density Indepent Pixel) coordinates.\n' +
    ' ImageSkia should be used whenever possible instead of SkBitmap.\n' +
    ' Functions that mutate the image should operate on the gfx::ImageSkiaRep\n' +
    ' returned from ImageSkia::GetRepresentation, not on ImageSkia.\n' +
    ' NOTE: This class should *not* be used to store multiple logical sizes of an\n' +
    ' image (e.g., small, medium and large versions of an icon); use an ImageFamily\n' +
    ' for that. An ImageSkia represents an image of a single logical size, with\n' +
    ' potentially many different densities for high-DPI displays.\n' +
    ' ImageSkia is cheap to copy and intentionally supports copy semantics.'
]
image_skia_operations.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_skia_rep.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_skia_rep_default.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An ImageSkiaRep represents an image and the scale factor it is intended for.\n' +
    ' 0.0f scale is used to indicate that this ImageSkiaRep is used for unscaled\n' +
    ' (ImageSkia does not automatically scale the image).\n' +
    ' TODO(malaykeshav): Support transport of PaintRecord across mojo. This would\n' +
    ' require adding inline serialization support for PaintRecords.'
]
image_skia_rep_ios.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An ImageSkiaRep represents an image and the scale factor it is intended for.\n' +
    ' 0.0f scale is used to indicate that this ImageSkiaRep is used for unscaled\n' +
    ' image (ImageSkia does not automatically scale the image).\n' +
    " iOS does not support cc's PaintOpBuffer and instead uses cocoa frameworks\n" +
    ' image formats.'
]
image_skia_source.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_skia_util_ios.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Converts to ImageSkia from UIImage.',
  ' Converts to an ImageSkiaRep of |scale_factor| from UIImage.\n' +
    ' |scale| is passed explicitly in order to allow this method to be used\n' +
    ' with a |scale| which is not supported by the platform.',
  ' Converts to UIImage from ImageSkia. The returned UIImage will be at the scale\n' +
    " of the ImageSkiaRep in |image_skia| which most closely matches the device's\n" +
    ' scale factor (eg Retina iPad -> 2x).',
  ' Converts to UIImage from ImageSkiaRep.'
]
image_skia_util_mac.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Converts to ImageSkia from NSImage.',
  ' Resizes NSImage to |size| DIP and then converts to ImageSkia.',
  ' Converts to NSImage from ImageSkia. Uses the sRGB color space.',
  ' Converts to NSImage from given ImageSkia.'
]
image_unittest_util.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Because the unit tests for gfx::Image are spread across multiple\n' +
    ' implementation files, this header contains the reusable components.',
  ' Create a bitmap of `size`x`size` and color `color`.',
  ' Create a bitmap of `width`x`height` and color `color`.',
  ' Creates an ImageSkia of `size`x`size` DIP and color `color` with bitmap\n' +
    ' data for an arbitrary scale factor.',
  ' Creates an ImageSkia of `width`x`height` DIP and color `color` with bitmap\n' +
    ' data for an arbitrary scale factor.',
  ' Returns PNG encoded bytes for a bitmap of |edge_size|x|edge_size| and color\n' +
    ' `color`.',
  ' Returns true if the images are equal. Converts the images to ImageSkia to\n' +
    ' compare them.',
  ' Returns true if the images are visually similar. |max_deviation| is the\n' +
    ' maximum color shift in each of the red, green, and blue components for the\n' +
    ' images to be considered similar. Converts to ImageSkia to compare the images.',
  ' Returns true if the bitmaps are equal.',
  ' Returns true if the bitmaps are visually similar.',
  ' Returns true if the passed in PNG bitmap is visually similar to the passed in\n' +
    ' SkBitmap.',
  ' Returns the maximum color shift in the red, green, and blue components caused\n' +
    ' by converting a gfx::Image between colorspaces. Color shifts occur when\n' +
    ' converting between NSImage & UIImage to ImageSkia.',
  ' An image which was not successfully decoded to PNG should be a red bitmap.\n' +
    ' Fails if the bitmap is not red.',
  ' Returns true if the structure of |image_skia| matches the structure\n' +
    ' described by |width|, |height|, and |scale_factors|.\n' +
    ' The structure matches if:\n' +
    ' - |image_skia| is non null.\n' +
    ' - |image_skia| has ImageSkiaReps of |scale_factors|.\n' +
    ' - Each of the ImageSkiaReps has a pixel size of |image_skia|.size() *\n' +
    '   scale_factor.'
]
image_util.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates an image from the given JPEG-encoded input. If there was an error\n' +
    ' creating the image, returns an IsEmpty() Image.',
  ' Fills the |dst| vector with JPEG-encoded bytes of the 1x representation of\n' +
    ' the given image.\n' +
    ' Returns true if the image has a 1x representation and the 1x representation\n' +
    ' was encoded successfully.\n' +
    ' |quality| determines the compression level, 0 == lowest, 100 == highest.\n' +
    ' Returns true if the Image was encoded successfully.',
  ' Fills the |dst| vector with WebP-encoded bytes of the the given image.\n' +
    ' Returns true if the image was encoded (lossy) successfully.\n' +
    ' |quality| determines the visual quality, 0 == lowest, 100 == highest.\n' +
    ' Returns true if the Image was encoded successfully.',
  ' Computes the width of any nearly-transparent regions at the sides of the\n' +
    ' image and returns them in |left| and |right|.  This checks each column of\n' +
    ' pixels from the outsides in, looking for anything with alpha above a\n' +
    ' reasonably small value.  For a fully-opaque image, the margins will thus be\n' +
    ' (0, 0); for a fully-transparent image, the margins will be\n' +
    ' (width / 2, width / 2), with |left| getting the extra pixel for odd widths.',
  ' Returns a resized Image from the provided Image.\n' +
    ' The resizing operation uses skia::ImageOperations::RESIZE_GOOD quality.\n' +
    ' This function is safe to use with any valid Image and gfx::Size objects.\n' +
    ' Returns:\n' +
    ' - If the provided image has a scale other than 1.0f, or if it already has the\n' +
    '   requested size, the function returns the original Image object unchanged.\n' +
    ' - Otherwise, it returns a new Image object containing a resized version of\n' +
    '   the original.',
  ' Downsizes the image if its area exceeds kSearchByImageMaxImageArea AND\n' +
    ' (either its width exceeds kSearchByImageMaxImageWidth OR its height exceeds\n' +
    ' kSearchByImageMaxImageHeight) in preparation for searching.',
  ' Downsizes the image if its area exceeds the max_area defined AND (either its\n' +
    ' width exceeds the max_width defined OR its height exceeds the max_height\n' +
    ' defined).'
]
image_skia_mojom_traits.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
resize_image_dimensions.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Dimensions to use when downsizing an image for search-by-image.'
]
interpolated_transform.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' class InterpolatedTransform\n' +
    ' Abstract base class for transforms that animate over time. These\n' +
    ' interpolated transforms can be combined to allow for more sophisticated\n' +
    ' animations. For example, you might combine a rotation of 90 degrees between\n' +
    ' times 0 and 1, with a scale from 1 to 0.3 between times 0 and 0.25 and a\n' +
    ' scale from 0.3 to 1 from between times 0.75 and 1.\n' +
    '/////////////////////////////////////////////////////////////////////////////',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' class InterpolatedRotation\n' +
    ' Represents an animated rotation.\n' +
    '/////////////////////////////////////////////////////////////////////////////',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' class InterpolatedAxisAngleRotation\n' +
    ' Represents an animated rotation.\n' +
    '/////////////////////////////////////////////////////////////////////////////',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' class InterpolatedScale\n' +
    ' Represents an animated scale.\n' +
    '/////////////////////////////////////////////////////////////////////////////',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' class InterpolatedConstantTransform\n' +
    ' Represents a transform that is constant over time. This is only useful when\n' +
    ' composed with other interpolated transforms.\n' +
    ' See InterpolatedTransformAboutPivot for an example of its usage.\n' +
    '/////////////////////////////////////////////////////////////////////////////',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' class InterpolatedTransformAboutPivot\n' +
    ' Represents an animated transform with a transformed origin. Essentially,\n' +
    ' at each time, t, the interpolated transform is created by composing\n' +
    ' P * T * P^-1 where P is a constant transform to the new origin.\n' +
    '/////////////////////////////////////////////////////////////////////////////'
]
NSString+CrStringDrawing.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Calculates and returns the bounding rect for the receiver drawn using the\n' +
    ' given size and font.\n' +
    ' This method is implemented as a wrapper around\n' +
    ' |boundingRectWithSize:options:attributes:context:| using the following values\n' +
    ' for the parameters:\n' +
    '  - size: the provided |size|\n' +
    '  - options: NSStringDrawingUsesLineFragmentOrigin\n' +
    '  - attributes: a NSDictionary with the provided |font|\n' +
    '  - context: nil.\n' +
    ' Note that the rect returned may contain fractional values.',
  ' Convenience wrapper to just return the size of |boundingRectWithSize:font:|.\n' +
    ' Note that the size returned may contain fractional values.',
  ' Returns the size of the string if it were to be rendered with the specified\n' +
    ' font on a single line. The width and height of the CGSize returned are\n' +
    ' pixel-aligned.\n' +
    ' This method is a convenience wrapper around sizeWithAttributes: to avoid\n' +
    ' boilerplate required to put |font| in a dictionary of attributes. Do not pass\n' +
    ' nil into this method.',
  ' Deprecated: Use cr_pixelAlignedSizeWithFont: or sizeWithAttributes:\n' +
    ' Provides a drop-in replacement for sizeWithFont:, which was deprecated in iOS\n' +
    ' 7 in favor of -sizeWithAttributes:. Specifically, this method will return\n' +
    ' CGSizeZero if |font| is nil, and the width and height returned are rounded up\n' +
    ' to integer values.\n' +
    ' TODO(lliabraa): This method was added to ease the transition off of the\n' +
    ' deprecated sizeWithFont: method. New call sites should not be added and\n' +
    ' existing call sites should be audited to determine the correct behavior for\n' +
    ' nil |font| and rounding, then replaced with cr_pixelAlignedSizeWithFont: or\n' +
    ' sizeWithAttributes: (crbug.com/364419).',
  ' If |index| is 0, returns an empty string.\n' +
    ' If |index| is >= than self.length, returns self.\n' +
    ' Otherwise, returns string cut to have |index| characters with an\n' +
    ' ellipsis at the end.',
  ' Returns an elided version of string that fits in |bounds|.\n' +
    ' System font of Label size is used for determining the string drawing size.'
]
uikit_util.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' UI Util containing functions that require UIKit.',
  ' Returns the closest pixel-aligned value higher than |value|, taking the scale\n' +
    ' factor into account. At a scale of 1, equivalent to ceil().',
  ' Returns the size resulting from applying AlignToUpperPixel to both\n' +
    ' components.'
]
gfx_ipc_export.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gfx_param_traits.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gfx_param_traits_macros.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Singly or multiply-included shared traits file depending upon circumstances.\n' +
    ' This allows the use of IPC serialization macros in more than one IPC message\n' +
    ' file.'
]
gfx_ipc_color_export.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gfx_param_traits.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gfx_param_traits_macros.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gfx_ipc_geometry_export.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gfx_param_traits.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gfx_ipc_export.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gfx_param_traits.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gfx_param_traits_macros.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Singly or multiply-included shared traits file depending upon circumstances.\n' +
    ' This allows the use of IPC serialization macros in more than one IPC message\n' +
    ' file.'
]
gfx_skia_ipc_export.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gfx_skia_param_traits.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gfx_skia_param_traits_macros.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
client_native_pixmap_dmabuf.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
client_native_pixmap_factory_dmabuf.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dmabuf_uapi.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_util_linux.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if the fourcc format is known.',
  ' Returns a human-readable string for a DRM FourCC format, or\n' +
    ' DRM_FORMAT_INVALID for an unknown or unsupported DRM format.'
]
fontconfig_util.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Initializes FontConfig on a worker thread if a thread pool instance is\n' +
    ' available, otherwise initializes FontConfig in a blocking fashion on the\n' +
    ' calling thread.  If this function is not called, the first call to\n' +
    ' GetGlobalFontConfig() will implicitly initialize FontConfig.  Can be called\n' +
    ' on any thread.',
  ' Retrieve the global font config. Must be called on the main thread.',
  ' FcPattern accessor wrappers.',
  ' Return the path of the font. Relative to the sysroot config specified in the\n' +
    ' font config (see: FcConfigGetSysRoot(...)).',
  ' Returns the appropriate parameters for rendering the font represented by the\n' +
    ' font config pattern.',
  ' Adds a given directory to the available fonts in the application.\n' +
    ' Directory must start with `/run/imageloader/` (guaranteed by DLC).\n' +
    ' Returns whether the fonts were added or not. Will not add the same directory\n' +
    ' more than once.'
]
gbm_buffer.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gbm_defines.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Minigbm has some defines that are used by ozone/gbm. However, when we build\n' +
    ' Ozone for Linux and use system libgbm, these defines are not present and\n' +
    ' compilation fails. Thus, to fix the issue, mask out these defines and let the\n' +
    " compilation go through. The values for these are copied from the minigbm's\n" +
    ' gbm.h file.'
]
gbm_device.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gbm_util.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Get GBM buffer object usage flags for a corresponding gfx::BufferUsage.\n' +
    ' Depending on the platform, certain usage flags may not be available (eg.\n' +
    ' GBM_BO_USE_HW_VIDEO_ENCODER on desktop linux).'
]
gbm_wrapper.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gpu_memory_buffer_support_x11.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Obtains and holds a GbmDevice for creating GbmBuffers.  Maintains a list of\n' +
    ' supported buffer configurations.'
]
native_pixmap_dmabuf.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class converts a gfx::NativePixmapHandle to a gfx::NativePixmap.'
]
scoped_gbm_device.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_gbm_device.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " The real DrmDevice makes actual DRM calls which we can't use in unit tests."
]
color_space_util.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Converts a gfx::ColorSpace to individual kCVImageBuffer keys. If\n' +
    ' `prefer_srgb_trfn` is true then return the sRGB transfer function for all\n' +
    ' Rec709-like content.',
  ' Converts individual kCVImageBuffer keys to a gfx::ColorSpace.'
]
coordinate_conversion.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Convert a gfx::Rect specified with the origin at the top left of the primary\n' +
    ' display into AppKit secreen coordinates (origin at the bottom left).',
  ' Convert an AppKit NSRect with origin in the bottom left of the primary\n' +
    ' display into a gfx::Rect with origin at the top left of the primary display.',
  ' Convert a gfx::Point specified with the origin at the top left of the primary\n' +
    ' display into AppKit screen coordinates (origin at the bottom left).',
  ' Convert an AppKit NSPoint with origin in the bottom left of the primary\n' +
    ' display into a gfx::Point with origin at the top left of the primary display.'
]
display_icc_profiles.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A map from ColorSpace objects to the display ICC profile data from which the\n' +
    ' ColorSpace was derived.\n' +
    '  - The color space for an IOSurface, when composited by CoreAnimation, is\n' +
    '    specified via ICC profile metadata.\n' +
    '  - The power cost of compositing an IOSurface that has the same color space\n' +
    '    as the display it is being composited to is substantially less (~0.5 W for\n' +
    '    fullscreen updates at 60fps) than the cost of compositing an IOSurface\n' +
    '    that has a different color space than the display is being composited to.\n' +
    '  - This power savings is realized only if the ICC profile metadata on the\n' +
    '    IOSurface matches, byte-for-byte, the profile of the CGDirectDisplayID it\n' +
    '    is being displayed on.\n' +
    '  - This structure maintains a map from ColorSpace objects to ICC profile data\n' +
    '    for all displays in the system (and auto-updates as displays change).'
]
io_surface.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper function to create an IOSurface with a specified size and format.\n' +
    ' The surface is zero-initialized if |should_clear| is true. This is not\n' +
    ' necessary for anonymous surfaces that are not exported to renderers and used\n' +
    ' as render targets only. If |override_rgba_to_bgra| is true (default) a BGRA\n' +
    ' IOSurface is created for RGBA/X_8888 BufferFormat. This is needed for GL\n' +
    ' usage since neither ANGLE Metal nor CGL support importing RGBA IOSurfaces,\n' +
    ' whereas for non-GL backends (Dawn and Metal) we want the formats to match.\n' +
    ' TODO(sunnyps): Revisit this when we switch to ANGLE Metal completely since\n' +
    ' wrapping RGBA_8888 can be implemented with Metal quite easily.',
  ' A scoper for handling Mach port names that are send rights for IOSurfaces.\n' +
    ' This scoper is both copyable and assignable, which will increase the kernel\n' +
    ' reference count of the right. On destruction, the reference count is\n' +
    ' decremented.',
  ' A scoper for holding a reference to an IOSurface and also incrementing its\n' +
    ' in-use counter while the scoper exists.',
  ' A scoper for holding a reference to an IOSurface.',
  ' Return true if there exists a value for IOSurfaceColorSpace or\n' +
    ' IOSurfaceICCProfile that will make CoreAnimation render using |color_space|.',
  ' Set color space for given IOSurface. IOSurfaceCanSetColorSpace must return\n' +
    ' true for |color_space| otherwise this does nothing.',
  ' Return the expected four character code pixel format for an IOSurface with\n' +
    ' the specified gfx::BufferFormat.',
  ' Return an IOSurface consuming |io_surface_mach_port|.'
]
nswindow_frame_controls.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Set whether the window can be fullscreened.',
  ' Sets whether the window appears on all workspaces.',
  ' Sets the min/max size of the window as well as showing/hiding resize,\n' +
    ' maximize, and fullscreen controls.\n' +
    ' Sizes refer to the content size (inner bounds).'
]
scoped_cocoa_disable_screen_updates.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A stack-based class to disable Cocoa screen updates. When instantiated, it\n' +
    ' disables screen updates and enables them when destroyed. Update disabling\n' +
    ' can be nested, and there is a time-maximum (about 1 second) after which\n' +
    " Cocoa will automatically re-enable updating. This class doesn't attempt to\n" +
    ' overrule that.'
]
accelerated_widget_mojom_traits.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
buffer_types_mojom_traits.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ca_layer_params_mojom_traits.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ca_layer_result_mojom_traits.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_space_mojom_traits.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
delegated_ink_metadata_mojom_traits.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
delegated_ink_point_mojom_traits.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_color_spaces_mojom_traits.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
font_render_params_mojom_traits.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
frame_data_mojom_traits.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gpu_extra_info_mojom_traits.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gpu_fence_handle_mojom_traits.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hdr_metadata_mojom_traits.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hdr_static_metadata_mojom_traits.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
linear_gradient_mojom_traits.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mask_filter_info_mojom_traits.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_handle_types_mojom_traits.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
overlay_priority_hint_mojom_traits.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
overlay_transform_mojom_traits.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
overlay_type_mojom_traits.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
presentation_feedback_mojom_traits.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
rrect_f_mojom_traits.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
selection_bound_mojom_traits.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
swap_result_mojom_traits.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
swap_timings_mojom_traits.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
transform_mojom_traits.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_pixmap.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This represents a buffer that can be directly imported via GL for\n' +
    ' rendering, or exported via dma-buf fds.'
]
native_pixmap_handle.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' NativePixmapPlane is used to carry the plane related information for GBM\n' +
    ' buffer. More fields can be added if they are plane specific.',
  ' Returns an instance of |handle| which can be sent over IPC. This duplicates\n' +
    ' the file-handles, so that the IPC code take ownership of them, without\n' +
    ' invalidating |handle|.',
  ' Returns true iff the plane metadata (number of planes, plane size, offset,\n' +
    ' and stride) in |handle| corresponds to a buffer that can store an image of\n' +
    ' |size| and |format|. This function does not check the plane handles, so even\n' +
    " if this function returns true, it's not guaranteed that the memory objects\n" +
    ' referenced by |handle| are consistent with the plane metadata. If\n' +
    ' |assume_single_memory_object| is true, this function assumes that all planes\n' +
    ' in |handle| reference the same memory object and that all planes are\n' +
    " contained in the range [0, last plane's offset + last plane's size) (and the\n" +
    ' plane metadata is validated against this assumption).\n' +
    ' If this function returns true, the caller may make the following additional\n' +
    ' assumptions:\n' +
    ' - The stride of each plane can fit in an int (and also in a size_t).\n' +
    ' - If |assume_single_memory_object| is true:\n' +
    '   - The offset and size of each plane can fit in a size_t.\n' +
    '   - The result of offset + size for each plane does not overflow and can fit\n' +
    '     in a size_t.'
]
native_widget_types.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file provides cross platform typedefs for native widget types.\n' +
    '   NativeWindow: this is a handle to a native, top-level window\n' +
    '   NativeView: this is a handle to a native UI element. It may be the\n' +
    '     same type as a NativeWindow on some platforms.\n' +
    '   NativeViewId: Often, in our cross process model, we need to pass around a\n' +
    '     reference to a "window". This reference will, say, be echoed back from a\n' +
    '     renderer to the browser when it wishes to query its size. On Windows we\n' +
    '     use an HWND for this.\n' +
    "     As a rule of thumb - if you're in the renderer, you should be dealing\n" +
    "     with NativeViewIds. This should remind you that you shouldn't be doing\n" +
    '     direct operations on platform widgets from the renderer process.\n' +
    "     If you're in the browser, you're probably dealing with NativeViews,\n" +
    "     unless you're in the IPC layer, which will be translating between\n" +
    '     NativeViewIds from the renderer and NativeViews.\n' +
    " The name 'View' here meshes with macOS where the UI elements are called\n" +
    " 'views' and with our Chrome UI code where the elements are also called\n" +
    " 'views'.\n" +
    ' TODO(crbug.com/40267204): Both gfx::NativeEvent and ui::PlatformEvent\n' +
    " are typedefs for native event types on different platforms, but they're\n" +
    ' slightly different and used in different places. They should be merged.\n' +
    ' TODO(crbug.com/40157665): gfx::NativeCursor is ui::Cursor in Aura;\n' +
    ' perhaps remove gfx::NativeCursor and use ui::Cursor everywhere?',
  ' TODO(crbug.com/40118868): Revisit the macro expression once build flag switch\n' +
    ' of lacros-chrome is complete.',
  ' NativeViews and NativeWindows on macOS are not necessarily in the same\n' +
    ' process as the NSViews and NSWindows that they represent. Require an explicit\n' +
    ' function call (GetNativeNSView or GetNativeNSWindow) to retrieve the\n' +
    ' underlying NSView or NSWindow <https://crbug.com/893719>. These are wrapper\n' +
    ' classes only and do not maintain any ownership, thus the __unsafe_unretained.',
  ' TODO(crbug.com/40118868): Revisit the macro expression once build flag switch\n' +
    ' of lacros-chrome is complete.',
  " Linux doesn't have a native font type.",
  ' Android, Chrome OS, etc.',
  " Note: for test_shell we're packing a pointer into the NativeViewId. So, if\n" +
    ' you make it a type which is smaller than a pointer, you have to fix\n' +
    ' test_shell.\n' +
    ' See comment at the top of the file for usage.',
  ' AcceleratedWidget provides a surface to compositors to paint pixels.'
]
nine_image_painter.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
overlay_plane_data.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
overlay_priority_hint.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides a hint to a system compositor how it should prioritize this\n' +
    ' overlay. Used only by Wayland.'
]
overlay_transform.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' GENERATED_JAVA_ENUM_PACKAGE: org.chromium.ui.gfx\n' +
    ' Describes transformation to be applied to the buffer before presenting\n' +
    ' to screen. Rotations are expressed in clockwise degrees.'
]
overlay_transform_utils.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns result of applying `t1`, followed by `t2`. May return invalid if\n' +
    ' there inputs contain invalid.'
]
overlay_type.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Identifies the type of the overlay based on the strategy used to promote\n' +
    ' this.'
]
paint_throbber.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This struct describes the "spinning" state of a throb animation.',
  ` This struct describes the "waiting" mode of a throb animation. It's useful\n` +
    ' for building a "spinning" state animation on top of a previous "waiting"\n' +
    ' mode animation. See PaintThrobberSpinningAfterWaiting.',
  ' Returns the calculated state for a single frame of the throbber in the\n' +
    ' "spinning", aka Material, state. Note that animation duration is a hardcoded\n' +
    ' value in line with Material design specifications but is cyclic, so the\n' +
    ' specified `elapsed_time` may exceed animation duration.',
  ' Paints a single frame of the throbber in the "spinning", aka Material, state.\n' +
    ' Note that animation duration is a hardcoded value in line with Material\n' +
    ' design specifications but is cyclic, so the specified `elapsed_time` may\n' +
    ' exceed animation duration.',
  ' Paints a throbber in the "waiting" state. Used when waiting on a network\n' +
    ' response, for example.',
  ' Paint a throbber in the "spinning" state, smoothly transitioning from a\n' +
    ' previous "waiting" state described by |waiting_state|, which is an in-out\n' +
    ' param.',
  ' Paints a throbber in the "waiting" state (bouncing back and forth). Used when\n' +
    ' waiting on a network response, for example.'
]
paint_vector_icon.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Describes an instance of an icon: an icon definition and a set of drawing\n' +
    ' parameters.',
  ' Draws a vector icon identified by |id| onto |canvas| at (0, 0). |color| is\n' +
    ' used as the fill. The size will come from the .icon file (the 1x version, if\n' +
    ' multiple versions exist).',
  ' As above, with a specified size. |dip_size| is the length of a single edge\n' +
    ' of the square icon, in device independent pixels.',
  ' Creates an ImageSkia which will render the icon on demand.\n' +
    ' TODO(estade): update clients to use this version and remove the other\n' +
    ' CreateVectorIcon()s.',
  ' Creates an ImageSkia which will render the icon on demand. The size will come\n' +
    ' from the .icon file (the 1x version, if multiple versions exist).',
  ' As above, but creates the image at the given size.',
  ' As above, but also paints a badge defined by |badge_id| on top of the icon.\n' +
    ' The badge uses the same canvas size and default color as the icon.',
  ' Takes a string of the format expected of .icon files and renders onto\n' +
    ' a canvas. This should only be used as a debugging aid and should never be\n' +
    ' used in production code.'
]
path_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a new HRGN given |region|. The caller is responsible for destroying\n' +
    ' the returned region.',
  ' Creates a new HRGN given |path|. The caller is responsible for destroying\n' +
    ' the returned region. Returns empty region (not NULL) for empty path.'
]
platform_font.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The size of the font returned by CreateDefault() on a "default" platform\n' +
    ' configuration. This allows UI that wants to target a particular size of font\n' +
    ' to obtain that size for the majority of users, while still compensating for a\n' +
    ' user preference for a larger or smaller font.'
]
platform_font_ios.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_font_mac.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_font_skia.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
presentation_feedback.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The feedback for gl::GLSurface methods |SwapBuffers|, |SwapBuffersAsync|,\n' +
    ' |SwapBuffersWithBounds|, |PostSubBuffer|, |PostSubBufferAsync|,\n' +
    ' |CommitOverlayPlanes|,|CommitOverlayPlanesAsync|, etc.'
]
gfx_range_export.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
range_mojom_traits.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
range.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class represents either a forward range [min, max) or a reverse range\n' +
    ' (max, min]. |start_| is always the first of these and |end_| the second; as a\n' +
    ' result, the range is forward if (start_ <= end_).  The zero-width range\n' +
    ' [val, val) is legal, contains and intersects itself, and is contained by and\n' +
    ' intersects any nonempty range [min, max) where min <= val < max.'
]
range_f.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A float version of Range. RangeF is made of a start and end position; when\n' +
    ' they are the same, the range is empty. Note that |start_| can be greater\n' +
    ' than |end_| to respect the directionality of the range.'
]
render_text.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Internal helper class used by derived classes to draw text through Skia.',
  ' Internal helper class used to iterate colors, baselines, and styles.',
  ' Line segments are slices of the display text to be rendered on a single line.',
  ' A line of display text, comprised of a line segment list and some metrics.',
  ' Internal class that contains the results of the text layout and shaping.',
  ' Creates an SkTypeface from a font, |italic| and a desired |weight|.\n' +
    ' May return null.',
  ' Applies the given FontRenderParams to the SkFont.',
  ' RenderText represents an abstract model of styled text and its corresponding\n' +
    ' visual layout. Support is built in for a cursor, selections, simple styling,\n' +
    ' complex scripts, and bi-directional text. Implementations provide mechanisms\n' +
    ' for rendering and translation between logical and visual data.'
]
render_text_harfbuzz.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Font fallback mechanism used to Shape runs (see ShapeRuns(...)).\n' +
    ' These values are persisted to logs. Entries should not be renumbered and\n' +
    ' numeric values should never be reused.',
  ' Manages the list of TextRunHarfBuzz and its logical <-> visual index mapping.'
]
render_text_test_api.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_canvas.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Saves the drawing state, and restores the state when going out of scope.'
]
scoped_cg_context_save_gstate_mac.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_ns_graphics_context_save_gstate_mac.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class to save/restore the state of the current context.'
]
scoped_ui_graphics_push_context_ios.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scrollbar_size.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This should return the thickness, in pixels, of a scrollbar in web content.\n' +
    " This needs to match the values in WebCore's\n" +
    ' ScrollbarThemeChromiumXXX.cpp::scrollbarThickness().'
]
selection_bound.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Bound of a selection end-point.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the //ui/gfx:test_support target. Depend on that to use this in your unit\n' +
    ' test. This should not be used in production code - call ToString() instead.'
]
selection_model.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' VisualCursorDirection and LogicalCursorDirection represent directions of\n' +
    ' motion of the cursor in BiDi text. The combinations that make sense are:\n' +
    '  base::i18n::TextDirection  VisualCursorDirection  LogicalCursorDirection\n' +
    '       LEFT_TO_RIGHT             CURSOR_LEFT           CURSOR_BACKWARD\n' +
    '       LEFT_TO_RIGHT             CURSOR_RIGHT          CURSOR_FORWARD\n' +
    '       RIGHT_TO_LEFT             CURSOR_RIGHT          CURSOR_BACKWARD\n' +
    '       RIGHT_TO_LEFT             CURSOR_LEFT           CURSOR_FORWARD',
  ' TODO(xji): publish bidi-editing guide line and replace the place holder.\n' +
    ' SelectionModel is used to represent the logical selection and visual\n' +
    ' position of cursor.\n' +
    ' For bi-directional text, the mapping between visual position and logical\n' +
    ' position is not one-to-one. For example, logical text "abcDEF" where capital\n' +
    ' letters stand for Hebrew, the visual display is "abcFED". According to the\n' +
    ' bidi editing guide (http://bidi-editing-guideline):\n' +
    ' 1. If pointing to the right half of the cell of a LTR character, the current\n' +
    ' position must be set after this character and the caret must be displayed\n' +
    ' after this character.\n' +
    ' 2. If pointing to the right half of the cell of a RTL character, the current\n' +
    ' position must be set before this character and the caret must be displayed\n' +
    ' before this character.\n' +
    " Pointing to the right half of 'c' and pointing to the right half of 'D' both\n" +
    ' set the logical cursor position to 3. But the cursor displayed visually at\n' +
    ' different places:\n' +
    " Pointing to the right half of 'c' displays the cursor right of 'c' as\n" +
    ' "abc|FED".\n' +
    " Pointing to the right half of 'D' displays the cursor right of 'D' as\n" +
    ' "abcFED|".\n' +
    ' So, besides the logical selection start point and end point, we need extra\n' +
    ' information to specify to which character the visual cursor is bound. This\n' +
    ' is given by a "caret affinity" which is either CURSOR_BACKWARD (indicating\n' +
    " the trailing half of the 'c' in this case) or CURSOR_FORWARD (indicating\n" +
    " the leading half of the 'D')."
]
sequential_id_generator.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is used to generate a series of sequential ID numbers in a way that a\n' +
    ' new ID is always the lowest possible ID in the sequence.'
]
shadow_util.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The shadow style for different UI components.',
  ' A struct that describes a vector of shadows and their depiction as an image\n' +
    ' suitable for ninebox tiling.'
]
shadow_value.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ShadowValue encapsulates parameters needed to define a shadow, including the\n' +
    " shadow's offset, blur amount and color."
]
skbitmap_operations.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
skia_color_space_util.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Return the parameterized function in |fn|, evaluated at |x|. This will not\n' +
    ' clamp output values.\n' +
    ' TODO(crbug.com/40944641): Replace this function with\n' +
    ' skcms_TransferFunction_eval.',
  ' TODO(crbug.com/40944641): Replace this function with\n' +
    ' skcms_TransferFunction_invert.',
  ' Return true if `a` and `b` approximately cancel out.\n' +
    ' TODO(crbug.com/40944641): This function determines the result by testing `b`\n' +
    ' after `a` on several points on the unit interval, which is not efficient or\n' +
    ' accurate.',
  ' Returns true if `fn` is approximately the identity.\n' +
    ' TODO(crbug.com/40944641): This function determines the result by testing `fn`\n' +
    ' on several points in the unit interval, which is not efficient or accurate.',
  ' Returns true if `m` is within `epsilon` of the identity in the L-infinity\n' +
    ' sense.',
  ' Convert between skcms and Skia matrices. These assume that the 4th row and\n' +
    ' column of the SkM44 are [0,0,0,1].'
]
skia_paint_util.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Creates a bitmap shader for the image rep with the image rep's scale factor.\n" +
    " Sets the created shader's local matrix such that it displays the image rep at\n" +
    ' the correct scale factor.\n' +
    " The shader's local matrix should not be changed after the shader is created.\n" +
    " TODO(pkotwicz): Allow shader's local matrix to be changed after the shader\n" +
    ' is created.',
  ' Creates a bitmap shader for the image rep with the passed in scale factor.',
  ' Creates a gradient shader. The caller owns the shader.',
  ' Creates a draw looper to generate |shadows|. The caller owns the draw looper.\n' +
    ' NULL is returned if |shadows| is empty since no draw looper is needed in\n' +
    ' this case.'
]
skia_util.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if the two bitmaps contain the same pixels.',
  ' Converts a Skia floating-point value to an int appropriate for hb_position_t.',
  ' Converts an hb_position_t to a Skia floating-point value.',
  ' Converts an hb_position_t to a float.'
]
surface_origin.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Describes where (0,0) coordinate is in a surface. Conventionally this value\n' +
    ' is kBottomLeft for OpenGL.'
]
swap_result.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Sent by ImageTransportSurfaces to their clients in response to a SwapBuffers.',
  ' Sent as part of finishing a swap.'
]
switches.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
switches_export.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
sys_color_change_listener.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface for classes that want to listen to system color changes.',
  ' Create an instance of this class in any object that wants to listen\n' +
    ' for system color changes.'
]
system_fonts_win.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents an optional override of system font and scale.',
  ' Identifiers for Windows-specific fonts described in the NONCLIENTMETRICS\n' +
    ' struct.',
  ' Callback that returns the minimum height that should be used for\n' +
    ' gfx::Fonts. Optional. If not specified, the minimum font size is 0.',
  ' Callback that adjusts a FontAdjustment to meet suitability requirements\n' +
    ' of the embedding application. Optional. If not specified, no adjustments\n' +
    ' are performed other than clamping to a minimum font size if\n' +
    ' |get_minimum_font_size_callback| is specified.',
  ' Returns the specified Windows default system font. By default, this is the\n' +
    ' font used for message boxes (see struct NONCLIENTMETRICS).',
  ' Returns the specified Windows system font, suitable for drawing on screen\n' +
    ' elements.',
  ' Computes and returns the adjusted size of a font, subject to the global\n' +
    ' minimum size. |lf_height| is the height as reported by the LOGFONT structure,\n' +
    ' and may be positive or negative (but is typically negative, indicating\n' +
    ' character size rather than cell size). The absolute value of |lf_size| will\n' +
    ' be adjusted by |size_delta| and then returned with the original sign.',
  ' Adjusts a LOGFONT structure for optional size scale and face override.',
  ' Retrieves a FONT from a LOGFONT structure.',
  ' Clears the system fonts cache. SystemFonts is keeping a global state that\n' +
    ' must be reset in unittests when using |GetMinimumFontSizeCallback| or\n' +
    ' |SetAdjustFontCallback|.'
]
font_fallback_test_data.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A font test case for the parameterized unittests.'
]
icc_profiles.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A profile that does not have an analytic transfer function.',
  ' A profile that is A2B only.',
  ' A profile that with an approxmation that shoots above 1.'
]
scoped_default_font_description.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests should use this scoped setter, instead of calling\n' +
    ' SetDefaultFontDescription directly.'
]
sk_color_eq.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Macro for comparing the SkColors that is tolerant of floating point rounding\n' +
    ' and lossy color space conversions.'
]
sk_gmock_support.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
text_constants.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(msw): Distinguish between logical character stops and glyph stops?\n' +
    ' TODO(msw): Merge with base::i18n::BreakIterator::BreakType.',
  ' Specifies the selection behavior for a move/move-and-select command. For\n' +
    ' example consider the state "ab|cd|e", i.e. cd is selected. Assume the\n' +
    ' selection direction is from left to right. If we move to the beginning of the\n' +
    ' line (LINE_BREAK, CURSOR_LEFT), the resultant state is:\n' +
    ' "|ab|cde" for SELECTION_RETAIN, selection direction from right to left.\n' +
    ' "|abcd|e" for SELECTION_EXTEND, selection direction from right to left.\n' +
    ' "ab|cde" for SELECTION_CARET.\n' +
    ' "|abcde" for SELECTION_NONE.',
  ' Specifies the word wrapping behavior when a word would exceed the available\n' +
    ' display width. All words that are too wide will be put on a new line, and\n' +
    ' then:',
  ' Horizontal text alignment modes.',
  ' Vertical text alignment modes for multiline text.',
  ' The directionality modes used to determine the base text direction.',
  ' Text styles and adornments.\n TODO(msw): Merge with gfx::Font::FontStyle.',
  ' Text baseline offset types.\n' +
    ' Figure of font metrics:\n' +
    '   +--------+--------+------------------------+-------------+\n' +
    '   |        |        | internal leading       | SUPERSCRIPT |\n' +
    '   |        |        +------------+-----------|             |\n' +
    '   |        | ascent |            | SUPERIOR  |-------------+\n' +
    '   | height |        | cap height |-----------|\n' +
    '   |        |        |            | INFERIOR  |-------------+\n' +
    '   |        |--------+------------+-----------|             |\n' +
    '   |        | descent                         | SUBSCRIPT   |\n' +
    '   +--------+---------------------------------+-------------+',
  ' Elision behaviors of text that exceeds constrained dimensions.'
]
text_elider.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file defines utility functions for eliding and formatting UI text.',
  ' Helper class to split + elide text, while respecting UTF-16 surrogate pairs\n' +
    ' and combining character sequences.',
  ' Elides |text| to fit the |available_pixel_width| with the specified behavior.',
  ' Elide a filename to fit a given pixel width, with an emphasis on not hiding\n' +
    ' the extension unless we have to. If filename contains a path, the path will\n' +
    " be removed if filename doesn't fit into available_pixel_width. The elided\n" +
    ' filename is forced to have LTR directionality, which means that in RTL UI\n' +
    ' the elided filename is wrapped with LRE (Left-To-Right Embedding) mark and\n' +
    ' PDF (Pop Directional Formatting) mark.',
  ' Functions to elide strings when the font information is unknown. As opposed\n' +
    ' to the above functions, ElideString() and ElideRectangleString() operate in\n' +
    ' terms of character units, not pixels.',
  ' If the size of |input| is more than |max_len|, this function returns\n' +
    ' true and |input| is shortened into |output| by removing chars in the\n' +
    ' middle (they are replaced with up to 3 dots, as size permits).\n' +
    ' Ex: ElideString(u"Hello", 10, &str) puts Hello in str and\n' +
    ' returns false.  ElideString(u"Hello my name is Tom", 10, &str)\n' +
    ' puts "Hell...Tom" in str and returns true.\n' +
    " TODO(tsepez): Doesn't handle UTF-16 surrogate pairs properly.\n" +
    " TODO(tsepez): Doesn't handle bidi properly.",
  ' Reformat |input| into |output| so that it fits into a |max_rows| by\n' +
    ' |max_cols| rectangle of characters.  Input newlines are respected, but\n' +
    ' lines that are too long are broken into pieces.  If |strict| is true,\n' +
    ' we break first at naturally occurring whitespace boundaries, otherwise\n' +
    ' we assume some other mechanism will do this in approximately the same\n' +
    ' spot after the fact.  If the word itself is too long, we always break\n' +
    ' intra-word (respecting UTF-16 surrogate pairs) as necessary. Truncation\n' +
    ' (indicated by an added 3 dots) occurs if the result is still too long.\n' +
    '  Returns true if the input had to be truncated (and not just reformatted).',
  ' Indicates whether the |available_pixel_width| by |available_pixel_height|\n' +
    ' rectangle passed to |ElideRectangleText()| had insufficient space to\n' +
    ' accommodate the given |text|, leading to elision or truncation.',
  ' Reformats |text| into output vector |lines| so that the resulting text fits\n' +
    ' into an |available_pixel_width| by |available_pixel_height| rectangle with\n' +
    ' the specified |font_list|. Input newlines are respected, but lines that are\n' +
    ' too long are broken into pieces. For words that are too wide to fit on a\n' +
    ' single line, the wrapping behavior can be specified with the |wrap_behavior|\n' +
    ' param. Returns a combination of |ReformattingResultFlags| that indicate\n' +
    ' whether the given rectangle had insufficient space to accommodate |text|,\n' +
    ' leading to elision or truncation (and not just reformatting).',
  ' Truncates |string| to |length| characters. This breaks the string according\n' +
    ' to the specified |break_type|, which must be either WORD_BREAK or\n' +
    ' CHARACTER_BREAK, and adds the horizontal ellipsis character (unicode\n' +
    ' character 0x2026) to render "...". The supplied string is returned if the\n' +
    ' string has |length| characters or less.'
]
text_utils.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Strips the accelerator char ('&') from a menu string. Useful for platforms\n" +
    ' which use underlining to indicate accelerators.\n' +
    " Single accelerator chars ('&') will be stripped from the string. Double\n" +
    " accelerator chars ('&&') will be converted to a single '&'. The out params\n" +
    ' |accelerated_char_pos| and |accelerated_char_span| will be set to the index\n' +
    ' and span of the last accelerated character, respectively, or -1 and 0 if\n' +
    ' there was none.',
  ' Strips all accelerator notation from a menu string. Useful for platforms\n' +
    ' which use underlining to indicate accelerators, as well as situations where\n' +
    ' accelerators are not indicated.\n' +
    " Single accelerator chars ('&') will be stripped from the string. Double\n" +
    " accelerator chars ('&&') will be converted to a single '&'. CJK language\n" +
    ' accelerators, specified as "(&x)", will be entirely removed too.',
  ' Returns the number of horizontal pixels needed to display the specified\n' +
    ' |text| with |font_list|. |typesetter| indicates where the text will be\n' +
    ' displayed.',
  ' Returns the size required to render |text| in |font_list|. This includes all\n' +
    ' leading space, descender area, etc. even if the text to render does not\n' +
    ' contain characters with ascenders or descenders.',
  ' This is same as GetStringWidth except that fractional width is returned.',
  ' Returns a valid cut boundary at or before |index|. The surrogate pair and\n' +
    ' combining characters should not be separated.',
  ' Returns a valid cut boundary at or after |index|. The surrogate pair and\n' +
    ' combining characters should not be separated.',
  ' If the UI layout is right-to-left, flip the alignment direction.',
  ' Returns insets that can be used to draw a highlight or border that appears to\n' +
    ' be distance |desired_visual_padding| from the body of a string of text\n' +
    ' rendered using |font_list|. The insets are adjusted based on the box used to\n' +
    ' render capital letters (or the bodies of most letters in non-capital fonts\n' +
    ' like Hebrew and Devanagari), in order to give the best visual appearance.\n' +
    " That is, any portion of |desired_visual_padding| overlapping the font's\n" +
    ' leading space or descender area are truncated, to a minimum of zero.\n' +
    ' In this example, the text is rendered in a highlight that stretches above and\n' +
    ' below the height of the H as well as to the left and right of the text\n' +
    " (|desired_visual_padding| = {2, 2, 2, 2}). Note that the descender of the 'y'\n" +
    ' overlaps with the padding, as it is outside the capital letter box.\n' +
    ' The resulting padding is {1, 2, 1, 2}.\n' +
    '  . . . . . . . . . .                               | actual top\n' +
    '  .                 .  |              | leading space\n' +
    '  .  |  |  _        .  | font    | capital\n' +
    '  .  |--| /_\\ \\  /  .  | height  | height\n' +
    '  .  |  | \\_   \\/   .  |         |\n' +
    '  .            /    .  |              | descender\n' +
    '  . . . . . . . . . .                               | actual bottom\n' +
    '  ___             ___\n' +
    '  actual        actual\n' +
    '  left           right',
  ' Returns the y adjustment necessary to align the center of the "cap size" box\n' +
    " - the space between a capital letter's top and bottom - between two fonts.\n" +
    ' For non-capital scripts (e.g. Hebrew, Devanagari) the box containing the body\n' +
    ' of most letters is used.\n' +
    ' A positive return value means the font |to_center| needs to be moved down\n' +
    ' relative to the font |original_font|, while a negative value means it needs\n' +
    ' to be moved up.\n' +
    ' Illustration:\n' +
    '  original_font    to_center\n' +
    '  ----------                    ] - return value (+1)\n' +
    '  leading          ----------\n' +
    '  ----------       leading\n' +
    '                   ----------\n' +
    '  cap-height       cap-height\n' +
    '                   ----------\n' +
    '  ----------       descent\n' +
    '  descent          ----------\n' +
    '  ----------\n' +
    ' Visual result:           Non-Latin example (Devanagari ऐ "ai"):\n' +
    '                               \\\n' +
    '  |\\   |                    ------     \\\n' +
    '  | \\  |   |\\ |              |  |    ----\n' +
    '  |  \\ |   | \\|               \\ /     \\|\n' +
    '  |   \\|                       \\       /\n' +
    '                                /'
]
ubidi_deleter.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
utf16_indexing.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns false if s[index-1] is a high surrogate and s[index] is a low\n' +
    ' surrogate, true otherwise.',
  ' |UTF16IndexToOffset| returns the number of code points between |base| and\n' +
    ' |pos| in the given string. |UTF16OffsetToIndex| returns the index that is\n' +
    ' |offset| code points away from the given |base| index. These functions are\n' +
    " named after glib's |g_utf8_pointer_to_offset| and |g_utf8_offset_to_pointer|,\n" +
    ' which perform the same function for UTF-8. As in glib, it is an error to\n' +
    ' pass an |offset| that walks off the edge of the string.\n' +
    ' These functions attempt to deal with invalid use of UTF-16 surrogates in a\n' +
    ' way that makes as much sense as possible: unpaired surrogates are treated as\n' +
    ' single characters, and if an argument index points to the middle of a valid\n' +
    ' surrogate pair, it is treated as though it pointed to the end of that pair.\n' +
    ' The index returned by |UTF16OffsetToIndex| never points to the middle of a\n' +
    ' surrogate pair.\n' +
    ' The following identities hold:\n' +
    '   If |s| contains no surrogate pairs, then\n' +
    '     UTF16IndexToOffset(s, base, pos) == pos - base\n' +
    '     UTF16OffsetToIndex(s, base, offset) == base + offset\n' +
    '   If |pos| does not point to the middle of a surrogate pair, then\n' +
    '     UTF16OffsetToIndex(s, base, UTF16IndexToOffset(s, base, pos)) == pos\n' +
    '   Always,\n' +
    '     UTF16IndexToOffset(s, base, UTF16OffsetToIndex(s, base, ofs)) == ofs\n' +
    '     UTF16IndexToOffset(s, i, j) == -UTF16IndexToOffset(s, j, i)'
]
vector_icon_types.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This macro allows defining the list of commands in this file, then pulling\n' +
    ' them each in to the template files via using-declarations.  Files which want\n' +
    ' to do this should do the following:\n' +
    '   #define DECLARE_VECTOR_COMMAND(x) using gfx::x;\n' +
    '   DECLARE_VECTOR_COMMANDS\n' +
    ' The alternative would be to have the template files pull in the whole gfx\n' +
    ' namespace via using-directives, which is banned by the style guide.',
  ' A command to Skia.',
  ' A POD that describes either a path command or an argument for it.',
  ' Describes the drawing commands for a single vector icon at a particular pixel\n' +
    ' size or range of sizes.',
  ' A vector icon that stores one or more representations to be used for various\n' +
    ' scale factors and pixel dimensions.'
]
vector_icon_utils.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the number of arguments expected to follow |command| in a vector\n' +
    ' icon path representation.',
  ' Calculates the size that will be default for |icon|, in dip. This will be the\n' +
    ' smallest icon size |icon| contains.'
]
video_types.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vsync_provider.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides a constant timebase and interval.'
]
crash_id_helper.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' CrashIdHelper is used to log (in crash dumps) the id(s) of the window/widget\n' +
    ' currently dispatching an event. Often times crashes occur purely in ui\n' +
    ' code, while the bug lies in client code. Logging an id helps better identify\n' +
    ' the client code that created the window/widget.\n' +
    ' This class only logs ids on the thread identified by RegisterMainThread().\n' +
    ' Example usage:\n' +
    ' {\n' +
    '   auto logger = CrashIdHelper::Get()->OnWillProcessMessages(crash_id);\n' +
    '   <do message processing>\n' +
    ' }'
]
d3d_shared_fence.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A thread-safe ref-counted wrapper around D3D11Fence and its shared handle.\n' +
    ' Fences are opened for each D3D11 device the fence is waited on. Thread-safe\n' +
    ' ref-counting is used so that the same fence object can be referred to in\n' +
    ' multiple places e.g. as the signaling fence or in list of fences to wait for\n' +
    ' next access, and also multiple threads e.g. the gpu main thread and the media\n' +
    ' service thread. This class must be externally synchronized.'
]
direct_write.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a DirectWrite factory.',
  ' Returns the global DirectWrite factory.',
  ' Retrieves the localized string for a given locale. If locale is empty,\n' +
    ' retrieves the first element of |names|.',
  ' Retrieves the localized font name for a given locale. If locale is empty,\n' +
    ' retrieves the default native font name.'
]
hwnd_util.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A version of the GetClassNameW API that returns the class name in an\n' +
    ' std::wstring. An empty result indicates a failure to get the class name.',
  ' Useful for subclassing a HWND.  Returns the previous window procedure.',
  ' Pointer-friendly wrappers around Get/SetWindowLong(..., GWLP_USERDATA, ...)\n' +
    ' Returns the previously set value.',
  ' Returns true if the specified window is the current active top window or one\n' +
    ' of its children.',
  ' Returns true if the specified window is cloaked.  Windows 10 and later\n' +
    ' have cloaked windows which are windows with WS_VISIBLE attribute but not\n' +
    ' displayed.',
  " Returns true if `window` is on the current virtual desktop, false if isn't,\n" +
    ' and std::nullopt if a COM method fails. Since this calls COM methods,\n' +
    ' it can only be called from a COM thread.',
  ' Sizes the window to have a window size of |pref|, then centers the window\n' +
    ' over |parent|, ensuring the window fits on screen.',
  ' If |hwnd| is nullptr logs various thing and CHECKs. |last_error| must contain\n' +
    ' the result of ::GetLastError(), called immediately after CreateWindow().',
  ' Returns the window you can use to parent a top level window.\n' +
    ' Note that in some cases we create child windows not parented to its final\n' +
    ' container so in those cases you should pass true in |get_real_hwnd|.'
]
msg_util.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Based on WTL version 8.0 atlcrack.h',
  ' This differs from the original atlcrack.h by removing usage of CPoint,\n' +
    ' CSize, etc.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' Message map macro for cracked handlers',
  ' Note about message maps with cracked handlers:\n' +
    ' For ATL 3.0, a message map using cracked handlers MUST use\n' +
    ' CR_BEGIN_MSG_MAP_EX. For ATL 7.0 or higher, you can use CR_BEGIN_MSG_MAP for\n' +
    ' CWindowImpl/CDialogImpl derived classes, but must use CR_BEGIN_MSG_MAP_EX for\n' +
    " classes that don't derive from CWindowImpl/CDialogImpl.\n" +
    ' Classes using the CR_BEGIN_MSG_MAP_EX/CR_END_MSG_MAP set of macros must\n' +
    ' also include a CR_MSG_MAP_CLASS_DECLARATIONS macro after all members in\n' +
    ' the class definition since the macros add a\n' +
    ' base::WeakPtrFactory which is only allowed if last in the class.',
  " Replacement for atlwin.h's END_MSG_MAP for removing ATL usage.",
  ' This macro must be last in the class since it contains a\n' +
    ' base::WeakPtrFactory which must be last in the class.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' Standard Windows message macros',
  ' int OnCreate(LPCREATESTRUCT lpCreateStruct)',
  ' BOOL OnInitDialog(CWindow wndFocus, LPARAM lInitParam)',
  ' BOOL OnCopyData(CWindow wnd, PCOPYDATASTRUCT pCopyDataStruct)',
  ' void OnDestroy()',
  ' void OnMove(CPoint ptPos)',
  ' void OnSize(UINT nType, gfx::Size size)',
  ' void OnActivate(UINT nState, BOOL bMinimized, CWindow wndOther)',
  ' void OnSetFocus(CWindow wndOld)',
  ' void OnKillFocus(CWindow wndFocus)',
  ' void OnEnable(BOOL bEnable)',
  ' void OnPaint(CDCHandle dc)',
  ' void OnClose()',
  ' BOOL OnQueryEndSession(UINT nSource, UINT uLogOff)',
  ' BOOL OnQueryOpen()',
  ' BOOL OnEraseBkgnd(CDCHandle dc)',
  ' void OnSysColorChange()',
  ' void OnEndSession(BOOL bEnding, UINT uLogOff)',
  ' void OnShowWindow(BOOL bShow, UINT nStatus)',
  ' HBRUSH OnCtlColorEdit(CDCHandle dc, CEdit edit)',
  ' HBRUSH OnCtlColorListBox(CDCHandle dc, CListBox listBox)',
  ' HBRUSH OnCtlColorBtn(CDCHandle dc, CButton button)',
  ' HBRUSH OnCtlColorDlg(CDCHandle dc, CWindow wnd)',
  ' HBRUSH OnCtlColorScrollBar(CDCHandle dc, CScrollBar scrollBar)',
  ' HBRUSH OnCtlColorStatic(CDCHandle dc, CStatic wndStatic)',
  ' void OnSettingChange(UINT uFlags, LPCTSTR lpszSection)',
  ' void OnDevModeChange(LPCTSTR lpDeviceName)',
  ' void OnActivateApp(BOOL bActive, DWORD dwThreadID)',
  ' void OnFontChange()',
  ' void OnTimeChange()',
  ' void OnCancelMode()',
  ' BOOL OnSetCursor(CWindow wnd, UINT nHitTest, UINT message)',
  ' int OnMouseActivate(CWindow wndTopLevel, UINT nHitTest, UINT message)',
  ' void OnChildActivate()',
  ' void OnGetMinMaxInfo(LPMINMAXINFO lpMMI)',
  ' void OnIconEraseBkgnd(CDCHandle dc)',
  ' void OnSpoolerStatus(UINT nStatus, UINT nJobs)',
  ' void OnDrawItem(int nIDCtl, LPDRAWITEMSTRUCT lpDrawItemStruct)',
  ' void OnMeasureItem(int nIDCtl, LPMEASUREITEMSTRUCT lpMeasureItemStruct)',
  ' void OnDeleteItem(int nIDCtl, LPDELETEITEMSTRUCT lpDeleteItemStruct)',
  ' int OnCharToItem(UINT nChar, UINT nIndex, CListBox listBox)',
  ' int OnVKeyToItem(UINT nKey, UINT nIndex, CListBox listBox)',
  ' HCURSOR OnQueryDragIcon()',
  ' int OnCompareItem(int nIDCtl, LPCOMPAREITEMSTRUCT lpCompareItemStruct)',
  ' void OnCompacting(UINT nCpuTime)',
  ' BOOL OnNcCreate(LPCREATESTRUCT lpCreateStruct)',
  ' void OnNcDestroy()',
  ' LRESULT OnNcCalcSize(BOOL bCalcValidRects, LPARAM lParam)',
  ' UINT OnNcHitTest(gfx::Point point)',
  ' void OnNcPaint(CRgn rgn)',
  ' BOOL OnNcActivate(BOOL bActive)',
  ' UINT OnGetDlgCode(LPMSG lpMsg)',
  ' void OnNcMouseMove(UINT nHitTest, gfx::Point point)',
  ' void OnNcLButtonDown(UINT nHitTest, gfx::Point point)',
  ' void OnNcLButtonUp(UINT nHitTest, gfx::Point point)',
  ' void OnNcLButtonDblClk(UINT nHitTest, gfx::Point point)',
  ' void OnNcRButtonDown(UINT nHitTest, gfx::Point point)',
  ' void OnNcRButtonUp(UINT nHitTest, gfx::Point point)',
  ' void OnNcRButtonDblClk(UINT nHitTest, CPoint point)',
  ' void OnNcMButtonDown(UINT nHitTest, CPoint point)',
  ' void OnNcMButtonUp(UINT nHitTest, CPoint point)',
  ' void OnNcMButtonDblClk(UINT nHitTest, CPoint point)',
  ' void OnKeyDown(UINT nChar, UINT nRepCnt, UINT nFlags)',
  ' void OnKeyUp(UINT nChar, UINT nRepCnt, UINT nFlags)',
  ' void OnChar(UINT nChar, UINT nRepCnt, UINT nFlags)',
  ' void OnDeadChar(UINT nChar, UINT nRepCnt, UINT nFlags)',
  ' void OnSysKeyDown(UINT nChar, UINT nRepCnt, UINT nFlags)',
  ' void OnSysKeyUp(UINT nChar, UINT nRepCnt, UINT nFlags)',
  ' void OnSysChar(UINT nChar, UINT nRepCnt, UINT nFlags)',
  ' void OnSysDeadChar(UINT nChar, UINT nRepCnt, UINT nFlags)',
  ' void OnSysCommand(UINT nID, LPARAM lParam)',
  ' void OnTCard(UINT idAction, DWORD dwActionData)',
  ' void OnTimer(UINT_PTR nIDEvent)',
  ' void OnHScroll(UINT nSBCode, UINT nPos, CScrollBar pScrollBar)',
  ' void OnVScroll(UINT nSBCode, UINT nPos, CScrollBar pScrollBar)',
  ' void OnInitMenu(CMenu menu)',
  ' void OnInitMenuPopup(CMenu menuPopup, UINT nIndex, BOOL bSysMenu)',
  ' void OnMenuSelect(UINT nItemID, UINT nFlags, CMenu menu)',
  ' LRESULT OnMenuChar(UINT nChar, UINT nFlags, CMenu menu)',
  ' LRESULT OnNotify(int idCtrl, LPNMHDR pnmh)',
  ' void OnEnterIdle(UINT nWhy, CWindow wndWho)',
  ' void OnMouseMove(UINT nFlags, CPoint point)',
  ' BOOL OnMouseWheel(UINT nFlags, short zDelta, CPoint pt)',
  ' void OnLButtonDown(UINT nFlags, CPoint point)',
  ' void OnLButtonUp(UINT nFlags, CPoint point)',
  ' void OnLButtonDblClk(UINT nFlags, CPoint point)',
  ' void OnRButtonDown(UINT nFlags, CPoint point)',
  ' void OnRButtonUp(UINT nFlags, CPoint point)',
  ' void OnRButtonDblClk(UINT nFlags, CPoint point)',
  ' void OnMButtonDown(UINT nFlags, CPoint point)',
  ' void OnMButtonUp(UINT nFlags, CPoint point)',
  ' void OnMButtonDblClk(UINT nFlags, CPoint point)',
  ' void OnParentNotify(UINT message, UINT nChildID, LPARAM lParam)',
  ... 127 more items
]
physical_size.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Gets the physical size for all displays.'
]
rendering_window_manager.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This keeps track of whether a given HWND has a child window which the GPU\n' +
    ' process renders into. This should only be used from the UI thread unless\n' +
    ' otherwise noted.'
]
scoped_set_map_mode.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper class for setting and restore the map mode on a DC.'
]
singleton_hwnd.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Singleton message-only HWND that allows interested clients to receive WM_*\n' +
    ' notifications.'
]
singleton_hwnd_hot_key_observer.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' We need to avoid duplicate hot key IDs for SingletonHwndObservers that call\n' +
    ' RegisterHotKey for SingletonHwnd. This class properly handles getting a\n' +
    ' unique hot key ID, registers the hotkey on construction, and unregisters the\n' +
    ' hot key on destruction.\n' +
    ' This class should always be used instead of directly registering hot keys on\n' +
    ' the SingletonHwnd with a SingletonHwndObserver in order to prevent duplicate\n' +
    ' hot key IDs.'
]
singleton_hwnd_observer.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Singleton lifetime management is tricky. This observer handles the correct\n' +
    ' cleanup if either the SingletonHwnd or forwarded object is destroyed first.\n' +
    ' Note that if you want to register a hot key on the SingletonHwnd, you need to\n' +
    ' use a SingletonHwndHotKeyObserver instead for each hot key.'
]
text_analysis_source.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implements an IDWriteTextAnalysisSource, describing a single pre-defined\n' +
    ' chunk of text with a uniform locale, reading direction, and number\n' +
    ' substitution.'
]
window_impl.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by classes that use message maps.\n' +
    ' ProcessWindowMessage is implemented by the BEGIN_MESSAGE_MAP_EX macro.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowImpl\n' +
    '  A convenience class that encapsulates the details of creating and\n' +
    '  destroying a HWND.  This class also hosts the windows procedure used by all\n' +
    '  Windows.\n' +
    '/////////////////////////////////////////////////////////////////////////////'
]
atom_cache.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Gets the X atom for default display corresponding to atom_name.\n' +
    ' TODO(thomasanderson): This should be removed and usages replaced with\n' +
    ' Connection::GetAtom().',
  ' Pre-caches all Atoms on first use to minimize round trips to the X11\n' +
    ' server. GetAtom() will CHECK() that atoms accessed\n' +
    ' through GetAtom() are not predefined.'
]
connection.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " On the wire, sequence IDs are 16 bits.  In xcb, they're usually extended to\n" +
    " 32 and sometimes 64 bits.  In Xlib, they're extended to unsigned long, which\n" +
    ' may be 32 or 64 bits depending on the platform.  This function is intended to\n' +
    ' prevent bugs caused by comparing two differently sized sequences.  Also\n' +
    ' handles rollover.  To use, compare the result of this function with 0.  For\n' +
    ' example, to compare seq1 <= seq2, use CompareSequenceIds(seq1, seq2) <= 0.',
  ' Represents a socket to the X11 server.',
  ' Grab/release the X server connection within a scope. This can help avoid race\n' +
    ' conditions that would otherwise lead to X errors.'
]
error.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is a generic interface for X11 errors.  Currently the only\n' +
    ' functionality is printing the error as a human-readable string.'
]
event.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_observer.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This interface is used by classes wanting to receive\n' +
    ' Events directly.  For input events (mouse, keyboard, touch), a\n' +
    ' PlatformEventObserver should be used instead.'
]
future.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An Future wraps an asynchronous response from the X11 server.  The\n' +
    ' response may be waited-for with Sync(), or asynchronously handled by\n' +
    ' installing a response handler using OnResponse().',
  " Sync() specialization for requests that don't generate replies.  The returned\n" +
    ' response will only contain an error if there was one.',
  " OnResponse() specialization for requests that don't generate replies.  The\n" +
    ' response argument to |callback| will only contain an error if there was one.'
]
bigreq.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
dri3.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
extension_manager.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
glx.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
randr.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
render.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
screensaver.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
shape.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
shm.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
sync.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
xfixes.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
xinput.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
xkb.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
xproto.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
xtest.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file was automatically generated with:\n' +
    ' ../../ui/gfx/x/gen_xproto.py \\\n' +
    '    ../../third_party/xcbproto/src \\\n' +
    '    gen/ui/gfx/x \\\n' +
    '    bigreq \\\n' +
    '    dri3 \\\n' +
    '    glx \\\n' +
    '    randr \\\n' +
    '    render \\\n' +
    '    screensaver \\\n' +
    '    shape \\\n' +
    '    shm \\\n' +
    '    sync \\\n' +
    '    xfixes \\\n' +
    '    xinput \\\n' +
    '    xkb \\\n' +
    '    xproto \\\n' +
    '    xtest'
]
geometry_cache.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Keeps track of the geometry of a window relative to the root window.'
]
keyboard_state.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is an interface used by Connection to manage conversion between keycodes\n' +
    ' (8 bit values) and keysyms (32 bit values).'
]
keysyms.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
property_cache.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Watches properties on an X11 window.  Property values are obtained once upon\n' +
    ' creation and are refreshed after each property change.'
]
randr_output_manager.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wrapper class for the XRRScreenResources struct.',
  ' Encapsulates basic configuration properties for a single RandR monitor.',
  ' Encapsulates a set of monitors to represent an entire screen layout.',
  ' Attaches an arbitrary pointer to a monitor config for internal tracking\n' +
    ' purposes.',
  ' Structure to hold data which describes changes between two layouts.',
  ' Calculates the difference between the current display layout and the new\n' +
    ' display layout. Displays are matched using the screen ID.',
  ' Manages modes and layout of RandR outputs.'
]
ref_counted_fd.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps a native file descriptor and close()s it when there are no more active\n' +
    ' scoped_refptrs.  This class is needed to implement request argument\n' +
    ' forwarding and is probably not useful outside of that context.'
]
visual_manager.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Selects a visual with a preference for alpha support on compositing window\n' +
    ' managers.'
]
visual_picker_glx.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Picks the best X11 visuals to use for GL.  This class is adapted from GTK's\n" +
    ' pick_better_visual_for_gl.  Tries to find visuals that\n' +
    ' 1. Support GL\n' +
    ' 2. Support double buffer\n' +
    ' 3. Have an alpha channel only if we want one\n' +
    ' `system_visual` and `rgba_visual` are output parameters populated with the\n' +
    " visuals, or are left unchanged if GLX isn't available."
]
window_cache.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Maintains a cache of the state of all X11 windows.'
]
window_event_manager.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ensures events in |event_mask| are selected on |window| for the duration of\n' +
    " this object's lifetime.",
  ' Allows multiple clients within Chrome to select events on the same X window.'
]
wm_sync.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Synchronizes with the X11 window manager if a WM is running,\n' +
    ' otherwise synchronizes with the X11 server.'
]
x11_crtc_resizer.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper class for DesktopResizerX11 which handles much of the logic\n' +
    ' for arranging and resizing a set of active CRTCs.'
]
x11_path.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a new XRegion given |region|. The caller is responsible for\n' +
    ' destroying the returned region.',
  ' Creates a new XRegion given |path|. The caller is responsible for destroying\n' +
    ' the returned region.'
]
xlib.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
xlib_support.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Loads Xlib, initializes threads, and sets a default error handler.',
  ' Sets an async error handler which only logs an error message.',
  ' Wraps XFree().',
  ' A scoped Xlib display.'
]
xlib_xcb.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
xproto_internal.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' Calls free() on the underlying data when the count drops to 0.',
  ' Wraps another RefCountedMemory, giving a view into it.  Similar to\n' +
    ' std::string_view, the data is some contiguous subarray, but unlike\n' +
    ' std::string_view, a counted reference is kept on the underlying memory.',
  ' Wraps a bare pointer and does not take any action when the reference count\n' +
    ' reaches 0.  This is used to wrap stack-alloctaed or persistent data so we can\n' +
    ' pass those to Read/ReadEvent/ReadReply which expect RefCountedMemory.',
  ' Helper function for xcbproto popcount.  Given an integral type, returns the\n' +
    ' number of 1 bits present.',
  ' Helper function for xcbproto sumof.  Given a function |f| and a container\n' +
    ' |t|, maps the elements uisng |f| and reduces by summing the results.',
  ' Helper function for xcbproto case.  Checks for equality between |t| and |s|.',
  ' Helper function for xcbproto bitcase expressions.  Checks if the bitmasks |t|\n' +
    ' and |s| have any intersection.',
  ' Helper function for xcbproto & expressions.  Computes |t| & |s|.',
  ' Helper function for xcbproto ~ expressions.',
  ' Helper function for generating switch values.  |switch_var| is the value to\n' +
    ' modify.  |enum_val| is the value to set |switch_var| to if this is a regular\n' +
    ' case, or the bit to be set in |switch_var| if this is a bit case.  This\n' +
    ' function is a no-op when |condition| is false.'
]
xproto_types.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/354829279): Remove this and convert code to safer constructs.',
  ' A memory buffer where the size of the memory buffer is unknown because its\n' +
    ' given as `void*` from a C api which expects us to dynamically cast it to\n' +
    ' another type later. Use of this type is not sound as a mistake will cause\n' +
    ' Undefined Behaviour.',
  ' Convert from a sized memory buffer to an unsized one, in order to use the\n' +
    ' buffer in void* APIs that pass the size separately.',
  ' Convert from an unsized memory buffer to a sized one, by specifying the size.',
  ' xcb returns unsigned int when making requests.  This may be updated to\n' +
    ' uint16_t if/when we stop using xcb for socket IO.',
  ' Constants from the X11 protocol documentation:\n' +
    ' https://www.x.org/releases/X11R7.5/doc/x11proto/proto.html',
  ' Wraps data read from the connection.',
  ' Wraps data to write to the connection.'
]
glextchromium.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file contains Chromium-specific GL extensions declarations.'
]
egl_fence_utils.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Create and inserts an egl fence and exports a ScopedFD from it.',
  ' Create and insert an EGL fence and imports the provided fence fd.'
]
scoped_a_native_window.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_java_surface.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A helper class for holding a scoped reference to a Java Surface instance.\n' +
    ' When going out of scope, Surface.release() is called on the Java object to\n' +
    ' make sure server-side references (esp. wrt graphics memory) are released.'
]
scoped_java_surface_control.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Move-only class that wraps a Java SurfaceControl and optionally call\n' +
    ' SurfaceControl.release on destruction.'
]
surface_texture.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class serves as a bridge for native code to call java functions inside\n' +
    ' android SurfaceTexture class.'
]
surface_texture_listener.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Listener class for all the callbacks from android SurfaceTexture.'
]
angle_implementation.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
angle_platform_impl.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implements the ANGLE platform interface, for functionality like\n' +
    ' histograms and trace profiling.'
]
ca_renderer_layer_params.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mirrors core animation layer edge constants.'
]
child_window_win.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The window DirectComposition renders into needs to be owned by the process\n' +
    " that's currently doing the rendering. The class creates and owns a window\n" +
    ' which is reparented by the browser to be a child of its window.'
]
dc_layer_overlay_image.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Holds DComp content needed to update the DComp layer tree'
]
dc_layer_overlay_params.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dc_layer_tree.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Cache video processor and its size.',
  ' A resource pool that contains DComp surfaces containing solid color fills.',
  ' DCLayerTree manages a tree of direct composition visuals, and associated\n' +
    ' swap chains for given overlay layers.'
]
dcomp_presenter.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class owns the DComp layer tree and its presentation. It does not own\n' +
    ' the root surface.'
]
dcomp_surface_proxy.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dcomp_surface_registry.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A registry in the GPU process for mapping an `UnguessableToken` to a\n' +
    ' Windows Direct Composition surface handle. This class is meant to be used as\n' +
    ' a singleton.'
]
debug_utils.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Set the debug name of a D3D11 resource for use with ETW debugging tools.\n' +
    ' D3D11 retains the string passed to this function.'
]
delegated_ink_point_renderer_gpu.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' On construction, this class will create a new visual for the visual tree with\n' +
    ' an IDCompositionDelegatedInk object as the contents. This will be added as\n' +
    ' a child of the root surface visual in the tree, and the trail will be drawn\n' +
    ' to it. It is a child of the root surface visual because this visual contains\n' +
    ' the swapchain, and there will be no transforms applied to the delegated ink\n' +
    ' visual this way.\n' +
    ' For more information about the design of this class and using the OS APIs,\n' +
    ' view the design doc here: https://aka.ms/GPUBackedDesignDoc'
]
direct_composition_support.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Initialize direct composition with the given d3d11 device.',
  ' Retrieves the global direct composition device. InitializeDirectComposition\n' +
    ' must be called on GPU process startup before the device is retrieved, and\n' +
    ' ShutdownDirectComposition must be called at process shutdown.',
  ' Retrieves the global d3d11 device used by direct composition.\n' +
    ' InitializeDirectComposition must be called on GPU process startup before the\n' +
    ' device is retrieved, and ShutdownDirectComposition must be called at process\n' +
    ' shutdown.',
  ' Returns true if direct composition is supported.  We prefer to use direct\n' +
    ' composition even without hardware overlays, because it allows us to bypass\n' +
    ' blitting by DWM to the window redirection surface by using a flip mode swap\n' +
    ' chain.  Overridden with --disable_direct_composition=1.',
  ' Returns true if video overlays are supported and should be used. Overridden\n' +
    ' with --enable-direct-composition-video-overlays and\n' +
    ' --disable_direct_composition_video_overlays=1. This function is thread safe.',
  ' Returns true if hardware overlays are supported. This function is thread\n' +
    ' safe.',
  ' After this is called, overlay support is disabled during the current GPU\n' +
    " process' lifetime.",
  ' Returns true if zero copy decode swap chain is supported.',
  ' Returns true if scaled hardware overlays are supported.',
  ' Returns preferred overlay format set when detecting overlay support.',
  ' Returns true if video processor auto HDR feature is supported.',
  ' Returns true if video processor support handling the given format.',
  ' Returns overlay support flags for the given format.\n' +
    ' Caller should check for DXGI_OVERLAY_SUPPORT_FLAG_DIRECT and\n' +
    ' DXGI_OVERLAY_SUPPORT_FLAG_SCALING bits.\n' +
    ' This function is thread safe.',
  ' Returns true if swap chain tearing flag is supported.',
  ' Returns true if tearing should be used for dcomp root and video swap chains.',
  ' Returns true if waitable swap chain should be used to reduce display latency.',
  ' Returns the value passed to SetMaximumFrameLatency for waitable swap chains.',
  ' Returns true if there is an HDR capable display connected.',
  ' Returns true if the window is displayed on an HDR capable display.',
  ' Returns the collected DXGI information.',
  ' Returns true if there is support for |IDCompositionTexture|.',
  ' Set direct composition swap chain failure so that direct composition is\n' +
    ' marked as unsupported from now on.',
  ' Returns monitor size.',
  ' Get the current number of all visible display monitors on the desktop.',
  ' Testing helpers.',
  ' Upon receiving display notifications from ui::GpuSwitchingManager,\n' +
    ' DirectCompositionOverlayCapsMonitor updates its overlay caps with the new\n' +
    ' display setting and notifies DirectCompositionOverlayCapsObserver for the\n' +
    ' overlay cap change.'
]
egl_bindings_autogen_mock.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file is auto-generated from\n' +
    ' ui/gl/generate_bindings.py\n' +
    " It's formatted by clang-format using chromium coding style:\n" +
    '    clang-format -i -style=chromium filename\n' +
    ' DO NOT EDIT!',
  ' Silence presubmit and Tricium warnings about include guards\n' +
    ' no-include-guard-because-multiply-included\n' +
    ' NOLINT(build/header_guard)'
]
egl_mock.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file implements mock EGL Interface for unit testing. The interface\n' +
    ' corresponds to the set of functionally distinct EGL functions defined in\n' +
    ' generate_bindings.py.',
  ' Include the auto-generated parts of this class. We split this because\n' +
    ' it means we can easily edit the non-auto generated parts right here in\n' +
    ' this file instead of having to edit some template or the code generator.',
  ' Member functions',
  ' Static mock functions that invoke the member functions of interface_.'
]
egl_surface_io_surface.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper class to create an EGLSurface (PBuffer) for an IOSurface and bind\n' +
    ' it to an EGL texture.'
]
egl_timestamps.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface to query EGL timestamps.'
]
egl_util.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the last EGL error as a string.'
]
gl_angle_util_vulkan.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Vulkan related helper functions.'
]
gl_angle_util_win.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_bindings.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Includes the platform independent and platform dependent GL headers.',
  ' GL headers may include inttypes.h and so we need to ensure that\n' +
    ' __STDC_FORMAT_MACROS is defined in order for //base/format_macros.h to\n' +
    ' function correctly. See comment and #error message in //base/format_macros.h\n' +
    ' for details.',
  ' GLES2 defines not part of Desktop GL\n Shader Precision-Specified Types',
  ' GL_OES_EGL_image_external',
  ' GL_ANGLE_texture_rectangle',
  ' GL_ANGLE_translated_shader_source',
  ' GL_ANGLE_texture_usage',
  ' GL_ANGLE_renderability_validation',
  ' GL_EXT_texture_storage',
  ' GL_ANGLE_instanced_arrays',
  ' GL_ANGLE_client_arrays',
  ' GL_ANGLE_robust_resource_initialization',
  ' GL_ANGLE_request_extension',
  ' GL_ANGLE_memory_size',
  ' GL_ANGLE_rgbx_internal_format',
  ' GL_ANGLE_shader_pixel_local_storage',
  ' GL_EXT_occlusion_query_boolean',
  ' GL_ARB_occlusion_query',
  ' GL_CHROMIUM_command_buffer_query',
  ' GL_CHROMIUM_get_error_query',
  ' GL_CHROMIUM_program_completion_query',
  ' GL_CHROMIUM_async_pixel_transfers',
  ' GL_CHROMIUM_sync_query',
  ' GL_CHROMIUM_subscribe_uniforms',
  ' GL_OES_texure_3D',
  ' GL_OES_depth24',
  ' GL_OES_depth32',
  ' GL_OES_packed_depth_stencil',
  ' GL_OES_compressed_ETC1_RGB8_texture',
  ' GL_OES_compressed_ETC2_RGB8_texture',
  ' GL_AMD_compressed_ATC_texture',
  ' GL_IMG_texture_compression_pvrtc',
  ' GL_EXT_texture_compression_bptc',
  ' GL_EXT_texture_compression_rgtc',
  ' GL_OES_vertex_array_object',
  ' GL_CHROMIUM_pixel_transfer_buffer_object',
  ' GL_EXT_discard_framebuffer',
  ' GL_EXT_sRGB',
  ' GL_ARB_get_program_binary',
  ' GL_OES_get_program_binary',
  ' These match the corresponding values in NV_path_rendering\n' +
    ' extension, eg tokens with CHROMIUM replaced with NV.',
  ' This is from NV_path_rendering, but the GL header is not up to date with the\n' +
    ' most recent version of the extension. This definition could be removed once\n' +
    ' glext.h r27498 or later is imported.',
  ' OVR_multiview2 constants.',
  ' EGL_ANGLE_global_fence_sync',
  ' Forward declare EGL types.',
  ' This #define is here to support autogenerated code.'
]
gl_bindings_api_autogen_egl.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file is auto-generated from\n' +
    ' ui/gl/generate_bindings.py\n' +
    " It's formatted by clang-format using chromium coding style:\n" +
    '    clang-format -i -style=chromium filename\n' +
    ' DO NOT EDIT!',
  ' Silence presubmit and Tricium warnings about include guards\n' +
    ' no-include-guard-because-multiply-included\n' +
    ' NOLINT(build/header_guard)'
]
gl_bindings_api_autogen_gl.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file is auto-generated from\n' +
    ' ui/gl/generate_bindings.py\n' +
    " It's formatted by clang-format using chromium coding style:\n" +
    '    clang-format -i -style=chromium filename\n' +
    ' DO NOT EDIT!',
  ' Silence presubmit and Tricium warnings about include guards\n' +
    ' no-include-guard-because-multiply-included\n' +
    ' NOLINT(build/header_guard)'
]
gl_bindings_autogen_egl.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file is auto-generated from\n' +
    ' ui/gl/generate_bindings.py\n' +
    " It's formatted by clang-format using chromium coding style:\n" +
    '    clang-format -i -style=chromium filename\n' +
    ' DO NOT EDIT!'
]
gl_bindings_autogen_gl.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file is auto-generated from\n' +
    ' ui/gl/generate_bindings.py\n' +
    " It's formatted by clang-format using chromium coding style:\n" +
    '    clang-format -i -style=chromium filename\n' +
    ' DO NOT EDIT!'
]
gl_bindings_autogen_mock.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file is auto-generated from\n' +
    ' ui/gl/generate_bindings.py\n' +
    " It's formatted by clang-format using chromium coding style:\n" +
    '    clang-format -i -style=chromium filename\n' +
    ' DO NOT EDIT!',
  ' Silence presubmit and Tricium warnings about include guards\n' +
    ' no-include-guard-because-multiply-included\n' +
    ' NOLINT(build/header_guard)'
]
gl_context.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Where available, choose a GL context priority for devices that support it.\n' +
    ' Currently this requires the EGL_IMG_context_priority extension that is\n' +
    ' present on Daydream ready Android devices. Default is Medium, and the\n' +
    ' attribute is ignored if the extension is missing.\n' +
    ' "High" priority must only be used for special cases with strong realtime\n' +
    ' requirements, it is incompatible with other critical system GL work such as\n' +
    " the GVR library's asynchronous reprojection for VR viewing. Please avoid\n" +
    ' using it for any GL contexts that may be used during VR presentation,\n' +
    ' see crbug.com/727800.\n' +
    ' Instead, consider using "Low" priority for possibly-slow GL work such as\n' +
    ' user WebGL content.',
  ' Angle allows selecting context virtualization group at context creation time.\n' +
    ' This enum is used to specify the group number to use for a given context.\n' +
    ' Currently all contexts which do not specify any group number are part of\n' +
    ' default angle context virtualization group. The below use cases in Chrome use\n' +
    ' become part of different virtualization groups via this enum.',
  ' Encapsulates an OpenGL context, hiding platform specific management.\n' +
    ' TODO(344606399): Consider folding GLContextEGL into this class.',
  ' Wraps GLContext in scoped_refptr and tries to initializes it. Returns a\n' +
    ' scoped_refptr containing the initialized GLContext or nullptr if\n' +
    ' initialization fails.'
]
gl_context_egl.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Encapsulates an EGL OpenGL ES context.'
]
gl_context_stub.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A GLContext that does nothing for unit tests.'
]
gl_display.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' If adding a new type, also add it to EGLDisplayType in\n' +
    " tools/metrics/histograms/enums.xml. Don't remove or reorder entries.",
  ' TODO(344606399): Consider merging GLDisplayEGL into GLDisplay.'
]
gl_display_egl_util.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Utility singleton class that helps to set additional egl properties. This\n' +
    ' class should be implemented by each platform except Ozone. In case of Ozone,\n' +
    ' there is a common implementation that forwards calls to a public interface of\n' +
    ' a platform.\n' +
    ' The reason why it is defined here in ui/gl is that ui/gl cannot depend on\n' +
    ' ozone and we have to provide an interface here. ui/gl/init will provide an\n' +
    ' implementation for this utility class upon initialization of gl.'
]
gl_display_manager.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(344606399): Consider removing the templating since only the EGL display\n' +
    ' is used.'
]
gl_egl_api_implementation.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Logs debug information for every EGL call.',
  ' Inserts a TRACE for every EGL call.'
]
gl_enums.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_enums_implementation_autogen.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file is auto-generated from\n' +
    ' ui/gl/generate_bindings.py\n' +
    " It's formatted by clang-format using chromium coding style:\n" +
    '    clang-format -i -style=chromium filename\n' +
    ' DO NOT EDIT!'
]
gl_export.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_features.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Controls if GPU should synchronize presentation with vsync.',
  ' All features in alphabetical order. The features should be documented\n' +
    ' alongside the definition of their values in the .cc file.',
  ' If SwiftShader should be allowed as a GL implementation or WebGL fallback via\n' +
    ' command line flags. Disallowed by default unless explicitly requested with\n' +
    ' --use-angle=swiftshader[-for-webgl], --enable-unsafe-swiftshader',
  ' If SwiftShader should be allowed due to the AllowSwiftShaderFallback\n' +
    ' killswitch feature.',
  ' SwiftShader is allowed by either IsSwiftShaderAllowedByCommandLine or\n' +
    ' IsSwiftShaderAllowedByFeature.'
]
gl_fence.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_fence_android_native_fence_sync.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_fence_arb.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_fence_egl.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_fence_nv.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_fence_win.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_gl_api_implementation.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is exported from //ui/gl/gl_bindings.h to retrieve GL bindings.',
  ' This is only used internally in //ui/gl to set GL bindings from GLContext.',
  ' Implemenents the GL API by calling directly into the driver.',
  ' Inserts a TRACE for every GL call.',
  ' Logs debug information for every GL call.',
  ' Catches incorrect usage when GL calls are made without a current context.'
]
gl_helper.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_implementation.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The GL implementation currently in use.\n' +
    ' These values are persisted to logs. Entries should not be renumbered and\n' +
    ' numeric values should never be reused. It should match enum GLImplementation\n' +
    ' in /tool/metrics/histograms/enums.xml',
  ' Sets stub methods for drawing operations in the GL bindings. The\n' +
    ' null draw bindings default to enabled, so that draw operations do nothing.',
  ' TODO(danakj): Remove this when all test suites are using null-draw.',
  ' Filter a list of disabled_extensions from GL style space-separated\n' +
    ' extension_list, returning a space separated list of filtered extensions, in\n' +
    ' the same order as the input.',
  ' Once initialized, instantiating this turns the stub methods for drawing\n' +
    ' operations off allowing drawing will occur while the object is alive.',
  ' Set the current GL and ANGLE implementation.',
  ' Get the current GL and ANGLE implementation.',
  ' Set the current GL implementation.',
  ' Get the current GL implementation.',
  ' Set the current ANGLE implementation.',
  ' Get the current ANGLE implementation.',
  ' Get the software GL implementation',
  ' Set the software GL implementation on the provided command line',
  ' Set the software WebGL implementation on the provided command line',
  " Return requested GL implementation by checking commandline. If there isn't\n" +
    ' gl related argument, nullopt is returned.',
  ' Whether the implementation is one of the software GL implementations',
  ' Get the GL implementation with a given name.',
  ' Get the name of a GL implementation.',
  ' Add a native library to those searched for GL entry points.',
  ' Unloads all native libraries.',
  ' Set an additional function that will be called to find GL entry points.\n' +
    ' Exported so that tests may set the function used in the mock implementation.',
  ' Find an entry point in the current GL implementation. Note that the function\n' +
    ' may return a non-null pointer to something else than the GL function if an\n' +
    ' unsupported function is queried. Spec-compliant eglGetProcAddress is allowed\n' +
    ' to return garbage for unsupported functions, and when querying functions\n' +
    ' from the EGL library supplied by Android, it may return a function that\n' +
    ' prints a log message about the function being unsupported.',
  ' Helper for fetching the OpenGL extensions from the current context.\n' +
    ' This helper abstracts over differences between the desktop OpenGL\n' +
    " core profile, and OpenGL ES and the compatibility profile.  It's\n" +
    ' intended for users of the bindings, not the implementation of the\n' +
    ' bindings themselves. This is a relatively expensive call, so\n' +
    ' callers should cache the result.',
  ' Helpers to load a library and log error on failure.',
  ' Notify end of frame at buffer swap request.'
]
gl_implementation_wrapper.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps a GLApi with its tracing and logging variants when the corresponding\n' +
    ' command line flags are passed.'
]
gl_mock.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file implements mock GL Interface for unit testing. The interface\n' +
    ' corresponds to the set of functionally distinct GL functions defined in\n' +
    ' generate_bindings.py, which may originate from either desktop GL or GLES.'
]
gl_mock_autogen_egl.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file is auto-generated from\n' +
    ' ui/gl/generate_bindings.py\n' +
    " It's formatted by clang-format using chromium coding style:\n" +
    '    clang-format -i -style=chromium filename\n' +
    ' DO NOT EDIT!',
  ' Silence presubmit and Tricium warnings about include guards\n' +
    ' no-include-guard-because-multiply-included\n' +
    ' NOLINT(build/header_guard)'
]
gl_mock_autogen_gl.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file is auto-generated from\n' +
    ' ui/gl/generate_bindings.py\n' +
    " It's formatted by clang-format using chromium coding style:\n" +
    '    clang-format -i -style=chromium filename\n' +
    ' DO NOT EDIT!',
  ' Silence presubmit and Tricium warnings about include guards\n' +
    ' no-include-guard-because-multiply-included\n' +
    ' NOLINT(build/header_guard)',
  ' TODO(zmo): crbug.com/456340\n' +
    ' glClearTexSubImage cannot be mocked because it has 11 args.',
  ' TODO(zmo): crbug.com/456340\n' +
    ' glCompressedTexSubImage3D cannot be mocked because it has 11 args.\n' +
    ' TODO(zmo): crbug.com/456340\n' +
    ' glCompressedTexSubImage3DRobustANGLE cannot be mocked because it has 12 args.',
  ' TODO(zmo): crbug.com/456340\n' +
    ' glCopySubTextureCHROMIUM cannot be mocked because it has 14 args.',
  ' TODO(zmo): crbug.com/456340\n' +
    ' glReadnPixelsRobustANGLE cannot be mocked because it has 11 args.',
  ' TODO(zmo): crbug.com/456340\n' +
    ' glReadPixelsRobustANGLE cannot be mocked because it has 11 args.',
  ' TODO(zmo): crbug.com/456340\n' +
    ' glTexImage3DRobustANGLE cannot be mocked because it has 11 args.',
  ' TODO(zmo): crbug.com/456340\n' +
    ' glTexSubImage3D cannot be mocked because it has 11 args.\n' +
    ' TODO(zmo): crbug.com/456340\n' +
    ' glTexSubImage3DRobustANGLE cannot be mocked because it has 12 args.'
]
gl_share_group.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A group of GL contexts that share an ID namespace.'
]
gl_state_restorer.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface for Restoring GL State.\n' +
    ' This will expand over time to provide an more optimizable implementation.'
]
gl_stub_api.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_stub_api_base.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file implements a stub GL Interface for unit testing. The interface\n' +
    ' corresponds to the set of functionally distinct GL functions defined in\n' +
    ' generate_bindings.py, which may originate from either desktop GL or GLES.'
]
gl_stub_autogen_gl.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file is auto-generated from\n' +
    ' ui/gl/generate_bindings.py\n' +
    " It's formatted by clang-format using chromium coding style:\n" +
    '    clang-format -i -style=chromium filename\n' +
    ' DO NOT EDIT!'
]
gl_surface.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Encapsulates a surface that can be rendered to with GL, hiding platform\n' +
    ' specific management.',
  ' Wraps GLSurface in scoped_refptr and tries to initializes it. Returns a\n' +
    ' scoped_refptr containing the initialized GLSurface or nullptr if\n' +
    ' initialization fails.'
]
gl_surface_egl.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface for EGL surface.',
  ' Encapsulates an EGL surface bound to a view.',
  ' Encapsulates a pbuffer EGL surface.',
  ' SurfacelessEGL is used as Offscreen surface when platform supports\n' +
    ' KHR_surfaceless_context and GL_OES_surfaceless_context. This would avoid the\n' +
    ' need to create a dummy EGLsurface in case we render to client API targets.'
]
gl_surface_egl_surface_control.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_surface_egl_x11.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Encapsulates an EGL surface bound to a view using the X Window System.'
]
gl_surface_egl_x11_gles2.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Encapsulates an EGL surface bound to a view using the X Window System.'
]
gl_surface_format.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Expresses surface format properties that may vary depending\n' +
    ' on the underlying gl_surface implementation or specific usage\n' +
    ' scenarios. Intended usage is to support copying formats and\n' +
    ' checking compatibility.'
]
gl_surface_overlay.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' For saving the properties of an overlay plane and scheduling it later.'
]
gl_surface_presentation_helper.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper class for managering and invoke presentation callbacks for GLSurface\n' +
    ' implementations.'
]
gl_surface_stub.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A GLSurface that does nothing for unit tests.'
]
gl_switches.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines all the command-line switches used by ui/gl.',
  ' The GL implementation names that can be passed to --use-gl.',
  ' These flags are used by the test harness code, not passed in by users.'
]
gl_utils.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file contains some useful utilities for the ui/gl classes.',
  ' Disable ANGLE and force to use native or other GL implementation.',
  ' Defines a set of workarounds that can be passed to ui/gl using the\n' +
    ' SetGlWorkarounds function below.',
  ' Obtains the global GlWorkarounds. For use by ui/gl code to determine which\n' +
    ' workarounds have been set by a call to SetGlWorkarounds.',
  ' Sets the GlWorkarounds. This should be called from the code hosting ui/gl.',
  ' Calculates present during in 100 ns from number of frames per second.',
  ' BufferCount for the root surface swap chain.',
  ' Labels swapchain with the name_prefix and ts buffers buffers with the string\n' +
    ' name_prefix + _Buffer_ + <buffer_number>.',
  ' Same as LabelSwapChainAndBuffers, but only does the buffers. Used for resize\n' +
    ' operations.',
  ' The following functions expose functionalities from GLDisplayManagerEGL\n' +
    ' and GLDisplayManagerX11 for access outside the ui/gl module. This is because\n' +
    ' the two GLDisplayManager classes are singletons and in component build,\n' +
    ' calling GetInstance() directly returns different instances in different\n' +
    ' components.\n' +
    ' Add an entry <preference, system_device_id> to GLDisplayManagerEGL.',
  ' Remove the entry at <preference> from GLDisplayManagerEGL.',
  ' Query the default GLDisplay. May return either a GLDisplayEGL or\n' +
    ' GLDisplayX11.',
  ' Query the GLDisplay by |gpu_preference|. May return either a GLDisplayEGL or\n' +
    ' GLDisplayX11.',
  ' Query the GLDisplay by |gpu_preference| and |display_key|. May return either\n' +
    ' a GLDisplayEGL or GLDisplayX11.',
  ' Query the default GLDisplayEGL.',
  ' Query the GLDisplayEGL by |gpu_preference|.',
  ' Temporarily allows compilation of shaders that use the\n' +
    " ARB_texture_rectangle/ANGLE_texture_rectangle extension. We don't want to\n" +
    ' expose the extension to WebGL user shaders but we still need to use it for\n' +
    ' parts of the implementation on macOS. Note that the extension is always\n' +
    ' enabled on macOS and this only controls shader compilation.'
]
gl_version_info.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gpu_preference.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' On dual-GPU systems, expresses a preference for using the low power\n' +
    ' or high performance GPU. On systems that have dual-GPU support (see\n' +
    ' GpuDataManagerImpl), resource sharing only works between\n' +
    ' contexts that are created with the same GPU preference.\n' +
    ' This API will likely need to be adjusted as the functionality is\n' +
    ' implemented on more operating systems.',
  ' Some clients may need to use the same GPU with a separate EGL display.\n' +
    ' This enum is used to key individual EGL displays per-GPU.'
]
gpu_switching_manager.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' GpuSwitchingManager is not thread safe. It is running on the browser main\n' +
    ' thread in the browser and/or on the gpu main thread in the GPU process.'
]
gpu_switching_observer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gpu_timing.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The gpu_timing classes handles the abstraction of GL GPU Timing extensions\n' +
    ' into a common set of functions. Currently the different timer extensions that\n' +
    ' are supported are EXT_timer_query, ARB_timer_query and\n' +
    ' EXT_disjoint_timer_query.\n' +
    ' Explanation of Classes:\n' +
    '   GPUTiming - GPU Timing is a private class which is only owned by the\n' +
    '     underlying GLContextReal class. This class handles any GL Context level\n' +
    '     states which may need to be redistributed to users of GPUTiming. For\n' +
    '     example, there exists only a single disjoint flag for each real GL\n' +
    '     Context. Once the disjoint flag is checked, internally it is reset to\n' +
    '     false. In order to support multiple virtual contexts each checking the\n' +
    '     disjoint flag seperately, GPUTiming is in charge of checking the\n' +
    '     disjoint flag and broadcasting out the disjoint state to all the\n' +
    '     various users of GPUTiming (GPUTimingClient below).\n' +
    '   GPUTimingClient - The GLContextReal holds the GPUTiming class and is the\n' +
    '     factory that creates GPUTimingClient objects. If a user would like to\n' +
    '     obtain various GPU times they would access CreateGPUTimingClient() from\n' +
    '     their GLContext and use the returned object for their timing calls.\n' +
    '     Each virtual context as well as any other classes which need GPU times\n' +
    '     will hold one of these. When they want to time a set of GL commands they\n' +
    '     will create GPUTimer objects.\n' +
    '   GPUTimer - Once a user decides to time something, the user creates a new\n' +
    '     GPUTimer object from a GPUTimingClient and issue Start() and Stop() calls\n' +
    '     around various GL calls. Once IsAvailable() returns true, the GPU times\n' +
    '     will be available through the various time stamp related functions.\n' +
    '     The constructor and destructor of this object handles the actual\n' +
    '     creation and deletion of the GL Queries within GL.',
  ' Class to compute the amount of time it takes to fully\n' +
    ' complete a set of GL commands',
  ' GPUTimingClient contains all the gl timing logic that is not specific\n' +
    ' to a single GPUTimer.'
]
gpu_timing_fake.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hdr_metadata_helper_win.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
create_gr_gl_interface.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a GrGLInterface by taking function pointers from the current\n' +
    ' GL bindings.'
]
gl_display_egl_util_ozone.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Forwards calls to PlatformGLEGLUtility. It might be implemented by some\n' +
    ' platforms.'
]
gl_display_initializer.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_factory.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a list of allowed GL implementations. The default implementation will\n' +
    ' be the first item.',
  ' Initializes GL bindings and extension settings.\n' +
    ' |gpu_preference| specifies which GPU to use on a multi-GPU system.\n' +
    ' If its value is kDefault, use the default GPU of the system.',
  ' Initializes GL bindings without initializing extension settings.\n' +
    ' |gpu_preference| specifies which GPU to use on a multi-GPU system.\n' +
    ' If its value is kDefault, use the default GPU of the system.',
  ' Initializes GL bindings - load dlls and get proc address according to gl\n' +
    ' command line switch.',
  ' Initialize plaiform dependent extension settings, including bindings,\n' +
    ' capabilities, etc.',
  ' Initializes GL bindings using the provided parameters. This might be required\n' +
    ' for use in tests.',
  ' Initializes GL platform using the provided parameters. This might be required\n' +
    ' for use in tests. This should be called only after GL bindings are initilzed\n' +
    ' successfully.\n' +
    ' |gpu_preference| specifies which GPU to use on a multi-GPU system.\n' +
    ' If its value is kDefault, use the default GPU of the system.',
  ' Does the same as the above, but returns a cached display if one is already\n' +
    ' initialized for the requested GPU.',
  ' Clears GL bindings and resets GL implementation.\n' +
    ' Calling this function a second time on the same |display| is a no-op.',
  ' Return information about the GL window system binding implementation.\n' +
    ' Returns true if the information was retrieved successfully.',
  ' Creates a GL context that is compatible with the given surface.\n' +
    ' |share_group|, if non-null, is a group of contexts which the internally\n' +
    ' created OpenGL context shares textures and other resources.',
  ' Creates a GL surface that renders directly to a view.',
  ' Creates a GL surface that renders directly into a window with surfaceless\n' +
    ' semantics - there is no default framebuffer and the primary surface must\n' +
    ' be presented as an overlay. If surfaceless mode is not supported or\n' +
    ' enabled it will return a null pointer.',
  ' Creates a GL surface used for offscreen rendering.',
  ' Set platform dependent disabled extensions and re-initialize extension\n' +
    ' bindings.'
]
gl_init_export.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_initializer.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Performs platform dependent one-off GL initialization, calling into the\n' +
    ' appropriate GLSurface code to initialize it. To perform one-off GL\n' +
    ' initialization you should use InitializeGLOneOff() or\n' +
    ' InitializeStaticGLBindingsOneOff() +\n' +
    ' InitializeGLNoExtensionsOneOff(). For tests possibly\n' +
    ' InitializeStaticGLBindingsImplementation() +\n' +
    ' InitializeGLOneOffPlatformImplementation() instead.\n' +
    ' |gpu_preference| specifies which GPU to use on a multi-GPU system.\n' +
    ' If its value is kDefault, use the default GPU of the system.',
  ' Initializes a particular GL implementation.',
  ' Clears GL bindings for all implementations supported by platform.\n' +
    ' Calling this function a second time on the same |display| is a no-op.'
]
ozone_util.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if there is an GLOzone for the specified GL implementation.',
  ' Returns true if there is an GLOzone for the set GL implementation.',
  ' Returns the GLOzone for the specified GL implementation or null if none\n' +
    ' exists.',
  ' Returns the GLOzone for the set GL implementation or null if none exists.'
]
gl_implementation_mojom_traits.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gpu_preference_mojom_traits.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
presenter.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' OverlayImage is a platform specific type for overlay plane image data.',
  ' Provides an abstraction around system api for presentation of the overlay\n' +
    ' planes and control presentations parameters (e.g frame rate). Temporarily is\n' +
    ' in ui/gl. Once its GL deps are resolved, it will be moved to ui/gfx.'
]
progress_reporter.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ProgressReporter is used by ContextGroup and GrGLInterface to report when it\n' +
    ' is making forward progress in execution, delaying activation of the watchdog\n' +
    ' timeout.'
]
scoped_binders.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_egl_image.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a ScopedEGLImage holding an EGLImage that was created from the\n' +
    " passed-in arguments (unless the EGLImage wasn't able to be\n" +
    ' successfully created, in which case the returned object holds null).\n' +
    ' NOTE: The GLDisplay used to create and destroy the image will be\n' +
    ' gl::GLSurfaceEGL::GetGLDisplayEGL()->GetDisplay().\n' +
    ' TODO(blundell): Generalize to pass in the GLDisplay and fold\n' +
    " //components/exo's ScopedEglImage into this one."
]
scoped_make_current.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ScopedMakeCurrent makes given context current with the given surface. If this\n' +
    ' fails, Succeeded() returns false. It also restores the previous context on\n' +
    ' destruction and asserts that this succeeds. Users can optionally use\n' +
    ' Restore() to check if restoring the previous context succeeds. This prevents\n' +
    ' the assert during destruction.'
]
scoped_make_current_unsafe.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Same as ScopedMakeCurrent, but unsafe. Meaning that it doesn't store either\n" +
    ' |context| or |surface| as refptr. The client must ensure those outlive\n' +
    ' |this|.\n' +
    ' TODO(msisov): make ScopedMakeCurrent base and add safe and unsafe\n' +
    ' implementations instead of two independent ones.'
]
scoped_restore_texture.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Restores the texture binding that the passed-in target had at this object's\n" +
    ' creation when this object is destroyed. If a non-zero `new_binding` is passed\n' +
    ' in, binds `target` to it at construction time.'
]
shader_tracking.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
shared_gl_fence_egl.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is an optimized way to share an egl fence among multiple\n' +
    ' consumers. Once the shared |egl_fence_| has been waited upon by any of the\n' +
    " consumer, all the future waits to the same fence becomes no-op since we don't\n" +
    ' need to wait again on the same fence any more. This saves un-neccesary gl\n' +
    ' calls issued to do wait by each consumer.\n' +
    ' This object should only be shared among consumers of the same GL context\n' +
    ' which is true for Webview case.\n' +
    ' TODO(vikassoni): Add logic to handle consumers from different GL context.'
]
swap_chain_presenter.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' SwapChainPresenter holds a swap chain, direct composition visuals, and other\n' +
    ' associated resources for a single overlay layer.  It is updated by calling\n' +
    ' PresentToSwapChain(), and can update or recreate resources as necessary.'
]
sync_control_vsync_provider.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class for providers based on extensions like EGL_CHROMIUM_sync_control.\n' +
    ' TODO(344606399): Consider folding the EGL implementation in this class.'
]
gl_surface_test_support.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_test_helper.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_test_support.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
trace_util.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vsync_provider_win.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vsync_thread_win.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper singleton that wraps a thread which calls IDXGIOutput::WaitForVBlank()\n' +
    ' for the primary monitor and notifies observers. Observers can be added or\n' +
    ' removed from any thread. The vsync thread sleeps when there are no observers.\n' +
    ' This is used by ExternalBeginFrameSourceWin.'
]
gtk_color_mixers.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gtk_compat.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Loads libgtk and related libraries and returns true on success.',
  ' Returns true iff the runtime version of Gtk used meets\n' +
    ' |major|.|minor|.|micro|. LoadGtk() must have been called\n' +
    ' prior to calling this function.',
  ' The below functions replace GTK functions whose interface has\n' +
    ' changed across versions, but whose (symbol) names have not.',
  ' Only available in Gtk3.',
  ' Only available in Gtk3.',
  ' generate_stubs cannot forward to C-style variadic functions, so the\n' +
    ' functions below wrap the corresponding GTK va_list functions.',
  ' These variadic functions do not have corresponding va_list equivalents,\n' +
    ' so instances with only a fixed set of arguments are provided.',
  ' These functions have dropped "const" in their signatures, so cannot be\n' +
    ' declared in *.sigs.',
  ' Some enum values have changed between versions.'
]
gtk_key_bindings_handler.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is a convenience class for handling editor key bindings defined\n' +
    ' in gtk keyboard theme.\n' +
    ' In gtk, only GtkEntry and GtkTextView support customizing editor key bindings\n' +
    ' through keyboard theme. And in gtk keyboard theme definition file, each key\n' +
    ' binding must be bound to a specific class or object. So existing keyboard\n' +
    ' themes only define editor key bindings exactly for GtkEntry and GtkTextView.\n' +
    ' Then, the only way for us to intercept editor key bindings defined in\n' +
    ' keyboard theme, is to create a GtkEntry or GtkTextView object and call\n' +
    ' gtk_bindings_activate_event() against it for the key events. If a key event\n' +
    ' matches a predefined key binding, corresponding signal will be emitted.\n' +
    ' GtkTextView is used here because it supports more key bindings than GtkEntry,\n' +
    ' but in order to minimize the side effect of using a GtkTextView object, a new\n' +
    ' class derived from GtkTextView is used, which overrides all signals related\n' +
    " to key bindings, to make sure GtkTextView won't receive them.\n" +
    ' See third_party/blink/renderer/core/editing/commands/editor_command.cc for\n' +
    ' detailed definition of Blink edit commands.'
]
gtk_types.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file provides types that are only available in specific versions of GTK.',
  ' This struct uses doubles in Gtk3, but floats in Gtk4.'
]
gtk_ui.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface to GTK desktop features.'
]
gtk_ui_factory.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Access point to the GTK desktop system.  This should be the only symbol\n' +
    ' exported from this component.'
]
gtk_ui_platform.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' GtkUiPlatform encapsulates platform-specific functionalities required by\n' +
    ' a Gtk-based LinuxUI implementation.'
]
gtk_ui_platform_stub.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gtk_util.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Sets |dialog| as transient for |parent|, which will keep it on top and center\n' +
    ' it above |parent|. Do nothing if |parent| is nullptr.',
  ' Gets the transient parent aura window for |dialog|.',
  ' Clears the transient parent for |dialog|.',
  ' Disable input events handling on `parent` to make `dialog` modal.  The caller\n' +
    ' is responsible for running the returned closure when the dialog is hidden to\n' +
    ' reenable event processing on `parent`.',
  ' Parses |button_string| into |leading_buttons| and\n' +
    ' |trailing_buttons|.  The string is of the format\n' +
    ' "<button>*:<button*>", for example, "close:minimize:maximize".\n' +
    ' This format is used by GTK settings.',
  ' Converts ui::NativeTheme::State to GtkStateFlags.',
  ' If |context| is nullptr, creates a new top-level style context\n' +
    ' specified by parsing |css_node|.  Otherwise, creates the child\n' +
    ' context with |context| as the parent.',
  ' Parses |css_selector| into a StyleContext.  The format is a\n' +
    ' sequence of whitespace-separated objects.  Each object may have at\n' +
    ' most one object name at the beginning of the string, and any number\n' +
    " of '.'-prefixed classes and ':'-prefixed pseudoclasses.  An example\n" +
    ' is "GtkButton.button.suggested-action:hover:active".  The caller\n' +
    ' must g_object_unref() the returned context.',
  ' Overrides properties on |context| and all its parents with those\n' +
    ' provided by |css|.',
  " Get the 'color' property from the style context created by\n" +
    ' GetStyleContextFromCss(|css_selector|).',
  ' Renders the backgrounds of all ancestors of |context|, then renders\n' +
    ' the background for |context| itself.',
  ' Renders a background from the style context created by\n' +
    ' GetStyleContextFromCss(|css_selector|) into a 24x24 bitmap and\n' +
    ' returns the average color.',
  ' Renders the border from the style context created by\n' +
    ' GetStyleContextFromCss(|css_selector|) into a 24x24 bitmap and\n' +
    ' returns the average color.',
  ' On Gtk3.20 or later, behaves like GetBgColor.  Otherwise, returns\n' +
    ' the background-color property.',
  ' Get the color of the GtkSeparator specified by |css_selector|.',
  ' Get a GtkSettings property as a C++ string.',
  ' Xkb Events store group attribute into XKeyEvent::state bit field, along with\n' +
    ' other state-related info, while GdkEventKey objects have separate fields for\n' +
    ' that purpose, they are ::state and ::group. This function is responsible for\n' +
    ' recomposing them into a single bit field value when translating GdkEventKey\n' +
    ' into XKeyEvent. This is similar to XkbBuildCoreState(), but assumes state is\n' +
    ' an uint rather than an uchar.\n' +
    ' More details:\n' +
    ' https://gitlab.freedesktop.org/xorg/proto/xorgproto/blob/master/include/X11/extensions/XKB.h#L372',
  ' GDK uses different flags for modifiers than are defined in ui::EventFlags.\n' +
    ' This function translates ui::EventFlags to GDK flags.\n' +
    ' More details:\n' +
    ' https://gitlab.gnome.org/GNOME/gtk/-/blob/master/gdk/gdktypes.h#L131',
  ' Translates |key_event| into a GdkEvent. GdkEvent::key::window is the only\n' +
    ' field not set by this function, callers must set it, as the way for\n' +
    ' retrieving it may vary depending on the event being processed. E.g: for IME\n' +
    ' Context impl, X11 window XID is obtained through Event::target() which is\n' +
    ' root aura::Window targeted by that key event.  Only available in GTK3.',
  ' This should only be called on Gtk4.'
]
input_method_context_impl_gtk.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An implementation of LinuxInputMethodContext which uses GtkIMContext\n' +
    ' (gtk-immodule) as a bridge from/to underlying IMEs.'
]
log_noop.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is a no-op logger used to ignore error messages reported by generated\n' +
    ' stub initializers.  Some missing symbols are expected since they may only be\n' +
    ' available in specific versions of GTK.'
]
native_theme_gtk.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A version of NativeTheme that uses GTK-rendered widgets.'
]
nav_button_provider_gtk.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
print_dialog_gtk.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Needs to be freed on the UI thread to clean up its GTK members variables.'
]
printing_gtk_util.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Obtains the paper size through Gtk.',
  ' Initializes a PrintSettings object from the provided Gtk printer objects.'
]
select_file_dialog_linux_gtk.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implementation of SelectFileDialog that shows a Gtk common dialog for\n' +
    ' choosing a file or folder. This acts as a modal dialog.'
]
settings_provider.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is just a switch between SettingsProviderGSettings and\n' +
    " SettingsProviderGtk.  Currently, it is empty and it's only purpose is so\n" +
    ' that GtkUi can store just a std::unique_ptr<SettingsProvider> and not have to\n' +
    ' have the two impls each guarded by their own macros.'
]
settings_provider_gtk.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gtk_ui_platform_wayland.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_frame_provider_gtk.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gtk_event_loop_x11.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gtk_ui_platform_x11.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' GtkUiPlatform implementation for desktop Linux X11 backends.'
]
latency_info_param_traits.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
latency_info_param_traits_macros.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
janky_duration_tracker.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Enables tracking scroll jank. Watches the given directory. On events like\n' +
    ' moving a file into the directory a log message is printed with the current\n' +
    ' jank counts.',
  ' Advances one of the two counters by |count|. The\n' +
    ' switches::kWatchDirForScrollJankReport enables external programs to dump both\n' +
    ' sums to the log. Each process that called this method at least once would\n' +
    ' dump a log line upon such request.'
]
latency_info.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' When adding new components, or new metrics based on LatencyInfo,\n' +
    ' please update latency_info.dot.\n' +
    ' When adding new components, please update\n' +
    ' //third_party/perfetto/protos/perfetto/trace/track_event/chrome_latency_info.proto\n' +
    ' so both this and the internal versions can be kept up to date. Or reach out\n' +
    ' to tracing@chromium.org so we can assist.',
  ' This is declared here for use in gtest-based unit tests, but is defined in\n' +
    ' //ui/latency:test_support target.\n' +
    ' Without this the default PrintTo template in gtest tries to pass LatencyInfo\n' +
    ' by value, which leads to an alignment compile error on Windows.'
]
latency_info_mojom_traits.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cursor_theme_manager_observer.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
device_scale_factor_observer.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
display_server_utils.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ensures Ozone platform command line option is properly set for Linux Desktop\n' +
    ' environment. Unless it is already set in `command_line`, this function\n' +
    ' combines information from ozone-platform-hint command line switch, required\n' +
    ' environment variables, eg: DISPLAY for X11, WAYLAND_DISPLAY for Wayland, etc,\n' +
    ' in order to determine which Ozone platform backend must be selected.',
  ' Returns true if Wayland display variable or socket file is available.',
  ' Returns true if X11 display variable or socket file is available.'
]
fake_linux_ui.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " This class is meant to be overridden by tests.  It's provided as a\n" +
    " convenience so that tests don't have to stub lots of methods just to override\n" +
    ' a single one.'
]
fallback_linux_ui.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " This class is meant to be overridden by tests.  It's provided as a\n" +
    " convenience so that tests don't have to stub lots of methods just to override\n" +
    ' a single one.'
]
linux_ui.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The main entrypoint into Linux toolkit specific code. GTK/QT code should only\n' +
    ' be executed behind this interface.',
  ' TODO(thomasanderson): Remove Profile forward declaration.',
  ' Adapter class with targets to render like different toolkits. Set by any\n' +
    ' project that wants to do linux desktop native rendering.',
  ' This is used internally by LinuxUi implementations and linux_ui_factory to\n' +
    ' allow converting a LinuxUi to a LinuxUiTheme.  Users should not use (and have\n' +
    ' no way of obtaining) an instance of this class.'
]
linux_ui_delegate.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
linux_ui_delegate_stub.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
linux_ui_factory.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns a LinuxUi for the default toolkit.  May create a LinuxUi instance if\n' +
    ' one does not exist.  May return nullptr if no toolkits are available.',
  ' Returns a LinuxUiTheme for the default toolkit.  May create a LinuxUiTheme\n' +
    ' instance if one does not exist.  May return nullptr if no toolkits are\n' +
    ' available.  Should only be used by tests or LinuxUi internals. Otherwise, use\n' +
    ' the accessors in LinuxUiTheme instead.',
  ' Returns all `LinuxUiTheme`s that have been created.'
]
linux_ui_getter.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Use the getters in LinuxUiTheme instead of using this class directly.'
]
nav_button_provider.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
status_icon_linux.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Since linux_ui cannot have dependencies on any chrome browser components\n' +
    ' we cannot inherit from StatusIcon. So we implement the necessary methods\n' +
    ' and let a wrapper class implement the StatusIcon interface and defer the\n' +
    ' callbacks to a delegate. For the same reason, do not use StatusIconMenuModel.'
]
window_button_order_observer.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observer interface to receive the ordering of the min,max,close buttons.'
]
window_frame_provider.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
animation.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is a wrapper over the Skia object for lottie vector graphic\n' +
    ' animations. It has its own timeline manager for the animation controls. The\n' +
    ' framerate of the animation and the animation ticks are controlled externally\n' +
    ' and hence the consumer must manage the timer and call paint at the desired\n' +
    ' frame per second.\n' +
    ' This helps keep multiple animations be synchronized by having a common\n' +
    ' external tick clock.\n' +
    ' Usage example:\n' +
    '   1. Rendering a single frame on the canvas:\n' +
    '        Animation animation_ = Animation(data);\n' +
    '        animation_.Paint(canvas, t);\n' +
    '   2. Playing the animation and rendering each frame:\n' +
    '      void SampleClient::Init() {\n' +
    '        Animation animation_ = Animation(data);\n' +
    '        animation_.Start(Animation::PlaybackConfig::CreateWithStyle(\n' +
    '            Animation::Style::kLinear, *animation_));\n' +
    '      }\n' +
    '      // overrides cc::CompositorAnimationObserver\n' +
    '      void SampleClient::OnAnimationStep(TimeTicks* timestamp) {\n' +
    '        timestamp_ = timestamp;\n' +
    '        SchedulePaint();\n' +
    '      }\n' +
    '      void SampleClient::OnPaint(Canvas* canvas) {\n' +
    '        animation_.Paint(canvas, timestamp_);\n' +
    '      }\n' +
    '   2. If you only want to play a subsection of the animation:\n' +
    '      void SampleClient::Init() {\n' +
    '        // This will seek to the 1st second of the animation and from there\n' +
    '        // play it for 5 seconds.\n' +
    '        Animation animation_ = Animation(data);\n' +
    '        animation_.Start(Animation::PlaybackConfig({\n' +
    '            Seconds(1), Seconds(5), Animation::Style::kLinear}));\n' +
    '      }\n' +
    '      // overrides cc::CompositorAnimationObserver\n' +
    '      void SampleClient::OnAnimationStep(TimeTicks*) {\n' +
    '        timestamp_ = timestamp;\n' +
    '        SchedulePaint();\n' +
    '      }\n' +
    '      void SampleClient::OnPaint(Canvas* canvas) {\n' +
    '        animation_.Paint(canvas, timestamp_, gfx::Size(10, 10));\n' +
    '      }'
]
animation_observer.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
resource.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used for loading a Lottie asset intended as a still image (not animated).',
  ' Used for loading a Lottie asset intended as a still image (not animated),\n' +
    ' with support for using different colors in light mode, dark mode, and\n' +
    ' "elevated" dark mode (see |views::Widget::InitParams::background_elevation|).'
]
fake_message_center.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' MessageCenter implementation of doing nothing. Useful for tests.'
]
empty_lock_screen_controller.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fake_lock_screen_controller.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
lock_screen_controller.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is CONTROLLERd the lock-screen related behavior from\n' +
    ' MessageCenterImpl.'
]
message_center.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface to manage the NotificationList. The client (e.g. Chrome) calls\n' +
    ' [Add|Remove|Update]Notification to create and update notifications in the\n' +
    ' list. It also sends those changes to its observers when a notification\n' +
    ' is shown, closed, or clicked on.\n' +
    ' MessageCenter is agnostic of profiles; it uses the string returned by\n' +
    ' Notification::id() to uniquely identify a notification. It is\n' +
    " the caller's responsibility to formulate the id so that 2 different\n" +
    ' notification should have different ids. For example, if the caller supports\n' +
    ' multiple profiles, then caller should encode both profile characteristics and\n' +
    " notification front end's notification id into a new id and set it into the\n" +
    ' notification instance before passing that in. Consequently the id passed to\n' +
    ' observers will be this unique id, which can be used with MessageCenter\n' +
    ' interface but probably not higher level interfaces.'
]
message_center_export.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines MESSAGE_CENTER_EXPORT so that functionality implemented by the\n' +
    ' message_center module can be exported to consumers.'
]
message_center_impl.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The default implementation of MessageCenter.',
  ' A scoped class to override the params of the notification limit feature.\n' +
    ' NOTE: There should be at the most one instance at any given time.'
]
message_center_observer.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An observer class for the change of notifications in the MessageCenter.\n' +
    ' WARNING: It is not safe to modify the message center from within these\n' +
    ' callbacks.'
]
message_center_stats_collector.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' MessageCenterStatsCollector sends both raw and per-notification statistics\n' +
    ' to the UMA servers, if the user has opted in.  It observes the message center\n' +
    ' to gather its data.'
]
message_center_style.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Given the size of an image, returns the size of the properly scaled-up image\n' +
    ' which fits into |container_size|.'
]
message_center_types.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Identifies the source of a displayed notification.',
  ' Enumeration of quiet mode set by user or focus mode.'
]
notification_blocker.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' NotificationBlocker manages the availability of notifications based on the\n' +
    ' current system status. Each NotificationBlocker implementation covers a\n' +
    ' single state such as screen lock or fullscreen.\n' +
    ' The current notification state is automatically updated when a blocker is\n' +
    ' initialized or destroyed. For instance, the `WelcomeTourNotificationBlocker`\n' +
    ' blocks all existing notifications when it is initialized (see below for how\n' +
    ' to properly initialize a `NotificationBlocker` subclass), and unblocks\n' +
    ' notifications when it is destructed.\n' +
    ' An object of a class that derives from this is not ready until `Init()` has\n' +
    ' been called. The following example demonstrates how to properly initialize\n' +
    ' such an object:\n' +
    '   class MyNotificationBlocker : public NotificationBlocker {\n' +
    '    public:\n' +
    '     MyNotificationBlocker(MessageCenter* message_center, ...)\n' +
    '         : NotificationBlocker(message_center), ... { ... }\n' +
    '    ...\n' +
    '   };\n' +
    '   void foo() {\n' +
    '     MessageCenter* message_center = ...;\n' +
    '     std::unique_ptr<MyNotificationBlocker> my_blocker =\n' +
    '         std::make_unique<MyNotificationBlocker>(message_center, ...);\n' +
    "     my_blocker->Init();  /* DON'T FORGET THIS LINE! */\n" +
    '     ...\n' +
    '   }\n' +
    ' TODO(b/290637034): Improve upon the `Init()` pattern as it is easy to forget\n' +
    ' to call `Init()` when initializing a `NotificationBlocker` subclass.'
]
notification_list.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Comparers used to auto-sort the lists of Notifications.',
  ' An adapter to allow use of the comparers above with std::unique_ptr.',
  ' A helper class to manage the list of notifications.'
]
notification_view_controller.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A controller class to manage adding, removing and updating group\n' +
    ' notifications.'
]
popup_timer.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class that manages timeout behavior for notification popups.  One instance\n' +
    ' is created per notification popup.'
]
popup_timers_controller.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class that manages all the timers running for individual notification popup\n' +
    ' windows.  It supports weak pointers in order to allow safe callbacks when\n' +
    ' timers expire.'
]
message_center_constants.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(estade): many of these constants could be internalized.',
  ' Exported values /////////////////////////////////////////////////////////////',
  ' Square image sizes in DIPs.',
  ' A border is applied to images that have a non-preferred aspect ratio.',
  ' Rounded corners are applied to large and small images in ash',
  ' Limits.',
  ' DIP dimension; H size of the whole card.',
  ' DIP dimension; H size of the whole card.',
  ' Within a notification ///////////////////////////////////////////////////////',
  ' DIP dimensions (H = horizontal, V = vertical).',
  ' H space between the context message and the end of the card.',
  ' Text sizes.',
  ' Line limits.',
  ' Title.',
  ' Message.',
  ' Max number of lines for message_label_.',
  ' For list notifications.\n' +
    ' Not used when --enabled-new-style-notification is set.',
  ' This is an experimental short delay for all notification timeouts.\n' +
    ' It is currently only enabled if the kNotificationExperimentalShortTimeouts\n' +
    ' flag is enabled. If disabled the below delays are used as before.',
  ' Timing. Web Notifications always use high-priority timings except on\n' +
    ' Chrome OS. Given the absence of a notification center on non-Chrome OS\n' +
    " platforms, this improves users' ability to interact with the toasts.",
  ' Buttons.',
  ' Max number of lines for progress notification status_view_.',
  ' Progress bar.',
  ' Around notifications ////////////////////////////////////////////////////////',
  ' Horizontal & vertical thickness of the border around the notifications in the\n' +
    ' notification list.',
  ' Horizontal & vertical space around & between notifications in the\n' +
    ' notification list.',
  ' Horizontal & vertical space around & between popup notifications.',
  ' Radius of the rounded corners of a notification.\n' +
    ' The corners are only rounded in Chrome OS.',
  ' Animation Durations',
  ' Returns the width of the notification.',
  ' Returns the character limit per line; character limit = pixels per line *\n' +
    ' line limit / min. pixels per character.'
]
message_center_public_export.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines MESSAGE_CENTER_PUBLIC_EXPORT so that functionality implemented by the\n' +
    ' message_center module can be exported to consumers.'
]
notification.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents an individual item in NOTIFICATION_TYPE_MULTIPLE notifications.',
  ' Represents a button to be shown as part of a notification.',
  ' Represents rich features available for notifications.'
]
notification_delegate.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Handles actions performed on a notification.',
  ' Ref counted version of NotificationObserver, required to satisfy\n' +
    ' message_center::Notification::delegate_.',
  ' A pass-through which converts the RefCounted requirement to a WeakPtr\n' +
    ' requirement. This class replaces the need for individual delegates that pass\n' +
    ' through to an actual controller class, and which only exist because the\n' +
    ' actual controller has a strong ownership model.',
  ' A simple notification delegate which invokes the passed closure when the body\n' +
    ' or a button is clicked.'
]
notification_types.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Notification types. Used to determine the view that will represent a\n' +
    ' notification.'
]
notifier_id.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This enum is being used for histogram reporting and the elements should not\n' +
    ' be re-ordered.',
  ' A struct that identifies the source of notifications. For example, a web page\n' +
    " might send multiple notifications but they'd all have the same NotifierId.",
  ' Constructor for non WEB_PAGE type. `catalog_name` is required for CrOS system\n' +
    ' notifications.'
]
desktop_message_popup_collection.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The MessagePopupCollection for non-ash Windows/Linux desktop.'
]
large_image_view.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An image container view for notifications. Exported for tests.'
]
message_popup_collection.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Container of notification popups usually shown at the right bottom of the\n' +
    ' screen. Manages animation state and updates these popup widgets.'
]
message_popup_view.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The widget delegate of a notification popup. The view is owned by the widget.'
]
message_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An base class for a notification entry. Contains background and other\n' +
    ' elements shared by derived notification views.'
]
notification_background_painter.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Background Painter for notification. This is for notifications with rounded\n' +
    ' corners inside the unified message center. This draws the rectangle with\n' +
    ' rounded corners.'
]
notification_control_button_factory.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
notification_control_buttons_view.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
notification_header_view.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
notification_input_container.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A view which shows a textfield with a send button for notifications.'
]
notification_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Customized NotificationViewBase for notification on all platforms other\n' +
    ' than ChromeOS. This view is used to displays all current types of\n' +
    ' notification (web, basic, image, and list) except custom notification.'
]
notification_view_base.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug/1241983): Add metadata and builder support to these views.',
  ' CompactTitleMessageView shows notification title and message in a single\n' +
    ' line. This view is used for NOTIFICATION_TYPE_PROGRESS.',
  ' View that displays all current types of notification (web, basic, image, and\n' +
    ' list) except the custom notification. Future notification types may be\n' +
    ' handled by other classes, in which case instances of those classes would be\n' +
    ' returned by the Create() factory method below.'
]
notification_view_util.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the corner radius applied to the large image. Returns `std::nullopt`\n' +
    ' if rounded corners are not required.'
]
padded_button.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' PaddedButtons are ImageButtons whose image can be padded within the button.\n' +
    ' This allows the creation of buttons like the notification close and expand\n' +
    ' buttons whose clickable areas extends beyond their image areas\n' +
    ' (<http://crbug.com/168822>) without the need to create and maintain\n' +
    ' corresponding resource images with alpha padding. In the future, this class\n' +
    ' will also allow for buttons whose touch areas extend beyond their clickable\n' +
    ' area (<http://crbug.com/168856>).'
]
proportional_image_view.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ProportionalImageViews scale and center their images while preserving their\n' +
    ' original proportions.'
]
relative_time_formatter.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Translates the given relative time in |delta| and writes the resulting UI\n' +
    ' string into |relative_time|. That string will be valid for the duration\n' +
    ' written to |next_update|.'
]
caption_style.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
common_theme.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Drawing code that is common for all platforms.'
]
native_theme.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class supports drawing UI controls (like buttons, text fields, lists,\n' +
    ' comboboxes, etc) that look like the native UI controls of the underlying\n' +
    ' platform, such as Windows or Linux. It also supplies default colors for\n' +
    ' dialog box backgrounds, etc., which are obtained from the system theme where\n' +
    ' possible.\n' +
    ' The supported control types are listed in the Part enum.  These parts can be\n' +
    ' in any state given by the State enum, where the actual definition of the\n' +
    ' state is part-specific. The supported colors are listed in the ColorId enum.\n' +
    ' Some parts require more information than simply the state in order to be\n' +
    ' drawn correctly, and this information is given to the Paint() method via the\n' +
    ' ExtraParams union.  Each part that requires more information has its own\n' +
    ' field in the union.\n' +
    ' NativeTheme also supports getting the default size of a given part with\n' +
    ' the GetPartSize() method.',
  ' TODO(crbug.com/40118868): Revisit the macro expression once build flag switch\n' +
    ' of lacros-chrome is complete.'
]
native_theme_android.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Android implementation of native theme support.'
]
native_theme_aura.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Aura implementation of native theme support.'
]
native_theme_base.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Theme support for non-Windows toolkits.'
]
native_theme_constants_fluent.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A sufficiently large value ensures the most round curve for the corners of\n' +
    ' the scrollbar thumb and overlay buttons.',
  ' The value specifies the minimum length the scrollbar thumb can have*.\n' +
    ' We choose 17px for compatibility reasons with the default scrollbar on the\n' +
    ' Windows platform.\n' +
    ' *Please note that when the scrollbar height for the vertical scrollbar\n' +
    ' (or width for horizontal) is less than [1], the thumb does get smaller\n' +
    ' until it disappears when the scrollbar size is less than [2].\n' +
    ' [1] 2 * kFluentScrollbarButtonSideLength + kFluentScrollbarMinimalThumbLength\n' +
    ' [2] 2 * kFluentScrollbarButtonSideLength + 1',
  ' The value represents button height for the vertical scrollbar and width for\n' +
    ' the horizontal. Another side for the corresponding orientation is the same as\n' +
    ' the track thickness.',
  ' Arrow rect side length. The height and width of the rect are equal.',
  ' Arrow rect side length when the button is pressed. The height and width of\n' +
    ' the rect are equal.',
  ' Use this length only when the font that contains arrow icons is not present\n' +
    ' on the device and the default arrows are painted using SkPath. Since the\n' +
    ' scrollbar thickness is an even number, we shift the odd rect from the\n' +
    " button's center. Also, we can avoid the usage of anti-aliasing, which tends\n" +
    ' to produce visual defects on specific scales.',
  ' Offset the arrow icon by this amount off-center, away from the thumb.',
  ' The outline width used to paint track and buttons in High Contrast mode.',
  ' The font that supports the drawing of Fluent scrollbar arrow icons.\n' +
    " Currently, it's only available on Windows 11 by default.",
  ' Fluent scrollbar arrow code points.',
  ' Track and button inset to be applied at the time of painting overlay\n' +
    ' scrollbars. This will yield a 1dp border around the track that is\n' +
    ' transparent yet interactive.'
]
native_theme_export.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines NATIVE_THEME_EXPORT so that functionality implemented by the\n' +
    ' native_theme library can be exported to consumers.'
]
native_theme_features.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines all the command-line switches used by native theme'
]
native_theme_fluent.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_theme_ios.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' iOS implementation of native theme support.'
]
native_theme_mac.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mac implementation of native theme support.',
  ' Mac implementation of native theme support for web controls.\n' +
    ' For consistency with older versions of Chrome for Mac, we do multiply\n' +
    ' the border width and radius by the zoom, unlike the generic impl.'
]
native_theme_observer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observers which are notified when the native theme changes.'
]
native_theme_utils.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The following functions convert various values to strings intended for\n' +
    ' logging. Do not retain the results for longer than the scope in which these\n' +
    ' functions are called.',
  ' Converts NativeTheme::ColorScheme.'
]
native_theme_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A wrapper class for working with custom XP/Vista themes provided in\n' +
    ' uxtheme.dll.  This is a singleton class that can be grabbed using\n' +
    ' NativeThemeWin::instance().\n' +
    ' For more information on visual style parts and states, see:\n' +
    ' http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/commctls/userex/topics/partsandstates.asp',
  ' Windows implementation of native theme class.\n' +
    ' At the moment, this class in in transition from an older API that consists\n' +
    ' of several PaintXXX methods to an API, inherited from the NativeTheme base\n' +
    ' class, that consists of a single Paint() method with a argument to indicate\n' +
    ' what kind of part to paint.'
]
overlay_scrollbar_constants_aura.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(bokan): This is still undetermined. crbug.com/652520.',
  ' Fluent overlay scrollbar animation times are set to align with the Fluent\n' +
    ' design language.'
]
scrollbar_animator_mac.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Timer used for animating scrollbar effects.\n' +
    ' TODO(crbug.com/40626921): Change this to be driven by the client\n' +
    ' (Blink or Views) animation system.'
]
test_native_theme.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
base_keyboard_hook.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base implementation of KeyboardHook for Ozone platforms.\n' +
    ' Holds and provides to the subclasses the set of DOM codes and the callback\n' +
    ' given upon construction.\n' +
    ' Can be used as is, and provides the browser-level lock for the given set of\n' +
    ' keys.  Platforms may implement system-level lock.  The instance of this class\n' +
    ' should enable the lock in constructor and release in in the destructor.'
]
bitmap_cursor.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A cursor that is an SkBitmap combined with a gfx::Point hotspot.'
]
bitmap_cursor_factory.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' CursorFactory implementation for bitmapped cursors.\n' +
    ' This is a base class for platforms where PlatformCursor is an SkBitmap\n' +
    ' combined with a gfx::Point for the hotspot.'
]
egl_util.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
features.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_ozone_egl.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A partial implementation of GLOzone for EGL.'
]
gl_surface_egl_readback.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' GLSurface implementation that renders into a pbuffer and then does a readback\n' +
    ' of pixels into memory. This is intended to be used with SwiftShader where\n' +
    ' there is no FBO implementation for Ozone.'
]
native_pixmap_egl_binding.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A binding maintained between NativePixmap and GL Textures in Ozone.'
]
stub_client_native_pixmap_factory.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Platforms which don't need to share native pixmap use this.\n" +
    ' The caller takes ownership of the instance.'
]
stub_overlay_manager.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
stub_ozone_ui_controls_test_helper.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
demo_window.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gl_renderer.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
renderer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
renderer_base.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
renderer_factory.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
simple_renderer_factory.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
skia_gl_renderer.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
skia_renderer_factory.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
skia_surfaceless_gl_renderer.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
software_renderer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
surfaceless_gl_renderer.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vulkan_overlay_renderer.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vulkan_renderer.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_manager.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
client_native_pixmap_factory_cast.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constructor hook for use in constructor_list.cc'
]
gl_ozone_egl_cast.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' GL implementation using EGL for Ozone cast platform.'
]
gl_surface_cast.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
overlay_manager_cast.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ozone_platform_cast.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constructor hook for use in ozone_platform_list.cc'
]
platform_window_cast.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
surface_factory_cast.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' SurfaceFactoryOzone implementation for OzonePlatformCast.'
]
client_native_pixmap_factory_drm.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constructor hook for use in constructor_list.cc'
]
display_types.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_util.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40285824): Remove this and convert code to safer constructs.',
  " TODO(b/193019614): clean |kMaxDrmCount|'s and |kMaxDrmConnectors|'s\n" +
    ' assignment up once EDID-based ID migration is complete and the flag is\n' +
    ' removed.\n' +
    ' It is safe to assume there will be no more than 256 connected DRM devices.',
  ' It is safe to assume there will be no more than 256 connectors per DRM.',
  ' Using a moderate size e.g. 256 for the cursor is enough in most cases.',
  ' DRM property names.',
  ' DRM property enum to internal type mappings.',
  ' Looks-up and parses the native display configurations returning all available\n' +
    " displays and CRTCs that weren't picked as best CRTC for each connector.\n" +
    ' TODO(markyacoub): Create unit tests that tests the different bits and pieces\n' +
    ' that this function goes through.',
  ' Returns the display infos parsed in |GetDisplayInfosAndInvalidCrtcs|',
  ' Returns a bitmask of possible CRTCs for at least one encoder in\n' +
    ' |encoder_ids|. The index in the bitmask corresponds to drm_crtc_index().',
  ' Returns a list of all possible CRTCs for encoders with IDs in |encoder_ids|.',
  ' Returns a virtual mode based on |base_mode| with its vtotal altered to\n' +
    ' achieve the specified |virtual_refresh_rate|, or nullptr if it could not be\n' +
    ' created.',
  ' Extracts the display modes list from |info| as well as the current and native\n' +
    ' display modes given the |active_pixel_size| which is retrieved from the first\n' +
    ' detailed timing descriptor in the EDID.',
  ' |info| provides the DRM information related to the display, |drm| is the\n' +
    ' access point to the DRM device to which |info| is related to.',
  " Computes the precise minimum vsync rate using the mode's timing details.\n" +
    ' The value obtained from the EDID has a loss of precision due to being an\n' +
    ' integer. The precise rate must correspond to an integer valued vtotal.',
  ' Checks if |mode_size| corresponds to a tile mode size according to\n' +
    ' |tile_property|. Note that this method does not return true for\n' +
    ' tile-composited mode.',
  ' Whether or not |drm| supports supplying modifiers for AddFramebuffer2.',
  " Extracts the DRM |property| current value's enum. Returns an empty string\n" +
    ' upon failure.',
  " Extracts the DRM property's numeric value that maps to |internal_state|.\n" +
    ' Returns the maximal numeric value for uint64_t upon failure.',
  " Returns the internal type value that maps to the DRM property's current\n" +
    ' value. Returns nullptr upon failure.',
  ' Returns the internal type value that maps to |drm_enum| within |array|.\n' +
    ' Returns nullptr upon failure.',
  ' Get the DRM driver name.',
  ' Get an ordered list of preferred DRM driver names for the\n' +
    ' system. Uses DMI information to determine what the system is.',
  ' Given |display_infos|, where each HardwareDisplayControllerInfo can represent\n' +
    ' a regular display or a tile, consolidate all tiles belonging to the same\n' +
    ' display into one HardwareDisplayControllerInfo. All non-tile\n' +
    ' HardwareDisplayControllerInfo will not be altered.',
  ' Get the total tile-composited size of a tiled display.',
  ' A custom comparator of gfx::Size used to sort cursor sizes.'
]
drm_wrapper.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps DRM calls into a tight interface. Used to provide different\n' +
    ' implementations of the DRM calls. For the actual implementation the DRM API\n' +
    ' would be called. In unit tests this interface would be stubbed.'
]
hardware_display_controller_info.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Representation of the information required to initialize and configure a\n' +
    ' native display. |index| is the position of the connection and will be\n' +
    ' used to generate a unique identifier for the display.',
  ' TODO(b/354749719): Add HardwareDisplayControllerInfoList as an alias for\n' +
    ' std::vector<std::unique_ptr<HardwareDisplayControllerInfo>> after removing\n' +
    ' cyclic references between HardwareDisplayControllerInfo and drm_util.h.'
]
scoped_drm_types.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
tile_property.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Properties of a tiled display, comprised of multiple tiles each with their\n' +
    ' own connector. Tiles are typically individual physical panels that are laid\n' +
    ' out in a specific way (usually in a single phsyical enclosure) to create a\n' +
    ' single, tiled display.\n' +
    ' For example, below is a representation of a tiled display with a 2x2\n' +
    ' |tile_layout|:\n' +
    '                   |tile_size|.w\n' +
    '                    +---------+\n' +
    '               +    +---------+---------+    +\n' +
    '               |    |         |         |    |\n' +
    ' |tile_size|.h |    |  (0,0)  |  (1,0)  |    |\n' +
    '               |    |         |         |    |\n' +
    '               +    +---------+---------+    +  |tile_size|.h\n' +
    '                    |         |         |    |  * |tile_layout|.h\n' +
    '                    |  (0,1)  |  (1,1)  |    |\n' +
    '                    |         |         |    |\n' +
    '                    +---------+---------+    +\n' +
    '                    +---------+---------+\n' +
    '              |total_size|.w * |tile_layout|.w\n' +
    ' Where |location| of each tiles are represented by (x, y) in each of the boxes\n' +
    ' above.'
]
crtc_commit_request.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Container holding information for a single CRTC that need to be modeset.\n' +
    ' TODO(markyacoub): PAGE_FLIP could re-use the same CrtcCommitRequest. The\n' +
    ' difference between MODESET and PAGE_FLIP are minimal.'
]
crtc_controller.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wrapper around a CRTC.\n' +
    ' One CRTC can be paired up with one or more connectors. The simplest\n' +
    ' configuration represents one CRTC driving one monitor, while pairing up a\n' +
    ' CRTC with multiple connectors results in hardware mirroring.'
]
drm_device.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_device_generator.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_device_manager.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tracks the mapping between widgets and the DRM devices used to allocate\n' +
    ' buffers for the window represented by the widget.'
]
drm_display.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_dumb_buffer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wrapper for a DRM allocated buffer. Keeps track of the native properties of\n' +
    ' the buffer and wraps the pixel memory into a SkSurface which can be used to\n' +
    ' draw into using Skia.'
]
drm_framebuffer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Abstraction for a DRM buffer that can be scanned-out of.'
]
drm_gpu_display_manager.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_gpu_util.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Describes assignment of CRTC with |crtc_id| to a connector with\n' +
    ' |connector_id|.',
  ' Helper function that finds the property with the specified name.',
  ' If the |property| has a valid ID add it to the |property_set| request.',
  ' Transforms the gamma curve into the drm_color_lut format with `size` entries.',
  ' Parse a Lut blob to retrieve a display::GammaCurve.',
  ' Converts |color_matrix| to a drm_color_ctm in U31.32 format where the most\n' +
    ' significant bit is the sign. If `negative_values_broken` is true, then\n' +
    ' clamp all negative values to 0.',
  ' Parse a CTM blob to retrieve a skcms_Matrix3x3.',
  ' Creates a FB Damage Clip Blob',
  ' Returns the display infos parsed in\n' +
    ' |GetDisplayInfosAndInvalidCrtcs| and disables the invalid CRTCs\n' +
    " that weren't picked as preferred CRTCs.",
  ' Given a list of connectors from |controllers_params|, generate a list of all\n' +
    ' possible CRTC-connector combinations. The returned vector will contain\n' +
    ' permutations that have all the connectors in connectors paired up with each\n' +
    ' of their supported CRTC.',
  ' Apply the color space conversion of `crtc_id` in-place on the specified RGB\n' +
    ' triple.'
]
drm_overlay_candidates.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' OverlayCandidatesOzone implementation that delegates decisions to\n' +
    ' DrmOverlayManager.'
]
drm_overlay_manager.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ozone DRM extension of the OverlayManagerOzone interface. It queries the\n' +
    ' DrmDevice to see if an overlay configuration will work and keeps an MRU cache\n' +
    ' of recent configurations.'
]
drm_overlay_manager_gpu.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' DrmOverlayManager implementation that runs in the GPU process. PostTasks\n' +
    ' overlay validations requests to the DRM thread.'
]
drm_overlay_plane.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_overlay_validator.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_thread.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Holds all the DRM related state and performs all DRM related operations.\n' +
    ' The DRM thread is used to insulate DRM operations from potential blocking\n' +
    ' behaviour on the GPU main thread in order to reduce the potential for jank\n' +
    ' (for example jank in the cursor if the GPU main thread is performing heavy\n' +
    ' operations). The inverse is also true as blocking operations on the DRM\n' +
    ' thread (such as modesetting) no longer block the GPU main thread.'
]
drm_thread_proxy.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mediates the communication between GPU main/compositor/IO threads and the DRM\n' +
    ' thread. It serves proxy objects that are safe to call on the GPU threads. The\n' +
    ' proxy objects then deal with safely posting the messages to the DRM thread.'
]
drm_window.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The GPU object representing a window.\n' +
    ' The main purpose of this object is to associate drawing surfaces with\n' +
    ' displays. A surface created with the same id as the window (from\n' +
    ' GetAcceleratedWidget()) will paint onto that window. A window with\n' +
    ' the same bounds as a display will paint onto that display.\n' +
    " If there's no display whose bounds match the window's, the window is\n" +
    ' disconnected and its contents will not be visible to the user.'
]
drm_window_proxy.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fake_drm_device.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Private types defined in libdrm. Define them here so we can peek at the\n' +
    ' commit and ensure the expected state has been set correctly.',
  ' DRM Object Base IDs:',
  ' Required Connector Property IDs:',
  ' Optional Connector Property IDs:',
  ' Required CRTC Property IDs:',
  ' Optional CRTC Property IDs:',
  ' Required Plane Property IDs:',
  ' Optional Plane Property IDs:',
  ' Blob IDs:',
  " The real DrmDevice makes actual DRM calls which we can't use in unit tests."
]
fake_drm_device_generator.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gbm_overlay_surface.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gbm_pixmap.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gbm_surface_factory.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gbm_surfaceless.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A GLSurface for GBM Ozone platform that uses surfaceless drawing. Drawing and\n' +
    ' displaying happens directly through NativePixmap buffers. CC would call into\n' +
    ' SurfaceFactoryOzone to allocate the buffers and then call\n' +
    ' ScheduleOverlayPlane(..) to schedule the buffer for presentation.'
]
hardware_display_controller.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The HDC will handle modesetting and scanout operations for hardware devices.\n' +
    ' In the DRM world there are 3 components that need to be paired up to be able\n' +
    ' to display an image to the monitor: CRTC (cathode ray tube controller),\n' +
    ' encoder and connector. The CRTC determines which framebuffer to read, when\n' +
    ' to scanout and where to scanout. Encoders converts the stream from the CRTC\n' +
    ' to the appropriate format for the connector. The connector is the physical\n' +
    ' connection that monitors connect to.\n' +
    ' There is no 1:1:1 pairing for these components. It is possible for an encoder\n' +
    ' to be compatible to multiple CRTCs and each connector can be used with\n' +
    ' multiple encoders. In addition, it is possible to use one CRTC with multiple\n' +
    ' connectors such that we can display the same image on multiple monitors.\n' +
    ' For example, the following configuration shows 2 different screens being\n' +
    ' initialized separately.\n' +
    ' -------------      -------------\n' +
    ' | Connector |      | Connector |\n' +
    ' |   HDMI    |      |    VGA    |\n' +
    ' -------------      -------------\n' +
    '       ^                  ^\n' +
    '       |                  |\n' +
    ' -------------      -------------\n' +
    ' |  Encoder1  |     |  Encoder2 |\n' +
    ' -------------      -------------\n' +
    '       ^                  ^\n' +
    '       |                  |\n' +
    ' -------------      -------------\n' +
    ' |   CRTC1   |      |   CRTC2   |\n' +
    ' -------------      -------------\n' +
    ' In the following configuration 2 different screens are associated with the\n' +
    ' same CRTC, so on scanout the same framebuffer will be displayed on both\n' +
    ' monitors.\n' +
    ' -------------      -------------\n' +
    ' | Connector |      | Connector |\n' +
    ' |   HDMI    |      |    VGA    |\n' +
    ' -------------      -------------\n' +
    '       ^                  ^\n' +
    '       |                  |\n' +
    ' -------------      -------------\n' +
    ' |  Encoder1  |     |  Encoder2 |\n' +
    ' -------------      -------------\n' +
    '       ^                  ^\n' +
    '       |                  |\n' +
    '      ----------------------\n' +
    '      |        CRTC1       |\n' +
    '      ----------------------\n' +
    ' Note that it is possible to have more connectors than CRTCs which means that\n' +
    ' only a subset of connectors can be active independently, showing different\n' +
    ' framebuffers. Though, in this case, it would be possible to have all\n' +
    ' connectors active if some use the same CRTC to mirror the display.'
]
hardware_display_plane.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hardware_display_plane_atomic.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hardware_display_plane_manager.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This contains the list of planes controlled by one HDC on a given DRM fd.\n' +
    ' It is owned by the HDC and filled by the CrtcController.'
]
hardware_display_plane_manager_atomic.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hardware_display_plane_manager_legacy.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
inter_thread_messaging_proxy.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_drm_device.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' MockDrmDevice provides a gmockable interface for DrmDevice,\n' +
    ' but also defaults to FakeDrmDevice unless a mock is specified.'
]
mock_drm_modifiers_filter.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mock implementation of a |DrmModifiersFilter| that can be used in unit\n' +
    ' tests without invoking hardware APIs like Vulkan.'
]
page_flip_request.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
page_flip_watchdog.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The maximum amount of time we will wait for a new modeset attempt before we\n' +
    ' crash the GPU process.',
  ' Number of historical page flip statuses to track.\n' +
    ' This number was chosen to collect a large enough sample to detect real\n' +
    ' errors, and with some consideration to the fact that pending page flips can\n' +
    ' be buffered upstream of OzoneDRM.',
  ' Number of times the plane assignment can fail and then succeed within\n' +
    ' |kPageFlipWatcherHistorySize| flip attempts. Exceeding this number will crash\n' +
    ' the process immediately.\n' +
    ' For instance, if S is a successful assignment and F is a failure,\n' +
    ' S-S-F-S-S-F-S would count as two flakes.\n' +
    ' This number was chosen with consideration of a pending page flip buffer\n' +
    ' upstream that might fill with unflippable plane assignments.',
  ' Number of failures permitted by the watchdog, within\n' +
    ' |kPageFlipWatcherHistorySize| flip attempts. Exceeding this number will crash\n' +
    ' the process immediately.\n' +
    ' For instance, if S is a successful assignment and F is a failure,\n' +
    ' S-F-S-F-F-F-F-S-S would lead to a crash.\n' +
    ' This number was chosen with consideration of a pending page flip buffer\n' +
    ' upstream that might fill with unflippable plane assignments.',
  ' Tracks the failures and successes of interactions with DRM and handles\n' +
    ' unrecoverable errors by crashing the process.'
]
proxy_helpers.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Posts a task to a different thread and blocks waiting for the task to finish\n' +
    ' executing.',
  ' Creates a RepeatingCallback that will run |callback| on the calling thread.\n' +
    ' Useful when posting a task on a different thread and expecting a callback\n' +
    ' when the task finished (and the callback needs to run on the original\n' +
    ' thread).',
  ' Creates a OnceCallback that will run |callback| on the calling thread. Useful\n' +
    ' when posting a task on a different thread and expecting a callback when the\n' +
    ' task finished (and the callback needs to run on the original thread).'
]
screen_manager.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Responsible for keeping track of active displays and configuring them.'
]
vulkan_implementation_gbm.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_cursor.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' DrmCursor manages all cursor state but is dependent on an injected\n' +
    ' proxy for how it communicates state changes to other threads or\n' +
    ' processes. The proxy implementation must satisfy DrmCursorProxy.',
  ' DrmCursor manages all cursor state and semantics.'
]
drm_device_connector.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' DrmDeviceConnector sets up mojo pipes connecting the Viz host to the DRM\n' +
    ' service.'
]
drm_display_host.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_display_host_manager.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The portion of the DrmDisplayHostManager implementation that is agnostic\n' +
    ' in how its communication with GPU-specific functionality is implemented.\n' +
    ' This is used from both the IPC and the in-process versions in  MUS.'
]
drm_native_display_delegate.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_window_host.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implementation of the platform window. This object and its handle |widget_|\n' +
    ' uniquely identify a window. Since the DRI/GBM platform is split into 2\n' +
    ' pieces (Browser process and GPU process), internally we need to make sure the\n' +
    ' state is synchronized between the 2 processes.\n' +
    ' |widget_| is used in both processes to uniquely identify the window. This\n' +
    ' means that any state on the browser side needs to be propagated to the GPU.\n' +
    ' State propagation needs to happen before the state change is acknowledged to\n' +
    ' |delegate_| as |delegate_| is responsible for initializing the surface\n' +
    ' associated with the window (the surface is created on the GPU process).'
]
drm_window_host_manager.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Responsible for keeping the mapping between the allocated widgets and\n' +
    ' windows.'
]
gpu_thread_adapter.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides the services that the various host components need\n' +
    ' to use either a GPU process or thread for their implementation.'
]
gpu_thread_observer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observes the channel state.'
]
host_cursor_proxy.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ozone requires a IPC from the browser (or mus-ws) process to the gpu (or\n' +
    ' mus-gpu) process to control the mouse pointer. This class provides mouse\n' +
    ' pointer control via Mojo-style IPC. This code runs only in the mus-ws (i.e.\n' +
    " it's the client) and sends mouse pointer control messages to a less\n" +
    ' priviledged process.'
]
host_drm_device.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is the Viz host-side library for the DRM device service provided by the\n' +
    ' viz process.'
]
ozone_platform_drm.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constructor hook for use in ozone_platform_list.cc'
]
integration_test_helpers.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_controls_system_input_injector.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
client_native_pixmap_factory_flatland.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Flatland-platform constructor hook, for use by the auto-generated platform\n' +
    ' constructor-list.'
]
flatland_connection.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper class used to own fuchsia.ui.composition.Flatland to safely call\n' +
    ' Present. By limiting the number of Present calls, FlatlandConnection\n' +
    ' ensures that the Flatland will not be shut down, thus, users of\n' +
    ' FlatlandConnection should not call Flatland::Present on their own.'
]
flatland_gpu_host.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Browser process object which supports a GPU process host.\n' +
    ' Once a GPU process starts, this objects binds to it over mojo and\n' +
    ' enables exchange of Flatland resources with it. In particular, we must\n' +
    ' exchange export tokens for each view surface, so that the surface can\n' +
    ' present to Flatland views managed by the browser.'
]
flatland_gpu_service.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' GPU process service that enables presentation to Flatland.\n' +
    ' This object exposes a mojo service to the browser process from the GPU\n' +
    ' process. The browser binds it to enable exchange of Flatland resources.\n' +
    ' In particular, we must exchange export tokens for each surface,\n' +
    ' so that surfaces can present to Flatland managed by the browser.'
]
flatland_screen.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A PlatformScreen implementation for Flatland.'
]
flatland_surface.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Holder for Flatland resources backing rendering surface.\n' +
    " This object creates some simple Flatland resources for containing a window's\n" +
    ' texture, and attaches them to the parent View (by sending an IPC to the\n' +
    ' browser process).\n' +
    ' The texture is updated through an image pipe.'
]
flatland_surface_canvas.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' SurfaceOzoneCanvas implementation for FlatlandWindow.'
]
flatland_surface_factory.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
flatland_sysmem_buffer_collection.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' FlatlandSysmemBufferCollection keeps sysmem.BufferCollection interface along\n' +
    ' with the corresponding VkBufferCollectionFUCHSIA. It allows to create either\n' +
    ' gfx::NativePixmap or VkImage from the buffers in the collection.\n' +
    ' A collection can be initialized and used on any thread.  CreateVkImage() must\n' +
    ' be called on the same thread (because it may be be safe to use\n' +
    ' VkBufferCollectionFUCHSIA concurrently on different threads).'
]
flatland_sysmem_buffer_manager.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
flatland_sysmem_native_pixmap.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
flatland_window.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
flatland_window_manager.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Window manager is responsible for mapping window IDs to FlatlandWindow\n' +
    ' instances. Window IDs are integer values that are passed around as\n' +
    ' gpu::AcceleratedWidget. The manager is created and owned by\n' +
    ' OzonePlatformFlatland.\n' +
    ' TODO(sergeyu): Consider updating AcceleratedWidget to store FlatlandWindow*\n' +
    ' which would remove the need for the IDMap.'
]
overlay_manager_flatland.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ozone_platform_flatland.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constructor hook for use in ozone_platform_list.cc'
]
vulkan_implementation_flatland.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
client_native_pixmap_factory_headless.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constructor hook for use in constructor_list.cc'
]
headless_screen.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
headless_surface_factory.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
headless_window.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
headless_window_manager.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ozone_platform_headless.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constructor hook for use in ozone_platform_list.cc'
]
vulkan_implementation_headless.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vulkan_surface_headless.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
client_native_pixmap_factory_wayland.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constructor hook for use in constructor_list.cc'
]
wayland.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_object.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This template forces T to declare a static Instantiate() method.  The\n' +
    ' subclass must implement it as follows:\n' +
    ' void Instantiate(WaylandConnection* connection,\n' +
    '                  wl_registry* registry,\n' +
    '                  uint32_t name,\n' +
    '                  const std::string& interface,\n' +
    '                  uint32_t version)\n' +
    ' - must bind the Wayland object and store it in the connection.',
  ' Checks the given |available_version| exposed by the server against\n' +
    ' |min_version| and |max_version| supported by the client.\n' +
    ' Returns false (with rendering a warning) if |available_version| is less than\n' +
    ' the minimum supported version.\n' +
    ' Returns true otherwise, renders an info message if |available_version| is\n' +
    ' greater than the maximum supported one.',
  ' Puts the forward declaration for struct TYPE and declares the template\n' +
    ' specialisation of ObjectTraits<TYPE>.',
  ' For convenience, keep aphabetical order in this list.'
]
wayland_overlay_config.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_presentation_info.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_util.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constants used to determine how pointer/touch events are processed and\n' +
    ' dispatched.',
  ' Identifies the direction of the "hittest" for Wayland. |connection|\n' +
    ' is used to identify whether values from shell v5 or v6 must be used.',
  ' Draws |bitmap| into |out_buffer|. Returns if no errors occur, and false\n' +
    ' otherwise. It assumes the bitmap fits into the buffer and buffer is\n' +
    " currently mmap'ed in memory address space.",
  ' Helper function to read data from a file.',
  ' Translates bounds relative to top level window to specified parent.',
  ' Translates bounds relative to parent window to top level window.',
  ' Returns wl_output_transform corresponding |transform|. |transform| is an\n' +
    ' enumeration of a fixed selection of transformations.',
  ' |bounds| contains |rect|. ApplyWaylandTransform() returns the resulted\n' +
    ' |rect| after transformation is applied to |bounds| containing |rect| as a\n' +
    ' whole.',
  ' |bounds| contains |rect|. ApplyWaylandTransform() returns the resulted\n' +
    ' |rect| after transformation is applied to |bounds| containing |rect| as a\n' +
    ' whole.',
  ' Applies transformation to |size|.',
  ' Returns the root WaylandWindow for the given wl_surface.',
  ' Returns bounds of the given window, adjusted to its subsurface. We need to\n' +
    ' adjust bounds because WaylandWindow::GetBounds() returns absolute bounds in\n' +
    ' pixels, but wl_subsurface works with bounds relative to the parent surface\n' +
    ' and in DIP.',
  ' Returns rectangles dictated by SkPath.',
  ' Returns converted SkPath in DIPs from the one in pixels.',
  ' Converts SkColor into wl_array.',
  ' Converts SkColor4f into wl_array.',
  ' Converts Transform into wl_array.',
  ' Converts `milliseconds`, which is server dependent, to base::TimeTicks.',
  ' A scale less than 1 can cause borders to not be rendered properly. So this\n' +
    ' ensures the scale is at least 1.',
  ' Common event dispatch handler for wayland drag sessions. Returns true if the\n' +
    ' platform event was handled and event propagation should stop.\n' +
    ' `start_drag_ack_received` should be true if the server has acknowledged the\n' +
    " client's start_drag request. `cancel_drag_cb` may be run if the drag session\n" +
    ' needs to be cancelled by the client.',
  ' Logs connection state to UMA.'
]
wayland_input_emulate.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Uses the ui_controls protocol extension to emulate Keyboard, Pointer, and\n' +
    " Touch events that the interactive_ui_tests test suite sends. Mustn't be\n" +
    ' linked in production code.'
]
drm_render_node_handle.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A wrapper around a DRM render node device handle.'
]
drm_render_node_path_finder.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A helper class that finds a DRM render node device and returns a path to it.'
]
gbm_pixmap_wayland.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gbm_surfaceless_wayland.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A GLSurface for Wayland Ozone platform that uses surfaceless drawing. Drawing\n' +
    ' and displaying happens directly through NativePixmap buffers. CC would call\n' +
    ' into SurfaceFactoryOzone to allocate the buffers and then call\n' +
    ' ScheduleOverlayPlane(..) to schedule the buffer for presentation.'
]
gl_surface_egl_readback_wayland.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is a GLSurface implementation that uses glReadPixels to populate a\n' +
    ' shared memory region with the contents of the surface, and then passes the\n' +
    ' shared memory region to Wayland for presentation.\n' +
    ' Basic control flow:\n' +
    '   1. Resize() creates kMaxBuffers shared memory regions. These are added to\n' +
    '   available_buffers_ and registered with Wayland via CreateShmBasedBuffer().\n' +
    '   2. SwapBuffersAsync() calls glReadPixels() to read the contents of the\n' +
    '   active GL context into the next available shared memory region. The shared\n' +
    '   memory region is immediately sent to Wayland via CommitBuffer().\n' +
    '   3. The buffer is not available for reuse until OnSubmission() is called.\n' +
    ' Note: This class relies on the assumption that kMaxBuffers is necessary and\n' +
    ' sufficient. The behavior is undefined if SwapBuffersAsync() is called and no\n' +
    ' buffers are available.'
]
gl_surface_wayland.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' GLSurface class implementation for wayland.'
]
vulkan_implementation_wayland.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_buffer_manager_gpu.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Forwards calls through an associated mojo connection to WaylandBufferManager\n' +
    ' on the browser process side.\n' +
    " It's guaranteed that WaylandBufferManagerGpu makes mojo calls on the right\n" +
    ' sequence.'
]
wayland_canvas_surface.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WaylandCanvasSurface creates an SkCanvas whose contents is backed by a shared\n' +
    ' memory region. The shared memory region is registered with the Wayland server\n' +
    ' as a wl_buffer.\n' +
    ' Basic control flow:\n' +
    '   1. WaylandCanvasSurface creates an anonymous shared memory region.\n' +
    '   2. WaylandCanvasSurface creates an SkCanvas that rasters directly into\n' +
    '   this shared memory region.\n' +
    '   3. WaylandCanvasSurface registers the shared memory region with the\n' +
    '   WaylandServer via IPC through WaylandBufferManagerGpu and\n' +
    '   WaylandBufferManagerHost. See\n' +
    '   WaylandBufferManagerHost::CreateShmBasedBuffer. This creates a wl_buffer\n' +
    '   object in the browser process.\n' +
    '   4. WaylandCanvasSurface::CommitBuffer simply routes via IPC through the\n' +
    '   browser process to the Wayland server. It is not safe to modify the shared\n' +
    '   memory region in (1) until OnSubmission/OnPresentation callbacks are\n' +
    '   received.'
]
wayland_gl_egl_utility.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Allows EGL to ask platforms for platform specific EGL attributes.'
]
wayland_overlay_candidates.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' OverlayCandidatesOzone implementation that delegates overlay decision to\n' +
    ' WaylandOverlayManager.'
]
wayland_overlay_manager.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ozone Wayland extension of the OverlayManagerOzone interface. It verifies the\n' +
    " minimum validity of overlay candidates. Candidates' buffers are forwarded to\n" +
    ' Wayland server as Wayland subsurfaces. Actual HW overlay promotion happens\n' +
    ' later in Wayland Server.'
]
wayland_surface_factory.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_surface_gpu.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is a common interface for surfaces created in the GPU process. The\n' +
    ' purpose of this is receiving submission and presentation callbacks from the\n' +
    ' WaylandBufferManagerGpu whenever the browser process has completed presenting\n' +
    ' the buffer.'
]
dump_util.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Produces comma separated string of the values in the map\n' +
    ' whose key matches the give mask.',
  ' Return the value of the map matching the given key, or return\n' +
    ' `defualt_value`.'
]
fractional_scale_manager.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Sets up the global wp_fractional_scale_manager_v1 instance.'
]
gtk_primary_selection_device.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class provides access to primary selection clipboard available on GTK.'
]
gtk_primary_selection_device_manager.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gtk_primary_selection_offer.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class represents a piece of data offered for transfer by another client,\n' +
    ' the source client (see GtkPrimarySelectionSource for more). It is used by the\n' +
    ' primary selection mechanism.\n' +
    ' The offer describes MIME types that the data can be converted to and provides\n' +
    ' the mechanism for transferring the data directly from the source client.'
]
gtk_shell1.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
gtk_surface1.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
linux_ui_delegate_wayland.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
org_gnome_mutter_idle_monitor.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps org.gnome.Mutter.IdleMonitor D-Bus system service.'
]
org_kde_kwin_idle.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps the KDE Wayland user idle time manager, which is provided via\n' +
    ' org_kde_kwin_idle interface.'
]
overlay_prioritizer.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps the overlay-prioritizer, which is provided via\n' +
    ' overlay_prioritizer interface.'
]
wayland_proxy.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A proxy interface to Ozone/Wayland that is used by input emulation. The\n' +
    " reason why this is needed is that input emulation mustn't be part of\n" +
    ' Chromium and only be used and compiled when there is a need to run tests.\n' +
    ' This nicely separates Ozone/Wayland from input emulation and provides just\n' +
    ' core functionality that input emulation needs from Ozone/Wayland.'
]
wayland_proxy_impl.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
shell_object_factory.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates Wayland shell objects.'
]
shell_popup_wrapper.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wrapper interface for shell popups.\n' +
    ' This is one of three wrapper classes: Shell{Surface,Toplevel,Popup}Wrapper.\n' +
    ' It has the only sub-class in Chromium, but should not be removed because it\n' +
    ' eases downstream implementations.\n' +
    ' See https://crbug.com/1402672\n' +
    ' Allows WaylandPopup to do stuff specific to popups, such as anchoring the\n' +
    ' window and grabbing the pointer.'
]
shell_surface_wrapper.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wrapper interface for shell surfaces.\n' +
    ' This is one of three wrapper classes: Shell{Surface,Toplevel,Popup}Wrapper.\n' +
    ' It has the only sub-class in Chromium, but should not be removed because it\n' +
    ' eases downstream implementations.\n' +
    ' See https://crbug.com/1402672'
]
shell_toplevel_wrapper.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wrapper interface for shell top level windows.\n' +
    ' This is one of three wrapper classes: Shell{Surface,Toplevel,Popup}Wrapper.\n' +
    ' It has the only sub-class in Chromium, but should not be removed because it\n' +
    ' eases downstream implementations.\n' +
    ' See https://crbug.com/1402672\n' +
    ' Allows WaylandToplevelWindow to set window-like properties such as maximize,\n' +
    ' fullscreen, and minimize, set application-specific metadata like title and\n' +
    ' id, as well as trigger user interactive operations such as interactive resize\n' +
    ' and move.',
  ' Look for `value` in `wl_array` in C++ style.'
]
single_pixel_buffer.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps the single-pixel-buffer, which is provided via\n' +
    ' single_pixel_buffer interface.'
]
surface_augmenter.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps the surface-augmenter, which is provided via\n' +
    ' surface_augmenter interface.'
]
toplevel_icon_manager.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Sets up the global xdg_toplevel_icon_manager_v1 instance.'
]
wayland_async_cursor.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_bubble.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A WaylandWindow implementation to show kBubble and kPopup widgets.\n' +
    ' Implemented using a wl_subsurface object.'
]
wayland_buffer_backing.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This represents a dmabuf/shm buffer, which the GPU process creates when\n' +
    " CreateBuffer is called. It's used for asynchronous buffer creation. It\n" +
    ' dynamically requests wl_buffer objects when a buffer should be attached to a\n' +
    ' wl_surface.\n' +
    ' Has one-to-many relationship with WaylandBufferHandle.'
]
wayland_buffer_backing_dmabuf.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manager of wl_buffers backed by a dmabuf buffer.'
]
wayland_buffer_backing_shm.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manager of wl_buffers backed by a shm buffer.'
]
wayland_buffer_backing_single_pixel.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manager of single pixel solid color wl_buffers.'
]
wayland_buffer_backing_solid_color.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Manager of non-backed (that is, gpu side doesn't create any backings) solid\n" +
    ' color wl_buffers.'
]
wayland_buffer_factory.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A factory that wraps different wayland objects that are able to create\n' +
    ' wl_buffers.'
]
wayland_buffer_handle.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is a wrapper of a wl_buffer. Instances of this class are managed by the\n' +
    ' corresponding WaylandBufferBackings.'
]
wayland_buffer_manager_connector.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A connector class which instantiates a connection between\n' +
    ' WaylandBufferManagerGpu on the GPU side and the WaylandBufferManagerHost\n' +
    ' object on the browser process side.'
]
wayland_buffer_manager_host.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is the buffer manager which creates wl_buffers based on dmabuf (hw\n' +
    ' accelerated compositing) or shared memory (software compositing) and uses\n' +
    ' internal representation of surfaces, which are used to store buffers\n' +
    ' associated with the WaylandWindow.'
]
wayland_clipboard.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is a wrapper around Wayland data_device protocols that simulates\n' +
    ' typical clipboard operations. Unlike some other platforms, data-transfer is\n' +
    ' an async, lazy operation. This means that even after "writing" data to the\n' +
    ' system clipboard, this class must still hold on to a local cache of the\n' +
    ' clipboard contents, since it may be read (repeatedly) by other Wayland\n' +
    ' clients.\n' +
    ' WaylandDataDeviceManager singleton is required to be up and running for\n' +
    ' WaylandClipboard to be minimally functional.'
]
wayland_connection.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These values are persisted to logs.  Entries should not be renumbered and\n' +
    ' numeric values should never be reused.\n' +
    ' Append new shells before kMaxValue and update LinuxWaylandShell\n' +
    ' in tools/metrics/histograms/enums.xml accordingly.\n' +
    ' See also tools/metrics/histograms/README.md#enum-histograms'
]
wayland_cursor.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface through which WaylandCursor notifies the listener that it has\n' +
    ' attached another buffer to the pointer surface.  The listener may free the\n' +
    ' previous buffer if it was holding it.',
  ' Manages the actual visual representation (what users see drawn) of the\n' +
    " 'pointer' (which is the Wayland term for mouse/mice).\n" +
    ' Encapsulates the low-level job such as surface and buffer management and\n' +
    ' Wayland protocol calls.'
]
wayland_cursor_factory.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' CursorFactory implementation for Wayland.\n' +
    ' This CursorFactory implementation generates WaylandAsyncCursor objects, which\n' +
    ' are wrappers for BitmapCursor that allows cursor images to be asynchronously\n' +
    ' loaded.\n' +
    ' During normal operation, and assuming an empty cache, the sequence of\n' +
    ' functions that are called to actually get the cursor image where it needs to\n' +
    ' be goes as follows:\n' +
    ' - wl_cursor_theme_load is invoked to load the theme by the IO thread, which\n' +
    ' then invokes...\n' +
    ' - FinishThemeLoad on the UI thread, which invokes ThemeData::SetLoadedTheme,\n' +
    ' which then invokes its registered callbacks, the only one currently being...\n' +
    ' - FinishCursorLoad, which obtains the appropriate cursor image from the\n' +
    ' cursor theme and calls WaylandAsyncCursor::SetLoadedCursor on the cursor\n' +
    ' object that was returned earlier by GetDefaultCursor with the actual\n' +
    ' BitmapCursor.\n' +
    ' This will invoke all callbacks registered on the WaylandAsyncCursor object\n' +
    ' using WaylandAsyncCursor::OnCursorLoaded, with the only one currently being\n' +
    ' WaylandWindow::OnCursorLoaded which uses the obtained BitmapCursor object to\n' +
    ' set the cursor image on the window.'
]
wayland_cursor_position.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Stores last known cursor pointer position relative to 0,0 origin\n' +
    ' and returns it on request.'
]
wayland_cursor_shape.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps the cursor_shape interface for Wayland server-side cursor support.'
]
wayland_data_device.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class provides access to inter-client data transfer mechanisms\n' +
    ' such as copy-and-paste and drag-and-drop mechanisms.'
]
wayland_data_device_base.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implements high level (protocol-agnostic) interface to a Wayland data device.'
]
wayland_data_device_manager.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_data_drag_controller.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WaylandDataDragController implements regular mouse/touch-driven data exchange\n' +
    ' on top of the Wayland Drag-and-Drop protocol. Data can be dragged within\n' +
    ' Chromium windows, or between Chromium and other applications in both\n' +
    ' directions.\n' +
    ' Outgoing drag sessions start via the StartSession() method. For more context,\n' +
    ' see WaylandTopLevelWindow::StartDrag().\n' +
    ' Incoming drag sessions start with calls to OnDragOffer/OnDragEnter() from the\n' +
    " Wayland side (the data device), and end up in calls to WaylandWindow's\n" +
    ' OnDragEnter() and OnDragDataAvailable(), but two ways of getting there are\n' +
    ' possible:\n' +
    ' 1. The drag has been initiated from a Chromium window. In this case, the data\n' +
    ' that is being dragged is available right away, and therefore the controller\n' +
    ' can forward the data to the window immediately.\n' +
    ' 2. The data is being dragged from another application. In this case, the\n' +
    ' window is notified right away about the enter event and a data fetching task\n' +
    ' is posted to the thread pool. Once fully fetched, the data is delivered to\n' +
    ' the entered window. If the drag cursor leaves the window or the entered\n' +
    ' windows gets destroyed while the data is still being fetched, the fetching\n' +
    ' task is cancelled and the whole drag session is aborted.'
]
wayland_data_offer.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class represents a piece of data offered for transfer by another\n' +
    ' client, the source client (see WaylandDataSource for more).\n' +
    ' It is used by the copy-and-paste and drag-and-drop mechanisms.\n' +
    ' The offer describes the different mime types that the data can be\n' +
    ' converted to and provides the mechanism for transferring the data\n' +
    ' directly from the source client.'
]
wayland_data_offer_base.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implements common part of WaylandDataOffer and GtkPrimarySelectionOffer\n' +
    ' (which is handling of the clipboard data).'
]
wayland_data_source.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' DataSource represents the source side of a DataOffer. It is created by the\n' +
    ' source client in a data transfer and provides a way to describe the offered\n' +
    ' data and a way to respond to requests to transfer the data. There are a few\n' +
    ' variants of Wayland protocol objects and extensions supporting different\n' +
    ' features. E.g: regular copy/paste and drag operations are implemented by\n' +
    ' wl_data_source (along with its _device and _offer counterparts), etc.\n' +
    ' Implementation wise, these variants are share a single class template, with\n' +
    ' specializations defined for each underlying supported extensions. Below are\n' +
    ' the type aliases for the variants currently supported.',
  ' Template class implementing DataSource, whereas T is the underlying source\n' +
    ' type, e.g: wl_data_source, gtk_primary_selection_source, etc. This class\n' +
    ' is not supposed to be used directly, instead use the aliases defined above.'
]
wayland_drm.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wrapper around |wl_drm| Wayland factory, which creates\n' +
    ' |wl_buffer|s backed by dmabuf prime file descriptors.'
]
wayland_event_source.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wayland implementation of ui::PlatformEventSource. It polls for events\n' +
    ' through WaylandEventWatcher and centralizes the input and focus handling\n' +
    ' logic within Ozone Wayland backend. In order to do so, it also implements the\n' +
    " input objects' delegate interfaces, which are the entry point of event data\n" +
    ' coming from input devices, e.g: wl_{keyboard,pointer,touch}, which are then\n' +
    ' pre-processed, translated into ui::Event instances and dispatched to the\n' +
    ' PlatformEvent system.'
]
wayland_exchange_data_provider.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tells if |mime_type| is supported for Drag and Drop operations.'
]
wayland_frame_manager.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Representation of a graphical frame update (DrawingFrame), stores the\n' +
    ' configuration information required to present this frame across Wayland. It\n' +
    ' also has information about when/whether resources of the frame has been\n' +
    ' presented and released.',
  ' This is the frame update manager that configures graphical window/surface\n' +
    ' state and submits buffer swaps to a window. Meanwhile it keeps track of the\n' +
    ' pending/submitted swaps in order to send the acknowledgements back to gpu\n' +
    ' process.'
]
wayland_input_controller.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Create an input controller for wayland platform.'
]
wayland_input_method_context.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_keyboard.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_menu_utils.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_output.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WaylandOutput objects keep track of wl_output information received through\n' +
    ' the Wayland protocol, along with other related protocol extensions, such as,\n' +
    " xdg-output and ChromeOS's aura-shell."
]
wayland_output_manager.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_pointer.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps the wl_pointer object and injects event data through\n' +
    ' |WaylandPointer::Delegate| interface.'
]
wayland_popup.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_screen.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A PlatformScreen implementation for Wayland.'
]
wayland_seat.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps the Wayland seat abstraction.\n' +
    ' See https://wayland-book.com/seat.html'
]
wayland_serial_tracker.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Utility classes that help on tracking and retrieving "serial" values and\n' +
    ' meta-data, received through Wayland protocol events. Each serial value is\n' +
    ' associated with an event type, which is represented by a SerialType enum\n' +
    ' entry.\n' +
    ' Note: SerialTracker must not be used to track related input object states,\n' +
    ' e.g: whether a pointer button is pressed, or whether there are active touch\n' +
    ' points. Instead, other specific APIs should be added/used for that.'
]
wayland_shm.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wrapper around |wl_shm| Wayland factory, which creates\n' +
    ' |wl_buffer|s backed by a fd to a shared memory.'
]
wayland_shm_buffer.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Encapsulates a Wayland SHM buffer, covering basically 2 use cases:\n' +
    " (1) Buffers created and mmap'ed locally to draw skia bitmap(s) into; and\n" +
    ' (2) Buffers created using file descriptor (e.g: sent by gpu process/thread,\n' +
    ' through IPC), not mapped in local memory address space.\n' +
    ' WaylandShmBuffer is moveable, non-copyable, and is assumed to own both\n' +
    ' wl_buffer and WritableSharedMemoryMapping (if any) instance.'
]
wayland_subsurface.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps a wl_surface with a wl_subsurface role assigned. It is used to submit a\n' +
    ' buffer as a sub region of WaylandWindow.\n' +
    " Inherits base::LinkNode<> s.t. it's location in the subsurface stack can be\n" +
    ' tracked and prevent us from sending excessive wl_subsurface.place_below/above\n' +
    ' requests.'
]
wayland_surface.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wrapper of a wl_surface, owned by a WaylandWindow or a WlSubsurface.'
]
wayland_toplevel_window.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_touch.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_window.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_window_drag_controller.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Drag controller implementation that drives window moving sessions (aka: tab\n' +
    ' dragging). Wayland Drag and Drop protocol is used, under the hood, to keep\n' +
    ' track of cursor location and surface focus.\n' +
    ' TODO(crbug.com/40598679): Use drag icon to emulate window moving.',
  ' Stream operator so WaylandWindowDragController::State can be used in\n' +
    ' log/assertion statements.'
]
wayland_window_manager.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Stores and returns WaylandWindows. Clients that are interested in knowing\n' +
    ' when a new window is added or removed, but set self as an observer.'
]
wayland_window_observer.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observers for window management notifications.'
]
wayland_zaura_output.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps the zaura_output object.'
]
wayland_zaura_output_manager_v2.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps the zaura_output_manager_v2 global object. Handles output configuration\n' +
    ' state transactions and various output operations (e.g. activation). This\n' +
    ' subsumes the responsibilities of other output extensions such as xdg_output\n' +
    ' and aura_output.'
]
wayland_zaura_shell.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps the zaura_shell object.'
]
wayland_zaura_surface.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wrapper class for an instance of the zaura_surface client-side wayland\n' +
    ' object.'
]
wayland_zcr_color_management_output.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WaylandZcrColorManagementOutput tracks the color space of its associated\n' +
    ' Wayland Output.'
]
wayland_zcr_color_management_surface.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(b/237094484): merge into wayland_surface.h along with\n' +
    ' color_space_creator zcr_color_mangement_surface_v1'
]
wayland_zcr_color_manager.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wrapper around |zcr_color_manager_v1| Wayland factory'
]
wayland_zcr_color_space.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ZcrColorSpace is used to send color space information over wayland protocol.\n' +
    ' its requests and events are specified in chrome-color-management.xml.\n' +
    ' The ui::gfx::ColorSpace equivalent of ZcrColorSpace can be gotten with\n' +
    ' gfx_color_space().'
]
wayland_zcr_color_space_creator.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WaylandZcrColorSpaceCreator is used to create a zcr_color_space_v1 object\n' +
    ' that can be sent to exo over wayland protocol.'
]
wayland_zcr_cursor_shapes.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps the zcr_cursor_shapes interface for Wayland (exo) server-side cursor\n' +
    ' support. Exists to support Lacros, which uses server-side cursors for\n' +
    ' consistency with ARC++ and for accessibility support.'
]
wayland_zcr_touchpad_haptics.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps the zcr_touchpad_haptics object.'
]
wayland_zwp_linux_dmabuf.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wrapper around |zwp_linux_dmabuf_v1| Wayland factory, which creates\n' +
    ' |wl_buffer|s backed by dmabuf prime file descriptor.'
]
wayland_zwp_pointer_constraints.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps the zwp_pointer_constraints_v1 object.'
]
wayland_zwp_pointer_gestures.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps the zwp_pointer_gestures and zwp_pointer_gesture_pinch_v1 objects.'
]
wayland_zwp_relative_pointer_manager.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps the zwp_relative_pointer_manager_v1 object.'
]
xdg_activation.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implements the XDG activation Wayland protocol extension.'
]
xdg_foreign_wrapper.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A wrapper for xdg foreign objects. Exports surfaces that have xdg_surface\n' +
    ' roles and asynchronously returns handles for them. Only xdg_surface surfaces\n' +
    ' may be exported. Currently supports only exporting surfaces.'
]
xdg_output.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
xdg_popup_wrapper_impl.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Popup wrapper for xdg-shell stable\n' +
    ' Note that XDG does not allow {0, 0} geometries in its protocol, but this is\n' +
    ' allowed in Chrome. All {0, 0} bounds will be resized to {1, 1}.'
]
xdg_surface_wrapper_impl.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Surface wrapper for xdg-shell stable'
]
xdg_toplevel_wrapper_impl.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Toplevel wrapper for xdg-shell stable'
]
zwp_idle_inhibit_manager.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps the idle inhibit manager, which is provided via\n' +
    ' zwp_idle_inhibit_manager_v1 interface.'
]
zwp_primary_selection_device.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class provides access to primary selection clipboard'
]
zwp_primary_selection_device_manager.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
zwp_primary_selection_offer.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class represents a piece of data offered for transfer by another client,\n' +
    ' the source client (see ZwpPrimarySelectionSource for more). It is used by the\n' +
    ' primary selection mechanism.\n' +
    ' The offer describes MIME types that the data can be converted to and provides\n' +
    ' the mechanism for transferring the data directly from the source client.'
]
zwp_text_input_wrapper.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Client interface which handles wayland text input callbacks',
  ' A wrapper around different versions of wayland text input protocols.\n' +
    ' Wayland compositors support various different text input protocols which\n' +
    ' all from Chromium point of view provide the functionality needed by Chromium\n' +
    ' IME. This interface collects the functionality behind one wrapper API.'
]
zwp_text_input_wrapper_v1.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Text input wrapper for text-input-unstable-v1'
]
zwp_text_input_wrapper_v3.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Text input wrapper for text-input-unstable-v3'
]
wayland_overlay_config_mojom_traits.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_presentation_info_mojom_traits.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ozone_platform_wayland.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constructor hook for use in ozone_platform_list.cc'
]
global_object.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class for managing the lifecycle of global objects.\n' +
    ' Represents a global object used to emit global events to all clients.'
]
mock_pointer.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_surface.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage client surface'
]
mock_wayland_platform_window_delegate.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_wayland_zcr_color_manager.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage zwp_linux_buffer_params_v1'
]
mock_wp_presentation.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_xdg_activation_v1.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_xdg_shell.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage xdg_shell object.'
]
mock_xdg_surface.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage xdg_surface, zxdg_surface_v6 and zxdg_toplevel for providing desktop\n' +
    ' UI.',
  ' Manage zxdg_toplevel for providing desktop UI.'
]
mock_xdg_toplevel_icon.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_zcr_extended_text_input.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage zcr_extended_text_input_v1.'
]
mock_zwp_linux_dmabuf.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage zwp_linux_dmabuf_v1 object.'
]
mock_zwp_text_input.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage zwp_text_input_v1.'
]
mock_zwp_text_input_wrapper_client.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scoped_wl_array.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
server_object.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class for managing the life cycle of server objects.',
  ' Does not transfer ownership of the user_data.  Use with caution.  The only\n' +
    ' legitimate purpose is setting more than one implementation to the same user\n' +
    ' data.'
]
test_alpha_blending.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_alpha_compositing.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage wl_viewporter object.'
]
test_augmented_subsurface.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage surface_augmenter object.'
]
test_augmented_surface.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_buffer.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage wl_buffer object.'
]
test_compositor.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage wl_compositor object.'
]
test_data_device.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_data_device_manager.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage wl_data_device_manager object.'
]
test_data_offer.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_data_source.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_gtk_primary_selection.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_keyboard.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_output.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Handles the server-side representation of the wl_output. Values stored in\n' +
    ' `metrics_` are propagated to clients when `Flush()` is called. This occurs\n' +
    ' when the client first binds the output and output extensions are set by\n' +
    ' default.'
]
test_output_metrics.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Metrics for testing wayland_output and its extensions.'
]
test_overlay_prioritized_surface.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_overlay_prioritizer.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage overlay_prioritizer object.'
]
test_positioner.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A simple positioner object that provides a collection of rules of a child\n' +
    ' surface relative to a parent surface.'
]
test_region.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_seat.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manages a global wl_seat object.\n' +
    ' A seat groups keyboard, pointer, and touch devices.  This object is\n' +
    ' published as a global during start up, or when such a device is hot plugged.\n' +
    ' A seat typically has a pointer and maintains a keyboard focus and a pointer\n' +
    ' focus.\n' +
    ' https://people.freedesktop.org/~whot/wayland-doxygen/wayland/Server/structwl__seat__interface.html'
]
test_selection_device_manager.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base classes for data device implementations. Protocol specific derived\n' +
    ' classes must bind request handlers and factory methods for data device and\n' +
    ' source instances. E.g: Standard data device (wl_data_*), as well as zwp and\n' +
    ' gtk primary selection protocols.'
]
test_subcompositor.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage wl_compositor object.'
]
test_subsurface.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_surface_augmenter.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage surface_augmenter object.'
]
test_touch.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_viewport.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_viewporter.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage wl_viewporter object.'
]
test_wayland_server_thread.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Server configuration related enums and structs.',
  ' Text input protocol type.',
  ' A custom listener that holds wl_listener and the pointer to a test_server.'
]
test_wayland_zcr_color_management_output.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_wayland_zcr_color_management_surface.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_wayland_zcr_color_space.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage zcr_color_space_v1_interface'
]
test_wayland_zcr_color_space_creator.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_wp_pointer_gestures.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage zwp_pointer_gestures_v1 object.'
]
test_xdg_popup.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zaura_output.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Handles the server-side representation of the zaura_output.'
]
test_zaura_output_manager.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zaura_output_manager_v2.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zaura_popup.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manages zaura_popup object.'
]
test_zaura_shell.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zaura_surface.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manages zaura_surface object.'
]
test_zaura_toplevel.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manages zaura_toplevel object.'
]
test_zcr_pointer_stylus.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zcr_stylus.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zcr_text_input_extension.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage zcr_text_input_extension_v1 object.'
]
test_zcr_touch_stylus.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zwp_linux_buffer_params.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage zwp_linux_buffer_params_v1'
]
test_zwp_linux_explicit_synchronization.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage wl_viewporter object.'
]
test_zwp_primary_selection.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_zwp_text_input_manager.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manage zwp_text_input_manager_v1 object.'
]
test_zxdg_output.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Handles the server-side representation of the zxdg_output.'
]
test_zxdg_output_manager.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_connection_test_api.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Allows tests to get and override internal implementation details of\n' +
    ' WaylandConnection.'
]
wayland_drag_drop_test.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class for Wayland drag-and-drop tests. Public methods allow test code to\n' +
    ' emulate dnd-related events from the test compositor and can be used in both\n' +
    ' data and window dragging test cases.'
]
wayland_ozone_ui_controls_test_helper.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_test.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WaylandTest is a base class that sets up a display, window, and test server,\n' +
    ' and allows easy synchronization between them.',
  ' Version of WaylandTestBase that uses parametrised tests (TEST_P).',
  ' Version of WaylandTest that uses simple test fixtures (TEST_F).',
  ' Version of WaylandTest that uses simple test fixtures (TEST_F) and\n' +
    ' aura_shell enabled.'
]
wayland_utils.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
atk_event_conversion.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These values are duplicates of the GDK values that can be found in\n' +
    " <gdk/gdktypes.h>. ATK expects the GDK values, but we don't want to depend on\n" +
    ' GDK here.'
]
client_native_pixmap_factory_x11.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constructor hook for use in constructor_list.cc'
]
gl_egl_utility_x11.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Allows EGL to ask platforms for platform specific EGL attributes.'
]
gl_surface_egl_readback_x11.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' GLSurface implementation that copies pixels from readback to an XWindow.'
]
hit_test_x11.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Converts a HitTestCompat into an X11 direction recognisable by\n' +
    ' NET_WM_MOVERESIZE event.  Returns -1 if no conversion is possible.'
]
linux_ui_delegate_x11.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_pixmap_egl_x11_binding.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A binding maintained between NativePixmap and GL Textures in Ozone that works\n' +
    ' within the context of X11.'
]
os_exchange_data_provider_x11.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' OSExchangeDataProvider implementation for x11 linux.'
]
ozone_platform_x11.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constructor hook for use in ozone_platform_list.cc'
]
vulkan_implementation_x11.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vulkan_surface_x11.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_canvas_surface.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The platform-specific part of an software output. The class is intended\n' +
    ' for use when no EGL/GLES2 acceleration is possible.\n' +
    ' This class owns any bits that the ozone implementation needs freed when\n' +
    ' the software output is destroyed.'
]
x11_clipboard_ozone.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Handles clipboard operations for X11.\n' +
    ' Registers to receive standard X11 events, as well as\n' +
    ' XFixesSetSelectionOwnerNotify.  When the remote owner changes, TARGETS and\n' +
    ' text/plain are preemptively fetched.  They can then be provided immediately\n' +
    ' to GetAvailableMimeTypes, and RequestClipboardData when mime_type is\n' +
    ' text/plain.  Otherwise GetAvailableMimeTypes and RequestClipboardData call\n' +
    ' the appropriate X11 functions and invoke callbacks when the associated events\n' +
    ' are received.'
]
x11_global_shortcut_listener_ozone.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_keyboard_hook.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_menu_utils.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_ozone_ui_controls_test_helper.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_screen_ozone.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A PlatformScreen implementation for X11.'
]
x11_surface_factory.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Handles GL initialization and surface/context creation for X11.'
]
x11_user_input_monitor.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_utils.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
x11_window.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' PlatformWindow implementation for X11.'
]
x11_window_manager.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_constructor_list.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_object.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Create an instance of platform specific object.\n' +
    ' This calls a static constructor function based on the --ozone-platform flag.\n' +
    ' For the platform called "foo", PlatformObject<PlatformWidget> will ultimately\n' +
    ' call the function with signature\n' +
    '   PlatformWidget* CreatePlatformWidgetFoo();\n' +
    ' A definition of this function for each compiled platform must be provided, or\n' +
    ' link errors will result.\n' +
    ' To find the right constructor function, this uses static data defined in the\n' +
    ' source file generated by the generate_constructor_list.py.'
]
platform_object_internal.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/351564777): Remove this and convert code to safer constructs.'
]
platform_selection.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Get active platform id (by parsing --ozone-platform flag).',
  ' Get active platform name.'
]
client_native_pixmap_factory_ozone.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drm_modifiers_filter.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Class that allows the Ozone platform to filter out DRM modifiers that are\n' +
    ' incompatible with usage elsewhere in Chrome. Chrome may have application-\n' +
    ' specific restrictions on its usable modifiers, and DrmModifiersFilter lets\n' +
    ' us express those restrictions in a way where the platform is agnostic to the\n' +
    ' actual filter logic.\n' +
    ' For example, when display compositing with Vulkan, the compositor will\n' +
    ' import a framebuffer allocated by the Ozone platform into Vulkan for draw.\n' +
    ' However, Vulkan implementations may only support a subset of all valid\n' +
    " modifiers for a GPU, so the platform (which otherwise doesn't know about\n" +
    " Chrome's requirements) needs the filter to know which modifiers it can\n" +
    ' allocate with.'
]
gl_ozone.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface that has all of the required methods for an Ozone platform to\n' +
    ' implement a GL implementation. Functions in gl_factory.h and gl_initializer.h\n' +
    ' will delegate to functions in this interface.'
]
gpu_platform_support_host.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Platform-specific object to support a GPU process host.\n' +
    ' ChromeOS on bare hardware will do display configuration and cursor\n' +
    ' movement from the GPU process. This provides a conduit for the\n' +
    ' messages needed to make this work.\n' +
    " Under X11, we don't need any GPU messages for display configuration.\n" +
    " That's why there's no real functionality here: it's purely mechanism\n" +
    ' to support additional messages needed by specific platforms.',
  ' create a stub implementation.'
]
hardware_capabilities.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
input_controller.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Disables all input devices until it is destroyed.\n' +
    ' You should not create this yourself but instead get it from\n' +
    ' `InputController::DisableInputDevices()`.',
  ' Platform-specific interface for controlling input devices.\n' +
    ' The object provides methods for the preference page to configure input\n' +
    ' devices w.r.t. the user setting. On ChromeOS, this replaces the inputcontrol\n' +
    ' script that is originally located at /opt/google/chrome/.',
  ' Create an input controller that does nothing.'
]
native_pixmap_gl_binding.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A binding maintained between NativePixmap and GL Texture in Ozone.'
]
overlay_candidates_ozone.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class can be used to answer questions about possible overlay\n' +
    ' configurations for a particular output device. We get an instance of this\n' +
    ' class from SurfaceFactoryOzone given an AcceleratedWidget.'
]
overlay_manager_ozone.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Responsible for providing the oracles used to decide when overlays can be\n' +
    ' used.'
]
overlay_plane.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Configuration for a hardware overlay plane.\n' +
    ' Modern display hardware is capable of transforming and composing multiple\n' +
    ' images into a final fullscreen image. An OverlayPlane represents one such\n' +
    ' image as well as any transformations that must be applied.'
]
overlay_surface.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An overlay surface is similar to a surface, but natively uses overlays and\n' +
    ' does not internally allocate any buffers.'
]
overlay_surface_candidate.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ozone_gpu_test_helper.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper class for applications that do not have a dedicated GPU channel.\n' +
    ' This sets up mojo pipe between the "gpu" and "ui" threads. It is not needed\n' +
    ' if in Mojo single-thread mode.'
]
ozone_platform.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class for Ozone platform implementations.\n' +
    ' Ozone platforms must override this class and implement the virtual\n' +
    ' GetFooFactoryOzone() methods to provide implementations of the\n' +
    ' various ozone interfaces.\n' +
    ' The OzonePlatform subclass can own any state needed by the\n' +
    ' implementation that is shared between the various ozone interfaces,\n' +
    ' such as a connection to the windowing system.\n' +
    ' A platform is free to use different implementations of each\n' +
    ' interface depending on the context. You can, for example, create\n' +
    ' different objects depending on the underlying hardware, command\n' +
    ' line flags, or whatever is appropriate for the platform.'
]
ozone_switches.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(rjkroege): Specify this at the time of ::InitializeUI to avoid the habit\n' +
    ' of using command line variables as convenient as global variables.'
]
ozone_ui_controls_test_helper.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_clipboard.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Allows Chrome controls and windows to exchange data with each other and other\n' +
    ' applications, e.g., to copy and paste.\n' +
    ' In environments that have multiple clipboards (like Linux X11 or OS X, see\n' +
    ' ui::ClipboardBuffer), the implementation should provide a separate data\n' +
    ' buffer for each system clipboard.  When data is requested or offered, the\n' +
    ' caller specifies which buffer to use by providing the |buffer| parameter.'
]
platform_gl_egl_utility.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides platform specific EGL attributes/configs.'
]
platform_global_shortcut_listener.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The platform implementation should notify the wrapper through this\n' +
    ' interface when the registered shortcut is activated, or when the\n' +
    ' implementation is destroyed.',
  " The interface to Ozone platform's functionality exposed to Chrome via\n" +
    ' extensions::GlobalShortcutListenerOzone.\n' +
    ' Lifetimes of extensions::GlobalShortcutListenerOzone and the platform\n' +
    ' implementation are independent, so these entities should decouple\n' +
    ' explicitly upon destruction through OnPlatformListenerDestroyed() and\n' +
    ' ResetDelegate(), depending on which object is destroyed first.'
]
platform_keyboard_hook.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Supported hook types.',
  ' Interface for Ozone implementations of KeyboardHook.'
]
platform_menu_utils.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Platform-specific functions related to menus.'
]
platform_screen.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' PlatformScreen is an abstract base class for an interface to an Ozone\n' +
    " platform's functionality exposed to Chrome via display::Screen.\n" +
    ' Additionally, may notify DisplayObservers with global workspace changes.\n' +
    ' Recall that in Chrome, a |Screen| is the union of all attached |Display|\n' +
    " instances. The |Screen|'s coordinate system is in DIP pixels (so that\n" +
    ' it can reasonably support |Display|s of differing pixel densities.) The\n' +
    " |Screen|'s origin is the top-left corner of the primary |Display| in the\n" +
    ' |Screen|. Coordinates increase down and to the right.\n' +
    ' TODO(rjkroege): Add ascii art?'
]
platform_user_input_monitor.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' User input monitor for multimedia streams.\n' +
    ' Monitors the keyboard input events in the browser process.  Can be provided\n' +
    ' with the shared memory mapping; in such a case should call the callback\n' +
    ' provided via StartMonitor() or StartMonitorWithMapping() every time\n' +
    ' the user presses a key.'
]
platform_utils.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Platform-specific general util functions that didn't find their way to any\n" +
    ' other existing utilities, but they are required to be accessed outside\n' +
    ' Ozone.'
]
platform_window_surface.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Rendering and presentation API agnostic platform surface object.\n' +
    ' This object should be created prior to creation of a GLSurface,\n' +
    ' VulkanSurface, or software surface that presents to a PlatformWindow.\n' +
    ' It is basically the Viz service version of PlatformWindow, and is intended to\n' +
    " contain the windowing system connection for a particular window's rendering\n" +
    ' surface.\n' +
    ' However, currently it is only used by SkiaRenderer on Fuchsia and does\n' +
    ' nothing in all other cases.\n' +
    ' TODO(spang): If we go this way, we should be consistent. You should have to\n' +
    ' have a PlatformWindowSurface before building a GLSurface or software surface\n' +
    ' as well.'
]
surface_factory_ozone.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The Ozone interface allows external implementations to hook into Chromium to\n' +
    ' provide a system specific implementation. The Ozone interface supports two\n' +
    ' drawing modes: 1) accelerated drawing using GL and 2) software drawing\n' +
    ' through Skia.\n' +
    ' If you want to paint on a window with ozone, you need to create a GLSurface\n' +
    ' or SurfaceOzoneCanvas for that window. The platform can support software, GL,\n' +
    ' or both for painting on the window. The following functionality is specific\n' +
    ' to the drawing mode and may not have any meaningful implementation in the\n' +
    ' other mode. An implementation must provide functionality for at least one\n' +
    ' mode.\n' +
    ' 1) Accelerated Drawing (GL path):\n' +
    ' The following functions are specific to GL:\n' +
    '  - GetAllowedGLImplementations\n' +
    '  - GetGLOzone (along with the associated GLOzone)\n' +
    ' 2) Software Drawing (Skia):\n' +
    ' The following function is specific to the software path:\n' +
    '  - CreateCanvasForWidget\n' +
    ' The accelerated path can optionally provide support for the software drawing\n' +
    ' path.\n' +
    ' The remaining functions are not covered since they are needed in both drawing\n' +
    ' modes (See comments below for descriptions).'
]
surface_ozone_canvas.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The platform-specific part of an software output. The class is intended\n' +
    ' for use when no EGL/GLES2 acceleration is possible.\n' +
    ' This class owns any bits that the ozone implementation needs freed when\n' +
    ' the software output is destroyed.'
]
swap_completion_callback.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
system_input_injector.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface exposed for remoting to convert its events from the network to\n' +
    ' native events.'
]
mock_platform_window_delegate.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_gesture_properties_service.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Mock of GesturePropertiesService's C++ bindings, useful for tests.",
  " Work around the compile error '[chromium-style] Complex class/struct needs an\n" +
    " explicit out-of-line constructor.'"
]
platform_window_defaults.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if PlatformWindow should use test configuration. Will return\n' +
    ' false by default, unless test::EnableTestConfigForPlatformWindows() has been\n' +
    ' called, then it will return true.',
  ' Sets that PlatformWindow should use test configuration. This can safely be\n' +
    ' called on all platforms but only has an effect for X11 and Wayland.',
  ' For X11 this sets the value of the |override_redirect| attribute used when\n' +
    ' creating an X11 window to true. It is necessary to set this flag on for\n' +
    ' various tests, otherwise the call to Show() blocks because it never receives\n' +
    ' the MapNotify event. It is unclear why this is necessary, but might be\n' +
    ' related to calls to XInitThreads().\n' +
    ' For Wayland, forces visual size updates on every configuration event.'
]
desk_extension.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A desk extension that platforms can use to add support for virtual desktop.\n' +
    ' The APIs currently match with what ash provides from desks_controller to\n' +
    ' support "Move window to desk" menu in LaCrOS.\n' +
    ' TODO(crbug.com/40769556): Support virtual desktop protocol for linux/wayland\n' +
    ' as well.'
]
pinned_mode_extension.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A pinned mode extension that platforms can use to add support for pinned\n' +
    ' mode operations which are used e.g. in EDU tests / quizzes.'
]
system_modal_extension.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wayland_extension.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
workspace_extension.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A workspace extension that platforms can use to add support for workspaces.\n' +
    ' This is intended to be used only in conjunction with a PlatformWindow and\n' +
    ' owned by a PlatformWindow owner. To avoid casts from the PlatformWindow to\n' +
    ' the WorkspaceExtension, a pointer to this interface must be set through\n' +
    ' "SetWorkspaceExtension".'
]
workspace_extension_delegate.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Notifies the delegate about changed workspace. The delegate must be set in\n' +
    ' WorkspaceExtension to be able to receive these changes.'
]
x11_extension.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Linux extensions that linux platforms can use to extend the platform windows\n' +
    ' APIs. Please refer to README for more details.\n' +
    " The extension mustn't be called until PlatformWindow is initialized."
]
x11_extension_delegate.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
initialize_presenter_api_view.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Register and exposes an API that let OzonePlatformScenic present new views.\n' +
    ' TODO(crbug.com/42050332): Once workstation offers the right FIDL API to open\n' +
    ' new windows, this can be removed.',
  ' Register and exposes an API that let OzonePlatformFlatland present new views.',
  " Ignores presentation requests, for tests which don't rely on a functioning\n" +
    ' Presenter service.'
]
scenic_window_delegate.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface use by ScenicWindow to notify the client about Scenic-specific\n' +
    ' events.'
]
view_ref_pair.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_window.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Generic PlatformWindow interface.'
]
platform_window_delegate.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
platform_window_init_properties.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Initial properties which are passed to PlatformWindow to be initialized\n' +
    ' with a desired set of properties.'
]
stub_window.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' StubWindow is useful for tests, as well as implementations that only care\n' +
    ' about bounds and activation state.'
]
stub_window_export.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
win_window.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Set true to let WindowTreeHostWin use a popup window\n' +
    " with no frame/title so that the window size and test's\n" +
    ' expectations matches.'
]
win_window_export.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wm_drag_handler.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wm_drop_handler.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
wm_move_loop_handler.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Handler that starts interactive move loop for the PlatformWindow.'
]
wm_move_resize_handler.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
qt_interface.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " This file shouldn't include any standard C++ headers (directly or indirectly)",
  ' std::string cannot be passed over the library boundary, so this class acts\n' +
    ' as an interface between QT and Chrome.',
  ' A generic bag of bytes.',
  ' This should be the only thing exported from qt_shim.'
]
qt_shim.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " This class directly interacts with QT.  It's required to be a QObject\n" +
    ' to receive signals from QT via slots.'
]
qt_ui.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface to QT desktop features.',
  ' This should be the only symbol exported from this component.'
]
auto_close_dialog_event_handler_win.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This IFileDialogEvents implementation ensures that the file dialog it is\n' +
    ' attached to will be closed if its owner is closed.'
]
base_shell_dialog.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A base class for shell dialogs.'
]
base_shell_dialog_win.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' A base class for all shell dialog implementations that handles showing a\n' +
    ' shell dialog modally on its own thread.'
]
execute_select_file_win.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Describes a filter for a file dialog.',
  ' Shows the file selection dialog modal to |owner| returns the selected file(s)\n' +
    ' and file type index using the |on_select_file_executed_callback|. The file\n' +
    ' path vector will be empty on failure.'
]
fake_select_file_dialog.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A test fake SelectFileDialog. Usage:\n' +
    ' FakeSelectFileDialog::Factory* factory =\n' +
    '   FakeSelectFileDialog::RegisterFactory();\n' +
    ' factory->SetOpenCallback(open_callback);\n' +
    ' Now calls to SelectFileDialog::Create() will create a |FakeSelectFileDialog|,\n' +
    ' and open_callback is invoked when the dialog is opened.\n' +
    ' Once the dialog is opened, use factory->GetLastDialog() to access the dialog\n' +
    ' to query file information and select a file.'
]
select_file_dialog.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Shows a dialog box for selecting a file or a folder.'
]
select_file_dialog_android.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
select_file_dialog_factory.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Some chrome components want to create their own SelectFileDialog objects\n' +
    ' (for example, using an extension to provide the select file dialog needs to\n' +
    ' live in chrome/ due to the extension dependency.)\n' +
    ' They can implement a factory which creates their SelectFileDialog.'
]
select_file_dialog_ios.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implementation of SelectFileDialog that shows iOS dialogs for choosing a\n' +
    ' file or folder.'
]
select_file_dialog_lacros.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' SelectFileDialogLacros implements file open and save dialogs for the\n' +
    ' lacros-chrome binary. The dialog itself is handled by the file manager in\n' +
    ' ash-chrome.'
]
select_file_dialog_linux.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' This file implements common select dialog functionality between GTK and KDE.',
  ' Shared implementation SelectFileDialog used on Linux'
]
select_file_dialog_linux_kde.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
select_file_dialog_linux_portal.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implementation of SelectFileDialog that has the XDG file chooser portal show\n' +
    ' a platform-dependent file selection dialog. This acts as a modal dialog.'
]
select_file_dialog_mac.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implementation of SelectFileDialog that shows Cocoa dialogs for choosing a\n' +
    ' file or folder.\n' +
    ' Exported for unit tests.'
]
select_file_dialog_win.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
select_file_policy.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An optional policy class that provides decisions on whether to allow showing\n' +
    ' a native file dialog. Some ports need this.'
]
select_file_utils_win.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Given a file name, return the sanitized version by removing substrings that\n' +
    " are embedded in double '%' characters as those are reserved for environment\n" +
    ' variables. Implementation detail exported for unit tests.'
]
selected_file_info.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Struct used for returning selected file info.',
  ' Converts a list of FilePaths to a list of ui::SelectedFileInfo.',
  ' Converts a list of ui::SelectedFileInfos to a list of FilePaths. This uses\n' +
    ' the path() accessor to use the `local_path` if not empty, else the\n' +
    ' `file_path`.'
]
shell_dialog_linux.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(thomasanderson): Remove Initialize() and Finalize().',
  ' Should be called before the first call to CreateSelectFileDialog.'
]
shell_dialogs_export.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines SHELL_DIALOGS_EXPORT so that functionality implemented by the Shell\n' +
    ' Dialogs module can be exported to consumers.'
]
screenshot_grabber.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Result of the entire screenshotting attempt. This enum is fat for various\n' +
    ' file operations which could happen in the chrome layer.'
]
snapshot.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Utility functions to grab snapshots of views and windows. These functions do\n' +
    ' no security checks, so these are useful for debugging purposes where no\n' +
    ' BrowserProcess instance is available (ie. tests), and other user-driven\n' +
    ' scenarios.',
  ' These functions take a snapshot of the specified view or window, within\n' +
    ' `source_rect`, specified in layer space coordinates (DIP for desktop,\n' +
    ' physical pixels for Android).\n' +
    ' Returns the snapshot via the provided `callback`. In case of an error, an\n' +
    ' empty image (`gfx::Image::IsEmpty()`) will be returned.',
  ' Takes a snapshot as with `GrabWindowSnapshot()` and scales it to\n' +
    ' `target_size` (in physical pixels).\n' +
    ' Returns the snapshot via the provided `callback`. In case of an error, an\n' +
    ' empty image (`gfx::Image::IsEmpty()`) will be returned.',
  ' Takes a snapshot as with `GrabWindowSnapshot()` and encodes it as PNG data.\n' +
    ' Returns the data via the provided `callback`. In case of an error, a null\n' +
    ' pointer will be returned.',
  ' Takes a snapshot as with `GrabWindowSnapshot()` and encodes it as JPEG data.\n' +
    ' Returns the data via the provided `callback`. In case of an error, a null\n' +
    ' pointer will be returned.'
]
snapshot_async.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper methods for async snapshots to convert a viz::CopyOutputResult into a\n' +
    ' ui::GrabWindowSnapshot callback.'
]
snapshot_aura.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " These functions are identical to those in snapshot.h, except they're\n" +
    ' guaranteed to read the frame using an Aura CopyOutputRequest and not the\n' +
    ' native windowing system. `source_rect` and `target_size` are in DIP.',
  ' Grabs a snapshot of a |layer| and all its descendants.\n' +
    ' |source_rect| is the bounds of the snapshot content relative to |layer|.'
]
snapshot_export.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines SNAPSHOT_EXPORT so that functionality implemented by the snapshot\n' +
    ' module can be exported to consumers.'
]
snapshot_mac.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Forces the usage of a specific snapshotting API for testing purposes. Do not\n' +
    ' force `kNewAPI` on a macOS release before 14.4. Use `kUnspecified` to reset a\n' +
    ' forced value.'
]
surface_export.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
transport_dib.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' -----------------------------------------------------------------------------\n' +
    ' A TransportDIB is a block of memory that is used to transport pixels\n' +
    ' between processes: from the renderer process to the browser, and\n' +
    ' between renderer and plugin processes.\n' +
    ' -----------------------------------------------------------------------------'
]
longpress_drag_selector.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Supports text selection via touch dragging after a longpress- or\n' +
    ' doublepress-initiated selection.'
]
selection_event_type.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This file contains a list of events relating to selection and insertion, used\n' +
    ' for notifying Java when the renderer selection has changed.',
  ' A Java counterpart will be generated for this enum.\n' +
    ' GENERATED_JAVA_ENUM_PACKAGE: org.chromium.ui.touch_selection'
]
touch_handle.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface through which |TouchHandle| delegates rendering-specific duties.',
  ' Interface through which |TouchHandle| communicates handle manipulation and\n' +
    ' requests concrete drawable instances.',
  ' Responsible for displaying a selection or insertion handle for text\n' +
    ' interaction.'
]
touch_handle_drawable_aura.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
touch_handle_orientation.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Orientation types for Touch handles, used for setting the type of\n' +
    ' handle orientation on java and native side.',
  ' A Java counterpart will be generated for this enum.\n' +
    ' GENERATED_JAVA_ENUM_PACKAGE: org.chromium.ui.touch_selection'
]
touch_selection_controller.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface through which |TouchSelectionController| issues selection-related\n' +
    ' commands, notifications and requests.',
  ' Controller for manipulating text selection via touch input.'
]
touch_selection_controller_test_api.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test api class to access internals of |ui::TouchSelectionController| in\n' +
    ' tests.'
]
touch_selection_draggable.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface through which TouchSelectionDraggable manipulates the selection.',
  ' Generic interface for entities that manipulate the selection via dragging.'
]
touch_selection_magnifier_aura.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A magnifier which shows the text caret or selection endpoint during a touch\n' +
    ' selection session.'
]
touch_selection_menu_runner.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Client interface for TouchSelectionMenuRunner.',
  ' An interface for the singleton object responsible for running touch selection\n' +
    ' quick menu.'
]
touch_selection_metrics.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These values are persisted to logs. Entries should not be renumbered and\n' +
    ' numeric values should never be reused.',
  ' These values are persisted to logs. Entries should not be renumbered and\n' +
    ' numeric values should never be reused.',
  ' Helper class for tracking the state of touch selection sessions and recording\n' +
    ' session related metrics.'
]
ui_touch_selection_export.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines UI_TOUCH_SELECTION_EXPORT so that functionality implemented by the UI\n' +
    ' touch selection module can be exported to consumers.'
]
accessibility_alert_window.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class provides a caller a way to alert an accessibility client such as\n' +
    ' ChromeVox with a text string without a backing visible window or view.'
]
accessibility_paint_checks.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " This runs DCHECKs related to the view's state when painting. Generally, when\n" +
    ' a View is ready to be displayed to the user it should also be accessible.',
  " Runs the paint checks recursively starting from the Widget's RootView.",
  ' Skip accessibility paint checks on a specific View.\n' +
    ' TODO(pbos): Remove this key. Do not add new uses to it, instead make sure\n' +
    ' that the offending View is fixed.'
]
atomic_view_ax_tree_manager.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class manages a "tree" which consists of a single node. This is intended\n' +
    ' for use with Views, enabling the UIA ITextProvider and ITextRangeProvider\n' +
    ' functionalities. This class is TEMPORARY and not a long term solution.\n' +
    ' TODO(crbug.com/40924888): Remove this temporary class once the ViewsAX\n' +
    ' project is completed.'
]
ax_aura_obj_cache.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " A cache responsible for assigning id's to a set of interesting Aura views."
]
ax_aura_obj_wrapper.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface abstraction for Aura views that exposes the view-tree formed\n' +
    ' by the implementing view types.'
]
ax_event_manager.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' AXEventManager allows observation of accessibility events for all views.'
]
ax_event_observer.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' AXEventObserver is notified for accessibility events on all views.'
]
ax_root_obj_wrapper.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_tree_source_views.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class exposes the views hierarchy as an accessibility tree permitting\n' +
    ' use with other accessibility classes. The root can be an existing object in\n' +
    ' the Widget/View hierarchy or a new node (for example to create the "desktop"\n' +
    ' node for the extension API call chrome.automation.getDesktop()).'
]
ax_view_obj_wrapper.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Describes a |View| for use with other AX classes.'
]
ax_virtual_view.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implements a virtual view that is used only for accessibility.\n' +
    ' Some composite widgets such as tree and table views may utilize lightweight\n' +
    ' UI objects instead of actual views for displaying and managing their\n' +
    ' contents. We need a corresponding virtual accessibility view to expose\n' +
    ' information about these lightweight Ui objects to accessibility. An\n' +
    ' AXVirtualView is owned by its parent, which could either be a\n' +
    ' ViewAccessibility or an AXVirtualView.'
]
ax_virtual_view_wrapper.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps (and adapts) an AXVirtualView for use with AXTreeSourceViews.'
]
ax_widget_obj_wrapper.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Describes a |Widget| for use with other AX classes.'
]
ax_window_obj_wrapper.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Describes a |Window| for use with other AX classes.'
]
test_list_grid_view.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Class used for testing row and column count accessibility APIs.'
]
view_accessibility.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An object that manages the accessibility interface for a View.\n' +
    ' The default accessibility properties of a View is determined by calling\n' +
    ' |View::GetAccessibleNodeData()|, which is overridden by many |View|\n' +
    ' subclasses. |ViewAccessibility| lets you override these for a particular\n' +
    ' view.\n' +
    ' In most cases, subclasses of |ViewAccessibility| own the |AXPlatformNode|\n' +
    ' that implements the native accessibility APIs on a specific platform.'
]
view_accessibility_utils.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_ax_platform_node_delegate.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Shared base class for platforms that require an implementation of\n' +
    ' |ViewAXPlatformNodeDelegate| to interface with the native accessibility\n' +
    ' toolkit. This class owns the |AXPlatformNode|, which implements those native\n' +
    ' APIs.'
]
view_ax_platform_node_delegate_auralinux.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_ax_platform_node_delegate_mac.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mac-specific accessibility class for |ViewAXPlatformNodeDelegate|.'
]
view_ax_platform_node_delegate_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_utilities_aura.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Return the parent of `window`, first checking to see if it has a\n' +
    ' transient parent. This allows us to walk up the aura::Window\n' +
    ' hierarchy when it spans multiple window tree hosts, each with\n' +
    ' their own native window.',
  ' Returns the start and end offsets of each word in `text`.',
  ' Retrieves a vector of the rounded starting offsets of each char in all\n' +
    ' runs. With 3 chars of width 10, the values would be 0, 10, 20, 30.\n' +
    ' Implementation only supports single line for now.\n' +
    ' TODO(crbug.com/40933356): Support multiline.'
]
widget_ax_tree_id_map.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class manages mapping between Widgets and their associated AXTreeIDs.\n' +
    ' It is a singleton wrapper around a std::map. Widget pointers are used as the\n' +
    " key for the map and AXTreeID's are used as the value returned."
]
accessible_pane_view.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class provides keyboard access to any view that extends it, typically\n' +
    ' a toolbar.  The user sets focus to a control in this view by pressing\n' +
    ' F6 to traverse all panes, or by pressing a shortcut that jumps directly\n' +
    ' to this pane.'
]
action_view_controller.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ActionViewController is the main view controller to be instantiated or\n' +
    ' subclassed. See README.md for more details.',
  ' ActionViewControllerBase provides a base class for the templated\n' +
    ' ActionViewControllerTemplate.',
  ' ActionViewControllerTemplate is the templated core functionality that manages\n' +
    ' the relationship between the action item and the view. The template allows\n' +
    ' the action view controller to be generalized to any view class.'
]
action_view_interface.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' See README.md for how to create an ActionViewInterface.'
]
animation_abort_handle.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A handle that aborts associated animations on destruction.\n' +
    ' Caveat: ALL properties will be aborted on handle destruction,\n' +
    ' including those not initiated by the builder.'
]
animation_builder.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides an unfinalized animation sequence block if any to build animations.',
  ' Usage notes for callbacks set on AnimationBuilder:\n' +
    ' When setting callbacks for the animations note that the AnimationBuilder’s\n' +
    " observer that calls these callbacks may outlive the callback's parameters.",
  ' The OnEnded callback runs when all animations created on the AnimationBuilder\n' +
    ' have finished. The OnAborted callback runs when any one animation created on\n' +
    ' the AnimationBuilder has been aborted. Therefore, these callbacks and every\n' +
    ' object the callback accesses needs to outlive all the Layers/LayerOwners\n' +
    ' being animated on since the Layers ultimately own the objects that run the\n' +
    ' animation. Otherwise, developers may need to use weak pointers or force\n' +
    ' animations to be cancelled in the object’s destructor to prevent accessing\n' +
    ' destroyed objects. Note that aborted notifications can be sent during the\n' +
    ' destruction process. Therefore subclasses that own the Layers may actually be\n' +
    ' destroyed before the OnAborted callback is run.'
]
animation_delegate_views.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides default implementation to adapt CompositorAnimationRunner for\n' +
    ' Animation. Falls back to the default animation runner when |view| is nullptr.'
]
animation_key.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
animation_sequence_block.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An animation sequence block is a single unit of a larger animation sequence,\n' +
    ' which has a start time, duration, and zero or more (target, property)\n' +
    ' animations. There may be multiple properties animating on a single target,\n' +
    ' and/or multiple targets animating, but the same property on the same target\n' +
    ' may only be animated at most once per block. Animations can be added by\n' +
    ' calling SetXXX(). Calling At(), Offset(), or Then() create a new block.'
]
bounds_animator.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Bounds animator is responsible for animating the bounds of a view from the\n' +
    ' the views current location and size to a target position and size. To use\n' +
    ' BoundsAnimator invoke AnimateViewTo for the set of views you want to\n' +
    ' animate.\n' +
    ' BoundsAnimator internally creates an animation for each view. If you need\n' +
    ' a specific animation invoke SetAnimationForView after invoking AnimateViewTo.\n' +
    ' You can attach an AnimationDelegate to the individual animation for a view\n' +
    ' by way of SetAnimationDelegate. Additionally you can attach an observer to\n' +
    ' the BoundsAnimator that is notified when all animations are complete.\n' +
    ' There is an option to apply transforms on the view instead of repainting and\n' +
    ' relayouting each animation tick. This should be used if the size of the view\n' +
    ' is not changing. It can be considered, but may have funny looking visuals for\n' +
    ' other cases, depending on the content. If layers are not present, they are\n' +
    ' created and destroyed as necessary.'
]
bounds_animator_observer.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bubble_slide_animator.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Animates a bubble between anchor views on demand. Must be used with\n' +
    ' BubbleDialogDelegateView because of its reliance on the anchoring system.'
]
compositor_animation_runner.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An animation runner based on ui::Compositor.'
]
flood_fill_ink_drop_ripple.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An ink drop ripple that starts as a small circle and flood fills a rectangle\n' +
    ' of the size determined by |host_size| and |clip_insets| (if provided). The\n' +
    " circle is clipped to this rectangle's bounds.\n" +
    ' Constructors take |host_size| and |clip_insets| and calculate the effective\n' +
    " bounds of the flood fill based on them. This way, the ripple's bounds are\n" +
    ' defined relative to the host size and can be recalculated whenever the host\n' +
    ' size is changed.\n' +
    ' The valid InkDropState transitions are defined below:\n' +
    '   {All InkDropStates}      => HIDDEN\n' +
    '   HIDDEN                   => ACTION_PENDING\n' +
    '   HIDDEN, ACTION_PENDING   => ACTION_TRIGGERED\n' +
    '   ACTION_PENDING           => ALTERNATE_ACTION_PENDING\n' +
    '   ALTERNATE_ACTION_PENDING => ALTERNATE_ACTION_TRIGGERED\n' +
    '   {All InkDropStates}      => ACTIVATED\n' +
    '   {All InkDropStates}      => DEACTIVATED'
]
ink_drop.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class that manages the lifetime and state of an ink drop ripple as\n' +
    ' well as visual hover state feedback.',
  ' A View which can be used to parent ink drop layers. Typically this is used\n' +
    ' as a non-ancestor view to labels so that the labels can paint on an opaque\n' +
    ' canvas. This is used to avoid ugly text renderings when labels with subpixel\n' +
    ' rendering enabled are painted onto a non-opaque canvas.\n' +
    ' TODO(pbos): Replace with a function that returns unique_ptr<View>, this only\n' +
    ' calls SetProcessEventsWithinSubtree(false) right now.'
]
ink_drop_animation_ended_reason.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Enumeration of the different reasons why an ink drop animation has finished.',
  ' Returns a human readable string for |reason|.  Useful for logging.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the views_test_support target. Depend on that to use this in your unit test.\n' +
    ' This should not be used in production code - call ToString() instead.'
]
ink_drop_event_handler.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class handles ink-drop changes due to events on its host.'
]
ink_drop_highlight.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manages fade in/out animations for a Layer that is used to provide visual\n' +
    ' feedback on ui::Views for highlight states (e.g. mouse hover, keyboard\n' +
    ' focus).',
  ' Returns a human readable string for |animation_type|.  Useful for logging.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the views_test_support target. Depend on that to use this in your unit test.\n' +
    ' This should not be used in production code - call ToString() instead.'
]
ink_drop_highlight_observer.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observer to attach to an InkDropHighlight animation.'
]
ink_drop_host.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(crbug.com/40613900): Rename this type and move this header. Also\n' +
    ' consider if InkDropHost should be what implements the InkDrop interface and\n' +
    ' have that be the public interface. The current division of labor is roughly\n' +
    ' as follows:\n' +
    ' * InkDropHost manages an InkDrop and is responsible for a lot of its\n' +
    '   configuration and creating the parts of the InkDrop.\n' +
    " * InkDrop manages the parts of the ink-drop effect once it's up and running.\n" +
    ' * InkDropRipple is a ripple effect that usually triggers as a result of\n' +
    '   clicking or activating the button / similar which hosts this.\n' +
    ' * InkDropHighlight manages the hover/focus highlight layer.\n' +
    ' TODO(pbos): See if this can be the only externally visible surface for an\n' +
    ' ink-drop effect, and rename this InkDrop, or consolidate with InkDrop.'
]
ink_drop_impl.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A functional implementation of an InkDrop.'
]
ink_drop_mask.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class for different ink drop masks. It is responsible for creating the\n' +
    ' ui::Layer that can be set as the mask layer for ink drop layer. Note that the\n' +
    " mask's layer size (passed in the constructor) should always match size of the\n" +
    ' layer it is masking.',
  ' An ink-drop mask that paints a specified path.'
]
ink_drop_observer.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observer to attach to an InkDrop.'
]
ink_drop_painted_layer_delegates.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base ui::LayerDelegate stub that can be extended to paint shapes of a\n' +
    ' specific color.',
  ' A BasePaintedLayerDelegate that paints a circle of a specified color and\n' +
    ' radius.',
  ' A BasePaintedLayerDelegate that paints a rectangle of a specified color and\n' +
    ' size.',
  ' A BasePaintedLayerDelegate that paints a rounded rectangle of a specified\n' +
    ' color, size and corner radius.',
  ' A BasePaintedLayerDelegate that paints a shadow around the outside of a\n' +
    ' specified roundrect, and also fills the round rect.'
]
ink_drop_ripple.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Simple base class for animations that provide visual feedback for View state.\n' +
    ' Manages the attached InkDropRippleObservers.\n' +
    ' TODO(bruthig): Document the ink drop ripple on chromium.org and add a link to\n' +
    ' the doc here.'
]
ink_drop_ripple_observer.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observer to attach to an InkDropRipple.'
]
ink_drop_state.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The different states that the ink drop animation can be animated to.',
  ' Returns a human readable string for |state|.  Useful for logging.',
  ' This is declared here for use in gtest-based unit tests but is defined in\n' +
    ' the views_test_support target. Depend on that to use this in your unit test.\n' +
    ' This should not be used in production code - call ToString() instead.'
]
ink_drop_stub.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A stub implementation of an InkDrop that can be used when no visuals should\n' +
    ' be shown. e.g. material design is enabled.'
]
ink_drop_util.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A layer |transform| may add an offset to its layer relative to the parent\n' +
    ' layer. This offset does not take into consideration the subpixel positioning.\n' +
    ' A subpixel correction needs to be applied to make sure the layers are pixel\n' +
    ' aligned after the transform is applied. Use this function to compute the\n' +
    ' subpixel correction transform.'
]
pulsing_ink_drop_mask.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An InkDropMask that animates into pulsing effect.'
]
scroll_animator.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
slide_out_controller.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class contains logic to control sliding out of a layer in response to\n' +
    ' swipes, i.e. gesture scroll events.'
]
slide_out_controller_delegate.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
square_ink_drop_ripple.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An ink drop ripple that smoothly animates between a circle and a rounded\n' +
    ' rectangle of different sizes for each of the different InkDropStates. The\n' +
    ' final frame for each InkDropState will be bounded by either a |large_size_|\n' +
    ' rectangle or a |small_size_| rectangle.\n' +
    ' The valid InkDropState transitions are defined below:\n' +
    '   {All InkDropStates}           => HIDDEN\n' +
    '   HIDDEN                        => ACTION_PENDING\n' +
    '   HIDDEN, ACTION_PENDING        => ACTION_TRIGGERED\n' +
    '   ACTION_PENDING                => ALTERNATE_ACTION_PENDING\n' +
    '   ALTERNATE_ACTION_PENDING      => ALTERNATE_ACTION_TRIGGERED\n' +
    '   {All InkDropStates}           => ACTIVATED\n' +
    '   {All InkDropStates}           => DEACTIVATED'
]
flood_fill_ink_drop_ripple_test_api.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test API to provide internal access to a FloodFillInkDropRipple.'
]
ink_drop_highlight_test_api.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test API to provide internal access to an InkDropHighlight instance. This can\n' +
    ' also be used to control the animations via the\n' +
    ' ui::test::MultiLayerAnimatorTestController API.'
]
ink_drop_host_test_api.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test API to provide internal access to an InkDropHost instance.'
]
ink_drop_impl_test_api.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test API to provide internal access to an InkDropImpl instance. This can also\n' +
    ' be used to control the InkDropRipple and InkDropHighlight animations via the\n' +
    ' ui::test::MultiLayerAnimatorTestController API.'
]
ink_drop_ripple_test_api.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test API to provide internal access to an InkDropRipple instance. This can\n' +
    ' also be used to control the animations via the\n' +
    ' ui::test::MultiLayerAnimatorTestController API.'
]
square_ink_drop_ripple_test_api.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test API to provide internal access to a SquareInkDropRipple.'
]
test_ink_drop.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A InkDrop test double that tracks the last requested state changes.\n' +
    ' NOTE: This does not auto transition between any of the InkDropStates.'
]
test_ink_drop_animation_observer_helper.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Context tracking helper that can be used with test implementations of\n' +
    ' ink drop animation observers.'
]
test_ink_drop_highlight_observer.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Simple InkDropHighlightObserver test double that tracks if\n' +
    ' InkDropHighlightObserver methods are invoked and the parameters used for the\n' +
    ' last invocation.'
]
test_ink_drop_host.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A non-functional implementation of an View with an ink drop that can be used\n' +
    ' during tests.  Tracks the number of hosted ink drop layers.'
]
test_ink_drop_ripple_observer.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Simple InkDropRippleObserver test double that tracks if InkDropRippleObserver\n' +
    ' methods are invoked and the parameters used for the last invocation.'
]
widget_fade_animator.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Animates a widget's opacity between fully hidden and fully shown, providing\n" +
    ' a fade-in/fade-out effect.'
]
background.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '///////////////////////////////////////////////////////////////////////////\n' +
    ' Background class\n' +
    ' A background implements a way for views to paint a background. The\n' +
    ' background can be either solid or based on a gradient. Of course,\n' +
    ' Background can be subclassed to implement various effects.\n' +
    ' Any View can have a background. See View::SetBackground() and\n' +
    ' View::OnPaintBackground()\n' +
    '///////////////////////////////////////////////////////////////////////////',
  ' Creates a background that fills the canvas in the specified color.',
  ' Creates a background that fills the canvas with rounded corners.\n' +
    ' If using a rounded rect border as well, pass its radius as `radius` and its\n' +
    ' thickness as `for_border_thickness`.  This will inset the background properly\n' +
    " so it doesn't bleed through the border.",
  ' Same as above except each corner radius can be different and customized.',
  " Same as above except it uses the color specified by the views's ColorProvider\n" +
    ' and the given color identifier.',
  ' Same as above except its top corner radius and bottom corner radius can be\n' +
    ' different and customized.',
  ' Same as above except each corner radius can be different and customized.',
  ' Creates a background that fills the canvas in the color specified by the\n' +
    " view's ColorProvider and the given color identifier.",
  ' Creates a background from the specified Painter.',
  ' Creates a background from the specified ThemedVectorIcon.'
]
badge_painter.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Painter that paints a badge on the canvas of any other view.\n' +
    ' Provides static methods only;'
]
border.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Border class.\n' +
    ' The border class is used to display a border around a view.\n' +
    ' To set a border on a view, call SetBorder on the view, for example:\n' +
    ' view->SetBorder(\n' +
    '     CreateSolidBorder(1, view->GetColorProvider()->GetColor(\n' +
    '                              ui::kColorFocusableBorderUnfocused)));\n' +
    ' Make sure the border color is updated on theme changes.\n' +
    ' Once set on a view, the border is owned by the view.\n' +
    ' IMPORTANT NOTE: not all views support borders at this point. In order to\n' +
    ' support the border, views should make sure to use bounds excluding the\n' +
    ' border (by calling View::GetLocalBoundsExcludingBorder) when doing layout and\n' +
    ' painting.\n' +
    '//////////////////////////////////////////////////////////////////////////////',
  ' Convenience for creating a scoped_ptr with no Border.',
  ' Creates a border that is a simple line of the specified thickness and color.',
  ' Creates a border that is a simple line of the specified thickness and color,\n' +
    ' which updates on theme changes.',
  ' Creates a border that is a rounded rectangle of the specified thickness and\n' +
    ' color.\n' +
    ' NOTE: `corner_radius` is an OUTER EDGE RADIUS, not a stroke radius!',
  ' Same as above except the color updates with theme changes.',
  ' Creates a border for reserving space. The returned border does not paint\n' +
    ' anything.',
  ' A simpler version of the above for a border with uniform thickness.',
  ' Creates a border of the specified color, and thickness on each side specified\n' +
    ' in |insets|.',
  ' Creates a border of the specified color with thickness on each side specified\n' +
    ' in |insets|. The border updates on theme changes.',
  ' Creates a new border that draws |border| and adds additional padding. This is\n' +
    ' equivalent to changing the insets of |border| without changing how or what it\n' +
    ' paints. Example:\n' +
    ' view->SetBorder(CreatePaddedBorder(\n' +
    '     CreateSolidBorder(1, view->GetColorProvider()->GetColor(\n' +
    '                              ui::kColorFocusableBorderUnfocused)),\n' +
    '     gfx::Insets::TLBR(2, 0, 0, 0)));\n' +
    ' yields a single dip red border and an additional 2dip of unpainted padding\n' +
    ' above the view content (below the border).',
  ' Creates a Border from the specified Painter. |insets| define size of an area\n' +
    ' allocated for a Border.'
]
bubble_border.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Renders a border, with optional arrow, and a custom dropshadow.\n' +
    ' This can be used to produce floating "bubble" objects with rounded corners.',
  ' A Background that clips itself to the specified BubbleBorder and uses the\n' +
    ' color of the BubbleBorder.'
]
bubble_border_arrow_utils.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The side of the bubble the arrow is located on.',
  ' Converts the |arrow| into a BubbleArrowSide.',
  ' Returns the appropriate anchor point on the edge of the |anchor_rect| for a\n' +
    ' given |arrow| position.',
  ' Returns the origin offset to move the |contents_bounds| to be placed\n' +
    ' appropriately for a given |arrow| at the |anchor_point|.',
  ' Converts the |arrow| into a BubbleArrowSide.',
  ' Returns the translation vector for a bubble to make space for\n' +
    ' inserting the visible arrow at the right position for |arrow_|.\n' +
    ' |include_gap| controls if the displacement accounts for the\n' +
    ' kVisibleArrowGap.',
  ' Returns true if the arrow is vertical meaning that it is either placed on\n' +
    ' the top of the bottom of the border.',
  ' Returns the size of the bounding rectangle of the visible |arrow|.'
]
bubble_dialog_delegate_view.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' BubbleDialogDelegateView is a BubbleDialogDelegate that is also a View.\n' +
    ' Prefer using a BubbleDialogDelegate that sets a separate View as its contents\n' +
    ' view.\n' +
    ' TODO(pbos): Migrate existing uses of BubbleDialogDelegateView to directly\n' +
    ' inherit or use BubbleDialogDelegate.'
]
bubble_dialog_model_host.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(pbos): Find a better name and move to a file separate from\n' +
    ' BubbleDialogModelHost. See if we can have BubbleDialogModelHost use\n' +
    ' DialogModelSectionHost directly (by removing more calls into\n' +
    ' BubbleDialogModelHostContentsView).',
  ' BubbleDialogModelHost is a views implementation of ui::DialogModelHost which\n' +
    ' hosts a ui::DialogModel as a BubbleDialogDelegate. This exposes such as\n' +
    ' SetAnchorView(), SetArrow() and SetHighlightedButton(). For methods that are\n' +
    ' reflected in ui::DialogModelHost (such as ::Close()), prefer using the\n' +
    ' ui::DialogModelHost to avoid platform-specific code (GetWidget()->Close())\n' +
    ' where unnecessary. For those methods, note that this can be retrieved as a\n' +
    ' ui::DialogModelHost through DialogModel::host(). This helps minimize\n' +
    ' platform-specific code from platform-agnostic model-delegate code.'
]
bubble_dialog_utils.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Configures views::BubbleDialogDelegate button based on `model`.'
]
bubble_frame_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The non-client frame view of bubble-styled widgets.\n' +
    '  +- BubbleFrameView ------------------+\n' +
    '  | +- ProgressBar ------------------+ |\n' +
    '  | +-----------------------(-)-(x)-+  |\n' +
    '  | | HeaderView                    |  |\n' +
    '  | +-------------------------------+  |\n' +
    '  | +-------------------------------+  |\n' +
    '  | | TitleView                     |  |\n' +
    '  | +-------------------------------+  |\n' +
    '  | +-- DialogClientView------------+  |\n' +
    '  | | <<Dialog Contents View>>      |  |\n' +
    '  | | <<OK and Cancel Buttons>>     |  |\n' +
    '  | | <<...>>                       |  |\n' +
    '  | +-------------------------------+  |\n' +
    '  | +-------------------------------+  |\n' +
    '  | | FootnoteView                  |  |\n' +
    '  | +-------------------------------+  |\n' +
    '  +------------------------------------+\n' +
    ' All views are optional except for DialogClientView. An ImageView\n' +
    ' `main_image` might optionally occupy the top left corner (not\n' +
    ' illustrated above).\n' +
    ' If TitleView exists and HeaderView does not exists, the close\n' +
    ' and the minimize buttons will be positioned at the end of the\n' +
    ' title row. Otherwise, they will be positioned closer to the frame\n' +
    ' edge.'
]
footnote_container_view.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A container that changes visibility with its contents, and draws a solid\n' +
    ' background with rounded corners at the bottom.'
]
info_bubble.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Class to create and manage an information bubble for errors or tooltips.'
]
tooltip_icon.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A tooltip icon that shows a bubble on hover. Looks like (i).'
]
button_drag_utils.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Sets url and title on data as well as setting a suitable image for dragging.\n' +
    ' The image looks like that of the bookmark buttons. |press_pt| is optional\n' +
    ' offset; otherwise, it centers the drag image.',
  ' As above, but only sets the image.'
]
cascading_property.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drag_drop_client_mac.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implements drag and drop on MacViews. This class acts as a bridge between\n' +
    " the Views and native system's drag and drop. This class mimics\n" +
    ' DesktopDragDropClientAuraX11.'
]
immersive_mode_reveal_client.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_widget_mac_event_monitor.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class for event monitoring. This will create a NSEvent local monitor in\n' +
    ' for this widget (in this process or in a remote process). The monitor will\n' +
    ' call back through the Client interface.'
]
native_widget_mac_ns_window_host.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The portion of NativeWidgetMac that lives in the browser process. This\n' +
    ' communicates to the NativeWidgetNSWindowBridge, which interacts with the\n' +
    ' Cocoa APIs, and which may live in an app shim process.'
]
native_window_tracker_cocoa.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
text_input_host.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
tooltip_manager_mac.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Manages native Cocoa tooltips for the given NativeWidgetNSWindowHostImpl.'
]
color_chooser_listener.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by a Listener object wishing to know about the\n' +
    ' the results from the color chooser dialog.'
]
color_chooser_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ColorChooser provides the UI to choose a color by mouse and/or keyboard.\n' +
    ' It is typically used for <input type="color">.  Currently the user can\n' +
    ' choose a color by dragging over the bar for hue and the area for saturation\n' +
    ' and value.\n' +
    ' All public methods on ColorChooser are safe to call before, during, or after\n' +
    ' the existence of the corresponding Widget/Views/etc.'
]
context_menu_controller.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ContextMenuController is responsible for showing the context menu for a\n' +
    ' View. To use a ContextMenuController invoke set_context_menu_controller on a\n' +
    ' View. When the appropriate user gesture occurs ShowContextMenu is invoked\n' +
    ' on the ContextMenuController.\n' +
    ' Setting a ContextMenuController on a view makes the view process mouse\n' +
    ' events.\n' +
    ' It is up to subclasses that do their own mouse processing to invoke\n' +
    " the appropriate ContextMenuController method, typically by invoking super's\n" +
    ' implementation for mouse processing.'
]
animated_image_view.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '///////////////////////////////////////////////////////////////////////////\n' +
    ' AnimatedImageView class.\n' +
    ' An AnimatedImageView can display a skia vector animation. The animation paint\n' +
    ' size can be set via SetImageSize. The animation is stopped by default.\n' +
    ' Use this over AnimatedIconView if you want to play a skottie animation file.\n' +
    '///////////////////////////////////////////////////////////////////////////'
]
badge.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A badge that displays a small piece of infromational text on a square blue\n' +
    ' background.'
]
base_control_test_widget.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bulleted_label_list_view.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class provides a convenient way to build a view for a bulleted list\n' +
    ' comprised of labels. The labels and the text style they should use are\n' +
    ' expected to be provided on construction.'
]
button.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A View representing a button. A Button is focusable by default and will\n' +
    ' be part of the focus chain.'
]
button_controller.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Handles logic not related to the visual aspects of a Button such as event\n' +
    ' handling and state changes.'
]
button_controller_delegate.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Captures the Button and View methods required for sharing the logic in\n' +
    ' ButtonController between different Button types.'
]
checkbox.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A native themed class representing a checkbox.  This class does not use\n' +
    ' platform specific objects to replicate the native platforms looks and feel.'
]
image_button.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' ToggleImageButton\n' +
    ' A toggle-able ImageButton.  It swaps out its graphics when toggled.\n' +
    '//////////////////////////////////////////////////////////////////////////////'
]
image_button_factory.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates an ImageButton with an ink drop and a centered image built from a\n' +
    ' vector icon that tracks color changes in NativeTheme.',
  ' Creates an ImageButton with an ink drop and a centered image in preparation\n' +
    ' for applying a vector icon with SetImageFromVectorIcon below.',
  ' Creates a ToggleImageButton with an ink drop and a centered image in\n' +
    ' preparation for applying a vector icon from SetImageFromVectorIcon below.',
  ' Configures an existing ImageButton with an ink drop and a centered image in\n' +
    ' preparation for applying a vector icon with SetImageFromVectorIcon below.',
  ' Sets images on |button| for STATE_NORMAL and STATE_DISABLED from the given\n' +
    ' vector icon and colors.',
  ' As above, but creates the images at the given size.',
  ' As above, but sets the toggled images for a toggled image button\n' +
    ' with a given icon color instead of deriving from a text color.',
  ' Sets images on |button| for STATE_NORMAL and STATE_DISABLED with the default\n' +
    ' size from the given vector icon and colors,',
  ' Sets images on a `ToggleImageButton` |button| for STATE_NORMAL and\n' +
    ' STATE_DISABLED with the default size from the given vector icon and colors.'
]
label_button.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' LabelButton is a button with text and an icon.'
]
label_button_border.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An empty Border with customizable insets used by a LabelButton.',
  " A Border that paints a LabelButton's background frame using image assets."
]
label_button_image_container.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Abstract interface used by LabelButton to handle updates to the button\n' +
    ' image(s). This interface lets callers configure the button to have one image\n' +
    ' or multiple without LabelButton itself needing to understand the details.\n' +
    ' LabelButton can simply call CreateView() to get a view it can add as a child,\n' +
    ' then call UpdateImage() any time state changes in such a way that the\n' +
    ' image(s) might need to be updated. Concrete instances of this class are\n' +
    ' responsible for laying out any image(s) and updating them in response to\n' +
    ' calls to UpdateImage(), as well as any other relevant signals.',
  ' The common-case implementation of LabelButtonImageContainer, which provides a\n' +
    " single image that tracks the LabelButton's ButtonState."
]
label_button_label.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A Label subclass that can be disabled. This is only used internally for\n' +
    ' views::LabelButton.'
]
md_text_button.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A button class that implements the Material Design text button spec.'
]
md_text_button_with_down_arrow.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The material design themed text button with a drop arrow displayed on the\n' +
    ' right side.'
]
menu_button.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' MenuButton\n' +
    '  A button that shows a menu when the left mouse button is pushed\n' +
    '//////////////////////////////////////////////////////////////////////////////'
]
menu_button_controller.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A controller that contains the logic for showing a menu when the left mouse\n' +
    ' is pushed.'
]
radio_button.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A native themed class representing a radio button.  This class does not use\n' +
    ' platform specific objects to replicate the native platforms looks and feel.'
]
toggle_button.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This view presents a button that has two states: on and off. This is similar\n' +
    ' to a checkbox but has no text and looks more like a two-state horizontal\n' +
    ' slider.'
]
combobox.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A non-editable combobox (aka a drop-down list or selector).\n' +
    ' Combobox has two distinct parts, the drop down arrow and the text.'
]
combobox_menu_model.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Adapts a ui::ComboboxModel to a ui::MenuModel.'
]
combobox_util.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Constants and functions common to combobox-like controls so we can reuse code\n' +
    ' and keep the same visual style.',
  ' Constants for the size of the combobox arrow.',
  ' Paints the arrow for a combobox.'
]
empty_combobox_model.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An empty model for a combo box.'
]
dot_indicator.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Dot indicator that can be added to a view, usually used as a status\n' +
    ' indicator.'
]
editable_combobox.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Textfield that also shows a drop-down list with suggestions.'
]
editable_password_combobox.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Textfield that also shows a drop-down list with suggestions and can switch\n' +
    ' between visible and obfuscated text.'
]
focus_ring.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' FocusRing is a View that is designed to act as an indicator of focus for its\n' +
    ' parent. It is a view that paints to a layer which extends beyond the bounds\n' +
    ' of its parent view.\n' +
    ' If MyView should show a rounded rectangular focus ring when it has focus and\n' +
    ' hide the ring when it loses focus, no other configuration is necessary. In\n' +
    ' other cases, it might be necessary to use the Set*() functions on FocusRing;\n' +
    ' these take care of repainting it when the state changes.\n' +
    ' TODO(tluk): FocusRing should not be a view but instead a new concept which\n' +
    ' only participates in view painting ( https://crbug.com/840796 ).',
  ' Set this on the FocusRing host to have the FocusRing paint an outline around\n' +
    ' itself. This ensures that the FocusRing has sufficient contrast with its\n' +
    ' surroundings (this is used for prominent MdTextButtons because they are blue,\n' +
    " while the background is light/dark, and the FocusRing doesn't contrast well\n" +
    ' with both the interior and exterior of the button). This may need some polish\n' +
    ' (such as blur?) in order to be expandable to all controls. For now it solves\n' +
    ' color contrast on prominent buttons which is an a11y issue. See\n' +
    ' https://crbug.com/1197631.\n' +
    ' TODO(pbos): Consider polishing this well enough that this can be\n' +
    ' unconditional. This may require rolling out `kCascadingBackgroundColor` to\n' +
    ' more surfaces to have an accurate background color.'
]
focusable_border.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A Border class to draw a focused border around a field (e.g textfield).'
]
highlight_path_generator.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' HighlightPathGenerators are used to generate its highlight path. This\n' +
    " highlight path is used to generate the View's focus ring and ink-drop\n" +
    ' effects.',
  ' Sets a highlight path that is empty. This is used for ink drops that want to\n' +
    ' rely on the size of their created ripples/highlights and not have any\n' +
    ' clipping applied to them.',
  ' Sets a rectangular highlight path.',
  ' Sets a centered circular highlight path.',
  ' Sets a pill-shaped highlight path.',
  ' Sets a centered fixed-size circular highlight path.',
  ' Sets a rounded rectangle highlight path with optional insets.'
]
image_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '///////////////////////////////////////////////////////////////////////////\n' +
    ' ImageView class.\n' +
    ' An ImageView can display an image from an ImageSkia. If a size is provided,\n' +
    ' the ImageView will resize the provided image to fit if it is too big or will\n' +
    ' center the image if smaller. Otherwise, the preferred size matches the\n' +
    ' provided image size.\n' +
    '///////////////////////////////////////////////////////////////////////////'
]
image_view_base.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
label.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A view subclass that can display a string.'
]
link.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Link class\n' +
    ' A Link is a label subclass that looks like an HTML link. It has a\n' +
    ' controller which is notified when a click occurs.\n' +
    '//////////////////////////////////////////////////////////////////////////////'
]
link_fragment.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A `LinkFragment` can be used to represent a logical link that spans across\n' +
    ' multiple lines. Connected `LinkFragment`s adjust their style if any single\n' +
    ' one of them is hovered over of focused.'
]
menu_closure_animation_mac.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class implements the Mac menu closure animation:\n' +
    '    1) For 100ms, the selected item is drawn as unselected\n' +
    '    2) Then, for another 100ms, the selected item is drawn as selected\n' +
    '    3) Then, and the window fades over 250ms to transparency\n' +
    ' Note that this class is owned by the involved MenuController, so if the menu\n' +
    ' is destructed early for any reason, this class will be destructed also, which\n' +
    ' will stop the timer or animation (if they are running), so the callback will\n' +
    ' *not* be run - which is good, since the MenuController that would have\n' +
    ' received it is being deleted.\n' +
    ' This class also supports animating a menu away without animating the\n' +
    ' selection effect, which is achieved by passing nullptr for the item to\n' +
    ' animate. In this case, the animation skips straight to step 3 above.'
]
menu_cocoa_watcher_mac.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class executes a callback when a native menu begins tracking, or when a\n' +
    ' new window takes focus. With native menus, each one automatically closes when\n' +
    ' a new one begins tracking, and MenuPreTargetHandlerAura::OnWindowActivated()\n' +
    ' closes menus when new windows take focus. This allows Views menus to have the\n' +
    ' correct behavior.'
]
menu_config.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Layout type information for menu items. Use the instance() method to obtain\n' +
    ' the MenuConfig for the current platform.'
]
menu_controller.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' MenuController -------------------------------------------------------------',
  ' MenuController is used internally by the various menu classes to manage\n' +
    ' showing, selecting and drag/drop for menus. All relevant events are\n' +
    ' forwarded to the MenuController from SubmenuView and MenuHost.'
]
menu_controller_cocoa_delegate_params.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Create and populate a MenuControllerParams struct with the right parameters\n' +
    ' for a menu associated with `widget`.'
]
menu_controller_delegate.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is internal as there should be no need for usage of this class outside\n' +
    ' of views.',
  ' Used by MenuController to notify of interesting events that are intended for\n' +
    ' the class using MenuController. This is implemented by MenuRunnerImpl.'
]
menu_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' MenuDelegate --------------------------------------------------------------',
  ' Delegate for a menu. This class is used as part of MenuItemView, see it\n' +
    ' for details.\n' +
    ' TODO(sky): merge this with ui::MenuModel.'
]
menu_host.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is internal to views.',
  ' `SubmenuView` uses a `MenuHost` to house the `SubmenuView`.\n' +
    ' As a `Widget`, `MenuHost` is owned by the widget system. `SubmenuView`\n' +
    ' creates `MenuHost` and when `SubmenuView` is done with the `MenuHost`\n' +
    ' `DestroyMenuHost` is invoked, which leads to the destruction of the\n' +
    ' `MenuHost`. Alternatively, the OS may destroy the widget. In this case\n' +
    ' `MenuHost` invokes `MenuHostDestroyed` on the `SubmenuView` and the\n' +
    ' `SubmenuView` then drops references to the `MenuHost`.'
]
menu_host_root_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' MenuHostRootView is the RootView of the window showing the menu.\n' +
    " SubmenuView's scroll view is added as a child of MenuHostRootView.\n" +
    ' MenuHostRootView forwards relevant events to the MenuController.\n' +
    ' As all the menu items are owned by the root menu item, care must be taken\n' +
    " such that when MenuHostRootView is deleted it doesn't delete the menu items."
]
menu_insertion_delegate_win.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_item_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' MenuItemView --------------------------------------------------------------',
  ' MenuItemView represents a single menu item with a label and optional icon.\n' +
    ' Each MenuItemView may also contain a submenu, which in turn may contain\n' +
    ' any number of child MenuItemViews.\n' +
    ' To use a menu create an initial MenuItemView using the constructor that\n' +
    ' takes a MenuDelegate, then create any number of child menu items by way\n' +
    ' of the various AddXXX methods.\n' +
    ' MenuItemView is itself a View, which means you can add Views to each\n' +
    ' MenuItemView. This is normally NOT want you want, rather add other child\n' +
    ' Views to the submenu of the MenuItemView. Any child views of the MenuItemView\n' +
    ' that are focusable can be navigated to by way of the up/down arrow and can be\n' +
    ' activated by way of space/return keys. Activating a focusable child results\n' +
    ' in |AcceleratorPressed| being invoked. Note, that as menus try not to steal\n' +
    ' focus from the hosting window child views do not actually get focus. Instead\n' +
    ' |SetHotTracked| is used as the user navigates around.\n' +
    ' To show the menu use MenuRunner. See MenuRunner for details on how to run\n' +
    ' (show) the menu as well as for details on the life time of the menu.',
  ' EmptyMenuMenuItem ----------------------------------------------------------',
  ' EmptyMenuMenuItem is used when a menu has no menu items.'
]
menu_model_adapter.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class wraps an instance of ui::MenuModel with the views::MenuDelegate\n' +
    ' interface required by views::MenuItemView.'
]
menu_pre_target_handler.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A MenuPreTargetHandler is responsible for intercepting events destined for\n' +
    " another widget (the menu's owning widget) and letting the menu's controller\n" +
    ' try dispatching them first.'
]
menu_pre_target_handler_aura.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' MenuPreTargetHandlerAura is used to observe activation changes, cancel\n' +
    ' events, and root window destruction, to shutdown the menu.\n' +
    ' Additionally handles key events to provide accelerator support to menus.'
]
menu_pre_target_handler_mac.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Stops dispatch of key events when they are handled by MenuController.\n' +
    ' While similar to EventMonitorMac, that class does not allow dispatch changes.'
]
menu_runner.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' MenuRunner is responsible for showing (running) the menu and additionally\n' +
    ' owning the MenuItemView. It is safe to delete MenuRunner at any point, but\n' +
    ' MenuRunner will not notify you of the closure caused by a deletion.\n' +
    ' If MenuRunner is deleted while the menu is showing the delegate of the menu\n' +
    " is reset. This is done to ensure delegates aren't notified after they may\n" +
    ' have been deleted.\n' +
    ' Similarly you should avoid creating MenuRunner on the stack. Doing so means\n' +
    ' MenuRunner may not be immediately destroyed if your object is destroyed,\n' +
    ' resulting in possible callbacks to your now deleted object. Instead you\n' +
    ' should define MenuRunner as a scoped_ptr in your class so that when your\n' +
    ' object is destroyed MenuRunner initiates the proper cleanup and ensures your\n' +
    " object isn't accessed again."
]
menu_runner_handler.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used internally by MenuRunner to show the menu. Can be set in tests (see\n' +
    ' MenuRunnerTestApi) for mocking running of the menu.'
]
menu_runner_impl.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A menu runner implementation that uses views::MenuItemView to show a menu.'
]
menu_runner_impl_adapter.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Given a MenuModel, adapts MenuRunnerImpl which expects a MenuItemView.'
]
menu_runner_impl_cocoa.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A menu runner implementation that uses NSMenu to show a context menu.'
]
menu_runner_impl_interface.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An abstract interface for menu runner implementations.\n' +
    " Invoke Release() to destroy. Release() deletes immediately if the menu isn't\n" +
    ' showing. If the menu is showing Release() cancels the menu and when the\n' +
    ' nested RunMenuAt() call returns deletes itself and the menu.'
]
menu_runner_impl_mac.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Menu runner implementation that chooses between and delegates to either\n' +
    ' MenuRunnerImplCocoa or MenuRunnerImplRemoteCocoa, depending on if the widget\n' +
    ' the menu is being shown in is local or remote.'
]
menu_runner_impl_remote_cocoa.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Menu runner implementation that serializes the menu model over mojo, to then\n' +
    ' use NSMenu in possibly a different process to show a context menu.\n' +
    ' Like MenuRunnerImplCocoa this only supports context menus.'
]
menu_scroll_view_container.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' MenuScrollViewContainer contains the SubmenuView (through a MenuScrollView)\n' +
    ' and two scroll buttons. The scroll buttons are only visible and enabled if\n' +
    ' the preferred height of the SubmenuView is bigger than our bounds.'
]
menu_separator.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_types.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Where a popup menu should be anchored to for non-RTL languages. The opposite\n' +
    ' position will be used if base::i18n::IsRTL() is true. The Bubble flags are\n' +
    ' used when the menu should get enclosed by a bubble.'
]
native_menu_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A wrapper around a native Windows menu.'
]
submenu_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' SubmenuView is the parent of all menu items.\n' +
    ' SubmenuView has the following responsibilities:\n' +
    ' . It positions and sizes all child views (any type of View may be added,\n' +
    '   not just MenuItemViews).\n' +
    ' . Forwards the appropriate events to the MenuController. This allows the\n' +
    '   MenuController to update the selection as the user moves the mouse around.\n' +
    ' . Renders the drop indicator during a drop operation.\n' +
    ' . Shows and hides the window (a NativeWidget) when the menu is shown on\n' +
    '   screen.\n' +
    ' SubmenuView is itself contained in a MenuScrollViewContainer.\n' +
    ' MenuScrollViewContainer handles showing as much of the SubmenuView as the\n' +
    ' screen allows. If the SubmenuView is taller than the screen, scroll buttons\n' +
    ' are provided that allow the user to see all the menu items.'
]
test_menu_item_view.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A MenuItemView implementation with a public destructor (so we can clean up\n' +
    ' in tests).'
]
message_box_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class displays the contents of a message box. It is intended for use\n' +
    ' within a constrained window, and has options for a message, prompt, OK\n' +
    ' and Cancel buttons.'
]
native_view_host.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " If a NativeViewHost's native view is a Widget, this native window\n" +
    ' property is set on the widget, pointing to the owning NativeViewHost.',
  ' A View type that hosts a gfx::NativeView. The bounds of the native view are\n' +
    ' kept in sync with the bounds of this view as it is moved and sized.\n' +
    ' Under the hood, a platform-specific NativeViewHostWrapper implementation does\n' +
    ' the platform-specific work of manipulating the underlying OS widget type.'
]
native_view_host_aura.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Aura implementation of NativeViewHostWrapper.'
]
native_view_host_mac.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mac implementation of NativeViewHostWrapper.'
]
native_view_host_test_base.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class for NativeViewHost tests on different platforms.'
]
native_view_host_wrapper.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface that implemented by an object that wraps a gfx::NativeView on\n' +
    ' a specific platform, used to perform platform specific operations on that\n' +
    ' native view when attached, detached, moved and sized.'
]
prefix_delegate.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface used to expose lists of items for selection by text input.'
]
prefix_selector.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' PrefixSelector is used to change the selection in a view as the user\n' +
    ' types characters.'
]
progress_bar.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Progress bar is a control that indicates progress visually.'
]
progress_ring_utils.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper function that draws a progress ring on `canvas`. The progress ring\n' +
    ' consists of a partial ring that indicates the progress, and the rest of the\n' +
    ' ring is stroked with a background color. `start_angle` and `sweep_angle` are\n' +
    ' used to indicate the current progress of the ring.',
  ' Helper function that draws a spinning ring on `canvas`. The spinning ring\n' +
    ' consists of three arches distributed evenly on the ring, with spaces in\n' +
    ' between stroked with a background color. `start_angle` is used to indicate\n' +
    ' the start angle of the first arch.'
]
resize_area.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An invisible area that acts like a horizontal resizer.'
]
resize_area_delegate.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by objects that want to be notified about the resize\n' +
    ' event.'
]
scroll_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '///////////////////////////////////////////////////////////////////////////\n' +
    ' ScrollView class\n' +
    ' A ScrollView is used to make any View scrollable. The view is added to\n' +
    ' a viewport which takes care of clipping.\n' +
    ' In this current implementation both horizontal and vertical scrollbars are\n' +
    ' added as needed.\n' +
    ' The scrollview supports keyboard UI and mousewheel.\n' +
    '///////////////////////////////////////////////////////////////////////////',
  ' When building with GCC this ensures that an instantiation of the\n' +
    ' ScrollView::SetContents<View> template is available with which to link.',
  ' VariableRowHeightScrollHelper is intended for views that contain rows of\n' +
    ' varying height. To use a VariableRowHeightScrollHelper create one supplying\n' +
    ' a Controller and delegate GetPageScrollIncrement and GetLineScrollIncrement\n' +
    ' to the helper. VariableRowHeightScrollHelper calls back to the\n' +
    ' Controller to determine row boundaries.',
  ' FixedRowHeightScrollHelper is intended for views that contain fixed height\n' +
    ' height rows. To use a FixedRowHeightScrollHelper delegate\n' +
    ' GetPageScrollIncrement and GetLineScrollIncrement to it.'
]
base_scroll_bar_thumb.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' BaseScrollBarThumb\n' +
    '  A view that acts as the thumb in the scroll bar track that the user can\n' +
    '  drag to scroll the associated contents view within the viewport.\n' +
    '/////////////////////////////////////////////////////////////////////////////'
]
cocoa_scroll_bar.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The transparent scrollbar for Mac which overlays its contents.'
]
overlay_scroll_bar.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The transparent scrollbar which overlays its contents.'
]
scroll_bar.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '///////////////////////////////////////////////////////////////////////////\n' +
    ' ScrollBarController\n' +
    ' ScrollBarController defines the method that should be implemented to\n' +
    ' receive notification from a scrollbar\n' +
    '///////////////////////////////////////////////////////////////////////////',
  '///////////////////////////////////////////////////////////////////////////\n' +
    ' ScrollBar\n' +
    ' A View subclass to wrap to implement a ScrollBar. Our current windows\n' +
    ' version simply wraps a native windows scrollbar.\n' +
    ' A scrollbar is either horizontal or vertical\n' +
    '///////////////////////////////////////////////////////////////////////////'
]
scroll_bar_button.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A button that activates on mouse pressed rather than released, and that\n' +
    ' continues to fire the clicked action as the mouse button remains pressed\n' +
    ' down on the button.'
]
scroll_bar_views.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Views implementation for the scrollbar.'
]
separator.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The Separator class is a view that shows a line used to visually separate\n' +
    ' other views.'
]
slider.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Slider operates in interval [0,1] by default, but can also switch between a\n' +
    ' predefined set of values, see SetAllowedValues method below.'
]
styled_label.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A class which can apply mixed styles to a block of text. Currently, text is\n' +
    ' always multiline. Trailing whitespace in the styled label text is not\n' +
    ' supported and will be trimmed on StyledLabel construction. Leading\n' +
    ' whitespace is respected, provided not only whitespace fits in the first line.\n' +
    ' In this case, leading whitespace is ignored.'
]
tabbed_pane.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TabbedPane is a view that shows tabs. When the user clicks on a tab, the\n' +
    ' associated view is displayed.\n' +
    ' Support for horizontal-highlight and vertical-border modes is limited and\n' +
    ' may require additional polish.',
  ' The tab view shown in the tab strip.',
  ' The tab strip shown above/left of the tab contents.'
]
tabbed_pane_listener.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by an object to let it know that a tabbed pane was\n' +
    ' selected by the user at the specified index.'
]
table_grouper.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TableGrouper is used by TableView to group a set of rows and treat them\n' +
    ' as one. Rows that fall in the same group are selected together and sorted\n' +
    ' together.'
]
table_header.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Views used to render the header for the table.'
]
table_utils.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the width needed to display the contents of the specified column.\n' +
    ' This is used internally by CalculateTableColumnSizes() and generally not\n' +
    ' useful by itself. |header_padding| is padding added to the header.',
  ' Determines the width for each of the specified columns. |width| is the width\n' +
    ' to fit the columns into. |header_font_list| the font list used to draw the\n' +
    ' header and |content_font_list| the header used to draw the content. |padding|\n' +
    ' is extra horizontal spaced added to each cell, and |header_padding| added to\n' +
    ' the width needed for the header.',
  ' Converts a TableColumn::Alignment to the alignment for drawing the string.',
  ' Returns the index of the closest visible column index to `x`. Return value is\n' +
    ' in terms of `table.visible_columns()`. Returns nullopt if there are no\n' +
    ' visible columns.',
  ' Returns the mirror of the table column alignment if the layout is\n' +
    ' right-to-left. If the layout is left-to-right, the same alignment is\n' +
    ' returned.'
]
table_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A TableView is a view that displays multiple rows with any number of columns.\n' +
    ' TableView is driven by a TableModel. The model returns the contents\n' +
    ' to display. TableModel also has an Observer which is used to notify\n' +
    ' TableView of changes to the model so that the display may be updated\n' +
    ' appropriately.\n' +
    ' TableView itself has an observer that is notified when the selection\n' +
    ' changes.\n' +
    ' When a table is sorted the model coordinates do not necessarily match the\n' +
    ' view coordinates. All table methods are in terms of the model. If you need to\n' +
    ' convert to view coordinates use ModelToView().\n' +
    ' Sorting is done by a locale sensitive string sort. You can customize the\n' +
    ' sort by way of overriding TableModel::CompareValues().',
  " The cell's in the first column of a table can contain:\n" +
    ' - only text\n' +
    ' - a small icon (16x16) and some text\n' +
    ' - a check box and some text',
  ' Allow use of ScopedObservation with TableView, which requires use of\n' +
    ' SetObserver and only supports a single TableViewObserver at a time.'
]
table_view_observer.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TableViewObserver is notified about the TableView selection.'
]
test_table_model.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
textarea.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A multiline textfield implementation.'
]
textfield.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A views/skia textfield implementation. No platform-specific code is used.'
]
textfield_controller.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This defines the callback interface for other code to be notified of changes\n' +
    ' in the state of a text field.'
]
textfield_model.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Internal Edit class that keeps track of edits for undo/redo.',
  ' The types of merge behavior implemented by Edit operations.',
  ' A model that represents text content for a views::Textfield.\n' +
    ' It supports editing, selection and cursor manipulation.'
]
textfield_test_api.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper class to access internal state of Textfield in tests.'
]
textfield_unittest.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
theme_tracking_image_view.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An ImageView that displays either `light_image` or `dark_image` based on the\n' +
    ' current background color returned by `get_background_color_callback`. Tracks\n' +
    ' theme changes so the image is always the correct version. `light_image` and\n' +
    ' `dark_image` must be of the same size. The `light_image` is set by default\n' +
    ' upon construction.'
]
throbber.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Throbbers display an animation, usually used as a status indicator.',
  ' A SmoothedThrobber is a throbber that is representing potentially short\n' +
    ' and nonoverlapping bursts of work.  SmoothedThrobber ignores small\n' +
    ' pauses in the work stops and starts, and only starts its throbber after\n' +
    ' a small amount of work time has passed.'
]
tree_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TreeView displays hierarchical data as returned from a TreeModel. The user\n' +
    ' can expand, collapse and edit the items. A Controller may be attached to\n' +
    ' receive notification of selection changes and restrict editing.\n' +
    ' In addition to tracking selection, TreeView also tracks the active node,\n' +
    ' which is the item that receives keyboard input when the tree has focus.\n' +
    ' Active/focus is like a pointer for keyboard navigation, and operations such\n' +
    ' as selection are performed at the point of focus. The active node is synced\n' +
    ' to the selected node. When the active node is nullptr, the TreeView itself is\n' +
    ' the target of keyboard input.\n' +
    " Note on implementation. This implementation doesn't scale well. In particular\n" +
    ' it does not store any row information, but instead calculates it as\n' +
    " necessary. But it's more than adequate for current uses."
]
tree_view_controller.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TreeViewController ---------------------------------------------------------',
  ' Controller for the treeview.'
]
tree_view_drawing_provider.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is responsible for customizing the appearance of a TreeView.\n' +
    ' Install an instance of it into a TreeView using\n' +
    ' |TreeView::SetDrawingProvider|.'
]
views_text_services_context_menu.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is used to add and handle text service items in the text context\n' +
    ' menu.'
]
views_text_services_context_menu_base.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This base class is used to add and handle text service items in the textfield\n' +
    ' context menu. Specific platforms may subclass and add additional items.'
]
views_text_services_context_menu_chromeos.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is used to add and handle text service items in ChromeOS native UI\n' +
    ' textfield context menus. The implementation is specific to the platform (Ash\n' +
    ' or Lacros) where the textfield lives.'
]
unhandled_keyboard_event_handler.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class handles unhandled keyboard messages coming back from the renderer\n' +
    ' process.'
]
web_contents_set_background_color.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defined in SkColor.h (32-bit ARGB color).',
  ' Ensures that the background color of a given WebContents instance is always\n' +
    ' set to a given color value.'
]
web_dialog_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A kind of webview that can notify its delegate when its content is ready.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' WebDialogView is a view used to display an web dialog to the user. The\n' +
    ' content of the dialogs is determined by the delegate\n' +
    ' (ui::WebDialogDelegate), but is basically a file URL along with a\n' +
    ' JSON input string. The HTML is supposed to show a UI to the user and is\n' +
    ' expected to send back a JSON file as a return value.\n' +
    '//////////////////////////////////////////////////////////////////////////////\n' +
    ' TODO(akalin): Make WebDialogView contain an WebDialogWebContentsDelegate\n' +
    ' instead of inheriting from it to avoid violating the "no multiple\n' +
    ' inheritance" rule.'
]
webview.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides a view of a WebContents instance.  WebView can be used standalone,\n' +
    ' creating and displaying an internally-owned WebContents; or within a full\n' +
    ' browser where the browser swaps its own WebContents instances in/out (e.g.,\n' +
    ' for browser tabs).\n' +
    ' WebView creates and owns a single child view, a NativeViewHost, which will\n' +
    ' hold and display the native view provided by a WebContents.\n' +
    ' EmbedFullscreenWidgetMode: When enabled, WebView will observe for WebContents\n' +
    ' fullscreen changes and automatically swap the normal native view with the\n' +
    ' fullscreen native view (if different).  In addition, if the WebContents is\n' +
    ' being screen-captured, the view will be centered within WebView, sized to\n' +
    ' the aspect ratio of the capture video resolution, and scaling will be avoided\n' +
    ' whenever possible.'
]
webview_export.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines WEBVIEW_EXPORT so that functionality implemented by the webview\n' +
    ' module can be exported to consumers.'
]
tooltip_aura_test_api.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
tooltip.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tooltip is responsible for showing the tooltip in an appropriate manner.\n' +
    ' Tooltip is used by TooltipController.'
]
tooltip_aura.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implementation of Tooltip that shows the tooltip using a Widget and Label.'
]
tooltip_controller.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TooltipController listens for events that can have an impact on the\n' +
    ' tooltip state.'
]
tooltip_controller_test_helper.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TooltipControllerTestHelper provides access to TooltipControllers private\n' +
    ' state.',
  ' Trivial View subclass that lets you set the tooltip text.'
]
tooltip_lacros.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implementation of Tooltip on Lacros using server side tooltip.\n' +
    ' TooltipLacros requests Ash to show/hide tooltip and Ash creates tooltip\n' +
    ' widget on server side and notifies Lacros of the tooltip visibility, position\n' +
    ' and the actual text to be shown.\n' +
    ' This is only used when Ash supports server side tooltip. If not, fallbacks to\n' +
    ' TooltipAura.'
]
tooltip_state_manager.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TooltipStateManager separates the state handling from the events handling of\n' +
    ' the TooltipController. It is in charge of updating the tooltip state and\n' +
    ' keeping track of it.'
]
tooltip_view_aura.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The contents view for tooltip widget on aura platforms.',
  ' TODO(oshima): Consider to use views::Label when the performance issue is\n' +
    ' resolved.'
]
debugger_utils.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class acts as a "view" over the View class. This has been done to allow\n' +
    ' debugger extensions to remnain resillient to structure and version changes in\n' +
    ' the code base.\n' +
    ' TODO(tluk): Replace use of //ui/views/debug_utils.h with this.'
]
debug_utils.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Log the view hierarchy.',
  ' Print the view hierarchy to |out|.',
  ' Log the focus traversal hierarchy.',
  ' Log the information of the widget to |out|. |detailed| controls the amount of\n' +
    ' information logged.',
  ' Returns string containing a graph of the views hierarchy in graphViz DOT\n' +
    ' language (http://graphviz.org/). Can be called within debugger and saved\n' +
    ' to a file to compile/view.'
]
dialog_model_context_menu_controller.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A ContextMenuController that makes it easier to host context menus using\n' +
    ' ui::DialogModel. The constructor registers `this` as the context-menu\n' +
    ' controller of the `host` View.'
]
drag_controller.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' DragController is responsible for writing drag data for a view, as well as\n' +
    " supplying the supported drag operations. Use DragController if you don't\n" +
    ' want to subclass.'
]
drag_utils.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Starts a drag operation. This blocks until the drag operation completes or is\n' +
    ' cancelled by calling `CancelShellDrag()`.',
  ' Cancels a currently running drag operation. If `allow_widget_mismatch` is\n' +
    ' true, the check whether a drag session is currently running is skipped; this\n' +
    ' can be used to cancel a drag that was initiated by a different widget, if the\n' +
    ' platform supports it.',
  " Returns the device scale for the display associated with this |widget|'s\n" +
    ' native view.'
]
event_monitor.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' RAII-style class that forwards events matching the specified |types| to\n' +
    ' |event_observer| before they are dispatched to the intended target.\n' +
    ' EventObservers cannot modify events nor alter dispatch.'
]
event_monitor_aura.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observes events by installing a pre-target handler on the ui::EventTarget.'
]
event_monitor_mac.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
actions_example.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
animated_image_view_example.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
animation_example.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ax_example.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ButtonExample simply counts the number of clicks.'
]
badge_example.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' BadgeExample demonstrates how to use the generic views::Badge and\n' +
    ' the New Badge in a MenuItemView.'
]
box_layout_example.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bubble_example.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A Bubble example.'
]
button_example.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ButtonExample simply counts the number of clicks.'
]
button_sticker_sheet.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An "example" that displays a sticker sheet of all the available material\n' +
    ' design button styles. This example only looks right with `--secondary-ui-md`.\n' +
    " It is designed to be as visually similar to the UI Harmony spec's sticker\n" +
    ' sheet for buttons as possible.'
]
checkbox_example.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' CheckboxExample exercises a Checkbox control.'
]
color_chooser_example.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A ColorChooser example.'
]
colored_dialog_example.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An example that exercises BubbleDialogDelegateView or DialogDelegateView.'
]
colors_example.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
combobox_example.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
create_examples.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates the default set of examples.'
]
designer_example.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' DesignerExample. Demonstrates a simple visual designer for creating, placing,\n' +
    ' moving and sizing individual views on a surface.'
]
dialog_example.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An example that exercises BubbleDialogDelegateView or DialogDelegateView.'
]
example_base.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
example_combobox_model.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
examples_action_id.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' clang-format on',
  ' clang-format off',
  ' clang-format on',
  ' Note that this second include is not redundant. The second inclusion of the\n' +
    ' .inc file serves to undefine the macros the first inclusion defined.'
]
examples_color_id.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' clang-format on',
  ' clang-format off',
  ' clang-format on',
  ' Note that this second include is not redundant. The second inclusion of the\n' +
    ' .inc file serves to undefine the macros the first inclusion defined.'
]
examples_color_mixer.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
examples_exit_code.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
examples_main_proc.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
examples_skia_gold_pixel_diff.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
examples_themed_label.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
examples_views_delegate_chromeos.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
examples_window.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the current widget.',
  ' Shows a window with the views examples in it. |extra_examples| contains any\n' +
    ' additional examples to add. |window_context| is used to determine where the\n' +
    ' window should be created (see |Widget::InitParams::context| for details).',
  ' Prints |string| in the status area, at the bottom of the window.',
  ' Same as LogStatus(), but with a format string.'
]
examples_window_with_content.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Shows a window with the views examples in it.'
]
fade_animation.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
flex_layout_example.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ink_drop_example.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
label_example.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
layout_example_base.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides an example of a layout manager with arbitrary specific manager and\n' +
    ' controls. Lays out a sequence of ChildPanels in a view using the layout\n' +
    ' manager of choice.'
]
link_example.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
login_bubble_dialog_example.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Instantiates the login dialog example.'
]
menu_example.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' MenuExample demonstrates how to use the MenuModelAdapter and MenuRunner\n' +
    ' classes.'
]
message_box_example.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A MessageBoxView example. This tests some of checkbox features as well.'
]
multiline_example.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An example that compares the multiline rendering of different controls.'
]
notification_example.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
progress_bar_example.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
radio_button_example.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
scroll_view_example.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
slider_example.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
square_ink_drop_example.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
tabbed_pane_example.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A TabbedPane example tests adding and selecting tabs.'
]
table_example.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
text_example.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
textarea_example.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
textfield_example.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TextfieldExample mimics login screen.'
]
throbber_example.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
toggle_button_example.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ToggleButtonExample exercises a ToggleButton control.'
]
tree_view_example.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
typography_example.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
vector_example.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_examples_export.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines VIEWS_EXAMPLES_EXPORT so that functionality implemented by the\n' +
    ' views_examples_with_content_lib module can be exported to consumers.'
]
views_examples_with_content_export.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines VIEWS_EXAMPLES_WITH_CONTENT_EXPORT so that functionality implemented\n' +
    ' by the views_examples_with_content_lib module can be exported to consumers.'
]
webview_example.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
widget_example.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' WidgetExample demonstrates how to create a popup widget.'
]
external_focus_tracker.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ExternalFocusTracker tracks the last focused view which belongs to the\n' +
    ' provided focus manager and is not either the provided parent view or one of\n' +
    ' its descendants. This is generally used if the parent view want to return\n' +
    ' focus to some other view once it is dismissed. The parent view and the focus\n' +
    ' manager must exist for the duration of the tracking. If the focus manager\n' +
    ' must be deleted before this object is deleted, make sure to call\n' +
    ' SetFocusManager(NULL) first.\n' +
    ' Typical use: When a view is added to the view hierarchy, it instantiates an\n' +
    ' ExternalFocusTracker and passes in itself and its focus manager. Then,\n' +
    ' when that view wants to return focus to the last focused view which is not\n' +
    ' itself and not a descandant of itself, (usually when it is being closed)\n' +
    ' it calls FocusLastFocusedExternalView.'
]
focus_manager.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' FocusManager handles focus traversal, stores and restores focused views, and\n' +
    ' handles keyboard accelerators. This class is an implementation detail of\n' +
    ' views::. Most callers should use methods of views:: classes rather than using\n' +
    ' FocusManager directly.\n' +
    ' There are 2 types of focus:\n' +
    ' - The native focus, which is the focus that a gfx::NativeView has.\n' +
    ' - The view focus, which is the focus that a views::View has.\n' +
    ' When a top window (derived from views::Widget) that is not a child window is\n' +
    ' created, it creates and owns a FocusManager to manage the focus for itself\n' +
    ' and all its child windows.\n' +
    ' To be able to be focus-traversed when the Tab key is pressed, a class should\n' +
    ' implement the FocusTraversable interface. RootViews implement\n' +
    ' FocusTraversable. The FocusManager contains a top FocusTraversable instance,\n' +
    ' which is the top RootView.\n' +
    ' If you just use Views, then the RootView handles focus traversal for you. The\n' +
    ' default traversal order is the order in which the views have been added to\n' +
    ' their container. You can call View::Insert{Before,After}InFocusList() to\n' +
    ' explicitly control the focus order.\n' +
    ' If you are embedding a native view containing a nested RootView (for example\n' +
    ' by adding a view that contains a native widget as its native component),\n' +
    ' then you need to:\n' +
    ' - Override the View::GetFocusTraversable method in your outer component.\n' +
    '   It should return the RootView of the inner component. This is used when\n' +
    '   the focus traversal traverse down the focus hierarchy to enter the nested\n' +
    '   RootView. In the example mentioned above, the NativeControl overrides\n' +
    '   GetFocusTraversable and returns hwnd_view_container_->GetRootView().\n' +
    ' - Call Widget::SetFocusTraversableParent on the nested RootView and point\n' +
    '   it to the outer RootView. This is used when the focus goes out of the\n' +
    '   nested RootView. In the example:\n' +
    '     hwnd_view_container_->GetWidget()->SetFocusTraversableParent(\n' +
    '         native_control->GetRootView());\n' +
    ' - Call RootView::SetFocusTraversableParentView on the nested RootView with\n' +
    '   the parent view that directly contains the native window. This is needed\n' +
    '   when traversing up from the nested RootView to know which view to start\n' +
    '   with when going to the next/previous view. In the example:\n' +
    '     hwnd_view_container_->GetWidget()->SetFocusTraversableParent(\n' +
    '         native_control);\n' +
    ' Note that FocusTraversable views do not have to be RootViews:\n' +
    ' AccessibleToolbarView is FocusTraversable.',
  ' The FocusTraversable interface is used by components that want to process\n' +
    ' focus traversal events (due to Tab/Shift-Tab key events).',
  ' This interface should be implemented by classes that want to be notified when\n' +
    ' the focus is about to change.  See the Add/RemoveFocusChangeListener methods.',
  ' FocusManager adds itself as a ViewObserver to the currently focused view.'
]
focus_manager_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Delegate interface for views::FocusManager.'
]
focus_manager_factory.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A factory to create FocusManager. This can be used to inject a custom\n' +
    ' factory.'
]
focus_search.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' FocusSearch is an object that implements the algorithm to find the\n' +
    ' next view to focus.'
]
widget_focus_manager.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This interface should be implemented by classes that want to be notified when\n' +
    ' the native focus is about to change.  Listeners implementing this interface\n' +
    ' will be invoked for all native focus changes across the entire Chrome\n' +
    ' application.  FocusChangeListeners are only called for changes within the\n' +
    ' children of a single top-level native-view.',
  ' A basic helper class that is used to disable native focus change\n' +
    ' notifications within a scope.',
  ' Specialization for use with base::ScopedObservation:'
]
highlight_border.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A rounded rectangle border that has inner (highlight) and outer color.\n' +
    ' Useful when go/cros-launcher-spec mentions "BorderHighlight".'
]
input_event_activation_protector.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The goal of this class is to prevent potentially unintentional user\n' +
    ' interaction with a UI element.\n' +
    ' See switch kDisableInputEventActivationProtectionForTesting for disabling it.'
]
element_tracker_views.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wraps a View in an ui::TrackedElement.',
  ' Manages TrackedElements associated with View objects.',
  ' Template implementations.'
]
interaction_sequence_views.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides utility methods for using ui::InteractionsSequence with Views.'
]
interaction_test_util_mouse.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Class which provides useful primitives for controlling the mouse and then\n' +
    ' cleaning up mouse state (even if a test fails). As this object does control\n' +
    ' the mouse, do not create multiple simultaneous instances, and strongly prefer\n' +
    ' to use it only in test suites such as interactive_ui_tests where a single\n' +
    ' test can control the mouse at a time.'
]
interaction_test_util_views.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Views implementation of InteractionTestUtil::Simulator.\n' +
    ' Add one to your InteractionTestUtil instance to get Views support.'
]
interactive_views_test.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides interactive test functionality for Views.\n' +
    ' Interactive tests use InteractionSequence, ElementTracker, and\n' +
    ' InteractionTestUtil to provide a common library of concise test methods. This\n' +
    ' convenience API is nicknamed "Kombucha" (see\n' +
    ' //chrome/test/interaction/README.md for more information).\n' +
    ' This class is not a test fixture; it is a mixin that can be added to existing\n' +
    ' test classes using `InteractiveViewsTestT<T>` - or just use\n' +
    ' `InteractiveViewsTest`, which *is* a test fixture (preferred; see below).\n' +
    ' To use Kombucha for in-process browser tests, instead see:\n' +
    ' //chrome/test/interaction/interactive_browser_test.h',
  ' Template that adds InteractiveViewsTestApi to any test fixture. Prefer to use\n' +
    ' InteractiveViewsTest unless you specifically need to inherit from another\n' +
    ' test class.\n' +
    ' You must call SetContextWidget() before using RunTestSequence() or any of the\n' +
    ' mouse actions.\n' +
    ' See //chrome/test/interaction/README.md for usage.',
  ' Convenience test fixture for Views tests that supports\n' +
    ' InteractiveViewsTestApi.\n' +
    ' You must call SetContextWidget() before using RunTestSequence() or any of the\n' +
    ' mouse actions.\n' +
    ' See //chrome/test/interaction/README.md for usage.',
  ' Template definitions:',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' static',
  ' NOLINTNEXTLINE(readability/casting)',
  ' static',
  ' static',
  ' static',
  ' Waits for a property named `Property` to have a value that matches `matcher`\n' +
    ' on View `view` of View class `Class`. Convenience method for\n' +
    ' `InteractiveViewsTestApi::WaitForClassPropertyCallback`.\n' +
    ' Do not use with the "Visible" property; use `WaitForShow()` or\n' +
    ' `WaitForHide()` instead.'
]
interactive_views_test_internal.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides functionality required by InteractiveViewsTestApi but which needs to\n' +
    ' be hidden from tests inheriting from the API class.'
]
polling_view_observer.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Polling static observer that repeatedly calls `poll_view_callback` on a View\n' +
    ' of type `V` with `view_id` in `context` (or any context if not specified) to\n' +
    ' determine the value of the state, which is of `type std::optional<T>`.\n' +
    ' The state value `std::nullopt` corresponds to no matching view present.\n' +
    ' Designed for use with the `InteractiveViewsTestApi::PollView()` testing verb.\n' +
    ' See `PollingElementStateObserver<T>` for more information on usage.',
  ' Polling static observer that repeatedly calls `property` on a View of type\n' +
    ' of type `V` with `view_id` in `context` (or any context if not specified) to\n' +
    ' determine the value of the state, which is of `type std::optional<T>`.\n' +
    ' The state value `std::nullopt` corresponds to no matching view present.\n' +
    ' Designed for use with the `InteractiveViewsTestApi::PollViewProperty()`\n' +
    ' testing verb.\n' +
    ' See `PollingElementStateObserver<T>` for more information on usage.'
]
view_focus_observer.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Base class for focus observers. Observes focus within a specific widget's\n" +
    ' hierarchy (including other widgets that share the same focus manager).\n' +
    ' The value of this observer becomes null/default when the focus manager goes\n' +
    ' away.',
  ' Observer that tracks focus within a given widget and other surfaces that\n' +
    ' share a focus manager by the focused view.',
  ' Observer that tracks focus within a given widget and other surfaces that\n' +
    ' share a focus manager by the ElementIdentifier of the focused view; the\n' +
    ' identifier will be null if there is no focused view or if the focused view\n' +
    ' has no identifier.',
  ' Convenient identifiers for the two types of state observers defined above.\n' +
    ' You can use these if you only need one focus observer fo the given type.'
]
widget_focus_observer.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents a singleton object that observes widget activation in some way.\n' +
    ' Useful because not all browser activations register as low-level widget\n' +
    ' activations, and there needs to be a way to track non-browser windows too, so\n' +
    ' there is no single system that can provide this information.\n' +
    ' Subclasses should be private to a specific Interactive[X]TestApi\n' +
    " implementation, and be registered on the test's `WidgetFocusSupplierFrame`.",
  ' Creates a frame in which WidgetFocusSuppliers can be registered.\n' +
    ' Use `GetCurrentFrame()->supplier_list()`.',
  ' Tracks widget focus as a `StateObserver`. Use ObserveState and WaitForState.\n' +
    ' Can only be created inside of a `WidgetFocusSupplierFrame`.',
  ' Since there is only one WidgetFocusManager, there only ever needs to be one\n' +
    ' WidgetFocusObserver.'
]
animating_layout_manager.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Layout manager which explicitly animates its child views and/or its preferred\n' +
    ' size when the target layout changes (the target layout being provided by a\n' +
    ' separate, non-animating layout manager; typically a FlexLayout).\n' +
    ' For example, consider a view in which multiple buttons can be displayed\n' +
    ' depending on context, in a horizontal row. When we add a button, we want all\n' +
    ' the buttons to the left to slide over and the new button to appear in the\n' +
    ' gap:\n' +
    '     | [a] [b] [c] |\n' +
    '    | [a] [b]  [c] |\n' +
    '   | [a] [b] . [c] |\n' +
    '  | [a] [b] .. [c] |\n' +
    ' | [a] [b] [x] [c] |\n' +
    ' Without AnimatingLayoutManager you would have to explicitly animate the\n' +
    ' bounds of the host view and the layout elements each frame, calculating which\n' +
    ' go where. With AnimatingLayout you create a single declarative layout for the\n' +
    " whole thing and just insert the button where you want it. Here's the setup:\n" +
    '   auto* animating_layout = button_container->SetLayoutManager(\n' +
    '       std::make_unique<AnimatingLayoutManager>());\n' +
    '   animating_layout->SetBoundsAnimationMode(\n' +
    '       AnimatingLayoutManager::BoundsAnimationMode::kAnimateMainAxis);\n' +
    '   auto* flex_layout = animating_layout->SetTargetLayoutManager(\n' +
    '       std::make_unique<FlexLayout>());\n' +
    '   flex_layout->SetOrientation(LayoutOrientation::kHorizontal)\n' +
    '              .SetCollapseMargins(true)\n' +
    '              .SetDefault(kMarginsKey, gfx::Insets(5));\n' +
    ' Now, when you want to add (or remove) a button and animate, you just call:\n' +
    '   button_container->AddChildViewAt(button, position);\n' +
    '   button_container->RemoveChildView(button);\n' +
    ' The bounds of |button_container| will then animate appropriately and |button|\n' +
    ' will either appear or disappear in the appropriate location.\n' +
    ' Note that under normal operation, any changes made to the host view before\n' +
    ' being added to a widget will not result in animation. If initial setup of the\n' +
    ' host view happens after being added to a widget, you can call ResetLayout()\n' +
    ' to prevent changes made during setup from animating.'
]
animating_layout_manager_test_util.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Gets the AnimatingLayoutManager for a View. This assumes that one exists, no\n' +
    ' type checks are performed.',
  ' Waits for animations to finish and pending tasks to run.',
  ' Sets animation times to a small but nonzero value to speed up tests.'
]
box_layout.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A Layout manager that arranges child views vertically or horizontally in a\n' +
    ' side-by-side fashion with spacing around and between the child views. The\n' +
    ' child views are always sized according to their preferred size. If the\n' +
    " host's bounds provide insufficient space, child views will be clamped.\n" +
    ' Excess space will not be distributed.'
]
box_layout_view.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
delegating_layout_manager.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The DelegatingLayoutManager is a simple, lighterweight layout manager for use\n' +
    ' in place of overriding the now deprecated View::Layout(). See\n' +
    ' LayoutManagerBase for information on calculating a proposed layout. Direct\n' +
    ' mutation of child views should not be done directly from within\n' +
    ' CalculateProposedLayout.'
]
fill_layout.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' FillLayout\n' +
    "  A simple LayoutManager that causes the associated view's children to be\n" +
    '  sized to match the bounds of its parent. The preferred size/height is\n' +
    '  is calculated as the maximum values across all child views of the host.\n' +
    '/////////////////////////////////////////////////////////////////////////////'
]
flex_layout.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides CSS-like layout for a one-dimensional (vertical or horizontal)\n' +
    ' arrangement of child views. Independent alignment can be specified for the\n' +
    ' main and cross axes.\n' +
    ' Per-View margins (provided by view property kMarginsKey) specify how much\n' +
    ' space to leave around each child view. The |interior_margin| says how much\n' +
    ' empty space to leave at the edges of the parent view. If |collapse_margins|\n' +
    ' is false, these values are additive; if true, the greater of the two values\n' +
    ' is used. The |default_child_margins| provides a fallback for views without\n' +
    ' kMarginsKey set.\n' +
    ' collapse_margins = false:\n' +
    ' | interior margin>                      <margin [view]...\n' +
    ' |                 <margin [view] margin>\n' +
    ' collapse_margins = true:\n' +
    ' | interior margin>      <margin [view]\n' +
    ' |         <margin [view] margin>       ...\n' +
    ' Views can have their own internal padding, using the kInternalPaddingKey\n' +
    ' property, which is subtracted from the margin space between child views.\n' +
    ' Calling SetVisible(false) on a child view outside of the FlexLayout will\n' +
    ' result in the child view being hidden until SetVisible(true) is called. This\n' +
    ' is irrespective of whether the FlexLayout has set the child view to be\n' +
    ' visible or not based on, for example, flex rules.\n' +
    ' If you want the host view to maintain control over a child view, you can\n' +
    ' exclude it from the layout. Excluded views are completely ignored during\n' +
    ' layout and do not have their properties modified.\n' +
    ' FlexSpecification objects determine how child views are sized. You can set\n' +
    ' individual flex rules for each child view, or a default for any child views\n' +
    " without individual flex rules set. If you don't set anything, each view will\n" +
    ' take up its preferred size in the layout.\n' +
    ' The core function of this class is contained in\n' +
    ' GetPreferredSize(maximum_size) and Layout(). In both cases, a layout will be\n' +
    " cached and typically not recalculated as long as none of the layout's\n" +
    ' properties or the preferred size or visibility of any of its children has\n' +
    ' changed.'
]
flex_layout_types.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Specifies whether flex space is allocated in the same order as the children\n' +
    ' in the host view, or in reverse order. Reverse order is useful when you want\n' +
    ' child views to drop out from left to right instead of right to left if there\n' +
    " isn't enough space to display them.",
  ' Callback used to specify the size of a child view based on its size bounds.\n' +
    ' Create your own custom rules, or use the Minimum|MaximumFlexSizeRule\n' +
    ' constants below for common behaviors.\n' +
    ' This callback takes two parameters: a child view, and a set of size bounds\n' +
    ' representing the available space for that child view to occupy. The function\n' +
    ' returns the preferred size of the view within those bounds, which may exceed\n' +
    ' them if the child is not capable of shrinking to the specified size. The\n' +
    ' callback may also return an empty size, which means the child view can drop\n' +
    ' out of the layout. Not specifying either bound means there is an unlimited\n' +
    ' amount of room for the child view in that dimension (and the child view\n' +
    ' should probably use its preferred size).\n' +
    ' We provide the ability to use an arbitrary function here because some views\n' +
    ' have complex sizing behavior; for example, they may shrink stepwise as their\n' +
    ' internal elements drop out due to lack of space.',
  ' Describes a simple rule for how a child view should shrink in a layout when\n' +
    ' the available size for that view decreases.',
  ' Describes a simple rule for how a child view should grow in a layout when\n' +
    ' there is extra size available for that view to occupy.',
  ' Specifies how a view should flex (i.e. grow or shrink) within its parent as\n' +
    ' the available space changes. Flex specifications have three components:\n' +
    '  - A |rule| which tells the layout manager how the child view resizes with\n' +
    '    available space.\n' +
    '  - A |weight| which specifies how much each individual child will deviate\n' +
    '    from its preferred size; larger weights will deviate more either when\n' +
    '    shrinking or growing. The deviation is proportional to the weight divided\n' +
    '    by the total weight of all views at this |order|.\n' +
    '  - An |order| which specifies the priority with which available space is\n' +
    '    allocated (lower numbers -> higher priority).\n' +
    ' Space allocation works as follows:\n' +
    ' 1. All views are given the smallest possible size that |rule| allows (which\n' +
    '    might be zero.)\n' +
    ' 2. Going by |order|, we attempt to allocate the preferred size of each view.\n' +
    ' 3. If there is insufficient size, the deficit is allocated across all views\n' +
    '    at this |order| whose |rule| allows them to shrink, proportional to\n' +
    '    |weight|.\n' +
    ' 4. Once all orders have been allocated this way, repeat the process by\n' +
    '    |order| allocating any excess space among views whose |rule| allows them\n' +
    '    to exceed their preferred size.\n' +
    ' For example, say there are three child views in a horizontal layout, each\n' +
    ' of which has a flex rule that allows it to be between 10 and 40 DIP with a\n' +
    ' preferred width of 20 DIP. Child A is at order 2 with weight 2, child B is at\n' +
    ' order 1 with weight 1, and child C is at order 2 with weight 1.\n' +
    " At 30 DIP (the parent's minimum size):\n" +
    ' [10][10][10]\n' +
    ' At 40 DIP:\n' +
    ' [10][20][10] (B hits its preferred size)\n' +
    ' At 48 DIP:\n' +
    ' [12][20][16] (deficit is spread across A and C by weight)\n' +
    ' At 57 DIP:\n' +
    ' [18][20][19]\n' +
    ' At 60 DIP:\n' +
    ' [20][20][20] (all views at preferred size)\n' +
    ' At 80 DIP:\n' +
    ' [20][40][20] (B hits its maximum size)\n' +
    ' At 110 DIP:\n' +
    ' [40][40][30] (A scales faster than C)\n' +
    " At 120 DIP (the parent's maximum size):\n" +
    ' [40][40][40]\n' +
    ' NOTE(dfried): the behavior of |weight| may seem backwards when views shrink\n' +
    ' below their preferred size, but it works the way it does because:\n' +
    "  (a) It's consistent with BoxLayout, making upgrading to FlexLayout easier.\n" +
    "  (b) It allows smooth scaling across a view's preferred size.\n" +
    ' If this gets too confusing we could add an option to make weights reciprocal\n' +
    ' when allocating deficit.',
  ' Represents insets in a single dimension.',
  ' Represents a line segment in one dimension with a starting point and length.',
  ' These are declared here for use in gtest-based unit tests but is defined in\n' +
    ' the views_test_support target. Depend on that to use this in your unit test.\n' +
    ' This should not be used in production code - call ToString() instead.'
]
flex_layout_view.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
layout_manager.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' LayoutManager is used by View to accomplish the following:\n' +
    ' . Provides preferred sizing information, see GetPreferredSize() and\n' +
    '   GetPreferredHeightForWidth().\n' +
    ' . To position and size (aka layout) the children of the associated View. See\n' +
    '   Layout() for details.\n' +
    ' How a LayoutManager operates is specific to the LayoutManager. Non-trivial\n' +
    ' LayoutManagers calculate preferred size and layout information using the\n' +
    ' minimum and preferred size of the children of the View. That is, they\n' +
    ' make use of View::GetMinimumSize(), View::CalculatePreferredSize() and/or\n' +
    ' View::GetHeightForWidth().'
]
layout_manager_base.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class for layout managers that can do layout calculation separately\n' +
    ' from layout application. Derived classes must implement\n' +
    ' CalculateProposedLayout(). Used in interpolating and animating layouts.',
  ' Provides methods for doing additional, manual manipulation of a\n' +
    " `LayoutManagerBase` and its managed Views inside its host View's\n" +
    ' layout implementation, ideally before `LayoutManager::Layout()` is invoked.\n' +
    ' In most cases, the layout manager should do all of the layout. However, in\n' +
    ' some cases, specific children of the host may be explicitly manipulated; for\n' +
    ' example, to conditionally show a button which (if visible) should be included\n' +
    ' in the layout.\n' +
    ' All of the direct manipulation functions on `LayoutManagerBase` and `View`,\n' +
    ' such as `View::SetVisible()` and\n' +
    ' `LayoutManagerBase::SetChildIncludedInLayout()`, cause cascades of layout\n' +
    ' invalidation up the Views tree, so are not appropriate to be used inside of a\n' +
    ' `Layout()` override. In the case that manual layout manipulation is required\n' +
    ' alongside the use of a layout manager, a `ManualLayoutUtil` should be used\n' +
    ' instead of callin those other methods directly.\n' +
    ' This class should only be instantiated and used inside the `Layout()` method\n' +
    ' of a `View` or derived class, before `LayoutManager::Layout()` is invoked.'
]
layout_provider.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The type of a dialog content element. kText should be used for Labels or\n' +
    ' other elements that only show text. Otherwise kControl should be used.',
  ' ShapeContextTokens are enums specific to the context of a Views object.\n' +
    ' This includes components such as Buttons, Labels, Textfields, Dropdowns, etc.\n' +
    ' These context tokens are granular to the entire client and will map to\n' +
    ' sys token values (see below).',
  ' ShapeSysTokens are tokens that map to a fixed value that aligns with UX/UI.\n' +
    ' Different from context tokens that will expand, sys tokens are more selective\n' +
    ' and are not used by the client. Context tokens will be mapped to a\n' +
    ' Sys token which then will fetch the corresponding fixed value.'
]
layout_types.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Describes how elements should be aligned within a layout.  Baseline alignment\n' +
    ' only makes sense on the vertical axis and is unsupported by most layout\n' +
    ' managers.',
  ' Whether a layout is oriented horizontally or vertically.',
  ' A value used to bound a View during layout.  May be a finite bound or\n' +
    ' "unbounded", which is treated as larger than any finite value.',
  ' Note: These comparisons treat unspecified values similar to infinity, that\n' +
    ' is, larger than any specified value and equal to any other unspecified value.\n' +
    " While one can argue that two unspecified values can't be compared (and thus\n" +
    " all comparisons should return false), this isn't what any callers want and\n" +
    ' breaks things in subtle ways, e.g. "a = b; DCHECK(a == b)" may fail.',
  ' Stores an optional width and height upper bound. Used when calculating the\n' +
    ' preferred size of a layout pursuant to a maximum available size.',
  ' Returns true if the specified |size| can fit in the specified |bounds|.\n' +
    ' Returns false if either the width or height of |bounds| is specified and is\n' +
    ' smaller than the corresponding element of |size|.',
  ' These are declared here for use in gtest-based unit tests but is defined in\n' +
    ' the views_test_support target. Depend on that to use this in your unit test.\n' +
    ' This should not be used in production code - call ToString() instead.'
]
normalized_geometry.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents a point in layout space - that is, a point on the main and cross\n' +
    ' axes of the layout (regardless of whether it is vertically or horizontally\n' +
    ' oriented.',
  ' Represents a size in layout space - that is, a size on the main and cross\n' +
    ' axes of the layout (regardless of whether it is vertically or horizontally\n' +
    ' oriented.',
  ' Represents insets in layout space - that is, insets on the main and cross\n' +
    ' axes of the layout (regardless of whether it is vertically or horizontally\n' +
    ' oriented.',
  ' Represents size bounds in layout space - that is, a set of size bounds using\n' +
    ' the main and cross axes of the layout (regardless of whether it is vertically\n' +
    ' or horizontally oriented).',
  ' Represents a rectangle in layout space - that is, a rectangle whose\n' +
    ' dimensions align with the main and cross axis of the layout (regardless of\n' +
    ' whether the layout is vertically or horizontally oriented).',
  ' Normalization and Denormalization -------------------------------------------',
  ' Convenience methods to get and set main and cross-axis elements of\n' +
    ' denormalized geometry elements.'
]
proposed_layout.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents layout information for a child view within a host being laid\n' +
    ' out.',
  ' Contains a full layout specification for the children of the host view.',
  " Returns a layout that's linearly interpolated between |start| and |target|\n" +
    ' by |value|, which should be between 0 and 1. See\n' +
    ' gfx::Tween::LinearIntValueBetween() for the exact math involved.'
]
table_layout.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TableLayout is a LayoutManager that positions child views in a table. You\n' +
    ' define the structure of the table independently of adding child views.\n' +
    ' The following creates a trivial table with two columns separated by a column\n' +
    ' with padding, and two rows:\n' +
    ' layout->AddColumn(LayoutAlignment::kStretch,   // Views are horizontally\n' +
    '                                                // resized to fill column.\n' +
    '                   LayoutAlignment::kStretch,   // Views starting in this\n' +
    '                                                // column are vertically\n' +
    '                                                // resized.\n' +
    '                    1.0f,                       // This column has a resize\n' +
    '                                                // weight of 1.\n' +
    '                    ColumnSize::kUsePreferred,  // Use the preferred size of\n' +
    '                                                // the view.\n' +
    '                    0,                          // Ignored for kUsePreferred.\n' +
    '                    0);                         // A minimum width of 0.\n' +
    ' layout->AddPaddingColumn(kFixedSize,           // The padding column is not\n' +
    '                                                // resizable.\n' +
    '                          10);                  // And has a width of 10 DIP.\n' +
    ' layout->AddColumn(LayoutAlignment::kStretch, LayoutAlignment::kStretch,\n' +
    '                   kFixedSize, ColumnSize::kUsePreferred, 0, 0);\n' +
    " layout->AddRows(2, kFixedSize);                // These rows aren't\n" +
    '                                                // vertically resizable.\n' +
    ' Now (or before setting up the table, either way works), add the views:\n' +
    ' host->AddChildView(v1);  // Will go in the first column, first row.\n' +
    ' host->AddChildView(v2);  // Will go in the last column, first row.\n' +
    ' host->AddChildView(v3);  // Will go in the first column, second row.\n' +
    ' host->AddChildView(v4);  // Will go in the last column, second row.\n' +
    " Notice you need not skip over padding columns, that's done for you.\n" +
    ' When adding a column you give it the default alignment for all views\n' +
    ' originating in that column. You can override this for specific views by\n' +
    ' setting a class property on them. For example, the following forces a view to\n' +
    ' have a horizontal and vertical alignment of leading regardless of that\n' +
    ' defined for the column:\n' +
    ' view->SetProperty(kTableHorizAlignKey, LayoutAlignment::kStart);\n' +
    ' view->SetProperty(kTableVertAlignKey, LayoutAlignment::kStart);\n' +
    ' If the view using TableLayout is given a size bigger than the preferred,\n' +
    ' columns and rows with a resize percent > 0 are resized. Each column/row is\n' +
    ' given (resize / total_resize * delta) extra DIPs. Only views with an\n' +
    ' alignment of LayoutAlignment::kStretch are given extra space, others are\n' +
    ' aligned in the provided space.\n' +
    ' TableLayout allows you to force columns to have the same width. This is done\n' +
    ' using LinkColumnSizes().\n' +
    ' If the host view is sized smaller than the preferred width, TableLayout may\n' +
    ' use the minimum size. The minimum size is considered only for views whose\n' +
    ' preferred width was not explicitly specified and where the containing columns\n' +
    " are resizable (resize > 0) and don't have a fixed width."
]
table_layout_view.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
masked_targeter_delegate.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines the default behaviour for hit-testing a rectangular region against\n' +
    ' the bounds of a View having a custom-shaped hit test mask. Views define\n' +
    ' such a mask by extending this class.'
]
type_conversion.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_factory.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Example of builder class generated by the following macros.\n' +
    ' template <typename Builder, typename ViewClass>\n' +
    ' class ViewBuilderT : public BaseViewBuilderT<Builder, ViewClass> {\n' +
    '  public:\n' +
    '   ViewBuilderT() = default;\n' +
    '   ViewBuilderT(const ViewBuilderT&&) = default;\n' +
    '   ViewBuilderT& operator=(const ViewBuilderT&&) = default;\n' +
    '   ~ViewBuilderT() override = default;\n' +
    '   Builder& SetEnabled(bool value) {\n' +
    '     auto setter = std::make_unique<\n' +
    '         PropertySetter<ViewClass, bool, decltype(&ViewClass::SetEnabled),\n' +
    '         &ViewClass::SetEnabled>>(value);\n' +
    '     ViewBuilderCore::AddPropertySetter(std::move(setter));\n' +
    '     return *static_cast<Builder*>(this);\n' +
    '   }\n' +
    '   Builder& SetVisible(bool value) {\n' +
    '     auto setter = std::make_unique<\n' +
    '         PropertySetter<ViewClass, bool, &ViewClass::SetVisible>>(value);\n' +
    '     ViewBuilderCore::AddPropertySetter(std::move(setter));\n' +
    '     return *static_cast<Builder*>(this);\n' +
    '   }\n' +
    ' };\n' +
    ' class VIEWS_EXPORT ViewBuilderTest\n' +
    '     : public ViewBuilderT<ViewBuilderTest, View> {};\n' +
    ' template <typename Builder, typename ViewClass>\n' +
    ' class LabelButtonBuilderT : public ViewBuilderT<Builder, ViewClass> {\n' +
    '  public:\n' +
    '   LabelButtonBuilderT() = default;\n' +
    '   LabelButtonBuilderT(LabelButtonBuilderT&&) = default;\n' +
    '   LabelButtonBuilderT& operator=(LabelButtonBuilderT&&) = default;\n' +
    '   ~LabelButtonBuilderT() override = default;\n' +
    '   Builder& SetIsDefault(bool value) {\n' +
    '     auto setter = std::make_unique<\n' +
    '         PropertySetter<ViewClass, bool, decltype(&ViewClass::SetIsDefault),\n' +
    '         &ViewClass::SetIsDefault>>(value);\n' +
    '     ViewBuilderCore::AddPropertySetter(std::move(setter));\n' +
    '     return *static_cast<Builder*>(this);\n' +
    '   }\n' +
    ' };\n' +
    ' class VIEWS_EXPORT LabelButtonBuilder\n' +
    '     : public LabelButtonBuilderT<LabelButtonBuilder, LabelButton> {};',
  ' The maximum number of overloaded params is 10. This should be overkill since\n' +
    ' a function with 10 params is well into the "suspect" territory anyway.\n' +
    ' TODO(kylixrd@): Evaluate whether a max of 5 may be more reasonable.',
  ' This will expand the list of types into a parameter declaration list.\n' +
    ' eg: DECL_PARAMS(int, char, float, double) will expand to:\n' +
    ' int param4, char param3, float param2, double param1',
  ' This will expand into list of parameters suitable for calling a function\n' +
    ' using the same param names from the above expansion.\n' +
    ' eg: PASS_PARAMS(int, char, float, double)\n' +
    ' param4, param3, param2, param1',
  ' BEGIN_VIEW_BUILDER, END_VIEW_BUILDER and VIEW_BUILDER_XXXX macros should\n' +
    " be placed into the same namespace as the 'view_class' parameter.",
  ' Sometimes the method being called is on the ancestor to ViewClass_. This\n' +
    ' macro will ensure the overload casts function correctly by specifying the\n' +
    ' ancestor class on which the method is declared. In most cases the following\n' +
    ' macro will be used.\n' +
    ' NOTE: See the Builder declaration for DialogDelegateView in dialog_delegate.h\n' +
    '       for an example.',
  ' Unless the above scenario is in play, please favor the use of this macro for\n' +
    ' declaring overloaded builder methods.',
  ' Enables exposing a template or ambiguously-named method by providing an alias\n' +
    ' that will be used on the Builder.\n' +
    ' Examples:\n' +
    '   VIEW_BUILDER_METHOD_ALIAS(\n' +
    '       AddTab, AddTab<View>, std::string_view, unique_ptr<View>)\n' +
    '   VIEW_BUILDER_METHOD_ALIAS(UnambiguousName, AmbiguousName, int)',
  ' Turn off clang-format due to it messing up the following macro. Places the\n' +
    ' semi-colon on a separate line.\n' +
    ' clang-format off',
  ' Unlike the above macros, DEFINE_VIEW_BUILDER must be placed in the global\n' +
    " namespace. Unless 'view_class' is already in the 'views' namespace, it should\n" +
    ' be fully qualified with the namespace in which it lives.',
  ' clang-format on'
]
view_factory_internal.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
metrics.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' NOTE: All times in this file are/should be expressed in milliseconds.',
  ' The default value for how long to wait before showing a menu button on hover.\n' +
    " This value is used if the OS doesn't supply one.",
  ' Returns the amount of time between double clicks.',
  ' Returns the amount of time to wait from hovering over a menu button until\n' +
    ' showing the menu.'
]
mouse_constants.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " The amount of time, in milliseconds, between clicks until they're\n" +
    ' considered intentionally different.'
]
mouse_watcher.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' MouseWatcherListener is notified when the mouse moves outside the host.',
  ' The MouseWatcherHost determines what region is to be monitored.',
  ' MouseWatcher is used to watch mouse movement and notify its listener when the\n' +
    ' mouse moves outside the bounds of a MouseWatcherHost.'
]
mouse_watcher_view_host.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_theme_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A delagate that supports animating transtions between different native\n' +
    ' theme states.  This delegate can be used to control a native theme Border\n' +
    ' or Painter object.\n' +
    ' If animation is ongoing, the native theme border or painter will\n' +
    ' composite the foreground state over the backgroud state using an alpha\n' +
    ' between 0 and 255 based on the current value of the animation.'
]
native_window_tracker.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An observer which detects when a gfx::NativeWindow is closed.'
]
native_window_tracker_aura.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
paint_info.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class manages the context required during View::Paint(). It is\n' +
    ' responsible for setting the paint recording size and the paint recording\n' +
    ' scale factors for an individual View.\n' +
    ' Each PaintInfo instance has paint recording offset relative to a root\n' +
    ' PaintInfo.\n' +
    ' All coordinates are in paint recording space. If pixel canvas is enabled this\n' +
    ' essentially becomes pixel coordinate space.'
]
painter.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Painter, as the name implies, is responsible for painting in a particular\n' +
    ' region. Think of Painter as a Border or Background that can be painted\n' +
    ' in any region of a View.'
]
rect_based_targeting_utils.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns true if |rect| is 1x1.',
  " Returns the percentage of |rect_1|'s area that is covered by |rect_2|.",
  ' Returns the square of the distance from |point| to the center of |rect|.'
]
repeat_controller.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' RepeatController\n' +
    '  An object that handles auto-repeating UI actions. There is a longer initial\n' +
    '  delay after which point repeats become constant. Users provide a callback\n' +
    '  that is notified when each repeat occurs so that they can perform the\n' +
    '  associated action.\n' +
    '/////////////////////////////////////////////////////////////////////////////'
]
round_rect_painter.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Painter to draw a border with rounded corners.'
]
selection_controller.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper class used to facilitate mouse event handling and text selection. To\n' +
    ' use, clients must implement the SelectionControllerDelegate interface.\n' +
    ' TODO(karandeepb): Also make this class handle gesture events.'
]
selection_controller_delegate.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented/managed by a view which uses the\n' +
    ' SelectionController.'
]
platform_style.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Cross-platform API for providing platform-specific styling for toolkit-views.'
]
typography.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Where a piece of text appears in the UI. This influences size and weight, but\n' +
    ' typically not style or color.',
  ' How a piece of text should be presented. This influences color and style, but\n' +
    ' typically not size.'
]
typography_provider.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Provides a default provider of fonts to use in toolkit-views UI.'
]
ax_event_counter.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' AXEventCounter provides a convenient way to count events registered by the\n' +
    ' AXEventManager by their event type, and wait for events of a specific type.'
]
button_test_api.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A wrapper of Button to access private members for testing.'
]
capture_tracking_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used to track OnMousePressed() and OnMouseCaptureLost().'
]
combobox_test_api.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A wrapper of Combobox to access private members for testing.'
]
desktop_test_views_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Most aura test code is written assuming a single RootWindow view, however,\n' +
    ' at higher levels like content_browsertests and\n' +
    ' views_examples_with_content_exe, we must use the Desktop variants.'
]
desktop_window_tree_host_win_test_api.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A wrapper of DesktopWindowTreeHostWin to access private members for testing.'
]
dialog_test.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
event_generator_delegate_mac.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
focus_manager_test.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Use to record focus change notifications.',
  ' Use to record widget focus change notifications.'
]
menu_runner_test_api.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A wrapper of MenuRunner to use testing methods of MenuRunner.'
]
menu_test_utils.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test implementation of MenuDelegate that tracks calls to MenuDelegate, along\n' +
    ' with the provided parameters.',
  ' Test api which caches the currently active MenuController. Can be used to\n' +
    ' toggle visibility, and to clear seletion states, without performing full\n' +
    ' shutdown. This is used to simulate menus with varing states, such as during\n' +
    ' drags, without performing the entire operation. Used to test strange shutdown\n' +
    ' ordering.',
  ' On platforms which have menu closure animations, these functions are\n' +
    ' necessary to:\n' +
    '   1) Disable those animations (make them take zero time) to avoid slowing\n' +
    '      down tests;\n' +
    '   2) Wait for maybe-asynchronous menu closure to finish.\n' +
    ' On platforms without menu closure animations, these do nothing.',
  ' An implementation of TestViewsDelegate which overrides ReleaseRef in order to\n' +
    ' call a provided callback.'
]
mock_drag_controller.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A mocked drag controller for testing.'
]
mock_input_event_activation_protector.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mock version of InputEventActivationProtector for injection during tests, to\n' +
    ' allow verifying that protected Views work as expected.'
]
mock_native_widget.h [
  ', Copyright 2023 The Chromium Authors\n' +
    ', Use of this source code is governed by a BSD-style license that can be\n' +
    ', found in the LICENSE file.'
]
native_widget_factory.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Values supplied to |behavior|.\n' +
    ' NativeWidget implementation is not customized in anyway.',
  ' Indicates capture should be mocked out and not interact with the system.',
  ' Creates the appropriate platform specific non-desktop NativeWidget\n' +
    ' implementation. If |destroyed| is non-null it it set to true from the\n' +
    ' destructor of the NativeWidget.',
  ' Creates the appropriate platform specific non-desktop NativeWidget\n' +
    ' implementation. Creates the appropriate platform specific desktop\n' +
    ' NativeWidget implementation. `destroyed_callback` is called from the\n' +
    ' destructor of the NativeWidget.',
  ' Creates the appropriate platform specific desktop NativeWidget\n' +
    ' implementation. `destroyed_callback` is called from the destructor of the\n' +
    ' NativeWidget.'
]
scoped_views_test_helper.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a ViewsTestHelper that is destroyed automatically. Acts like\n' +
    ' ViewsTestBase but allows a test harness to use a different base class, or\n' +
    ' make use of a BrowserTaskEnvironment, rather than the MessageLoop provided\n' +
    ' by ViewsTestBase.'
]
slider_test_api.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Can be used to update the private state of a views::Slider instance during a\n' +
    ' test.  Updating the private state of an already created instance reduces\n' +
    ' the amount of test setup and test fixture code required.'
]
test_desktop_screen_ozone.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Replaces the screen instance in Linux/Ozone (non-ChromeOS) tests.  Allows\n' +
    ' aura tests to manually set the cursor screen point to be reported\n' +
    ' by GetCursorScreenPoint().  Needed because of a limitation in the\n' +
    ' X11 protocol that restricts us from warping the pointer with the\n' +
    ' mouse button held down.'
]
test_layout_manager.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A stub layout manager that returns a specific preferred size and height for\n' +
    ' width.'
]
test_layout_provider.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper to test LayoutProvider overrides.'
]
test_platform_native_widget.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' NativeWidget implementation that adds the following:\n' +
    ' . capture can be mocked.\n' +
    ' . a boolean is set when the NativeWidget is destroyed.\n' +
    " Don't create directly, instead go through functions in\n" +
    ' native_widget_factory.h that create the appropriate platform specific\n' +
    ' implementation.'
]
test_views.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A view that requests a set amount of space.',
  ' A view that accomodates testing layouts that use GetHeightForWidth.',
  ' Class that closes the widget (which ends up deleting it immediately) when the\n' +
    ' appropriate event is received.',
  ' A view that keeps track of the events it receives, optionally consuming them.',
  ' A view which reacts to PreferredSizeChanged() from its children by doing\n' +
    ' layout.'
]
test_views_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' When running on ChromeOS, NativeWidgetAura requires the parent and/or context\n' +
    ' to be non-null. Some test views provide neither, so we do it here. Normally\n' +
    ' this is done by the browser-specific ViewsDelegate.'
]
test_widget_observer.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A Widget observer class used in the tests below to observe bubbles closing.'
]
view_metadata_test_utils.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Iterate through all the metadata for the given instance, reading each\n' +
    ' property and then setting the property. Exercises the getters, setters, and\n' +
    ' property type-converters associated with each.'
]
view_skia_gold_pixel_diff.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is the utility class to protect views with pixeltest based on Skia Gold.\n' +
    ' For an example on how to write pixeltests, please refer to the demo.\n' +
    ' NOTE: this class has to be initialized before using. A screenshot prefix and\n' +
    ' a corpus string are required for initialization. Check\n' +
    ' `SkiaGoldPixelDiff::Init()` for more details.'
]
views_drawing_test_utils.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Paints the provided View and all its children to an SkBitmap, exactly like\n' +
    ' the view would be painted in actual use. This includes antialiasing of text,\n' +
    ' graphical effects, hover state, focus rings, and so on.'
]
views_test_base.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A base class for views unit test. It creates a message loop necessary\n' +
    ' to drive UI events and takes care of OLE initialization for windows.',
  ' A helper that makes it easier to declare basic views tests that want to test\n' +
    ' desktop native widgets. See |ViewsTestBase::native_widget_type_| and\n' +
    ' |ViewsTestBase::CreateNativeWidgetForTest|. In short, for Aura, this will\n' +
    ' result in most Widgets automatically being backed by a\n' +
    ' DesktopNativeWidgetAura. For Mac, it has no impact as a NativeWidgetMac is\n' +
    ' used either way.'
]
views_test_helper.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A helper class owned by tests that performs platform specific initialization\n' +
    ' required for running tests.'
]
views_test_helper_aura.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_test_helper_mac.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_test_utils.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Ensure that the entire Widget root view is properly laid out. This will\n' +
    ' call Widget::LayoutRootViewIfNecessary().',
  ' Ensure the given view is properly laid out. If the view is in a Widget view\n' +
    ' tree, invoke RunScheduledLayout(widget). Otherwise lay out the\n' +
    ' root parent view.',
  ' Certain tests will fail when this experiment is running.\n' +
    ' TODO(crbug.com/329235190): Re-enable these tests and remove this function.'
]
webview_test_helper.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
widget_activation_waiter.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Use in tests to wait until a Widget's activation changes to `active`."
]
widget_animation_waiter.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Class which waits until for a widget to finish animating and verifies\n' +
    ' that the layer transform animation was valid.'
]
widget_show_state_waiter.h [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
widget_test.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' These functions return an arbitrary view v such that:\n' +
    ' 1) v is a descendant of the root view of the provided widget, and\n' +
    ' 2) predicate.Run(v) returned true\n' +
    ' They are *not* guaranteed to return first child matching the predicate for\n' +
    ' any specific ordering of the children. In fact, these methods deliberately\n' +
    ' randomly choose a child to return, so make sure your predicate matches\n' +
    ' *only* the view you want!',
  ' A helper WidgetDelegate for tests that require hooks into WidgetDelegate\n' +
    ' calls, and removes some of the boilerplate for initializing a Widget. Calls\n' +
    " Widget::CloseNow() when destroyed if it hasn't already been done.",
  ' Testing widget delegate that creates a widget with a single view, which is\n' +
    ' the initially focused view.',
  ' Use in tests to wait for a widget to be destroyed.',
  ' Helper class to wait for a Widget to become visible. This will add a failure\n' +
    ' to the currently-running test if the widget is destroyed before becoming\n' +
    ' visible.'
]
widget_test_api.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Makes Widget::OnNativeWidgetActivationChanged return false, which prevents\n' +
    ' handling of the corresponding event (if the native widget implementation\n' +
    ' takes this into account).',
  ' AsyncWidgetRequestWaiter ensures that all visible side effects of all state\n' +
    ' changes (e.g. bounds change) as a result of all actions taken after its\n' +
    ' construction and before `Wait` is called on it are observable from every part\n' +
    ' of chrome. For example, this means that this will wait for viz to produce all\n' +
    ' frames required as a result of updating the bounds of a widget.'
]
touch_selection_controller.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface for the touch selection controller, which handles touch selection\n' +
    ' handles and related UI for selecting/editing text using touch.'
]
touch_selection_controller_impl.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Responsible for displaying selection handles and menu elements relevant in a\n' +
    ' touch interface.'
]
touch_selection_menu_runner_views.h [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Views implementation for TouchSelectionMenuRunner.'
]
touch_selection_menu_views.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A bubble that contains actions available for the selected text. An object of\n' +
    ' this type, as a BubbleDialogDelegateView, manages its own lifetime.'
]
view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Struct used to describe how a View hierarchy has changed. See\n' +
    ' View::ViewHierarchyChanged.\n' +
    ' TODO(pbos): Move to a separate view_hierarchy_changed_details.h header.',
  ' The elements in PropertyEffects represent bits which define what effect(s) a\n' +
    ' changed Property has on the containing class. Additional elements should\n' +
    ' use the next most significant bit.',
  ' When adding layers to the view, this indicates the region into which the\n' +
    ' layer is placed, in the region above or beneath the view.',
  " When calling |GetLayersInOrder|, this will indicate whether the View's\n" +
    ' own layer should be included in the returned vector or not.',
  '///////////////////////////////////////////////////////////////////////////\n' +
    ' View class\n' +
    '   A View is a rectangle within the views View hierarchy. It is the base\n' +
    '   class for all Views.\n' +
    '   A View is a container of other Views (there is no such thing as a Leaf\n' +
    '   View - makes code simpler, reduces type conversion headaches, design\n' +
    '   mistakes etc)\n' +
    '   The View contains basic properties for sizing (bounds), layout (flex,\n' +
    '   orientation, etc), painting of children and event dispatch.\n' +
    "   The View also uses a simple Box Layout Manager similar to XUL's\n" +
    '   SprocketLayout system. Alternative Layout Managers implementing the\n' +
    '   LayoutManager interface can be used to lay out children if required.\n' +
    '   It is up to the subclass to implement Painting and storage of subclass -\n' +
    '   specific properties and functionality.\n' +
    '   Unless otherwise documented, views is not thread safe and should only be\n' +
    '   accessed from the main thread.\n' +
    '   Properties ------------------\n' +
    '   Properties which are intended to be dynamically visible through metadata to\n' +
    '   other subsystems, such as dev-tools must adhere to a naming convention,\n' +
    '   usage and implementation patterns.\n' +
    '   Properties start with their base name, such as "Frobble" (note the\n' +
    '   capitalization). The method to set the property must be called SetXXXX and\n' +
    '   the method to retrieve the value is called GetXXXX. For the aforementioned\n' +
    '   Frobble property, this would be SetFrobble and GetFrobble.\n' +
    '   void SetFrobble(bool is_frobble);\n' +
    '   bool GetFrobble() const;\n' +
    '   In the SetXXXX method, after the value storage location has been updated,\n' +
    '   OnPropertyChanged() must be called using the address of the storage\n' +
    '   location as a key. Additionally, any combination of PropertyEffects are\n' +
    '   also passed in. This will ensure that any desired side effects are properly\n' +
    '   invoked.\n' +
    '   void View::SetFrobble(bool is_frobble) {\n' +
    '     if (is_frobble == frobble_)\n' +
    '       return;\n' +
    '     frobble_ = is_frobble;\n' +
    '     OnPropertyChanged(&frobble_, kPropertyEffectsPaint);\n' +
    '   }\n' +
    '   Each property should also have a way to "listen" to changes by registering\n' +
    '   a callback.\n' +
    '   base::CallbackListSubscription AddFrobbleChangedCallback(\n' +
    '       PropertyChangedCallback callback);\n' +
    '   Each callback uses the the existing base::Bind mechanisms which allow for\n' +
    '   various kinds of callbacks; object methods, normal functions and lambdas.\n' +
    '   Example:\n' +
    '   class FrobbleView : public View {\n' +
    '    ...\n' +
    '    private:\n' +
    '     void OnFrobbleChanged();\n' +
    '     base::CallbackListSubscription frobble_changed_subscription_;\n' +
    '   }\n' +
    '   ...\n' +
    '     frobble_changed_subscription_ = AddFrobbleChangedCallback(\n' +
    '         base::BindRepeating(&FrobbleView::OnFrobbleChanged,\n' +
    '         base::Unretained(this)));\n' +
    '   Example:\n' +
    '   void MyView::ValidateFrobbleChanged() {\n' +
    '     bool frobble_changed = false;\n' +
    '     base::CallbackListSubscription subscription =\n' +
    '       frobble_view_->AddFrobbleChangedCallback(\n' +
    '           base::BindRepeating([](bool* frobble_changed_ptr) {\n' +
    '             *frobble_changed_ptr = true;\n' +
    '           }, &frobble_changed));\n' +
    '     frobble_view_->SetFrobble(!frobble_view_->GetFrobble());\n' +
    '     LOG() << frobble_changed ? "Frobble changed" : "Frobble NOT changed!";\n' +
    '   }\n' +
    '   Property metadata -----------\n' +
    '   For Views that expose properties which are intended to be dynamically\n' +
    '   discoverable by other subsystems, each View and its descendants must\n' +
    '   include metadata. These other subsystems, such as dev tools or a\n' +
    '   declarative layout system, can then enumerate the properties on any given\n' +
    '   instance or class. Using the enumerated information, the actual values of\n' +
    '   the properties can be read or written. This will be done by getting and\n' +
    '   setting the values using string representations. The metadata can also be\n' +
    '   used to instantiate and initialize a View (or descendant) class from a\n' +
    '   declarative "script".\n' +
    '   For each View class in their respective header declaration, place the macro\n' +
    '   METADATA_HEADER(<classname>, <view ancestor class>) in the initial private\n' +
    '   section.\n' +
    '   In the implementing .cc file, add the following macros to the same\n' +
    '   namespace in which the class resides.\n' +
    '   BEGIN_METADATA(View)\n' +
    '   ADD_PROPERTY_METADATA(bool, Frobble)\n' +
    '   END_METADATA\n' +
    '   For each property, add a definition using ADD_PROPERTY_METADATA() between\n' +
    '   the begin and end macros.\n' +
    '   BEGIN_METADATA(MyView)\n' +
    '   ADD_PROPERTY_METADATA(int, Bobble)\n' +
    '   END_METADATA\n' +
    '///////////////////////////////////////////////////////////////////////////'
]
view_class_properties.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The hit test component (e.g. HTCLIENT) for a View in a window frame. Defaults\n' +
    ' to HTNOWHERE.',
  ' A property to store margins around the outer perimeter of the view. Margins\n' +
    ' are outside the bounds of the view. This is used by various layout managers\n' +
    ' to position views with the proper spacing between them.\n' +
    ' Used by multiple layout managers.',
  ' A property to store the internal padding contained in a view. When doing\n' +
    ' layout, this padding is counted against the required margin around the view,\n' +
    ' effectively reducing the size of the margin (to a minimum of zero). Examples\n' +
    ' include expansion of buttons in touch mode and empty areas that serve as\n' +
    ' resize handles.\n' +
    ' Used by FlexLayout.',
  ' A property to store the bubble dialog anchored to this view, to\n' +
    " enable the bubble's contents to be included in the focus order.",
  ' A property to store the anchor widget used for anchoring a bubble dialog\n' +
    " to this view. If unset, the anchor widget is this view's containing widget.\n" +
    ' This is useful in macOS fullscreen where a sub views tree is moved to a\n' +
    ' separate overlay widget that has a higher z-order level. We anchor the bubble\n' +
    ' to the overlay widget to prevent the bubble from being occluded.',
  ' A property to store how a view should flex when placed in a layout.\n' +
    ' Only supported by BoxLayout.',
  ' A property to store a highlight-path generator. This generator is used to\n' +
    ' generate a highlight path for focus rings or ink-drop effects.',
  ' A property to store how a view should flex when placed in a layout.\n' +
    ' Currently only supported by FlexLayout.',
  ' TableLayout-specific properties:\n' +
    ' Note that col/row span counts padding columns, so if you want to span a\n' +
    " region consisting of <column><padding column><column>, it's a column span of\n" +
    ' 3, not 2.',
  ' Property indicating whether a view should be ignored by a layout. Supported\n' +
    ' by View::DefaultFillLayout, BoxLayout, and all LayoutManagerBase-derived\n' +
    ' layouts including FlexLayout.\n' +
    ' TODO(kylixrd): Use for other layouts.',
  ' Tag for the view associated with ui::ElementTracker.',
  ' Declaring the template specialization here to make sure that the\n' +
    ' compiler in all builds, including jumbo builds, always knows about\n' +
    ' the specialization before the first template instance use. Using a\n' +
    ' template instance before its specialization is declared in a\n' +
    ' translation unit is a C++ error.'
]
view_constants.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Size (width or height) within which the user can hold the mouse and the\n' +
    ' view should scroll.',
  ' Time in milliseconds to autoscroll by a row. This is used during drag and\n' +
    ' drop.',
  ' Used to determine whether a drop is on an item or before/after it. If a drop\n' +
    ' occurs kDropBetweenPixels from the top/bottom it is considered before/after\n' +
    ' the item, otherwise it is on the item.'
]
view_constants_aura.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A property key to indicate the view the window is associated with. If\n' +
    ' specified, the z-order of the view, relative to other views, dictates the\n' +
    ' z-order of the window and its associated layer. The associated view must\n' +
    ' have the same parent widget as the window on which the property is set.'
]
view_model.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Internal implementation of the templated ViewModelT class. Provides\n' +
    ' non-templated "unsafe" methods for ViewModelT to wrap around. Any methods\n' +
    ' that allow insertion of or access to a View* should be protected, and have a\n' +
    ' public method in the ViewModelT subclass that provides type-safe access to\n' +
    ' the correct View subclass.',
  " ViewModelT is used to track an 'interesting' set of a views. Often times\n" +
    ' during animations views are removed after a delay, which makes for tricky\n' +
    ' coordinate conversion as you have to account for the possibility of the\n' +
    ' indices from the model not lining up with those you expect. This class lets\n' +
    " you define the 'interesting' views and operate on those views.",
  ' ViewModel is a collection of views with no specfic type. If all views have\n' +
    ' the same type, the use of ViewModelT is preferred so that the views can be\n' +
    ' retrieved without potentially unsafe downcasts.'
]
view_model_utils.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_observer.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ViewObserver is used to observe changes to a View. The first argument to all\n' +
    ' ViewObserver functions is the View the observer was added to.'
]
view_shadow.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Manages the shadow for a view. This forces |view| to paint to layer if it's\n" +
    ' not.'
]
view_targeter.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A ViewTargeter is installed on a View that wishes to use the custom\n' +
    ' hit-testing or event-targeting behaviour defined by `delegate`.'
]
view_targeter_delegate.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines the default behaviour for hit-testing and event-targeting against a\n' +
    " View using a rectangular region representing an event's location (i.e., the\n" +
    ' bounding box of a gesture or a 1x1 rect in the case of a mouse event). Views\n' +
    ' wishing to define custom hit-testing or event-targeting behaviour do so by\n' +
    ' extending ViewTargeterDelegate and then installing a ViewTargeter on\n' +
    ' themselves.'
]
view_test_api.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
view_tracker.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " ViewTracker tracks a single View. When the View is deleted it's removed."
]
view_utils.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ViewsDelegate is an interface implemented by an object using the views\n' +
    ' framework. It is used to obtain various high level application utilities\n' +
    ' and perform some actions such as window placement saving.\n' +
    ' The embedding app must set the ViewsDelegate instance by instantiating an\n' +
    ' implementation of ViewsDelegate (the constructor will set the instance).'
]
views_export.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines VIEWS_EXPORT so that functionality implemented by the Views module\n' +
    ' can be exported to consumers.'
]
views_features.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Please keep alphabetized.'
]
views_switches.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Please keep alphabetized.'
]
views_test_suite.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
any_widget_observer.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " AnyWidgetObserver is used when you want to observe widget changes but don't\n" +
    ' have an easy way to get a reference to the Widget in question, usually\n' +
    ' because it is created behind a layer of abstraction that hides the Widget.\n' +
    ' This class should only be used as a last resort - if you find yourself\n' +
    ' reaching for it in production code, it probably means some parts of your\n' +
    " system aren't coupled enough or your API boundaries are hiding too much. You\n" +
    ' will need review from an owner of this class to add new uses of it, because\n' +
    ' it requires a Passkey to construct it - see //docs/patterns/passkey.md for\n' +
    ' details. Uses in tests can be done freely using\n' +
    ' views::test::AnyWidgetTestPasskey.\n' +
    ' This class can be used for waiting for a particular View being shown, as in:\n' +
    '    RunLoop run_loop;\n' +
    '    AnyWidgetObserver observer(views::test::AnyWidgetTestPasskey{});\n' +
    '    Widget* widget;\n' +
    '    observer.set_initialized_callback(\n' +
    '        base::BindLambdaForTesting([&](Widget* w) {\n' +
    '            if (w->GetName() == "MyWidget") {\n' +
    '                widget = w;\n' +
    '                run_loop.Quit();\n' +
    '            }\n' +
    '        }));\n' +
    '    ThingThatCreatesWidget();\n' +
    '    run_loop.Run();\n' +
    ' with your widget getting the name "MyWidget" via InitParams::name.\n' +
    " Note: if you're trying to wait for a named widget to be *shown*, there is an\n" +
    ' ergonomic wrapper for that - see NamedWidgetShownWaiter below. You use it\n' +
    ' like this:\n' +
    '    NamedWidgetShownWaiter waiter(\n' +
    '        views::test::AnyWidgetTestPasskey{}, "MyWidget");\n' +
    '    ThingThatCreatesAndShowsWidget();\n' +
    '    Widget* widget = waiter.WaitIfNeededAndGet();\n' +
    ' This class can also be used to make sure a named widget is _not_ shown, as\n' +
    ' this particular example (intended for testing code) shows:\n' +
    ' AnyWidgetObserver observer(views::test::AnyWidgetTestPasskey{});\n' +
    ' observer.set_shown_callback(\n' +
    '    base::BindLambdaForTesting([&](views::Widget* widget) {\n' +
    '        ASSERT_FALSE(widget->GetName() == "MyWidget");\n' +
    '      }));\n' +
    ' TODO(ellyjones): Add Widget::SetDebugName and add a remark about that here.\n' +
    ' This allows you to create a test that is robust even if\n' +
    ' ThingThatCreatesAndShowsWidget() later becomes asynchronous, takes a few\n' +
    ' milliseconds, etc.',
  ' NamedWidgetShownWaiter provides a more ergonomic way to do the most common\n' +
    ' thing clients want to use AnyWidgetObserver for: waiting for a Widget with a\n' +
    ' specific name to be shown. Use it like:\n' +
    '    NamedWidgetShownWaiter waiter(Passkey{}, "MyDialogView");\n' +
    '    ThingThatShowsDialog();\n' +
    '    Widget* dialog_widget = waiter.WaitIfNeededAndGet();\n' +
    ' It is important that NamedWidgetShownWaiter be constructed before any code\n' +
    ' that might show the named Widget, because if the Widget is shown before the\n' +
    " waiter is constructed, the waiter won't have observed the show and will\n" +
    ' instead hang forever. Worse, if the widget *sometimes* shows before the\n' +
    " waiter is constructed and sometimes doesn't, you will be introducing flake.\n" +
    " THIS IS A DANGEROUS PATTERN, DON'T DO THIS:\n" +
    '   ThingThatShowsDialogAsynchronously();\n' +
    '   NamedWidgetShownWaiter waiter(...);\n' +
    '   waiter.WaitIfNeededAndGet();',
  ' A passkey class to allow tests to use AnyWidgetObserver without needing a\n' +
    ' views owner signoff.'
]
any_widget_observer_singleton.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is not the class you want - go look at AnyWidgetObserver.',
  ' This class serves as the "thing being observed" by AnyWidgetObservers,\n' +
    ' since there is no relevant singleton for Widgets. Every Widget notifies the\n' +
    ' singleton instance of this class of its creation, and it handles notifying\n' +
    ' all AnyWidgetObservers of that.'
]
desktop_capture_client.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Desktop implementation of CaptureClient. There is one CaptureClient per\n' +
    ' DesktopNativeWidgetAura.\n' +
    ' DesktopCaptureClient and CaptureController (used by ash) differ slightly in\n' +
    ' how they handle capture. CaptureController is a singleton shared among all\n' +
    ' RootWindows created by ash. An implication of this is that all RootWindows\n' +
    ' know which window has capture. This is not the case with\n' +
    ' DesktopCaptureClient. Instead each RootWindow has its own\n' +
    ' DesktopCaptureClient. This means only the RootWindow of the Window that has\n' +
    ' capture knows which window has capture. All others think no one has\n' +
    ' capture. This behavior is necessitated by Windows occassionally delivering\n' +
    ' mouse events to a window other than the capture window and expecting that\n' +
    ' window to get the event. If we shared the capture window on the desktop this\n' +
    ' behavior would not be possible.'
]
desktop_drag_drop_client_ozone.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_drag_drop_client_ozone_linux.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_drag_drop_client_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_drop_target_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' DesktopDropTargetWin takes care of managing drag and drop for\n' +
    ' DesktopWindowTreeHostWin. It converts Windows OLE drop messages into\n' +
    ' aura::client::DragDropDelegate calls.'
]
desktop_event_client.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_focus_rules.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_native_cursor_manager.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A NativeCursorManager that performs the desktop-specific setting of cursor\n' +
    ' state. Similar to NativeCursorManagerAsh, it also communicates these changes\n' +
    ' to all root windows.'
]
desktop_native_cursor_manager_win.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A NativeCursorManager that performs the desktop-specific setting of cursor\n' +
    ' state. Similar to NativeCursorManagerAsh, it also communicates these changes\n' +
    ' to all root windows.'
]
desktop_native_widget_aura.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' DesktopNativeWidgetAura handles top-level widgets on Windows, Linux, and\n' +
    ' Chrome OS with mash.'
]
desktop_screen.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a Screen that represents the screen of the environment that hosts\n' +
    ' a WindowTreeHost.'
]
desktop_screen_ozone.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_screen_position_client.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Client that always offsets by the toplevel RootWindow of the passed\n' +
    ' in child NativeWidgetAura.'
]
desktop_screen_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_window_tree_host.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_window_tree_host_lacros.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Contains Lacros specific implementation.'
]
desktop_window_tree_host_linux.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Contains Linux specific implementation, which supports both X11 and Wayland\n' +
    ' backend.'
]
desktop_window_tree_host_platform.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
desktop_window_tree_host_win.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_event_filter_lacros.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An EventFilter that sets properties on native windows. Uses\n' +
    ' WmMoveResizeHandler to dispatch move/resize requests.'
]
window_event_filter_linux.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An EventFilter that sets properties on native windows. Uses\n' +
    ' WmMoveResizeHandler to dispatch move/resize requests.'
]
window_move_client_platform.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Reroutes move loop requests to DesktopWindowTreeHostPlatform.'
]
drop_helper.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' DropHelper provides support for managing the view a drop is going to occur\n' +
    ' at during dnd as well as sending the view the appropriate dnd methods.\n' +
    ' DropHelper is intended to be used by a class that interacts with the system\n' +
    ' drag and drop. The system class invokes OnDragOver as the mouse moves,\n' +
    ' then either OnDragExit or OnDrop when the drop is done.'
]
focus_manager_event_handler.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class forwards KeyEvents to the FocusManager associated with a widget.\n' +
    ' This allows KeyEvents to be processed before other targets.'
]
native_widget.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used with Widget::GetNativeWindowProperty() to identify a widget.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeWidget interface\n' +
    '  An interface that serves as the public API base for the\n' +
    '  internal::NativeWidget interface that Widget uses to communicate with a\n' +
    '  backend-specific native widget implementation. This is the only component of\n' +
    '  this interface that is publicly visible, and exists solely for exposure via\n' +
    "  Widget's native_widget() accessor, which code occasionally static_casts to\n" +
    '  a known implementation in platform-specific code.'
]
native_widget_aura.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_widget_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeWidgetDelegate\n' +
    '  An interface implemented by the object that handles events sent by a\n' +
    '  NativeWidget implementation.'
]
native_widget_mac.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_widget_private.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NativeWidgetPrivate interface\n' +
    '  A NativeWidget subclass internal to views that provides Widget a conduit for\n' +
    '  communication with a backend-specific native widget implementation.\n' +
    '  Many of the methods here are pass-thrus for Widget, and as such there is no\n' +
    '  documentation for them here. In that case, see methods of the same name in\n' +
    '  widget.h.\n' +
    '  IMPORTANT: This type is intended for use only by the views system and for\n' +
    '             NativeWidget implementations. This file should not be included\n' +
    '             in code that does not fall into one of these use cases.'
]
root_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is a views-internal API and should not be used externally.\n' +
    ' Widget exposes this object as a View*.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' RootView class\n' +
    ' The RootView is the root of a View hierarchy. A RootView is attached to a\n' +
    ' Widget. The Widget is responsible for receiving events from the host\n' +
    ' environment, converting them to views-compatible events and then forwarding\n' +
    ' them to the RootView for propagation into the View hierarchy.\n' +
    ' A RootView can have only one child, called its "Contents View" which is\n' +
    ' sized to fill the bounds of the RootView (and hence the client area of the\n' +
    ' Widget). Call SetContentsView() after the associated Widget has been\n' +
    ' initialized to attach the contents view to the RootView.\n' +
    ' TODO(beng): Enforce no other callers to AddChildView/tree functions by\n' +
    '             overriding those methods as private here.\n' +
    ' TODO(beng): Clean up API further, make Widget a friend.\n' +
    " TODO(sky): We don't really want to export this class."
]
root_view_targeter.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A derived class of ViewTargeter that defines targeting logic for cases\n' +
    ' needing to access the members of RootView. For example, when determining the\n' +
    ' target of a gesture event, we need to know if a previous gesture has already\n' +
    ' established the View to which all subsequent gestures should be targeted.'
]
sublevel_manager.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The SublevelManager ensures a widget is shown at the correct sublevel.\n' +
    ' It tracks the sublevel of the owner widget and the stacking state of\n' +
    " the owner's children widgets."
]
tooltip_manager.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TooltipManager takes care of the wiring to support tooltips for Views. You\n' +
    ' almost never need to interact directly with TooltipManager, rather look to\n' +
    ' the various tooltip methods on View.'
]
tooltip_manager_aura.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TooltipManager implementation for Aura.'
]
unique_widget_ptr.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A weak owning pointer to a Widget.\n' +
    ' This smart pointer acts like a unique_ptr: it ensures the Widget is\n' +
    ' properly closed when it goes out of scope.\n' +
    ' It also acts like a WeakPtr: the Widget may be deleted by its native\n' +
    ' widget and `get()` becomes nullptr when this happens.\n' +
    ' Caller may check the validity of this pointer before dereferencing it if\n' +
    ' the widget lifetime is in doubt.'
]
widget.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' Widget class\n' +
    '  Encapsulates the platform-specific rendering, event receiving and widget\n' +
    '  management aspects of the UI framework.\n' +
    '  Owns a RootView and thus a View hierarchy. Can contain child Widgets.\n' +
    '  Widget is a platform-independent type that communicates with a platform or\n' +
    '  context specific NativeWidget implementation.\n' +
    '  A special note on ownership:\n' +
    "    Depending on the value of the InitParams' ownership field, the Widget\n" +
    '    either owns or is owned by its NativeWidget:\n' +
    '    ownership = NATIVE_WIDGET_OWNS_WIDGET (default)\n' +
    '      The Widget instance is owned by its NativeWidget. When the NativeWidget\n' +
    '      is destroyed (in response to a native destruction message), it deletes\n' +
    '      the Widget from its destructor.\n' +
    '    ownership = WIDGET_OWNS_NATIVE_WIDGET (non-default)\n' +
    '      The Widget instance owns its NativeWidget. This state implies someone\n' +
    '      else wants to control the lifetime of this object. When they destroy\n' +
    '      the Widget it is responsible for destroying the NativeWidget (from its\n' +
    '      destructor). This is often used to place a Widget in a std::unique_ptr<>\n' +
    '      or on the stack in a test.'
]
widget_aura_utils.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Functions shared by native_widget_aura.cc and desktop_native_widget_aura.cc:'
]
widget_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Handles events on Widgets in context-specific ways.',
  ' A WidgetDelegate implementation that is-a View. Used to override GetWidget()\n' +
    " to call View's GetWidget() for the common case where a WidgetDelegate\n" +
    ' implementation is-a View. Note that WidgetDelegateView is not owned by\n' +
    " view's hierarchy and is expected to be deleted on DeleteDelegate call."
]
widget_deletion_observer.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A simple WidgetObserver that can be probed for the life of a widget.'
]
widget_hwnd_utils.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Functions shared by hwnd_message_handler.cc and\n' +
    ' desktop_window_tree_host_win.cc:',
  ' Returns true if the WINDOWPOS data provided indicates the client area of\n' +
    ' the window may have changed size. This can be caused by the window being\n' +
    ' resized or its frame changing.',
  ' Returns true if the size data provided indicates that the window\n' +
    ' transitioned from a minimized state to something else or vice versa.',
  ' Sets styles appropriate for |params| on |handler|.'
]
widget_interactive_uitest_utils.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wait until `callback` returns `expected_value`, but no longer than 1 second.\n' +
    ' Example Usage :\n' +
    '  WidgetAutoclosePtr widget(CreateTopLevelNativeWidget());\n' +
    '  PropertyWaiter minimize_waiter(\n' +
    '      base::BindRepeating(\n' +
    '          &Widget::IsMinimized, base::Unretained(widget.get())), true);\n' +
    '  widget->Minimize();\n' +
    '  EXPECT_TRUE(minimize_waiter.Wait());'
]
widget_observer.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Observers can listen to various events on the Widgets.'
]
widget_removals_observer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' |WidgetRemovalsObserver| complements |WidgetObserver| with additional\n' +
    ' notifications. These include events occurring during tear down like view\n' +
    ' removal. For this reason, it is recommended that subclasses not also inherit\n' +
    ' from |View|.'
]
widget_utils.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the root window for |widget|.  On non-Aura, this is equivalent to\n' +
    ' widget->GetNativeWindow().'
]
widget_utils_mac.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_reorderer.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Class which reorders the widget's child windows which have an associated view\n" +
    " in the widget's view tree according the z-order of the views in the view\n" +
    ' tree. Windows not associated to a view are stacked above windows with an\n' +
    " associated view. The child windows' layers are additionally reordered\n" +
    ' according to the z-order of the associated views relative to views with\n' +
    ' layers.'
]
fullscreen_handler.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
hwnd_message_handler.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " These two messages aren't defined in winuser.h, but they are sent to windows\n" +
    ' with captions. They appear to paint the window caption and frame.\n' +
    ' Unfortunately if you override the standard non-client rendering as we do\n' +
    ' with CustomFrameWindow, sometimes Windows (not deterministically\n' +
    ' reproducibly but definitely frequently) will send these messages to the\n' +
    ' window and paint the standard caption/title over the top of the custom one.\n' +
    ' So we need to handle these messages in CustomFrameWindow to prevent this\n' +
    ' from happening.',
  ' The HWNDMessageHandler sends this message to itself on\n' +
    " WM_WINDOWPOSCHANGING. It's used to inform the client if a\n" +
    " WM_WINDOWPOSCHANGED won't be received.",
  ' An object that handles messages for a HWND that implements the views\n' +
    ' "Custom Frame" look. The purpose of this class is to isolate the windows-\n' +
    ' specific message handling from the code that wraps it. It is intended to be\n' +
    ' used by both a views::NativeWidget and an aura::WindowTreeHost\n' +
    ' implementation.\n' +
    ' TODO(beng): This object should eventually *become* the WindowImpl.'
]
hwnd_message_handler_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implemented by the object that uses the HWNDMessageHandler to handle\n' +
    ' notifications from the underlying HWND and service requests for data.'
]
hwnd_message_handler_headless.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is instantiated instead of the original HWNDMessageHandler when\n' +
    ' Chrome is running in headless mode. It overrides certain methods ensuring\n' +
    ' that headless mode platform windows exist but are never shown or change their\n' +
    ' state and that the upper layers observe headless windows the same way as they\n' +
    ' would have observed the visible platform windows.'
]
hwnd_util.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the HWND for the specified View.',
  ' Returns the HWND for the specified Widget.',
  ' Returns the HWND for the specified NativeView.',
  ' Returns the HWND for the specified NativeWindow.',
  ' Returns the headless window bounds for the specified HWND.',
  " Shows |window|'s system menu (at a specified |point| in screen physical\n" +
    ' coordinates).'
]
pen_event_handler_util.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Lets pen events fall through to the default window procedure until the next\n' +
    ' WM_POINTERUP event.\n' +
    ' Defined in hwnd_message_handler.cc.'
]
pen_event_processor.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class handles the processing pen event state information\n' +
    ' from native Windows events and returning appropriate\n' +
    ' ui::Events for the current state.'
]
pen_id_handler.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is responsible for retrieving the unique pen id from Windows,\n' +
    ' and mapping it to a unique id that will be used by Blink. When the unique\n' +
    " id is fetched, the device's GUID is queried. These IDs are then mapped to\n" +
    ' a separate unique value, which is ultimately returned.'
]
scoped_enable_unadjusted_mouse_events_win.h [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class handles register and unregister unadjusted mouse events on\n' +
    ' windows. Destroying an instance of this class will unregister unadjusted\n' +
    ' mouse events and stops handling mouse WM_INPUT messages.'
]
scoped_fullscreen_visibility.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Scoping class that ensures a HWND remains hidden while it enters or leaves\n' +
    ' the fullscreen state. This reduces some flicker-jank that an application UI\n' +
    ' might suffer.'
]
fake_ipen_device.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
fake_ipen_device_statics.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
caption_button_layout_constants.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Default radius of caption button ink drop highlight and mask.',
  ' Returns default caption button width.',
  ' Calculates the preferred size of an MD-style frame caption button.  Only used\n' +
    ' on ChromeOS and desktop Linux.'
]
caption_button_types.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " These are the icon types that a caption button can have. The size button's\n" +
    ' action (SnapType) can be different from its icon.'
]
client_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' ClientView\n' +
    '  A ClientView is a View subclass that is used to occupy the "client area"\n' +
    '  of a widget. It provides basic information to the widget that contains it\n' +
    '  such as non-client hit testing information, sizing etc. Sub-classes of\n' +
    '  ClientView are used to create more elaborate contents.'
]
custom_frame_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' CustomFrameView\n' +
    '  A view that provides the non client frame for Windows. This means\n' +
    '  rendering the non-standard window caption, border, and controls.\n' +
    '//////////////////////////////////////////////////////////////////////////////'
]
dialog_client_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " DialogClientView provides adornments for a dialog's content view, including\n" +
    ' custom-labeled [OK] and [Cancel] buttons with [Enter] and [Esc] accelerators.\n' +
    " The view also displays the delegate's extra view alongside the buttons. The\n" +
    ' view appears like below. NOTE: The contents view is not inset on the top or\n' +
    ' side client view edges.\n' +
    '   +------------------------------+\n' +
    '   |        Contents View         |\n' +
    '   +------------------------------+\n' +
    '   | [Extra View]   [OK] [Cancel] |\n' +
    '   +------------------------------+\n' +
    ' You must not directly depend on or use DialogClientView; it is internal to\n' +
    ' //ui/views. Access it through the public interfaces on DialogDelegate. It is\n' +
    ' only VIEWS_EXPORT to make it available to views_unittests.'
]
dialog_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' DialogDelegate\n' +
    '  DialogDelegate is an interface implemented by objects that wish to show a\n' +
    '  dialog box Window. The window that is displayed uses this interface to\n' +
    '  determine how it should be displayed and notify the delegate object of\n' +
    '  certain events.\n' +
    '  If possible, it is better to compose DialogDelegate rather than subclassing\n' +
    '  it; it has many setters, including some inherited from WidgetDelegate, that\n' +
    '  let you set properties on it without overriding virtuals. Doing this also\n' +
    '  means you do not need to deal with implementing ::DeleteDelegate().\n' +
    '/////////////////////////////////////////////////////////////////////////////',
  ' A DialogDelegate implementation that is-a View. Used to override GetWidget()\n' +
    " to call View's GetWidget() for the common case where a DialogDelegate\n" +
    ' implementation is-a View. Note that DialogDelegateView is not owned by\n' +
    " view's hierarchy and is expected to be deleted on DeleteDelegate call.\n" +
    ' It is best not to add new uses of this class, and instead to subclass View\n' +
    ' directly and have a DialogDelegate member that you configure - essentially,\n' +
    ' to compose with DialogDelegate rather than inheriting from it.\n' +
    ' DialogDelegateView has unusual lifetime semantics that you can avoid dealing\n' +
    ' with, and your class will be smaller.',
  ' Explicitly instantiate the following templates to ensure proper linking,\n' +
    ' especially when using GCC.'
]
dialog_observer.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Allows properties on a DialogDelegate to be observed.'
]
frame_background.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' FrameBackground handles painting for all the various window frames we\n' +
    ' support in Chrome. It intends to consolidate paint code that historically\n' +
    ' was copied. One frame to rule them all!'
]
frame_buttons.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Identifies what a button in a window frame is.'
]
frame_caption_button.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Base class for the window caption buttons (minimize, maximize, restore,\n' +
    ' close).'
]
hit_test_utils.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the inner most non-HTNOWHERE |kHitTestComponentKey| value at\n' +
    ' |point_in_widget| within the hierarchy of |view|, otherwise returns\n' +
    ' HTNOWHERE.',
  ' Sets the |kHitTestComponentKey| property of |view|.'
]
native_frame_view.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
native_frame_view_mac.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
non_client_view.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NonClientFrameView\n' +
    '  An object that subclasses NonClientFrameView is a View that renders and\n' +
    '  responds to events within the frame portions of the non-client area of a\n' +
    '  window. This view contains the ClientView (see NonClientView comments for\n' +
    '  details on View hierarchy).',
  '//////////////////////////////////////////////////////////////////////////////\n' +
    ' NonClientView\n' +
    '  The NonClientView is the logical root of all Views contained within a\n' +
    '  Window, except for the RootView which is its parent and of which it is the\n' +
    '  sole child. The NonClientView has one child, the NonClientFrameView which\n' +
    '  is responsible for painting and responding to events from the non-client\n' +
    '  portions of the window, and for forwarding events to its child, the\n' +
    '  ClientView, which is responsible for the same for the client area of the\n' +
    '  window:\n' +
    '  +- views::Widget ------------------------------------+\n' +
    '  | +- views::RootView ------------------------------+ |\n' +
    '  | | +- views::NonClientView ---------------------+ | |\n' +
    '  | | | +- views::NonClientFrameView subclass ---+ | | |\n' +
    '  | | | |                                        | | | |\n' +
    '  | | | | << all painting and event receiving >> | | | |\n' +
    '  | | | | << of the non-client areas of a     >> | | | |\n' +
    '  | | | | << views::Widget.                   >> | | | |\n' +
    '  | | | |                                        | | | |\n' +
    '  | | | | +- views::ClientView or subclass ----+ | | | |\n' +
    '  | | | | |                                    | | | | |\n' +
    '  | | | | | << all painting and event       >> | | | | |\n' +
    '  | | | | | << receiving of the client      >> | | | | |\n' +
    '  | | | | | << areas of a views::Widget.    >> | | | | |\n' +
    '  | | | | +------------------------------------+ | | | |\n' +
    '  | | | +----------------------------------------+ | | |\n' +
    '  | | +--------------------------------------------+ | |\n' +
    '  | +------------------------------------------------+ |\n' +
    '  +----------------------------------------------------+'
]
window_button_order_provider.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Stores the ordering of window control buttons. Provides a default ordering\n' +
    ' of |kMinimize|, |FrameButton::kMaximize|, |FrameButton::kClose|, where all\n' +
    ' controls are on the trailing end of a window.\n' +
    ' On Linux users can provide configuration files to control the ordering. This\n' +
    ' configuration is checked and overrides the defaults.'
]
window_resources.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '/////////////////////////////////////////////////////////////////////////////\n' +
    ' WindowResources\n' +
    '  An interface implemented by an object providing images to render the\n' +
    '  contents of a window frame. The Window may swap in different\n' +
    '  implementations of this interface to render different modes. The definition\n' +
    '  of FramePartImage depends on the implementation.'
]
window_shape.h [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Sets the window mask to a style that most likely matches\n' +
    ' ui/resources/window_*'
]
windows_stationarity_monitor.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A singleton class used to track the stationary state of a list Windows and\n' +
    ' notify registered `InputEventActivationProtector` whenever a tracked window\n' +
    ' has changed its bound or has been closed. Consequently, the input event\n' +
    ' protector should block user input events for a proper delay from that\n' +
    ' timestamp. The tracked list contains native windows which are encapsulated in\n' +
    ' a window host implementation for specific platforms (WindowTreeHost on aura)\n' +
    ' or NativeWidgetMac on Mac. When a window is destroyed, it is removed from the\n' +
    ' tracked list.'
]
windows_stationarity_monitor_aura.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
windows_stationarity_monitor_mac.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
word_lookup_client.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by a view which supports word lookups.'
]
views_content_browser_client.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_content_client.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates a multiprocess views runtime for running an example application.\n' +
    ' Sample usage:\n' +
    ' void InitMyApp(content::BrowserContext* browser_context,\n' +
    '                gfx::NativeWindow window_context) {\n' +
    '   // Create desired windows and views here. Runs on the UI thread.\n' +
    ' }\n' +
    ' #if BUILDFLAG(IS_WIN)\n' +
    ' int APIENTRY wWinMain(HINSTANCE instance, HINSTANCE, wchar_t*, int) {\n' +
    '   sandbox::SandboxInterfaceInfo sandbox_info = {nullptr};\n' +
    '   content::InitializeSandboxInfo(&sandbox_info);\n' +
    '   ui::ViewsContentClient params(instance, &sandbox_info);\n' +
    ' #else\n' +
    ' int main(int argc, const char** argv) {\n' +
    '   ui::ViewsContentClient params(argc, argv);\n' +
    ' #endif\n' +
    '   params.set_on_pre_main_message_loop_run_callback(\n' +
    '       base::BindOnce(&InitMyApp));\n' +
    '   return params.RunMain();\n' +
    ' }'
]
views_content_client_export.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines VIEWS_CONTENT_CLIENT_EXPORT so that functionality implemented by the\n' +
    ' views_content_client module can be exported to consumers.'
]
views_content_client_main_parts.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_content_client_main_parts_aura.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
views_content_main_delegate.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_web_contents_handler.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_web_dialog_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
web_dialog_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implement this class to receive notifications.'
]
web_dialog_ui.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Displays file URL contents inside a modal web dialog.\n' +
    ' This application really should not use WebContents + WebUI. It should instead\n' +
    ' just embed a RenderView in a dialog and be done with it.\n' +
    ' Before loading a URL corresponding to this WebUI, the caller should set its\n' +
    ' delegate as user data on the WebContents by calling SetDelegate(). This WebUI\n' +
    ' will pick it up from there and call it back. This is a bit of a hack to allow\n' +
    ' the dialog to pass its delegate to the Web UI without having nasty accessors\n' +
    ' on the WebContents. The correct design using RVH directly would avoid all of\n' +
    ' this.',
  ' Displays file URL contents inside a modal web dialog while also enabling\n' +
    ' Mojo calls to be made from within the dialog.'
]
web_dialog_web_contents_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class implements (and mostly ignores) most of\n' +
    ' content::WebContentsDelegate for use in a Web dialog. Subclasses need only\n' +
    ' override a few methods instead of the everything from\n' +
    ' content::WebContentsDelegate; this way, implementations on all platforms\n' +
    ' behave consistently.'
]
web_dialogs_export.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines WEB_DIALOGS_EXPORT so that functionality implemented by the\n' +
    ' web_dialogs module can be exported to consumers.'
]
color_change_handler.h [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Handles ColorProvider related communication between C++ and WebUI in the\n' +
    ' renderer.'
]
mac_init.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
main_delegate.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser_context.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser_main_parts.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
content_browser_client.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
devtools_frontend.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
devtools_manager_delegate.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
devtools_server.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
aura_context.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Holds the necessary services so that a Aura WindowTreeHost behaves like a\n' +
    ' normal application window, responding to focus and cursor events for example.'
]
content_window.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Represents a single window that hosts one WebContents stretched to the\n' +
    " window's size."
]
fill_layout.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
content_ns_window.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser_page_handler.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
guest_view_manager_delegate.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
web_view.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A content embedding mechanism derived from the extensions <webview> tag\n' +
    ' that does not implement any of the extensions API.'
]
webshell_guest_view.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
webui.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
webui_controller_factory.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
content_client.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
content_renderer_client.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
render_frame_observer.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mojo_web_ui_controller.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' MojoWebUIController is intended for WebUI pages that use Mojo. It is\n' +
    ' expected that subclasses will:\n' +
    ' . Add all Mojo Bindings Resources via AddResourcePath(), eg:\n' +
    '     source->AddResourcePath("chrome/browser/ui/webui/omnibox/omnibox.mojom",\n' +
    '                              IDR_OMNIBOX_MOJO_JS);\n' +
    ' . Overload void BindInterface(mojo::PendingReceiver<InterfaceName>) for all\n' +
    '   Mojo Interfaces it wishes to handle.\n' +
    ' . Use WEB_UI_CONTROLLER_TYPE_DECL macro in .h file and\n' +
    '   WEB_UI_CONTROLLER_TYPE_IMPL macro in .cc file.\n' +
    ' . Register all Mojo Interfaces it wishes to handle in the appropriate\n' +
    '   BinderMap:\n' +
    '     - chrome/browser/chrome_browser_interface_binders.cc for chrome/ WebUIs;\n' +
    '     - content/browser/browser_interface_binders.cc for content/ WebUIs.'
]
app_management_mojom_traits.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
untrusted_web_ui_browsertest_util.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
untrusted_web_ui_controller.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' UntrustedWebUIController is intended for WebUI pages that process untrusted\n' +
    ' content. These WebUIController should never request WebUI bindings.'
]
untrusted_web_ui_controller_factory.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Factory class for WebUIControllers for chrome-untrusted:// URLs.\n' +
    ' To add a new WebUIController, subclass ui::WebUIConfig and add it to\n' +
    ' `CreateConfigs()` in the .cc.'
]
webui_allowlist.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class is the underlying storage for WebUIAllowlistProvider, it stores a\n' +
    ' list of origins and permissions to be auto-granted to WebUIs. This class is\n' +
    ' created before HostContentSettingsMap is registered and has the same lifetime\n' +
    " as the profile it's attached to. It outlives WebUIAllowlistProvider."
]
webui_allowlist_provider.h [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A provider that supplies HostContentSettingsMap with a list of auto-granted\n' +
    ' permissions from the underlying WebUIAllowlist.\n' +
    ' PartitionKey is ignored by this provider because the content settings should\n' +
    ' apply across partitions.'
]
accelerator_delegate.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
accelerator_filter.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' AcceleratorFilter filters key events for AcceleratorControler handling global\n' +
    ' keyboard accelerators.'
]
base_focus_rules.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A set of basic focus and activation rules. Specializations should most likely\n' +
    ' subclass this and call up to these methods rather than reimplementing them.'
]
capture_controller.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Internal CaptureClient implementation. See ScopedCaptureClient for details.',
  ' ScopedCaptureClient is responsible for creating a CaptureClient for a\n' +
    ' RootWindow. Specifically it creates a single CaptureController that is shared\n' +
    ' among all ScopedCaptureClients and adds the RootWindow to it.'
]
compound_event_filter.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(beng): This class should die. AddEventHandler() on the root Window\n' +
    '             should be used instead.\n' +
    ' CompoundEventFilter gets all events first and can provide actions to those\n' +
    ' events. It implements global features such as click to activate a window and\n' +
    ' cursor change when moving mouse.\n' +
    ' Additional event filters can be added to CompoundEventFilter. Events will\n' +
    ' pass through those additional filters in their addition order and could be\n' +
    ' consumed by any of those filters. If an event is consumed by a filter, the\n' +
    ' rest of the filter(s) and CompoundEventFilter will not see the consumed\n' +
    ' event.'
]
coordinate_conversion.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Converts the |point| from a given |window|'s coordinates into the screen\n" +
    ' coordinates.\n' +
    ' TODO: Remove the integer versions of these functions. See crbug.com/773331.',
  " Converts the |point| from the screen coordinates to a given |window|'s\n" +
    ' coordinates.',
  " Converts |rect| from |window|'s coordinates to the virtual screen\n" +
    ' coordinates.\n' +
    ' TODO: Change the Rect versions to TranslateRect(To|From)Screen since they\n' +
    ' do not handle size changes.',
  " Converts |rect| from virtual screen coordinates to the |window|'s\n" +
    ' coordinates.'
]
cursor_loader.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cursor_manager.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This class receives requests to change cursor properties, as well as\n' +
    ' requests to queue any further changes until a later time. It sends changes\n' +
    ' to the NativeCursorManager, which communicates back to us when these changes\n' +
    ' were made through the NativeCursorManagerDelegate interface.'
]
cursor_util.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Returns the cursor data corresponding to `type` and the rest of the\n' +
    ' parameters. If `target_cursor_size_in_px` presents, it will load the cursor\n' +
    ' resource and scale the bitmap and hotspot to match\n' +
    ' `target_cursor_size_in_px`, if not it will load the cursor resource and\n' +
    ' scale the bitmap and hotspot to match `scale`. The bitmap and hotspot are\n' +
    ' both in physical pixels.',
  " Scale and rotate the cursor's bitmap and hotpoint.\n" +
    ' |bitmap_in_out| and |hotpoint_in_out| are used as\n' +
    ' both input and output.',
  ' Returns data about the cursor `type`. The IDR will be placed in `resource_id`\n' +
    ' and the hotspot in `point`. If `is_animated` is true it means the resource\n' +
    " should be animated. Returns false if resource data for `type` isn't\n" +
    ' available.'
]
default_activation_client.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Simple ActivationClient implementation for use by tests and other targets\n' +
    ' that just need basic behavior (e.g. activate windows whenever requested,\n' +
    " restack windows at the top when they're activated, etc.). This object deletes\n" +
    ' itself when the root window it is associated with is destroyed.'
]
default_screen_position_client.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Client that always offsets by the toplevel root window of the passed in\n' +
    ' aura::Window.'
]
easy_resize_window_targeter.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An EventTargeter for a container window that uses a slightly larger\n' +
    ' hit-target region for easier resize. It extends the hit test region for child\n' +
    ' windows (top level Widgets that are resizable) to outside their bounds. For\n' +
    ' Ash, this correlates to ash::kResizeOutsideBoundsSize. For the interior\n' +
    ' resize area, see ash::InstallResizeHandleWindowTargeterForWindow().'
]
focus_controller.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' FocusController handles focus and activation changes for an environment\n' +
    ' encompassing one or more RootWindows. Within an environment there can be\n' +
    ' only one focused and one active window at a time. When focus or activation\n' +
    ' changes notifications are sent using the\n' +
    ' aura::client::Focus/ActivationChangeObserver interfaces.\n' +
    ' Changes to focus and activation can be from three sources. The source can be\n' +
    ' determined by the ActivationReason parameter in\n' +
    ' ActivationChangeObserver::OnWindowActivated(...).\n' +
    ' . ActivationReason::ACTIVATION_CLIENT: The Aura Client API (implemented here\n' +
    '   in ActivationClient). (The FocusController must be set as the\n' +
    '   ActivationClient implementation for all RootWindows).\n' +
    ' . ActivationReason::INPUT_EVENT: Input events (implemented here in\n' +
    '   ui::EventHandler). (The FocusController must be registered as a pre-target\n' +
    '   handler for the applicable environment owner, either a RootWindow or\n' +
    '   another type).\n' +
    ' . ActivationReason::WINDOW_DISPOSITION_CHANGED: Window disposition changes\n' +
    '   (implemented here in aura::WindowObserver). (The FocusController registers\n' +
    '   itself as an observer of the active and focused windows).'
]
focus_rules.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Implemented by an object that establishes the rules about what can be\n' +
    ' focused or activated.'
]
ime_util_chromeos.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A property key to store the restore bounds for a window when moved by the\n' +
    ' virtual keyboard.',
  ' Moves |window| to ensure it does not intersect with |rect_in_screen|.',
  ' Restores the window bounds when input client loses the focus on the window.'
]
native_cursor_manager.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface where platforms such as Ash or Desktop aura are notified of\n' +
    ' requested changes to cursor state. When requested, implementer should tell\n' +
    ' the CursorManager of any actual state changes performed through the\n' +
    ' delegate.'
]
native_cursor_manager_delegate.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The non-public interface that CursorManager exposes to its users. This\n' +
    ' gives accessors to all the current state, and mutators to all the current\n' +
    ' state.'
]
scoped_animation_disabler.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper class to perform window state changes without animations. Used to hide\n' +
    ' /show/minimize windows without having their animation interfere with the ones\n' +
    ' this class is in charge of.'
]
shadow_controller.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ShadowController observes changes to windows and creates and updates drop\n' +
    ' shadows as needed. ShadowController itself is light weight and per\n' +
    ' ActivationClient. ShadowController delegates to its implementation class,\n' +
    ' which observes all window creation.'
]
shadow_controller_delegate.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ShadowControllerDelegate allows a user to modify a shadow on certain windows\n' +
    ' differently from the normal use case.'
]
shadow_types.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Indicates an elevation should be chosen based on the window. This is used\n' +
    ' by wm::ShadowController, but is not a valid elevation to pass to wm::Shadow.',
  ' Different types of drop shadows that can be drawn under a window by the\n' +
    ' shell. Used as a value for the kShadowElevationKey property.',
  ' The shadow elevation for popups such as toasts and notifiers.',
  ' Standard shadow elevations used by the the aura window manager. The value is\n' +
    ' used to initialize an instance of wm::Shadow and controls the offset and blur\n' +
    ' of the shadow style created by gfx::ShadowValue::MakeMdShadowValues() or\n' +
    ' gfx::ShadowValue::MakeChromeOSSystemUIShadowValues().',
  ' Returns the default shadow elevaltion value for |window|.',
  ' Returns the shadow elevation property value for |window|, converting\n' +
    ' |kShadowElevationDefault| to the appropriate value.',
  ' A property key describing the drop shadow that should be displayed under the\n' +
    ' window. A null value is interpreted as using the default.'
]
transient_window_controller.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TransientWindowClient implementation. Uses TransientWindowManager to handle\n' +
    ' tracking transient per window.'
]
transient_window_manager.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TransientWindowManager manages the set of transient children for a window\n' +
    ' along with the transient parent. Transient children get the following\n' +
    ' behavior:\n' +
    ' . The transient parent destroys any transient children when it is\n' +
    '   destroyed. This means a transient child is destroyed if either its parent\n' +
    '   or transient parent is destroyed.\n' +
    ' . If a transient child and its transient parent share the same parent, then\n' +
    '   transient children are always ordered above the transient parent.\n' +
    ' . If a transient parent is hidden, it hides all transient children.\n' +
    '   For show operation, please refer to |set_parent_controls_visibility(bool)|.\n' +
    ' Transient windows are typically used for popups and menus.'
]
transient_window_observer.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
transient_window_stacking_client.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
visibility_controller.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Suspends the animations for visibility changes during the lifetime of an\n' +
    ' instance of this class.\n' +
    ' Example:\n' +
    ' void ViewName::UnanimatedAction() {\n' +
    '   SuspendChildWindowVisibilityAnimations suspend(parent);\n' +
    '   // Perform unanimated action here.\n' +
    '   // ...\n' +
    '   // When the method finishes, visibility animations will return to their\n' +
    '   // previous state.\n' +
    ' }',
  ' Enable visibility change animation for specific |window|. Use this if\n' +
    ' you want to enable visibility change animation on a specific window without\n' +
    ' affecting other windows in the same container. Calling this on a window\n' +
    ' whose animation is already enabled either by this function, or\n' +
    ' via SetChildWindowVisibilityChangesAnimatedbelow below is allowed and\n' +
    ' the animation stays enabled.',
  ' Enable visibility change animation for all children of the |window|.\n' +
    ' Typically applied to a container whose child windows should be animated\n' +
    ' when their visibility changes.'
]
window_animations.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A variety of canned animations for window transitions.',
  " Canned animations that take effect once but don't have a symmetric pair as\n" +
    ' visibility animations do.',
  ' These two methods use int for type rather than WindowVisibilityAnimationType\n' +
    ' since downstream libraries can extend the set of animations.',
  ' A wrapper of ui::ScopedLayerAnimationSettings for implicit hiding animations.\n' +
    ' Use this to ensure that the hiding animation is visible even after\n' +
    ' the window is deleted or deactivated, instead of using\n' +
    ' ui::ScopedLayerAnimationSettings directly.',
  " Returns false if the |window| didn't animate.",
  ' Returns true if window animations are disabled for |window|. Window\n' +
    ' animations are enabled by default. If |window| is nullptr, this just checks\n' +
    ' if the global flag disabling window animations is present.'
]
window_modality_controller.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Sets the modal parent for the child.',
  ' Returns the modal transient child of |window|, or NULL if |window| does not\n' +
    ' have any modal transient children.',
  ' WindowModalityController is an event filter that consumes events sent to\n' +
    ' windows that are the transient parents of window-modal windows. This filter\n' +
    ' must be added to the CompoundEventFilter so that activation works properly.'
]
window_properties.h [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Type of visibility change transition that a window should animate.\n' +
    ' Default behavior is to animate both show and hide.',
  ' Alphabetical sort.',
  ' Property to tell if the container uses screen coordinates for the child\n' +
    ' windows.',
  ' Used if the animation-type is WINDOW_VISIBILITY_ANIMATION_TYPE_VERTICAL.',
  ' The number of hiding animations in progress on the window.',
  ' These need to be declared here for jumbo builds.'
]
window_util.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Returns true if |window|'s show state is |state|.",
  " Returns |window|'s current show state.",
  ' Sets the window state to |state|.',
  ' Restores the window state from the current state to its previous applicable\n' +
    ' state. As an example, if the current state is minimized, Restore() will\n' +
    " change the window's sate to its applicable pre-minimized state, which is the\n" +
    ' same as calling Unminimize() function.',
  " Changes a window's state to its pre-minimized state.",
  ' Retrieves the activatable window for |window|. If |window| is activatable,\n' +
    ' this will just return it, otherwise it will climb the parent/transient parent\n' +
    ' chain looking for a window that is activatable, per the ActivationClient.\n' +
    ` If you're looking for a function to get the activatable "top level" window,\n` +
    " this is probably the function you're looking for.",
  ' Retrieves the toplevel window for |window|. The ActivationClient makes this\n' +
    ' determination.',
  ' Returns the existing Layer for |root| (and all its descendants) and creates\n' +
    ' a new layer for |root| and all its descendants. This is intended for\n' +
    ' animations that want to animate between the existing visuals and a new state.\n' +
    ' As a result of this |root| has freshly created layers, meaning the layers\n' +
    ' have not yet been painted to.',
  ' Maps |map_func| over each layer of the layer tree and returns a copy of the\n' +
    ' layer tree. The recursion stops at the level when |map_func| returns nullptr\n' +
    " on the owner's layer. MapLayers might return nullptr when |map_func| returns\n" +
    " nullptr on the root layer's owner.",
  ' Returns a layer tree that mirrors |root|. Used for live window previews. If\n' +
    ' |sync_bounds| is true, the bounds of all mirror layers except the root are\n' +
    ' synchronized. See |sync_bounds_with_source_| in ui::Layer.',
  ' Convenience functions that get the TransientWindowManager for the window and\n' +
    ' redirect appropriately. These are preferable to calling functions on\n' +
    ' TransientWindowManager as they handle the appropriate null checks.',
  ' Returns true if |window| has |ancestor| as a transient ancestor. A transient\n' +
    ' ancestor is found by following the transient parent chain of the window.',
  " Snap the window's layer to physical pixel boundary."
]
wm_core_switches.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Note: If you add a switch, consider if it needs to be copied to a subsequent\n' +
    ' command line if the process executes a new copy of itself.  (For example,\n' +
    ' see `ash::GetOffTheRecordCommandLine()`.)',
  ' Please keep alphabetized.'
]
wm_state.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Installs state needed by the window manager.'
]
activation_change_observer.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Gets/Sets the ActivationChangeObserver for a specific window. This observer\n' +
    ' is notified after the ActivationClient notifies all registered observers.'
]
activation_client.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by an object that manages window activation.',
  ' Sets/Gets the activation client on the root Window.',
  ' Some types of transient window are only visible when active.\n' +
    ' The transient parents of these windows may have visual appearance properties\n' +
    ' that differ from transient parents that can be deactivated.\n' +
    ' The presence of this property implies these traits.\n' +
    ' TODO(beng): currently the UI framework (views) implements the actual\n' +
    '             close-on-deactivate component of this feature but it should be\n' +
    '             possible to implement in the aura client.'
]
activation_delegate.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by an object that configures and responds to changes\n' +
    " to a window's activation state.",
  ' Sets/Gets the ActivationDelegate on the Window. No ownership changes.'
]
animation_host.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Interface for top level window host of animation. Communicates additional\n' +
    ' bounds required for animation as well as animation completion for deferring\n' +
    ' window closes on hide.'
]
mock_activation_change_observer.h [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A mock activation change observer for testing.'
]
scoped_tooltip_disabler.h [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Use to temporarily disable tooltips.'
]
tooltip_client.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Sets the text for the tooltip. The id is used to determine uniqueness when\n' +
    ' the text does not change. For example, if the tooltip text does not change,\n' +
    ' but the id does then the position of the tooltip is updated.'
]
tooltip_observer.h [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
window_move_client.h [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An interface implemented by an object that manages programatically keyed\n' +
    ' window moving.',
  ' Sets/Gets the activation client for the specified window.'
]
wm_public_export.h [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Defines WM_PUBLIC_EXPORT so that functionality implemented by the wm_public\n' +
    ' module can be exported to consumers.'
]
testing_cursor_client_observer.h [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' CursorClientObserver for testing.'
]
wm_test_helper.h [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Creates a minimal environment for running the shell. We can't pull in all of\n" +
    " ash here, but we can create and attach several of the same things we'd find\n" +
    ' in ash.'
]
> ./out/extract-comments/ui_.h.json
.js 67
popup.js [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
background.js [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Script that runs on the background page.'
]
background.js [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
common.js [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
highcontrast.js [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Add the elements to the pgae that make high-contrast adjustments possible.',
  ' * This is called on load and every time the mode might have changed\n' +
    ' * (i.e. enabling/disabling, or changing the type of contrast adjustment\n' +
    ' * for this page).',
  ' * Called when we get a message from the background page.',
  ' * KeyDown event handler'
]
ui.js [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
background.js [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
common.js [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(wnwen): Move most of these functions to their own page rather than\n' +
    '     common, which should be shared with content script.'
]
cvd.js [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cvd_type.js [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' @enum {string}',
  ' @typedef {!CvdType|Storage.INVALID_TYPE_PLACEHOLDER}',
  ' @enum {string} The Cvd Matrix can be pivot across different color axis:\n' +
    ' * DEFAULT uses the standard color rotation depending on CVD\n' +
    ' * while RED, GREEN, BLUE are used to override.\n' +
    ' *'
]
matrix.js [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Class that represents a 3x3 matrix.',
  ' @const {!Matrix3x3}',
  ' @enum {number}'
]
matrix_test.js [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test fixture for matrix.js.',
  ' * @param {!Array<!Array<number>>} expected\n * @param {!Matrix3x3} actual'
]
popup.js [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Vertical offset for displaying the row highlight.\n * @const {number}',
  ' ======= Swatch generator =======',
  ' * Set of colors for test swatches.\n' +
    ' * Each row of swatches corresponds to a different type of color blindness.\n' +
    ' * Tests for the 3 different types of dichromatic color vison.\n' +
    ' * Colors selected based on color confusion lines for dichromats using our\n' +
    ' * swatch generator tool. See:\n' +
    ' * http://www.color-blindness.com/2007/01/23/confusion-lines-of-the-cie-1931-color-space/'
]
storage.js [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Class to handle both storing values using the chrome.storage API, and\n' +
    ' * fetching/caching values that have been stored that way.'
]
storage_test.js [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test fixture for storage.js.',
  ' * @param {number} expected\n * @param {number} actual'
]
background.js [
  ' Copyright (c) 2014 The Chromium Authors. All rights reserved.\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
common.js [
  ' Copyright (c) 2014 The Chromium Authors. All rights reserved.\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Wrap chrome.storage.local API.'
]
highcontrast.js [
  ' Copyright (c) 2014 The Chromium Authors. All rights reserved.\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Add the elements to the pgae that make high-contrast adjustments possible.',
  ' * This is called on load and every time the mode might have changed\n' +
    ' * (i.e. enabling/disabling, or changing the type of contrast adjustment\n' +
    ' * for this page).',
  ' * Called when a pref changes.',
  ' * KeyDown event handler'
]
popup.js [
  ' Copyright (c) 2014 The Chromium Authors. All rights reserved.\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
storage.js [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' @enum {number}',
  ' * Class to handle interactions with the chrome.storage API and values that are\n' +
    ' * stored there.'
]
storage_test.js [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test fixture for storage.js.',
  ' * @param {string} key\n * @param {*} expected'
]
background.js [
  ' Copyright 2014 The Chromium Authors\n' +
    ' * Use of this source code is governed by a BSD-style license that can be\n' +
    ' * found in the LICENSE file.',
  ' * Add context menu item when the extension is installed.',
  ' * Add listener for messages from content script.\n' +
    ' * Enable/disable the context menu item.',
  ' * Event handler for when a context menu item is clicked.\n' +
    ' * aria-describedat is given a higher priority.\n' +
    ' * No need to strip the URL of leading/trailing white space\n' +
    ' * because Chrome takes care of this.\n' +
    ' *\n' +
    ' * @param info\n' +
    ' * @param tab'
]
lastRightClick.js [
  ' Copyright 2014 The Chromium Authors\n' +
    ' * Use of this source code is governed by a BSD-style license that can be\n' +
    ' * found in the LICENSE file.',
  ' * Sends a message to the backgrond script notifying it to\n' +
    ' * enable or disable the context menu item.\n' +
    ' *\n' +
    ' * @param element',
  ' * Modify border to make the HTML element more visible.',
  ' * Revert back to the original border styling.'
]
options.js [
  ' Copyright 2014 The Chromium Authors\n' +
    ' * Use of this source code is governed by a BSD-style license that can be\n' +
    ' * found in the LICENSE file.',
  ' Saves options to chrome.storage',
  ' Restores select box and checkbox state using the preferences\n' +
    ' stored in chrome.storage.'
]
webstore_extension_test_base.js [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Generic parts of the test fixture for webstore extension tests.'
]
webstore_extension_test_base.js [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Generic parts of the test fixture for webstore extension tests.'
]
.eslintrc.js [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
test_harness.js [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mark the test as fully loaded. The Browser Test reads this.'
]
quick_view.js [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview: This file describes the interfaces shared between the Files\n' +
    ' * app UI and the JS code run from unstrusted_resources (as part of the\n' +
    ' * QuickView).\n' +
    ' * @see `//ash/webui/file_manager/untrusted_resources/` for its usage.',
  ' * File preview content. Sent from <files-quick-view> to a sandboxed page, as\n' +
    ' * part of UntrustedPreviewData. |data| field holds a Blob/File, or a content\n' +
    " * URL. |dataType| specifies 'blob' or 'url' accordingly (other values are\n" +
    ' * interpreted as no preview data).\n' +
    ' * @typedef {{\n' +
    ' *   data: ?(Blob|string|undefined),\n' +
    ' *   dataType: string\n' +
    ' * }}',
  ' * Parameters gathered to set the Quick View dialog properties.\n' +
    ' * @typedef {{\n' +
    ' *   type: string,\n' +
    ' *   subtype: string,\n' +
    ' *   filePath: string,\n' +
    ' *   hasTask: boolean,\n' +
    ' *   canDelete: boolean,\n' +
    ' *   sourceContent: (?FilePreviewContent|undefined),\n' +
    ' *   videoPoster: (?FilePreviewContent|undefined),\n' +
    ' *   audioArtwork: (?FilePreviewContent|undefined),\n' +
    ' *   autoplay: (?boolean|undefined),\n' +
    ' *   browsable: (?boolean|undefined),\n' +
    ' * }}',
  ' * Preview data that we send from the trusted context (Files app) to\n' +
    " * the untrusted context. |type| specifies the type of file to preview ('audio',\n" +
    " * 'image', etc...).\n" +
    ' * @typedef {{\n' +
    ' *   type: string,\n' +
    ' *   sourceContent: !FilePreviewContent\n' +
    ' * }}'
]
.eslintrc.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
init_globals.js [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Runtime setup before main.js is executed.',
  ' * Sets window.IN_TEST if this code is run in the test environment. We\n' +
    ' * detect this by checking for presence of domAutomationController.\n' +
    ' * @const @type {boolean}'
]
background.js [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.\n' +
    ' background.js: test loading the [piexwasm] module in chrome extension.'
]
tests.js [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
background.js [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' eslint-disable-next-line no-var',
  ' If the manifest for device or file source is used, then mount a fake file\n' +
    ' system on install.'
]
.eslintrc.js [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dom_automation_controller.js [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Extern for window.domAutomationController which is used in\n' +
    ' * browsertests.',
  ' @constructor',
  ' @param {*} jsonObj',
  ' @type {DomAutomationController}'
]
mojo_api.js [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Note: The API should stay in sync with the IDL definitions in\n' +
    ' third_party/WebKit/Source/core/mojo',
  ' eslint-disable-next-line no-var',
  ' * MojoResult {number}: Result codes for Mojo operations.',
  ' * Creates a message pipe.\n' +
    ' *\n' +
    ' * @return {result: !MojoResult, handle0: !MojoHandle=, handle1: !MojoHandle=}\n' +
    ' *     Result code and (on success) the two message pipe handles.',
  ' * Binds to the specified Mojo interface.\n' +
    ' * @param {string} interfaceName The interface name to connect.\n' +
    ' * @param {!MojoHandle} requestHandle The interface request handle.',
  ' * MojoWatcher identifies a watch on a MojoHandle and can be used to cancel the\n' +
    ' * watch.',
  ' -----------------------------------------------------------------------------\n' +
    ' Mojo API implementation details. It is not part of the public API.',
  ' * Synchronously sends a message to Mojo backend.\n' +
    ' * @param {!Object} message The message to send.\n' +
    ' * @return {Object=} Response from Mojo backend.',
  ' * Holds callbacks for all currently active watches.',
  ' * Base64-encode an ArrayBuffer\n' +
    ' * @param {ArrayBuffer} buffer\n' +
    ' * @return {String}',
  ' * Base64-encode an Uint8Array\n' +
    ' * @param {Uint8Array} buffer\n' +
    ' * @return {String}'
]
web_ui.js [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Sends messages to the browser. See\n' +
    ' * https://chromium.googlesource.com/chromium/src/+/main/docs/webui_explainer.md#chrome_send\n' +
    ' *\n' +
    ' * @param {string} message name to be passed to the browser.\n' +
    ' * @param {Array=} args optional.'
]
load_time_data_deprecated.js [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview\n' +
    ' * NOTE: This file is deprecated, and provides only the minimal LoadTimeData\n' +
    ' * functions for places in the code still not using JS modules. Use\n' +
    ' * load_time_data.ts in all new code.\n' +
    ' *\n' +
    ' * This file defines a singleton which provides access to all data\n' +
    " * that is available as soon as the page's resources are loaded (before DOM\n" +
    ' * content has finished loading). This data includes both localized strings and\n' +
    ' * any data that is important to have ready from a very early stage (e.g. things\n' +
    ' * that must be displayed right away).\n' +
    ' *\n' +
    ' * Note that loadTimeData is not guaranteed to be consistent between page\n' +
    ' * refreshes (https://crbug.com/740629) and should not contain values that might\n' +
    ' * change if the page is re-opened later.',
  ' @type {!LoadTimeData}',
  ' eslint-disable-next-line no-var',
  ' * Checks condition, throws error message if expectation fails.\n' +
    ' * @param {*} condition The condition to check for truthiness.\n' +
    ' * @param {string} message The message to display if the check fails.',
  ' * Checks that the given value has the given type.\n' +
    ' * @param {string} id The id of the value (only used for error message).\n' +
    ' * @param {*} value The value to check the type on.\n' +
    ' * @param {string} type The type we expect |value| to be.',
  ' Expose |loadTimeData| directly on |window|, since within a JS module the\n' +
    ' scope is local and not all files have been updated to import the exported\n' +
    ' |loadTimeData| explicitly.'
]
util_deprecated.js [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' @filedescription Minimal utils and assertion support for places in the code\n' +
    ' * that are still not updated to JS modules. Do not use in new code. Use\n' +
    ' * assert_ts and util_ts instead.',
  ' * Note: This method is deprecated. Use the equivalent method in assert_ts.ts\n' +
    ' * instead.\n' +
    ' * Verify |condition| is truthy and return |condition| if so.\n' +
    ' * @template T\n' +
    ' * @param {T} condition A condition to check for truthiness.  Note that this\n' +
    " *     may be used to test whether a value is defined or not, and we don't want\n" +
    ' *     to force a cast to Boolean.\n' +
    ' * @param {string=} opt_message A message to show on failure.\n' +
    ' * @return {T} A non-null |condition|.\n' +
    ' * @closurePrimitive {asserts.truthy}\n' +
    ' * @suppress {reportUnknownTypes} because T is not sufficiently constrained.',
  ' * Note: This method is deprecated. Use the equivalent method in assert_ts.ts\n' +
    ' * instead.\n' +
    ' * Call this from places in the code that should never be reached.\n' +
    ' *\n' +
    ' * For example, handling all the values of enum with a switch() like this:\n' +
    ' *\n' +
    ' *   function getValueFromEnum(enum) {\n' +
    ' *     switch (enum) {\n' +
    ' *       case ENUM_FIRST_OF_TWO:\n' +
    ' *         return first\n' +
    ' *       case ENUM_LAST_OF_TWO:\n' +
    ' *         return last;\n' +
    ' *     }\n' +
    ' *     assertNotReached();\n' +
    ' *     return document;\n' +
    ' *   }\n' +
    ' *\n' +
    ' * This code should only be hit in the case of serious programmer error or\n' +
    ' * unexpected input.\n' +
    ' *\n' +
    ' * @param {string=} message A message to show when this is hit.\n' +
    ' * @closurePrimitive {asserts.fail}',
  ' * @param {*} value The value to check.\n' +
    ' * @param {function(new: T, ...)} type A user-defined constructor.\n' +
    ' * @param {string=} message A message to show when this is hit.\n' +
    ' * @return {T}\n' +
    ' * @template T',
  ' * Alias for document.getElementById. Found elements must be HTMLElements.\n' +
    ' * @param {string} id The ID of the element to find.\n' +
    ' * @return {HTMLElement} The found element or null if not found.',
  ' * Return the first ancestor for which the {@code predicate} returns true.\n' +
    ' * @param {Node} node The node to check.\n' +
    ' * @param {function(Node):boolean} predicate The function that tests the\n' +
    ' *     nodes.\n' +
    ' * @param {boolean=} includeShadowHosts\n' +
    ' * @return {Node} The found ancestor or null if not found.'
]
lit_migration.js [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
.eslintrc.js [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bar_ui.rollup.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '# sourceMappingURL=bar_ui.rollup.js.map'
]
bar_wrapper.rollup.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '# sourceMappingURL=bar_wrapper.rollup.js.map'
]
baz_ui.rollup.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '# sourceMappingURL=baz_ui.rollup.js.map'
]
foo_ui.rollup.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '# sourceMappingURL=foo_ui.rollup.js.map'
]
foo_ui_excludes.rollup.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '# sourceMappingURL=foo_ui.rollup.js.map'
]
foo_ui_excludes_resources.rollup.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '# sourceMappingURL=foo_ui.rollup.js.map'
]
foo_ui_multi_bundle.rollup.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '# sourceMappingURL=foo_ui.rollup.js.map'
]
shared.rollup.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '# sourceMappingURL=shared.rollup.js.map'
]
bar.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
baz.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
foo.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bar_resource.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
foo_resource.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
foo_untrusted.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bar.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bar_ui.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bar_wrapper.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
foo.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
foo_ui.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
baz.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
baz_ui.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
bar.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' comments should be removed',
  ' * Copyright (C) 2024 Bar\n' +
    " * Test a different copyright from Chromium to make sure that's not removed."
]
bar_expected.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Copyright (C) 2024 Bar\n' +
    " * Test a different copyright from Chromium to make sure that's not removed.\n" +
    ' const quux=5;'
]
foo.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
foo_expected.js [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
> ./out/extract-comments/ui_.js.json
.ts 697
app_window_wrapper.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Coordinates the creation of new windows for Files app.'
]
crostini.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Handles shares for Crostini VMs.',
  " * Default Crostini VM is 'termina'.",
  " * Plugin VM 'PvmDefault'.",
  ' * Valid root types to their share location.',
  ' * Implementation of Crostini shared path state handler.'
]
crostini_unittest.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Set up the test components.',
  ' * Tests init sets crostini and PluginVm enabled status.',
  ' * Tests setEnabled tracks enabled/disabled correctly, in particular with\n' +
    ' * multiple containers in a VM.',
  ' * Tests path sharing.',
  ' * Tests disallowed and allowed shared paths.'
]
drive_sync_handler.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Handles notifications supplied by drivefs.',
  ' * Shorthand for metadata keys.',
  ' * Shorthand for sync statuses.',
  ' * Prefix for Out of Quota sync messages to ensure they reuse existing\n' +
    ' * notification messages instead of starting new ones.',
  ' * The completed event name.',
  ' * A list of prefixes used to disambiguate errors that come from the same source\n' +
    ' * to ensure separate notifications are generated.'
]
drive_sync_handler_unittest.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Global progress center object.',
  ' * Global DriveSyncHandler object.',
  ' * Mock chrome APIs.',
  ' * Stub out file URLs handling.',
  ' Set up the test components.',
  ' Test that in general case item IDs produced for errors are unique.',
  ' Test that item IDs produced for quota errors are same.'
]
entry_location_impl.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * Location information which shows where the path points in FileManager's\n" +
    ' * file system.'
]
file_manager_base.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Root class of the former background page.',
  ' * Prefix for the dialog ID.',
  ' * Value of the next file manager dialog ID.',
  ' * Singleton instance of Background object.',
  ' * End recording of the background page Load.BackgroundScript metric.'
]
file_operation_handler.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * An event handler of the background page for file operations.',
  ' * Obtains ProgressItemType from OperationType of ProgressStatus.type.',
  ' * Generate a progress message from the event.',
  ' * Converts fileManagerPrivate.PolicyErrorType to\n' +
    ' * ProgressCenterItem.PolicyErrorType.',
  ' * Returns the extra button text for policy panel items. Currently only\n' +
    ' * supported for PAUSED and ERROR states due to policy, and for COPY or MOVE\n' +
    ' * operation types.'
]
metrics_start.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Metrics calls to start measurement of script loading.  Include\n' +
    ' * this as the first script in main_background.js.'
]
mock_crostini.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Crostini shared path state handler.',
  ' * Crostini shared path state handler factory for foreground tests. Change it\n' +
    ' * to a mock when tests need to override {CrostiniImpl} behavior.'
]
mock_progress_center.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Mock implementation of ProgressCenter for tests.'
]
mock_volume_manager.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Mock class for VolumeManager.'
]
progress_center.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Implementation of ProgressCenter at the background page.'
]
runtime_loaded_test_util.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Script loaded into the background page of a component\n' +
    ' * extension under test at runtime to populate testing functionality.',
  ' * Extract the information of the given element.\n' +
    ' * @param element Element to be extracted.\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param styleNames List of CSS property name to be obtained. NOTE: Causes\n' +
    ' *     element style re-calculation.\n' +
    ' * @return Element information that contains contentText, attribute names and\n' +
    ' *     values, hidden attribute, and style names and values.',
  ' * Gets total Javascript error count from background page and each app window.\n' +
    ' * @return Error count.',
  ' * Resizes the window to the specified dimensions.\n' +
    ' *\n' +
    ' * @param width Window width.\n' +
    ' * @param height Window height.\n' +
    ' * @return True for success.',
  ' * Queries all elements.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param targetQuery Query to specify the element.\n' +
    ' * @param styleNames List of CSS property name to be obtained.\n' +
    ' * @return Element information that contains contentText, attribute names and\n' +
    ' *     values, hidden attribute, and style names and values.',
  ' * Queries elements inside shadow DOM.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param targetQuery Query to specify the element.\n' +
    ' *   |targetQuery[0]| specifies the first element(s). |targetQuery[1]| specifies\n' +
    ' *   elements inside the shadow DOM of the first element, and so on.\n' +
    ' * @param styleNames List of CSS property name to be obtained.\n' +
    ' * @return Element information that contains contentText, attribute names and\n' +
    ' *     values, hidden attribute, and style names and values.',
  ' * Count elements matching the selector query.\n' +
    ' *\n' +
    ' * This avoid serializing and transmitting the elements to the test extension,\n' +
    ' * which can be time consuming for large elements.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param query Query to specify the element.\n' +
    ' *   |query[0]| specifies the first element(s). |query[1]| specifies elements\n' +
    ' *   inside the shadow DOM of the first element, and so on.\n' +
    ' * @param callback Callback function with results if the number of elements\n' +
    ' *     match |count|.',
  ' * Selects elements below |root|, possibly following shadow DOM subtree.\n' +
    ' *\n' +
    ' * @param root Element to search from.\n' +
    ' * @param targetQuery Query to specify the element.\n' +
    ' *   |targetQuery[0]| specifies the first element(s). |targetQuery[1]| specifies\n' +
    ' *   elements inside the shadow DOM of the first element, and so on.\n' +
    ' * @return Matched elements.',
  ' * Gets the information of the active element.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param styleNames List of CSS property name to be obtained.\n' +
    ' * @return Element information that contains contentText, attribute names and\n' +
    ' *     values, hidden attribute, and style names and values. If there is no\n' +
    ' *     active element, returns null.',
  ' * Gets the information of the active element. However, unlike the previous\n' +
    ' * helper, the shadow roots are searched as well.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param styleNames List of CSS property name to be obtained.\n' +
    ' * @return Element information that contains contentText, attribute names and\n' +
    ' *     values, hidden attribute, and style names and values. If there is no\n' +
    ' *     active element, returns null.',
  ' * Gets an array of every activeElement, walking down the shadowRoot of every\n' +
    ' * active element it finds.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param styleNames List of CSS property name to be obtained.\n' +
    ' * @return Element information that contains contentText, attribute names and\n' +
    ' *     values, hidden attribute, and style names and values. If there is no\n' +
    ' * active element, returns an empty array.',
  ' * Assigns the text to the input element.\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param query Query for the input element.\n' +
    ' *     If |query| is an array, |query[0]| specifies the first element(s),\n' +
    ' *     |query[1]| specifies elements inside the shadow DOM of the first element,\n' +
    ' *     and so on.\n' +
    ' * @param text Text to be assigned.\n' +
    ' * @return Whether or not the text was assigned.',
  ' * Sets the left scroll position of an element.\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param query Query for the test element.\n' +
    ' * @param position scrollLeft position to set.\n' +
    ' * @return True if operation was successful.',
  ' * Sets the top scroll position of an element.\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param query Query for the test element.\n' +
    ' * @param position scrollTop position to set.\n' +
    ' * @return True if operation was successful.',
  ' * Sets style properties for an element using the CSS OM.\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param query Query for the test element.\n' +
    ' * @param properties CSS Property name/values to set.\n' +
    ' * @return Whether styles were set or not.',
  ' * Sends an event to the element specified by |targetQuery| or active element.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param targetQuery Query to specify the element.\n' +
    ' *     If this value is null, an event is dispatched to active element of the\n' +
    ' *     document.\n' +
    ' *     If targetQuery is an array, |targetQuery[0]| specifies the first\n' +
    ' *     element(s), |targetQuery[1]| specifies elements inside the shadow DOM of\n' +
    ' *     the first element, and so on.\n' +
    ' * @param event Event to be sent.\n' +
    ' * @return True if the event is sent to the target, false otherwise.',
  ' * Sends an fake event having the specified type to the target query.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param targetQuery Query to specify the element.\n' +
    ' * @param eventType Type of event.\n' +
    ' * @param additionalProperties Object containing additional properties.\n' +
    ' * @return True if the event is sent to the target, false otherwise.',
  ' * Sends a fake key event to the element specified by |targetQuery| or active\n' +
    ' * element with the given |key| and optional |ctrl,shift,alt| modifier.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param targetQuery Query to specify the element. If this value is\n' +
    ' *     null, key event is dispatched to active element of the document.\n' +
    ' * @param key DOM UI Events key value.\n' +
    ' * @param ctrl Whether CTRL should be pressed, or not.\n' +
    ' * @param shift whether SHIFT should be pressed, or not.\n' +
    ' * @param alt whether ALT should be pressed, or not.\n' +
    ' * @return True if the event is sent to the target, false otherwise.',
  ' * Simulates a fake mouse click (left button, single click) on the element\n' +
    ' * specified by |targetQuery|. If the element has the click method, just calls\n' +
    " * it. Otherwise, this sends 'mouseover', 'mousedown', 'mouseup' and 'click'\n" +
    ' * events in turns.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param targetQuery Query to specify the element.\n' +
    ' *     If targetQuery is an array, |targetQuery[0]| specifies the first\n' +
    ' *     element(s), |targetQuery[1]| specifies elements inside the shadow DOM of\n' +
    ' *     the first element, and so on.\n' +
    ' * @param keyModifiers Object containing common key modifiers : shift, alt, and\n' +
    ' *     ctrl.\n' +
    ' * @param button Mouse button number as per spec, e.g.: 2 for right-click.\n' +
    ' * @param eventProperties Additional properties to pass to each event, e.g.:\n' +
    ' *     clientX and clientY. right-click.\n' +
    ' * @return True if the all events are sent to the target, false otherwise.',
  ' * Simulates a mouse hover on an element specified by |targetQuery|.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param targetQuery Query to specify the element.\n' +
    ' *     If targetQuery is an array, |targetQuery[0]| specifies the first\n' +
    ' *     element(s), |targetQuery[1]| specifies elements inside the shadow DOM of\n' +
    ' *     the first element, and so on.\n' +
    ' * @param keyModifiers Object containing common key modifiers : shift, alt, and\n' +
    ' *     ctrl.\n' +
    ' * @return True if the event was sent to the target, false otherwise.',
  ' * Simulates a mouseout event on an element specified by |targetQuery|.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param targetQuery Query to specify the element.\n' +
    ' *     If targetQuery is an array, |targetQuery[0]| specifies the first\n' +
    ' *     element(s), |targetQuery[1]| specifies elements inside the shadow DOM of\n' +
    ' *     the first element, and so on.\n' +
    ' * @param keyModifiers Object containing common key modifiers : shift, alt, and\n' +
    ' *     ctrl.\n' +
    ' * @return True if the event is sent to the target, false otherwise.',
  ' * Simulates a fake full mouse right-click  on the element specified by\n' +
    ' * |targetQuery|.\n' +
    ' *\n' +
    ' * It generates the sequence of the following MouseEvents:\n' +
    ' * 1. mouseover\n' +
    ' * 2. mousedown\n' +
    ' * 3. mouseup\n' +
    ' * 4. click\n' +
    ' * 5. contextmenu\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param targetQuery Query to specify the element.\n' +
    ' * @param keyModifiers Object containing common key modifiers: shift, alt, and\n' +
    ' *     ctrl.\n' +
    ' * @return True if the event is sent to the target, false otherwise.',
  ' * Simulate a fake contextmenu event without right clicking on the element\n' +
    ' * specified by |targetQuery|. This is mainly to simulate long press on the\n' +
    ' * element.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param targetQuery Query to specify the element.\n' +
    ' * @return True if the event is sent to the target, false otherwise.',
  ' * Simulates a fake touch event (touch start and touch end) on the element\n' +
    ' * specified by |targetQuery|.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param targetQuery Query to specify the element.\n' +
    ' * @return True if the event is sent to the target, false otherwise.',
  ' * Simulates a fake double click event (left button) to the element specified by\n' +
    ' * |targetQuery|.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param targetQuery Query to specify the element.\n' +
    ' * @return True if the event is sent to the target, false otherwise.',
  ' * Sends a fake mouse down event to the element specified by |targetQuery|.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param targetQuery Query to specify the element.\n' +
    ' * @return True if the event is sent to the target, false otherwise.',
  ' * Sends a fake mouse up event to the element specified by |targetQuery|.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param targetQuery Query to specify the element.\n' +
    ' * @return True if the event is sent to the target, false otherwise.',
  ' * Simulates a mouse right-click on the element specified by |targetQuery|.\n' +
    ' * Optionally pass X,Y coordinates to be able to choose where the right-click\n' +
    ' * should occur.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param targetQuery Query to specify the element.\n' +
    ' * @param offsetBottom offset pixels applied to target element bottom, can be\n' +
    ' *     negative to move above the bottom.\n' +
    ' * @param offsetRight offset pixels applied to target element right can be\n' +
    ' *     negative to move inside the element.\n' +
    ' * @return True if the all events are sent to the target, false otherwise.',
  ' * Sends drag and drop events to simulate dragging a source over a target.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param sourceQuery Query to specify the source element.\n' +
    ' * @param targetQuery Query to specify the target element.\n' +
    ' * @param skipDrop Set true to drag over (hover) the target only, and not send\n' +
    ' *     target drop or source dragend events.\n' +
    ' * @param callback Function called with result true on success, or false on\n' +
    ' *     failure.',
  ' * Sends a target dragleave or drop event, and source dragend event, to finish\n' +
    ' * the drag a source over target simulation started by fakeDragAndDrop for the\n' +
    ' * case where the target was hovered.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param sourceQuery Query to specify the source element.\n' +
    ' * @param targetQuery Query to specify the target element.\n' +
    ' * @param dragLeave Set true to send a dragleave event to the target instead of\n' +
    ' *     a drop event.\n' +
    ' * @param callback Function called with result true on success, or false on\n' +
    ' *     failure.',
  ' * Sends a drop event to simulate dropping a file originating in the browser to\n' +
    ' * a target.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param fileName File name.\n' +
    ' * @param fileContent File content.\n' +
    ' * @param fileMimeType File mime type.\n' +
    ' * @param targetQuery Query to specify the target element.\n' +
    ' * @param callback Function called with result true on success, or false on\n' +
    ' *     failure.',
  ' * Sends a resize event to the content window.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @return True if the event was sent to the contentWindow.',
  ' * Focuses to the element specified by |targetQuery|. This method does not\n' +
    ' * provide any guarantee whether the element is actually focused or not.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param targetQuery Query to specify the element.\n' +
    ' * @return True if focus method of the element has been called, false otherwise.',
  ' * Obtains the list of notification ID.\n' +
    ' * @param _callback Callback function with results returned by the script.',
  ' * Gets file entries just under the volume.\n' +
    ' *\n' +
    ' * @param volumeType Volume type.\n' +
    ' * @param names File name list.\n' +
    ' * @param callback Callback function with results returned by\n' +
    ' *     the script.',
  ' * Unmounts the specified volume.\n' +
    ' *\n' +
    ' * @param volumeType Volume type.\n' +
    ' * @param callback Function receives true on success.',
  ' * Remote call API handler. When loaded, this replaces the declaration in\n' +
    ' * test_util_base.js.',
  ' * Returns the MetadataStats collected in MetadataModel, it will be serialized\n' +
    ' * as a plain object when sending to test extension.',
  ' * Calls the metadata model to get the selected file entries in the file list\n' +
    ' * and try to get their metadata properties.\n' +
    ' *\n' +
    ' * @param properties Content metadata properties to get.\n' +
    ' * @param callback Callback with metadata results returned.',
  ' * Returns true when FileManager has finished loading, by checking the attribute\n' +
    ' * "loaded" on its root element.',
  ' * Returns all a11y messages announced by |FileManagerUI.speakA11yMessage|.',
  ' * Reports to the given |callback| the number of volumes available in\n' +
    ' * VolumeManager in the background page.\n' +
    ' *\n' +
    ' * @param callback Callback function to be called with the number of volumes.',
  ' * Updates the preferences.',
  ' * Reports an enum metric.\n' +
    ' * @param name The metric name.\n' +
    ' * @param value The metric enumerator to record.\n' +
    ' * @param validValues An array containing the valid enumerators in order.',
  ' * Tells background page progress center to never notify a completed operation.',
  ' * Waits for the background page to initialize.\n' +
    ' * @param callback Callback function called when background page has finished\n' +
    ' *     initializing.',
  ' * Isolates a specific banner to be shown. Useful when testing functionality\n' +
    ' * of a banner in isolation.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param bannerTagName Tag name of the banner to isolate.\n' +
    ' * @param callback Callback function to be called with a boolean indicating\n' +
    ' *     success or failure.',
  ' * Disable banners from attaching themselves to the DOM.\n' +
    ' *\n' +
    ' * @param contentWindow Window the banner controller exists.\n' +
    ' * @param callback Callback function to be called with a boolean indicating\n' +
    ' *     success or failure.',
  ' * Disables the nudge expiry period for testing.\n' +
    ' *\n' +
    ' * @param contentWindow Window the banner controller exists.\n' +
    ' * @param callback Callback function to be called with a boolean indicating\n' +
    ' *     success or failure.'
]
test_util.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Shorter alias for the task descriptor type.',
  ' This is the shape of the data managed by overrideTasks().',
  ' A function that has been replaced by a Fake.',
  ' * Sanitizes the formatted date. Replaces unusual space with normal space.\n' +
    ' * @param strDate the date already in the string format.',
  ' * Returns details about each file shown in the file list: name, size, type and\n' +
    ' * modification time.\n' +
    ' *\n' +
    ' * Since FilesApp normally has a fixed display size in test, and also since the\n' +
    ' * #detail-table recycles its file row elements, this call only returns details\n' +
    ' * about the visible file rows (11 rows normally, see crbug.com/850834).\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @return Details for each visible file row.',
  ' * Returns the name of the files currently selected in the file list. Note the\n' +
    " * routine has the same 'visible files' limitation as getFileList() above.\n" +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @return Selected file names.',
  ' * Fakes pressing the down arrow until the given |filename| is selected.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param filename Name of the file to be selected.\n' +
    ' * @return True if file got selected, false otherwise.',
  ' * Open the file by selectFile and fakeMouseDoubleClick.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param filename Name of the file to be opened.\n' +
    ' * @return True if file got selected and a double click message is\n' +
    ' *     sent, false otherwise.',
  ' * Returns the last URL visited with visitURL() (e.g. for "Manage in Drive").\n' +
    ' *\n' +
    ' * @param contentWindow The window where visitURL() was called.\n' +
    ' * @return The URL of the last URL visited.',
  ' * Returns a string translation from its translation ID.\n' +
    ' * @param id The id of the translated string.',
  ' * Executes Javascript code on a webview and returns the result.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param webViewQuery Selector for the web view.\n' +
    ' * @param code Javascript code to be executed within the web view.\n' +
    ' * @param callback Callback function with results returned by the script.',
  ' * Selects |filename| and fakes pressing Ctrl+C, Ctrl+V (copy, paste).\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param filename Name of the file to be copied.\n' +
    ' * @return True if copying got simulated successfully. It does not\n' +
    ' *     say if the file got copied, or not.',
  ' * Selects |filename| and fakes pressing the Delete key.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param filename Name of the file to be deleted.\n' +
    ' * @return True if deleting got simulated successfully. It does not\n' +
    ' *     say if the file got deleted, or not.',
  ' * Execute a command on the document in the specified window.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param command Command name.\n' +
    ' * @return True if the command is executed successfully.',
  ' * Override the task-related methods in private api for test.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param taskList List of tasks to be returned in\n' +
    ' *     fileManagerPrivate.getFileTasks().\n' +
    ' * @param isPolicyDefault Whether the default is set by policy.\n' +
    ' * @return Always return true.',
  ' * Obtains the list of executed tasks.',
  ' * Obtains the list of executed tasks.\n' +
    ' * @param _contentWindow Window to be tested.\n' +
    ' * @param descriptor the task to *     check.\n' +
    ' * @param fileNames Name of files that should have been passed to the\n' +
    ' *     executeTasks().\n' +
    ' * @return True if the task was executed.',
  ' * Invokes an executed task with |responseArgs|.\n' +
    ' * @param _contentWindow Window to be tested.\n' +
    ' * @param descriptor the task to be replied to.\n' +
    ' * @param responseArgs the arguments to invoke the callback with.',
  ' * Calls the unload handler for the window.\n' +
    ' * @param contentWindow Window to be tested.',
  ' * Returns the path shown in the breadcrumb.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @return The breadcrumb path.',
  ' * Obtains the preferences.\n' +
    ' * @param callback Callback function with results returned by the script.',
  ' * Stubs out the formatVolume() function in fileManagerPrivate.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be affected.',
  ' * Run a contentWindow.requestAnimationFrame() cycle and resolve the\n' +
    ' * callback when that requestAnimationFrame completes.\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param callback Completion callback.',
  ' * Set the window text direction to RTL and wait for the window to redraw.\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param callback Completion callback.',
  ' * Map the appId to a map of all fakes applied in the foreground window e.g.:\n' +
    " *  {'files#0': {'chrome.bla.api': FAKE}",
  ' * A factory that returns a fake (aka function) that returns a static value.\n' +
    ' * Used to force a callback-based API to return always the same value.',
  ' * A factory that returns an async function (aka a Promise) that returns a\n' +
    ' * static value. Used to force a promise-based API to return always the same\n' +
    ' * value.',
  ' * Registry of available fakes, it maps the an string ID to a factory\n' +
    ' * function which returns the actual fake used to replace an implementation.\n' +
    ' *',
  ' * Class holds the information for applying and restoring fakes.',
  ' * Replaces implementations in the foreground page with fakes.\n' +
    ' *\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param fakeData An object mapping the path to the\n' +
    ' * object to be replaced and the value is the Array with fake id and\n' +
    ' * additional arguments for the fake constructor, e.g.: fakeData = {\n' +
    " *     'chrome.app.window.create' : [\n" +
    " *       'static_fake',\n" +
    " *       ['some static value', 'other arg'],\n" +
    ' *     ]\n' +
    ' *   }\n' +
    ' *\n' +
    " *  This will replace the API 'chrome.app.window.create' with a static fake,\n" +
    " *  providing the additional data to static fake: ['some static value',\n" +
    " * 'other value'].",
  ' * Removes all fakes that were applied to the foreground page.\n' +
    ' * @param contentWindow Window to be tested.',
  ' * Obtains the number of times the static fake api is called.\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param fakedApi Path of the method that is faked.\n' +
    ' * @return Number of times the fake api called.',
  ' * Obtains the list of arguments with which the static fake api was called.\n' +
    ' * @param contentWindow Window to be tested.\n' +
    ' * @param fakedApi Path of the method that is faked.\n' +
    ' * @return An array with all calls to this fake, each item\n' +
    ' *     is an array with all args passed in when the fake was called.',
  ' * Send progress item to Foreground page to display.\n' +
    ' * @param id Progress item id.\n' +
    ' * @param type Type of progress item.\n' +
    ' * @param state State of the progress item.\n' +
    ' * @param message Message of the progress item.\n' +
    ' * @param remainingTime The remaining time of the progress in second.\n' +
    ' * @param progressMax Max value of the progress.\n' +
    ' * @param progressValue Current value of the progress.\n' +
    ' * @param count Number of items being processed.',
  ' * Remote call API handler. This function handles messages coming from the\n' +
    ' * test harness to execute known functions and return results. This is a\n' +
    ' * dummy implementation that is replaced by a real one once the test harness\n' +
    ' * is fully loaded.',
  ' * Handles a direct call from the integration test harness. We execute\n' +
    ' * swaTestMessageListener call directly from the FileManagerBrowserTest.\n' +
    ' * This method avoids enabling external callers to Files SWA. We forward\n' +
    ' * the response back to the caller, as a serialized JSON string.'
]
test_util_base.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Namespace for test related things.',
  ' * Namespace for test utility functions.\n' +
    ' *\n' +
    ' * Public functions in the test.util.sync and the test.util.async namespaces are\n' +
    ' * published to test cases and can be called by using callRemoteTestUtil. The\n' +
    ' * arguments are serialized as JSON internally. If application ID is passed to\n' +
    ' * callRemoteTestUtil, the content window of the application is added as the\n' +
    ' * first argument. The functions in the test.util.async namespace are passed the\n' +
    ' * callback function as the last argument.',
  ' * Namespace for synchronous utility functions.',
  ' * Namespace for asynchronous utility functions.'
]
volume_info.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Represents each volume, such as "drive", "download directory", each "USB\n' +
    ' * flush storage", or "mounted zip archive" etc.'
]
volume_info_list.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview The container of the VolumeInfo for each mounted volume.',
  ' * The container of the VolumeInfo for each mounted volume.'
]
volume_manager.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Time in milliseconds that we wait a response for general volume operations\n' +
    ' * such as mount, unmount, and requestFileSystem. If no response on\n' +
    ' * mount/unmount received the request supposed failed.',
  ' * A list of RequestType',
  ' * Logs a warning message if the given error is not in\n' +
    ' * VolumeError.\n' +
    ' *\n' +
    ' * @param error Status string usually received from APIs.',
  ' * Builds the VolumeInfo data from chrome.fileManagerPrivate.VolumeMetadata.\n' +
    ' * @param volumeMetadata Metadata instance for the volume.\n' +
    ' * @return Promise settled with the VolumeInfo instance.',
  ' * An event triggered when a user tries to mount the volume which is\n' +
    ' * already mounted. The event object must have a volumeId property.',
  ' * An event triggered when an archive file is newly mounted, or when opened a\n' +
    ' * one already mounted.',
  " * Event object which is dispatched with 'externally-unmounted' event.",
  ' * VolumeManager is responsible for tracking list of mounted volumes.'
]
volume_manager_factory.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
volume_manager_unittest.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Returns a mock profile.',
  " * Tests that an unresponsive volume doesn't lock the whole Volume Manager\n" +
    ' * initialization.',
  " * Tests that failing to get the root doesn't add a volume to the\n" +
    ' * `volumeInfoList`.',
  " * Tests that an error initializing one volume doesn't stop other volumes to be\n" +
    ' * initialized. crbug.com/1041340'
]
api.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Helpers for APIs used within Files app.',
  ' * Opens a new window for Files SWA.',
  ' * Wrap the chrome.fileManagerPrivate.getSizeStats function in an async/await\n' +
    ' * compatible style.',
  ' * Wrap the chrome.fileManagerPrivate.getDriveQuotaMetadata function in an\n' +
    ' * async/await compatible style.',
  ' * Retrieves the current holding space state, for example the list of items the\n' +
    ' * holding space currently contains.',
  ' * Wrap the chrome.fileManagerPrivate.getDisallowedTransfers function in an\n' +
    ' * async/await compatible style.',
  ' * Wrap the chrome.fileManagerPrivate.getDlpMetadata function in an async/await\n' +
    ' * compatible style.',
  ' * Retrieves the list of components to which the transfer of an Entry is blocked\n' +
    ' * by Data Leak Prevention (DLP) policy.',
  ' * Retrieves Data Leak Prevention (DLP) restriction details.',
  ' * Retrieves the caller that created the dialog (Save As/File Picker).',
  ' * Lists Guest OSs which support having their files mounted.',
  ' * Lists Guest OSs which support having their files mounted.',
  ' * FileSystemEntry helpers',
  ' * Starts an IOTask of `type` and returns a taskId that can be used to cancel\n' +
    ' * or identify the ongoing IO operation.',
  ' * Parses .trashinfo files to retrieve the restore path and deletion date.',
  ' * Returns unique parent directories of provided entries. Note: this assumes\n' +
    ' * all provided entries are from the same filesystem.',
  ' * Gets the current bulk pin progress status.',
  ' * Starts calculating the required space to pin all the users items on their My\n' +
    ' * drive.',
  ' * Wrap the chrome.fileManagerPrivate.getDriveConnectionStatus function in an\n' +
    ' * async/await compatible style.'
]
array_data_model.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This is a data model representin',
  ' * Default compare function.',
  ' * A data model that wraps a simple array and supports sorting by storing\n' +
    ' * initial indexes of elements for each position in sorted array.'
]
array_data_model_unittest.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
async_util.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Creates a class for executing several asynchronous closures in a fifo queue.\n' +
    ' * Added tasks will be started in order they were added. Tasks are run\n' +
    ' * concurrently. At most, |limit| jobs will be run at the same time.',
  ' * Creates a class for executing several asynchronous closures in a fifo queue.\n' +
    ' * Added tasks will be executed sequentially in order they were added.',
  ' A task which is executed by Group.',
  ' * Creates a class for executing several asynchronous closures in a group in a\n' +
    ' * dependency order.',
  ' * Aggregates consecutive calls and executes the closure only once instead of\n' +
    ' * several times. The first call is always called immediately, and the next\n' +
    ' * consecutive ones are aggregated and the closure is called only once once\n' +
    ' * |delay| amount of time passes after the last call to run().',
  ' * Samples calls so that they are not called too frequently. The first call is\n' +
    ' * always called immediately, and the following calls may be skipped or delayed\n' +
    ' * to keep each interval no less than `minInterval_`.'
]
async_util_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Checks that the order of the tasks is preserved.',
  " Checks that tasks with errors do not interrupt the queue's operations.",
  ' * Checks the order of start and end of two mutually calling tasks. We expect\n' +
    ' * that task that is run first finishes before the task ran after it.',
  " * Checks that calling `run` inside a RateRimiter's clojure does not lead to\n" +
    ' * recursive calls.'
]
cr_ui.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Setter used by the deprecated cr.ui elements.\n' +
    ' * It sets the value of type T in the private `${name}_`.\n' +
    ' *\n' +
    ' * It also dispatches the event `${name}Changed` when the value actually\n' +
    ' * changes.',
  ' Converts camelCase to DOM style casing: myName => my-name.',
  ' * Setter used by the deprecated cr.ui elements.\n' +
    ' * It sets or removes the DOM attribute, the attribute name is converted\n' +
    ' * from the camelCase to DOM style case myName => my-name.\n' +
    ' *\n' +
    ' * It also dispatches the event `${name}Changed` when the value actually\n' +
    ' * changes.',
  ' * Setter used by the deprecated cr.ui elements.\n' +
    ' * It sets the value of type T in the DOM `${name}`. NOTE: Name is converted\n' +
    ' * from the camelCase to DOM style case myName => my-name.\n' +
    ' *\n' +
    ' * It also dispatches the event `${name}Changed` when the value actually\n' +
    ' * changes.',
  ' * Used by the deprecated cr.ui elements. It receives a regular DOM element\n' +
    ' * (like a <div>) and injects the cr.ui element implementation methods in that\n' +
    ' * instance.\n' +
    ' *\n' +
    " * It then calls the cr.ui element's `decorate()` which is the initializer for\n" +
    ' * its state, since it cannot run the constructor().'
]
dialog_type.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dom_utils.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Only import types from the XfTree/XfTreeItem to\n' +
    ' prevent circular imports.',
  ' * Function to be used as event listener for `mouseenter`, it sets the `title`\n' +
    " * attribute in the event's element target, when the text content is clipped due\n" +
    ' * to CSS overflow, as in showing `...`.\n' +
    ' *\n' +
    ' * NOTE: This should be used with `mouseenter` because this event triggers less\n' +
    " * frequent than `mouseover` and `mouseenter` doesn't bubble from the children\n" +
    ' * element to the listener (see mouseenter on MDN for more details).',
  " * Sets the `title` attribute in the event's element target, when the text\n" +
    ' * content is clipped due to CSS overflow, as in showing `...`.',
  ' * Whether the text content is clipped due to CSS overflow, as in showing `...`.',
  ' Escapes the symbols: < > &',
  " * Returns a string '[Ctrl-][Alt-][Shift-][Meta-]' depending on the event\n" +
    ' * modifiers. Convenient for writing out conditions in keyboard handlers.\n' +
    ' *\n' +
    ' * @param event The keyboard event.',
  ' * A shortcut function to create a child element with given tag and class.\n' +
    ' *\n' +
    ' * @param parent Parent element.\n' +
    ' * @param className Class name.\n' +
    ' * @param {string=} tag tag, DIV is omitted.\n' +
    ' * @return Newly created element.',
  " * Query an element that's known to exist by a selector. We use this instead of\n" +
    ' * just calling querySelector and not checking the result because this lets us\n' +
    ' * satisfy the JSCompiler type system.\n' +
    ' * @param selectors CSS selectors to query the element.\n' +
    ' * @param {(!Document|!DocumentFragment|!Element)=} context An optional\n' +
    ' *     context object for querySelector.',
  ' * Obtains the element that should exist, decorates it with given type, and\n' +
    ' * returns it.\n' +
    ' * @param query Query for the element.\n' +
    ' * @param type Type used to decorate.',
  ' * Returns an array of elements, based on the `selectors`. Exactly one of these\n' +
    ' *  elements is required to exist. The rest will be null.\n' +
    ' * @param selectors A list of CSS selectors to query for elements.\n' +
    ' * @param {(!Document|!DocumentFragment|!Element)=} context An optional\n' +
    ' *     context object for querySelector.\n' +
    ' * @returns A list of query results, with the same indices as the provided\n' +
    ' *     `selectors`. One element will exist, and the rest will be null padding.',
  ' * Creates an instance of UserDomError subtype of DOMError because DOMError is\n' +
    " * deprecated and its Closure extern is wrong, doesn't have the constructor\n" +
    ' * with 2 arguments. This DOMError looks like a FileError except that it does\n' +
    ' * not have the deprecated FileError.code member.\n' +
    ' *\n' +
    ' * @param  name Error name for the file error.\n' +
    ' * @param {string=} message optional message.',
  ' * Creates a DOMError-like object to be used in place of returning file errors.',
  ' * A util function to get the correct "top" value when calling\n' +
    " * <cr-action-menu>'s `showAt` method.\n" +
    ' *\n' +
    ' * @param triggerElement The he element which triggers the menu dropdown.\n' +
    ' * @param marginTop The gap between the trigger element and the menu dialog.'
]
entry_utils.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Type guard used to identify if a generic Entry is actually a DirectoryEntry.',
  ' * Type guard used to identify if a generic Entry is actually a FileEntry.',
  ' * Returns the native entry (aka FileEntry) from the Store. It returns `null`\n' +
    " * for entries that aren't native.",
  ' * Type guard used to identify if a given entry is actually a\n' +
    ' * VolumeEntry.',
  ' * Check if the entry is MyFiles or not.\n' +
    ' * Note: if the return value is true, the input entry is guaranteed to be\n' +
    ' * EntryList or VolumeEntry type.',
  ' * Check if the entry is the drive root entry list ("Google Drive" wrapper).\n' +
    ' * Note: if the return value is true, the input entry is guaranteed to be\n' +
    ' * EntryList type.',
  ` * Given an entry, check if it's a grand root ("Shared drives" and  "Computers")\n` +
    ' * inside Drive. Note: if the return value is true, the input entry is\n' +
    ' * guaranteed to be DirectoryEntry type.',
  ` * Given an entry, check if it's a fake entry ("Shared with me" and "Offline")\n` +
    ' * inside Drive.',
  " * Returns true if fileData's entry is inside any part of Drive 'My Drive'.",
  " * Returns true if fileData's entry is inside any part of Drive 'Computers'.",
  " * Returns true if fileData's entry is inside any part of Drive.",
  ' * Returns whether or not the root type is one of Google Drive root types.',
  ' Sort the entries based on the filter and the names.',
  ' * Take an entry and extract the rootType.',
  ' * Obtains whether an entry is fake or not.',
  ' * Obtains whether an entry is the root directory of a Shared Drive.',
  ' * Obtains whether an entry is the grand root directory of Shared Drives.',
  ' * Obtains whether an entry is descendant of the Shared Drives directory.',
  ' * Extracts Shared Drive name from entry path.\n' +
    ' * @return The name of Shared Drive. Empty string if |entry| is not\n' +
    ' *     under Shared Drives.',
  ' * Returns true if the given root type is for a container of recent files.',
  ' * Returns true if the given entry is the root folder of recent files.',
  ' * Whether the `fileData` the is RECENT root.\n' +
    ' * NOTE: Drive shared with me and offline are marked as RECENT for its "type"\n' +
    ' * field, so we need to use "rootType" instead.',
  ' * Obtains whether an entry is the root directory of a Computer.',
  ' * Obtains whether an entry is descendant of the My Computers directory.',
  ' * Returns true if the given root type is Trash.',
  ' * Returns true if the given entry is the root folder of Trash.',
  ' * Returns true if the given entry is a descendent of Trash.',
  ' * Returns true if the given entry is a placeholder for OneDrive.',
  ' * Compares two entries.\n' +
    ' * @return True if the both entry represents a same file or\n' +
    ' *     directory. Returns true if both entries are null.',
  ' * Compares two entry arrays.\n' +
    ' * @return True if the both arrays contain same files or directories\n' +
    ' *     in the same order. Returns true if both arrays are null.',
  ' * Compares two file systems.\n' +
    ' * @return True if the both file systems are equal. Also, returns true\n' +
    ' *     if both file systems are null.',
  ' * Checks if given two entries are in the same directory.\n' +
    ' * @return True if given entries are in the same directory.',
  ' * Checks if the child entry is a descendant of another entry. If the entries\n' +
    ' * point to the same file or directory, then returns false.\n' +
    ' *\n' +
    ' * @param ancestorEntry The ancestor\n' +
    ' *     directory entry. Can be a fake.\n' +
    ' * @param childEntry The child entry. Can be a fake.\n' +
    ' * @return True if the child entry is contained in the ancestor path.',
  ' * Compare by name. The 2 entries must be in same directory.',
  ' * Compare by label (i18n name). The 2 entries must be in same directory.',
  ' * Compare by path.',
  ' * @param bottomEntries entries that should be grouped in the bottom, used for\n' +
    ' *     sorting Linux and Play files entries after\n' +
    ' * other folders in MyFiles.',
  ' * Converts array of entries to an array of corresponding URLs.',
  ' * Converts array of URLs to an array of corresponding Entries.\n' +
    ' *\n' +
    ' * @param callback Completion callback with array of success Entries and failure\n' +
    ' *     URLs.',
  ' * Converts a url into an {!Entry}, if possible.',
  ' * Returns true if the given |entry| matches any of the special entries:\n' +
    ' *\n' +
    ' *  - "My Files"/{Downloads,PvmDefault,Camera} directories, or\n' +
    ' *  - "Play Files"/{<any-directory>,DCIM/Camera} directories, or\n' +
    ' *  - "Linux Files" root "/" directory\n' +
    ' *  - "Guest OS" root "/" directory\n' +
    ' *\n' +
    ' * which cannot be modified such as deleted/cut or renamed.',
  ' * Retrieves all entries inside the given |rootEntry|.\n' +
    ' * @param entriesCallback Called when some chunk of entries are read. This can\n' +
    ' *     be called a couple of times until the completion.\n' +
    ' * @param successCallback Called when the read is completed.\n' +
    ' * @param errorCallback Called when an error occurs.\n' +
    ' * @param shouldStop Callback to check if the read process should stop or not.\n' +
    ' *     When this callback is called and it returns true, the remaining recursive\n' +
    ' *     reads will be aborted.\n' +
    ' * @param maxDepth Max depth to delve directories recursively. If 0 is\n' +
    ' *     specified, only the rootEntry will be read. If -1 is specified or\n' +
    ' *     maxDepth is unspecified, the depth of recursion is unlimited.',
  ' * Returns true if entry is FileSystemEntry or FileSystemDirectoryEntry, it\n' +
    " * returns false if it's FakeEntry or any one of the FilesAppEntry types.",
  ' * For FilesAppEntry types that wraps a native entry, returns the native entry\n' +
    ' * to be able to send to fileManagerPrivate API.',
  ' * Used for logs and debugging. It tries to tell what type is the entry, its\n' +
    ' * path and URL.',
  ' * Returns true if all entries belong to the same volume. If there are no\n' +
    ' * entries it also returns false.',
  ' * Returns the ODFS root as an Entry. Request the actions of this\n' +
    ' * Entry to get ODFS metadata.',
  ' * Return true if the volume with |volumeInfo| is an\n' +
    ' * interactive volume.',
  ' * Returns a boolean indicating whether the volume is a GuestOs volume. And\n' +
    ' * ANDROID_FILES type volume can also be a GuestOs volume if ARCVM is enabled.',
  ` * Returns true if fileData's entry supports the "shared" feature, as in,\n` +
    ` * displays a shared icon. It's only supported inside "My Drive" or\n` +
    ' * "Computers", even Shared Drive does not support it, the "My Drive" and\n' +
    ` * "Computers" itself don't support it either, only their children.\n` +
    ' *\n' +
    " * Note: if the return value is true, fileData's entry is guaranteed to be\n" +
    ' * native Entry type.',
  ' * Extracts the `entry` from the supplied `treeItem` depending on if the new\n' +
    ' * directory tree is enabled or not.',
  ' * Check if the entry support `getUiChildren()` method.',
  ' * A generator version of `entry.readEntries()`.\n' +
    ' *\n' +
    ' * Example usage:\n' +
    ' * ```\n' +
    ' * const childEntries = []\n' +
    ' * for await (const partialEntries of readEntries(...)) {\n' +
    '     childEntries.push(...partialEntries);\n' +
    '  }\n' +
    ' * ```',
  ' * Check if the given entry is scannable or not, e.g. can we call\n' +
    ' * `readEntries()` on it.\n' +
    ' * If the return value is true, its type is guaranteed to be a Directory like\n' +
    ' * entry.',
  ' * Check if the given fileData can display sub-directories.'
]
entry_utils_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Test private methods: isEntryInsideDrive_() and isEntryInsideMyDrive_(),\n' +
    ' * which should return true when inside My Drive and any of its sub-directories;\n' +
    ' * Should return false for everything else, including within Team Drive.',
  " * Tests that it doesn't fail with different types of entries and inputs."
]
error_counter.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * This variable is checked in several integration and unit tests, to make sure\n' +
    " * that new code changes don't cause unhandled exceptions.",
  ' * Creates a list of arguments extended with stack information.\n' +
    ' * @param prefix The prefix indicating type of error situation.\n' +
    ' * @param args The remaining, if any, arguments of the call.\n' +
    ' * @return A string representing args and stack traces.',
  ' * Count uncaught exceptions.',
  ' * Count uncaught errors in promises.',
  ' * Overrides console.error() to count errors.\n' +
    ' *\n' +
    ' * @param args Message and/or objects to be logged.',
  ' * Overrides console.assert() to count errors.\n' +
    ' *\n' +
    ' * @param condition If false, log a message and stack trace.\n' +
    ' * @param args Message and/or objects to be logged when condition is\n' +
    ' * false.'
]
file_tasks.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The SWA actionId is prefixed with chrome://file-manager/?ACTION_ID, just the\n' +
    ' * sub-string compatible with the extension/legacy e.g.: "view-pdf".',
  " Returns whether the provided appId corresponds Files app's.",
  " The task descriptor of 'Install Linux package'.",
  ' * Gets the default task from tasks. In case there is no such task (i.e. all\n' +
    ' * tasks are generic file handlers), then return null.',
  ' * Annotates tasks returned from the API.\n' +
    ' * @param tasks Input tasks from the API.\n' +
    ' * @param entries List of entries for the tasks.'
]
file_type.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' All supported file types are now defined in\n' +
    ' ui/file_manager/base/gn/file_types.json5.',
  ' A special type for directory.',
  ' * Returns the file path extension for a given file.\n' +
    ' *\n' +
    ' * @param entry Reference to the file.\n' +
    " * @return The extension including a leading '.', or empty string if not found.",
  ' * Gets the file type object for a given entry. If mime type is provided, then\n' +
    ' * uses it with higher priority than the extension.\n' +
    ' *\n' +
    ' * @param entry Reference to the entry.\n' +
    ' * @param mimeType Optional mime type for the entry.\n' +
    ' * @return The matching descriptor or a placeholder.',
  ' * Gets the media type for a given file.\n' +
    ' *\n' +
    ' * @param entry Reference to the file.\n' +
    ' * @param mimeType Optional mime type for the file.\n' +
    " * @return The value of 'type' property from one of the elements in the knows\n" +
    ' *     file types (file_types.json5) or undefined.',
  ' * @param entry Reference to the file.\n' +
    ' * @param mimeType Optional mime type for the file.\n' +
    ' * @return True if audio file.',
  ' * Returns whether the |entry| is image file that can be opened in browser.\n' +
    ' * Note that it returns false for RAW images.\n' +
    ' * @param entry Reference to the file.\n' +
    ' * @param mimeType Optional mime type for the file.\n' +
    ' * @return True if image file.',
  ' * @param entry Reference to the file.\n' +
    ' * @param mimeType Optional mime type for the file.\n' +
    ' * @return True if video file.',
  ' * @param entry Reference to the file.\n' +
    ' * @param mimeType Optional mime type for the file.\n' +
    ' * @return True if document file.',
  ' * @param entry Reference to the file.\n' +
    ' * @param mimeType Optional mime type for the file.\n' +
    ' * @return True if raw file.',
  ' * @param entry Reference to the file\n' +
    ' * @param mimeType Optional mime type for this file.\n' +
    ' * @return Whether or not this is a PDF file.',
  " * Files with more pixels won't have preview.\n" +
    ' * @param entry Reference to the file.\n' +
    ' * @param mimeType Optional mime type for the file.\n' +
    ' * @return True if type is in specified set.',
  ' * @param entry Reference to the file.\n' +
    ' * @param mimeType Optional mime type for the file.\n' +
    ' * @return Returns true if the file is hosted.',
  ' * @param entry Reference to the file.\n' +
    ' * @param mimeType Optional mime type for the file.\n' +
    ' * @return Returns true if the file is encrypted with CSE.',
  ' * @param entry Reference to the file.\n' +
    ' * @param mimeType Optional mime type for the file.\n' +
    ' * @param rootType The root type of the entry.\n' +
    ' * @return Returns string that represents the file icon. It refers to a file\n' +
    " *     'images/filetype_' + icon + '.png'.",
  ' * Returns a string to be used as an attribute value to customize the entry\n' +
    ' * icon.\n' +
    ' *\n' +
    ' * @param rootType The root type of the entry.'
]
file_type_unittest.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests that Downloads icon is customized within Downloads root, but not in\n' +
    ' * others.'
]
file_types_base.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * A special placeholder for unknown types with no extension.',
  ' * Returns the final extension of a file name, check for the last two dots\n' +
    ' * to distinguish extensions like ".tar.gz" and ".gz".',
  ' * Gets the file type object for a given file name (base name). Use getType()\n' +
    " * if possible, since this method can't recognize directories."
]
file_types_base_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
files_app_entry_types.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Entry-like types for Files app UI.\n' +
    ' * This file defines the interface |FilesAppEntry| and some specialized\n' +
    ' * implementations of it.\n' +
    ' *\n' +
    ' * These entries are intended to behave like the browser native FileSystemEntry\n' +
    ' * (aka Entry) and FileSystemDirectoryEntry (aka DirectoryEntry), providing an\n' +
    ' * unified API for Files app UI components. UI components should be able to\n' +
    ' * display any implementation of FilesAppEntry.\n' +
    ' *\n' +
    ' * The main intention of those types is to be able to provide alternative\n' +
    ' * implementations and from other sources for "entries", as well as be able to\n' +
    ' * extend the native "entry" types.\n' +
    ' *\n' +
    ' * Native Entry:\n' +
    ' * https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry\n' +
    ' * Native DirectoryEntry:\n' +
    ' * https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader',
  ' Generalized entry and directory entry definitions.',
  ' * FilesAppEntry represents a single Entry (file, folder or root) in the Files\n' +
    ' * app. Previously, we used the Entry type directly, but this limits the code to\n' +
    " * only work with native Entry type which can't be instantiated in JS.\n" +
    ' * For now, Entry and FilesAppEntry should be used interchangeably.\n' +
    ' * See also FilesAppDirEntry for a folder-like interface.\n' +
    ' *\n' +
    ' * TODO(lucmult): Replace uses of Entry with FilesAppEntry implementations.',
  ' * Interface with minimal API shared among different types of FilesAppDirEntry\n' +
    ' * and native DirectoryEntry. UI components should be able to display any\n' +
    ' * implementation of FilesAppEntry.\n' +
    ' *\n' +
    ' * FilesAppDirEntry represents a DirectoryEntry-like (folder or root) in the\n' +
    " * Files app. It's a specialization of FilesAppEntry extending the behavior for\n" +
    ' * folder, which is basically the method createReader.\n' +
    ' * As in FilesAppEntry, FilesAppDirEntry should be interchangeable with Entry\n' +
    ' * and DirectoryEntry.',
  " * FakeEntry is used for entries that used only for UI, that weren't generated\n" +
    ' * by FileSystem API, like Drive, Downloads or Provided.',
  ' * A reader compatible with DirectoryEntry.createReader (from Web Standards)\n' +
    ' * that reads a static list of entries, provided at construction time.\n' +
    ' * https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader\n' +
    ' * It can be used by DirectoryEntry-like such as EntryList to return its\n' +
    ' * entries.',
  ' * A reader compatible with DirectoryEntry.createReader (from Web Standards),\n' +
    ' * It chains entries from one reader to another, creating a combined set of\n' +
    ' * entries from all readers.',
  ' * EntryList, a DirectoryEntry-like object that contains entries. Initially used\n' +
    ' * to implement "My Files" containing VolumeEntry for "Downloads", "Linux\n' +
    ' * Files" and "Play Files".',
  ' * A DirectoryEntry-like which represents a Volume, based on VolumeInfo.\n' +
    ' *\n' +
    ' * It uses composition to behave like a DirectoryEntry and proxies some calls\n' +
    ' * to its VolumeInfo instance.\n' +
    ' *\n' +
    " * It's used to be able to add a volume as child of |EntryList| and make volume\n" +
    ' * displayable on file list.',
  " * FakeEntry is used for entries that used only for UI, that weren't generated\n" +
    ' * by FileSystem API, like Drive, Downloads or Provided.',
  ' * GuestOsPlaceholder is used for placeholder entries in the UI, representing\n' +
    " * Guest OSs (e.g. Crostini) that could be mounted but aren't yet.",
  ' * OneDrivePlaceholder is used to represent OneDrive in the UI, before being\n' +
    ' * mounted and set up.'
]
files_app_entry_types_unittest.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Creates a new volume with a single, mock VolumeEntry.',
  ' Tests constructor and default public attributes.',
  ' Tests method EntryList.getParent.',
  ' Tests method EntryList.addEntry.',
  " * Tests EntryList's methods addEntry, findIndexByVolumeInfo,\n" +
    ' * removeByVolumeType, removeAllByRootType, removeChildEntry.',
  " * Tests VolumeEntry's methods findIndexByVolumeInfo, removeByVolumeType,\n" +
    ' * removeAllByRootType, removeChildEntry.',
  ' Tests method EntryList.getMetadata.',
  ' Tests StaticReader.readEntries.',
  ' Tests CombinedReader.readEntries.',
  ' * Returns an object that can be used as displayRoot on a FakeVolumeInfo.\n' +
    ' * VolumeEntry delegates many attributes and methods to displayRoot.',
  ' * Tests VolumeEntry constructor and default public attributes/getter/methods.',
  " Tests VolumeEntry createReader when root entry isn't resolved yet.",
  ' Tests VolumeEntry getFile and getDirectory methods.',
  " Tests VolumeEntry which initially doesn't have displayRoot.",
  ' Tests VolumeEntry.getParent',
  ' Tests VolumeEntry.getMetadata',
  ' * Test EntryList.addEntry sets prefix on VolumeEntry.',
  ' Test FakeEntry, which is only static data.'
]
files_app_state.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
files_event_target.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * `FilesEventTarget` is a strongly typed version of EventTarget, it accepts a\n' +
    ' * generic `EventMap` to restrict what kind of custom events it can add/remove.\n' +
    ' * For example:\n' +
    ' *\n' +
    ' * ```\n' +
    ' * type MyCustomEvent = CustomEvent<{ data: xxx }>\n' +
    ' *\n' +
    ' * interface MyEventMap extend CustomEventMap {\n' +
    " *   'my-event': MyCustomEvent;\n" +
    ' * }\n' +
    ' *\n' +
    ' * class MyClass extends FilesEventTarget<MyEventMap> {}\n' +
    ' * ```\n' +
    ' *\n' +
    " * We rely on TS's declaration merge to support both typing and implementation.\n" +
    ' * The above interface will provide the typing and the below class (same name)\n' +
    ' * will provide the actual implementation (no implementation override, we just\n' +
    ' * use whatever is provided by the native EventTarget).\n' +
    ' *',
  " TS is complaining `EventMap` is not used and we can't use `_EventMap` here\n" +
    ' because we need to keep the class and interface exactly the same to do\n' +
    ' declaration merge, hence adding the eslint-disable below.\n' +
    ' eslint-disable-next-line @typescript-eslint/no-unused-vars'
]
filtered_volume_manager.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Implementation of VolumeInfoList for FilteredVolumeManager.\n' +
    ' * In foreground/ we want to enforce this list to be filtered, so we forbid\n' +
    ' * adding/removing/splicing of the list.\n' +
    ' * The inner list ownership is shared between FilteredVolumeInfoList and\n' +
    ' * FilteredVolumeManager to enforce these constraints.',
  " * Volume types that match the Android 'media-store-files-only' volume filter,\n" +
    ' * viz., the volume content is indexed by the Android MediaStore.',
  ' * Thin wrapper for VolumeManager. This should be an interface proxy to talk\n' +
    ' * to VolumeManager. This class also filters some "disallowed" volumes;\n' +
    ' * for example, Drive volumes are dropped if Drive is disabled, and read-only\n' +
    ' * volumes are dropped in save-as dialogs.'
]
filtered_volume_manager_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Create a new MockVolumeManager for each test fixture.',
  ' * Tests FilteredVolumeManager default volume filter.',
  " * Tests FilteredVolumeManager 'fusebox-only' volume filter.",
  " * Tests FilteredVolumeManager 'media-store-files-only' volume filter.",
  ' * Tests the disabled volume related functions.'
]
flags.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Whether the Files app integration with DLP (Data Loss Prevention) is enabled.',
  ' * Returns true if FuseBoxDebug flag is enabled.',
  ' * Returns true if GuestOsFiles flag is enabled.',
  ' * Returns true if the cros-components flag is enabled.',
  ' * Returns true if DriveFsMirroring flag is enabled.',
  ' * Returns true if FilesSinglePartitionFormat flag is enabled.',
  ' * Returns whether the DriveFsBulkPinning feature flag is enabled.',
  ' * Returns true if FilesMaterializedViews flag is enabled.',
  ' * Returns true if SkyVaultV2 flag is enabled.'
]
glitch.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Possible error metrics. We allow for errors intercepted by an error counter.\n' +
    ' * These are unhandled errors and promise rejections.\n' +
    ' *\n' +
    ' * These values are persisted to logs. Entries should not be renumbered and\n' +
    ' * numeric values should never be reused.\n' +
    ' *\n' +
    ' * Must be kept in synch with FileManagerGlitch defined in\n' +
    ' * //tools/metrics/histograms/enums.xml',
  ' * @param glitchType What type of glitch was it.'
]
icon_util.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file contains utils for working with icons.',
  ' Return icon name for the VM type.'
]
lru_cache.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * A linked-list node which holds data for cache entry such as key, value, size.',
  ' * Container of the list of cache nodes.',
  ' * Cache management class implementing LRU algorithm.'
]
lru_cache_unittest.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
metrics.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Utility methods for accessing chrome.metricsPrivate API.\n' +
    ' *\n' +
    ' * To be included as a first script in main.html',
  ' * A map from interval name to interval start timestamp.',
  ' * Start the named time interval.\n' +
    ' * Should be followed by a call to recordInterval with the same name.\n' +
    ' *\n' +
    ' * @param name Unique interval name.',
  ' Convert a short metric name to the full format.',
  ' Wrapper method for calling chrome.fileManagerPrivate safely.',
  ' * Records a value than can range from 1 to 10,000.\n' +
    ' * @param name Short metric name.\n' +
    ' * @param value Value to be recorded.',
  ' * Records a value than can range from 1 to 100.\n' +
    ' * @param name Short metric name.\n' +
    ' * @param value Value to be recorded.',
  ' * Records an elapsed time of no more than 10 seconds.\n' +
    ' * @param name Short metric name.\n' +
    ' * @param time Time to be recorded in milliseconds.',
  ' * Records a boolean value to the given metric.\n' +
    ' * @param name Short metric name.\n' +
    ' * @param value The value to be recorded.',
  ' * Records an action performed by the user.\n' +
    ' * @param {string} name Short metric name.',
  ' * Records an elapsed time of no more than 10 seconds.\n' +
    ' * @param value Numeric value to be recorded in units that match the histogram\n' +
    ' *    definition (in histograms.xml).',
  ' * Complete the time interval recording.\n' +
    ' *\n' +
    ' * Should be preceded by a call to startInterval with the same name.\n' +
    ' *\n' +
    ' * @param {string} name Unique interval name.',
  ' * Complete the time interval recording into appropriate bucket.\n' +
    ' *\n' +
    ' * Should be preceded by a call to startInterval with the same |name|.\n' +
    ' *\n' +
    ' * @param name Unique interval name.\n' +
    ' * @param numFiles The number of files in this current directory.\n' +
    ' * @param buckets Array of numbers that correspond to a bucket value, this will\n' +
    ' *     be suffixed to |name| when recorded.\n' +
    ' * @param tolerance Allowed tolerance for |value| to coalesce into a\n' +
    ' *    bucket.',
  ' * Record an enum value.\n' +
    ' *\n' +
    ' * @param name Metric name.\n' +
    ' * @param value Enum value.\n' +
    ' * @param validValues Array of valid values or a boundary number\n' +
    ' *     (one-past-the-end) value.'
]
mock_chrome.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * A wrapper of `typeof chrome` because we can't use `typeof chrome` in\n" +
    ' * exported function parameters.',
  ' * Installs a mock object to replace window.chrome in a unit test.',
  ' * Mocks out the chrome.fileManagerPrivate.onDirectoryChanged and getSizeStats\n' +
    ' * methods to be useful in unit tests.',
  ' * Mock for chrome.metricsPrivate.\n' +
    ' *\n' +
    ' * It records the method calls made to chrome.metricsPrivate.\n' +
    ' *\n' +
    ' * Typical usage:\n' +
    ' * const mockMetrics = new MockMetrics();\n' +
    ' *\n' +
    ' * // NOTE: installMockChrome() mocks metricsPrivate by default, which useful\n' +
    " * when you don't want to check the calls to metrics.\n" +
    ' * installMockChrome({\n' +
    ' *   metricsPrivate: mockMetrics,\n' +
    ' * });\n' +
    ' *\n' +
    ' * // Run the code under test:\n' +
    ' * Then check the calls made to metrics private using either:\n' +
    ' * mockMetrics.apiCalls\n' +
    ' * mockMetrics.metricCalls'
]
mock_entry.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " Joins paths so that the two paths are connected by only 1 '/'.",
  ' Mock class for DOMFileSystem.',
  ' Base class of mock entries.',
  ' Mock class for FileEntry.',
  ' Mock class for FileWriter.',
  ' Mock class for DirectoryEntry.',
  ' Mock class for DirectoryReader.'
]
progress_center_common.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' State of progress items.',
  ' * Policy error type. Only applicable if DLP or Enterprise Connectors policies\n' +
    ' * apply.',
  ' Type of progress items.',
  ' * Visual signals can have an additional button that, when clicked, performs\n' +
    ' * some arbitrary action. The `text` defines the button text to show and the\n' +
    ' * `callback` defines the arbitrary action.',
  ' Item of the progress center.'
]
recent_date_bucket.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Recent date bucket definition and util functions.',
  ' * Given a date and now date, return the date bucket it belongs to.',
  " * Computes the timestamp based on options. If the options ask for today's\n" +
    ' * results, it uses the time in ms from midnight. For yesterday, it goes back\n' +
    ' * by one day from midnight. For week, it goes back by 6 days from midnight.\n' +
    ' * For a month, it goes back by 30 days since midnight, regardless of how\n' +
    ' * many days are in the current month. For a year, it goes back by 365 days\n' +
    ' * since midnight, regardless if the current year is a leap year or not.\n' +
    ' *\n' +
    ' * @return The earliest timestamp for the given recency option.'
]
recent_date_bucket_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
script_loader.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Script loader allows loading scripts at the desired time.',
  ' * Used to load scripts at a runtime. Typical use:\n' +
    ' *\n' +
    " * await new ScriptLoader('its_time.js').load();\n" +
    ' *\n' +
    ' * Optional parameters may be also specified:\n' +
    ' *\n' +
    " * await new ScriptLoader('its_time.js', {type: 'module'}).load();"
]
shared_types.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview The types and enums in this file are used in integration tests.\n' +
    " * For this reason we don't want additional imports in here to avoid cascading\n" +
    ' * importing files.',
  ' Paths that can be handled by the dialog opener in native code.',
  ' The type of each volume.',
  ' * List of dialog types.\n' +
    ' *\n' +
    ' * Keep this in sync with FileManagerDialog::GetDialogTypeAsString, except\n' +
    ' * FULL_PAGE which is specific to this code.',
  ' * A list of extensions with a corresponding description for them, e.g.\n' +
    " * { extensions: ['htm', 'html'], description: 'HTML' }",
  ' * FilesAppState is used in 2 ways:\n' +
    ' *\n' +
    ' * 1. Persist in the localStorage the some state, like current directory,\n' +
    ' * sorting column options, etc.\n' +
    ' *\n' +
    ' * 2. To open a new window:\n' +
    ' * 2.1, Requests to open a new window set part of these options to configure the\n' +
    ' * how the new window should behave.\n' +
    ' * 2.2  When the Files app extension is restarted, the background page retrieves\n' +
    ' * the last state from localStorage for each opened window and re-spawn the\n' +
    ' * windows with their state.',
  ' * Stats collected about Metadata handling for tests.',
  ' * Object containing common key modifiers: shift, alt, and ctrl.'
]
storage.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Class used to emit window.localStorage change events to event listeners.\n' +
    ' * This class does 3 things:\n' +
    ' *\n' +
    ' * 1. Holds the onChanged event listeners for the current window.\n' +
    ' * 2. Sends broadcast event to all windows.\n' +
    ' * 3. Listens to broadcast events and propagates to the listeners in\n' +
    ' *    the current window.\n' +
    ' *\n' +
    " * NOTE: This doesn't support the `oldValue` because it's simpler and the\n" +
    " * current clients of `onChanged` don't need it.",
  ' * StorageAreaImpl using window.localStorage as the storage area.'
]
storage_unittest.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Used to store the test listener calls.',
  ' * Tests that changing the storage.local values is propagated to the listeners\n' +
    ' * of onChanged.',
  ' * Tests the value propagates in its original type, window.localStorage always\n' +
    ' * returns in string, we use JSON.parse() to convert back to original type.'
]
test_error_reporting.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Asserts that promise gets rejected.',
  ' Logs after the testFunction has run >3x (100ms each sleep).',
  ' * Waits until testFunction becomes true.\n' +
    ' * @param testFunction A function which is tested.\n' +
    ' * @return A promise which is fulfilled when the testFunction becomes true.'
]
translations.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Returns a translated string.\n' +
    ' *\n' +
    ' * Wrapper function to make dealing with translated strings more concise.\n' +
    ' * Equivalent to loadTimeData.getString(id).',
  ' * Returns a translated string with arguments replaced.\n' +
    ' *\n' +
    ' * Wrapper function to make dealing with translated strings more concise.\n' +
    ' * Equivalent to loadTimeData.getStringF(id, ...).',
  ' * Collator for sorting.',
  " * Returns normalized current locale, or default locale - 'en'.",
  ' * Convert a number of bytes into a human friendly format, using the correct\n' +
    ' * number separators.',
  ' * Returns the localized name of the root type.',
  ' * Returns the localized/i18n name of the entry.',
  ' * Get the locale based week start from the load time data.',
  ' * Converts seconds into a time remaining string.',
  ' * Mapping table of file error name to i18n localized error name.',
  ' * Returns i18n localized error name for file error |name|.',
  ' * Get the plural string with a specified count.\n' +
    ' * Note: the string id to get must be handled by `PluralStringHandler` in C++\n' +
    ' * side.\n' +
    ' *\n' +
    ' * @param id The translation string resource id.\n' +
    ' * @param count The number count to get the plural.',
  ' * Get the plural string with a specified count and placeholder values.\n' +
    ' * Note: the string id to get must be handled by `PluralStringHandler` in C++\n' +
    ' * side.\n' +
    ' *\n' +
    ' * ```\n' +
    ' * {NUM_FILE, plural,\n' +
    ' *    = 1 {1 file with <ph name="FILE_SIZE">$1<ex>44 MB</ex></ph> size.},\n' +
    ' *    other {# files with <ph name="FILE_SIZE">$1<ex>44 MB</ex></ph> size.}}\n' +
    ' *\n' +
    " * await getPluralStringWithPlaceHolders(id, 2, '44 MB')\n" +
    ' * => "2 files with 44 MB size"\n' +
    ' * ```\n' +
    ' *\n' +
    ' * @param id The translation string resource id.\n' +
    ' * @param count The number count to get the plural.\n' +
    ' * @param placeholders The placeholder value to replace.'
]
translations_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests the formatting of bytesToString.',
  ' * Tests the formatting of bytesToString with added precision digits.\n' +
    ' *\n' +
    ' * Useful information regarding the below assertions:\n' +
    ' * 647 bytes = 0.6318359375 KB.\n' +
    ' * bytesToString() internally uses Number.toLocaleString() which outputs at most\n' +
    ' * 3 precision digits in en-US.',
  ' * Tests the getFileErrorString helper for undefined, null, or empty\n' +
    ' * string error name input, which should output an i18n FILE_ERROR_GENERIC\n' +
    ' * error name.\n' +
    ' *\n' +
    " * Also tests pre-defined error names ('NotFoundError' and 'PathExistsError'\n" +
    ' * here), which should output their associated i18n error names.'
]
trash.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Trash implementation is based on\n' +
    ' * https://specifications.freedesktop.org/trash-spec/trashspec-1.0.html.\n' +
    ' *\n' +
    ' * When you move /dir/hello.txt to trash, you get:\n' +
    ' *  .Trash/files/hello.txt\n' +
    ' *  .Trash/info/hello.trashinfo\n' +
    ' *\n' +
    ' * .Trash/files/hello.txt is the original file.  .Trash/files.hello.trashinfo is\n' +
    ' * a text file which looks like:\n' +
    ' *  [Trash Info]\n' +
    ' *  Path=/dir/hello.txt\n' +
    ' *  DeletionDate=2020-11-02T07:35:38.964Z\n' +
    ' *\n' +
    ' * TrashEntry combines both files for display.',
  ' * Configuration for where Trash is stored in a volume.',
  ' * Volumes supported for Trash, and location of Trash dir. Items will be\n' +
    ' * searched in order.',
  ' * Interval (ms) until items in trash are permanently deleted. 30 days.',
  ' * Interval (ms) when .trashinfo files with no related files entry can be\n' +
    ' * considered stale and should be removed. 1 hour.',
  ' * Returns a list of strings that represent volumes that are enabled for Trash.\n' +
    " * Used to validate drag drop data without resolving the URLs to Entry's.",
  ' * Returns true if all supplied entries reside at a known trash location.',
  ' * Returns true if all supplied entries are on a volume where delete or empty\n' +
    ' * from trash will delete forever.',
  " * Returns true if all entries are on a trashable volume and they aren't already\n" +
    ' * trashed.',
  ' * Wrapper for /.Trash/files and /.Trash/info directories.',
  ' * Represents a file moved to trash. Combines the info from both .Trash/info and\n' +
    ' * ./Trash/files.',
  ' * Reads all entries in each of .Trash/info and .Trash/files and produces a\n' +
    ' * single stream of TrashEntry.',
  ' * Root Trash entry sits inside "My files". It shows the combined entries of\n' +
    ' * trashes defined in TrashConfig.',
  ' * Returns all the Trash directory readers.',
  ' * Promisifies retrieval of a files metadata.',
  ' The UMA to track the enum that is reported below.',
  ' * Keep the order of this in sync with RestoreFailedNoParentType in\n' +
    ' * tools/metrics/histograms/enums.xml.'
]
trusted_script_url_policy_util.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Trusted script URLs used by the Files app.',
  ' * Create a TrustedTypes script URL policy from a list of allowed sources, if\n' +
    ' * one does not already exist.\n' +
    ' *\n' +
    ' * We are storing this policy inside `window` as a global variable, because of\n' +
    " * GN's `optimize_webui` concatenating this file multiple times and causing\n" +
    ' * duplicate policy definitions when we use a local variable.',
  ' * Create a TrustedTypes script URL policy from a list of allowed sources, and\n' +
    ' * return a sanitized script URL using this policy.\n' +
    ' *\n' +
    ' * @param url Script URL to be sanitized.'
]
tslib_shim.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * This file serves as a shim to tslib. Using experimental features like\n' +
    ` * decorator will make TS generates compiled JS code like "import 'tslib'",\n` +
    " * but our existing build toolchain can't handle that import correctly. To\n" +
    ' * mitigate that, we use "noEmitHelpers: true" in the tsconfig to make sure\n' +
    ` * it won't generate "import 'tslib'", but this configuration requires the\n` +
    ' * functions from tslib are available in the global space, hence the assignment\n' +
    ' * below.\n' +
    ' *\n' +
    ' * Note: for any functions we expose here, we also need to add function\n' +
    ' * type declaration to closure type externs in app_window_common.js.'
]
uma.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Keep the order of this in sync with FileManagerVolumeType in\n' +
    ' * tools/metrics/histograms/enums.xml.',
  ' * Keep the name and the value in sync with `FileManagerNavigationSurface` in\n' +
    ' * //tools/metrics/histograms/metadata/file/enums.xml',
  ' The ordering is important.',
  ' * Records the action of opening a file by the file volume type.',
  ' * Records the action of opening a file by the file navigation surface.*'
]
unittest_util.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Wait for the update (render/re-render) of the `element` to be finished\n' +
    ' * in unit test.\n' +
    ' *',
  ' * Mock PluralStringProxy in the unit test.'
]
url_constants.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' App ID generated by the SWA framework.',
  ' * Special key for when we are showing search results. Search results do not\n' +
    ' * have a corresponding entry in the directory tree. As a result we need to\n' +
    ' * fake the PathComponent that represents the "current" directory. This constant\n' +
    ' * corresponds to the key field of the PathComponent object.',
  ' The URL of the legacy version of File Manager.',
  ' The URL of the System Web App version of File Manager.',
  ' The path to the File Manager icon.',
  ' * @param path relative to the Files app root.\n' +
    ' * @return The absolute URL for a path within the Files app.',
  ' * @param path relative to the sandboxed page origin.\n' +
    ' * @return The absolute URL.',
  ' * @return The URL of the file that holds Files App icon.'
]
util.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file should contain utility functions used only by the\n' +
    ' * files app. Other shared utility functions can be found in base/*_util.js,\n' +
    ' * which allows finer-grained control over introducing dependencies.',
  ' * Calls the `fn` function which should expect the callback as last argument.\n' +
    ' *\n' +
    ' * Resolves with the result of the `fn`.\n' +
    ' *\n' +
    ' * Rejects if there is `chrome.runtime.lastError`.',
  ' * Mapping table for FileError.code style enum to DOMError.name string.',
  ' * Extracts path from filesystem: URL.\n' +
    ' * @return The path if it can be parsed, null if it cannot.',
  ' * @return True if the Files app is running as an open files or a\n' +
    ' *     select folder dialog. False otherwise.',
  ' * The last URL with visitURL().',
  ' * Visit the URL.\n' +
    ' *\n' +
    ' * If the browser is opening, the url is opened in a new tab, otherwise the url\n' +
    ' * is opened in a new window.',
  ' * Return the last URL visited with visitURL().',
  ' * Returns whether the window is teleported or not.',
  ' * Runs chrome.test.sendMessage in test environment. Does nothing if running\n' +
    ' * in production environment.',
  ' * Extracts the extension of the path.\n' +
    ' *\n' +
    ' * Examples:\n' +
    " * splitExtension('abc.ext') -> ['abc', '.ext']\n" +
    " * splitExtension('a/b/abc.ext') -> ['a/b/abc', '.ext']\n" +
    " * splitExtension('a/b') -> ['a/b', '']\n" +
    " * splitExtension('.cshrc') -> ['', '.cshrc']\n" +
    " * splitExtension('a/b.backup/hoge') -> ['a/b.backup/hoge', '']",
  ' * Checks if an API call returned an error, and if yes then prints it.',
  ' * Makes a promise which will be fulfilled |ms| milliseconds later.',
  ' * Makes a promise which will be rejected if the given |promise| is not resolved\n' +
    ' * or rejected for |ms| milliseconds.',
  ' * Returns the Files app modal dialog used to embed any files app dialog\n' +
    ' * that derives from cr.ui.dialogs.',
  ' * Create a taskID which is a string unique-ID for a task. This is temporary\n' +
    ' * and will be removed once we use task.descriptor everywhere instead.',
  ' * Returns a new promise which, when fulfilled carries a boolean indicating\n' +
    ' * whether the app is in the guest mode. Typical use:\n' +
    ' *\n' +
    ' * isInGuestMode().then(\n' +
    ' *     (guest) => { if (guest) { ... in guest mode } }',
  ' * A kind of error that represents user electing to cancel an operation. We use\n' +
    ' * this specialization to differentiate between system errors and errors\n' +
    ' * generated through legitimate user actions.',
  ' * Returns whether the given value is null or undefined.',
  ' * Bulk pinning should only show visible UI elements when in progress or\n' +
    ' * continuing to sync.',
  ' * The native Partial only marks the immediate properties as optional,\n' +
    ' * DeepPartial is basically a recursive version of Partial: if the immediate\n' +
    ' * property value is an Object, it allows using partial values for that object.',
  " * Get Payload's type from ActionFactory<Payload>."
]
util_unittest.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
volume_manager_types.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Type of a file system.',
  ' Volume name length limits by file system type.',
  ' * Type of a navigation root.\n' +
    ' *\n' +
    ' * Navigation root are the top-level entries in the navigation tree, in the\n' +
    ' * left hand side.\n' +
    ' *\n' +
    ' * This must be kept synchronised with the VolumeManagerRootType variant in\n' +
    ' * tools/metrics/histograms/metadata/file/histograms.xml.',
  ' * Keep the order of this in sync with FileManagerRootType in\n' +
    ' * tools/metrics/histograms/enums.xml.\n' +
    ' * The array indices will be recorded in UMA as enum values. The index for\n' +
    ' * each root type should never be renumbered nor reused in this array.',
  ' Error type of VolumeManager.',
  " Source of each volume's data.",
  ' * @returns if the volume is linux native file system or not. Non-native file\n' +
    ' * system does not support few operations (e.g. load unpacked extension).',
  ' Gets volume type from root type.',
  ' Gets root type from volume type.',
  ' * @returns whether the given `volumeType` is expected to provide third party\n' +
    ' * icons in the iconSet property of the volume.',
  ' * List of media view root types.\n' +
    ' * Keep this in sync with constants in arc_media_view_util.cc.',
  ' Gets volume type from root type.',
  ' * An event name triggered when a user tries to mount the volume which is\n' +
    ' * already mounted. The event object must have a volumeId property.',
  ' * This is the top level directory name for Computers in drive that are using\n' +
    ' * the backup and sync feature.',
  ' ID of the Google Photos DocumentsProvider volume.',
  ' * ID of the MediaDocumentsProvider. All the files returned by ARC source in\n' +
    ' * Recents have this ID prefix in their filesystem.',
  ' Checks if a file entry is a Recent entry coming from ARC source.'
]
volume_manager_types_unittest.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test that every volumeType has a rootType, and that it maps back to the same\n' +
    ' volumeType.',
  ' Test that all rootType have a corresponding volumeType, except for "fake"\n' +
    ' root types that do not have a volume of their own.',
  ' Tests that IsRecentArcEntry() should return true/false if an entry belongs/\n' +
    " doesn't belong to recent.",
  " Deprecated roots shouldn't have an enum on RootType, however all te indexes\n" +
    ' in the UMA array has to still match the enums.xml.'
]
breadcrumb_container.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The controller of breadcrumb. The Breadcrumb element only renders a given\n' +
    ' * path. This controller component is responsible for constructing the path\n' +
    ' * and passing it to the Breadcrumb element.'
]
breadcrumb_container_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' An instance of BreadcrumbContainer.',
  ' * Tests that when current directory has "/" in the path, it will be escaped\n' +
    ' * before passing to the underlying breadcrumb.'
]
cloud_panel_container.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Maintains the state of the `<xf-cloud-panel>` and ensures the\n' +
    ' * information is passed to it appropriately.',
  ' * The `CloudPanelContainer` acts as a translation layer between the data in the\n' +
    ' * store relating to bulk pinning and the `<xf-cloud-panel>` element that\n' +
    ' * presents the data.'
]
cloud_panel_container_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * An instance of the cloud panel container.',
  ' * An instance of the `<xf-cloud-panel>`.',
  ' * A preferences object to initialize the store with that ensures bulk pinning\n' +
    ' * preference is enabled.',
  ' * Tests that when bulk pinning is in a progress mode the cloud panel receives\n' +
    ' * that data as attributes.',
  ' * Tests that if somehow any invalid data makes its way into the store, it\n' +
    " * doesn't propagate to the element.",
  ' * Tests that updates to the store unrelated to bulk pinning OR any duplicate\n' +
    ' * updates do not get passed onto the underlying element.',
  ' * Tests that when there are no bytes to be pinned, the percente should be\n' +
    ' * updated to be 100% as any new user who logs in with no new changes will have\n' +
    ' * no bytes to pin on initialization.',
  ' * Tests that when a click event is emitted, the correct subpage in settings is\n' +
    ' * opened.',
  " * Tests that the element doesn't receive updates when the preference is\n" +
    ' * disabled, after enabling the preference updates should propagate through.',
  ' * Tests that updating the syncing stage to offline adds the type attribute and\n' +
    ' * going back to syncing (i.e. back online) removes the type attribute.',
  ' * Tests that updating the syncing stage to not enough space adds the type\n' +
    ' * attribute and goes back to syncing (i.e. user has started it again) removes\n' +
    ' * the type attribute.',
  ' * Test that any existing properties are removed when moving to the listing\n' +
    ' * files stage.',
  ' * Tests that if the user has any files to pin but no bytes (i.e. has ONLY\n' +
    ' * 0-byte files) the percentage is also attached (a pre-requisite to show the\n' +
    ' * File sync is on page).',
  ' * Tests that a metered network update to the store passes the state down to the\n' +
    ' * cloud panel.'
]
directory_tree_container.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview The Directory Tree aka Navigation Tree.',
  ' * The navigation item data structure, which includes:\n' +
    ' * * `element`: the corresponding DOM element on the UI (rendered by\n' +
    ' * XfTreeItem).\n' +
    ' * * `fileData`: the corresponding file data which backs up this navigation\n' +
    ' * item.',
  ' * The navigation root data structure, which includes:\n' +
    ' * * `element` and `fileData`.\n' +
    ' * * `androidAppData`: the corresponding android app data which backs up this\n' +
    ' * navigation item, can be null if the navigation is not backed up by an\n' +
    ' * android app.'
]
directory_tree_container_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The directory tree container instance',
  ' To store all the directory changed listener.',
  ' * Returns the directory tree item labels.',
  ' * Dispatch MyFiles and Drive volumes data to the store.',
  ' * Add MyFiles children and trigger file watcher change event.',
  ' * Add Drive children and trigger file watcher change event.',
  ' * Add Android app navigation data to the store.',
  ' * Test case for typical creation of directory tree.\n' +
    ' * This test expects that the following tree is built.\n' +
    ' *\n' +
    ' * MyFiles\n' +
    ' * Google Drive\n' +
    ' * - My Drive\n' +
    ' * - Shared with me\n' +
    ' * - Offline',
  ' * Test case for creating tree with Team Drives.\n' +
    ' * This test expects that the following tree is built.\n' +
    ' *\n' +
    ' * MyFiles\n' +
    ' * Google Drive\n' +
    ' * - My Drive\n' +
    ' * - Team Drives (only if there is a child team drive).\n' +
    ' * - Shared with me\n' +
    ' * - Offline',
  ' * Test case for creating tree with empty Team Drives.\n' +
    ' * The Team Drives subtree should be removed if the user has no team drives.',
  ' * Test case for creating tree with Computers.\n' +
    ' * This test expects that the following tree is built.\n' +
    ' *\n' +
    ' * MyFiles\n' +
    ' * Google Drive\n' +
    ' * - My Drive\n' +
    ' * - Computers (only if there is a child computer).\n' +
    ' * - Shared with me\n' +
    ' * - Offline',
  ' * Test case for creating tree with empty Computers.\n' +
    ' * The Computers subtree should be removed if the user has no computers.',
  ' * Test case for creating tree with Team Drives & Computers.\n' +
    ' * This test expects that the following tree is built.\n' +
    ' *\n' +
    ' * MyFiles\n' +
    ' * Google Drive\n' +
    ' * - My Drive\n' +
    ' * - Team Drives\n' +
    ' * - Computers\n' +
    ' * - Shared with me\n' +
    ' * - Offline',
  ' * Test case for setting separator property.\n' +
    ' *\n' +
    " * 'separator' property is used to display a line divider between\n" +
    ' * "sections" in the directory tree.\n' +
    ' *\n' +
    ' * This test expects that the following tree is built.\n' +
    ' *\n' +
    ' * MyFiles\n' +
    ' * Google Drive\n' +
    ' * Android app 1',
  ' * Test case for directory update with volume changes.\n' +
    ' *\n' +
    ' * Mounts/unmounts removable and archive volumes, and checks these volumes come\n' +
    ' * up to/disappear from the list correctly.',
  ' * Test case for directory tree with disabled Android files.\n' +
    ' *\n' +
    ' * If some of the volumes under MyFiles are disabled, this should be reflected\n' +
    " * in the directory model as well: the children shouldn't be loaded, and\n" +
    " * clicking on the item or the expand icon shouldn't do anything.",
  ' * Test case for directory tree with disabled removable volume.\n' +
    ' *\n' +
    ' * If removable volumes are disabled, they should be allowed to mount/unmount,\n' +
    ' * but cannot be selected or expanded.',
  ' * Test a disabled drive volume.\n' +
    ' *\n' +
    ' * If drive is disabled, this should be reflected in the directory model as\n' +
    " * well: the children shouldn't be loaded, and clicking on the item or the\n" +
    " * expand icon shouldn't do anything.",
  ' * Test adding the first team drive for a user.\n' +
    ' * Team Drives subtree should be shown after the change notification is\n' +
    ' * delivered.',
  ' * Test removing the last team drive for a user.\n' +
    ' * Team Drives subtree should be removed after the change notification is\n' +
    ' * delivered.',
  ' * Test adding the first computer for a user.\n' +
    ' * Computers subtree should be shown after the change notification is\n' +
    ' * delivered.',
  ' * Test removing the last computer for a user.\n' +
    ' * Computers subtree should be removed after the change notification is\n' +
    ' * delivered.',
  ' * Test adding FSP and SMB.\n' +
    ' * Sub directories should be fetched for FSP, but not for the SMB.',
  ' Test aria-expanded attribute for directory tree item.',
  ' Test aria-description attribute for selected directory tree item.',
  ' * Test adding a materialized view causes it to display in the tree.'
]
nudge_container.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * NudgeContainer maintains the lifetime of a "nudge". A nudge refers to an\n' +
    ' * educational overlay that shows up to highlight new features, currently we\n' +
    ' * only support a single nudge showing in Files app.',
  ' * An enum of nudges that can be shown, only a single nudge is shown at a time.',
  ' * Type to define the callback used that gets the anchor element from the DOM.',
  ' * Dismisses the nudge when the tree-item that anchors the nudge is selected.\n' +
    ' *\n' +
    ' * NOTE: It relies on the nudge anchor being in the icon, to traverse 2 parents\n' +
    ' * up to the tree-item.',
  ' * A mapping of nudges to their information that can be shown throughout the\n' +
    ' * Files app.'
]
nudge_container_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Holds all the elements, used to easily clear the DOM in between tests.',
  ' * An instance of the `NudgeContainer`, this is reset in between every test.',
  ' * The <xf-nudge> element that is appended to the page at the start of every\n' +
    ' * test.',
  ' * Save a copy of the test Nudge so that any test overwrites can be restored in\n' +
    ' * between tests. For example if the expiry date needs to be overwritten it is\n' +
    ' * restored for the next test.',
  ' * Sets up the initial holder that is used for every test.',
  ' * Creates new <xf-nudge> element for each test.',
  ' * Clears the <xf-nudge> between each test to ensure a clean slate.',
  ' * Create a <div id="test"> which anchors the `NudgeType.TEST_NUDGE`.',
  ' * Helper method to get the <p id="nudge-content"> element that is added to the\n' +
    ' * page to describe the content in the nudge.',
  ' * Wait until the desired number of repositions is met.',
  ' * The repositions are setup as 0, this indicates the nudge has not been moved\n' +
    ' * to position, i.e. an uninitialised state.',
  ' * Creates the test anchor and nudge and waits until the repositions are 1.',
  ' * Tests that a defined nudge without an anchor is not shown.',
  ' * Tests that the enter key dismisses the nudge.',
  ' * Tests that a <p> element is appended beside the anchor element with the nudge\n' +
    ' * content to enable screen readers to hear the content.',
  ' * Tests that the nudge moves with the element if it gets moved\n' +
    ' * programmatically.',
  ' * Tests that the nudge is not shown after being shown for the first time.',
  " * Tests the nudge doesn't show if the expiry period has elapsed.",
  ' * Tests the nudge is dismissed by clicking on the nudge.',
  ' * Tests the nudge is dismissed by clicking on the anchor.',
  ' * Tests the nudge using the dismissOnKeyDown().'
]
search_container.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Defines the possible states of the query input widget. This is a widget with\n' +
    ' * a search button, text input and clear button. By default, the widget is\n' +
    ' * closed. When active, it is open. Due to CSS transitions it has two\n' +
    ' * intermediate states, OPENING and CLOSING.',
  ' * Helper function that centralizes the test if we are searching the "Recents"\n' +
    ' * directory.',
  " * Creates location options. These always consist of 'Everywhere' and the\n" +
    ' * local folder. However, if the local folder has a parent, that is different\n' +
    ' * from it, we also add the parent between Everywhere and the local folder.',
  ' * Creates Recency options. Depending on the current directory these have either\n' +
    ' * ANYTIME or LAST_MONTH selected as the default.',
  ' * Creates file category option. Uses the state to find out if we are in the\n' +
    ' * Recent view. If so, it sets the default based on the Recent view selectors.',
  ' * Updates visibility of recency options based on the current directory.',
  ' * The controller for the search UI elements. The controller takes care of the\n' +
    ' * behavior of UI elements. It must not deal with the look-and-feel. It finds\n' +
    ' * them, hooks to the UI events and drives the business logic based on those UI\n' +
    ' * events.'
]
search_container_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Creates a store if necessary. Initializes it to an empty state.',
  ' * Creates a search container if necessary.',
  ' * Creates new <search-container> element for each test.',
  ' * Checks that manually entering a query (simulated here by setting value and\n' +
    ' * posint an input event) correctly propagates the state to the store.',
  ' * Checks that store changes correctly result in opening and closing of the\n' +
    ' * search box.'
]
file_error.d.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Definitions for FileError.\n' +
    ' * This is for compatibility with Closure definition for File API [1].\n' +
    ' *\n' +
    ' * [1]\n' +
    ' * https://github.com/google/closure-compiler/blob/master/externs/browser/nonstandard_fileapi.js#L197',
  ' * DOMError is deprecated and not shipped with TS anymore.\n' +
    ' * Definition copied from:\n' +
    ' * https://github.com/microsoft/TypeScript/blob/v3.7.7/lib/lib.dom.d.ts'
]
file_manager.d.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Type definition for foreground/js/file_manager.js:FileManager.\n' +
    ' *\n' +
    ' * For now only defining the bare minimum.',
  ' * The singleton instance for FileManager is available in the Window object.'
]
file_manager_private.d.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Definitions for chrome.fileManagerPrivate API\n' +
    ' * Generated from: chrome/common/extensions/api/file_manager_private.idl\n' +
    ' * run `tools/json_schema_compiler/compiler.py\n' +
    ' * chrome/common/extensions/api/file_manager_private.idl -g ts_definitions` to\n' +
    ' * regenerate.'
]
navigator_connection.d.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Definitions related to the navigation.connection.type API which\n' +
    ' *  is used to identify if a Chromebook is currently using an LTE connection.'
]
files_format_dialog.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
files_metadata_box.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(b/289003444): Move the following type definitions into ../js/metadata\n' +
    ' when that folder has been converted to typescript.',
  ' GPS Data as per https://exiv2.org/tags.html.'
]
files_metadata_entry.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
files_quick_view.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
files_safe_media.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Polymer element to render media securely in a chrome-untrusted:// <iframe>\n' +
    ' * element.\n' +
    ' *\n' +
    " * When tapped, 'files-safe-media-tap-inside', 'files-safe-media-tap-outside'\n" +
    ' * events are fired depending on the position of the tap.'
]
files_spinner.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
files_toast.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Files Toast.\n' +
    ' *\n' +
    ' * The toast is shown at the bottom-right in LTR, bottom-left in RTL. Usage:\n' +
    ' *\n' +
    " * toast.show('Toast without action.');\n" +
    " * toast.show('Toast with action', {text: 'Action', callback:function(){}});\n" +
    ' * toast.hide();'
]
files_toast_unittest.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
files_tooltip.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Files Tooltip.\n' +
    ' *\n' +
    ' * Adds target elements with addTarget or addTargets. Value of aria-label is\n' +
    ' * used as a label of the tooltip.\n' +
    ' *\n' +
    ' * Usage:\n' +
    " * document.querySelector('files-tooltip').addTargets(\n" +
    " *     document.querySelectorAll('[has-tooltip]'))",
  ' #\n' +
    ' sourceURL=//ui/file_manager/file_manager/foreground/elements/files_tooltip.ts'
]
files_tooltip_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
files_xf_elements_unittest.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Adds a xf-display-panel element to the test page.',
  ' * Tests that adding and removing panels to <xf-display-panel> updates the\n' +
    ' * aria-hidden attribute.',
  ' TODO(b/293228531): Reenable test when fixed for createElement().',
  ' * Tests that the extra-button appears when the value is in the dataset and\n' +
    ' * sends the appropriate signal on click.'
]
xf_button.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * A button used inside PanelItem with varying display characteristics.'
]
xf_circular_progress.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Definition of a circular progress indicator custom element.\n' +
    " * The element supports two attributes for control - 'radius' and 'progress'.\n" +
    ' * Default radius for the element is 10px, use the DOM API\n' +
    " *   element.setAttribute('radius', '12px'); to set the radius to 12px;\n" +
    ' * Default progress is 0, progress is a value from 0 to 100, use\n' +
    " *   element.setAttribute('progress', '50'); to set progress to half complete\n" +
    " * or alternately, set the 'element.progress' JS property for the same result."
]
xf_display_panel.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * A panel to display a collection of PanelItem.'
]
xf_panel_item.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * A panel to display the status or progress of a file operation.'
]
actions_controller.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Manages actions for the current selection.'
]
actions_model.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * A single action, that can be taken on a set of entries.',
  ' * Opens the entry in Drive Web for the user to manage permissions etc.',
  ' * A custom action set by the FSP API.',
  ' * Represents a set of actions for a set of entries. Includes actions set\n' +
    ' * locally in JS, as well as those retrieved from the FSP API.',
  ' * List of common actions, used both internally and externally (custom actions).\n' +
    ' * Keep in sync with file_system_provider.idl.'
]
actions_model_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @return total number of calls for that metric.',
  ' * Tests that the correct actions are available for a Google Drive directory.',
  ' * Tests that the correct actions are available for a Google Drive file.',
  ' * Tests that the correct actions are available for a Google Drive hosted file.',
  ' * Tests that the correct actions are available for a Drive file that cannot be\n' +
    ' * pinned.',
  ' * Tests that a Team Drive Root entry has the correct actions available.',
  ' * Tests that a Team Drive directory entry has the correct actions available.',
  ' * Tests that a Team Drive file entry has the correct actions available.',
  ' * Tests that if actions are provided with getCustomActions(), they appear\n' +
    ' * correctly for the file.',
  ' * Tests that no actions are available when getCustomActions() throws an error.'
]
android_app_list_model.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Model for managing a list of Android apps.'
]
app_state_controller.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Default sort field of the file list.',
  ' * Default sort direction of the file list.'
]
banner_controller.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Local storage key suffix for how many times a banner was shown.',
  ' * Local storage key suffix for the last Date a banner was dismissed.',
  ' * Local storage key suffix that stores the total number of seconds a banner has\n' +
    ' * been visible for.',
  ' * Duration between calls to keep the current banners time limit in sync.',
  ' * Local storage key suffix for a banner that has been dismissed forever.',
  ' * The HTML attribute to force show a banner, if applied, the banner will always\n' +
    ' * show.',
  ' * Allowed duration between onDirectorySizeChanged events in milliseconds.',
  ' * Type defining the object that stores the volume size stats for various volume\n' +
    ' * types that are tracked by banners.\n' +
    ' * The key of this is the volume ID.',
  ' * A custom filter context that is set when the existing filters are not\n' +
    ' * powerful enough and more custom behaviour must be used to define when a\n' +
    ' * banner should be shown or not.',
  ' * The central component to the Banners Framework. The controller maintains the\n' +
    ' * core logic that dictates which banner should be shown as well as what events\n' +
    ' * require a reconciliation of the banners to ensure the right banner is shown\n' +
    ' * at the right time.',
  ' * Identifies if the current volume is in the list of allowed volume type\n' +
    ' * array for a specific banner.',
  ' * Checks if the current sizeStats are below the threshold required to trigger\n' +
    ' * the banner to show.',
  ' * Identifies if a supplied Entry is shared with a particularly VM. Returns a\n' +
    ' * curried function that takes the vm type.'
]
banner_controller_unittest.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Maintains the registered web components for testing the warning banners.',
  ' * Maintains the registered web components for testing the educational banners.',
  ' * Number of banners to create on startup.',
  ' * Returns an object with helper methods to manipulate a test banner.',
  ' * Helper method to use with waitUntil to assert that only one banner is\n' +
    ' * visible.',
  ' * Helper method to use with waitUntil to assert that all banners are hidden.',
  ' * Changes the global directory to |newVolume|.',
  ' * Update the current volume size stats that are returned by\n' +
    ' * chrome.fileManagerPrivate.getSizeStats.',
  ' * Sends a DISMISS event to the supplied banner. This synthetic event is\n' +
    ' * wired up to the event handler set in the BannerController.',
  ' * Sends a DISMISS_FOREVER event to the supplied banner. This synthetic event is\n' +
    ' * wired up to the event handler set in the BannerController.',
  ' * Mocks the Date.now() function to enable us to not have to wait for a\n' +
    ' * specified duration. Returns 2 functions, one to set the Date.now() and one\n' +
    " * to restore the Date.now() to it's existing functionality.",
  ' * Imitates a new Files app session. The Banner controller looks to see if the\n' +
    ' * banner has been connected to the DOM and so clearing the DOM should\n' +
    ' * sufficiently demonstrate this.',
  ' * Test that upon initialize (with no banners loaded) the container has none\n' +
    ' * appended.',
  ' * Test that a warning banner takes priority over any educational banners.',
  ' * Test a banner with lower priority can be shown if the higher priority banner\n' +
    ' * does not match the current volume type.',
  ' * Test banners of the same types are prioritised by the order they are set.',
  ' * Test banners of the same types are prioritised by the order they are set.',
  ' * Test that a null VolumeInfo hides all the banners.',
  ' * Test that banners that have hit their show limit are not shown again.',
  ' * Test that the show limit is increased only on a per app session.',
  ' * Test that multiple banners with different allowedVolumes and show limits\n' +
    " * are show at the right stages. This also asserts that banners that don't\n" +
    ' * implement showLimit still are shown as expected.',
  ' * Test that when chrome.fileManagerPrivate.getSizeStats returns null,\n' +
    ' * banners relying on specific size are not shown.',
  ' * Test that setting the remaining size coming back from getSizeStats triggers\n' +
    ' * the banner to display.',
  ' * Test that when a volume size changes multiple events in sequence are\n' +
    ' * debounced to avoid the scenario when lots of small size files cause many\n' +
    ' * events to be emitted that will lock up the UI thread.',
  ' * Test that when the remaining space goes below the threshold, the banner is\n' +
    ' * show and if enough free space is reclaimed the banner is hidden.',
  ' * Test that multiple banners (with different volume size observers; minRatio\n' +
    ' * and minSize) can co-exist and will be shown at appropriate times.',
  ' * Test that if a volume is changed mid way through a volume size request, the\n' +
    ' * banner is not shown, but the cache is maintained such that navigating back\n' +
    ' * to the volume causes the banner to show.',
  ' * Test the dismiss button hides the banner appropriately.',
  ' * Test that the duration set for the banner to be hidden for is respected.',
  ' * Test that a navigating around a Files app session after a banner has been\n' +
    ' * shown does not hide the banner if the showLimit has been reached, only the\n' +
    ' * next Files app session should hide the banner.',
  ' * Test that if multiple banners are appropriately hidden when flipping between\n' +
    ' * being the highest priority banner to be shown.',
  ' * Test that a banner with timeLimit set hides after the defined time limit.',
  ' * Test that the constant Banner.INFINITE_TIME allows the banner to display for\n' +
    ' * a super long time.',
  ' * Test the dismiss forever correctly hides the banner during the current Files\n' +
    ' * app session.',
  ' * Test that banners are reconciled after every dismiss click that is made.',
  ' * Test that custom filters can be attached to banners in the event specific\n' +
    ' * logic needs to be ran for individual banners.',
  ' * Test that custom filters interact with other configuration elements.',
  ' * Test that custom banners receive their requested context when the filter\n' +
    ' * function is executed.',
  ' * Test that if multiple filters are registered to a single banner, only the\n' +
    ' * winning filter has their associated context passed to the banner.'
]
banner_util_unittest.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Returns a VolumeInfo with the type and id set.',
  ' * Creates a chrome.fileManagerPrivate.MountPointSizeStats type.',
  ' * Test when there are no allowed volume types.',
  ' * Test when there is a single allowed volume type matching the current volume.',
  ' * Test when there are multiple volumes with one being the current volume.',
  ' * Test when there are multiple volumes but none match the current volume.',
  ' * Test multiple identical volume types, with only one allowed volume id.',
  ' * Test multiple identical volume types, with none matching the current volume.',
  ' * Test that a single root type (with no volume info) returns true if the\n' +
    ' * allowed volumes only contains root information.',
  ' * Test that multiple root types defined in allowed volumes (with one matching\n' +
    ' * the current type) returns true.',
  ' * Test multiple defined root types with none matching the allowed volumes\n' +
    ' * returns false.',
  ' * Test both volume info and root type returns true (for stricter checking of\n' +
    ' * a volume type).)',
  ' * Test that if volume type matches with but not root type should return false.',
  ' * Test that volume type is defined but the root type is null, allowed volumes\n' +
    ' * should allow for stricter checking of a volume type, this should return\n' +
    ' * false.',
  ' * Test that root type is defined but not volume type. If the allowed volumes\n' +
    ' * requires both defined, should return false.',
  ' * Test that volume type, root type and id are all defined.',
  ' * Test that volume type, root type are defined but id does not match.',
  ' * Test multiple volume types, root types and ids defined with one matching.',
  ' * Test multiple volume types, root types and ids defined with none matching.',
  ' * Test undefined types return false.',
  ' * Test that below, equal to and above the minSize threshold returns correct\n' +
    ' * results.',
  ' * Test that below, equal to and above the minRatio threshold returns correct\n' +
    ' * results.'
]
command_handler.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Interface on which `CommandHandler` depends.',
  ' * Name of a command (for UMA).',
  ' * A map of FilesCommand to the ID that is used in the DOM to reference them.',
  ' * Strongly type any places which can ONLY provide a key that directly maps to a\n' +
    ' * files command above.',
  ' * Handle of the command events.',
  ' * Keep the order of this in sync with FileManagerMenuCommands in\n' +
    ' * tools/metrics/histograms/enums.xml.\n' +
    ' * The array indices will be recorded in UMA as enum values. The index for each\n' +
    ' * root type should never be renumbered nor reused in this array.',
  ' * Records the menu item as selected in UMA.'
]
constants.ts [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * These metadata is expected to be cached to accelerate computeAdditional.\n' +
    ' * See: crbug.com/458915.',
  ' * Metadata property names used by FileTable and FileGrid.\n' +
    ' * These metadata is expected to be cached.\n' +
    ' * TODO(sashab): Store capabilities as a set of flags to save memory. See\n' +
    ' * https://crbug.com/849997\n' +
    ' *',
  ' * Metadata properties used to inform the user about DLP (Data Leak Prevention)\n' +
    ' * Files restrictions. These metadata is expected to be cached.',
  ' * Name of the default crostini VM: crostini::kCrostiniDefaultVmName',
  ' * Name of the Plugin VM: plugin_vm::kPluginVmName.',
  ' * Name of the default bruschetta VM: bruschetta::kBruschettaVmName',
  ' * DOMError type for crostini connection failure.',
  ' * ID of the fake fileSystemProvider custom action containing OneDrive document\n' +
    ' * URLs.',
  ' * ID of the fake fileSystemProvider custom action containing OneDrive document\n' +
    ' * User Emails.',
  " TODO(b/330786891): Remove this once it's no longer needed for backwards\n" +
    ' compatibility with ODFS.',
  ' * ID of the fake fileSystemProvider custom action containing OneDrive document\n' +
    ' * Reauthentication Required state.',
  ' * ID of the fake fileSystemProvider custom action containing OneDrive document\n' +
    ' * Account state.',
  ' * An array of IDs of fake fileSystemProvider custom actions for ODFS.',
  ' * All icon types.',
  ' * Extension ID for OneDrive FSP, also used as ProviderId.'
]
crossover_search_utils.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Return DirectoryEntry of the first root directory (all volume display root\n' +
    ' * directories) that contains one or more query-matched files, returns null if\n' +
    ' * no such directory is found.\n' +
    ' *\n' +
    ' * @param volumeManager The volume manager.\n' +
    ' * @param dirModel The directory model.\n' +
    ' * @param searchQuery Search query.'
]
crostini_controller.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * CrostiniController handles the foreground UI relating to crostini.'
]
deferred_elements.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Elements not used in the first painting of the app.'
]
dialog_action_controller.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Controller for handling behaviors of the Files app opened as a file/folder\n' +
    ' * selection dialog.'
]
directory_contents.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Common callback types used by content scanners.',
  ' * Scanner of the entries.',
  ' * No-op class to be used for fake entries and such.',
  ' * Scanner of the entries in a directory.',
  ' * Latency metric variant names supported by the search content scanner.',
  ' * A content scanner capable of scanning both the local file system and Google\n' +
    ' * Drive. When created you need to specify the root type, current entry\n' +
    ' * in the directory tree, the search query and options. The `rootType` together\n' +
    ' * with `options` is then used to determine if the search is conducted on the\n' +
    ' * local folder, root folder, or on the local file system and Google Drive.\n' +
    ' *\n' +
    ' * NOTE: This class is a stop-gap solution when transitioning to a content\n' +
    ' * scanner that talks to a browser level service. The service ultimately should\n' +
    ' * be the one that determines what is being searched, and aggregates the results\n' +
    ' * for the frontend client.',
  ' * Scanner of the entries for the metadata search on Drive File System.',
  ' * Scanner of media-view volumes.',
  ' * Shows an empty list and spinner whilst starting and mounting the\n' +
    ' * crostini container.\n' +
    ' *\n' +
    ' * This function is only called once to start and mount the crostini\n' +
    ' * container.  When FilesApp starts, the related fake root entry for\n' +
    ' * crostini is shown which uses this CrostiniMounter as its ContentScanner.\n' +
    ' *\n' +
    ' * When the sshfs mount completes, it will show up as a disk volume.\n' +
    ' * `refreshNavigationRootsReducer` will detect that crostini\n' +
    ' * is mounted as a disk volume and hide the fake root item while the\n' +
    ' * disk volume exists.',
  " * Shows an empty list and spinner whilst starting and mounting a Guest OS's\n" +
    ' * shared files.\n' +
    ' *\n' +
    ' * When FilesApp starts, the related placeholder root entry is shown which uses\n' +
    ' * this GuestOsMounter as its ContentScanner. When the mount succeeds it will\n' +
    ' * show up as a disk volume. `refreshNavigationRootsReducer` will\n' +
    ' * detect thew new volume and hide the placeholder root item while the disk\n' +
    ' * volume exists.',
  ' * Read all the Trash directories for content.',
  ' * Top-level Android folders which are visible by default.',
  ' * Windows files or folders to hide by default.',
  ' * This class manages filters and determines a file should be shown or not.\n' +
    " * When filters are changed, a 'changed' event is fired.",
  ' * A context of DirectoryContents.\n' +
    ' * TODO(yoshiki): remove this. crbug.com/224869.',
  ' * This class is responsible for scanning directory (or search results), and\n' +
    ' * filling the fileList. Different descendants handle various types of directory\n' +
    ' * contents shown: basic directory, drive search results, local search results.',
  ' * Scan entries using the Store and ActionsProducer to talk to the backend and\n' +
    ' * propagate the state.\n' +
    ' *\n' +
    ' * This adapts the Store to the existing ContentScanner architecture.'
]
directory_contents_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Mock chrome APIs.',
  ' * Initializes the test environment.',
  ' * Check that files are shown or hidden correctly.',
  " * Check the recent entries which doesn't match the query or whose volume is\n" +
    ' * disallowed will be filtered out.'
]
directory_model.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Used to track asynchronous directory change use like:\n' +
    ' * const tracker = directoryModel.createDirectoryChangeTracker();\n' +
    ' * tracker.start();\n' +
    ' * try {\n' +
    ' *    ... async code here ...\n' +
    ' *    if (tracker.hasChanged) {\n' +
    " *      // This code shouldn't continue anymore.\n" +
    ' *    }\n' +
    ' * } finally {\n' +
    ' *     tracker.stop();\n' +
    ' * }',
  " If directory files changes too often, don't rescan directory more than once\n" +
    ' per specified interval',
  ' Used for operations that require almost instant rescan.',
  ' * Helper function that can decide if the scan of the given entry should be\n' +
    ' * performed by recent scanner or other (search) scanner. In transition period\n' +
    ' * between V1 and V2 versions of search, when the user searches in Recent, and\n' +
    ' * uses Recent as location, we reuse the Recent scanner. Otherwise, the true\n' +
    ' * search scanner is used.',
  ' * Helper function that determines the category of files we are looking for\n' +
    ' * based on the fake entry, query and options.',
  ' * Data model for the current directory for Files app.\n' +
    ' *\n' +
    ' * It encapsulates the current directory, the file selection, directory scanner,\n' +
    ' * etc.'
]
directory_model_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Initializes the test environment.',
  " * Mock DirectoryModel's dependencies and return a DirectoryModel instance.\n" +
    ' *',
  ' * Tests that the fake directory will be re-scanned after the delete and copy\n' +
    ' * operation.',
  ' * Tests that the non-watchable volume will be re-scanned after each of\n' +
    ' * the IOTask operations.'
]
directory_tree_naming_controller.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Naming controller for directory tree.'
]
elements_importer.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
empty_folder_controller.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The empty state image for the Recents folder.',
  ' * The image shown when search returned no results.',
  ' * The empty state image for the Trash folder.',
  ' * The reauthentication required image for ODFS. There are no files when\n' +
    ' * reauthentication is required (scan fails).',
  ' * The frozen account image for ODFS. There are no files when the account\n' +
    ' * is frozen (scan fails).',
  " * The state of the user's OneDrive account. Matches the enum in ODFS.",
  ' * Empty folder controller which controls the empty folder element inside\n' +
    ' * the file list container.'
]
empty_folder_controller_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test class to enable accessing protected methods on the\n' +
    ' `EmptyFolderController`.',
  ' * Tests that no files message will be rendered for each filter type.',
  ' * Tests that no files message will be hidden for non-Recent entries.',
  ' * Tests that no files message will be hidden if scanning is in progress.',
  ' * Tests that no files message will be hidden if there are files in the list.',
  ' * Tests that the empty folder element is hidden and ODFS is still interactive\n' +
    ' * if the scan finished with no error. Add ODFS to the store so that the\n' +
    ' * |isInteractive| state of the volume can be read.',
  ' TODO(b/330786891): Remove this test once\n' +
    ' FSP_ACTION_HIDDEN_ONEDRIVE_REAUTHENTICATION_REQUIRED is no longer needed for\n' +
    ' backwards compatibility with ODFS.',
  ' * Tests that the empty folder element is hidden and ODFS is still interactive\n' +
    ' * if the scan failed from a NO_MODIFICATION_ALLOWED_ERR (access denied) but\n' +
    ' * reauthentication is not required. Add ODFS to the store so that the\n' +
    ' * |isInteractive| state of the volume can be read.',
  ' * Tests that the empty folder element is hidden and ODFS is still interactive\n' +
    ' * if the scan failed from a NO_MODIFICATION_ALLOWED_ERR (access denied) but\n' +
    ' * reauthentication is not required. Add ODFS to the store so that the\n' +
    ' * |isInteractive| state of the volume can be read.',
  ' * Tests that the empty folder element is hidden and ODFS is still interactive\n' +
    ' * if the scan failed from a QUOTA_EXCEEDED_ERR but the account is not frozen.\n' +
    ' * Add ODFS to the store so that the |isInteractive| state of the volume can be\n' +
    ' * read.',
  ' * Tests that the empty state image shows up when root type is Trash.',
  ' TODO(b/330786891): Remove test once\n' +
    ' FSP_ACTION_HIDDEN_ONEDRIVE_REAUTHENTICATION_REQUIRED is no longer needed\n' +
    ' for backwards compatibility with ODFS.',
  ' * Tests that the reauthentication required image shows up and ODFS becomes\n' +
    ' * non-interactive when the scan failed from a NO_MODIFICATION_ALLOWED_ERR\n' +
    ' * (access denied) and reauthentication is required. Add ODFS to the store so\n' +
    ' * that the |isInteractive| state of the volume can be set and read.',
  ' * Tests that the reauthentication required image shows up and ODFS becomes\n' +
    ' * non-interactive when the scan failed from a NO_MODIFICATION_ALLOWED_ERR\n' +
    ' * (access denied) and reauthentication is required. Add ODFS to the store so\n' +
    ' * that the |isInteractive| state of the volume can be set and read.',
  ' * Tests that the frozen account image shows up and ODFS becomes\n' +
    ' * non-interactive when the scan failed from a QUOTA_EXCEEDED_ERR and the user\n' +
    ' * has a frozen account. Add ODFS to the store so that the |isInteractive| state\n' +
    ' * of the volume can be set and read.',
  ' * Tests that the empty state image shows up when search is active.'
]
fake_android_app_list_model.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @param appNames List app names to be added.\n' +
    ' * @return fake for unittests.'
]
fake_file_selection_handler.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Mock FileSelectionHandler.'
]
file_list_model.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Currently we only support group by modificationTime or isDirectory, so the\n' +
    ' * group value can only be one of them.',
  ' * This represents a group header.',
  ' * This represents the snapshot of a groupBy result.',
  ' * File list.'
]
file_list_model_unittest.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Returns a fake MetadataModel, used to provide metadata from the given |data|\n' +
    ' * object (usually TEST_METADATA) to the FileListModel.'
]
file_manager.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * FileManager constructor.\n' +
    ' *\n' +
    ' * FileManager objects encapsulate the functionality of the file selector\n' +
    ' * dialogs, as well as the full screen file manager application.\n' +
    ' *'
]
file_manager_commands.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * Used to filter out `VolumeInfo` that don't exist and maintain the return\n" +
    ' * array is of type `VolumeInfo[]` without null or undefined.',
  ' * A command.',
  ' * Unmounts external drive.',
  ' * Formats external drive.',
  ' * Deletes removable device partition, creates single partition and formats it.',
  ' * Initiates new folder creation.',
  ' * Initiates new window creation.',
  ' * Toggles visibility of top-level Android folders which are not visible by\n' +
    ' * default.',
  ' * Toggles drive sync settings.',
  ' * Delete / Move to Trash command.',
  ' * Restores selected files from trash.',
  ' * Empties (permanently deletes all) files from trash.',
  ' * Pastes files from clipboard.',
  " * Pastes files from clipboard. This is basically same as 'paste'.\n" +
    ' * This command is used for always showing the Paste command to gear menu.',
  ' * Pastes files from clipboard into the selected folder.',
  ' * Cut/Copy command.',
  ' * Initiates file renaming.',
  ' * Opens settings/files sub page.',
  ' * Opens drive help.',
  ' * Opens the send feedback window.',
  ' * Opens drive buy-more-space url.',
  ' * Opens drive.google.com.',
  ' * Opens a file with default task.',
  ' * Displays "open with" dialog for current selection.',
  ' * Invoke Sharesheet.',
  ' * Opens containing folder of the focused file.',
  ' * Displays QuickView for current selection.',
  ' * Displays the Data Leak Prevention (DLP) Restriction details.',
  ' * Focuses search input box.',
  " * Flips 'available offline' flag on the file.",
  ' * Extracts content of ZIP files in the current selection.',
  ' * Creates ZIP file for current selection.',
  ' * Opens the file in Drive for the user to manage sharing permissions etc.',
  ' * Opens the Manage MirrorSync dialog if the flag is enabled.',
  ' * A command to share the target folder with the specified Guest OS.',
  ' * Creates a command for the gear icon to manage sharing.',
  ' * Creates a command for managing sharing.',
  ' * Creates a shortcut of the selected folder (single only).',
  ' * Removes the folder shortcut.',
  ' * Zoom in to the Files app.',
  ' * Zoom out from the Files app.',
  ' * Reset the zoom factor.',
  ' * Sort the file list by name (in ascending order).',
  ' * Sort the file list by size (in descending order).',
  ' * Sort the file list by type (in ascending order).',
  ' * Sort the file list by date-modified (in descending order).',
  ' * Open inspector for foreground page.',
  ' * Open inspector for foreground page and bring focus to the console.',
  ' * Open inspector for foreground page in inspect element mode.',
  ' * Opens the gear menu.',
  ' * Focus the first button visible on action bar (at the top).',
  ' * Handle back button.',
  ' * Configures the currently selected volume.',
  ' * Refreshes the currently selected directory.',
  ' * Sets the system wallpaper to the selected file.',
  ' * Opens settings/storage sub page.',
  ' * Opens "providers menu" to allow users to use providers/FSPs.'
]
file_manager_commands_unittest.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Checks that the `toggle-holding-space` command is appropriately enabled/\n' +
    ' * disabled given the current selection state and executes as expected.',
  " * Checks that the 'extract-all' command is enabled or disabled\n" +
    ' * dependent on the current selection.',
  ' * Tests that rename command should be disabled for Recent entry.',
  ' * Create and add a Downloads volume to the store. Update the volume as\n' +
    ' * non-interactive.',
  ' * Tests that the paste, cut, copy and new-folder commands should be\n' +
    ' * disabled and hidden when there are no selected entries but the current\n' +
    ' * directory is on a non-interactive volume (e.g. when the blank space in a\n' +
    ' * non-interactive directory is right clicked).',
  ' * Tests that the paste, cut, copy, new-folder, delete, move-to-trash,\n' +
    ' * paste-into-folder, rename, extract-all and zip-selection commands should be\n' +
    ' * disabled and hidden for an entry on a non-interactive volume.'
]
file_manager_commands_util.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The IDs of elements that can trigger share action.',
  ' * Helper function that for the given event returns the launch source of the\n' +
    ' * sharesheet. If the source cannot be determined, this function returns\n' +
    ' * chrome.fileManagerPrivate.SharesheetLaunchSource.UNKNOWN.',
  ' * Extracts entry on which command event was dispatched.',
  ' * Extracts entries on which command event was dispatched.',
  ' * Extracts a directory which contains entries on which command event was\n' +
    ' * dispatched.',
  ' * Returns VolumeInfo from the current target for commands, based on |element|.\n' +
    ' * It can be from directory tree (clicked item or selected item), or from file\n' +
    ' * list selected items; or null if can determine it.',
  " * Sets the command as visible only when the current volume is drive and it's\n" +
    ' * running as a normal app, not as a modal dialog.\n' +
    " * NOTE: This doesn't work for directory tree menu, because user can right-click\n" +
    ' * on any visible volume.',
  ' * Sets the default handler for the commandId and prevents handling\n' +
    ' * the keydown events for this command. Not doing that breaks relationship\n' +
    ' * of original keyboard event and the command. WebKit would handle it\n' +
    ' * differently in some cases.',
  ' * Returns a directory entry when only one entry is selected and it is\n' +
    ' * directory. Otherwise, returns null.\n' +
    ' * @param selection Instance of FileSelection.\n' +
    ' * @return Directory entry which is selected alone.',
  ' * Returns true if the given entry is the root entry of the volume.\n' +
    ' * @param volumeManager\n' +
    ' * @param entry Entry or a fake entry.\n' +
    ' * @return True if the entry is a root entry.',
  ' * Returns true if the given event was triggered by the selection menu button.\n' +
    ' * @param event Command event.\n' +
    ' * @return True if the event was triggered by the selection menu button.',
  " * If entry is fake/invalid/non-interactive/root, we don't show menu items\n" +
    ' * intended for regular entries.\n' +
    ' * @param volumeManager\n' +
    ' * @param entry Entry or a fake entry.\n' +
    ' * @return True if we should show the menu items for regular entries.',
  ' * Returns whether all of the given entries have the given capability.\n' +
    ' *\n' +
    ' * @param fileManager CommandHandlerDeps.\n' +
    ' * @param entries List of entries to check capabilities for.\n' +
    ' * @param capability Name of the capability to check for.',
  ' * Checks if the handler should ignore the current event, eg. since there is\n' +
    ' * a popup dialog currently opened.\n' +
    ' *\n' +
    ' * @return True if the event should be ignored, false otherwise.',
  ' * Returns true if all entries is inside Drive volume, which includes all Drive\n' +
    ' * parts (Shared Drives, My Drive, Shared with me, etc).',
  ' * Returns true if all entries descend from the My Drive root (e.g. not located\n' +
    ' * within Shared with me or Shared drives).',
  ' * Returns true if the current root is Trash. Items in Trash are a fake\n' +
    ' * representation of a file + its metadata. Some actions are infeasible and\n' +
    ' * items should be restored to enable these actions.',
  ' * Extracts entry on which command event was dispatched.',
  ' * Returns true if the current volume is interactive.',
  ' * Returns true if any entry belongs to a non-interactive volume.'
]
file_rename.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file should contain renaming utility functions used only\n' +
    ' * by the files app frontend.',
  ' * Verifies name for file, folder, or removable root to be created or renamed.\n' +
    ' * Names are restricted according to the target filesystem.\n' +
    ' *\n' +
    ' * @param entry The entry to be named.\n' +
    ' * @param name New file, folder, or removable root name.\n' +
    ' * @param areHiddenFilesVisible Whether to report hidden file name errors or\n' +
    ' *     not.\n' +
    ' * @param volumeInfo Volume information about the target entry.\n' +
    ' * @param isRemovableRoot Whether the target is a removable root.\n' +
    ' * @return Fulfills on success, throws error message otherwise.',
  ' * Verifies the user entered name for external drive to be\n' +
    ' * renamed to. Name restrictions must correspond to the target filesystem\n' +
    ' * restrictions.\n' +
    ' *\n' +
    ' * It also verifies that name length is in the limits of the filesystem.\n' +
    ' *\n' +
    ' * This function throws if the new label is invalid, else it completes.\n' +
    ' *\n' +
    ' * @param name New external drive name.',
  ' * Verifies the user entered name for file or folder to be created or\n' +
    ' * renamed to. Name restrictions must correspond to File API restrictions\n' +
    ' * (see DOMFilePath::isValidPath). Curernt WebKit implementation is\n' +
    ' * out of date (spec is\n' +
    ' * http://dev.w3.org/2009/dap/file-system/file-dir-sys.html, 8.3) and going\n' +
    ' * to be fixed. Shows message box if the name is invalid.\n' +
    ' *\n' +
    ' * It also verifies if the name length is in the limit of the filesystem.\n' +
    ' *\n' +
    ' * @param parentEntry The entry of the parent directory.\n' +
    ' * @param name New file or folder name.\n' +
    ' * @param areHiddenFilesVisible Whether to report the hidden file name error or\n' +
    ' *     not.\n' +
    ' * @return Fulfills on success, throws error message otherwise.',
  ' * Renames file, folder, or removable root with newName.\n' +
    ' * @param entry The entry to be renamed.\n' +
    ' * @param newName The new name.\n' +
    ' * @param volumeInfo Volume information about the target entry.\n' +
    ' * @param isRemovableRoot Whether the target is a removable root.\n' +
    ' * @return Resolves the renamed entry if successful, else throws error message.',
  ' * Renames the entry to newName.\n' +
    ' * @param entry The entry to be renamed.\n' +
    ' * @param newName The new name.\n' +
    ' * @return Resolves the renamed entry if successful, else throws error message.',
  ' * Converts DOMError response from renameEntry() to error message.'
]
file_selection.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The current selection object.',
  ' * This object encapsulates everything related to current selection.',
  ' * Delay in milliseconds before recalculating the selection in case the\n' +
    ' * selection is changed fast, or there are many items. Used to avoid freezing\n' +
    ' * the UI.',
  ' * Number of items in the selection which triggers the update delay. Used to\n' +
    ' * let the Material Design animations complete before performing a heavy task\n' +
    ' * which would cause the UI freezing.'
]
file_tasks.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Office file handlers UMA values (must be consistent with OfficeFileHandler in\n' +
    ' * tools/metrics/histograms/enums.xml).',
  ' * Represents a collection of available tasks to execute for a specific list\n' +
    ' * of entries.',
  ' Dialog types to show a task picker.',
  ' Office file extensions.'
]
file_tasks_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mock chrome APIs.',
  ' Mock to keep track of the calls to metricsPrivate.',
  ' Mock task history.',
  ' Mock file transfer controller.',
  ' Mock directory change tracker.',
  ' Fake url for mounted ZIP file.',
  ' Panel IDs for ZIP mount operations.',
  ' Panel IDs for ZIP mount errors.',
  ' Set up test components.',
  ' * Fail with an error message.\n' +
    ' * @param message The error message.\n' +
    ' * @param details Optional details.',
  ' Returns mocked file manager components.',
  ' * Returns a promise that resolves when the showHtml method of alert dialog is\n' +
    ' * called with the expected title and text.',
  ' * Returns a promise that resolves when the task picker is called.',
  ' * Returns a promise that resolves when showImportCrostiniImageDialog is called.',
  ' Tests opening a .exe file.',
  ' Tests opening a .dmg file.',
  ' * Tests opening a .crx file.',
  ' Tests opening a .rtf file.',
  ' * Tests opening the task picker with an entry that does not have a default app\n' +
    ' * but there are multiple apps that could open it.',
  ' * Tests opening the task picker with an entry that does not have a default app\n' +
    ' * but there are multiple apps that could open it. The app with the most recent\n' +
    ' * task execution order should execute.',
  ' * Tests opening a .deb file. The crostini linux package install dialog should\n' +
    ' * be called.',
  ' * Tests opening a .tini file. The import crostini image dialog should be\n' +
    ' * called.',
  ' * Checks that the function that returns a file type for file entry handles\n' +
    ' * correctly identifies files with known and unknown extensions.',
  ' * Checks that the progress center is properly updated when mounting archives\n' +
    ' * successfully.',
  ' * Checks that the progress center is properly updated when mounting an archive\n' +
    ' * resolves with an error.',
  ' * Checks that the progress center is properly updated when the password prompt\n' +
    ' * for an encrypted archive is canceled.',
  ' * Checks that the progress center is properly updated when mounting an\n' +
    ' * encrypted archive.'
]
file_transfer_controller.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Global (placed in the window object) variable name to hold internal\n' +
    ' * file dragging information. Needed to show visual feedback while dragging\n' +
    ' * since DataTransfer object is in protected state. Reachable from other\n' +
    ' * file manager instances.',
  ' * The key under which we store if the file content is missing. This property\n' +
    ' * tells us if we are attempting to use a drive file while Drive is\n' +
    ' * disconnected.',
  ' * The key under which we store the list of dragged files. This allows us to\n' +
    ' * set the correct drag effect.',
  ' * The key under which we store the root of the file system of files on which\n' +
    ' * we operate. This allows us to set the correct drag effect.',
  ' * The key under which we store the flag denoting that the dragged file is\n' +
    ' * encrypted with Google Drive CSE. Given that decrypting of such files is not\n' +
    ' * implemented at the moment (May 2023), this allows us to unset the drag effect\n' +
    ' * when moving such a file outside Drive.',
  ' * Confirmation message types.',
  " * ConfirmationCallback called when operation requires user's confirmation. The\n" +
    ' * operation will be executed if the return value resolved to true.',
  " * Extracts the `DataTransfer` from a generic event ensuring it's type asserted.",
  ' * The type of a file operation error.',
  ' * Error class used to report problems with a copy operation.\n' +
    ' * If the code is UNEXPECTED_SOURCE_FILE, data should be a path of the file.\n' +
    ' * If the code is TARGET_EXISTS, data should be the existing Entry.\n' +
    ' * If the code is FILESYSTEM_ERROR, data should be the FileError.',
  ' * Resolves a path to either a DirectoryEntry or a FileEntry, regardless of\n' +
    ' * whether the path is a directory or file.\n' +
    ' *\n' +
    ' * @param root The root of the filesystem to search.\n' +
    ' * @param path The path to be resolved.\n' +
    ' * @return Promise fulfilled with the resolved entry, or rejected with\n' +
    ' *     FileError.',
  ' * Checks if an entry exists at |relativePath| in |dirEntry|.\n' +
    ' * If exists, tries to deduplicate the path by inserting parenthesized number,\n' +
    ' * such as " (1)", before the extension. If it still exists, tries the\n' +
    ' * deduplication again by increasing the number.\n' +
    ' * For example, suppose "file.txt" is given, "file.txt", "file (1).txt",\n' +
    ' * "file (2).txt", ... will be tried.\n' +
    ' *\n' +
    ' * @param dirEntry The target directory entry.\n' +
    ' * @param optSuccessCallback Callback run with the deduplicated path on success.\n' +
    ' * @param optErrorCallback Callback run on error.\n' +
    ' * @return  Promise fulfilled with available path.',
  ' * Filters the entry in the same directory\n' +
    ' *\n' +
    ' * @param sourceEntries Entries of the source files.\n' +
    ' * @param targetEntry The destination entry of the target directory.\n' +
    ' * @param isMove True if the operation is "move", otherwise (i.e. if the\n' +
    ' *     operation is "copy") false.\n' +
    ' * @return Promise fulfilled with the filtered entry. This is not rejected.',
  ' * Writes file to destination dir. This function is called when an image is\n' +
    ' * dragged from a web page. In this case there is no FileSystem Entry to copy\n' +
    ' * or move, just the JS File object with attached Blob. This operation does\n' +
    ' * not use EventRouter or queue the task since it is not possible to track\n' +
    ' * progress of the FileWriter.write().\n' +
    ' *\n' +
    ' * @param file The file entry to be written.\n' +
    ' * @param dir The destination directory to write to.',
  ' * Container for defining a copy/move operation.',
  ' * Converts list of urls to list of Entries with granting R/W permissions to\n' +
    ' * them, which is essential when pasting files from a different profile.',
  ' * Checks if the specified set of allowed effects contains the given effect.\n' +
    ' * See: http://www.w3.org/TR/html5/editing.html#the-datatransfer-interface'
]
file_transfer_controller_unittest.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests isDocumentWideEvent_.',
  ' * Tests canCutOrDrag() respects non-modifiable entries like Downloads.',
  ' * Tests preparePaste() with FilesApp fs/sources and standard DataTransfer.',
  " * Tests the drag-and-drop's `isDropTargetAllowed_` utility function, which\n" +
    ' * relies on the local storage that mirrors the data stored in the clipboard,\n' +
    ' * and on the "disabled" state of the target entry in the store.\n' +
    ' *\n' +
    ' * Note: Setting the drop target used to infer the dragged entries from the\n' +
    ' * selection handler, which is not valid when entries are dragged from one Files\n' +
    ' * window to another.',
  ' * Size of directory.',
  ' * Creates test file system.\n' +
    ' * @param id File system Id.\n' +
    ' * @param entries Map of entry paths and their size.\n' +
    ' *     If the entry size is DIRECTORY_SIZE, the entry is a directory.',
  ' * Tests the resolvePath() function.',
  ' * Tests the deduplicatePath() function.',
  ' * Test writeFile() with file dragged from browser.'
]
file_type_filters_controller.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * This class controls wires file-type filter UI and the filter settings in\n' +
    ' * Recents view.'
]
file_type_filters_controller_unittest.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  '',
  '',
  '',
  '',
  ' * Tests that creating FileTypeFiltersController generates four buttons in the\n' +
    ' * given container element.',
  ' * Tests that initial states of all buttons inside container are inactive\n' +
    ' * except the first button (button with label "All").',
  ' * Tests that click events can toggle button state (active <-> inactive),\n' +
    ' * if the button is already active, make it inactive and make "All" button\n' +
    ' * active.',
  ' * Tests that only one button can be active.\n' +
    ' * If button_1 is clicked when button_0 is active, button_0 becomes inactive and\n' +
    ' * button_1 becomes active.',
  ' * Tests that container element is visible only when the current directory is\n' +
    ' * Recents view.',
  " * Tests that button's active state is reset when the user leaves\n" +
    ' * Recents view and go back again.',
  " * Tests that the active state of each button is reflected to the Recent entry's\n" +
    ' * fileCategory property, and DirectoryModel.rescan() is called after the\n' +
    " * Recent entry's property is modified."
]
file_watcher.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Watches for changes in the tracked directory.'
]
folder_shortcuts_data_model.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * The drive mount path used in the persisted storage. It must be '/drive'.",
  ' * Model for the folder shortcuts. This object is ArrayDataModel-like\n' +
    ' * object with additional methods for the folder shortcut feature.\n' +
    ' *\n' +
    ' * Items are always sorted by URL.'
]
gear_menu_controller.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
guest_os_controller.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * GuestOsController handles the foreground UI relating to Guest OSs.'
]
holding_space_util.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Utility methods for the holding space feature.',
  ' * Key in localStorage to store the time (in milliseconds) of the first pin to\n' +
    ' * holding space.',
  ' * Key in localStorage to store the time (in milliseconds) of the first showing\n' +
    ' * of the holding space welcome banner.',
  ' Gets the volume types for which the holding space feature is allowed.',
  ' * Returns a promise which resolves to the time (in milliseconds) of the first\n' +
    ' * pin to holding space. If no pin has occurred, resolves to `undefined`.',
  ' * Returns a promise which resolves to the time (in milliseconds) of the first\n' +
    ' * showing of the holding space welcome banner. If no showing has occurred,\n' +
    ' * resolves to `undefined`.',
  ' * If not previously stored, stores now (in milliseconds) as the time of the\n' +
    ' * first pin to holding space.',
  ' * If not previously stored, stores now (in milliseconds) as the time of the\n' +
    ' * first showing of the holding space welcome banner.'
]
last_modified_controller.ts [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Controls last modified column in the file table.'
]
launch_param.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Parsed options used to launch a new Files app window.'
]
list_thumbnail_loader.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Thumbnail loaded event.',
  ' * A thumbnail loader for list style UI.\n' +
    ' *\n' +
    ' * ListThumbnailLoader is a thumbnail loader designed for list style ui. List\n' +
    ' * thumbnail loader loads thumbnail in a viewport of the UI. ListThumbnailLoader\n' +
    ' * is responsible to return dataUrls of thumbnails and fetch them with proper\n' +
    ' * priority.',
  ' * Volume type for testing.',
  ' * A class to represent thumbnail data.',
  ' * A task to load thumbnail.',
  ' * Minimum delay of milliseconds before another retry for fetching a\n' +
    ' * thumbnmail from EXIF after failing with an IO error. In milliseconds.\n' +
    ' *'
]
list_thumbnail_loader_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Story test for list thumbnail loader.',
  ' * Do not enqueue prefetch task when high priority range is at the end of list.',
  ' * Test case for thumbnail fetch error. In this test case, thumbnail fetch for\n' +
    ' * entry 2 is failed.',
  ' * Test case for handling sorted event in data model.',
  ' * Test case for handling change event in data model.',
  ' * Test case for MTP volume.',
  ' * Test case that directory scan is running.',
  ' * Test case for EXIF IO error and retrying logic.'
]
main.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Start point for Files app.'
]
main_window_component.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Component for the main window.\n' +
    ' *\n' +
    ' * The class receives UI events from UI components that does not have their own\n' +
    ' * controller, and do corresponding action by using models/other controllers.\n' +
    ' *\n' +
    " * The class also observes model/browser API's event to update the misc\n" +
    ' * components.',
  ' Adds an isFocused method to the current window object.'
]
byte_reader.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
content_metadata_provider.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' @final'
]
content_metadata_provider_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' clang-format on'
]
dlp_metadata_provider.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Metadata provider for FileEntry#getMetadata.\n' +
    ' * Returns Data Leak Prevention (DLP) status of the file, such as whether the\n' +
    ' * file is restricted or not.\n' +
    ' * @final'
]
dlp_metadata_provider_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests that DlpMetadataProvider filters out fake entries before calling\n' +
    " * `getDlpMetadata()` because the private API fails with entries that aren't\n" +
    ' * from FileSystem API. For fake entries the provider should return an empty\n' +
    ' * metadata object.'
]
exif_constants.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Exif marks.',
  ' * Exif align.',
  ' * Exif tag.',
  ' * Type definition of exif entry.'
]
exif_parser.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' @final',
  ' * Map from the exif orientation value to the horizontal scale value.',
  ' * Map from the exif orientation value to the vertical scale value.',
  ' * Map from the exif orientation value to the rotation value.'
]
exif_parser_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Creates a directory with specified tag. This method only supports string\n' +
    ' * format tag, which is longer than 4 characters.\n' +
    ' * @param bytes Bytes to be written.\n' +
    ' * @param tag An exif entry which will be written.',
  ' * Parses exif data bytes (with logging) and returns the parsed tags.\n' +
    ' * @param bytes Bytes to be read.\n' +
    ' * @return Tags.',
  ' * Tests that parsed exif strings have a null character termination.'
]
external_metadata_provider.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Metadata provider for FileEntry#getMetadata.\n' +
    ' * TODO(hirono): Rename thumbnailUrl with externalThumbnailUrl.\n' +
    ' * @final'
]
external_metadata_provider_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Mock chrome APIs.'
]
file_system_metadata_provider.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Metadata provider for FileEntry#getMetadata.\n * @final'
]
file_system_metadata_provider_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
id3_parser.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * ID3 parser.'
]
id3_parser_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_parsers.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Base class for image metadata parsers that only need to look at a short\n' +
    ' * fragment at the start of the file.',
  ' * Parser for the header of png files.',
  ' * Parser for the header of bmp files.',
  ' * Parser for the header of gif files.',
  ' * Parser for the header of webp files.',
  ' * Parser for the header of .ico icon files.'
]
metadata_cache_item.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Cache of metadata for a FileEntry.',
  ' * Cache of metadata for a property.'
]
metadata_cache_item_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
metadata_cache_set.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Custom event dispatched by the metadata cache set when results from metadata\n' +
    ' * provider are set on it.',
  ' * A collection of MetadataCacheItem objects. This class acts as a map from file\n' +
    ' * entry URLs to metadata items. You can store metadata for entries, you can\n' +
    ' * retrieve metadata for entries, clear the entire cache, or just selected\n' +
    ' * entries. In addition, you can generate MetadataRequests and start them (i.e.,\n' +
    ' * put them in the LOADING state).'
]
metadata_cache_set_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
metadata_dispatcher.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper function to type entries as FileEntry. We redefine it here because\n' +
    ' importing entry_utils.js has some transitive side effects that access objects\n' +
    ' not accessible in a shared worker.',
  ' * Dispatches metadata requests to the correct parser.',
  ' This interface and the following self type assertion is needed as we\n' +
    ' currently use the same tsconfig to build this as with the rest of Files App.\n' +
    ' TODO(b/289003444): Use a separate tsconfig to build this file with webworker\n' +
    ' definitions, and then remove this interface and the following type assertion.',
  " Webworker spec says that the worker global object is called self.  That's\n" +
    ' a terrible name since we use it all over the chrome codebase to capture\n' +
    " the 'this' keyword in lambdas."
]
metadata_item.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Metadata of a file.'
]
metadata_model.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
metadata_model_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Returns a property of a Metadata result object.'
]
metadata_parser.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Base class for image metadata parsers.'
]
metadata_provider.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
metadata_request.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_metadata.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * Mock metadata provider that doesn't actually do anything just so\n" +
    " * MockMetadataModel has an object it can pass to MetadataModel's constructor.",
  ' * Returns a mock of metadata model.'
]
mpeg_parser.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
multi_metadata_provider.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' @final'
]
multi_metadata_provider_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests that we only use ExternalMetadataProvider for a DocumentsProvider file.'
]
thumbnail_model.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Metadata containing thumbnail information.'
]
thumbnail_model_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
metadata_box_controller.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Controller of metadata box.\n' +
    ' * This should be initialized with |init| method.'
]
metadata_update_controller.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Number of milliseconds in a day.',
  ' Controller for list contents update.'
]
metrics_start.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Metrics calls to start measurement of script loading.  Include\n' +
    ' * this as the first script in main.html (i.e. after the common scripts that\n' +
    ' * define the metrics namespace).'
]
mock_actions_model.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
mock_directory_model.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @return fake for unittests.',
  ' * @return fake for unittests.'
]
mock_folder_shortcut_data_model.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Mock FolderShortcutDataModel.'
]
mock_thumbnail_loader.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Mock thumbnail loader.'
]
naming_controller.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(b/289003444): Fix this by using proper custom element.',
  ' * Controller to handle naming.'
]
navigation_uma.ts [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Records a UMA when a new directory is navigated to.'
]
one_drive_controller.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * OneDriveController handles the foreground UI relating to ODFS placeholder.'
]
path_component.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * File path component.\n' +
    ' *\n' +
    ' * File path can be represented as a series of path components. Each component\n' +
    ' * has its name used as a visible label and URL which point to the component\n' +
    ' * in the path.\n' +
    ' * PathComponent.computeComponentsFromEntry computes an array of PathComponent\n' +
    ' * of the given entry.'
]
path_component_unittest.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
providers_model.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * An item in the model. Represents a single providing extension.',
  ' * Model for providing extensions. Providers methods for fetching lists of\n' +
    ' * providing extensions as well as performing operations on them, such as\n' +
    ' * requesting a new mount point.'
]
providers_model_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * Providing extension which has a mounted file system and doesn't support\n" +
    ' * multiple mounts.',
  " * Providing extension which has a not-mounted file system and doesn't support\n" +
    ' * multiple mounts.',
  ' * Providing extension which has a mounted file system and supports multiple\n' +
    ' * mounts.',
  ' * Providing extension which has a not-mounted file system of FILE source.\n' +
    ' * Such providers are mounted via file handlers.',
  ' * Providing extension which has a not-mounted file system of DEVICE source.\n' +
    ' * Such providers are not mounted by users: they automatically mount when the\n' +
    ' * DEVICE is attached.'
]
quick_view_controller.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Controller for QuickView.',
  ' * List of local volume types.\n' +
    ' *\n' +
    ' * In this context, "local" means that files in that volume are directly\n' +
    ' * accessible from the Chrome browser process by Linux VFS paths. In this\n' +
    ' * regard, media views are NOT local even though files in media views are\n' +
    ' * actually stored in the local disk.\n' +
    ' *\n' +
    ' * Due to access control of WebView, non-local files can not be previewed\n' +
    ' * with Quick View unless thumbnails are provided (which is the case with\n' +
    ' * Drive).',
  ' * List of unsupported image subtypes excluded from being displayed in\n' +
    ' * QuickView. An "unsupported type" message is shown instead.'
]
quick_view_model.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * Quick view model that doesn't fit into properties of quick view element."
]
quick_view_uma.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * UMA exporter for Quick View.',
  ' * In which way quick view was opened.',
  ' * The order should be consistent with the definition in histograms.xml.'
]
scan_controller.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Handler for scan related events of DirectoryModel.'
]
selection_menu_controller.ts [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
sort_menu_controller.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
spinner_controller.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Controller for spinners. Spinner requests can be stacked. Eg. if show()\n' +
    ' * is called 3 times, the hide callback has to be called 3 times to make the\n' +
    ' * spinner invisible.'
]
spinner_controller_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
task_controller.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Type of the object stashed in the Map extractTasks_.',
  ' Type of the task in the dropdown menu.',
  ' Item in the dropdown menu.',
  ' * Creates dropdown item based on task.\n' +
    ' * @param isDefault Mark the item as default item.'
]
task_controller_unittest.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mock chrome APIs.',
  ' VolumeInfo for Downloads volume',
  ' Set up test components.',
  ' * Setup test case fileManagerPrivate.',
  ' * Tests that executeEntryTask() runs the expected task.',
  ' * Tests that getFileTasks() does not call .fileManagerPrivate.getFileTasks()\n' +
    ' * multiple times when the selected entries are not changed.',
  ' * Tests the file tasks in the store are updated each time the selected entries\n' +
    ' * are changed, including when there are no selected entries.',
  ' * Tests that getFileTasks() should always return the promise whose FileTasks\n' +
    ' * correspond to FileSelectionHandler.selection at the time getFileTasks() is\n' +
    ' * called.',
  ' * Tests that changing the file selection during a getFileTasks() call causes\n' +
    ' * the getFileTasks() promise to reject.'
]
task_history.ts [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Key used to store the task history in local storage.',
  ' * TaskHistory object keeps track of the history of task executions. Recent\n' +
    ' * history is stored in local storage.'
]
thumbnail_loader.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Loads a thumbnail as an <img> using provided url.',
  ' * In percents (0.0 - 1.0), how much area can be cropped to fill an image\n' +
    ' * in a container, when loading a thumbnail in FillMode.AUTO mode.\n' +
    ' * The default 30% value allows to fill 16:9, 3:2 pictures in 4:3 element.',
  ' * Type of displaying a thumbnail within a box.',
  ' * Load target of ThumbnailLoader.',
  " * Maximum thumbnail's width when generating from the full resolution image.",
  " * Maximum thumbnail's height when generating from the full resolution image."
]
thumbnail_loader_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Generates a data url of a sample image for testing.\n' +
    ' *\n' +
    ' * @param width Width.\n' +
    ' * @param height Height.\n' +
    ' * @return Data url of a sample image.',
  ' * Installs a mock ImageLoader with a compatible load method.\n *'
]
toolbar_controller.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper function that extract common pattern for getting commands associated\n' +
    ' with the toolbar and also deals with lack of return type information in\n' +
    ' assertInstaneof function.',
  ' * This class controls wires toolbar UI and selection model. When selection\n' +
    ' * status is changed, this class changes the view of toolbar. If cancel\n' +
    ' * selection button is pressed, this class clears the selection.'
]
a11y_announce.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
action_model_ui.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
actions_submenu.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
actions_submenu_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
dlp_restricted_banner.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The custom element tag name.',
  ' * A banner that shows that some of the files or folders in the current\n' +
    ' * directory are restricted by Data Leak Prevention (DLP).'
]
dlp_restricted_banner_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Test that the banner is shown in all root types.'
]
drive_bulk_pinning_banner.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The custom element tag name.',
  ' * A banner that prompts users to bulk pin their files.'
]
drive_bulk_pinning_banner_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Gets the <drive-bulk-pinning-banner> element.',
  ' Gets the <xf-bulk-pinning-dialog> element.',
  ' Test that the "Get started" button can be clicked, and that clicking it opens\n' +
    ' the bulk-pinning activation dialog.'
]
drive_low_individual_space_banner.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The custom element tag name.',
  ' * A banner that shows a warning when the remaining space on a Google Drive goes\n' +
    ' * below 20%. This is only shown if the user has navigated to the My drive under\n' +
    ' * the Google Drive root excluding other directories such as Computers or\n' +
    ' * Shared drives.'
]
drive_low_shared_drive_space_banner.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The custom element tag name.',
  ' * A banner that shows a warning when the remaining space on a Google Shared\n' +
    ' * Drive goes below 20%.'
]
drive_offline_pinning_banner.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The custom element tag name.',
  ' * A banner that shows users they can pin Docs / Sheets / Slides in Google Drive\n' +
    ' * and have them available offline.'
]
drive_out_of_individual_space_banner.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The custom element tag name.',
  " * An error banner displayed when the user runs out of their Google Drive's\n" +
    ' * individual quota. This is only shown if the user has navigated to the My\n' +
    ' * drive under the Google Drive root excluding other directories such as\n' +
    ' * Computers or Shared drives.'
]
drive_out_of_organization_space_banner.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The custom element tag name.',
  " * An error banner displayed when the user's Google Drive organization runs\n" +
    ' * out of quota. This is only shown if the user has navigated to the My drive\n' +
    ' * under the Google Drive root excluding other directories such as Computers or\n' +
    ' * Shared drives.'
]
drive_out_of_shared_drive_space_banner.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The custom element tag name.',
  " * An error banner displayed when the user runs out of their Google Drive's\n" +
    ' * individual quota. This is only shown if the user has navigated to the My\n' +
    ' * drive under the Google Drive root excluding other directories such as\n' +
    ' * Computers or Shared drives.'
]
drive_welcome_banner.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The custom element tag name.',
  ' * A banner that shows when a user navigates to the Google Drive volume. This\n' +
    ' * banner appears for all children of the Google Drive root (e.g. My Drive,\n' +
    ' * Shared with me, Offline etc.)'
]
educational_banner.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * EducationalBanner is a type of banner that is the second highest priority\n' +
    ' * type of banner (below WarningBanner). It is used to highlight new features or\n' +
    ' * contextually relevant information in specific part of the Files app.\n' +
    ' *\n' +
    ' * To implement an EducationalBanner, extend from this banner and override the\n' +
    ' * allowedVolumes method to define the VolumeType you want the banner to be\n' +
    ' * shown on. All other configuration elements are optional and can be found\n' +
    ' * documented on the Banner externs.\n' +
    ' *\n' +
    ' * For example the following banner will show when a user navigates to the\n' +
    ' * Downloads volume type:\n' +
    ' *\n' +
    ' *    class ConcreteEducationalBanner extends EducationalBanner {\n' +
    ' *      allowedVolumes() {\n' +
    ' *        return [{type: VolumeType.DOWNLOADS}];\n' +
    ' *      }\n' +
    ' *    }\n' +
    ' *\n' +
    ' * Create a HTML template with the same file name as the banner and override\n' +
    ' * the text using slots with the content that you want:\n' +
    ' *\n' +
    ' *    <educational-banner>\n' +
    ' *      <span slot="title">Main banner text</span>\n' +
    ' *      <span slot="subtitle">Extra information that appears smaller</span>\n' +
    ' *      <cr-button slot="extra-button" href="{{url_to_navigate}}">\n' +
    ' *        Extra button text\n' +
    ' *      </cr-button>\n' +
    ' *    </educational-banner>\n' +
    ' *\n' +
    ' * There is also an optional HTML attribute that can be added to the\n' +
    ' * extra-button slot called dismiss-banner-when-clicked that will dismiss the\n' +
    ' * banner forever when the extra button is pressed. Example:\n' +
    ' *\n' +
    ' *      <cr-button\n' +
    ' *          slot="extra-button"\n' +
    ' *          href="{{url_to_navigate}}"\n' +
    ' *          dismiss-banner-when-clicked>\n' +
    ' *        Extra button text\n' +
    ' *      </cr-button>'
]
educational_banner_unittest.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Test that the dismiss handler bubbles the correct event on click.',
  ' * Test that the default dismiss button from the educational banner successfully\n' +
    ' * emits the BANNER_DISMISSED_FOREVER event if no dismiss button has been\n' +
    ' * supplied.',
  ' * Test that the additional button can be set and the link is visited when the\n' +
    ' * button is clicked.',
  ' * Test that the default configuration is set on the warning banners to ensure\n' +
    ' * any overridden banners have sensible configuration.',
  ' * Test that if extra button slot has attribute dismiss-banner-when-clicked the\n' +
    ' * banner emits a DISMISS_FOREVER event.',
  ' * Test that when the custom attribute to dismiss a banner emits a\n' +
    ' * DISMISS_FOREVER event, the banner instance attached is the correct instance.'
]
files_migrating_to_cloud_banner.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The custom element tag name.',
  ' * A banner that shows a warning when SkyVault policies are set and the user\n' +
    " * still has some files stored locally that are being moved to the cloud. It's\n" +
    ' * only shown in local directories (My Files/).'
]
google_one_offer_banner.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview The Google One banner highlights the benefit for Chromebook\n' +
    ' * users when navigating to Drive.',
  ' * The custom element tag name.',
  ' * User actions of GoogleOneOfferBanner.',
  ' * GoogleOneOfferBanner shows when the user navigates to the Google Drive\n' +
    ' * volume. This banner will be shown instead of DriveWelcomeBanner if\n' +
    ' * GoogleOneOfferFilesBanner flag is on.'
]
holding_space_welcome_banner.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The custom element tag name.',
  ' * A banner that shows when a user navigates to a volume that allows pinning\n' +
    ' * of files to the shelf. Highlights to the user how to use the Holding space\n' +
    ' * feature.'
]
invalid_usb_filesystem_banner.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The custom element tag name.',
  ' * A banner that shows is a removable device is plugged in and it has a\n' +
    ' * filesystem that is either unknown or unsupported. It includes an action\n' +
    ' * button for the user to format the device.'
]
local_disk_low_space_banner.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The custom element tag name.',
  ' * A banner that shows a warning when the remaining space on a local disk goes\n' +
    ' * below 1GB. This is only shown if the user has navigated to the My files /\n' +
    ' * Downloads directories (and any children).'
]
photos_welcome_banner.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The custom element tag name.',
  ' * A banner that shows when a user navigates to the Google Photos documents\n' +
    ' * provider. Shows helpful information about using Photos on ChromeOS.'
]
shared_with_crostini_pluginvm_banner.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The custom element tag name.',
  ' * A banner that shows if the current navigated directory has been shared with\n' +
    ' * Crostini or PluginVM.'
]
state_banner.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * State banner is a type of banner that indicates the Files app has reached a\n' +
    ' * certain state, e.g. the current folder is shared with Linux.\n' +
    ' *\n' +
    ' * To implement an StateBanner, extend from this banner and override the\n' +
    ' * allowedVolumes method to define the VolumeType you want the banner to be\n' +
    ' * shown on. All other configuration elements are optional and can be found\n' +
    ' * documented on the Banner externs.\n' +
    ' *\n' +
    ' * For example the following banner will show when a user navigates to the\n' +
    ' * Downloads volume type:\n' +
    ' *\n' +
    ' *    class ConcreteStateBanner extends StateBanner {\n' +
    ' *      allowedVolumes() {\n' +
    ' *        return [{type: VolumeType.DOWNLOADS}];\n' +
    ' *      }\n' +
    ' *    }\n' +
    ' *\n' +
    ' * Create a HTML template with the same file name as the banner and override\n' +
    ' * the text using slots with the content that you want:\n' +
    ' *\n' +
    ' *    <state-banner>\n' +
    ' *      <span slot="text">Main banner text</span>\n' +
    ' *      <cr-button slot="extra-button" href="{{url_to_navigate}}">\n' +
    ' *        Extra button text\n' +
    ' *      </cr-button>\n' +
    ' *    </state-banner>'
]
state_banner_unittest.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Mocks out the chrome.fileManagerPrivate.openSettingsSubpage function to\n' +
    ' * enable interrogation of the subpage that was invoked.\n' +
    ' * @returns {{ restore: function(), getSubpage: (function(): string)}}',
  ' * Test that the additional button can be set and the link is visited when the\n' +
    ' * button is clicked.',
  ' * Test that the default configuration is set on the state banners to ensure\n' +
    ' * any overridden banners have sensible configuration.',
  ' * Test that extra buttons with a ChromeOS settings href utilise the\n' +
    ' * chrome.fileManagerPrivate.openSettingsSubpage appropriately. The prefix\n' +
    ' * chrome://os-settings/ should be stripped and the subpage passed through.',
  ' * Test that a href with no subpage, still calls visitURL as there is no\n' +
    ' * internal method to make the chrome://os-settings/ page appear except for\n' +
    ' * link capturing.',
  ' * Test that an extra-button with a command triggers an Event of the correct\n' +
    ' * type.'
]
trash_banner.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The custom element tag name.',
  ' * A banner that shows users navigating to their Trash directory that files in\n' +
    ' * the Trash directory are automatically removed after 30 days.'
]
types.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Events dispatched by concrete banners.',
  ' * Event source for BANNER_DISMISSED_FOREVER event.',
  ' * Helper const to define infinite time showing.',
  ' * An allowed volume defines a `VolumeType` that a banner should be shown on.',
  ' * An allowed root defines a `RootType` that a banner should be shown on.',
  ' * A union of the two above types to ensure either `root` or `type` is defined.',
  ' * The minimum free disk space ratio for the `RootType` before a banner should\n' +
    ' * be shown.',
  ' * A minimum free disk space size for a RootType before a banner should be\n' +
    ' * shown.',
  ' * A union of the above type to ensure either `minRatio` or `minSize` is shown.'
]
warning_banner.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * WarningBanner is a type of banner that is highest priority and is used to\n' +
    ' * showcase potential underlying issues for the filesystem (e.g. low disk space)\n' +
    ' * or that are contextually relevant (e.g. Google Drive is offline).\n' +
    ' *\n' +
    ' * To implement a WarningBanner, extend from this banner and override the\n' +
    ' * allowedVolumes method where you want the warning message shown. The\n' +
    ' * connectedCallback method can be used to set the warning text and an optional\n' +
    ' * link to provide more information. All other configuration elements are\n' +
    ' * optional and can be found documented on the Banner extern.\n' +
    ' *\n' +
    ' * For example the following banner will show when a user navigates to the\n' +
    ' * Downloads volume type:\n' +
    ' *\n' +
    ' *    class ConcreteWarningBanner extends WarningBanner {\n' +
    ' *      allowedVolumes() {\n' +
    ' *        return [{type: VolumeType.DOWNLOADS}];\n' +
    ' *      }\n' +
    ' *    }\n' +
    ' *\n' +
    ' * Create a HTML template with the same file name as the banner and override\n' +
    ' * the text using slots with the content that you want:\n' +
    ' *\n' +
    ' *    <warning-banner>\n' +
    ' *      <span slot="text">Warning Banner text</span>\n' +
    ' *      <cr-button slot="extra-button" href="{{url_to_navigate}}">\n' +
    ' *        Extra button text\n' +
    ' *      </cr-button>\n' +
    ' *    </warning-banner>'
]
warning_banner_unittest.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Test that the dismiss handler bubbles the correct event on click.',
  ' * Test that the additional button can be set and the link is visited when the\n' +
    ' * button is clicked.',
  ' * Test that the default configuration is set on the warning banners to ensure\n' +
    ' * any overridden banners have sensible configuration.'
]
combobutton.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This implements a combobutton control.',
  ' Internal interface used for ComboButton, it attaches the `data` to a MenuItem\n' +
    ' to read it back in the `MenuActivate` event.',
  ' * Creates a new combo button element.'
]
command.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview A command is an abstraction of an action a user can do in the\n' +
    ' * UI.\n' +
    ' *\n' +
    ' * When the focus changes in the document for each command a canExecute event\n' +
    ' * is dispatched on the active element. By listening to this event you can\n' +
    ' * enable and disable the command by setting the event.canExecute property.\n' +
    ' *\n' +
    ' * When a command is executed a command event is dispatched on the active\n' +
    ' * element. Note that you should stop the propagation after you have handled the\n' +
    ' * command if there might be other command listeners higher up in the DOM tree.',
  ' * Creates a new command element.',
  ' * Dispatches a canExecute event on the target.\n' +
    ' * @param command The command that we are testing for.\n' +
    ' * @param target The target element to dispatch the event on.',
  ' * The command managers for different documents.',
  ' * Keeps track of the focused element and updates the commands when the focus\n' +
    ' * changes.',
  ' * The event type used for canExecute events.',
  ' Event triggered when a Command is executed.',
  ' These event can bubble, so we can listen to it in any element parent of the\n' +
    ' <command>.'
]
command_unittest.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
commandbutton.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This implements a common button control, bound to command.',
  ' * Creates a new button element.'
]
context_menu_handler.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Handles context menus.',
  ' * Use this interface to define an element that also might have a context menu\n' +
    ' * attached, e.g. HTMLInputElement & WithContextMenu.',
  ' * The singleton context menu handler.'
]
context_menu_handler_unittest.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests that a keydown event that is not intended for the context menu will not\n' +
    ' * be consumed by the context menu.'
]
default_task_dialog.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * DefaultTaskDialog contains a message, a list box, an ok button, and a\n' +
    ' * cancel button.\n' +
    ' * This dialog should be used as task picker for file operations.'
]
dialog_footer.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Obtains the label of OK button for the dialog type.\n' +
    ' * @param dialogType Dialog type.\n' +
    ' * @return OK button label.',
  ' * Footer shown when the Files app is opened as a file/folder selecting dialog.'
]
dialogs.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Number of milliseconds animation is expected to take, plus some margin for\n' +
    ' * error.',
  ' AlertDialog contains just a message and an ok button.',
  ' ConfirmDialog contains a message, an ok button, and a cancel button.'
]
drag_selector.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Drag selector used on the file list or the grid table.',
  ' * Flag that shows whether the item is included in the selection or not.'
]
file_grid.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Align with CSS .grid-title.group-by-modificationTime.',
  ' Align with CSS .grid-title.group-by-isDirectory.',
  ' Align with CSS .grid-title ~ .grid-title',
  ' * FileGrid constructor.\n' +
    ' *\n' +
    ' * Represents grid for the Grid View in the File Manager.',
  ' * Grid size, in "px".',
  ' * Selection controller for the file grid.'
]
file_grid_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Returns the element used to parent the file grid. The element is\n' +
    ' * attached to the body, and styled for visual display.',
  ' Set up test components.',
  ' Force round number heights to simplify the math in the test.',
  ' Test functions related to item position: getItemRow(), getItemColumn(),\n' +
    ' getItemIndex(), getFirstItemInRow().',
  " Test FileGridSelectionController's getIndexAbove() and getIndexBelow()."
]
file_list_selection_model.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
file_list_selection_model_unittest.ts [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Verify that all selection and focus is dropped if all selected files get\n' +
    ' deleted.',
  ' Verify that all selection and focus is dropped only if all selected files get\n' +
    ' deleted.'
]
file_manager_dialog_base.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * This class is an extended class, to manage the status of the dialogs.'
]
file_manager_dialog_base_unittest.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
file_manager_ui.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * The root of the file manager's view managing the DOM of the Files app.",
  ' eslint-disable-next-line @typescript-eslint/naming-convention'
]
file_metadata_formatter.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Formatter class for file metadatas.'
]
file_table.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Custom column model for advanced auto-resizing.',
  ' * Customize the column header to decorate with a11y attributes that announces\n' +
    ' * the sorting used when clicked.\n' +
    ' *\n' +
    ' * @this {TableColumn} Bound by TableHeader before calling.\n' +
    ' * @param table Table being rendered.',
  ' * Minimum width of column. Note that is not marked private as it is used in the\n' +
    ' * unit tests.',
  ' * A helper class for performing resizing of columns.',
  ' * File list Table View.'
]
file_table_list.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Group Heading height, align with CSS #list-container .group-heading.',
  ' * File table list.',
  ' * Selection controller for the file table list.',
  " * Common item decoration for table's and grid's items.\n" +
    ' * @param li List item.\n' +
    ' * @param entry The entry.\n' +
    ' * @param metadataModel Cache to\n' +
    ' *     retrieve metadata.\n' +
    ' * @param volumeManager Used to retrieve VolumeInfo.',
  ' * Returns whether `entry` is blocked by DLP.\n' +
    ' *\n' +
    ' * Relies on the fact that volumeManager.isDisabled() can only be true for\n' +
    ' * dirs in file-saveas dialogs, while metadata.isRestrictedForDestination\n' +
    ' * can only be true for files in other types of select dialogs.\n' +
    ' * @param entry The entry.\n' +
    ' * @param metadataModel Used to retrieve isRestrictedForDestination value.\n' +
    " * @param volumeManager Used to retrieve VolumeInfo and check if it's disabled.",
  ' * Render the type column of the detail table.\n' +
    ' * @param doc Owner document.\n' +
    ' * @param entry The Entry object to render.\n' +
    ' * @param mimeType Optional mime type for the file.\n' +
    ' * @return Created element.',
  ' * Renders a div beside the row icon that is used to surface badges for\n' +
    ' * individual items in the grid and list view.\n' +
    ' * @param doc Owner document.',
  ' * Render filename label for grid and list view.\n' +
    ' * @param doc Owner document.\n' +
    ' * @param entry The Entry object to render.\n' +
    ' * @return The label element.',
  ' * Updates grid item or table row for the externalProps.\n' +
    ' * @param li List item.\n' +
    ' * @param entry The entry.\n' +
    ' * @param externalProps Metadata.\n' +
    ' * @param isTeamDriveRoot Whether the entry is a team drive root.',
  ' * Handles tap events on file list to change the selection state.\n' +
    ' *\n' +
    ' * @param e The browser mouse event.\n' +
    ' * @param index The index that was under the mouse pointer, -1 if none.\n' +
    ' * @return True if conducted any action. False when if did nothing special for\n' +
    ' *     tap.',
  ' * Handles mouseup/mousedown events on file list to change the selection\n' +
    ' * state.\n' +
    ' *\n' +
    ' * Basically the content of this function is identical to\n' +
    " * ListSelectionController's handlePointerDownUp(), but following\n" +
    ' * handlings are inserted to control the check-select mode.\n' +
    ' *\n' +
    ' * 1) When checkmark area is clicked, toggle item selection and enable the\n' +
    ' *    check-select mode.\n' +
    ' * 2) When non-checkmark area is clicked in check-select mode, disable the\n' +
    ' *    check-select mode.\n' +
    ' *\n' +
    ' * @param e The browser mouse event.\n' +
    ' * @param index The index that was under the mouse pointer, -1 if\n' +
    ' *     none.',
  ' * Handles key events on file list to change the selection state.\n' +
    ' *\n' +
    ' * Basically the content of this function is identical to\n' +
    " * ListSelectionController's handleKeyDown(), but following handlings is\n" +
    ' * inserted to control the check-select mode.\n' +
    ' *\n' +
    ' * 1) When pressing direction key results in a single selection, the\n' +
    ' *    check-select mode should be terminated.\n' +
    ' *\n' +
    ' * @param e The keydown event.',
  ' * Focus on the file list that contains the event target.\n' +
    ' * @param event the touch event.',
  " * Update the item's inline status when it's restored from List's cache..\n" +
    ' * @param restoredItem Item being restored from the List cache.\n' +
    ' * @param dataModel Data model corresponding to the item.\n' +
    ' * @param metadataModel Cache to retrieve metadata.',
  ' * Update status icon for file or directory entry.\n' +
    ' * @param li The grid item.\n' +
    ' * @param metadata Metadata.'
]
file_table_list_unittest.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Set up test components.',
  ' * Returns the element used to parent the file list. The element is\n' +
    ' * attached to the body, and styled for visual display.\n' +
    ' *',
  ' * @param code event.code value.',
  ' * Tests that the keyboard can be used to navigate the FileTableList.',
  ' Force round number heights to simplify the math in the test.',
  ''
]
file_table_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Extracts column widths from the model.',
  ' Verify that column visibility and width are correctly set when the visibility\n' +
    ' setting is toggled.',
  ' Verify that the table layout does not drift when a column is repeatedly shown\n' +
    ' and hidden.',
  ' Verify that table layout stays constant when the column config is exported\n' +
    ' and then restored, with no hidden columns.',
  ' Verify that table layout stays constant when the column config is exported\n' +
    ' and then restored, with a hidden column.',
  ' Verify that table layout stays constant when the column config is exported\n' +
    ' with a hidden column but then restored with the column visible.',
  ' Verify that table layout stays constant when the column config is exported\n' +
    ' with all columns visible but then restored with a hidden column.'
]
file_tap_handler.ts [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Processes touch events and calls back to the class user when tap events\n' +
    ' * defined by FileTapHandler.TapEvent are detected.\n' +
    ' *\n' +
    ' * The user can choose to 1) handle the tap event, in which case this class\n' +
    ' * will suppress browser mouse event generation, or 2) not handle the event\n' +
    ' * to let it be handled by mouse event handlers.',
  ' * The minimum duration of a tap to be recognized as long press and long tap.\n' +
    ' * This should be consistent with the Views of Android.\n' +
    ' * https://android.googlesource.com/platform/frameworks/base/+/HEAD/core/java/android/view/ViewConfiguration.java\n' +
    " * Also this should also be consistent with Chrome's behavior for issuing\n" +
    ' * drag-and-drop events by touchscreen.',
  ' * Maximum movement of touch required to be considered a tap.'
]
file_tap_handler_unittest.ts [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
files_alert_dialog.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Alert dialog.'
]
files_confirm_dialog.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Confirm dialog.'
]
files_menu.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Menu item with ripple animation.'
]
gear_menu.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Selector used by tast tests to identify when the storage meter is empty.'
]
grid.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This implements a grid control. Grid contains a bunch of\n' +
    " * similar elements placed in multiple columns. It's pretty similar to the list,\n" +
    ' * except the multiple columns layout.',
  ' Creates a new grid item element.',
  ' * Creates a new grid element.',
  ' * Creates a selection controller that is to be used with grids.'
]
grid_unittest.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
import_crostini_image_dialog.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * ImportCrostiniImageDialog is used as the handler for .tini files.\n' +
    ' * Creates dialog in DOM.'
]
install_linux_package_dialog.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * InstallLinuxPackageDialog is used as the handler for .deb files.'
]
install_linux_package_dialog_unittest.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
list.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This implements a list control.',
  ' * Whether a mouse event is inside the element viewport. This will return\n' +
    ' * false if the mouseevent was generated over a border or a scrollbar.\n' +
    ' * @param el The element to test the event with.\n' +
    ' * @param e The mouse event.',
  ' * Creates a new list element.',
  ' * Check if |start| or its ancestor under |root| is focusable.\n' +
    ' * This is a helper for handleMouseDown.\n' +
    ' * @param start An element which we start to check.\n' +
    ' * @param root An element which we finish to check.\n' +
    ' * @return True if we found a focusable element.'
]
list_container.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * List container for the file table and the grid view.',
  ' * Keep the order of this in sync with FileManagerListType in\n' +
    ' * tools/metrics/histograms/enums.xml.\n' +
    ' * The array indices will be recorded in UMA as enum values. The index for each\n' +
    ' * root type should never be renumbered nor reused in this array.'
]
list_item.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The next id suffix to use when giving each item an unique id.',
  ' Creates a new list item element.'
]
list_selection_controller.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The selection controller that is to be used with lists. This is implemented\n' +
    ' * for vertical lists but changing the behavior for horizontal lists or icon\n' +
    ' * views is a matter of overriding `getIndexBefore()`, `getIndexAfter()`,\n' +
    ' * `getIndexAbove()` as well as `getIndexBelow()`.'
]
list_selection_model.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Creates a new selection model that is to be used with lists.\n *'
]
list_selection_model_test_util.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' clang-format on',
  ' * Creates an array spanning a range of integer values.\n' +
    ' * @param start The first number in the range.\n' +
    ' * @param end The last number in the range inclusive.',
  ' * Modifies a selection model.\n' +
    ' * @param model The selection model to adjust.\n' +
    ' * @param index Starting index of the edit.\n' +
    ' * @param removed Number of entries to remove from the list.\n' +
    ' * @param added Number of entries to add to the list.'
]
list_selection_model_unittest.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' clang-format on',
  ' * @param len size of the selection model.\n' +
    ' * @param dependentLeadItem inverse value for `independentLeadItem`\n' +
    ' *     defaults to true.'
]
list_single_selection_model.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Creates a new selection model that is to be used with lists. This only\n' +
    ' * allows a single index to be selected.'
]
list_single_selection_model_unittest.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' clang-format on',
  ' * @param len size of the selection model.\n' +
    ' * @param dependentLeadItem inverse value for `independentLeadItem_`\n' +
    ' *     defaults to true.'
]
list_unittest.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
menu_item.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Creates a new menu item element.',
  ' * Users complain they occasionally use doubleclicks instead of clicks\n' +
    ' * (http://crbug.com/140364). To fix it we freeze click handling for the\n' +
    ' * double-click time interval.\n' +
    ' * @param e Initial click event.'
]
menu_unittest.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @param x The screenX coord of the mouseup event.\n' +
    ' * @param y The screenY coord of the mouseup event.\n' +
    ' * @return The return value is false if event is cancelable and at\n' +
    ' *     least one of the event handlers which received event called\n' +
    ' *     Event.preventDefault(). Otherwise it returns true.\n' +
    ' *     https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent',
  ' * Tests that if the command attributes are specified, they are copied to the\n' +
    ' * corresponding menuitem.',
  ' * Mark all menu items other than |hiddenItems| as visible and check that the\n' +
    ' * expected number of separators are visible.',
  ' * Tests that separators are only displayed when there is a visible\n' +
    ' * non-separator item on both sides of it. Further, ensure that multiple\n' +
    ' * separators will not be displayed adjacent to each other.',
  ' * Tests that focusSelectedItem() ignores hidden and disabled items.',
  ' * Tests that MenuItem defaults to tabindex=-1.'
]
multi_menu.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Creates a menu that supports sub-menus.\n' +
    ' *\n' +
    ' * This works almost identically to Menu apart from supporting\n' +
    ' * sub menus hanging off a <cr-menu-item> element. To add a sub menu\n' +
    " * to a top level menu item, add a 'sub-menu' attribute which has as\n" +
    ' * its value an id selector for another <cr-menu> element.\n' +
    ' * (e.g. <cr-menu-item sub-menu="other-menu">).'
]
multi_menu_button.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Enum for type of hide. Delayed is used when called by clicking on a\n' +
    ' * checkable menu item.',
  ' * A button that displays a MultiMenu (menu with sub-menus).'
]
multi_menu_unittest.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Set up test components.',
  " * Send a 'mouseover' event to the element target of a query.\n" +
    ' * @param targetQuery Query to specify the element.',
  " * Send a 'mousedown' event to the element target of a query.\n" +
    ' * @param targetQuery Query to specify the element.',
  " * Send a 'mouseover' event to the element target of a query.\n" +
    ' * @param targetQuery Query to specify the element.\n' +
    " * @param x Position of the event in 'X'.\n" +
    " * @param y Position of the event in 'X'.",
  " * Send a 'keydown' event to the element target of a query.\n" +
    ' * @param targetQuery Query to specify the element.\n' +
    ' * @param key property value for the key.',
  " * Tests that making the top level menu visible doesn't\n" +
    ' * cause the sub-menu to become visible.',
  " * Tests that a 'mouseover' event on top of normal menu-items\n" +
    " * doesn't cause the sub-menu to become visible.",
  " * Tests that 'mouseover' on a menu-item with 'show-submenu' command\n" +
    ' * causes the sub-menu to become visible.',
  " * Tests that 'mouseout' with the mouse over the top level\n" +
    ' * menu causes the sub-menu to hide.',
  " * Tests that 'mouseout' with the mouse over the sub-menu\n" +
    " * doesn't hide the sub-menu.",
  " * Tests that selecting a menu-item with a 'show-submenu' command\n" +
    " * doesn't cause the sub-menu to become visible.",
  " * Tests that selecting a menu-item with a 'show-submenu' command\n" +
    ' * followed by calling the showSubMenu() method causes the\n' +
    ' * sub-menu to become visible.\n' +
    ' * (Note: in an application, this would happen from a command\n' +
    ' * being executed rather than a direct showSubMenu() call.)',
  ' * Tests that a mouse click outside of a menu and sub-menu causes\n' +
    ' * both menus to hide.',
  ' * Tests that shrinking the window height will limit\n' +
    ' * the height of the sub-menu.',
  ' * Tests that growing the window height will increase\n' +
    ' * the height of the sub-menu.',
  ' * Utility function to prepare the menu and sub-menu for keyboard tests.',
  ' * Tests that arrow navigates from main menu to sub-menu.',
  ' * Tests that arrow left moves back to the top level menu\n' +
    ' * only when the selected sub-menu item is the first one.',
  ' * Tests that arrow up on the top level menu hides the\n' +
    ' * sub menu when the sub-menu is visible.',
  ' * Tests that the top level menu is resized when the parent\n' +
    ' * window is too small to fit in without clipping.',
  ' * Tests that mousedown the menu button grabs focus.',
  ' * Tests that opening a sub menu hides any showing sub menu.',
  ' * Tests that a keydown event that is not intended for the menu will not be\n' +
    ' * consumed by the menu.'
]
position_util.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file provides utility functions for position popups.',
  ' * Enum for defining how to anchor a popup to an anchor element.',
  ' * Helper function for positionPopupAroundElement and positionPopupAroundRect.\n' +
    ' * @param anchorRect The rect for the anchor.\n' +
    ' * @param popupElement The element used for the popup.\n' +
    ' * @param type The type of anchoring to do.\n' +
    ' * @param invertLeftRight [Optional] Whether to invert the right/left\n' +
    ' *     alignment.',
  ' * Positions a popup element relative to an anchor element. The popup element\n' +
    ' * should have position set to absolute and it should be a child of the body\n' +
    ' * element.\n' +
    ' * @param anchorElement The element that the popup is anchored\n' +
    ' *     to.\n' +
    ' * @param popupElement The popup element we are positioning.\n' +
    ' * @param type The type of anchoring we want.\n' +
    ' * @param invertLeftRight [Optional] Whether to invert the right/left\n' +
    ' *     alignment.',
  ' * Positions a popup around a point.\n' +
    ' * @param x The client x position.\n' +
    ' * @param y The client y position.\n' +
    ' * @param popupElement The popup element we are positioning.\n' +
    ' * @param anchorType [Optional] The type of anchoring we want.'
]
position_util_unittest.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' clang-format on'
]
progress_center_panel.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Progress center panel.'
]
providers_menu.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Fills out the menu for mounting or installing new providers.'
]
splitter.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This implements a splitter element which can be used to resize\n' +
    ' * elements in split panes.\n' +
    ' *\n' +
    ' * The parent of the splitter should be an hbox (display: -webkit-box) with at\n' +
    ' * least one previous element sibling. The splitter controls the width of the\n' +
    ' * element before it.\n' +
    ' *\n' +
    ' * <div class=split-pane>\n' +
    ' *   <div class=left>...</div>\n' +
    ' *   <div class=splitter></div>\n' +
    ' *   ...\n' +
    ' * </div>\n' +
    ' *',
  ' * Creates a new splitter element.'
]
splitter_unittest.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
table.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This implements a table control.',
  ' * Creates a new table element.'
]
table_column.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This is a table column representation',
  ' * A table column that wraps column ids and settings.'
]
table_column_model.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This is a table column model',
  ' * A table column model that wraps table columns array\n' +
    ' * This implementation supports widths in percents.'
]
table_header.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This implements a table header.',
  ' * Rectangular area around the splitters sensitive to touch events\n' +
    ' * (in pixels).',
  ' * Creates a new table header.'
]
table_list.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This extends List for use in the table.',
  ' * Creates a new table list element.'
]
table_splitter.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This implements a splitter element which can be used to resize\n' +
    ' * table columns.\n' +
    ' *\n' +
    ' * Each splitter is associated with certain column and resizes it when dragged.\n' +
    ' * It is column model responsibility to resize other columns accordingly.',
  ' * Creates a new table splitter element.'
]
uma_enums.gen.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' File generated by //ui/file_manager/base/gn/uma_enums_generate.py.',
  ' * List of file extensions to record in UMA, from enums.xml ViewFileType.'
]
actions_producer.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * ActionsProducer is a generator function that yields and/or returns Actions.\n' +
    ' *\n' +
    " * It's a function that return a AsyncGenerator.\n" +
    ' *\n' +
    " * @template Args: It's the inferred types of the arguments in the function.\n" +
    ' *\n' +
    ' * Example of an ActionsProducer:\n' +
    ' *   async function* doSomething(): ActionsProducerGen {\n' +
    " *     yield {type: 'some-action', status: 'STARTING'};\n" +
    ' *     // Call Some API.\n' +
    ' *     const result = await someApi();\n' +
    " *     yield {type: 'some-action', status: 'SUCCESS', result};\n" +
    ' *   }',
  ' * This is the type of the generator that is returned by the ActionsProducer.\n' +
    ' *\n' +
    ' * This is used to enforce the type for the yield.\n' +
    ' * The return should be always void, because consuming the generator using `for\n' +
    " * await()` doesn't consume the value from the return.\n" +
    ' *\n' +
    ' * Yielding `undefined` or a bare yield like `yield;` gives the concurrency\n' +
    " * model a chance to interrupt the ActionsProducer, when it's invalidated.",
  " * Exception used to stop ActionsProducer when they're no longer valid.\n" +
    ' *\n' +
    ' * The concurrency model function uses this exception to force the\n' +
    ' * ActionsProducer to stop.',
  ' Helper to distinguish the Action from a ActionsProducer.'
]
actions_producer_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Helper to accumulate all produced actions from the ActionsProducer.',
  ' * Tests the keepLatest() concurrency model. Checks that the latest call\n' +
    ' * overtakes any previous call.',
  ' * Tests the keyedKeepFirst() concurrency model. Checks that the first call\n' +
    " * with the same key, doesn't start a new AP, and calls with a new key cancels\n" +
    ' * the previous APs and starts a new AP.',
  ' * Tests the keyedKeepLatest() concurrency model. Checks that the first call\n' +
    " * with the same key will cancel the pending AP with the same key, but shouldn't\n" +
    ' * affect the pending AP with different keys.'
]
base_store.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The Payload type for Action.',
  ' * Actions are handled by the store according to their name and payload,\n' +
    ' * triggering reducers.',
  ' * A callable object that generates actions of a given type while enforcing the\n' +
    ' * payload typing for that type of action.\n' +
    ' *\n' +
    ' * For convenience and debugging purposes, it also includes the action type.\n' +
    ' *',
  ' Reducers generate a new state from the current state and a payload.',
  ' * Slices represent a part of the state that is nested directly under the root\n' +
    ' * state, aggregating its reducers and selectors.\n' +
    " * @template State The shape of the store's root state.\n" +
    ' * @template LocalState The shape of this slice.',
  ' eslint-disable-next-line @typescript-eslint/naming-convention',
  ' * @template State: The shape/interface of the state.',
  ' * A generic datastore for the state of a page, where the state is publicly\n' +
    ' * readable but can only be modified by dispatching an Action.\n' +
    ' *\n' +
    ' * The Store should be extended by specifying `StateType`, the app state type\n' +
    ' * associated with the store.',
  ' Returns true when the error is a ConcurrentActionInvalidatedError.',
  " * Check if the store is in debug mode or not. When it's set, action data will\n" +
    ' * be logged in the console for debugging purpose.\n' +
    ' *\n' +
    ' * Run `fileManager.store_.setDebug(true)` in the console to enable it.'
]
base_store_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' ActionsProducer that raises an error',
  ' Returns the current numVisitors from the Store.',
  ' * Checks that the subscribers receive the initial state when the store is\n' +
    ' * initialized.',
  ' * Checks that the subscribers are only called after the store has been\n' +
    ' * initialized.',
  ' * Checks that the store can be updated in batch mode. As in, multiple calls to\n' +
    ' * dispatch() is only propagated to the subscribers at the end of the batch.',
  ' * Checks that the reducer is called for every action.',
  ' Checks that subscriber can unsubscribe and stops receiving updates.',
  " * Checks that an exception in one subscriber doesn't stop pushing to other\n" +
    ' * subscribers.',
  ' * Tests that dispatching an action that is an Actions Producer results in all\n' +
    ' * produced actions being dispatched.',
  ' * Tests that Actions Producers can generate an empty action `undefined` which\n' +
    ' * is ignored.',
  " * Tests that an error during the Actions Producer doesn't stop other\n" +
    ' * actions.',
  ' * Tests that the Store throws when passed slices with colliding names.',
  ' * Tests that Slice::addReducer throws when trying to register actions with\n' +
    ' * the same name.',
  ' * Tests that Slice::addReducer produces action factories that can be shared\n' +
    ' * across slices to register other reducers.'
]
concurrency_models.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Wraps the Actions Producer and enforces the Keep Last concurrency model.\n' +
    ' *\n' +
    ' * Assigns an `actionId` for each action call.\n' +
    ' * This consumes the generator from the Actions Producer.\n' +
    ' * In between each yield it might throw an exception if the actionId\n' +
    " * isn't the latest action anymore. This effectively cancels any pending\n" +
    ' * generator()/action.\n' +
    ' *\n' +
    ' * @template T Type of the action yielded by the Actions Producer.\n' +
    ' * @template Args the inferred type for all the args for foo().\n' +
    ' *\n' +
    ' * @param actionsProducer This will be the `foo` above.',
  " * While the key is the same it doesn't start a new Actions Producer (AP).\n" +
    ' *\n' +
    ' * If the key changes, then it cancels the previous one and starts a new one.\n' +
    ' *\n' +
    ' * If there is no other running AP, then it just starts a new one.',
  ' * While the key is the same it cancels the previous pending Actions\n' +
    ' * Producer (AP).\n' +
    " * Note: APs with different keys can happen simultaneously, e.g. `key-2` won't\n" +
    ' * cancel a pending `key-1`.'
]
for_tests.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Async function to emulate async API calls.',
  ' Store state used across all unittests in this file.',
  ' Counts how many times `onStateChanged()` was called.',
  ' * Creates new Store, subscriber and dispatchedActions.\n' +
    ' * These can be called multiple times for each test, which create new\n' +
    ' * independent instances of those.'
]
selector.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview A Selector implementation for redux, bundled with a\n' +
    ' * SelectorEmitter helper class that allows selectors to be efficiently updated.',
  ' * Interface implemented by SelectorNode. Used to expose SelectorNodes outside\n' +
    " * the store without giving access to SelectorNode's implementation details.\n" +
    ' *\n' +
    " * SelectorNode's public methods that don't implement Selector's are meant to be\n" +
    ' * used by the BaseStore but not by the rest of the app.\n' +
    ' *\n' +
    ' * Selectors let callers get either a selected part of the state immediately\n' +
    ' * through `get()`, or subscribe to updates whenever the selected state changes\n' +
    ' * through `subscribe()`. The `controller` class is a `ReactiveController` and\n' +
    ' * is meant for lit elements to conveniently re-render based on changes to the\n' +
    ' * selected state.',
  ' * A class implementing ReactiveController in order to provide an ergonomic\n' +
    ' * way to update Lit elements based on selected data.',
  ' * A node in the selector DAG (Directed Acyclic Graph). Used to efficiently\n' +
    ' * process selectors and eliminate redundant calculations and state updates. A\n' +
    ' * selector node essentially connects parent selectors through a `select()`\n' +
    " * function that combines all of their parents' emitted values to form a new\n" +
    ' * value.\n' +
    ' *\n' +
    ' * Note: `SelectorNode` implements the `Selector` interface, allowing the store\n' +
    ' * to expose nodes as `Selector`s, hiding complexities related to\n' +
    " * `SelectorNode`'s implementation.",
  ' Create a selector whose value derives from a single Selector.',
  ' Create a selector whose value derives from 2 Selectors.',
  ' Create a selector whose value derives from 3 Selectors.',
  ' Create a selector whose value derives from 4 Selectors.',
  ' * A DAG (Directed Acyclic Graph) representation of chains of selectors where\n' +
    ' * one selector only emits if at least one of their parents has emitted, while\n' +
    ' * also guaranteeing that, when multiple parents of a given node emit, their\n' +
    ' * child only emits a single time.',
  ' Comparison functions can be passed to selectors when initialized.',
  ' strictlyEqual use triple equal to compare values.',
  ' shallowEqual compares the immediate property of the passed objects.'
]
selector_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Test that DAG nodes only emit if at least one of their parents also emits a\n' +
    ' new value and if their value has changed.',
  " * Tests selectors' `get()` and `subscribe()` functions.",
  " Test that Lit components work with selector's ReactiveControllers.",
  " Test that if one selector's subscriber errors out, the remaining subscribers\n" +
    ' are still notified.',
  ' Test that updates are no longer received after the selector subscription is\n' +
    ' cancelled.',
  ' Test that deleted selectors no longer provide updates.',
  ' Test that Selector Emitter nodes are explored in the ascending order of\n' +
    ' depth.',
  ' Test that strictlyEqual and shallowEqual works in different ways.',
  ' Test that selector can accepts a custom isEqual function which will be used\n' +
    ' when checking changes.'
]
all_entries.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Entries slice of the store.',
  ' * Create action to scan `allEntries` and remove its stale entries.',
  ' * Schedules the routine to remove stale entries from `allEntries`.',
  ' ID for the current scheduled `clearCachedEntries`.',
  ' Starts the action CLEAR_STALE_CACHED_ENTRIES.',
  ' Get the icon for an entry.',
  ' * Given fileData, check if its loading children should be delayed.\n' +
    ' * We are doing this for SMB to avoid potentially hanging whilst scanning a\n' +
    ' * large SMB file share and causing performance issues.',
  ' * Converts the entry to the Store representation of an Entry: FileData.',
  ' * Converts an EntryData object from FileManagerPrivate API to the store\n' +
    ' * representation of an Entry: FileData.',
  ' * Appends the entry to the Store.',
  ' * Updates `FileData` from a `FileKey`.\n' +
    ' *\n' +
    ' * Note: the state will be updated in place.',
  " Caches the Action's entry in the `allEntries` attribute.",
  ' Create action to update entries metadata.',
  ' * Returns the MyFiles entry and volume, the entry can either be a fake one\n' +
    ' * (EntryList) or a real one (VolumeEntry) depending on if the MyFiles volume is\n' +
    ' * mounted or not, and returns null if local files are disabled by policy.\n' +
    " * Note: it will create a fake EntryList in the store if there's no\n" +
    ' * MyFiles entry in the store (e.g. no EntryList and no VolumeEntry), but local\n' +
    ' * files are enabled.',
  '  Create action to add child entries to a parent entry.',
  ' * Read sub directories for a given entry.',
  ' * When there are multiple `readSubDirectories` actions with the same key being\n' +
    ' * dispatched at the same time, we only keep the latest one.',
  ' * Read entries for Drive root entry list (aka "Google Drive"), there are some\n' +
    ' * differences compared to the `readSubDirectoriesForDirectoryEntry()`:\n' +
    " * * We don't need to call readEntries() to get its child entries. Instead, all\n" +
    ' * its children are from its entry.getUiChildren().\n' +
    ' * * For fake entries children (e.g. Shared with me and Offline), we only show\n' +
    ' * them based on the dialog type.\n' +
    ' * * For certain children (e.g. team drives and computers grand root), we only\n' +
    " * show them when there's at least one child entry inside. So we need to read\n" +
    ' * their children (grand children of drive fake root) first before we can decide\n' +
    ' * if we need to show them or not.',
  ' * Read a given directory entry to get all child entries.\n' +
    ' *\n' +
    ' * @param entry The parent directory entry to read.',
  ' * Read a given directory entry to check if it has directory child entries or\n' +
    " * not. It won't do full scanning, the scan stops immediately after finding a\n" +
    ' * child directory entry.\n' +
    ' *\n' +
    ' * @param entry The parent directory entry to read.',
  ' * Read sub directories for a given entry to check if it has directory children\n' +
    ' * or not.',
  ' * When there are multiple `readSubDirectoriesToCheckDirectoryChildren`\n' +
    ' * actions with the same key being dispatched at the same time, we only keep\n' +
    ' * the latest one.',
  ' * Read child entries for the newly renamed directory entry.\n' +
    " * We need to read its parent's children first before reading its own\n" +
    ' * children, because the newly renamed entry might not be in the store yet\n' +
    ' * after renaming.',
  " * Traverse each entry in the `pathEntryKeys`: if the entry doesn't exist in\n" +
    ' * the store, read sub directories for its parent. After all entries exist in\n' +
    ' * the store, expand all parent entries.\n' +
    ' *\n' +
    ' * @param pathEntryKeys An array of FileKey starts from ancestor to child,\n' +
    ' *     e.g. [A, B, C] A is the parent entry of B, B is the parent entry of C.',
  ' * `traverseAndExpandPathEntries` is mainly used to traverse and expand the\n' +
    ' * `pathComponent` for current directory, if concurrent requests happen (e.g.\n' +
    ' * current directory changes too quickly while we are still resolving the\n' +
    ' * previous one), we just ditch the previous request and only keep the latest.',
  ' Create action to update FileData for a given entry.'
]
all_entries_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Generate MyFiles entry with fake entry list.',
  ' Generate MyFiles entry with real volume entry.',
  ' Tests that entries get cached in the allEntries.',
  ' * Tests that getMyFiles will return the entry list if the volume is not in the\n' +
    ' * store.',
  ' * Tests that getMyFiles will return the volume entry if the volume is already\n' +
    ' * in the store.',
  ' * Tests that getMyFiles will create a entry list if no MyFiles entry\n' +
    ' * in the store.',
  ' Tests that child entries can be added to the store correctly.',
  ' Tests converting VolumeEntry into FileData.',
  ' * Tests the icon for DocumentsProvider FileData should be a generic icon with\n' +
    ' * an empty IconSet provided.',
  ' Tests converting EntryList into FileData.',
  ' Tests converting FakeEntry into FileData.',
  ' Tests converting native file entry into FileData.',
  ' Tests converting native directory entry into FileData.',
  ' * Tests that reading sub directories will put the reading result into the\n' +
    ' * store.',
  ' * Tests that reading sub directories recursively will put the reading result of\n' +
    ' * children of grand children into the store.',
  ' Tests that reading a null entry does nothing.',
  ' Tests that reading a non directory entry does nothing.',
  ' Tests that reading a disabled entry does nothing.',
  ' * Tests that reading sub directories for fake drive entry will put the reading\n' +
    ' * result into the store and handle grand roots properly.',
  ' * Tests that traverse path entries will read entries for each parent and\n' +
    ' * expand them if the child entry could be found.',
  ' * Tests that traverse path entries will read entries for each parent, it\n' +
    " * won't expand any parent entry if the child entry can not be found.",
  ' Tests that file data can be updated correctly.',
  " Tests that file data won't be updated without valid file data.",
  ' * Test adding a Materialized View to the allEntries.'
]
android_apps.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Android apps slice of the store.\n' +
    ' *\n' +
    ' * Android App is something we get from private API\n' +
    ' * `chrome.fileManagerPrivate.getAndroidPickerApps`, it will be shown as a\n' +
    ' * directory item in FilePicker mode.',
  ' Action factory to add all android app config to the store.'
]
android_apps_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that android apps can be added correctly to the store.'
]
bulk_pinning.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Bulk pinning slice of the store.\n' +
    ' *\n' +
    ' * BulkPinProgress is the current state of files that are being pinned when the\n' +
    ' * BulkPinning feature is enabled. During bulk pinning, all the users items in\n' +
    ' * My drive are pinned and kept available offline. This tracks the progress of\n' +
    ' * both the initial operation and any subsequent updates along with any error\n' +
    ' * states that may occur.',
  ' Create action to update the bulk pin progress.'
]
bulk_pinning_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests that bulk pin progress updates the store and overwrites existing values\n' +
    ' * on each update.'
]
current_directory.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Current directory slice of the store.',
  ' * Returns true if any of the entries in `currentDirectory` are DLP disabled,\n' +
    ' * and false otherwise.',
  ' Create action to change the Current Directory.',
  ' Create action to update currently selected files/folders.',
  ' Create action to update FileTasks for the current selection.',
  " Create action to update the current directory's content.",
  ' * Linux package installation is currently only supported for a single file\n' +
    ' * which is inside the Linux container, or in a shareable volume.\n' +
    ' * TODO(timloh): Instead of filtering these out, we probably should show a\n' +
    ' * dialog with an error message, similar to when attempting to run Crostini\n' +
    ' * tasks with non-Crostini entries.',
  ' Generates key based on each FileKey (entry.toURL()).',
  ' TODO(lucmult): Add concurrency model, the latest should prevail.'
]
current_directory_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
device.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Device slice of the store.'
]
device_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
drive.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Drive slice of the store.'
]
drive_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
folder_shortcuts.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Create action to refresh all folder shortcuts with provided ones.',
  ' Create action to add a folder shortcut.',
  ' Create action to remove a folder shortcut.'
]
folder_shortcuts_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Generate a fake file system with fake file entries.',
  ' Tests folder shortcuts can be refreshed correctly.',
  ' Tests folder shortcut can be added correctly.',
  ' Tests folder shortcut can be removed correctly.'
]
launch_params.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Updates the stored launch parameters in the store based on the supplied data.'
]
launch_params_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
materialized_views.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
navigation.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Navigation slice of the store.',
  ' My Files.',
  ' Cloud.',
  ' Removable.',
  " Returns the entry for the volume's top-most prefix or the volume itself.",
  ' * Create action to refresh all navigation roots. This will clear all existing\n' +
    ' * navigation roots in the store and regenerate them with the current state\n' +
    ' * data.\n' +
    ' *\n' +
    " * Navigation roots' Entries/Volumes will be ordered as below:\n" +
    ' *  1. Recents.\n' +
    ' *  2. Shortcuts.\n' +
    ' *  3. "My-Files" (grouping), actually Downloads volume.\n' +
    ' *  4. Google Drive.\n' +
    ' *  5. ODFS.\n' +
    ' *  6. SMBs\n' +
    ' *  7. Other FSP (File System Provider) (when mounted).\n' +
    ' *  8. Other volumes (MTP, ARCHIVE, REMOVABLE).\n' +
    ' *  9. Android apps.\n' +
    ' *  10. Trash.'
]
navigation_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Create FileData for recent entry.',
  ' Create FileData for shortcut entry.',
  ' Create FileData for MyFiles entry.',
  ' Create FileData for drive root entry.',
  ' Create FileData for trash entry.',
  ' Create android apps.',
  ' Create file data and volume data for volume.',
  ' * Tests that navigation roots with all different types:\n' +
    ' * 1. produces the expected order of volumes.\n' +
    ' * 2. manages NavigationSection for the relevant volumes.\n' +
    ' * 3. keeps MTP/Archive/Removable volumes on the original order.',
  ' * Tests navigation roots with no Recents.',
  ' * Tests navigation roots with fake MyFiles.',
  ' * Tests navigation roots with volumes.',
  ' * Tests that for multiple partition volumes, only the parent entry will be\n' +
    ' * added to the navigation roots.',
  " * Tests that the volumes filtered by the volume manager won't be shown in the\n" +
    ' * navigation roots.',
  ' * Tests that materialized views add navigation roots.'
]
preferences.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Chrome preferences slice of the store.\n' +
    ' *\n' +
    ' * Chrome preferences store user data that is persisted to disk OR across\n' +
    ' * profiles, this takes care of initially populating these values then keeping\n' +
    ' * them updated on dynamic changes.',
  ' * Type alises to avoid writing the `chrome.fileManagerPrivate` prefix.',
  ' * A type guard to see if the payload supplied is a change of preferences or the\n' +
    ' * entire preferences object. Useful in ensuring subsequent type checks are done\n' +
    ' * on the correct type (instead of the union type).',
  ' * Only update the existing preferences with their new values if they are\n' +
    ' * defined. In the event of spreading the change event over the existing\n' +
    ' * preferences, undefined values should not overwrite their existing values.',
  ' Create action to update user preferences.'
]
preferences_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Defines an initial state for user preferences that is used in all the tests.',
  ' * Tests that bulk pin progress updates the store and overwrites existing values\n' +
    ' * on each update.'
]
search.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Search slice of the store.',
  ' * Returns if the given search data represents empty (cleared) search.',
  ' * Helper function that does a deep comparison between two SearchOptions.',
  ' * Generates a search action based on the supplied data.\n' +
    ' * Query, status and options can be adjusted independently of each other.',
  ' * Create action to clear all search settings.',
  ' * Search options to be used if the user did not specify their own.'
]
search_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
ui_entries.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview UI entries slice of the store.\n' +
    ' *\n' +
    ' * UI entries represents entries shown on UI only (aka FakeEntry, e.g.\n' +
    " * Recents/Trash/Google Drive wrapper), they don't have a real entry backup in\n" +
    ' * the file system.',
  ' Create action to add an UI entry to the store.',
  ' * Add UI entry to the store and re-scan MyFiles if the newly added UI entry is\n' +
    ' * under MyFiles.',
  ' Create action to remove an UI entry from the store.',
  ' * Remove UI entry from the store and re-scan MyFiles if the removed UI entry is\n' +
    ' * under MyFiles.'
]
ui_entries_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Generate MyFiles entry with real volume entry.',
  ' Tests a normal UI entry can be added correctly.',
  " Tests that a duplicate UI entry won't be added.",
  ' * Tests that adding UI entry for MyFiles will reset the children filed of\n' +
    ' * MyFiles entry.',
  " * Tests that UI entry won't be added to MyFiles if it's already existed.",
  " * Tests that UI entry won't be added to MyFiles if the corresponding volume\n" +
    ' * is already existed.',
  ' * Tests that UI entry will be disabled if the corresponding volume\n' +
    ' * type is disabled in the volume manager.',
  ' Tests that UI entry can be removed from store correctly.',
  " Tests that removing non-existed UI entry won't do anything.",
  ' * Tests removing UI entry from MyFiles will also update MyFiles entry.',
  ' * Test MyFiles children should include PlayFiles even PlayFiles ui entry is\n' +
    " * added when there's an ongoing scanning call for MyFiles."
]
volumes.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Volumes slice of the store.',
  ' * Convert VolumeInfo and VolumeMetadata to its store representation: Volume.',
  ' * Updates a volume from the store.',
  ' * Given a volume info, check if we need to group it into a wrapper.\n' +
    ' *\n' +
    ' * When the "SinglePartitionFormat" flag is on, we always group removable volume\n' +
    " * even there's only 1 partition, otherwise the group only happens when there\n" +
    ' * are more than 1 partition in the same device.',
  ' Create action to add a volume.',
  ' Create action to remove a volume.',
  ' Create action to update isInteractive for a volume.'
]
volumes_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Generate MyFiles entry with fake entry list.',
  ' Generate MyFiles entry with real volume entry.',
  ' Tests that MyFiles volume can be added correctly.',
  ' Tests that volume nested in MyFiles can be added correctly.',
  ' Tests that drive volume can be added correctly.',
  ' Tests that single partition volume can be added correctly.',
  ' Run the above test with FilesSinglePartitionFormat flag off.',
  ' Run the above test with FilesSinglePartitionFormat flag on.',
  ' Tests that multiple partition volumes can be added correctly.',
  ' Run the above test with FilesSinglePartitionFormat flag off.',
  ' Run the above test with FilesSinglePartitionFormat flag on.',
  ' * Tests that volume will be disabled if it is disabled in the volume manager.',
  ' * Tests that drive fake root entry list will be disabled if the drive volume is\n' +
    ' * disabled in the volume manager.',
  ' Tests that archive volume can be added correctly.',
  ' Tests that volume can be removed correctly.',
  ' * Tests removing volume from MyFiles will also update the MyFiles entry.',
  ' * Tests removing grouped removable volume will also update the parent UI entry.'
]
file_key.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Key to identify a file/entry.\n' +
    ' *\n' +
    ' * Type to distinguish it from a regular string.'
]
for_tests.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Compares 2 State objects and fails with nicely formatted message when it\n' +
    ' * fails.',
  ' * Returns the `allEntries` size of the passed State.',
  " * Compares the current state's allEntries field to the expected list. Fails\n" +
    " * with a nicely formatted message if there's a mismatch.",
  ' Change the directory in the store.',
  ' Updates the selection in the store.',
  ' Updates the metadata in the store.',
  ' Updates the directory content in the store.',
  ' * Store state might include objects (e.g. Entry type) which can not stringified\n' +
    ' * by JSON, here we implement a custom "replacer" to handle that.',
  ' * Waits for a part of the Store to be in the expected state.\n' +
    ' *\n' +
    ' * Waits a maximum of 10 seconds, since in the unittest the Store manipulation\n' +
    ' * has all async APIs mocked.\n' +
    ' *\n' +
    ' * Usage:\n' +
    " * let want: StoreSomething = {somePartOfStore: 'desired state'};\n" +
    ' * store.dispatch(someActionsProducer(...));\n' +
    ' * await waitDeepEquals(store, want, (state) => state.something);',
  ' Setup store and initialize it with empty state.',
  ' * Setup fileManager dependencies on window object.',
  ' * Create a fake VolumeMetadata with VolumeInfo, VolumeInfo can be created by\n' +
    ' * MockVolumeManager.createMockVolumeInfo.'
]
state.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The data for each individual file/entry.',
  ' * A stronger type for identifying an entry.\n' +
    ' * Currently entry is identified by its URL as string.\n' +
    ' *\n' +
    ' * NOTE: Fake entry, as in, entries implemented directly in JS/TS are identified\n' +
    ' * by a made up URL like:\n' +
    ' * fake-entry://recent\n' +
    ' * fake-entry://trash',
  ' * A stronger type for identifying a volume.',
  ' * Describes each part of the path, as in each parent folder and/or root volume.',
  ' * The status of a property, for properties that have their state updated via\n' +
    ' * asynchronous steps.',
  ' * Task type is the source of the task, or what type of the app is this type\n' +
    ' * from. It has to match the `taskType` returned in the FileManagerPrivate.\n' +
    ' *\n' +
    ' * For more details see //chrome/browser/ash/file_manager/file_tasks.h',
  " * Task Descriptor it's the unique identified for a Task.\n" +
    ' *\n' +
    ' * For more details see //chrome/browser/ash/file_manager/file_tasks.h',
  ' * UI representation for File Task.\n' +
    ' * NOTE: This is slightly different from the FileTask from the\n' +
    ' * FileManagerPrivate API. Here the task is enhanced to deal with different\n' +
    ' * displaying icons and labels.\n' +
    ' * TODO(lucmult): Change isDefault and isGenericFileHandler to boolean when\n' +
    " * non-Store version doesn't have to be supported anymore.",
  ' * Container for FileTask.\n' +
    " * `defaultHandlerPolicy` is only set if the user can't change the default\n" +
    ' * handler due to a policy, either the policy forces the default handler or\n' +
    " * the policy is incorrect, but we still don't allow user to change the\n" +
    ' * default.\n' +
    ' *\n' +
    ' * TODO(lucmult): keys might not be needed here.',
  ' * Launch parameters for the file manager.',
  ' * This represents the entries currently selected, out of the entries\n' +
    ' * displayed in the file list/grid.',
  ' * Represents the entries displayed in the file list/grid.',
  ' * The current directory.\n' +
    ' * The directory is only effectively active when the `status` is SUCCESS.',
  ' * Enumeration of all supported search locations. If new location is added,\n' +
    ' * please update this enum.',
  ' * Enumeration of all supported how-recent time spans.',
  ' * The options used by the file search operation.',
  " * Data for search. It should be empty `{}` when the user isn't searching.",
  ' * Used to group volumes in the navigation tree.\n' +
    ' * Sections:\n' +
    ' *      - TOP: Recents, Shortcuts.\n' +
    ' *      - MY_FILES: My Files (which includes Downloads, Crostini and Arc++ as\n' +
    ' *                  its children).\n' +
    ' *      - TRASH: trash.\n' +
    ' *      - GOOGLE_DRIVE: Just Google Drive.\n' +
    ' *      - ODFS: Just ODFS.\n' +
    ' *      - CLOUD: All other cloud: SMBs, FSPs and Documents Providers.\n' +
    ' *      - ANDROID_APPS: ANDROID picker apps.\n' +
    ' *      - REMOVABLE: Archives, MTPs, Media Views and Removables.',
  ' * The key of navigation item, it could be:\n' +
    ' *   * FileKey: the navigation is backed up by a real file entry.\n' +
    ' *   * string: the navigation is backed up by others (e.g. androids_apps).',
  ' * This represents the navigation root node, it can be backed up by an file\n' +
    ' * entry or an Android app package (e.g. for android_apps type). If its type\n' +
    " * is android_apps, the `key` filed will be android app's package name, not a\n" +
    ' * file key.',
  ' * This carries the same information as VolumeInfo, which is very similar to\n' +
    ' * fileManagerPrivate.VolumeMetadata.\n' +
    ' *\n' +
    ' * The property names are identical to VolumeInfo to simplify the migration.\n' +
    ' * Notable differences: missing the properties: profile, remoteMountPath.\n' +
    ' *\n' +
    " * When the volume has an unrecognized file system, it's still mounted here,\n" +
    ' * but with `error`=="unknown".',
  ' * This carries the state related to physical user device.',
  ' * This carries the state related to the underlying Drive connection status.\n' +
    ' * This differs from the device connection state as the Drive can also be in a\n' +
    ' * effectively paused state when on a metered network.',
  ' * An extension of `chrome.fileManagerPrivate.AndroidApp`. The only difference\n' +
    ' * from the private API AndroidApp is this one adds an union type `icon`. This\n' +
    ' * is because `iconSet` can generate a "none" background sometimes, in this\n' +
    ' * case we need a backup icon instead.\n' +
    ' *\n' +
    ' * Note: we keep `iconSet` here to be compatible with the original AndroidApp\n' +
    ' * type because private API `selectAndroidPickerApp` still requires the\n' +
    ' * original type. For other use cases, we can ignore `iconSet` and just use\n' +
    ' * `icon`.',
  " * A view behaves like a folder, as in, it's a collection of FileData.\n" +
    ' *\n' +
    ' * Its content comes from the File Index.',
  " * Files app's state."
]
store.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * Files app's Store type.\n" +
    ' *\n' +
    ' * It enforces the types for the State and the Actions managed by Files app.',
  ' * Store singleton instance.\n' +
    " * It's only exposed via `getStore()` to guarantee it's a single instance.\n" +
    ' * TODO(b/272120634): Use window.store temporarily, uncomment below code after\n' +
    ' * the duplicate store issue is resolved.',
  ' let store: null|Store = null;',
  " * Returns the singleton instance for the Files app's Store.\n" +
    ' *\n' +
    " * NOTE: This doesn't guarantee the Store's initialization. This should be done\n" +
    " * at the app's main entry point.",
  " * Promise resolved when the store's state in an desired condition.\n" +
    ' *\n' +
    ' * For each Store update the `checker` function is called, when it returns True\n' +
    ' * the promise is resolved.\n' +
    ' *\n' +
    " * Resolves with the State when it's in the desired condition.",
  ' * Returns the `FileData` from a FileKey.',
  ' * Returns FileData for each key.\n' +
    " * NOTE: It might return less results than the requested keys when the key isn't\n" +
    ' * found.',
  ' * A function used to select part of the Store.\n' +
    ' * TODO: Can the return type be stronger than `any`?'
]
xf_base.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview A base class for all Files app(xf) widgets.',
  ' * A base class for all Files app(xf) widgets.',
  ' Expose shadowRootOptions so child classes can use this from XfBase directly.'
]
xf_breadcrumb.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Breadcrumb displays the current directory path.',
  ' * `partIndex` is the index of the breadcrumb path e.g.:\n' +
    ' * "/My files/Downloads/sub-folder" indexes:\n' +
    ' *   0        1         2'
]
xf_breadcrumb_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Creates new <xf-breadcrumb> element for each test. Asserts it has no initial\n' +
    ' * path using the element.path getter.',
  ' Returns the <xf-breadcrumb> element.',
  ' * Returns the <xf-breadcrumb> child button elements.',
  ' * Returns the not-hidden <xf-breadcrumb> main button elements. The breadcrumb\n' +
    ' * main buttons have an id, all other breadcrumb buttons do not.',
  ' Returns the last not-hidden <xf-breadcrumb> main button element.',
  ' Returns the <xf-breadcrumb> elider button element.',
  ' Returns the <xf-breadcrumb> drop-down menu button elements.',
  ' * Returns <xf-breadcrumb> main button visual state.\n' +
    ' * @param button Main button (these have an id).\n' +
    ' * @param i Number to assign to the button.',
  ' * Returns <xf-breadcrumb> elider button visual state.\n' +
    ' * @param button Elider button.\n' +
    ' * @param i Number to assign to the button.',
  ' * Returns <xf-breadcrumb> drop-down menu button visual state.\n' +
    ' * @param button Drop-down menu button.',
  ' Returns the <xf-breadcrumb> buttons visual state.',
  ' Sets and Waits for the path to updated in the DOM.',
  ' Returns the visible buttons rendered with CSS overflow ellipsis.',
  ' * Tests rendering an empty path.',
  ' * Tests rendering a one element path.',
  ' Tests rendering a two element path.',
  ' Tests rendering a three element path.',
  ' * Tests rendering a four element path.',
  ' * Tests rendering a path of more than four parts. The elider button should be\n' +
    ' * visible (not hidden and have display).\n' +
    ' *\n' +
    ' * The drop-down menu button should contain the elided path parts and can have\n' +
    ' * display, but are invisible because the elider drop-down menu is closed.',
  ' * Tests rendering a path where the path parts have escaped characters. Again,\n' +
    ' * the elider should be visible (not hidden and have display) because the path\n' +
    ' * has more than four parts.\n' +
    ' *\n' +
    ' * The drop-down menu button should contain the elided path parts and can have\n' +
    ' * display, but are invisible because the elider drop-down menu is closed.',
  ' * Tests rendering a path of more than four parts. The elider button should be\n' +
    " * visible and clicking it should 'open' and 'close' its drop-down menu.",
  ' * Tests that clicking on the main buttons emits a signal that indicates which\n' +
    ' * part of the breadcrumb path was clicked.',
  ' * Tests that clicking on the menu buttons emits a signal that indicates which\n' +
    ' * part of the breadcrumb path was clicked.',
  ' * Tests that setting the path closes the the drop-down menu.',
  ' * Tests that setting the path updates the <xf-breadcrumb path> attribute.',
  ' * Tests that opening and closing the elider button drop-down menu adds and\n' +
    ' * removes global <html> element state.',
  ' * Tests that wide text path components are rendered elided with ellipsis ...\n' +
    ' * and hovering over the button sets the `title` attribute which is used by the\n' +
    ' * browser to render the native tooltip.',
  ' * Tests that wide text path components in the drop-down menu are rendered\n' +
    ' * elided with ellipsis ... and hovering over the button sets the `title`\n' +
    ' * attribute which is used by the browser to render the native tooltip.'
]
xf_bulk_pinning_dialog.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Different flavors of the XfBulkPinningDialog.',
  ' * Dialog that shows the benefits of enabling bulk pinning along with storage\n' +
    " * information if the feature can't be enabled."
]
xf_bulk_pinning_dialog_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Gets the <xf-bulk-pinning-dialog> element.',
  ' Gets a footer of the given dialog.',
  ' Gets a button of the given dialog.',
  ' Gets the `innerText` of the <span> element of the given dialog.',
  ' Tests that XfBulkPinningDialog.onStateChanged() correctly reacts to app State\n' +
    ' events.',
  ' Tests that XfBulkPinningDialog.onStateChanged() correctly reacts when the\n' +
    ' bulk-pinning feature gets activated.',
  ' Tests that clicking the "Cancel" button closes the XfBulkPinningDialog.',
  ' Tests that clicking the "Continue" button enables bulk-pinning and closes the\n' +
    ' XfBulkPinningDialog.',
  ' Tests that clicking the "Learn More" link opens the appropriate URL.',
  ' Tests that clicking the "View Storage" link opens the appropriate settings\n' +
    ' page.',
  ' Test when listed files has a count, it appears in the footer dialog.'
]
xf_cloud_panel.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview xf-cloud-panel element.',
  ' * These type indicate static states that the cloud panel can enter. If one of\n' +
    ' * these is supplied, `items` and `percentage` is ignored.',
  ' * The `<xf-cloud-panel>` represents the current state that the Drive bulk\n' +
    ' * pinning process is currently in. When files are being pinned and downloaded,\n' +
    ' * the `items` and `progress` attributes are used to signify that the panel is\n' +
    ' * in progress. The `type` attribute can be used with `not_enough_space`,\n' +
    ' * `offline`, and `battery_saver` to signify possible error or paused states.'
]
xf_cloud_panel_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Creates new <xf-cloud-panel> for each test.',
  ' Returns the <xf-cloud-panel> element.',
  ' Checks that a computed style equals `want`.',
  ' The different types of selectors that appear.',
  ' Checks that a panel type is visible and that all the other types are hidden.',
  ' Tests that the initial `<xf-cloud-panel>` element defaults to the preparing\n' +
    ' state until both items and percentage are set.',
  ' Tests that when updating the progress values, it updates the underlying\n' +
    ' progress bar element.',
  ' Tests that when clicking the "Google Drive settings" button an event is\n' +
    ' emitted.',
  ' Tests that when percentage is 100% it should show the "All files synced"\n' +
    ' state and not the progress state.',
  ' Tests that when the offline type attribute is supplied, the other states\n' +
    ' should all be hidden.',
  ' Tests that when the not_enough_space type attribute is supplied, the other\n' +
    ' states should all be hidden.',
  ' Tests that only accepted cloud panel types are valid values for the `type`\n' +
    ' attribute.',
  ' Tests that when percentage is 0, the progress is shown instead of preparing.',
  ' Tests that metered network properly updates the state.'
]
xf_conflict_dialog.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Files Conflict Dialog: if the target file of a copy/move operation exists,\n' +
    ' * the conflict dialog can be used to ask the user what to do in that case.\n' +
    ' *\n' +
    " * The user can choose to 'cancel' the copy/move operation by cancelling the\n" +
    " * dialog. Otherwise, the user can choose to 'replace' the file or 'keepboth'\n" +
    ' * to keep the file.'
]
xf_conflict_dialog_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Creates new <xf-conflict-dialog> for each test.',
  ' * Returns the <xf-conflict-dialog> element.',
  ' * Tests that the message element has the focus when the dialog opens. Child\n' +
    ' * UI elements (the dialog buttons, checkbox) must not be focused by design,\n' +
    ' * and ARIA will announce the focused element (the message).',
  " * Tests that the dialog opens with no 'Apply to all' checkbox shown.",
  " * Tests that the dialog can open with the 'Apply to all' checkbox shown.",
  ' * Tests that the dialog can open with the directory (aka a folder) message\n' +
    ' * text shown.',
  " * Tests that clicking the 'Apply to all' checkbox changes the dialog checked\n" +
    ' * state attributes, properties, and button texts.',
  ' * Tests that the dialog checked state is reset when the dialog opens.',
  ' * Tests that the dialog consumes keyboard events.',
  ' * Tests that cancel button closes the dialog with a cancelled error.',
  " * Tests that replace button closes the dialog with a 'replace' result.",
  " * Tests that keepboth button closes the dialog with a 'keepboth' result.",
  ' * Tests that requests to open the dialog are serialized.'
]
xf_dlp_restriction_details_dialog.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Dialog to show Data Leak Prevention (DLP) restriction details about a file.'
]
xf_dlp_restriction_details_dialog_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Creates new <xf-dlp-restriction-details-dialog> element for each test.',
  ' Returns the <xf-dlp-restriction-details-dialog> element.',
  ' Returns the block details span element of the dialog.',
  ' Returns the warn details span element of the dialog.',
  ' Returns the report details span element of the dialog.',
  ' * Checks that the surronding list element for `level` is not hidden and returns\n' +
    ' * the `destinations` label of the dialog.\n' +
    " * @level DLP level used to get the right elements. One of 'block', 'warn',\n" +
    " * 'report'.\n" +
    " * @destinations One of 'urls' or 'components'.",
  ' * Checks that the "block-li-urls" element is not hidden and returns the\n' +
    ' * corresponding "block-urls" label of the dialog.',
  ' * Checks that the "warn-li-urls" element is not hidden and returns the\n' +
    ' * corresponding "warn-urls" label of the dialog.',
  ' * Checks that the "report-li-urls" element is not hidden and returns the\n' +
    ' * corresponding "report-urls" label of the dialog.',
  ' * Checks that the "block-li-components" element is not hidden and returns the\n' +
    ' * corresponding "block-components" label of the dialog.',
  ' * Checks that the "warn-li-components" element is not hidden and returns the\n' +
    ' * corresponding "warn-components" label of the dialog.',
  ' * Checks that the "report-li-components" element is not hidden and returns the\n' +
    ' * corresponding "report-components" label of the dialog.',
  ' Closes the dialog.',
  ' * Tests that only the URL section for the block section is shown.',
  ' * Tests that wildcard is shown as "all urls", any other specific URLs\n' +
    ' * listed along the wildcard are ignored, and components are not affected by the\n' +
    ' * wildcard.',
  ' * Tests that wildcard is shown as "all urls except..." if there are some URLs\n' +
    ' * with a higher restriction level.',
  ' * Tests that only the components section for the block section is shown.',
  ' * Tests that showing the dialog multiple times in a row still shows correct\n' +
    ' * data.'
]
xf_icon.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
xf_icon_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
xf_inline_status.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Sync status element used in both table and grid views that indicates sync\n' +
    ' * progress and file pinning.'
]
xf_jellybean.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Element which controls pre- and post-jellybean migration UI.'
]
xf_nudge.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The diameter of the dot that appears beside the anchor. Keep this up to date\n' +
    ' * with the width of the dot in the `xf_nudge.html` file.',
  ' * The default indent that the dot is from the side of the bubble.',
  " * An XfNudge represents an element on the screen to draw the user's\n" +
    ' * attention to a specific portion of the screen. This can be a new feature, the\n' +
    ' * location of a file that has just changed etc.',
  ' * The direction a nudge should render relative to its anchor.'
]
xf_nudge_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Creates new <xf-nudge> element for each test.',
  ' * Clears the <xf-nudge> between each test to ensure a clean slate.',
  ' * Returns the <xf-nudge> component in the DOM.',
  " * Tests that show doesn't work if content or anchor is not set.",
  ' * Tests that the dot and bubble are appropriately set given the location of the\n' +
    ' * anchor element.',
  ' * Tests that the nudge gets repositioned appopriately if the element moves.',
  ' * Tests that setting the dismissText displays the dismiss button and setting an\n' +
    ' * empty text hides the button.'
]
xf_password_dialog.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The custom element tag name.',
  ' * Exception thrown when user cancels the password dialog box.',
  ' * Dialog to request user to enter password. Uses the askForPassword() which\n' +
    ' * resolves with either the password or rejected with USER_CANCELLED.'
]
xf_password_dialog_unittest.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Adds a XfPasswordDialog element to the page.',
  ' * Tests that the password dialog is modal.',
  ' * Tests cancel functionality of password dialog for single encrypted archive.\n' +
    ' * The askForPassword method should return a promise that is rejected with\n' +
    ' * USER_CANCELLED.',
  ' * Tests unlock functionality for single encrypted archive. The askForPassword\n' +
    ' * method should return a promise that resolves with the expected input\n' +
    ' * password.',
  " * Tests opening the password dialog with an 'Invalid password' message. This\n" +
    ' * message is displayed when a wrong password was previously entered.',
  ' * Tests cancel functionality for multiple encrypted archives.',
  ' * Tests unlock functionality for multiple encrypted archives.'
]
xf_pie_progress.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Displays a pie shaped progress indicator.\n' +
    ' * Accepts a `progress` property ranging from 0 to 1.'
]
xf_search_options.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The enumeration of strings used to identify the kind of option that changed.',
  ' * The interface that specifies the type of the detail field in the custom\n' +
    ' * SEARCH_OPTIONS_CHANGED event.',
  ' * Helper function for constructing a SEARCH_OPTIONS_CHANGED event.',
  ' * Search options is a composite element that allows users to tweak specifics of\n' +
    ' * the file search operation. For example, it presents an UI for selecting the\n' +
    ' * desired file type.\n' +
    ' *\n' +
    ' * It emits the `SEARCH_OPTIONS_CHANGED` event when the options change. The\n' +
    ' * detail filed of the event carries information what option changes and to what\n' +
    ' * value. It is up to the creator of this element to set values that are\n' +
    ' * meaningful. Typical use:\n' +
    ' *\n' +
    " * const element = document.createElement('xf-search-options');\n" +
    ' * element.setLocationOptions(new Map<string, string>([\n' +
    " *   ['value-a', 'Text of value A'],\n" +
    ' *   ...\n' +
    ' * ]);\n' +
    ' * element.addEventListener(\n' +
    ' *     SEARCH_OPTIONS_CHANGED, (event) => {\n' +
    ' *       if (event.detail.kind === OptionKind.LOCATION) {\n' +
    " *         if (event.detail.value === 'value-a') {\n" +
    ' *           // adjust search options, based on value-a being selected.\n' +
    ' *         }\n' +
    ' *       }\n' +
    ' *     });',
  ' * The name of the even generated by this widget.',
  ' * A custom event that informs the container which option kind change to what\n' +
    ' * value. It is up to the container to interpret these.'
]
xf_search_options_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Creates new <xf-search-options> element for each test.',
  ' * Returns the <xf-search-options> element.'
]
xf_select.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview xf-select element which is ChromeOS <select>..</select>.',
  ' * The data structure used to set the new options on the select element.\n' +
    ' * The value field should be independent of the user locale, while text should\n' +
    ' * be a string corresponding to the value in the user locale.',
  ' * The data structure used to inform SELECTION_CHANGED listeners about the\n' +
    ' * current selection. Posted in the event detail.',
  ' * Implements an element similar to HTML select, customized for ChromeOS files.\n' +
    ' *\n' +
    ' * It emits the `SELECTION_CHANGED` event when the selected element change. The\n' +
    ' * detail filed of the event carries index of the new element, its value and the\n' +
    ' * text visible to the user.\n' +
    ' *\n' +
    " * const element = document.createElement('xf-select');\n" +
    ' * element.options = [\n' +
    " *   {value: 'value-a', text: 'Text of value A'},\n" +
    ' *   ...\n' +
    ' * ];\n' +
    " * element.icon = 'select-location';\n" +
    ' * element.addEventListener(\n' +
    ' *     SELECTION_CHANGED, (event) => {\n' +
    " *       if (event.detail.value === 'value-a') {\n" +
    ' *         ... // React to value-a being selected.\n' +
    ' *       }\n' +
    ' *     });\n' +
    ' *',
  ' * CSS used by the xf-select widget.',
  ' * A custom event that informs the container which option kind change to what\n' +
    ' * value. It is up to the container to interpret these.'
]
xf_select_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Creates new <xf-search-options> element for each test.',
  ' * Returns the <xf-search-options> element.'
]
xf_splitter.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
xf_splitter_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Creates new <xf-splitter> element for each test.',
  ' * Returns the <xf-splitter> element.',
  ' * Returns the <div> element that is the splitter separator.',
  ' * Tests that the default layout takes up the full client width.',
  ' * Tests that firing move events on the splitter change the child sizes.',
  ' * Tests that RTL layout changes the child sizes correctly.'
]
xf_tree.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * <xf-tree> is the container of the <xf-tree-item> elements. An example\n' +
    ' * DOM structure is like this:\n' +
    ' *\n' +
    ' * <xf-tree>\n' +
    ' *   <xf-tree-item>\n' +
    ' *     <xf-tree-item></xf-tree-item>\n' +
    ' *   </xf-tree-item>\n' +
    ' *   <xf-tree-item></xf-tree-item>\n' +
    ' * </xf-tree>\n' +
    ' *\n' +
    ' * The selection and focus of <xf-tree-item> is controlled in <xf-tree>,\n' +
    ' * this is because we need to make sure only one item is being selected or\n' +
    ' * focused.\n' +
    ' *',
  ' Type of the tree item selection custom event.'
]
xf_tree_item.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The number of pixels to indent per level.',
  ' Type of the tree item expanded custom event.',
  ' Type of the tree item collapsed custom event.'
]
xf_tree_item_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Construct a single tree item.',
  ' Construct a tree with nested tree items.',
  ' Helper method to get tree item by id.',
  ' Helper method to get tree item by id.',
  ' Helper method to get inner elements from a tree item.',
  ' Tests tree item can be rendered without tree or child tree items.',
  ' Tests tree item can be rendered with child tree items.',
  ' Tests "may-have-children" attribute.',
  ' Tests tree item level will be correctly updated.',
  ' Tests trialing icon can be rendered correctly.',
  " * Tests disabled tree item won't be included in the tabbable items.",
  ' Tests tree item can be selected.',
  ' Tests tree item can be expanded.',
  ' * Tests tree item can be collapsed.',
  ' Tests adding/removing tree items.',
  ' Tests expanded item will become collapsed when last child is removed.',
  ' Tests removal of the selected item.',
  ' Tests removal of the focused item.',
  ' Tests that iconSet has higher priority than icon property.',
  ' Tests the has-children attribute.'
]
xf_tree_unittest.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Helper method to get tree root <ul>.',
  ' Helper method to get tree item by id.',
  ' * Helper method that checks that focused item is correct.',
  ' Construct a tree with only direct children.',
  ' Construct a tree with nested children.',
  ' Tests tree element can render without child tree items.',
  ' Tests tree element can render with child tree items.',
  ' Tests tree selection change.',
  ' Tests tree item navigation by pressing home and end key.',
  ' Tests tree item navigation by pressing arrow up and down key.',
  ' Tests no affect for arrow up key if tree item has no previous sibling.',
  ' Tests no affect for arrow down key if tree item has no next sibling.',
  ' Tests tree item expand/collapse by pressing arrow left and right key.',
  ' Tests no affect for arrow left key if tree item has no parent.',
  ' Tests no affect for arrow right key if tree item has no children.',
  ' * Tests tree item expand/collapse by pressing arrow left and right key in\n' +
    ' * RTL mode.',
  ' Tests tree item selection by pressing Enter/Space key.',
  ' Tests tree item can be expanded by single click.',
  ' Tests tree item can be selected by single click.',
  ' Tests tree item can be expanded by double click.',
  ' Tests tree item can be focused by right click.',
  ' Tests disabled tree item should be skipped for navigation.',
  ' Tests click/double click on the disabled item has no effects.',
  ' Tests adding/removing tree items.',
  ' Tests removing a selected tree item should update selectedItem properly.',
  ' Tests removing a focused tree item should update focusedItem properly.',
  ' Tests tree should be able to observe tree item event.',
  ' * Tests focus will move to its parent if the focused tree item is collapsed.',
  ' Tests tree item can be focused directly via focus() method.'
]
xf_tree_util.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Check if an `Element` is a tree or not.',
  ' Check if an `Element` is a tree item or not.',
  " * When tree slot or tree item's slot changes, we need to check if the change\n" +
    ' * impacts the selected item and focused item or not, if so we update the\n' +
    ' * `selectedItem/focusedItem` in the tree.'
]
background.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Entry point for Image Loader.',
  ' Load the extension.'
]
cache.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Persistent cache storing images in an indexed database on the hard disk.',
  ' * Cache database name.',
  ' * Cache database version.',
  ' * Memory limit for images data in bytes.',
  ' * Minimal amount of memory freed per eviction. Used to limit number\n' +
    ' * of evictions which are expensive.'
]
cache_unittest.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_loader.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Loads and resizes an image.',
  ' * List of extensions allowed to perform image requests.'
]
image_loader_client.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Client used to connect to the remote ImageLoader extension. Client class runs\n' +
    ' * in the extension, where the client.js is included (eg. Files app).\n' +
    ' * It sends remote requests using IPC to the ImageLoader class and forwards\n' +
    ' * its responses.\n' +
    ' *\n' +
    ' * Implements cache, which is stored in the calling extension.',
  " * Image loader's extension id.",
  ' * Image loader client extension request URL matcher.',
  ' * Image loader client chrome://file-manager request URL matcher.',
  ' * All client request URL match CLIENT_URL_REGEX and all are\n' +
    ' * rewritten: the client extension id part of the request URL is replaced with\n' +
    ' * the image loader extension id.',
  ' * Memory limit for images data in bytes.'
]
image_loader_client_unittest.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Lets the client to load URL and returns the local cache (not caches in the\n' +
    ' * image loader extension) is used or not.\n' +
    ' *\n' +
    ' * @param url URL\n' +
    ' * @param cache Whether to request caching on the request.\n' +
    ' * @return True if the local cache is used.'
]
image_loader_private.d.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Definitions for chrome.imageLoaderPrivate API\n' +
    ' * Generated from: chrome/common/extensions/api/image_loader_private.idl\n' +
    ' * run `tools/json_schema_compiler/compiler.py\n' +
    ' * chrome/common/extensions/api/image_loader_private.idl -g ts_definitions` to\n' +
    ' * regenerate.'
]
image_loader_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Casts a map of options as an incoming load request to test CopyParameters.\n' +
    ' *\n' +
    ' * @return Calculated copy parameters.',
  ' * Test case:\n * - Source image: 200x50\n * - Target: max size is 100x100',
  ' * Test case:\n' +
    ' * - Source image: 50x200 90 deg clock-wise rotated image.\n' +
    ' * - Target: max size is 100x100',
  ' * Test case:\n * - Source image: 800x100\n * - Target: 50x50 cropped image.',
  ' * Test case:\n * - Source image: 200x25\n * - Target: 50x50 cropped image.',
  ' * Test case:\n * - Source image: 20x10\n * - Target: 50x50 cropped image.',
  ' * Test case:\n' +
    ' * - Source image: 100x400 90 degree clock-wise rotated.\n' +
    ' * - Target: 50x50 cropped image'
]
image_loader_util.ts [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Checks if the options on the request contain any image processing.\n' +
    ' *\n' +
    ' * @param width Source width.\n' +
    ' * @param height Source height.\n' +
    ' * @param request The request, containing resizing options.\n' +
    ' * @return True if yes, false if not.',
  ' * Calculates dimensions taking into account resize options, such as:\n' +
    ' * - scale: for scaling,\n' +
    ' * - maxWidth, maxHeight: for maximum dimensions,\n' +
    ' * - width, height: for exact requested size.\n' +
    ' * Returns the target size as hash array with width, height properties.\n' +
    ' *\n' +
    ' * @param width Source width.\n' +
    ' * @param height Source height.\n' +
    ' * @param request The request, containing resizing options.\n' +
    ' * @return Dimensions.',
  ' * Performs resizing and cropping of the source image into the target canvas.\n' +
    ' *\n' +
    ' * @param source Source image or canvas.\n' +
    ' * @param target Target canvas.\n' +
    ' * @param request The request, containing resizing options.',
  ' * Calculates copy parameters.\n' +
    ' *\n' +
    ' * @param source Source image or canvas.\n' +
    ' * @param request The request, containing resizing options.\n' +
    ' * @return Calculated copy parameters.'
]
image_orientation.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Class representing image orientation.'
]
image_orientation_unittest.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
image_request_task.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Calls the imageLoaderPrivate API with the given message.\n' +
    ' *\n' +
    ' * @param msg The imageLoaderPrivate call arguments.\n' +
    ' * @return A promise for the thumbnailDataUrl.',
  ' * Creates and starts downloading and then resizing of the image. Finally,\n' +
    ' * returns the image using the callback.'
]
load_image_request.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Response status.',
  ' * Structure of the response object passed to the LoadImageRequest callback.\n' +
    ' * All methods must be static since this is passed between isolated contexts.',
  ' * Encapsulates a request to load an image.\n' +
    ' * All methods must be static since this is passed between isolated contexts.',
  ' * Creates a cache key.\n' +
    ' *\n' +
    ' * @return Cache key. It may be null if the cache does not support the request.\n' +
    ' *     e.g. Data URI.',
  ' * Creates a cancel request.\n *\n * @param taskId The task to cancel.',
  ' * Creates a load request from an option map.\n' +
    ' * Only the timestamp may be undefined.\n' +
    ' *\n' +
    ' * @param params Request parameters.',
  ' * Creates a request to load a full-sized image.\n' +
    ' * Only the timestamp may be undefined.\n' +
    ' *\n' +
    ' * @param params Request parameters.',
  ' Creates a load request from a url string. All options are undefined.'
]
overrides.d.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
piex_loader.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Declares the piex-wasm Module interface. The Module has many interfaces\n' +
    ' * but only declare the parts required for PIEX work.',
  ' * Subset of the Emscripten Module API required for initialization. See\n' +
    ' * https://emscripten.org/docs/api_reference/module.html#module.',
  " * Module defined by 'piex.js.wasm' script upon initialization.",
  " * Module constructor defined by 'piex.js.wasm' script.",
  ' * Set true if the Module.onAbort() handler is called.',
  ' * Returns a promise that resolves once initialization is complete. PiexModule\n' +
    ' * may be undefined before this promise resolves.',
  ' * Module failure recovery: if piexFailed is set via onAbort due to OOM in\n' +
    ' * the C++ for example, or the Module failed to load or call run, then the\n' +
    ' * Module is in a broken, non-functional state.\n' +
    ' *\n' +
    ' * Loading the entire page is the only reliable way to recover from broken\n' +
    ' * Module state. Log the error, and return true to tell caller to initiate\n' +
    ' * failure recovery steps.\n' +
    ' *',
  ' JFIF APP2 ICC_PROFILE segment containing an AdobeRGB1998 Color Profile.',
  ' * Piex-wasm extracts the "preview image" from a RAW image. The preview image\n' +
    ' * |format| is either 0 (JPEG), or 1 (RGB), and has a JEITA EXIF |colorSpace|\n' +
    ' * (sRGB or AdobeRGB1998) and a JEITA EXIF image |orientation|.\n' +
    ' *\n' +
    ' * An RGB format preview image has both |width| and |height|, but JPEG format\n' +
    ' * previews have neither (piex-wasm C++ does not parse/decode JPEG).\n' +
    ' *\n' +
    ' * The |offset| to, and |length| of, the preview image relative to the source\n' +
    ' * data is indicated by those fields. They are positive > 0. Note: the values\n' +
    ' * are controlled by a third-party and are untrustworthy (Security).',
  ' * The piex-wasm Module.image(<RAW image source>,...) API returns `error`, or\n' +
    ' * else the source `preview` and/or `thumbnail` image metadata along with the\n' +
    ' * photographic `details` derived from the RAW image EXIF.',
  ' * Preview Image EXtractor (PIEX).',
  ' * PiexLoader: is a namespace.'
]
scheduler.ts [
  ' Copyright 2013 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' `deviceMemory` might be 0.5 or 0.25, so we normalize to minimum of 2.',
  ' For low end devices `hardwareCount` can be low like 4 some other devies are\n' +
    ' low in memory, it will have the value 4 as in 4GB.',
  ' * Maximum download tasks to be run in parallel, for low end devices we expect\n' +
    ' * the result to be 2, higher end devices we expect to be at least 4, but no\n' +
    ' * more than 5.',
  ' * Scheduler for ImageRequestTask objects. Fetches tasks from a queue and\n' +
    ' * processes them synchronously, taking into account priorities. The highest\n' +
    ' * priority is 0.'
]
scheduler_unittest.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Fake global clock used to record the "time" at which a task was run.',
  ' * Checks that adding and removing tasks before the scheduler is started works.',
  ' * Checks that tasks that were in newTasks are correctly copied to pending\n' +
    ' * tasks when scheduler is started. They also should be executed in the\n' +
    ' * order of their priorities.',
  ' * Checks that the scheduler only launches MAXIMUM_IN_PARALLEL tasks.'
]
sw_od_messages.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Definitions for messages passed between the SW (service\n' +
    ' * worker) and OD (offscreen document).\n' +
    ' *\n' +
    ' * The FooBarPrivateApi types capture the arguments for imageLoaderPrivate\n' +
    ' * calls made by the SW on behalf of the OD. These definitions are manually\n' +
    ' * written based on the auto-generated image_loader_private.d.ts.'
]
definitions.d.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' TODO(b/319189127): Remove these when the integration tests extension is\n' +
    ' migrated to manifest v3 and can use the Promise version of these APIs.'
]
android_photos.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
background.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * This is the entry point for the integration test.',
  ' Application ID (URL) for File Manager System Web App (SWA).',
  ' * For async function tests, wait for the test to complete, check for app errors\n' +
    ' * unless skipped, and report the results.\n' +
    ' * @param resultPromise A promise that resolves with the test result.',
  ' * When the FileManagerBrowserTest harness loads this test extension, request\n' +
    ' * configuration and other details from that harness, including the test case\n' +
    ' * name to run. Use the configuration/details to setup the test environment,\n' +
    ' * then run the test case using chrome.test.RunTests.'
]
breadcrumbs.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Tests that breadcrumbs work.',
  ' * Tests that Downloads is translated in the breadcrumbs.',
  ' * Tests that the breadcrumbs correctly render a short (3 component) path.',
  ' * Tests that short breadcrumbs paths (of 4 or fewer components) should not\n' +
    ' * be rendered elided. The elider button not exist.',
  ' * Tests that the breadcrumbs correctly render a long (5 component) path.',
  ' * Tests that clicking a main breadcumb button makes the app navigate and\n' +
    ' * update the breadcrumb to that item.',
  ' * Tests that an Enter key on a main breadcumb button item makes the app\n' +
    ' * navigate and update the breadcrumb to that item.',
  ' * Tests that a breadcrumbs elider button click opens its drop down menu and\n' +
    ' * that clicking the button again, closes the drop down menu.',
  ' * Tests that pressing Enter key on the breadcrumbs elider button opens its\n' +
    ' * drop down menu, then pressing Escape key closes the drop down menu.',
  ' * Tests that clicking outside the elider button drop down menu makes that\n' +
    ' * drop down menu close.',
  ' * Tests that clicking an elider button drop down menu item makes the app\n' +
    ' * navigate and update the breadcrumb to that item.',
  ' * Tests that a <shift>-Tab key on the elider button drop down menu closes\n' +
    ' * the menu and focuses button#first to the left of the elider button.',
  ' * Tests that a Tab key on the elider button drop down menu closes the menu\n' +
    ' * and focuses button#second to the right of the elider button.',
  ' * Test that navigating back from a sub-folder in Google Drive> Shared With Me\n' +
    ' * using the breadcrumbs.\n' +
    ' * Internally Shared With Me uses some of the Drive Search code, this confused\n' +
    ' * the DirectoryModel clearing the search state in the Store.'
]
choose_entry.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview\n * @suppress {checkTypes}',
  ' * Extracts parameters used by chooseEntry function.',
  ' * Opens a file dialog. The type of the dialog is dicated by the params.',
  ' Initializes this module by triggering chrome.fileSystem.chooseEntry call.\n' +
    ' This is done with the help of chooseEntry() function that returns a promise\n' +
    ' fulfilled once the name of the entry was selected. The entry is then set on\n' +
    ' the "global" variable of the background page.'
]
choose_entry_const.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The name of the property under which we store the selected file entry.'
]
context_menu.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests that check the context menu displays the right options (enabled and\n' +
    ' * disabled) for different types of files.\n' +
    ' *\n' +
    ' * The names passed to the tests are file names to select. They are generated\n' +
    ' * from COMPLEX_DRIVE_ENTRY_SET (see remoteCall.setupAndWaitUntilReady).',
  ' * Copy a text file to clipboard if the test requires it.\n' +
    ' *\n' +
    ' * @param appId ID of the app window.\n' +
    ' * @param commandId ID of the command in the context menu to check.',
  ' * Selects a file in the file list.\n' +
    ' *\n' +
    ' * @param appId ID of the app window.\n' +
    ' * @param path Path to the file to be selected.',
  ' * Right clicks the currently selected file in the file list and waits for its\n' +
    ' * context menu to appear.\n' +
    ' *\n' +
    ' * @param appId ID of the app window.',
  ' * Tests that the specified menu item is in |expectedEnabledState| when the\n' +
    ' * entry at |path| is selected.\n' +
    ' *\n' +
    ' * @param commandId ID of the command in the context menu to check.\n' +
    ' * @param path Path to the file to open the context menu for.\n' +
    ' * @param expectedEnabledState True if the command should be enabled in the\n' +
    " *     context menu, false if not. Only checked if the command isn't hidden.\n" +
    ' * @param expectedHiddenState True if the command should be hidden in the\n' +
    ' *     context menu, false if not. Defaults to false.',
  ' * Tests that the Delete menu item is enabled if a read-write entry is selected.',
  ' * Tests that the Delete menu item is disabled if a read-only document is\n' +
    ' * selected.',
  ' * Tests that the Delete menu item is disabled if a read-only file is selected.',
  ' * Tests that the Delete menu item is disabled if a read-only folder is\n' +
    ' * selected.',
  ' * Tests that the Rename menu item is enabled if a read-write entry is selected.',
  ' * Tests that the Rename menu item is disabled if a read-only document is\n' +
    ' * selected.',
  ' * Tests that the Rename menu item is disabled if a read-only file is selected.',
  ' * Tests that the Rename menu item is disabled if a read-only folder is\n' +
    ' * selected.',
  ' * Tests that the Copy menu item is enabled if a read-write entry is selected.',
  ' * Tests that the Copy menu item is enabled if a read-only document is\n' +
    ' * selected.',
  ' * Tests that the Copy menu item is disabled if a strict (no-copy) read-only\n' +
    ' * document is selected.',
  ' * Tests that the Copy menu item is enabled if a read-only file is selected.',
  ' * Tests that the Copy menu item is enabled if a read-only folder is\n' +
    ' * selected.',
  ' * Tests that the Cut menu item is enabled if a read-write entry is selected.',
  ' * Tests that the Cut menu item is disabled if a read-only document is\n' +
    ' * selected.',
  ' * Tests that the Cut menu item is disabled if a read-only file is selected.',
  ' * Tests that the Restriction details menu item is hidden if DLP is disabled.',
  ' * Tests that the Cut menu item is disabled if a read-only folder is\n' +
    ' * selected.',
  ' * Tests that the Paste into Folder menu item is enabled if a read-write folder\n' +
    ' * is selected.',
  ' * Tests that the Paste into Folder menu item is disabled if a read-only folder\n' +
    ' * is selected.',
  ' * Tests that the "Install with Linux" file context menu item is hidden for a\n' +
    ' * Debian file if Crostini root access is disabled.',
  ' * Tests that the "Install with Linux" file context menu item is shown for a\n' +
    ' * Debian file if Crostini root access is enabled.',
  ' * Tests that the "Replace your Linux apps and files" file context menu item is\n' +
    ' * hidden for a *.tini file if Crostini backup is disabled.',
  ' * Tests that the "Replace your Linux apps and files" file context menu item is\n' +
    ' * shown for a *.tini file if Crostini backup is enabled.',
  ' * Tests that text selection context menus are disabled in tablet mode.',
  " * Tests that opening context menu in the rename input won't commit the\n" +
    ' * renaming.',
  ' * Tests that the specified menu item is in |expectedEnabledState| when the\n' +
    ' * context menu is opened from the file list inside the folder called\n' +
    ' * |folderName|. The folder is opened and the white area inside the folder is\n' +
    ' * selected. |folderName| must be inside the Google Drive root.\n' +
    ' *\n' +
    ' * @param commandId ID of the command in the context menu to check.\n' +
    ' * @param folderName Path to the file to open the context menu for.\n' +
    ' * @param expectedEnabledState True if the command should be enabled in the\n' +
    ' *     context menu, false if not.',
  ' * Tests that the New Folder menu item is enabled inside a folder that has\n' +
    ' * read-write permissions.',
  ' * Tests that the New Folder menu item is enabled inside a folder that has\n' +
    ' * read-write permissions.',
  ' * Tests that the Paste menu item is enabled inside a folder that has read-write\n' +
    ' * permissions.',
  ' * Tests that the Paste menu item is disabled inside a folder that has read-only\n' +
    ' * permissions.',
  ' * Checks that mutating context menu items are not present for a root within\n' +
    ' * My files.\n' +
    ' * @param itemName Name of item inside MyFiles that should be checked.\n' +
    ' * @param commandStates Commands that should be enabled for the checked item.',
  ' * Check that mutating context menu items are not shown for Downloads within My\n' +
    ' * files.',
  ' * Check that mutating context menu items are not shown for Play files within My\n' +
    ' * files.',
  ' * Check that mutating context menu items are not shown for Linux files within\n' +
    ' * My files.',
  ' * Tests that the specified menu item is in |expectedEnabledState| when the\n' +
    ' * entry at |path| is selected.\n' +
    ' *\n' +
    ' * @param commandId ID of the command in the context menu to check.\n' +
    ' * @param path Path to the file to open the context menu for.\n' +
    ' * @param expectedEnabledState True if the command should be enabled in the\n' +
    ' *     context menu, false if not.',
  ' * Tests that the Delete menu item is disabled if the DocumentsProvider file is\n' +
    ' * not deletable.',
  ' * Tests that the Delete menu item is enabled if the DocumentsProvider file is\n' +
    ' * deletable.',
  ' * Tests that the Rename menu item is disabled if the DocumentsProvider file is\n' +
    ' * not renamable.',
  ' * Tests that the Rename menu item is enabled if the DocumentsProvider file is\n' +
    ' * renamable.',
  ' * Tests that the specified menu item is in |expectedEnabledState| when the\n' +
    ' * entry at |path| is selected.\n' +
    ' *\n' +
    ' * @param commandId ID of the command in the context menu to check.\n' +
    ' * @param fileName Name of the file to open the context menu for.\n' +
    ' * @param expectedEnabledState True if the command should be enabled in the\n' +
    ' *     context menu, false if not.\n' +
    ' * @param selectMultiple True if multiple file should be selected before the\n' +
    ' *     context menu is shown.',
  ' * Tests that the Delete menu item is disabled for files in Recents.',
  ' * Tests that the "Go to file location" menu item is enabled for files in\n' +
    ' * Recents.',
  ' * Tests that the "Go to file location" menu item is disabled when multiple\n' +
    ' * files are selected in Recents.',
  ' * Tests that context menu in file list gets the focus, so ChromeVox can\n' +
    ' * announce it.',
  ' * Test that the "copy" context menu item is disabled for Google Drive CSE\n' +
    ' * files.',
  ' * Test that a Google Drive CSE files can be moved (using cut+paste) within\n' +
    ' * Google Drive.',
  ' * Test that a Google Drive CSE files can not be moved (using cut+paste) outside\n' +
    ' * of Google Drive.'
]
copy_between_windows.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Volume type used to find USB removable volume.',
  ' * Opens two window of given root paths.\n' +
    ' * @param rootPath1 Root path of the first window.\n' +
    ' * @param rootPath2 Root path of the second window.\n' +
    ' * @return Promise fulfilled with an array containing two window IDs.',
  ' * Copies a file between two windows.\n' +
    ' * @param window1 ID of the source window.\n' +
    ' * @param window2 ID of the destination window.\n' +
    ' * @param file Test entry info to be copied.\n' +
    ' * @param alreadyPresentFile Test entry info for file that should already exist.\n' +
    ' * @return Promise fulfilled on success.',
  ' * Tests file copy+paste from Drive to Downloads.',
  ' * Tests file copy+paste from Downloads to Drive.',
  ' * Tests file copy+paste from Drive to USB.',
  ' * Tests file copy+paste from Downloads to USB.',
  ' * Tests file copy+paste from USB to Drive.',
  ' * Tests file copy+paste from USB to Downloads.'
]
create_new_folder.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Constants for interacting with the directory tree on the LHS of Files app.\n' +
    ' * When we are not in guest mode, we fill Google Drive with the basic entry set\n' +
    ' * which causes an extra tree-item to be added.',
  ' * Selects the first item in the file list.\n' +
    ' *\n' +
    ' * @param appId The Files app windowId.\n' +
    ' * @return Promise to be fulfilled on success.',
  ' * Searches for the file being renamed and gets current value for the renaming\n' +
    ' * field. Throws test assertion error if fails to find one.\n' +
    ' *\n' +
    ' * @param appId The Files app windowId.\n' +
    ' * @return Current value of the name.',
  ' * Creates a new folder in the file list.\n' +
    ' *\n' +
    ' * @param appId The Files app windowId.\n' +
    ' * @param initialEntrySet Initial set of entries.\n' +
    ' * @param label Downloads or Drive directory tree item label.\n' +
    ' * @return Promise to be fulfilled on success.'
]
crostini.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests that when drag from Files app and dropping in the Plugin VM a\n' +
    " * dialog is displayed if the containing folder isn't shared with Plugin VM."
]
directory_tree.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * Tests that when the current folder is changed, the 'selected' attribute\n" +
    ' * appears in the selected folder .tree-row and the "Current directory" aria\n' +
    ' * description is present on the corresponding tree item.',
  ' * Tests that when the selected folder in the directory tree changes, the\n' +
    ' * selected folder and the tree item that has the "Current directory" aria\n' +
    ' * description do not change. Also tests that when the focused folder is\n' +
    ' * activated (via the Enter key for example), both the selected folder and the\n' +
    ' * tree item with a "Current directory" aria description are updated.',
  ' * Tests that the directory tree can be vertically scrolled.',
  ' * Tests that the directory tree does not horizontally scroll.',
  ' * Tests that the directory tree does not horizontally scroll when expanding\n' +
    ' * nested folder items.',
  ' * Creates a folder test entry from a folder |path|.\n' +
    ' * @param path The folder path.',
  ' * Tests that the directory tree does not horizontally scroll when expanding\n' +
    ' * nested folder items when the text direction is RTL.',
  ' * Adds folders with the name prefix /path/to/sub-folders, it appends "-$X"\n' +
    ' * suffix for each folder.\n' +
    ' *\n' +
    ' * NOTE: It assumes the parent folders exist.\n' +
    ' *\n' +
    ' * @param number Number of sub-folders to be created.\n' +
    ' * @param namePrefix Prefix name to be used in the folder.',
  ' * Tests that expanding a folder updates the its sub-folders expand icons.',
  ' * Tests to ensure expand icon does not show up if show hidden files is off\n' +
    ' * and a directory only contains hidden directories.',
  ' * Tests to ensure expand icon shows up if show hidden files\n' +
    ' * is on and a directory only contains hidden directories.',
  ' * Tests that the "expand icon" on directory tree items is correctly\n' +
    ' * shown for directories on the "My Files" volume. Volumes such as\n' +
    ' * this, which do not delay expansion, eagerly traverse into children\n' +
    ' * directories of the current directory to see if the children have\n' +
    ' * children: if they do, an expand icon is shown, if not, it is hidden.',
  ' * Tests that the "expand icon" on directory tree items is correctly\n' +
    ' * shown for directories on an SMB volume. Volumes such as this, which\n' +
    " * do delay expansion, don't eagerly traverse into children directories\n" +
    ' * of the current directory to see if the children have children, but\n' +
    " * instead give every child directory a 'tentative' expand icon. When\n" +
    ' * that icon is clicked, the child directory is read and the icon will\n' +
    ' * only remain if the child really has children.',
  ' * When drag a file and hover over the directory tree item, the item should be\n' +
    ' * expanded and selected, current directory should also change to that folder.',
  " * When My Drive is active, clicking Google Drive shouldn't change the current\n" +
    ' * directory.',
  ' * When the last sub folder is deleted, the expand icon should disappear\n' +
    ' * for its parent folder, it will reappear after adding a new sub folder back.',
  ' * When Google Drive is being disconnected and reconnected, the children order\n' +
    ' * of "Google Drive" directory tree item should be kept.'
]
directory_tree_context_menu.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Sets up for directory tree context menu test. In addition to normal setup,\n' +
    ' * we add destination directory.',
  ' * Clicks context menu item of id in directory tree.\n' +
    ' *\n' +
    ' * @param path Path of the tree item to trigger context menu.\n' +
    ' * @param id The context menu id.',
  ' * Navigates to destination directory and test paste operation to check\n' +
    ' * whether the paste operation is done correctly or not. This method does NOT\n' +
    ' * check source entry is deleted or not for cut operation.',
  ' * Rename photos directory to specified name by using directory tree.\n' +
    ' * @param useKeyboardShortcut Set to true to use keyboard shortcut instead of\n' +
    ' *     mouse to trigger context menu.',
  ' * Renames directory and confirm current directory is moved to the renamed\n' +
    ' * directory.',
  ' * Renames directory and confirms that an alert dialog is shown.',
  ' * Creates directory from directory tree.',
  ' * Checks all visible items in the context menu for directory tree.\n' +
    ' * @param breadcrumbsPath Path based on the entry labels like:\n' +
    ' *     /My files/Downloads/photos to item to be tested with context menu.\n' +
    " * @param menuStates Mapping each command to it's enabled state.\n" +
    ' * @param rootsMenu True if the item uses #roots-context-menu instead of\n' +
    ' *     #directory-tree-context-menu\n' +
    ' * @param shortcutToPath For shortcuts it navigates to a different breadcrumbs\n' +
    ' *     path, like /My Drive/ShortcutName.',
  ' * Tests copying a directory from directory tree with context menu.',
  ' * Tests copying a directory from directory tree with the keyboard shortcut.',
  ' * Tests copying a directory without changing the current directory.',
  ' * Tests cutting a directory with the context menu.',
  ' * Tests cutting a directory with the keyboard shortcut.',
  ' * Tests cutting a directory without changing the current directory.',
  ' * Tests pasting into folder with the context menu.',
  ' * Tests pasting into a folder without changing the current directory.',
  ' * Tests renaming a folder with the context menu.',
  ' * Tests that a child folder breadcrumbs is updated when renaming its parent\n' +
    ' * folder. crbug.com/885328.',
  ' * Tests renaming folder with the keyboard shortcut.',
  ' * Tests renaming folder without changing the current directory.',
  ' * Tests renaming a folder to an empty string.',
  ' * Tests renaming folder an existing name.',
  ' * Tests renaming removable volume with the keyboard.',
  ' * Tests renaming removable volume with the context menu.',
  " * Tests that opening context menu in the rename input won't commit the\n" +
    ' * renaming.',
  ' * Tests creating a folder with the context menu.',
  ' * Tests creating a folder with the keyboard shortcut.',
  ' * Tests creating folder without changing the current directory.',
  ' * Tests the creation of new folders from the directory tree from the context\n' +
    ' * menu. Creates the new folders in random order to ensure directory tree\n' +
    ' * sorting does not break folder renaming. crbug.com/1004717',
  " * Tests context menu for Recent root, currently it doesn't show context menu.",
  ' * Tests context menu for a ZIP root inside it.',
  ' * Tests context menu on the Eject button of a ZIP root.',
  ' * Tests context menu for Shortcut roots.',
  ' * Tests context menu for MyFiles, Downloads and sub-folder.',
  ' * Tests context menu for MyFiles, Downloads and sub-folder.',
  ' * Tests context menu for Crostini real root and a folder inside it.',
  ' * Tests context menu for ARC++/Play files root and a folder inside it.',
  ' * Tests context menu for USB root (single and multiple partitions).',
  ' * Tests context menu for USB root with DCIM folder.',
  ' * Tests context menu for Mtp root and a folder inside it.',
  ' * Tests context menu for FSP root and a folder inside it.',
  ' * Tests context menu for DocumentsProvider root and a folder inside it.',
  ' * Tests context menu for My Drive, read-only and read-write folder inside it.',
  ' * Tests context menu for Shared drives grand-root, a read+write shared drive\n' +
    ' * root, a folder inside it, a read-only shared drive and a folder inside\n' +
    ' * it.',
  ' * Tests context menu for Google Drive/Shared with me root, currently it\n' +
    " * doesn't show context menu.",
  " * Tests context menu for Google Drive/Offline root, currently it doesn't show\n" +
    ' * context menu.',
  ' * Tests context menu for Google Drive/Computer grand-root, a computer root, a\n' +
    ' * folder inside it.',
  ' * Tests context menu for Trash root.',
  ' * Tests that context menu in directory tree gets the focus, so ChromeVox can\n' +
    ' * announce it.',
  ' * Test that the directory tree context menu can be opened by keyboard\n' +
    ' * navigation.'
]
dlp.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Copies or moves a file from Downloads to the provided location.\n' +
    ' * @param appId ID of the Files app window.\n' +
    ' * @param file Test entry info to be copied/cut.\n' +
    ' * @param destination Name of the destination folder.\n' +
    ' * @param isCopy Whether it should copy or move the file.\n' +
    ' * @return Promise fulfilled on success.',
  ' * List of panel types.\n * Keep this in sync with PanelItem panel types.',
  ' * List of checked panel status indicator types.',
  ' * Returns the first panel item with the provided panel type.\n' +
    ' * @param appId ID of the Files app window.',
  ' * Checks that the panel item with provided parameters exists.\n' +
    ' * @param appId ID of the Files app window.\n' +
    ' * @param panelType Expected panel type.\n' +
    ' * @param primaryText Expected primary text.\n' +
    ' * @param secondaryText Expected secondary text. Can be null.\n' +
    ' * @param status Expected status indicator (failure or warning).\n' +
    ' * @return Promise fulfilled on success.',
  " * Checks that the panel item's primary and secondary buttons have expected type\n" +
    ' * and text, and then clicks the button defined by selectedButton.\n' +
    ' * @param appId ID of the Files app window.\n' +
    ' * @param secondaryButtonCategory Expected secondary button category (dismiss or\n' +
    ' *     cancel).\n' +
    ' * @param selectedButton The button to click (primary or secondary).',
  " * Expands the summary panel if it's collapsed, no-op if already expanded.\n" +
    ' * @param appId ID of the Files app window.\n' +
    ' *',
  ' * Tests that DLP block toast is shown when a restricted file is cut.',
  ' * Tests that if the file is restricted by DLP, a managed icon is shown in the\n' +
    ' * detail list and a tooltip is displayed when hovering over that icon.',
  ' * Tests that if the file is restricted by DLP, the Restriction details context\n' +
    ' * menu item appears and is enabled.',
  ' Filters used for the following save-as and file-open tests.\n' +
    ' Rows in `My files`',
  ' Dialog buttons',
  ' * Tests the save dialogs properly show DLP blocked Play files, before and after\n' +
    ' * being mounted, both in the navigation list and in the details list.',
  ' * Tests the save dialogs properly show DLP blocked guest OS volumes, before and\n' +
    ' * after being mounted: it should be marked as disabled in the navigation list\n' +
    ' * both before and after mounting, but in the file list it will only be disabled\n' +
    ' * after mounting.',
  ' * Tests the save dialogs properly show DLP blocked Linux files, before and\n' +
    ' * after being mounted: it should be marked as disabled in the navigation list\n' +
    ' * both before and after mounting, but in the file list it will only be disabled\n' +
    ' * after mounting.',
  ' * Tests the save dialogs properly show blocked USB volumes.',
  ' * Tests the save dialogs properly show blocked Google drive volume.',
  " * Tests that save dialogs are opened in a requested volume/directory, when it's\n" +
    ' * not blocked by DLP. This test is an addition to the\n' +
    ' * `saveAsDlpRestrictedRedirectsToMyFiles` test case, which assert that if the\n' +
    ' * directory is blocked, the dialog will not be opened in the requested path.',
  ' * Tests that save dialogs are never opened in a DLP blocked volume/directory,\n' +
    ' * but rather in the default display root.',
  ' * Tests the open file dialogs properly show DLP blocked files. If a file cannot\n' +
    ' * be opened by the caller of the dialog, it should be marked as disabled in the\n' +
    ' * details list. If such a file is selected, the "Open" dialog button should be\n' +
    ' * disabled.',
  " * Tests that the file picker disables DLP blocked files and doesn't allow\n" +
    ' * opening them, while it allows selecting and opening folders.',
  ' * Tests that DLP disabled file tasks are shown as disabled in the menu.',
  ' * Tests that extraction works when the scoped file access delegate exists and\n' +
    ' * correct output files are generated.',
  ' * Tests that a copy or move IO task that completed with error due to block\n' +
    ' * restriction properly updates the task state and shows a correct panel item.',
  ' * Tests that a copy or move IO task that is paused due to warn restriction\n' +
    ' * properly updates the task state and shows a correct panel item.',
  ' * Test for http://b/299583281.\n' +
    ' * Tests that after DLP warning times out, the copy or move IO task\n' +
    ' * properly updates the task state and shows a correct panel item.',
  ' * Tests that the summary panel shows the correct title when it contains a mix\n' +
    ' * of warning (paused copy or move IO task) and error (blocked copy or move IO\n' +
    ' * task) panels, or multiple warnings, but is not shown if only one panel is\n' +
    ' * visible.'
]
dlp_enterprise_connectors.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that proceeding two warnings, the first is triggered by DLP and the\n' +
    ' second is triggered by Enterprise Connectors, will move all the copied files.',
  ' Tests that blocking different files by DLP and Enterprise Connectors will\n' +
    ' copy all the file except the blocked ones. A block panel will be shown in the\n' +
    ' end  with the blocked files count.'
]
drive_specific.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * Expected files shown in the search results for 'hello'",
  ' * Expected text shown in the Enable Docs Offline dialog.',
  ' The id attribute of the dismiss button in the educational banner.',
  ' * Opens the Enable Docs Offline dialog and waits for it to appear in the given\n' +
    ' * `appId` window.\n' +
    ' *',
  ' * Waits for getLastDriveDialogResult to return the given |expectedResult|.',
  ' * Waits for a given notification to appear.\n' +
    ' * @param notificationId ID of notification to wait for.',
  ' * Tests opening the "Offline" on the sidebar navigation by clicking the icon,\n' +
    ' * and checks contents of the file list. Only the entries "available offline"\n' +
    ' * should be shown. "Available offline" entries are hosted documents and the\n' +
    ' * entries cached by DriveCache.',
  ' * Tests opening the "Shared with me" on the sidebar navigation by clicking the\n' +
    ' * icon, and checks contents of the file list. Only the entries labeled with\n' +
    ' * "shared-with-me" should be shown.',
  ' * Tests that pressing enter after typing a search shows all of\n' +
    ' * the results for that query.',
  ' * Tests that pressing the clear search button announces an a11y message and\n' +
    ' * shows all files/folders.',
  ' * Tests that pinning multiple files affects the pin action of individual\n' +
    ' * files.',
  ' * Tests that pinning hosted files without the required extensions is disabled,\n' +
    ' * and that it does not affect multiple selections with non-hosted files.',
  ' * Tests pinning a file to a mobile network.\n' +
    ' * TODO(b/296960734): Fix this test once the notification has been fixed.',
  ' * Tests that the pinned toggle in the toolbar updates on pinned state changes\n' +
    ' * within fake entries.',
  " * Tests that pressing Ctrl+A (select all files) from the search box doesn't\n" +
    ' * put the Files App into check-select mode (crbug.com/849253).',
  ' * Verify that "Available Offline" is not available from the gear menu for a\n' +
    ' * drive file.',
  ' * Verify that "Available Offline" is not available from the gear menu for a\n' +
    ' * drive directory.',
  ' * Verify that the "Available Offline" toggle in the action bar appears and\n' +
    ' * changes according to the selection.',
  ' * Tests following links to folders.',
  ' * Tests opening files through folder links.',
  ' * Tests opening files through transitive links.',
  ' * Tests that the welcome banner appears when a Drive volume is opened.',
  ' * Tests that the Drive offline info banner appears when a Drive volume is\n' +
    ' * opened.',
  ' * Tests that the encryption badge appears next to the CSE file when a Drive\n' +
    ' *  volume is opened.',
  ' * Tests that the inline sync status "in progress" icon is displayed in "My\n' +
    ' * Drive" as the file starts syncing then disappears as it finishes syncing\n' +
    ' * (i.e., the file reaches 100% progress).',
  ' * Tests that the inline sync status icons are displayed in Drive on parent\n' +
    " * folders containing entries and that child entries' statuses are aggregated\n" +
    ' * respecting the order of precedence (failed > in progress > completed).',
  ' * Tests that the Enable Docs Offline dialog appears in the Files App.',
  ' * Tests that the Enable Docs Offline dialog launches a Chrome notification if\n' +
    ' * there are no Files App windows open.',
  ' * Tests that the Enable Docs Offline dialog appears in the focused window if\n' +
    ' * there are more than one Files App windows open.',
  ' * Tests that the Enable Docs Offline dialog disappears when Drive is unmounted.',
  ' * Tests that when deleting a file on Google Drive the dialog has no mention of\n' +
    " * permanent deletion (as the files aren't pemanently deleted but go to Google\n" +
    ' * Drive trash instead).',
  ' * Tests that Google One offer banner appears if a user navigates to Drive\n' +
    ' * volume.',
  ' * Tests that Google One offer banner does not appear if the flag is off, which\n' +
    ' * is the default.',
  ' * Test that Google One offer banner can get dismissed with a click of Dismiss\n' +
    ' * button.',
  ' * Tests that when bulk pinning is enabled, the "Available offline" toggle\n' +
    ' * should not be visible. When the preference is updated, the toggle should\n' +
    ' * reappear.',
  ' * Tests that "Shared with me" which is outside "My drive" retains the pinned\n' +
    ' * property and it is not updated when bulk pinning is enabled.',
  ' * Tests that when bulk pinning is enabled, the "Available offline" toggle\n' +
    ' * should still be visible in the Shared with me section.',
  " * Tests that files that can't be pinned should have the correct CSS class\n" +
    ' * applied to them. When they go back to being able to be pinned (e.g. from Docs\n' +
    ' * offline coming back online) then ensure the inline icon is updated.',
  ' * Tests that items that are cached outside of their virtual list get their\n' +
    ' * inline sync status updated when they get attached back to the DOM.',
  ' * Tests that when bulk pinning is enabled the queued state is shown for all\n' +
    ' * files that the PinningManager is tracking but has not yet pinned.',
  ' * Tests that items that have the `dirty` metadata flag set to true have their\n' +
    ' * sync_status property returned as "QUEUED".',
  " * Tests that the Drive bulk pinning banner is disabled (i.e. doesn't appear\n" +
    ' * between the Drive welcome banner but before the Holding space banner).',
  ' * Tests that the Drive bulk pinning banner is enabled (i.e. it appears directly\n' +
    ' * after the Drive welcome banner).',
  ' * Checks that we cannot open Google Doc without network connection.',
  ' * Verifies that once a file completes syncing, its syncing status\n' +
    ' * indicator displays as "completed" and is dismissed about 300ms\n' +
    ' * later.',
  ' * Tests that when the organization limit has exceeded (not the user storage)\n' +
    ' * the out of organization space banner appears.',
  ' * Tests that copy operation of a directory will start, but a error message will\n' +
    ' * appear when encrypted files within that directory were skipped.'
]
file_dialog.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Sends a key event to an open file dialog, after selecting the file |name|\n' +
    ' * entry in the file list.\n' +
    ' *\n' +
    ' * @param name File name shown in the dialog.\n' +
    ' * @param key Key detail for fakeKeyDown event.\n' +
    ' * @param dialog ID of the file dialog window.\n' +
    ' * @return Promise to be fulfilled on success.',
  ' * Clicks a button in the open file dialog, after selecting the file |name|\n' +
    ' * entry in the file list and checking that |button| exists.\n' +
    ' *\n' +
    ' * @param name File name shown in the dialog.\n' +
    ' * @param button Selector of the dialog button.\n' +
    ' * @param dialog ID of the file dialog window.\n' +
    ' * @return Promise to be fulfilled on success.',
  ' * Sends an unload event to an open file dialog (after it is drawn) causing the\n' +
    ' * dialog to shut-down and close.\n' +
    ' *\n' +
    ' * @param dialog ID of the file dialog window.\n' +
    ' * @param element Element to query for drawing.\n' +
    ' * @return Promise to be fulfilled on success.',
  " * Adds basic file entry sets for both 'local' and 'drive', and returns the\n" +
    ' * entry set of the given |volume|.\n' +
    ' *\n' +
    ' * @param volume Name of the volume.\n' +
    ' * @return Promise to resolve({Array<TestEntryInfo>}) on success, the Array\n' +
    ' *     being the basic file entry set of the |volume|.',
  ' * Adds the basic file entry sets then opens the file dialog on the volume. Once\n' +
    ' * file |name| is shown, select it and click the Ok button.\n' +
    ' *\n' +
    ' * @param volume Volume name for  remoteCall.openAndWaitForClosingDialog.\n' +
    ' * @param name File name to select in the dialog.\n' +
    ' * @param useBrowserOpen Whether to launch the dialog from the browser.\n' +
    ' * @return Promise to be fulfilled on success.',
  ' * Clicks the OK button in the provided dialog, expecting the provided `name` to\n' +
    ' * be passed into the `OnFilesImpl()` observer in the C++ test harness.\n' +
    ' *\n' +
    ' * @param appId App window Id.\n' +
    ' * @param name The (single) filename passed to the EXPECT_CALL when verifying\n' +
    ' *     the mocked OnFilesOpenedImpl().\n' +
    " * @param openType Type of the dialog ('open' or 'saveAs').",
  ' * Adds the basic file entry sets then opens the save file dialog on the volume.\n' +
    ' * Once file |name| is shown, select it and click the Ok button, again clicking\n' +
    ' * Ok in the confirmation dialog.\n' +
    ' *\n' +
    ' * @param volume Volume name for  remoteCall.openAndWaitForClosingDialog.\n' +
    ' * @param name File name to select in the dialog.\n' +
    ' * @return Promise to be fulfilled on success.',
  ' * Adds the basic file entry sets then opens the file dialog on the volume. Once\n' +
    ' * file |name| is shown, select it and verify that the Ok button is disabled.\n' +
    ' *\n' +
    ' * @param volume Volume name for  remoteCall.openAndWaitForClosingDialog.\n' +
    ' * @param name File name to select in the dialog where the OK button should be\n' +
    ' *     disabled\n' +
    ' * @param enabledName File name to select where the OK button should be enabled,\n' +
    ' *     used to ensure that switching to |name| results in the OK button becoming\n' +
    ' *     disabled.\n' +
    ' * @param type The dialog type to open.\n' +
    ' * @return Promise to be fulfilled on success.',
  ' * Adds the basic file entry sets then opens the file dialog on the volume. Once\n' +
    " * file |name| is shown, verifies that it's dimmed according to added classes.\n" +
    ' *\n' +
    ' * @param volume Volume name for  remoteCall.openAndWaitForClosingDialog.\n' +
    ' * @param name File name to check for being dimmed in the dialog.\n' +
    ' * @return Promise to be fulfilled on success.',
  ' * Adds the basic file entry sets then opens the file dialog on the volume. Once\n' +
    ' * file |name| is shown, select it and click the Cancel button.\n' +
    ' *\n' +
    ' * @param volume Volume name for  remoteCall.openAndWaitForClosingDialog.\n' +
    ' * @param name File name to select in the dialog.\n' +
    ' * @return Promise to be fulfilled on success.',
  ' * Adds the basic file entry sets then opens the file dialog on the volume. Once\n' +
    ' * file |name| is shown, select it and send an Escape key.\n' +
    ' *\n' +
    ' * @param volume Volume name for  remoteCall.openAndWaitForClosingDialog.\n' +
    ' * @param name File name to select in the dialog.\n' +
    ' * @return Promise to be fulfilled on success.',
  ' * Tests for display:none status of feedback panels in Files app.\n' +
    ' *\n' +
    ' * @param type Type of dialog to open.',
  ' * Test file present in Downloads.',
  ' * Tests opening file dialog on Downloads and closing it with Ok button.',
  ' * Tests opening file dialog sets aria-multiselect true on grid and list.',
  ' * Tests opening save file dialog sets aria-multiselect false on grid and list.',
  ' * Tests opening save file dialog on Downloads and closing it with Ok button.',
  ' * Tests opening save file dialog on Downloads and using New Folder button.',
  ' * Tests opening file dialog on Downloads and closing it with Cancel button.',
  ' * Tests opening file dialog on Downloads and closing it with ESC key.',
  ' * Tests the feedback panels are hidden when using an open file dialog.',
  ' * Tests the feedback panels are hidden when using a save file dialog.',
  ' * Test file present in Drive only.',
  ' * Test file present in Drive only.',
  ' * Tests opening file dialog on Drive and closing it with Ok button.',
  ' * Tests save file dialog on Drive and closing it with Ok button.',
  ' * Tests that an unpinned file cannot be selected in file open dialogs while\n' +
    ' * offline.',
  ' * Tests that an unpinned file cannot be selected in save file dialogs while\n' +
    ' * offline.',
  ' * Tests opening file dialog on Drive and closing it with Ok button.',
  ' * Tests save file dialog on Drive and closing it with Ok button.',
  ' * Tests opening a file from Drive in the browser, ensuring it correctly opens\n' +
    ' * the file URL.',
  ' * Tests opening a hosted doc in the browser, ensuring it correctly navigates to\n' +
    " * the doc's URL.",
  ' * Tests opening a hosted doc in the browser, ensuring it correctly navigates to\n' +
    " * the doc's URL.",
  ' * Tests that selecting a hosted doc from a dialog requiring a real file is\n' +
    ' * disabled.',
  ' * Tests that selecting a hosted doc from a dialog requiring a real file is\n' +
    ' * disabled.',
  ' * Test that an encrypted (via CSE) file will be marked as grey in a dialog\n' +
    ' * requiring a read file.',
  ' * Tests that selecting an encrypted (via CSE) file from a dialog requiring a\n' +
    ' * real file is disabled.',
  ' * Tests opening file dialog on Drive and selecting an office file.',
  ' * Tests opening file dialog on Drive and selecting multiple files including an\n' +
    ' * office file.',
  ' * Tests opening file dialog on Drive and closing it with Cancel button.',
  ' * Tests opening file dialog on Drive and closing it with ESC key.',
  " * Tests opening file dialog, then closing it with an 'unload' event.",
  " * Tests that the open file dialog's filetype filter does not default to all\n" +
    ' * types.',
  " * Tests that the save file dialog's filetype filter defaults to all types.",
  " * Tests that the save file dialog's filetype filter can be navigated using the\n" +
    ' * keyboard.',
  ' * Tests that filtering works with { acceptsAllTypes: false } and a single\n' +
    ' * filter. Regression test for https://crbug.com/1097448.',
  ' * Opens a "Save As" dialog and clicks OK. Helper for the\n' +
    ' * saveFileDialogExtension* tests.\n' +
    ' *\n' +
    ' * @param extraParams Extra options to pass to chooseEntry().\n' +
    " * @param expectName Name for the 'expectFileTask' mock expectation.\n" +
    ' * @return The name of the entry from chooseEntry().',
  ' * Tests that a file extension is not automatically added upon confirmation\n' +
    ' * whilst the "All Files" filter is selected on the "Save As" dialog. Note the\n' +
    " * saveFileDialogDefaultFilter test above verifies that 'All Files' is actually\n" +
    ' * the default in this setup.',
  ' * With no "All Files" option, the JPEG filter should be applied by default, and\n' +
    ' * a ".jpg" extension automatically added on confirm.',
  " * An extension should only be added if the user didn't provide one, even if it\n" +
    " * doesn't match the current filter for JPEG files (i.e. /\\.(jpg)$/i).",
  ' * Tests that context menu on File List for file picker dialog.\n' +
    ' * File picker dialog displays fewer menu options than full Files app. For\n' +
    ' * example copy/paste commands are disabled. Right-click on a file/folder should\n' +
    ' * show context menu, whereas right-clicking on the blank parts of file list\n' +
    ' * should NOT display the context menu.\n' +
    ' *\n' +
    ' * crbug.com/917975 crbug.com/983507.',
  ' * Tests that select all is disabled in the gear menu for an open file dialog.',
  ' * Tests that select all is enabled in the gear menu for an open multiple files\n' +
    ' * dialog. crbug.com/937251',
  ' * Tests open file dialog on a GuestOS volume. Check that the placeholder is\n' +
    " * shown in the dialog and that clicking on it mounts the volume. We don't\n" +
    " * bother actually opening a file since once it's mounted it works like any\n" +
    ' * other local FUSE volume.',
  ' * Tests save file dialog on a GuestOS volume. Check that the placeholder is\n' +
    " * shown in the dialog and that clicking on it mounts the volume. We don't\n" +
    " * bother actually saving a file since once it's mounted it works like any other\n" +
    ' * local FUSE volume.'
]
file_display.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Waits for the empty folder element to show and assert the content to match\n' +
    ' * the expected message.\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param expectedMessage The expected empty folder message',
  ' * Checks if the files initially added by the C++ side are displayed, and\n' +
    ' * that files subsequently added are also displayed.\n' +
    ' *\n' +
    ' * @param path Path to be tested, Downloads or Drive.\n' +
    ' * @param defaultEntries Default file entries.',
  ' * Tests files display in Downloads.',
  ' * Tests opening the files app navigating to a local folder. Uses\n' +
    ' * platform_util::OpenItem, a call to an API distinct from the one commonly used\n' +
    ' * in other tests for the same operation.',
  ' * Tests opening the files app navigating to a local folder. Uses\n' +
    ' * platform_util::OpenItem, a call to an API distinct from the one commonly used\n' +
    ' * in other tests for the same operation.',
  ' * Tests opening the files app navigating to the My Drive folder. Uses\n' +
    ' * platform_util::OpenItem, a call to an API distinct from the one commonly used\n' +
    ' * in other tests for the same operation.',
  ' * Tests files display in Google Drive.',
  ' * Tests file display rendering in offline Google Drive.',
  ' * Tests file display rendering in online Google Drive.\n' +
    ' * @param appId the id for the window to check the file display.',
  ' * Tests file display rendering in online Google Drive.',
  ' * Tests file display rendering in online Google Drive when opening via OpenItem\n' +
    ' * function.',
  ' * Tests files display in the "Computers" section of Google Drive. Testing that\n' +
    ' * we can navigate to folders inside /Computers also has the side effect of\n' +
    ' * testing that the breadcrumbs are working.',
  ' * Tests files display in an MTP volume.',
  ' * Tests files display in a removable USB volume.',
  ' * Tests files display on a removable USB volume with and without partitions.',
  ' * Tests that the file system type is properly displayed in the type\n' +
    ' * column. Checks that the entries can be properly sorted by type.\n' +
    ' * crbug.com/973743',
  ' * Tests display of partitions in file list after mounting a removable USB\n' +
    ' * volume.',
  ' * Searches for a string in Downloads and checks that the correct results\n' +
    ' * are displayed.\n' +
    ' *\n' +
    ' * @param searchTerm The string to search for.\n' +
    ' * @param expectedResults The results set.\n' +
    ' *',
  ' * Tests case-sensitive search for an entry in Downloads.',
  ' * Tests case-insenstive search for an entry in Downloads.',
  " * Tests searching for a string doesn't match anything in Downloads and that\n" +
    ' * there are no displayed items that match the search string.',
  " * Tests Files app opening without errors when there isn't Downloads which is\n" +
    ' * the default volume.',
  ' * Tests Files app opening without errors when there are no volumes at all.',
  ' * Tests Files app opening without errors when there are no volumes at all and\n' +
    ' * then mounting Downloads volume which should appear and be able to display its\n' +
    ' * files.',
  ' * Tests Files app opening without errors when there are no volumes at all and\n' +
    ' * then mounting Drive volume which should appear and be able to display its\n' +
    ' * files.',
  ' * Tests Files app opening without Drive mounted.',
  ' * Tests Files app opening without Drive mounted and then disabling and\n' +
    ' * re-enabling Drive.',
  ' * Tests that mounting a hidden Volume does not mount the volume in file\n' +
    ' * manager.',
  ' * Tests Files app resisting the urge to switch to Downloads when mounts change.',
  ' * Tests Files app switching away from Drive virtual folders when Drive is\n' +
    ' * unmounted.',
  ' * Navigates to a removable volume, then unmounts it. Check to see whether\n' +
    ' * Files App switches away to the default Downloads directory.\n' +
    ' *\n' +
    ' * @param removableDirectory The removable directory to be inside\n' +
    ' *    before unmounting the USB.',
  ' * Tests Files app switches away from a removable device root after the USB is\n' +
    ' * unmounted.',
  ' * Tests Files app switches away from a partition inside the USB after the USB\n' +
    ' * is unmounted.',
  ' * Tests Files app switches away from a partition inside the USB after the USB\n' +
    ' * is unmounted. Partition-1 will be ejected first.',
  ' * Tests files display in Downloads while the default blocking file I/O task\n' +
    ' * runner is blocked.',
  ' * Tests to make sure check-select mode enables when selecting one item',
  ' * Tests to make sure read-only indicator is visible when the current directory\n' +
    ' * is read-only.',
  ' * Tests to make sure read-only indicator is NOT visible when the current\n' +
    ' * is writable.',
  ' * Tests to make sure read-only indicator is NOT visible when the current\n' +
    ' * directory is the "Linux files" fake root.',
  ' * Tests to make sure read-only indicator is NOT visible when the current\n' +
    ' * directory is a "GuestOs" fake root.',
  ' * Tests that when local files are disabled, we navigate to default set by the\n' +
    ' * policy, e.g. Drive after unmounting a USB.',
  ' * Tests that disabling local storage while in a local folder navigates away to\n' +
    ' * the default set by the policy, e.g. Drive.',
  ' * Tests that disabling local storage while in a local folder navigates away to\n' +
    ' * the default set by the policy, e.g. Drive.',
  ' * Tests that having no volumes (other than Recent), like when SkyVault is\n' +
    ' * misconfigured (no local storage, no cloud selected as alternative) shows an\n' +
    ' * error message.',
  ' * Tests that the files migrating to cloud banner appears when MyFiles is opened\n' +
    ' * while SkyVault migration is enabled.',
  ' * Tests that the files migrating to cloud banner appears when MyFiles is opened\n' +
    ' * while SkyVault migration is enabled.'
]
file_list.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Send Tab keys to Files app until #file-list gets a selected item.\n' +
    ' *\n' +
    " * Raise test failure if #file-list doesn't get anything selected in 20 tabs.\n" +
    ' *\n' +
    ' * NOTE:\n' +
    ' *   1. Sends a maximum of 20 tabs.\n' +
    ' *   2. The focused element after this function might NOT be #file-list, since\n' +
    ' *   updating the selected item which is async can be detected after an extra\n' +
    ' *   Tab has been sent.',
  ' * Tests that file list column header have ARIA attributes.',
  ' * Tests using tab to focus the file list will select the first item, if\n' +
    ' * nothing is selected.',
  ' * Tests that after a multiple selection, canceling the selection and using\n' +
    ' * Tab to focus the files list it selects the item that was last focused.',
  ' * Tests that after a multiple selection, canceling the selection and using\n' +
    ' * Tab to focus the files list it selects the item that was last focused.',
  ' * Verifies the total number of a11y messages and asserts the latest message\n' +
    ' * is the expected one.\n' +
    ' *\n' +
    ' * @return Latest a11y message.',
  ' * Tests that selecting/de-selecting files with keyboard produces a11y\n' +
    ' * messages.\n' +
    ' *\n' +
    ' * NOTE: Test shared with grid_view.js.\n' +
    ' * @param isGridView if the test is testing the grid view.',
  ' * Tests that selecting/de-selecting files with mouse produces a11y messages.\n' +
    ' *\n' +
    ' * NOTE: Test shared with grid_view.js.\n' +
    ' * @param isGridView if the test is testing the grid view.',
  ' * Tests the deletion of one or multiple items. After deletion, one of the\n' +
    " * remaining items should have the lead, but shouldn't be in check-select\n" +
    ' * mode.',
  ' * Tests that in selection mode, the rename operation is applied to the\n' +
    ' * selected item, as seen by the selection model, rather than the lead item.\n' +
    ' * The lead and the selected item(s) are different when we deselect a file\n' +
    ' * list item in selection mode. crbug.com/1094260',
  ' * Tests that user can rename a file/folder after using "select all" without\n' +
    ' * having selected any file previously.'
]
file_transfer_connector.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Info for the source or destination of a transfer.',
  ' * Info for the transfer operation.',
  ' * Flat connector entry test set that does not include any directories.\n' +
    ' *\n' +
    ' * If a file should be blocked, name it "*blocked*".\n' +
    ' * If a file is allowed, name it "*allowed*".',
  ' * Flat connector entry test set that does not include any directories.\n' +
    ' *\n' +
    ' * If a file should be blocked, name it "*blocked*".\n' +
    ' * If a file should be warned, name it "*warned*".\n' +
    ' * If a file is allowed, name it "*allowed*".',
  ' * Test set to test deep scanninng, contains nested directories.\n' +
    ' *\n' +
    ' * If a file should be blocked, name it "*blocked*".\n' +
    ' * If a file is allowed, name it "*allowed*".\n' +
    ' * If a directory only contains allowed files, name it "*allowed*".',
  ' * Test set to test deep scanninng, contains nested directories.\n' +
    ' *\n' +
    ' * If a file should be blocked, name it "*blocked*".\n' +
    ' * If a file is allowed, name it "*allowed*".\n' +
    ' * If a directory only contains allowed files, name it "*allowed*".',
  ' * A list of transfer locations, for use with transferBetweenVolumes.\n' +
    ' * volumeName has to match an entry of\n' +
    ' * AddEntriesMessage::MapStringToTargetVolume().',
  ' TODO(crbug.com/1361898): Remove these ones proper error details are\n' +
    ' displayed.',
  " * Opens a Files app's main window and creates the source and destination\n" +
    ' * entries.\n' +
    ' * @param transferInfo Options for the transfer.\n' +
    ' * @return Promise to be fulfilled with the window ID.',
  ' * Returns all entries that are children of the passed directory.\n' +
    ' * @param entries The entries.\n' +
    ' * @param directory The directory path. Contains the path of the current\n' +
    ' *     directory, e.g., ["A", "B"] for A/B/.',
  ' * Verifies the recursive contents of the current path by checking the file list\n' +
    ' * of the current path and its ancestors.\n' +
    ' * @param appId App window Id.\n' +
    ' * @param expectedEntries Expected contents of file list.\n' +
    ' * @param rootDirectory The path to the root directory for the check.\n' +
    " * @param currentSubDirectory The current directory path split at '/', e.g.,\n" +
    ' *     ["A", "B"] for A/B/.',
  ' * Function to toggle display of all play files.\n' +
    ' * Before this function is called, the play file folder has to be opened.\n' +
    ' * @param appId App window Id.',
  " * Checks that the panel item's primary and secondary buttons have expected type\n" +
    ' * and text, and then clicks the button defined by selectedButton.\n' +
    ' * @param appId ID of the Files app window.\n' +
    ' * @param secondaryButtonCategory Expected secondary button category (dismiss or\n' +
    ' *     cancel).\n' +
    ' * @param selectedButton The button to click (primary or secondary).',
  ' * Test function to copy from the specified source to the specified destination.\n' +
    ' * @param transferInfo Options for the transfer.\n' +
    ' * @param entryTestSet The set of file and directory entries to be used for the\n' +
    ' *     test.\n' +
    ' * @param expectedFinalMsg The final message to expect at the progress center.\n' +
    ' * @param expectedWarnMsg The warning message to expect at the progress center.',
  ' * Test function to copy from the specified source to the specified destination.\n' +
    ' * @param transferInfo Options for the transfer.\n' +
    ' * @param entryTestSet The set of file and directory entries to be used for the\n' +
    ' *     test.\n' +
    ' * @param expectedFinalMsg The final message to expect at the progress center.',
  ' * Mounts required volumes.\n' +
    ' * @param transferInfo Options for the transfer.',
  ' * Opens Files app and initiates source with entryTestSet and destination\n' +
    ' * with [ENTRIES.hello].\n' +
    ' * The destination is populated to prevent flakes (we can wait for the `hello`\n' +
    ' * file to appear).\n' +
    ' * @param transferInfo Options for the transfer.\n' +
    ' * @param entryTestSet The set of file and directory entries to be used for the\n' +
    ' *     test.',
  ' * Verify what happens after a paste when scanning can block files.\n' +
    ' *\n' +
    ' * @param appId The app id of the files app window.\n' +
    ' * @param transferInfo Options for the transfer.\n' +
    ' * @param entryTestSet The set of file and directory entries to be used for the\n' +
    ' *     test.\n' +
    ' * @param expectedFinalMsg The final message to expect at the progress center.\n' +
    ' * @param expectedWarnMsg The warning message to expect at the progress center.',
  ' * Verify what happens after a paste in the case of report-only scans.\n' +
    ' *\n' +
    ' * @param appId The app id of the files app window.\n' +
    ' * @param transferInfo Options for the transfer.\n' +
    ' * @param entryTestSet The set of file and directory entries to be used for the\n' +
    ' *     test.',
  ' * Verify what happens after a paste in the case of report-only scans if\n' +
    " * there's a no space error.\n" +
    ' *\n' +
    ' * @param appId The app id of the files app window.\n' +
    ' * @param transferInfo Options for the transfer.\n' +
    ' * @param expectedFinalMsg The final message to expect at the progress center.\n' +
    ' * @param entryTestSet The set of file and directory entries to be used for the\n' +
    ' *     test.',
  ' * Tests copying from android_files to Downloads.',
  ' * Tests copying from Crostini to Downloads.',
  ' * Tests copying from Drive to Downloads.',
  ' * Tests moving from Drive to Downloads.',
  ' * Tests copying from mtp to Downloads.',
  ' * Tests copying from smbfs to Downloads.',
  ' * Tests copying from usb to Downloads.',
  ' * Tests for new UX.'
]
files_tooltip.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Waits until the element by |id| is the document.activeElement.\n' +
    ' *\n' +
    ' * @param appId The Files app windowId.\n' +
    ' * @param id The element id.',
  ' * Tests that tooltip is displayed when focusing an element with tooltip.',
  ' * Tests that tooltip is displayed when focusing an element with tooltip.',
  ' * Tests that tooltips display when hovering an element that has a tooltip.',
  ' * Tests that tooltips stay open when hovering over the tooltip.',
  ' * Tests that tooltip is hidden when clicking on body (or anything else).',
  ' * Tests that card tooltip is hidden when clicking on body (or anything else).',
  ' * Tests that the tooltip should hide when the window resizes.',
  ' * Tests that the tooltip is hidden after the delete confirm dialog closes.'
]
folder_shortcuts.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Directory tree path constants.',
  ' * Entry set used for the folder shortcut tests.',
  ' * Constants for each folder.',
  ' * Expands whole directory tree under DIRECTORY.Drive.\n' +
    ' *\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @return Promise fulfilled on success.',
  ' * Navigate to |directory| (makes |directory| the current directory).\n' +
    ' *\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param directory Directory to navigate to.\n' +
    ' * @return Promise fulfilled on success.',
  ' * Removes the folder shortcut to |directory|. Note the current directory must\n' +
    ' * be a parent of the given |directory|.\n' +
    ' *\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param directory Directory of shortcut to be removed.\n' +
    ' * @return Promise fulfilled on success.',
  ' * Waits until the current directory becomes |currentDir| and current\n' +
    ' * selection becomes the shortcut to |shortcutDir|.\n' +
    ' *\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param currentDir Directory which should be a current directory.\n' +
    ' * @param shortcutDir Directory whose shortcut should be selected.\n' +
    ' * @return Promise fulfilled on success.',
  ' * Clicks folder shortcut to |directory|.\n' +
    ' *\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param directory Directory whose shortcut will be clicked.\n' +
    ' * @return Promise fulfilled on success.',
  ' * Creates some shortcuts and traverse them and some other directories.',
  ' * Adds and removes shortcuts from other window and check if the active\n' +
    ' * directories and selected navigation items are correct.'
]
format_dialog.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Lanuches file manager and stubs out the formatVolume private api.\n' +
    ' *\n' +
    ' * @return Files app window ID.',
  ' * Opens a format dialog for the USB with label |usbLabel|.\n' +
    ' *\n' +
    ' * @param appId Files app window ID.\n' +
    ' * @param usbLabel Label of usb to format.',
  ' * Opens a format dialog for the USB with label |usbLabel| and device with\n' +
    ' * label |deviceLabel|.\n' +
    ' *\n' +
    ' * @param appId Files app window ID.\n' +
    ' * @param usbLabel Label of usb to format.\n' +
    ' * @param deviceLabel Label of the parent device of usb.',
  ' * Tests the format dialog for a sample USB with files on it.',
  ' * Tests the format dialog is a modal dialog.',
  ' * Tests the format dialog for an empty USB.',
  ' * Tests cancelling out of the format dialog.',
  ' * Checks that formatting gives error |errorMessage| when given |label| and\n' +
    ' * |format|.\n' +
    ' *\n' +
    ' * @param appId Files app window ID.\n' +
    ' * @param label New label of usb drive.\n' +
    ' * @param format New filesystem of drive.\n' +
    ' * @param errorMessage Expected error message to be displayed.',
  ' * Checks that formatting succeeds when given |label| and |format|.\n' +
    ' *\n' +
    ' * @param appId Files app window ID.\n' +
    ' * @param label New label of usb drive.\n' +
    ' * @param format New filesystem of drive.',
  ' * Tests validations for drive name length.',
  ' * Test validations for invalid characters.',
  ' * Tests opening the format dialog from the gear menu.'
]
gear_menu.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Gets the common steps to toggle hidden files in the Files app\n' +
    ' * @param basicSet Files expected before showing hidden\n' +
    ' * @param hiddenEntrySet Files expected after showing hidden',
  ' * Gets the common steps to toggle Android hidden files in the Files app\n' +
    ' * @param basicSet Files expected before showing hidden\n' +
    ' * @param hiddenEntrySet Files expected after showing hidden',
  ' * Gets the common steps to toggle hidden files in the Files app\n' +
    ' * @param basicSet Files expected before showing hidden\n' +
    ' * @param hiddenEntrySet Files expected after showing hidden\n' +
    ' * @param toggleMenuItemSelector Selector for the menu item that toggles hidden\n' +
    ' * file visibility',
  ' * Tests toggling the show-hidden-files menu option on Downloads.',
  ' * Tests toggling the show-hidden-files menu option on Drive.',
  ' * Tests that toggle-hidden-android-folders menu item exists when "Play files"\n' +
    ' * is selected, but hidden in Recents.',
  ' * Tests that "Play files" shows the full set of files after\n' +
    ' * toggle-hidden-android-folders is enabled.',
  ' * Tests that the current directory is changed to "Play files" after the\n' +
    ' * current directory is hidden by toggle-hidden-android-folders option.',
  ' * Tests the paste-into-current-folder menu item.',
  ' * Tests the "select-all" menu item.',
  ' * Tests that new folder appears in the gear menu with Downloads focused in the\n' +
    ' * directory tree.',
  ' * Tests that the "Files settings" button appears in the gear menu and properly\n' +
    ' * opens the Files section of the Settings page.',
  ' * Tests that the "Send feedback" button appears in the gear menu and properly\n' +
    ' * opens the feedback window.',
  " * Tests that clicking the gear menu's help button from a Downloads location\n" +
    " * navigates the user to the Files app's help page.",
  " * Tests that clicking the gear menu's help button from a drive location\n" +
    ' * navigates the user to the Google drive help page.',
  ' * Tests that the link of the volume space info item in the gear menu is\n' +
    ' * disabled when the files app is opened on the Google Drive section, and active\n' +
    ' * otherwise. The volume space info item should only link to the storage\n' +
    ' * settings page when the user is navigating within local folders.',
  ' * Tests that the "xGB available" message appears in the gear menu for the "My\n' +
    ' * Files" volume.',
  ' * Tests that the "xGB available" message appears in the gear menu for the\n' +
    ' * "Google Drive" volume.',
  ' * Tests that the "xGB available" message appears in the gear menu for\n' +
    ' * an SMB volume.',
  ' * Tests that the "xGB available message appears in the gear menu for\n' +
    ' * the DocumentsProvider volume.',
  ' * Test that the "Mange synced folders" gear menu item is hidden and is also\n' +
    ' * disabled when the DriveFsMirroring flag is disabled.'
]
grid_view.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Shows the grid view and checks the label texts of entries.\n' +
    ' *\n' +
    ' * @param rootPath Root path to be used as a default current directory during\n' +
    ' *     initialization. Can be null, for no default path.\n' +
    ' * @param expectedSet Set of entries that are expected to appear in the grid\n' +
    ' *     view.\n' +
    ' * @return Promise to be fulfilled or rejected depending on the test result.',
  ' * Tests to show grid view on a local directory.',
  ' * Tests to show grid view on a drive directory.',
  ' * Tests to view-button switches to thumbnail (grid) view and clicking again\n' +
    ' * switches back to detail (file list) view.',
  ' * Tests that selecting/de-selecting files with keyboard produces a11y messages.',
  ' * Tests that selecting/de-selecting files with mouse produces a11y messages.',
  ' * Tests that Grid View shows "Folders" and "Files" titles before folders and\n' +
    ' * files respectively.',
  ' * Tests that Grid View shows DocumentsProvider thumbnails.',
  ' * Tests that an encrypted file will have a corresponding icon.'
]
guest_os.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests that Guest OS entries show up in the sidebar at files app launch.',
  ' * Tests that the list of guests is updated when new guests are added or\n' +
    ' * removed.',
  ' * Tests that clicking on a Guest OS entry in the sidebar mounts the\n' +
    ' * corresponding volume, and that the UI is updated appropriately (volume in\n' +
    ' * sidebar and not fake, contents show up once done loading, etc).',
  ' * Tests that clicking on a Guest OS Android entry in the sidebar mounts the\n' +
    ' * corresponding volume, and that the UI is update appropriately (volume in\n' +
    ' * sidebar and not fake, contents show up once done loading, etc).'
]
holding_space.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests that the holding space welcome banner appears and that it can be\n' +
    ' * dismissed.',
  ' * Tests that the holding space welcome banner will show for modal dialogs when\n' +
    ' * using the new banners framework.',
  ' * Tests that the holding space welcome banner will update its text depending on\n' +
    ' * whether or not tablet mode is enabled.'
]
install_linux_package_dialog.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
keyboard_operations.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Waits until a dialog with an OK button is shown, and accepts it by clicking\n' +
    " * on the dialog's OK button.\n" +
    ' *\n' +
    ' * @param appId The Files app windowId.\n' +
    ' * @return Promise to be fulfilled after clicking the OK button.',
  ' * Tests copying a file to the same file list.\n' +
    ' *\n' +
    ' * @param path The path to be tested, Downloads or Drive.',
  ' * Tests deleting a file from the file list.\n' +
    ' *\n' +
    ' * @param path The path to be tested, Downloads or Drive.\n' +
    " * @param confirmDeletion If the file system doesn't support trash, need to\n" +
    ' *     confirm the deletion.',
  ' * Tests deleting a folder from the file list. The folder is also shown in the\n' +
    ' * Files app directory tree, and should not be shown there when deleted.\n' +
    ' *\n' +
    ' * @param path The path to be tested, Downloads or Drive.\n' +
    ' * @param parentLabel The directory tree item label.\n' +
    " * @param confirmDeletion If the file system doesn't support trash, need to\n" +
    ' *     confirm the deletion.',
  ' * Renames a file.\n' +
    ' *\n' +
    ' * @param appId The Files app windowId.\n' +
    ' * @param oldName Old name of a file.\n' +
    ' * @param newName New name of a file.\n' +
    ' * @return Promise to be fulfilled on success.',
  ' * Tests renaming a folder. An extra enter key is sent to the file list during\n' +
    ' * renaming to check the folder cannot be entered while it is being renamed.\n' +
    ' *\n' +
    ' * @param path Initial path (Downloads or Drive).\n' +
    ' * @param parentLabel The directory tree item label.\n' +
    ' * @return Promise to be fulfilled on success.',
  ' * Tests renaming a file.\n' +
    ' *\n' +
    ' * @param path Initial path (Downloads or Drive).\n' +
    ' * @return Promise to be fulfilled on success.',
  ' * Tests renaming partitions with the keyboard on the file list.',
  ' * Tests that the root html element .focus-outline-visible class appears for\n' +
    ' * keyboard interaction and is removed on mouse interaction.',
  ' * Tests that the root html element .pointer-active class is added and removed\n' +
    ' * for mouse interaction.',
  ' * Tests that the root html element .pointer-active class will be removed with\n' +
    ' * pointerup event triggered by touch.',
  ' * Tests that the root html element .pointer-active class should not be added if\n' +
    ' * the PointerDown event is triggered by touch.',
  ' * Test that selecting "Google Drive" in the directory tree with the keyboard\n' +
    ' * expands it and selects "My Drive".',
  ' * Tests that while the delete dialog is displayed, it is not possible to press\n' +
    ' * CONTROL-C to copy a file.',
  ' * Tests Ctrl+N opens a new windows crbug.com/933302.'
]
manage_dialog.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * Test 'Manage in Drive' for a file or directory on Drive.\n" +
    ' *\n' +
    ' * @param path Path of the file or directory to be managed.\n' +
    ' * @param url Expected URL for the browser to visit.\n' +
    ' * @param teamDrive If set, the team drive to switch to.',
  ' * Tests managing a file on Drive.',
  ' * Tests managing a directory on Drive.',
  ' * Tests managing a hosted file (gdoc) on Drive.',
  ' * Tests managing a file in a team drive.',
  ' * Tests managing a directory in a team drive.',
  ' * Tests managing a hosted file (gdoc) in a team drive.',
  ' * Tests managing a team drive.'
]
materialized_views.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests that the Directory Tree can display a materialized view.',
  ' * Tests that a materialized view can display its content in the file list.'
]
metadata.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Check if |value| equals the |desiredValue| within 1% margin of tolerance.\n' +
    ' * @param value The variable value.\n' +
    ' * @param desiredValue The desired value.',
  ' * Creates a test file, which can be inside another folder, however parent\n' +
    ' * folders have to be created by the caller.\n' +
    ' * @param path Folder path to be created,',
  ' * Creates a Shared Drive.\n * @param name Shared Drive name.',
  ' * Entries used by Drive and Downloads tests.',
  ' * Measures the number of metadata operations generated for:\n' +
    ' *  - Opening Files app in My Drive with 8 files and 3 folders.\n' +
    ' *  - Navigate to My Drive > photos1 > folder2, which is empty.',
  ' * Measures the number of metadata operations generated for:\n' +
    ' *  - Opening Files app in Downloads with 8 files and 3 folders.\n' +
    ' *  - Navigate to Downloads > photos1 > folder1 which is empty.',
  ' * Measures the number of metadata operations generated for:\n' +
    ' *  - Opening Files app in My Drive with 51 folders.\n' +
    ' *  - Navigate to My Drive > folder1 which has 50 files.\n' +
    ' *\n' +
    ' * Using 50 files and 50 folders because in the Drive backend it has a\n' +
    ' * throttle for max of 20 concurrent operations.',
  ' * Measures the number of metadata operations generated for:\n' +
    ' *  - Opening Files app in My Drive, with 50 folders and 50 files.\n' +
    ' *  - Navigate to Shared Drives, with 50 team drives.\n' +
    ' *  - Expand Shared Drives to display the 50 team drives..',
  ' *  Tests that fetching content metadata from a DocumentsProvider completes.'
]
metrics.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Tests that enum metrics are recorded correctly.',
  ' Test that the DirectoryListLoad UMA is appropriately recorded and the\n' +
    ' variance is taken into consideration (+/-20%).',
  ' Test that the UpdateAvailableApps UMA is appropriately recorded.'
]
my_files.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Select My files in directory tree and wait for load.\n' +
    ' *\n' +
    ' * @param appId ID of the app window.',
  ' * Tests if MyFiles is displayed when flag is true.',
  " * Tests directory tree refresh doesn't hide Downloads folder.\n" +
    ' *\n' +
    ' * This tests a regression where Downloads folder would disappear because\n' +
    ' * MyFiles model and entry were being recreated on every update and\n' +
    ' * DirectoryTree expects NavigationModelItem to be the same instance through\n' +
    ' * updates.',
  ' * Tests My Files displaying Downloads on file list (RHS) and opening Downloads\n' +
    ' * from file list.',
  ' * Tests My files updating its children recursively.\n' +
    ' *\n' +
    " * If it doesn't update its children recursively it can cause directory tree to\n" +
    ' * not show or hide sub-folders crbug.com/864453.',
  ' * Check naming a folder after navigating inside MyFiles using file list (RHS).\n' +
    ' * crbug.com/889636.',
  ' * Tests that MyFiles only auto expands once.',
  ' * Tests that My files refreshes its contents when PlayFiles is mounted.\n' +
    ' * crbug.com/946972.',
  ' * Tests that toolbar delete is not shown for Downloads, or Linux files.'
]
navigation.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Tests that the Backspace key navigates to parent directory.'
]
office.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * Returns 'Open in Google Docs' task descriptor.",
  " * Returns 'Open with Excel' task descriptor.",
  " * Returns 'Open in PowerPoint' task descriptor.",
  ' * Waits for the expected number of tasks executions, and returns the descriptor\n' +
    ' * of the last executed task.\n' +
    ' *\n' +
    ' * @param appId Window ID.',
  ' Tests that "Upload to Drive" cannot be enabled if the "Upload Office To\n' +
    ' Cloud" flag is disabled (test setup similar to `openOfficeWordFromMyFiles`).',
  ' Tests that the educational nudge is displayed when the preference is set.'
]
open_audio_media_app.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests opening audio opens MediaApp/Backlight.\n' +
    ' * @param path Directory path (Downloads or Drive).',
  ' Exports test functions.'
]
open_files_in_web_drive.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Tests opening hosted files in the browser.',
  ' * Tests context menu default task label for Google Drive items.\n' +
    ' *\n' +
    ' * @param entry FileSystem entry to use.\n' +
    ' * @param expectedLabel Label of the context menu item.',
  ' * Tests opening a file from Files app in Web Drive.\n' +
    ' *\n' +
    ' * @param entry FileSystem entry to use.\n' +
    ' * @param expectedHostname Hostname of the resource the browser is\n' +
    ' * supposed to be navigated to.'
]
open_image_media_app.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests opening an image opens MediaApp/Backlight.\n' +
    ' * @param path Directory path (Downloads or Drive).',
  ' Exports test functions.'
]
open_media_app.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests if the media app shows up for the selected file entry and that it has\n' +
    ' * loaded successfully.\n' +
    ' * @param path Directory path (Downloads or Drive).\n' +
    ' * @param entry Selected file entry to open.'
]
open_sniffed_files.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Tests opening files in the browser using content sniffing.',
  ' * Tests opening a file with missing filename extension from Files app.\n' +
    ' *\n' +
    ' * @param path Directory path (Downloads or Drive).\n' +
    ' * @param entry FileSystem entry to use.'
]
open_video_media_app.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests opening a video opens MediaApp/Backlight.\n' +
    ' * @param path Directory path (Downloads or Drive).',
  ' Exports test functions.'
]
directory_tree.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This serves as the additional selector of the tree item.',
  ' * Page object for Directory Tree, this class abstracts all the selectors\n' +
    ' * related to directory tree and its tree items.',
  ' * Selectors of DirectoryTree, all the method provided by this class return the\n' +
    ' * selector string.'
]
providers.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Returns provider name of the given testing provider manifest viz., the\n' +
    ' * the value of the name field in the |manifest| file.\n' +
    ' * @param manifest Testing provider manifest file name.\n' +
    ' * @return Testing provider name.',
  ' * Initializes the provider extension.\n' +
    ' * @param manifest The manifest name of testing provider extension to launch for\n' +
    ' *     the test case.',
  ' * Clicks on the "Services" menu button.',
  ' * Confirms that a provided volume is mounted.',
  ' * Tests that a provided extension with |manifest| is mountable via the menu\n' +
    ' * button.\n' +
    ' *\n' +
    ' * @param multipleMounts Whether multiple mounts are supported by the providing\n' +
    ' *     extension.\n' +
    ' * @param manifest Name of the manifest file for the providing extension.',
  ' * Tests that a provided extension with |manifest| is not available in the\n' +
    " * providers menu, but it's mounted automatically.\n" +
    ' *\n' +
    ' * @param manifest Name of the manifest file for the providing extension.',
  ' * Tests mounting a single mount point in the button menu.',
  ' * Tests mounting multiple mount points in the button menu.',
  ' * Tests mounting a device not present in the button menu.',
  ' * Tests mounting a file not present in the button menu.',
  ' * Tests that pressing the eject button on a FSP adds a message to screen\n' +
    ' * reader.',
  ' * Tests mounting a file system provider emits only a single UMA when running\n' +
    ' * from either the SWA or Chrome app.'
]
quick_view.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The tag used to create a safe environment to display the preview.',
  ' The JS code used to query the content window for preview.',
  ' The name of the UMA emitted to track how Quick View is opened.',
  " * The UMA's enumeration values (must be consistent with enums.xml, previously\n" +
    ' * histograms.xml).',
  ' * Check the background color for the content inside the quick view is one of\n' +
    ' * the 2 allowed colors',
  ' * Waits for Quick View dialog to be open.\n' +
    ' *\n' +
    ' * @param appId Files app windowId.',
  ' * Waits for Quick View dialog to be closed.\n' +
    ' *\n' +
    ' * @param appId Files app windowId.',
  ' * Opens the Quick View dialog on a given file |name|. The file must be\n' +
    ' * present in the Files app file list.\n' +
    ' *\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param name File name.',
  ' * Opens the Quick View dialog by right clicking on the file |name| and\n' +
    ' * using the "Get Info" command from the context menu.\n' +
    ' *\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param name File name.',
  ' * Opens the Quick View dialog with given file |names|. The files must be\n' +
    ' * present and check-selected in the Files app file list.\n' +
    ' *\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param names File names.',
  ' * Mount and select USB.\n *\n * @param appId Files app windowId.',
  ' * Assuming that Quick View is currently open per openQuickView above, closes\n' +
    ' * the Quick View dialog.\n' +
    ' *\n' +
    ' * @param appId Files app windowId.',
  ' * Assuming that Quick View is currently open per openQuickView above, return\n' +
    ' * the text shown in the QuickView Metadata Box field |name|. If the optional\n' +
    " * |hidden| is 'hidden', the field |name| should not be visible.\n" +
    ' *\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param name QuickView Metadata Box field name.\n' +
    ' * @param hidden Whether the field name should be visible.\n' +
    ' *\n' +
    ' * @return text Text value in the field name.',
  ' * Executes a script in the context of a <preview-tag> element and returns its\n' +
    ' * output. Returns undefined when ExecuteScriptError is caught.\n' +
    ' *\n' +
    ' * @param appId App window Id.\n' +
    ' * @param query Query to the <preview-tag> element (this is\n' +
    ' *     ignored for SWA).\n' +
    ' * @param statement Javascript statement to be executed within the\n' +
    ' *     <preview-tag>.',
  ' * Tests opening Quick View on a local downloads file.',
  ' * Tests opening Quick View on a local downloads file in an open file dialog.',
  ' * Tests that Quick View opens via the context menu with a single selection.',
  ' * Tests that Quick View opens via the context menu when multiple files\n' +
    ' * are selected (file-list check-select mode).',
  ' * Tests opening then closing Quick View on a local downloads file.',
  ' * Tests opening Quick View on a Drive file.',
  ' * Tests opening Quick View on a Smbfs file.',
  ' * Tests opening Quick View on a USB file.',
  ' * Tests opening Quick View on a removable partition.',
  ' * Tests opening Quick View on an item that was Trashed shows original location\n' +
    ' * instead of the current file location.',
  ' * Tests seeing dashes for an empty last_modified for DocumentsProvider.',
  ' * Tests opening Quick View on an MTP file.',
  ' * Tests opening Quick View on a Crostini file.',
  ' * Tests opening Quick View on a GuestOS file.',
  ' * Tests opening Quick View on an Android file.',
  ' * Tests opening Quick View on an Android file on GuestOS.',
  ' * Tests opening Quick View on a DocumentsProvider root.',
  ' * Tests opening Quick View with a local text document identified as text from\n' +
    ' * file sniffing (the first word of the file is "From ", note trailing space).',
  ' * Tests opening Quick View with a local text document whose MIME type cannot\n' +
    ' * be identified by MIME type sniffing.',
  ' * Tests opening Quick View with a text file containing some UTF-8 encoded\n' +
    ' * characters: crbug.com/1064855',
  ' * Tests opening Quick View and scrolling its preview contents which contains a\n' +
    ' * tall text document.',
  ' * Tests opening Quick View containing a PDF document.',
  ' * Tests opening Quick View on a PDF document that opens a popup JS dialog.',
  ' * Tests that Quick View does not display a PDF file preview when that is\n' +
    ' * disabled by system settings (preferences).',
  " * Tests opening Quick View with a '.mhtml' filename extension.",
  ' * Tests opening Quick View and scrolling its preview contents which contains a\n' +
    ' * tall html document.',
  ' * Tests opening Quick View on an html document to verify that the background\n' +
    ' * color of the <files-safe-media type="html"> that contains the preview is\n' +
    ' * solid white.',
  ' * Tests opening Quick View containing an audio file without album preview.',
  ' * Tests opening Quick View containing an audio file on Drive.',
  ' * Tests opening Quick View containing an audio file that has an album art\n' +
    ' * image in its metadata.',
  " * Tests opening Quick View containing an image with extension 'jpg'.",
  " * Tests opening Quick View containing an image with extension 'jpeg'.",
  ' * Tests that opening Quick View on a JPEG image with EXIF displays the EXIF\n' +
    ' * information in the QuickView Metadata Box.',
  ' * Tests opening Quick View on an RAW image. The RAW image has EXIF and that\n' +
    ' * information should be displayed in the QuickView metadata box.',
  ' * Tests opening Quick View on an RAW .NEF image and that the dimensions\n' +
    ' * shown in the metadata box respect the image EXIF orientation.',
  ' * Tests opening Quick View with a VP8X format WEBP image.',
  ' * Tests that opening Quick View on an image and clicking the image does not\n' +
    ' * focus the image. Instead, the user should still be able to cycle through\n' +
    ' * file list items in Quick View: crbug.com/1038835.',
  ' * Tests that opening a broken image in Quick View displays the "no-preview\n' +
    ' * available" generic icon and has a [load-error] attribute.',
  ' * Tests opening Quick View containing a video.',
  ' * Tests opening Quick View containing a video on Drive.',
  ' * Tests opening Quick View with multiple files and using the up/down arrow\n' +
    ' * keys to select and view their content.',
  ' * Tests opening Quick View with multiple files and using the left/right arrow\n' +
    ' * keys to select and view their content.',
  ' * Tests that the metadatabox can be toggled opened/closed by pressing the\n' +
    ' * Enter key on the Quick View toolbar info button.',
  ' * Tests that the metadatabox can be toggled opened/closed by clicking the\n' +
    ' * the Quick View toolbar info button.',
  ' * Tests that Quick View opens with multiple files selected.',
  ' * Tests that Quick View displays text files when multiple files are\n' +
    ' * selected.',
  ' * Tests that Quick View displays pdf files when multiple files are\n' +
    ' * selected.',
  ' * Tests that the content panel changes when using the up/down arrow keys\n' +
    ' * when multiple files are selected.',
  ' * Tests that the content panel changes when using the left/right arrow keys\n' +
    ' * when multiple files are selected.',
  ' * Tests opening Quick View and closing with Escape key returns focus to file\n' +
    ' * list.',
  ' * Test opening Quick View when Directory Tree is focused it should display if\n' +
    ' * there is only 1 file/folder selected in the file list.',
  ' * Tests the tab-index focus order when sending tab keys when an image file is\n' +
    ' * shown in Quick View.',
  ' * Tests the tab-index focus order when sending tab keys when a text file is\n' +
    ' * shown in Quick View.',
  ' * Tests the tab-index focus order when sending tab keys when an HTML file is\n' +
    ' * shown in Quick View.',
  ' * Tests the tab-index focus order when sending tab keys when an audio file\n' +
    ' * is shown in Quick View.',
  ' * Tests the tab-index focus order when sending tab keys when a video file is\n' +
    ' * shown in Quick View.',
  ' * Tests that the tab-index focus stays within the delete confirm dialog.',
  ' * Tests deleting an item from Quick View when in single select mode, and\n' +
    ' * that Quick View closes when there are no more items to view.',
  ' * Tests deleting an item from Quick View while in check-selection mode.\n' +
    ' * Deletes the item at the bottom of the file list, and checks that\n' +
    " * the item below the item deleted is shown in Quick View after the item's\n" +
    ' * deletion.',
  ' * Tests that deleting all items in a check-selection closes the Quick View.',
  ' * Tests that an item can be deleted using the Quick View delete button.',
  ' * Tests that the delete button is not shown if the file displayed in Quick\n' +
    ' * View cannot be deleted.',
  ' * Tests that the correct WayToOpen UMA histogram is recorded when opening\n' +
    ' * a single file via Quick View using "Get Info" from the context menu.',
  ' * Tests that the correct WayToOpen UMA histogram is recorded when using\n' +
    ' * Quick View in check-select mode using "Get Info" from the context\n' +
    ' * menu.',
  ' * Tests that the correct WayToOpen UMA histogram is recorded when using\n' +
    ' * Quick View in check-select mode using "Get Info" from the Selection\n' +
    ' * menu.',
  ' * Tests that the correct WayToOpen UMA histogram is recorded when using\n' +
    ' * Quick View in check-select mode using "Get Info" from the context\n' +
    ' * menu opened via keyboard tabbing (not mouse).',
  ' * Tests that Quick View does not display a CSE file preview.'
]
recents.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Mock files with recently modified dates, be aware the days passed in should\n' +
    ' be larger than 3 to prevent file list from showing "Today/Yesterday", which\n' +
    ' will break the waitForFiles() function.\n' +
    ' Test entry for a recently-modified video file.',
  ' Test entry for a recently-modified document file.',
  ' Test entries for recent-modified android files.',
  ' Special file used with provided volume. Due to the fact that we rely on\n' +
    ' ash::file_system_provider::FakeProvidedFileSystem we cannot clone it from\n' +
    ' existing entries. Among differences is the targetPath and sizeText that are\n' +
    ' set up differently.',
  ' * Enum for supported recent filter types.',
  ' * Adds file entries to the Play Files folder and update media view root.',
  ' * Navigates to Recent folder with specific type and verify the breadcrumb path.\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param type Recent file type.',
  ' * Verifies the current folder has the expected entries and checks the delete\n' +
    ' * button is hidden after selecting these files.\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param expectedEntries Expected file entries.\n' +
    " * @param trashButton If the file system doesn't support trash, a delete button\n" +
    ' *     will show instead of a trash button.',
  ' * Opens the Recent folder and checks the expected entries are showing there.\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param expectedEntries Expected file entries, by default `RECENT_ENTRY_SET`\n' +
    ' *     is used.\n' +
    " * @param trashButton If the file system doesn't support trash, a delete button\n" +
    ' *     will show instead of a trash button.',
  ' * Opens the Recent Audio folder and checks the expected entries are showing\n' +
    ' * there.\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param expectedEntries Expected file entries.\n' +
    " * @param trashButton If the file system doesn't support trash, a delete button\n" +
    ' *     will show instead of a trash button.',
  ' * Opens the Recent Image folder and checks the expected entries are showing\n' +
    ' * there.\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param expectedEntries Expected file entries.\n' +
    " * @param trashButton If the file system doesn't support trash, a delete button\n" +
    ' *     will show instead of a trash button.',
  ' * Opens the Recent Video folder and checks the expected entries are showing\n' +
    ' * there.\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param expectedEntries Expected file entries.\n' +
    " * @param trashButton If the file system doesn't support trash, a delete button\n" +
    ' *     will show instead of a trash button.',
  ' * Opens the Recent Document folder and checks the expected entries are showing\n' +
    ' * there.\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param expectedEntries Expected file entries.\n' +
    " * @param trashButton If the file system doesn't support trash, a delete button\n" +
    ' *     will show instead of a trash button.',
  ' * Verifies the breadcrumb has the expected path.\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param expectedPath Expected breadcrumb path.',
  ' * Selects a file and right click to show the context menu, then click the\n' +
    ' * specified context menu item.\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param fileName Name of the file to right click.\n' +
    ' * @param commandId The command id for the context menu item.',
  ` * Opens given file's containing folder by choosing "Go to file location"\n` +
    ' * context menu item.\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param fileName Name of the file to open containing folder.',
  ' * Deletes a given file by choosing "Delete" context menu item.\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param fileName Name of the file to delete.\n' +
    " * @param confirmDeletion If the file system doesn't support trash, need to\n" +
    ' *     confirm the deletion.',
  ' * Renames a given file by choosing "Rename" context menu item.\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param fileName Name of the file to rename.\n' +
    ' * @param newName The new file name.',
  ' * Cuts a given file by choosing "Cut" context menu item and paste the file to\n' +
    ' * the new folder.\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param fileName Name of the file to cut.\n' +
    ' * @param newFolder Full breadcrumb path for the new folder to paste.',
  ' * Waits for the empty folder element to show and assert the content to match\n' +
    ' * the expected message.\n' +
    ' * @param appId Files app windowId.\n' +
    ' * @param expectedMessage The expected empty folder message',
  ' * Tests that file entries populated in the Downloads folder recently will be\n' +
    ' * displayed in Recent folder.',
  ' * Tests that file entries populated in My Drive folder recently will be\n' +
    ' * displayed in Recent folder.',
  ' * Tests that file entries populated in Play Files folder recently will be\n' +
    ' * displayed in Recent folder.',
  ' * Tests what happens if listing play files is interspersed with plain listing\n' +
    ' * of another directory.',
  ' * Tests that file entries populated in the My Files folder recently will be\n' +
    ' * displayed in the Recent folder.',
  " * Tests that file entries populated in Crostini folder recently won't be\n" +
    ' * displayed in Recent folder when Crostini has not been mounted.',
  ' * Tests that file entries populated in Downloads folder and Crostini folder\n' +
    ' * recently will be displayed in Recent folder when Crostini has been mounted.',
  ' * Tests that file entries populated in Downloads folder and My Drive folder\n' +
    ' * recently will be displayed in Recent folder.',
  ' * Tests that file entries populated in Downloads, Drive and Play Files folder\n' +
    ' * recently will be displayed in Recent folder.',
  ' * Tests that the same file entries populated in Downloads folder and My Drive\n' +
    ' * folder recently will be displayed in Recent folder twice when the file\n' +
    ' * entries are the same.',
  ' * Tests that the nested file entries populated in Downloads folder recently\n' +
    ' * will be displayed in Recent folder.',
  ' * Tests that the audio file entries populated in Downloads folder recently\n' +
    ' * will be displayed in Recent Audio folder.',
  ' * Tests that if the audio file entries without MIME type are being populated in\n' +
    ' * both Downloads folder and My Drive folder, only the ones from Downloads\n' +
    ' * folder will be displayed in Recent Audio folder.',
  ' * Tests that the audio file entries populated in Downloads, Drive and Play\n' +
    ' * Files folder recently will be displayed in Recent Audio folder.',
  ' * Tests that the image file entries populated in Downloads folder recently will\n' +
    ' * be displayed in Recents Image folder.',
  ' * Tests that if the image file entries with MIME type are being populated in\n' +
    ' * both Downloads folder and My Drive folder, the file entries will be displayed\n' +
    " * in Recent Audio folder regardless of whether it's from Downloads or My Drive.",
  ' * Tests that the image file entries populated in Downloads, Drive and Play',
  ' * Tests that the video file entries populated in Downloads folder recently will\n' +
    ' * be displayed in Recent Videos folder.',
  ' * Tests that if the video file entries with MIME type are being populated in\n' +
    ' * both Downloads folder and My Drive folder, the file entries will be displayed\n' +
    " * in Recent Video folder regardless of whether it's from Downloads or My Drive.",
  ' * Tests that the video file entries populated in Downloads, Drive and Play\n' +
    ' * Files folder recently will be displayed in Recent Image folder.',
  ' * Tests that the document file entries populated in Downloads folder recently\n' +
    ' * will be displayed in Recent Document folder.',
  ' * Tests that if the video file entries with MIME type are being populated in\n' +
    ' * both Downloads folder and My Drive folder, the file entries will be displayed\n' +
    " * in Recent Document folder regardless of whether it's from Downloads or My\n" +
    ' * Drive.',
  ' * Tests that the document file entries populated in Downloads, Drive and Play\n' +
    ' * Files folder recently will be displayed in Recent Document folder.',
  ' * Tests if an active filter button is clicked again, it will become inactive\n' +
    ' * and the "All" filter button will become active and focus.',
  ' * Tests if directory changes to a non-Recents folder, the sorting should be\n' +
    ' * reset to the original one (the one before entering Recents) and the group\n' +
    ' * heading should be hidden.',
  ' * Tests when we switch the active filter button between All and others, the\n' +
    ' * correct a11y messages will be announced.',
  ' * Tests the read only flag on Recents view should be hidden.',
  ' * Tests delete operation can be performed in Recents view on files from\n' +
    ' * Downloads, Drive and Play Files.',
  ' * Tests delete operation can be performed in Recents view with multiple files\n' +
    ' * from different sources including Downloads, Drive and Play Files.',
  ' * Tests rename operation can be performed in Recents view on files from\n' +
    ' * Downloads, Drive.',
  ' * Tests rename operation is not allowed in Recents view for files from Play\n' +
    ' * files.',
  ' * Tests cut operation can be performed in Recents view on files from Downloads.',
  ' * Tests cut operation can be performed in Recents view on files from Drive.',
  ' * Tests cut operation can be performed in Recents view on files from Play\n' +
    ' * Files.',
  ' * Tests the time-period group heading can be displayed in Recents.',
  ' * Tests message will show in Recents for empty folder.',
  ' * Tests message will show in Recents after the last file is deleted.',
  ' * Construct a file with modified date as 1am today in a specific timezone.\n' +
    ' * @param timezone the timezone string',
  ' * Tests the group heading and modified date column in the list view will\n' +
    ' * change once the timezone changes.',
  ' * Tests the group heading in the grid view will change once the timezone\n' +
    ' * changes.',
  ' * Tests the search term will be respected when switching between different\n' +
    ' * filter buttons.',
  ' * Checks that Recents folder shows files from file system provider.'
]
restore_prefs.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests restoring the sorting order.',
  ' * Tests restoring the current view (the file list or the thumbnail grid).'
]
search.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @param appId The ID that identifies the files app.\n' +
    ' * @param type The search option type (location, recency, type).\n' +
    " * @return The text of the element with 'selected-option' ID.",
  ' * Tests searching inside Downloads with results.',
  ' * Tests searching inside Downloads without results.',
  ' * Tests that clearing the search box announces the A11y.',
  ' * Tests that clearing the search box with keydown crbug.com/910068.',
  ' * Tests that the search text entry box stays expanded until the end of user\n' +
    ' * interaction.',
  ' * Tests that the search box collapses when empty and Tab out of the box.',
  ' * Tests that clicking the search button expands and collapses the search box.',
  ' * Tests that Files app performs a search at app start up when\n' +
    ' * LaunchParam.searchQuery is specified.',
  ' * Checks that changing location options correctly filters search results.',
  ' * Checks that changing recency options correctly filters search results.',
  ' * Checks that when searching Google Drive we correctly match on name, not on\n' +
    ' * contents.',
  ' * Checks that changing recency options correctly filters search results on\n' +
    ' * drive.',
  ' * Checks that changing file types options correctly filters local\n' +
    ' * search results.',
  ' * Checks that changing file types options correctly filters\n' +
    ' * Drive search results.',
  ' * @param withPartitions Whether or not USB has partitions.\n' +
    ' * @return The label that can be used to query for elements.',
  ' * @param appId The ID of the files app under test.\n' +
    ' * @param withPartitions Whether or not USB has partitions.',
  ' * Checks that the new search correctly finds files on a USB drive.',
  ' * Checks that the new search correctly finds files on a USB drive with multiple\n' +
    ' * partitions.',
  ' * Checks that the search options are reset to default on folder change.',
  ' * Checks that we are showing the correct message in breadcrumbs when search is\n' +
    ' * active.',
  ' * Checks that search works correctly when starting in My Files.',
  ' * Checks that the selection path correctly reflects paths of elements found by\n' +
    ' * search.',
  ' * Checks that we correctly traverse search hierarchy. If you start searching in\n' +
    ' * a local folder, the search should search it and its subfolders only. If we\n' +
    ' * change the location to be the root directory, it should correctly search any\n' +
    ' * folders (including Linux and Playfiles, if necessary) that are visually\n' +
    ' * under the root folder. Finally, search everywhere should search everything\n' +
    ' * we can search (Google Doc, removable drives, local file syste, * etc.).',
  ' * Checks that search is not visible when in the Trash volume.',
  ' * Checks that files in trash do not appear in the search results when trash\n' +
    ' * is enabled, and appear when it is disabled.',
  ' * Checcks that finding files directly in Shared with me, or in folders nested\n' +
    ' * in Shared with me, works.',
  ' * Checks that the simple search from the root of a documents provider directory\n' +
    ' * works. No file category or modified time filters are used.',
  ' * Checks that changing file types options correctly filters\n' +
    ' * files exposed via Documents Provider.',
  ' * Checks that changing file types options correctly filters\n' +
    ' * files exposed via Documents Provider.',
  ' * Checks that search works on volumes mounted via fileSystemProvider.',
  ' * Test searching images by content. There are two modes supported: search by\n' +
    ' * text contained in the image and search by keywords associtated with\n' +
    ' * objects detected in the image. The first search is known as optical character\n' +
    ' * recorgnition (OCR), the second as image content annotation (ICA). However,\n' +
    ' * from the Files app point of view there is no difference and all it knows is\n' +
    ' * that there are "terms" associated with images processed by the local image\n' +
    " * search service. So that's all we test: that we can find images by terms\n" +
    ' * associated with them.',
  ' * Checks that any search, regardless if it has results or not, is closed if we\n' +
    ' * navigate to another directory.',
  ' * Check that if we are either at the top directory of Google Drive or in one of\n' +
    ' * the nested directories, we show the correct location. As we always search the\n' +
    ' * entire Google Drive, we should always show My Drive as the selected location.',
  ' * Checks that search with non-current folder in Downloads should unselect the\n' +
    ' * current directory item in the tree.',
  ' * Checks that search with non-root folder in Drive should unselect the current\n' +
    ' * directory item in the tree.'
]
share.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Verify that sharing options for an encrypted files are limited to nearby\n' +
    " * sharing (which only uses URLs and doesn't need to access file contents) and\n" +
    ' * drive-based sharing (which is managing permissions in Google Drive and also\n' +
    " * doesn't need to access the contents). Other options, such as “Copy”, should\n" +
    ' * be removed.'
]
sort_columns.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests the order is sorted correctly for each of the columns.'
]
tab_index.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The id attribute of the dismiss button in the educational banner.',
  ' * Tests the focus behavior of the search box.',
  ' * Tests the tab focus behavior of the Files app when no file is selected.',
  ' * Tests the tab focus behavior of the Files app when no file is selected in\n' +
    ' * Downloads directory.',
  ' * Tests the tab focus behavior of the Files app when a directory is selected.',
  ' * Tests the tab focus in the dialog and closes the dialog.\n' +
    ' *\n' +
    ' * @param dialogParams Dialog parameters to be passed to\n' +
    ' *     chrome.fileSystem.chooseEntry.\n' +
    ' * @param volumeType Volume icon type passed to the\n' +
    ' *     remoteCall.openAndWaitForClosingDialog function.\n' +
    ' * @param expectedSet Expected set of the entries.\n' +
    ' * @param initialize Initialization before test runs. The window ID is passed as\n' +
    ' *     an argument. If null, do nothing as initialization.\n' +
    ' * @param initialElements Selectors of the elements which shows the Files app is\n' +
    ' *     ready. After all the elements show up, the tabfocus tests starts. Array\n' +
    ' *     with the IDs of the element with the corresponding order of expected\n' +
    ' *     tab-indexes.',
  ' * Tests the tab focus behavior of Open Dialog (Downloads).',
  ' * Tests the tab focus behavior of Open Dialog (Drive).',
  ' * Tests the tab focus behavior of Save File Dialog (Downloads).',
  ' * Tests the tab focus behavior of Save File Dialog (Drive).'
]
tasks.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Fake tasks for a local volume opening in browser.',
  ' * Fake tasks for a PDF file opening in browser.',
  ' * Fake tasks for a drive volume.',
  ' * Sets up task tests.\n' +
    ' *\n' +
    ' * @param rootPath Root path.\n' +
    ' * @param fakeTasks Fake tasks.',
  ' * Tests executing the default task when there is only one task.\n' +
    ' *\n' +
    ' * @param appId Window ID.\n' +
    ' * @param descriptor Task descriptor.',
  ' * Tests to specify default task via the default task dialog.\n' +
    ' *\n' +
    ' * @param appId Window ID.\n' +
    ' * @param descriptor Task descriptor of the task expected to be newly specified\n' +
    ' *     as default.\n' +
    ' * @return Promise to be fulfilled/rejected depends on the test result.',
  ' * Tests that the Change Default Task dialog has a scrollable list.'
]
test_data.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Extension ID of the Files app.',
  ' * App ID of Files app SWA.',
  ' * Base URL of Files app SWA.',
  ' * Basic entry set for the local volume.',
  ' * Expected files shown in Downloads with hidden enabled',
  ' * Basic entry set for the drive volume that only includes read-write entries\n' +
    ' * (no read-only or similar entries).',
  ' * Expected files shown in Drive with hidden enabled',
  ' * Expected files shown in Drive with Google Docs disabled',
  ' * Basic entry set for the local crostini volume.',
  ' * Basic entry set for the local volume with a ZIP archive.',
  ' * More complex entry set for the local volume with multiple ZIP archives.',
  ' * More complex entry set for Drive that includes entries with varying\n' +
    ' * permissions (such as read-only entries).',
  ' * More complex entry set for DocumentsProvider that includes entries with\n' +
    ' * arying permissions (such as read-only entries).',
  ' * Nested entry set (directories inside each other).',
  ' * Expected list of preset entries in fake test volumes. This should be in sync\n' +
    ' * with FakeTestVolume::PrepareTestEntries in the test harness.',
  ` * Expected files shown in "Recent". Directories (e.g. 'photos') are not in this\n` +
    ' * list as they are not expected in "Recent".',
  ' * Expected files shown in "Offline", which should have the files\n' +
    ' * "available offline". Google Documents, Google Spreadsheets, and the files\n' +
    ' * cached locally are "available offline".',
  ' * Expected files shown in "Shared with me", which should be the entries labeled\n' +
    ' * with "shared-with-me".',
  ' * Entry set for Drive that includes team drives of various permissions and\n' +
    ' * nested files with various permissions.\n' +
    ' *\n' +
    ' * TODO(sashab): Add support for capabilities of Shared Drive roots.',
  ' * Entry set for Drive that includes Computers, including nested computers with\n' +
    ' * files and nested "USB and External Devices" with nested devices.',
  ' * Basic entry set for the android volume.',
  ' * Expected files shown in Android with hidden enabled',
  ' * Entry set for modified times.',
  ' * Fake task.',
  ' * Fake tasks for a local volume.'
]
toolbar.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Tests that the Delete menu item is disabled if no entry is selected.',
  ' * Tests that the toolbar Delete button opens the delete confirm dialog and\n' +
    ' * that the dialog cancel button has the focus by default.',
  ' * Tests that the toolbar Delete button keeps focus after the delete confirm\n' +
    ' * dialog is closed.',
  ' * Tests deleting an entry using the toolbar.',
  ' * Tests that refresh button hides in selection mode.\n' +
    ' *\n' +
    ' * Non-watchable volumes (other than Recent views) display the refresh\n' +
    ' * button so users can refresh the file list content. However this\n' +
    ' * button should be hidden when entering the selection mode.\n' +
    ' * crbug.com/978383',
  ' * Tests that refresh button is not shown when the Recent view is selected.',
  ' * Tests that refresh button is shown for non-watchable volumes.',
  ' * Tests that refresh button is hidden for watchable volumes.',
  ' * Tests that command Alt+A focus the toolbar.',
  ' * Tests that the menu drop down follows the button if the button moves. This\n' +
    ' * happens when the search box is expanded and then collapsed.',
  ' * Tests that the sharesheet button is enabled and executable.',
  ' * Tests that the sharesheet command in context menu is enabled and executable.',
  ' * Tests that the sharesheet item is hidden if no entry is selected.',
  ' * Tests that the cloud icon does not appear if bulk pinning is disabled.',
  ' * Tests that the cloud icon does not appear if the bulk pinning preference is\n' +
    ' * disabled and the supplied Stage does not have a UI state in the progress\n' +
    ' * panel.',
  ' * Tests that the cloud icon should only show when the bulk pinning is in\n' +
    ' * progress.',
  ' * Tests that the cloud icon should show when there is not enough disk space\n' +
    ' * available to pin.',
  ' * Tests that the cloud icon should not show if an error state has been\n' +
    ' * returned (in this case `CannotGetFreeSpace`).',
  ' * Tests that when the cloud icon is pressed the xf-cloud-panel moves into space\n' +
    ' * and resizes correctly.',
  ' * Tests that the cloud icon should not show if bulk pinning is paused (which\n' +
    ' * represents an offline state) and the user preference is disabled.',
  ' * Tests that the cloud icon should show if bulk pinning is paused (which\n' +
    ' * represents an offline state) and the user preference is enabled.',
  ' * Tests that the cloud icon should show when a Files app window has started.\n' +
    ' * This mainly tests that on startup the bulk pin progress is fetched and\n' +
    " * doesn't require an async event to show.",
  ' * Tests that the cloud icon should show if bulk pinning is paused due to being\n' +
    ' * on a metered network.'
]
transfer.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Info for the source or destination of a transfer.',
  ' * Info for the transfer operation.',
  ' * Test function to copy from the specified source to the specified destination.\n' +
    ' * @param transferInfo Options for the transfer.',
  ' A list of transfer locations, for use with transferBetweenVolumes.',
  ' * Tests copying from Drive to Downloads.',
  ' * Tests copying an office file from Drive to Downloads.',
  ' * Tests moving files from MyFiles/Downloads to MyFiles crbug.com/925175.',
  ' * Tests copying files from MyFiles/Downloads to MyFiles crbug.com/925175.',
  ' * Tests copying from Downloads to Drive.',
  ' * Tests copying from Drive "Shared with me" to Downloads.',
  ' * Tests copying from Drive "Shared with me" to Drive.',
  ' * Tests copying from Downloads to a shared folder on Drive.',
  ' * Tests moving from Downloads to a shared folder on Drive.',
  ' * Tests copying from a shared folder on Drive to Downloads.',
  ' * Tests copying from Drive offline to Downloads.',
  ' * Tests copying from Drive offline to Drive.',
  ' * Tests copying from a Team Drive to Drive.',
  ' * Tests copying from Drive to a Team Drive.',
  ' * Tests copying from a Team Drive to Downloads.',
  ' * Tests that a hosted file cannot be transferred from a Team Drive to a local\n' +
    ' * drive (e.g. Downloads). Hosted documents only make sense in the context of\n' +
    ' * Drive.',
  ' * Tests copying from Downloads to a Team Drive.',
  ' * Tests copying between Team Drives.',
  ' * Tests that moving a file to its current location is a no-op.',
  ' * Tests that the root html element .drag-drop-active class appears when drag\n' +
    ' * drop operations are active, and is removed when the operations complete.',
  ' * Tests that the root html element .drag-drop-active class appears when drag\n' +
    ' * drop operations are active, and is removed when the operations complete.',
  ' * Tests that dragging a file over a directory tree item that can accept the\n' +
    " * drop changes the class of that tree item to 'accepts'.",
  ' * Tests that dragging a file over a directory tree item that cannot accept\n' +
    " * the drop changes the class of that tree item to 'denies'.",
  ' * Tests that dragging a file over an EntryList directory tree item (here a\n' +
    ' * partitioned USB drive) does not raise an error.',
  ' * Tests that dragging a file over a FakeEntry directory tree item (here a\n' +
    ' * USB drive) does not raise an error.',
  ' * Tests that dragging a file list item selects its file list row.',
  ' * Tests that dropping a file on a directory tree item (folder) copies the\n' +
    ' * file to that folder.',
  ' * Tests that dropping a folder on a directory tree item (folder) copies the\n' +
    ' * folder and also updates the directory tree.',
  ' * Tests that dragging a file over a directory tree item (folder) navigates\n' +
    ' * the file list to that folder.',
  ' * Tests dropping a file originated from the browser.',
  ' * Tests that copying a deleted file shows an error.',
  ' * Tests that transfer source/destination persists if app window is re-opened.',
  ' * Tests that destination text line shows name for USB targets.',
  ' * Tests that dismissing an error notification on the foreground\n' +
    ' * page is propagated to the background page.',
  ' * Tests no remaining time displayed for not supported operations like format.',
  ' * Tests updating same panel keeps same message.\n' +
    ' * Use case: crbug/1137229',
  ' * Tests prepraring message shown when the remaining time is zero.'
]
trash.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Clicks the enabled and visible delete button and ensures the move to trash\n' +
    ' * button is hidden.',
  ' * Confirm the deletion happens and assert the dialog has the correct text.\n' +
    ' * @param okText expected OK text',
  ' * Clicks the delete button and confirms the deletion.',
  ' * Delete files in MyFiles and ensure they are moved to /.Trash.\n' +
    ' * Then delete items from /.Trash/files and /.Trash/info, then delete /.Trash.',
  ' * Selects a file and a folder at the same time then deletes both.',
  ' * Selects a non-empty folder and deletes it.',
  ' * Permanently delete files in Downloads.',
  ' * Files send to the Trash from ~/MyFiles should be able to be deleted once they\n' +
    ' * are in Trash.',
  " * Delete files then restore via progress center panel button 'Undo'.",
  ' * Delete files then restore via Trash file context menu.',
  ' * Delete files then restore via keyboard shortcut.',
  ' * Delete files (move them into trash) then empty trash using the banner.',
  ' * Delete files (move them into trash) then empty trash using shortcut.',
  ' * Delete files (move them into trash) then permanently delete.',
  ' * Delete files (move them into trash) then permanently delete.',
  ' * When selecting items whilst in the trash root, no files tasks should be\n' +
    ' * available.',
  ' * Double clicking on a file while in Trash shows a disallowed alert dialog.',
  ' * Pressing Enter on a file while in Trash shows a disallowed confirm dialog\n' +
    ' * with a restore button that performs restoration on the file.',
  ' * Double clicking on a file while in Trash shows a disallowed alert dialog.',
  ' * Tests that dragging an accepted file over Trash shows that it accepts the\n' +
    ' * action and performs a trash operation (move a move).',
  ' * Tests that dragging a file from a location that Trash is not enabled (Android\n' +
    ' * files in this case) shows it is denied.',
  ' * Tests that dragging and dropping on the Trash root actually trashes the item\n' +
    ' * and it appears in Trash after drop completed.',
  ' * Tests that dragging an entry that is non-modifiable (Downloads in this case)\n' +
    ' * should not be allowed despite residing in a trashable location.',
  ' * Tests the Trash root is not visible when opening Files app as a select file\n' +
    ' * dialog.',
  ' * Tests the Trash root is not visible when Files app is used as a select file\n' +
    ' * dialog within Android applications.',
  ' * Tests that a trashed file with a deletion date >30 days gets permanently\n' +
    ' * removed.',
  ' * Tests that dragging and dropping out of the Trash root restore files to the\n' +
    ' * location that was requested (i.e. the drop target).',
  ' * Tests that the "Moving to trash" visual signal that is shown whilst a trash\n' +
    ' * operation is in progress, does not contain the "Undo" button.',
  ' * Tests that the `TrashEnabled` preference adds and removes the trash root\n' +
    ' * from the directory tree.',
  ' * Tests that the `TrashEnabled` preference adds and removes the trash root\n' +
    ' * from the directory tree and when navigated on the Trash root, removal\n' +
    ' * navigates the user back to My files.',
  ' * Verify that files that have their parents trashed show an alert dialog to\n' +
    ' * indicate that restoration is not possible.',
  ' * Verify that infeasible actions within Trash root are disabled and hidden when\n' +
    ' * right clicking a file. Verify that feasible actions are enabled.',
  ' * Verify that infeasible actions within Trash root are disabled and hidden when\n' +
    ' * right clicking a folder. Verify that feasible actions are enabled.',
  ' * Verify that Extract All within Trash root is disabled and hidden when right\n' +
    ' * clicking a zip file.',
  ' * Verify that infeasible actions within Trash root are disabled and hidden when\n' +
    ' * right clicking a blank space. Verify that Cut is disabled but not hidden.',
  ' * If the current directory is .Trash or sub folders of .Trash (e.g.\n' +
    ' * files/info), after disable "show hidden files" menu, the current directory\n' +
    ' * should navigate back to MyFiles.'
]
traverse.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Test utility for traverse tests.\n' +
    ' * @param path Root path to be traversed.',
  ' Tests to traverse local directories.',
  ' Tests to traverse drive directories.'
]
zip_files.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The name of the UMA to track the zip creation time.',
  ' The name of the UMA to track extract archive status.',
  ' * Returns the expected file list row entries after opening (mounting) the\n' +
    ' * ENTRIES.zipArchive file list entry.',
  ' * Tests ZIP mounting from Downloads.',
  " * Tests that Files app's ZIP mounting notifies FileTasks when mounted.",
  ' * Tests ZIP mounting from Google Drive.',
  ' * Tests ZIP mounting from a removable USB volume.',
  " * Returns the expected file list rows after invoking the 'Zip selection' menu\n" +
    ' * command on the ENTRIES.photos file list item.',
  ' * Tests creating a ZIP file on Downloads.',
  ' * Tests creating a ZIP file on Drive.',
  ' * Tests creating a ZIP file containing an Office file on Drive.',
  ' * Tests that creating a ZIP file containing an encrypted file is disabled.',
  ' * Tests creating a ZIP file on a removable USB volume.',
  ' * Tests that extraction of a ZIP archive produces a feedback panel.',
  ' * Tests that extraction of a multiple ZIP archives produces the correct\n' +
    ' * feedback panel string.',
  ' * Tests that various selections enable/hide the correct menu items.',
  ' * Tests that extraction of a ZIP archive generates correct output files.',
  ' * Tests that repeated extraction of a ZIP archive generates extra directories.',
  ' * Tests extraction of a ZIP archive can detect and unpack filename encodings.',
  ' * Tests extract option menu item has proper a11y labels.',
  " * Tests extraction of a ZIP archive fails if there's not enough disk space.",
  ' * Tests that extraction of a ZIP archive from a read only volume succeeds.',
  ' * Tests ZIP mounting can be closed from the "Close" context menu item.'
]
remote_call.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * When step by step tests are enabled, turns on automatic step() calls. Note\n' +
    ' * that if step() is defined at the time of this call, invoke it to start the\n' +
    ' * test auto-stepping ball rolling.',
  ' * This error type is thrown by executeJsInPreviewTagSwa_ if the script to\n' +
    ' * execute in the untrusted context produces an error.',
  ' * Class to manipulate the window in the remote extension.',
  ' * Class to manipulate the window in the remote extension.'
]
test_util.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Sends a command to the controlling test harness, namely and usually, the\n' +
    ' * chrome FileManagerBrowserTest harness: it expects the command to contain the\n' +
    " * 'name' of the command, and any required or optional arguments of the command,\n" +
    ' * e.g.,\n' +
    ' *\n' +
    ' *   await sendTestMessage({\n' +
    " *     name: 'addEntries', // command with volume and entries arguments\n" +
    ' *     volume: volume,\n' +
    ' *     entries: entries\n' +
    ' *   });\n' +
    ' *\n' +
    ' * @param command Test command to send. The object is converted to a JSON string\n' +
    ' *     prior to sending.\n' +
    ' * @return Promise to be fulfilled with the value returned by the\n' +
    ' *     `chrome.test.sendMessage` callback.',
  ' * Waits (aka pauses, or sleeps) for the given time in milliseconds.\n' +
    ' * @param time Time in milliseconds.\n' +
    ' * @return Promise that will resolve after Time in milliseconds has elapsed.',
  ' Interval milliseconds between checks of repeatUntil.',
  ' Interval milliseconds between log output of repeatUntil.',
  " * Returns caller's file, function and line/column number from the call stack.\n" +
    " * @return String with the caller's file name and line/column number, as\n" +
    ' *     returned by exception stack trace. Example "at /a_file.js:1:1".',
  ' * Returns a pending marker. See also the repeatUntil function.\n' +
    " * @param caller name of test function that originated the operation, it's the\n" +
    ' *     return of getCaller() function.\n' +
    ' * @param message Pending reason including %s, %d, or %j markers. %j format an\n' +
    ' *     object as JSON.\n' +
    ' * @param args Values to be assigined to %x markers.\n' +
    ' * @return Object which returns true for the expression: obj instanceof\n' +
    ' *     pending.',
  ' * Waits until the checkFunction returns a value but a pending marker.\n' +
    ' * @param checkFunction Function to check a condition. It can return a pending\n' +
    ' *     marker created by a pending function.\n' +
    ' * @return Promise to be fulfilled with the return value of checkFunction when\n' +
    ' *     the checkFunction returns a value but a pending marker.',
  ' * Sends the test `command` to the browser test harness and awaits a string\n' +
    ' * result.\n' +
    ' * @param command Test command to send. Refer to sendTestMessage() above for the\n' +
    ' *     expected format of a test `command` object.\n' +
    ' * @param debug If truthy, log the result.',
  ' * Get all the browser windows.\n' +
    ' * @param expectedInitialCount The number of windows expected before opening a\n' +
    ' *     new one.\n' +
    ' * @return Object returned from `chrome.windows.getAll()`.',
  ' * Adds the given entries to the target volume(s).\n' +
    ' *\n' +
    ` * Note: passing 'local' as volume name will add entries to the "My\n` +
    ' * Files/Downloads", instead of "My files".\n' +
    ' *\n' +
    ' * @param volumeNames Names of target volumes.\n' +
    ' * @param entries List of entries to be added.\n' +
    ' * @return Promise to be fulfilled when the entries are added.',
  ' Enumeration that determines the shared status of entries.',
  ' * The capabilities (permissions) for the Test Entry. Structure should match\n' +
    ' * TestEntryCapabilities in file_manager_browsertest_base.cc. All capabilities\n' +
    ' * default to true if not specified.',
  ' * The folder features for the test entry. Structure should match\n' +
    ' * TestEntryFolderFeature in file_manager_browsertest_base.cc. All features\n' +
    ' * default to false is not specified.',
  ' * Parameters to creat a Test Entry in the file manager. Structure should match\n' +
    ' * TestEntryInfo in file_manager_browsertest_base.cc.\n' +
    ' *\n' +
    ' * Field details:\n' +
    ' *\n' +
    ' * sourceFileName: Source file name that provides file contents (file location\n' +
    ' * relative to /chrome/test/data/chromeos/file_manager/).\n' +
    ' *\n' +
    ' * targetPath: Name of entry on the test file system. Used to determine the\n' +
    ' * actual name of the file.\n' +
    ' *\n' +
    ' * teamDriveName: Name of the team drive this entry is in. Defaults to a blank\n' +
    ' * string (no team drive). Team Drive names must be unique.\n' +
    ' *\n' +
    ' * computerName: Name of the computer this entry is in. Defaults to a blank\n' +
    ' * string (no computer). Computer names must be unique.\n' +
    ' *\n' +
    ' * lastModifiedTime: Last modified time as a text to be shown in the last\n' +
    ' * modified column.\n' +
    ' *\n' +
    ' * nameText: File name to be shown in the name column.\n' +
    ' *\n' +
    ' * sizeText: Size text to be shown in the size column.\n' +
    ' *\n' +
    ' * typeText: Type name to be shown in the type column.\n' +
    ' *\n' +
    ' * capabilities:  Capabilities of this file. Defaults to all capabilities\n' +
    ' * available (read-write access).\n' +
    ' *\n' +
    ' * folderFeature: Folder features of this file. Defaults to all features\n' +
    ' * disabled.\n' +
    ' *\n' +
    ' * pinned: Drive pinned status of this file. Defaults to false.\n' +
    ' *\n' +
    ' * availableOffline: Whether the file is available offline. Defaults to false.\n' +
    ' *\n' +
    " * alternateUrl: File's Drive alternate URL. Defaults to an empty string.\n" +
    ' *\n' +
    ' * canPin: Whether the item can be pinned or not. Defaults to true.',
  ' * File system entry information for tests. Structure should match TestEntryInfo\n' +
    ' * in file_manager_browsertest_base.cc\n' +
    ' * TODO(sashab): Remove this, rename TestEntryInfoOptions to TestEntryInfo and\n' +
    ' * set the defaults in the record definition above.',
  ' * Filesystem entries used by the test cases.\n' +
    " * TODO(sashab): Rename 'nameText', 'sizeText' and 'typeText' to\n" +
    " * 'expectedNameText', 'expectedSizeText' and 'expectedTypeText' to reflect that\n" +
    ' * they are the expected values for those columns in the file manager.',
  ' * Creates a test file, which can be inside folders, however parent folders\n' +
    ' * have to be created by the caller using |createTestFolder|.\n' +
    ' * @param path File path to be created,',
  ' * Creates a folder test entry from a folder |path|.\n' +
    ' * @param path The folder path.',
  ' * Returns an array of nested folder test entries, where |depth| controls\n' +
    ' * the nesting. For example, a |depth| of 4 will return:\n' +
    ' *\n' +
    ' *   [0]: nested-folder0\n' +
    ' *   [1]: nested-folder0/nested-folder1\n' +
    ' *   [2]: nested-folder0/nested-folder1/nested-folder2\n' +
    ' *   [3]: nested-folder0/nested-folder1/nested-folder2/nested-folder3\n' +
    ' *\n' +
    ' * @param depth The nesting depth.',
  ' * Returns the count for |value| for the histogram |name|.\n' +
    ' * @param name The histogram to be queried.\n' +
    ' * @param value The value within that histogram to query.\n' +
    ' * @return A promise fulfilled with the count.',
  ' * Returns the sum for for the histogram |name|.\n' +
    ' * @param name The histogram to be queried.\n' +
    ' * @return A promise fulfilled with the sum.',
  ' * Checks the expected total count for the histogram |name|.\n' +
    ' * @param name The histogram to be queried.\n' +
    ' * @param count The expected sample count.',
  ' * Returns the count for the user action |name|.\n' +
    ' * @param name The user action to be queried.\n' +
    ' * @return A promise fulfilled with the count.',
  ' * Returns a date time string with diff days. This can be used as the\n' +
    ' * lastModifiedTime field of TestEntryInfo object, which is useful to construct\n' +
    ' * a recent file.\n' +
    ' * @param diffDays how many days in diff',
  ' * Formats the date to be able to compare to Files app date.',
  ' * Sanitizes the formatted date. Replaces unusual space with normal space.\n' +
    ' * @param strDate the date already in the string format.',
  ' * Opens a foreground window that makes a call to\n' +
    ' * chrome.fileSystem.chooseEntry. This is due to the fact that this API\n' +
    " * shouldn't be called in the background page (see crbug.com/736930).\n" +
    ' *\n' +
    ' * @return Promise fulfilled when a foreground window opens.',
  ' * Companion function to openEntryChoosingWindow function. This function waits\n' +
    ' * until entry selected in a dialog shown by chooseEntry() is set.\n' +
    ' * @return the entry set by the dialog shown via chooseEntry().',
  ' Waits until the MediaApp/Backlight shows up.'
]
testcase.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' clang-format on',
  ' * Namespace for test cases.'
]
index.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser_proxy.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
constants.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The number of apps displayed in app list in the main view before expanding.',
  ' Enumeration of the different subpage types within the app management page.',
  ' This histogram is also declared and used at chrome/browser/ui/webui/settings/\n' +
    ' chromeos/app_management/app_management_uma.h.',
  ' * These values are persisted to logs and should not be renumbered or re-used.\n' +
    ' * See tools/metrics/histograms/enums.xml.',
  ' * These values are persisted to logs and should not be renumbered or re-used.\n' +
    ' * See tools/metrics/histograms/enums.xml.',
  ' A Record (tuple) of app IDs to app used mostly for the supported links\n' +
    ' frontend components.'
]
permission_constants.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
permission_util.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
util.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Utility functions for the App Management page.',
  ' * Returns the TriState value of a permission. If the permission value is not\n' +
    ' * already a TriState, it will be converted based on the boolean value.',
  ' * Undefined is returned when the app does not request a permission.',
  " * Returns a list of all apps whose parent's app ID matches the selected app.",
  " * Returns the selected app's parent app or null.",
  ' * A comparator function to sort strings alphabetically.',
  ' * @param arg An argument to check for existence.\n' +
    ' * @throws If |arg| is undefined or null.',
  ' * @param arg A argument to check for existence.\n' +
    ' * @return |arg| with the type narrowed as non-nullable.\n' +
    ' * @throws If |arg| is undefined or null.'
]
ca_trust_edit_dialog.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'ca-trust-edit-dialog' allows the user to:\n" +
    ' *  - specify the trust level of a certificate authority that is being\n' +
    ' *    imported.\n' +
    ' *  - edit the trust level of an already existing certificate authority.'
]
certificate_delete_confirmation_dialog.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview A confirmation dialog allowing the user to delete various types\n' +
    ' * of certificates.'
]
certificate_entry.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview An element that represents an SSL certificate entry.'
]
certificate_entry_v2.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview The 'certificate-entry-v2' component is for showing a summary\n" +
    ' * of a certificate in a row on screen.\n' +
    ' *\n' +
    ' * This component is used in the new Certificate Management UI in\n' +
    ' * ./certificate_manager_v2.ts.'
]
certificate_info_dialog.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
certificate_info_dialog.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview The 'certificate-info-dialog' component is for showing\n" +
    ' * a dialog box that displays informational or error messages to the user.'
]
certificate_list.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'certificate-list' is an element that displays a list of\n" +
    ' * certificates.'
]
certificate_list_v2.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview The 'certificate-list-v2' component shows a list of\n" +
    ' * certificates with a header, an expander, and optionally an "export all"\n' +
    ' * button.\n' +
    ' *\n' +
    ' * This component is used in the new Certificate Management UI in\n' +
    ' * ./certificate_manager_v2.ts.'
]
certificate_manager.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview The 'certificate-manager' component manages SSL certificates.",
  ' <if expr="is_chromeos">',
  ' </if>'
]
certificate_manager_types.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Closure compiler typedefs.',
  ' clang-format off\n <if expr="is_chromeos">',
  ' </if>',
  ' clang-format on',
  " * The payload of the 'certificate-action' event.",
  " * The payload of the 'certificates-error' event.",
  ' * Enumeration of actions that require a popup menu to be shown to the user.',
  ' * The name of the event fired when a certificate action is selected from the\n' +
    ' * dropdown menu. CertificateActionEventDetail is passed as the event detail.',
  ' <if expr="is_chromeos">',
  " * The payload of the 'certificate-provisioning-view-details-action' event.",
  ' </if>',
  ' * The name of the event fired when a the "View Details" action is selected on\n' +
    ' * the dropdown menu next to a certificate provisioning process.\n' +
    ' * CertificateActionEventDetail is passed as the event detail.'
]
certificate_manager_v2.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview The 'certificate-manager-v2' component is a newer way for\n" +
    ' * showing and managing TLS certificates. This is tied to the Chrome Root Store\n' +
    ' * and Chrome Cert Management Enterprise policies launch.'
]
certificate_password_decryption_dialog.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview A dialog prompting the user for a decryption password such that\n' +
    ' * a previously exported personal certificate can be imported.'
]
certificate_password_dialog.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
certificate_password_dialog.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview The 'certificate-password-dialog' component is for showing\n" +
    ' * a dialog box that prompts the user to enter a password to decrypt a file\n' +
    ' * during client certificate import.'
]
certificate_password_encryption_dialog.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview A dialog prompting the user to encrypt a personal certificate\n' +
    ' * before it is exported to disk.'
]
certificate_provisioning_browser_proxy.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview A helper object used on Chrome OS from the "Manage\n' +
    ' * certificates" section to interact with certificate provisioining processes.',
  " * The 'certificate-provisioning-processes-changed' event will have an array of\n" +
    ' * CertificateProvisioningProcesses as its argument. This typedef is currently\n' +
    ' * declared here to be consistent with certificates_browser_proxy.js, but it is\n' +
    ' * not specific to CertificateProvisioningBrowserProxy.\n' +
    ' *\n' +
    ' * @see chrome/browser/ui/webui/settings/certificates_handler.cc',
  ' The singleton instance_ is replaced with a test version of this wrapper\n' +
    ' during testing.'
]
certificate_provisioning_details_dialog.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'certificate-provisioning-details-dialog' allows the user to\n" +
    ' * view the details of an in-progress certiifcate provisioning process.'
]
certificate_provisioning_entry.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'certificate-provisioning-entry' is an element that displays\n" +
    ' * one certificate provisioning processes.'
]
certificate_provisioning_list.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'certificate-provisioning-list' is an element that displays a\n" +
    ' * list of certificate provisioning processes.'
]
certificate_subentry.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview certificate-subentry represents an SSL certificate sub-entry.'
]
certificate_subpage_v2.ts [
  ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview The 'certificate-subpage-v2' component is designed to show a\n" +
    ' * subpage. This subpage contains:\n' +
    ' *\n' +
    ' *   - header text\n' +
    ' *   - one or more lists of certs\n' +
    ' *   - a back button for navigating back to the previous page\n' +
    ' *\n' +
    ' * This component is used in the new Certificate Management UI in\n' +
    ' * ./certificate_manager_v2.ts.'
]
certificates_browser_proxy.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview A helper object used from the "Manage certificates" section\n' +
    ' * to interact with the browser.',
  ' * @see chrome/browser/ui/webui/settings/certificates_handler.cc',
  ' * A data structure describing a certificate that is currently being imported,\n' +
    ' * therefore it has no ID yet, but it has a name. Used within JS only.',
  ' * Top-level grouping node in a certificate list, representing an organization\n' +
    ' * and containing certs that belong to the organization in |subnodes|. If a\n' +
    ' * certificate does not have an organization name, it will be grouped under its\n' +
    ' * own CertificatesOrgGroup with |name| set to its display name.\n' +
    ' * @see chrome/browser/ui/webui/settings/certificates_handler.cc',
  ' * Generic error returned from C++ via a Promise reject callback.\n' +
    ' * @see chrome/browser/ui/webui/settings/certificates_handler.cc',
  ' * Enumeration of all possible certificate types.',
  ' * Error returned from C++ via a Promise reject callback, when some certificates\n' +
    ' * fail to be imported.\n' +
    ' * @see chrome/browser/ui/webui/settings/certificates_handler.cc',
  ' The singleton instance_ is replaced with a test version of this wrapper\n' +
    ' during testing.'
]
certificates_error_dialog.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview A dialog for showing SSL certificate related error messages.\n' +
    ' * The user can only close the dialog, there is no other possible interaction.'
]
certificates_v2_browser_proxy.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview A helper object used from the "Manage certificates" section\n' +
    ' * to interact with the browser. For the V2 Certificate Manager only.',
  ' The singleton instance_ is replaced with a test version of this wrapper\n' +
    ' during testing.'
]
crs_section_v2.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview The 'crs-section-v2' component is the Chrome Root Store\n" +
    ' * section of the Certificate Management V2 UI.'
]
local_certs_section_v2.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview The 'local-certs-section-v2' component is a section of the\n" +
    ' * Certificate Management V2 UI that shows local modifications to the the users\n' +
    ' * trusted roots for TLS server auth (e.g. roots imported from the platform).'
]
navigation_v2.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Page navigation utility code.',
  ' * The different pages that can be shown.',
  ' * A helper object to manage in-page navigations.'
]
browser_proxy.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file provides a singleton class that exposes the Mojo\n' +
    ' * handler interface used for one way communication between the JS and the\n' +
    ' * browser.\n' +
    ' * TODO(tluk): Convert this into typescript once all dependencies have been\n' +
    ' * fully migrated.'
]
colors_css_updater.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file holds the functions that allow WebUI to update its\n' +
    ' * colors CSS stylesheet when a ColorProvider change in the browser is detected.',
  ' * The CSS selector used to get the <link> node with the colors.css stylesheet.\n' +
    ' * The wildcard is needed since the URL ends with a timestamp.',
  ' <if expr="chromeos_ash">\n' +
    ' Event fired after updated colors have been fetched and applied.',
  ' </if>'
]
browser_proxy.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
browser_proxy.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview A helper object used by the customize-color-scheme-mode\n' +
    ' * component to interact with the browser.'
]
customize_color_scheme_mode.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
customize_color_scheme_mode.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
segmented_button.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
segmented_button.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
segmented_button_option.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
segmented_button_option.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
help_bubble.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
help_bubble.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview A bubble for displaying in-product help. These are created\n' +
    ' * dynamically by HelpBubbleMixin, and their API should be considered an\n' +
    ' * implementation detail and subject to change (you should not add them to your\n' +
    ' * components directly).'
]
help_bubble_controller.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Return whether the current language is right-to-left',
  ' Reflect arrow position across y-axis',
  ' * HelpBubble controller class\n' +
    ' * - There should exist only one HelpBubble instance for each nativeId\n' +
    ' * - The mapping between nativeId and htmlId is held within this instance\n' +
    ' * - The rest of the parameters are passed to createBubble'
]
help_bubble_mixin.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Logic common to components that support a help bubble.\n' +
    ' *\n' +
    ' * A component implementing this mixin should call\n' +
    ' * registerHelpBubble() to associate specific element identifiers\n' +
    ' * referenced  in an IPH or Tutorials journey with the ids of the HTML elements\n' +
    ' * that journey cares about (typically, points for help bubbles to anchor to).\n' +
    ' *\n' +
    ' * Multiple components in the same WebUI may have this mixin. Each mixin will\n' +
    ' * receive ALL help bubble-related messages from its associated WebUIController\n' +
    ' * and determines if any given message is relevant. This is done by checking\n' +
    ' * against registered identifier.\n' +
    ' *\n' +
    ' * See README.md for more information.'
]
help_bubble_mixin_lit.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Logic common to components that support a help bubble.\n' +
    ' *\n' +
    ' * A component implementing this mixin should call\n' +
    ' * registerHelpBubble() to associate specific element identifiers\n' +
    ' * referenced  in an IPH or Tutorials journey with the ids of the HTML elements\n' +
    ' * that journey cares about (typically, points for help bubbles to anchor to).\n' +
    ' *\n' +
    ' * Multiple components in the same WebUI may have this mixin. Each mixin will\n' +
    ' * receive ALL help bubble-related messages from its associated WebUIController\n' +
    ' * and determines if any given message is relevant. This is done by checking\n' +
    ' * against registered identifier.\n' +
    ' *\n' +
    ' * See README.md for more information.'
]
help_bubble_proxy.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
new_badge.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
new_badge.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview A badge that can be added to UI elements to indicate newness.\n' +
    ' * This SHOULD NOT BE USED by new features until the below follow up is done!\n' +
    ' *\n' +
    ' * Unlike the Views version, this does not automatically disappear after the\n' +
    ' * feature is no longer new, so this must be done manually.\n' +
    ' * TODO(crbug.com/361169212): Follow up to integrate with auto-disappear code.'
]
constants.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Histogram buckets for UMA tracking of which type of result the History user\n' +
    ' * clicked.',
  ' * Histogram buckts for UMA tracking of Embeddings-related UMA actions. They\n' +
    ' * are defined here rather than in the history_embeddings component, because\n' +
    ' * History component itself needs to call this to provide a proper comparison\n' +
    " * for users that don't have Embeddings enabled.",
  ' Unclicked query results that live for less than this amount of milliseconds\n' +
    ' are ignored from the metrics perspective. This is to account for the fact\n' +
    ' that new query results are fetched per user keystroke.'
]
browser_proxy.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file provides a singleton class that exposes the Mojo\n' +
    ' * handler interface used for bidirectional communication between the page and\n' +
    ' * the browser.'
]
cluster.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cluster.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file provides a custom element displaying a cluster.'
]
cluster_menu.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cluster_menu.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file provides a custom element displaying an action menu.\n' +
    " * It's meant to be flexible enough to be associated with either a specific\n" +
    ' * visit, or the whole cluster, or the top visit of unlabelled cluster.'
]
clusters.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off'
]
clusters.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file provides a custom element that requests and shows\n' +
    ' * history clusters given a query. It handles loading more clusters using\n' +
    ' * infinite scrolling as well as deletion of visits within the clusters.'
]
horizontal_carousel.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
horizontal_carousel.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file provides a custom element displaying a horizontal\n' +
    ' * carousel for the carousel elements.'
]
metrics_proxy.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file provides an abstraction layer for logging metrics for\n' +
    ' * mocking in tests.'
]
page_favicon.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
page_favicon.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file provides a custom element displaying a page favicon.',
  ' * TODO(tommycli): This element should be renamed to reflect the reality that\n' +
    ` * it's used to both render the visit's "important image" if it exists, and\n` +
    " * falls back to the favicon if it doesn't exist."
]
search_query.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
search_query.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file provides a custom element displaying a search query.'
]
url_visit.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
url_visit.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file provides a custom element displaying a visit to a\n' +
    ' * page within a cluster. A visit features the page favicon, title, a timestamp,\n' +
    ' * as well as an action menu.',
  ' * Maps supported annotations to localized string identifiers.'
]
utils.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Populates `container` with the highlighted `text` based on the mojom provided\n' +
    ' * `match_positions`. This function takes care of converting from the mojom\n' +
    ' * format to the format expected by search_highlight_utils.'
]
browser_proxy.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
filter_chips.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
history_embeddings.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Minimum time the loading state should be visible. This is to prevent the\n' +
    ' * loading animation from flashing.'
]
localized_link.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
localized_link.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'localized-link' takes a localized string that\n" +
    ' * contains up to one anchor tag, and labels the string contained within the\n' +
    ' * anchor tag with the entire localized string. The string should not be bound\n' +
    ' * by element tags. The string should not contain any elements other than the\n' +
    ' * single anchor tagged element that will be aria-labelledby the entire string.\n' +
    ' *\n' +
    ' * Example: "lorem ipsum <a href="example.com">Learn More</a> dolor sit"\n' +
    ' *\n' +
    ' * The "Learn More" will be aria-labelledby like so: "lorem ipsum Learn More\n' +
    ' * dolor sit". Meanwhile, "Lorem ipsum" and "dolor sit" will be aria-hidden.\n' +
    ' *\n' +
    ' * This element also supports strings that do not contain anchor tags; in this\n' +
    ' * case, the element gracefully falls back to normal text. This can be useful\n' +
    ' * when the property is data-bound to a function which sometimes returns a\n' +
    ' * string with a link and sometimes returns a normal string.'
]
managed_dialog.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
managed_dialog.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'managed-dialog' is a dialog that is displayed when a user\n" +
    " * interact with some UI features which are managed by the user's organization."
]
managed_footnote.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
managed_footnote.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview UI element for indicating that this user is managed by\n' +
    ' * their organization. This component uses the |isManaged| boolean in\n' +
    ' * loadTimeData, and the |managedByOrg| i18n string.\n' +
    ' *\n' +
    ' * If |isManaged| is false, this component is hidden. If |isManaged| is true, it\n' +
    ' * becomes visible.'
]
browser_proxy.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
most_visited.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
most_visited.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Returns null if URL is not valid.'
]
window_proxy.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Abstracts built-in JS functions in order to mock in tests.'
]
browser_proxy.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview The browser proxy used to access `PageImageService` from WebUI.'
]
searchbox.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' A real search box that behaves just like the Omnibox.'
]
searchbox_action.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Displays an action associated with AutocompleteMatch (i.e. Clear\n' +
    ' Browsing History, etc.)'
]
searchbox_browser_proxy.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file provides a singleton class that exposes the Mojo\n' +
    ' * handler interface used for bidirectional communication between the\n' +
    ' * <cr-searchbox> or the <cr-searchbox-dropdown> and the browser.'
]
searchbox_dropdown.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " The '%' operator in JS returns negative numbers. This workaround avoids that.",
  ' A dropdown element that contains autocomplete matches. Provides an API for\n' +
    ' the embedder (i.e., <cr-searchbox>) to change the selection.'
]
searchbox_icon.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' The LHS icon. Used on autocomplete matches as well as the searchbox input to\n' +
    ' render icons, favicons, and entity images.'
]
searchbox_match.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' * Bitmap used to decode the value of ACMatchClassification style\n' +
    ' * field.\n' +
    ' * See components/omnibox/browser/autocomplete_match.h.',
  ' clang-format on',
  ' Displays an autocomplete match.'
]
searchbox_thumbnail.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Displays a thumbnail in the searchbox input.'
]
utils.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Converts a String16 to a JavaScript String.',
  ' Converts a JavaScript String to a String16.',
  ' * Converts a time ticks in milliseconds to TimeTicks.\n' +
    ' * @param timeTicks time ticks in milliseconds',
  ' Converts a side type to a string to be used in CSS.',
  ' Converts a render type to a string to be used in CSS.'
]
browser_proxy.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview A helper object used by the cr-theme-color-picker\n' +
    ' * component to interact with the browser.'
]
check_mark_wrapper.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
check_mark_wrapper.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
color_utils.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
theme_color.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
theme_color.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
theme_color_picker.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
theme_color_picker.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
theme_hue_slider_dialog.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
theme_hue_slider_dialog.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Compute a CSS linear-gradient that starts with minHue and ends with maxHue.'
]
cr_a11y_announcer.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The CrA11yAnnouncerElement is a visually hidden element that reads out\n' +
    ' * messages to a screen reader. This is preferred over IronA11yAnnouncer.\n' +
    ' * @fileoverview',
  ' * 150ms seems to be around the minimum time required for screen readers to\n' +
    ' * read out consecutively queued messages.',
  ' * A map of an HTML element to its corresponding CrA11yAnnouncerElement. There\n' +
    ' * may be multiple CrA11yAnnouncerElements on a page, especially for cases in\n' +
    " * which the DocumentElement's CrA11yAnnouncerElement becomes hidden or\n" +
    ' * deactivated (eg. when a modal dialog causes the CrA11yAnnouncerElement to\n' +
    ' * become inaccessible).'
]
cr_action_menu.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_action_menu.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Returns the point to start along the X or Y axis given a start and end\n' +
    ' * point to anchor to, the length of the target and the direction to anchor\n' +
    ' * in. If honoring the anchor would force the menu outside of min/max, this\n' +
    ' * will ignore the anchor position and try to keep the menu within min/max.'
]
cr_auto_img.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview <cr-auto-img> is a specialized <img> that facilitates embedding\n' +
    ' * images into WebUIs via its auto-src attribute. <cr-auto-img> automatically\n' +
    ' * determines if the image is local (e.g. data: or chrome://) or external (e.g.\n' +
    ' * https://), and embeds the image directly or via the chrome://image data\n' +
    ' * source accordingly. Usage:\n' +
    ' *\n' +
    ' *   1. In C++ register |SanitizedImageSource| for your WebUI.\n' +
    ' *\n' +
    ' *   2. In HTML instantiate\n' +
    ' *\n' +
    ' *      <img is="cr-auto-img" auto-src="https://foo.com/bar.png">\n' +
    ' *\n' +
    ' *      If your image URL points to Google Photos storage, meaning it needs an\n' +
    ' *      auth token, you can use the is-google-photos attribute as follows:\n' +
    ' *\n' +
    ' *      <img is="cr-auto-img" auto-src="https://foo.com/bar.png"\n' +
    ' *          is-google-photos>\n' +
    ' *\n' +
    ' *      If you want the image to reset to an empty state when auto-src changes\n' +
    ' *      and the new image is still loading, set the clear-src attribute:\n' +
    ' *\n' +
    ' *      <img is="cr-auto-img" auto-src="[[calculateSrc()]]" clear-src>\n' +
    ' *\n' +
    ' *      If you want your image to be always encoded as a static image (even if\n' +
    ' *      the source image is animated), set the static-encode attribute:\n' +
    ' *\n' +
    ' *      <img is="cr-auto-img" auto-src="https://foo.com/bar.png"\n' +
    ' *          static-encode>\n' +
    ' *\n' +
    ' *      Static images are encoded as PNG by default. If you want your image to\n' +
    ' *      be encoded as a Webp image, set the encode-type attribute to "webp".\n' +
    ' *\n' +
    ' *      <img is="cr-auto-img" auto-src="https://foo.com/bar.png"\n' +
    ' *          static-encode encode-type="webp">\n' +
    ' *\n' +
    ' * NOTE: Since <cr-auto-img> may use the chrome://image data source some images\n' +
    ' * may be transcoded to PNG.'
]
cr_button.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_button.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'cr-button' is a button which displays slotted elements. It can\n" +
    ' * be interacted with like a normal button using click as well as space and\n' +
    " * enter to effectively click the button and fire a 'click' event. It can also\n" +
    ' * style an icon inside of the button with the [has-icon] attribute.'
]
cr_checkbox.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_checkbox.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'cr-checkbox' is a component similar to native checkbox. It\n" +
    " * fires a 'change' event *only* when its state changes as a result of a user\n" +
    ' * interaction. By default it assumes there will be child(ren) passed in to be\n' +
    ' * used as labels. If no label will be provided, a .no-label class should be\n' +
    ' * added to hide the spacing between the checkbox and the label container.\n' +
    ' *\n' +
    ' * If a label is provided, it will be shown by default after the checkbox. A\n' +
    ' * .label-first CSS class can be added to show the label before the checkbox.\n' +
    ' *\n' +
    ' * List of customizable styles:\n' +
    ' *  --cr-checkbox-border-size\n' +
    ' *  --cr-checkbox-checked-box-background-color\n' +
    ' *  --cr-checkbox-checked-box-color\n' +
    ' *  --cr-checkbox-label-color\n' +
    ' *  --cr-checkbox-label-padding-start\n' +
    ' *  --cr-checkbox-mark-color\n' +
    ' *  --cr-checkbox-ripple-checked-color\n' +
    ' *  --cr-checkbox-ripple-size\n' +
    ' *  --cr-checkbox-ripple-unchecked-color\n' +
    ' *  --cr-checkbox-size\n' +
    ' *  --cr-checkbox-unchecked-box-color'
]
cr_chip.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_chip.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_collapse.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_collapse.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_container_shadow_mixin.ts [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview CrContainerShadowMixin holds logic for showing a drop shadow\n' +
    ' * near the top of a container element, when the content has scrolled. Inherits\n' +
    ' * from CrScrollObserverMixin.\n' +
    ' *\n' +
    ' * Elements using this mixin are expected to define a #container element which\n' +
    ' * is the element being scrolled.\n' +
    ' *\n' +
    ' * If the #container element has a show-bottom-shadow attribute, a drop shadow\n' +
    ' * will also be shown near the bottom of the container element, when there\n' +
    ' * is additional content to scroll to. Examples:\n' +
    ' *\n' +
    ' * For both top and bottom shadows:\n' +
    ' * <div id="container" show-bottom-shadow>...</div>\n' +
    ' *\n' +
    ' * For top shadow only:\n' +
    ' * <div id="container">...</div>\n' +
    ' *\n' +
    ' * The mixin will take care of inserting an element with ID\n' +
    " * 'cr-container-shadow-top' which holds the drop shadow effect, and,\n" +
    " * optionally, an element with ID 'cr-container-shadow-bottom' which holds the\n" +
    ' * same effect. Note that the show-bottom-shadow attribute is inspected only\n' +
    ' * during connectedCallback(), and any changes that occur after that point\n' +
    ' * will not be respected.\n' +
    ' *\n' +
    ' * Clients should either use the existing shared styling in\n' +
    " * cr_shared_style.css, '#cr-container-shadow-[top/bottom]' and\n" +
    " * '#cr-container-shadow-top:has(+ #container.can-scroll:not(.scrolled-to-top))'\n" +
    " * and '#container.can-scroll:not(.scrolled-to-bottom) +\n" +
    " *     #cr-container-shadow-bottom'\n" +
    ' * or define their own styles.'
]
cr_container_shadow_mixin_lit.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview CrContainerShadowMixinLit holds logic for showing a drop shadow\n' +
    ' * near the top of a container element, when the content has scrolled. Inherits\n' +
    ' * from CrScrollObserverMixinLit.\n' +
    ' *\n' +
    ' * Lit version of CrContainerShadowMixin.\n' +
    ' *\n' +
    ' * Elements using this mixin are expected to define a #container element which\n' +
    ' * is the element being scrolled.\n' +
    ' *\n' +
    ' * If the #container element has a show-bottom-shadow attribute, a drop shadow\n' +
    ' * will also be shown near the bottom of the container element, when there\n' +
    ' * is additional content to scroll to. Examples:\n' +
    ' *\n' +
    ' * For both top and bottom shadows:\n' +
    ' * <div id="container" show-bottom-shadow>...</div>\n' +
    ' *\n' +
    ' * For top shadow only:\n' +
    ' * <div id="container">...</div>\n' +
    ' *\n' +
    ' * The mixin will take care of inserting an element with ID\n' +
    " * 'cr-container-shadow-top' which holds the drop shadow effect, and,\n" +
    " * optionally, an element with ID 'cr-container-shadow-bottom' which holds the\n" +
    ' * same effect. Note that the show-bottom-shadow attribute is inspected only\n' +
    ' * during connectedCallback() and any changes that occur after that point will\n' +
    ' * not be respected.\n' +
    ' *\n' +
    ' * Clients should either use the existing shared styling in\n' +
    " * cr_shared_style.css, '#cr-container-shadow-[top/bottom]' and\n" +
    " * '#cr-container-shadow-top:has(+ #container.can-scroll:not(.scrolled-to-top))'\n" +
    " * and '#container.can-scroll:not(.scrolled-to-bottom) +\n" +
    " *     #cr-container-shadow-bottom'\n" +
    ' * or define their own styles.'
]
cr_dialog.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_dialog.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'cr-dialog' is a component for showing a modal dialog. If the\n" +
    " * dialog is closed via close(), a 'close' event is fired. If the dialog is\n" +
    " * canceled via cancel(), a 'cancel' event is fired followed by a 'close' event.\n" +
    ' *\n' +
    ' * Additionally clients can get a reference to the internal native <dialog> via\n' +
    ' * calling getNative() and inspecting the |returnValue| property inside\n' +
    " * the 'close' event listener to determine whether it was canceled or just\n" +
    ' * closed, where a truthy value means success, and a falsy value means it was\n' +
    ' * canceled.\n' +
    ' *\n' +
    ' * Note that <cr-dialog> wrapper itself always has 0x0 dimensions, and\n' +
    ' * specifying width/height on <cr-dialog> directly will have no effect on the\n' +
    ' * internal native <dialog>. Instead use cr-dialog::part(dialog) to specify\n' +
    ' * width/height (as well as other available mixins to style other parts of the\n' +
    ' * dialog contents).'
]
cr_drawer.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_drawer.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_expand_button.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_expand_button.ts [
  ' Copyright 2015 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview\n' +
    " * 'cr-expand-button' is a chrome-specific wrapper around a button that toggles\n" +
    ' * between an opened (expanded) and closed state.'
]
cr_feedback_buttons.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_feedback_buttons.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_grid.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_grid.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Displays children in a two-dimensional grid and supports focusing children\n' +
    ' with arrow keys.'
]
cr_icon.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_iconset.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_iconset.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
iconset_map.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Common interface implemented by CrIconsetElement and IronIconset.'
]
cr_icon_button.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_icon_button.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'cr-icon-button' is a button which displays an icon with a\n" +
    ' * ripple. It can be interacted with like a normal button using click as well as\n' +
    " * space and enter to effectively click the button and fire a 'click' event.\n" +
    ' *\n' +
    ' * There are two sources to icons:\n' +
    ' * Option 1: CSS classes defined in cr_icons.css.\n' +
    ' * Option 2: SVG icons defined in a cr-iconset or iron-iconset-svg,\n' +
    ' *     with the name passed to cr-icon-button via the |ironIcon| property.\n' +
    ' *\n' +
    ' * Example of using CSS classes:\n' +
    ' * In the .html.ts template file (if using a .html template file instead, the\n' +
    ' * import should be in the corresponding .ts file):\n' +
    " * import 'chrome://resources/cr_elements/cr_icons.css.js';\n" +
    ' *\n' +
    ' * export function getHtml() {\n' +
    ' *   return html`\n' +
    ' *     <cr-icon-button class="icon-class-name"></cr-icon-button>`;\n' +
    ' * }\n' +
    ' *\n' +
    ' * When an icon is specified using a class, the expectation is the\n' +
    ' * class will set an image to the --cr-icon-image variable.\n' +
    ' *\n' +
    ' * Example of using a cr-iconset to supply an icon via the iron-icon parameter:\n' +
    ' * In the .html.ts template file (if using a .html template file instead, the\n' +
    ' * import should be in the corresponding .ts file):\n' +
    " * import 'chrome://resources/cr_elements/icons_lit.html.js';\n" +
    ' *\n' +
    ' * export function getHtml() {\n' +
    ' *   return html`\n' +
    ' *     <cr-icon-button iron-icon="cr:icon-key"></cr-icon-button>`;\n' +
    ' * }\n' +
    ' *\n' +
    ' * The color of the icon can be overridden using CSS variables. When using\n' +
    " * the ironIcon property to populate cr-icon-button's internal <cr-icon>, the\n" +
    ' * following CSS variables for fill and stroke can be overridden for cr-icon:\n' +
    ' * --iron-icon-button-fill-color\n' +
    ' * --iron-icon-button-stroke-color\n' +
    ' *\n' +
    ' * When not using the ironIcon property, cr-icon-button will not create a\n' +
    ' * <cr-icon>, so the cr-icon related CSS variables above are ignored.\n' +
    ' *\n' +
    ' * When using the ironIcon property, more than one icon can be specified by\n' +
    ' * setting the |ironIcon| property to a comma-delimited list of keys.'
]
cr_infinite_list.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'cr-infinite-list' is a thin wrapper around 'cr-lazy-list' that\n" +
    " * emulates some of the behavior of 'iron-list'."
]
cr_input.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_input.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Input types supported by cr-input.',
  " * @fileoverview 'cr-input' is a component similar to native input.\n" +
    ' *\n' +
    ' * Native input attributes that are currently supported by cr-inputs are:\n' +
    ' *   autofocus\n' +
    ' *   disabled\n' +
    ' *   max (only applicable when type="number")\n' +
    ' *   min (only applicable when type="number")\n' +
    ' *   maxlength\n' +
    ' *   minlength\n' +
    ' *   pattern\n' +
    ' *   placeholder\n' +
    ' *   readonly\n' +
    ' *   required\n' +
    ' *   tabindex (set through input-tabindex)\n' +
    ' *   type (see |SUPPORTED_INPUT_TYPES| above)\n' +
    ' *   value\n' +
    ' *\n' +
    ' * Additional attributes that you can use with cr-input:\n' +
    ' *   label\n' +
    ' *   auto-validate - triggers validation based on |pattern| and |required|,\n' +
    ' *                   whenever |value| changes.\n' +
    ' *   error-message - message displayed under the input when |invalid| is true.\n' +
    ' *   invalid\n' +
    ' *\n' +
    ' * You may pass an element into cr-input via [slot="suffix"] to be vertically\n' +
    ' * center-aligned with the input field, regardless of position of the label and\n' +
    ' * error-message. Example:\n' +
    ' *   <cr-input>\n' +
    ' *     <cr-button slot="suffix"></cr-button>\n' +
    ' *   </cr-input>'
]
cr_lazy_list.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'cr-lazy-list' is a component optimized for showing a list of\n" +
    ' * items that overflows the view and requires scrolling. For performance\n' +
    ' * reasons, the DOM items are incrementally added to the view as the user\n' +
    ' * scrolls through the list. The component expects a `scrollTarget` property\n' +
    ' * to be specified indicating the scrolling container. This container is\n' +
    ' * used for observing scroll events and resizes. The container should have\n' +
    ' * bounded height so that cr-lazy-list can determine how many HTML elements to\n' +
    ' * render initially.\n' +
    ' * If using a container that can shrink arbitrarily small to the height of the\n' +
    " * contents, a 'minViewportHeight' property should also be provided specifying\n" +
    ' * the minimum viewport height to try to fill with items.\n' +
    " * Each list item's HTML element is created using the `template` property,\n" +
    ' * which should be set to a function returning a TemplateResult corresponding\n' +
    ' * to a passed in list item and selection index.\n' +
    ' * Set `listItemHost` to the `this` context for any event handlers in this\n' +
    ' * template. If this property is not provided, cr-lazy-list is assumed to be\n' +
    " * residing in a ShadowRoot, and the shadowRoot's |host| is used.\n" +
    ' * The `items` property specifies an array of list item data.\n' +
    ' * The `itemSize` property should be set to an estimate of the list item size.\n' +
    ' * This is used when setting contain-intrinsic-size styling for list items.\n' +
    ' * To restore focus to a specific item if it is focused when the items\n' +
    ' * array changes, set `restoreFocusItem` to that HTMLElement. If the element\n' +
    ' * is focused when the items array is updated, focus will be restored.'
]
cr_lazy_render.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview\n' +
    ' * cr-lazy-render is a simple variant of dom-if designed for lazy rendering\n' +
    ' * of elements that are accessed imperatively.\n' +
    ' * Usage:\n' +
    ' *   <cr-lazy-render id="menu">\n' +
    ' *     <template>\n' +
    ' *       <heavy-menu></heavy-menu>\n' +
    ' *     </template>\n' +
    ' *   </cr-lazy-render>\n' +
    ' *\n' +
    ' *   this.$.menu.get().show();'
]
cr_lazy_render_lit.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview\n' +
    ' * cr-lazy-render-lit helps with lazy rendering elements only when they are\n' +
    ' * actually needed (requested to be shown by the user). The lazy rendered\n' +
    ' * node is rendered right before the cr-lazy-render-lit node itself, such that\n' +
    ' * it can be fully styled by the parent, or use Lit bindings referring to the\n' +
    " * parent's reactive properties.\n" +
    ' *\n' +
    ' * Example usage:\n' +
    ' *   <cr-lazy-render-lit id="menu"\n' +
    ' *       .template="${() => html`<heavy-menu></heavy-menu>`}">\n' +
    ' *   </cr-lazy-render-lit>\n' +
    ' *\n' +
    ' * Note that the provided template should create exactly one top-level DOM node,\n' +
    ' * otherwise the result of this.get() will not be correct.\n' +
    ' *\n' +
    ' *   this.$.menu.get().show();'
]
cr_link_row.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_link_row.ts [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview\n' +
    ' * A link row is a UI element similar to a button, though usually wider than a\n' +
    " * button (taking up the whole 'row'). The name link comes from the intended use\n" +
    ' * of this element to take the user to another page in the app or to an external\n' +
    ' * page (somewhat like an HTML link).'
]
cr_loading_gradient.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_loading_gradient.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Count of cr-loading-gradient elements created. Used to assign unique IDs.\n' +
    ' * Unique IDs are necessary since clipPaths are slotted in from the light DOM,\n' +
    ' * so there can be leakages across multiple <cr-loading-gradient> instances.'
]
cr_lottie.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_lottie.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'cr-lottie' is a wrapper around the player for lottie\n" +
    " * animations. Since the player runs on a worker thread, 'cr-lottie' requires\n" +
    ` * the document CSP to be set to "worker-src blob: chrome://resources 'self';".\n` +
    ' *\n' +
    ' * For documents that have TrustedTypes CSP checks enabled, it also requires the\n' +
    ' * document CSP to be set to "trusted-types lottie-worker-script-loader;".\n' +
    ' *\n' +
    " * Fires a 'cr-lottie-initialized' event when the animation was successfully\n" +
    ' * initialized.\n' +
    " * Fires a 'cr-lottie-playing' event when the animation starts playing.\n" +
    " * Fires a 'cr-lottie-paused' event when the animation has paused.\n" +
    " * Fires a 'cr-lottie-stopped' event when animation has stopped.\n" +
    " * Fires a 'cr-lottie-resized' event when the canvas the animation is being\n" +
    ' * drawn on is resized.'
]
cr_menu_selector.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_menu_selector.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_page_selector.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_page_selector.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * cr-page-selector is a simple implementation of CrSelectableMixin which by\n' +
    " * default hides any slotted element that is not currently marked as 'selected',\n" +
    ' * since this is usually leveraged to implement a page selector where only the\n' +
    ' * currently selected page is visible.\n' +
    ' *\n' +
    " * A 'show-all' attribute is exposed which when set causes all slotted\n" +
    ' * elements (selected and non-selected) to be visible at all times, which makes\n' +
    " * this element useful for more UI use cases, besides the 'page selector' case."
]
cr_profile_avatar_selector.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_profile_avatar_selector.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'cr-profile-avatar-selector' is an element that displays\n" +
    ' * profile avatar icons and allows an avatar to be selected.'
]
cr_progress.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_progress.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Progress with simple animations. Forked/migrated\n' +
    " * from Polymer's paper-progress."
]
cr_card_radio_button.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_card_radio_button.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview\n' +
    " * 'cr-card-radio-button' is a radio button in the style of a card. A checkmark\n" +
    ' * is displayed in the upper right hand corner if the radio button is selected.'
]
cr_radio_button.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_radio_button.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_radio_button_mixin.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Mixin for cr-radio-button-like elements.',
  ' clang-format off'
]
cr_radio_button_mixin_lit.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Mixin for cr-radio-button-like elements.',
  ' clang-format off',
  ' clang-format on'
]
cr_radio_group.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_radio_group.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_ripple.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' @return The distance between (x1, y1) and (x2, y2).'
]
cr_ripple_mixin.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * `CrRippleMixin` exposes methods to dynamically create a cr-ripple\n' +
    ' * when needed.'
]
cr_scroll_observer_mixin.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview CrScrollObserverMixin has logic to add CSS classes based\n' +
    ' * on the scroll state of a scrolling container element specified by a\n' +
    ' * #container ID.\n' +
    ' *\n' +
    ' * Elements using this mixin are expected to define a #container element, which\n' +
    ' * is the element being scrolled. There should only be one such element in the\n' +
    ' * DOM.\n' +
    ' * <div id="container">...</div>\n' +
    ' * Alternatively, clients can set a container element by overriding the\n' +
    ' * getContainer() method. This method should always return the same element\n' +
    ' * throughout the life of the client. It is first called in connectedCallback().\n' +
    ' *\n' +
    ' * The mixin will toggle CSS classes on #container indicating the current scroll\n' +
    ' * state.\n' +
    ' * can-scroll: Has content to scroll to\n' +
    ' * scrolled-to-top: Scrolled all the way to the top\n' +
    ' * scrolled-to-bottom: Scrolled all the way to the bottom\n' +
    ' *\n' +
    ' * Clients can use these classes to define styles.'
]
cr_scroll_observer_mixin_lit.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview CrScrollObserverMixinLit has logic to add CSS classes based\n' +
    ' * on the scroll state of a scrolling container element specified by a\n' +
    ' * #container ID.\n' +
    ' *\n' +
    ' * Elements using this mixin are expected to define a #container element, which\n' +
    ' * is the element being scrolled. There should only be one such element in the\n' +
    ' * DOM.\n' +
    ' * <div id="container">...</div>\n' +
    ' * Alternatively, clients can set a container element by overriding the\n' +
    ' * getContainer() method. This method should always return the same element\n' +
    ' * throughout the life of the client. It is first called in connectedCallback().\n' +
    ' *\n' +
    ' * The mixin will toggles CSS classes on #container indicating the current\n' +
    ' * scroll state.\n' +
    ' * can-scroll: Has content to scroll to\n' +
    ' * scrolled-to-top: Scrolled all the way to the top\n' +
    ' * scrolled-to-bottom: Scrolled all the way to the bottom\n' +
    ' *\n' +
    ' * Clients can use these classes to define styles.'
]
cr_search_field.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_search_field.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview\n' +
    " * 'cr-search-field' is a simple implementation of a polymer component that\n" +
    ' * uses CrSearchFieldMixin.'
]
cr_search_field_mixin.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Helper functions for implementing an incremental search field. See\n' +
    ' * <settings-subpage-search> for a simple implementation.'
]
cr_search_field_mixin_lit.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Helper functions for implementing an incremental search field. See\n' +
    ' * <settings-subpage-search> for a simple implementation.'
]
cr_selectable_mixin.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * CrSelectableMixin maintains a collection of selectable elements. The\n' +
    ' * elements are queried from the light DOM, and are identified using a\n' +
    ' * |selectable| CSS selector, if specified.\n' +
    ' *\n' +
    ' * The mixin observes click events on its children, and selects an item when\n' +
    ' * clicked. Items can also be selected using the select* methods, or by\n' +
    " * updating the |selected| property. The mixin sets the 'selected' CSS\n" +
    ' * class on the selected item, if any, and also sets the |selectedAttribute|\n' +
    ' * boolean attribute on the selected item if it is specified.\n' +
    ' *\n' +
    ' * Events fired:\n' +
    ' * iron-activate: Fired when an item is activated by a "click" event, before\n' +
    ' * the item is selected (see below).\n' +
    ' * iron-select: Fired when an item is selected.\n' +
    ' * iron-deselect: Fired when an item is deselected.\n' +
    ' * iron-items-changed: Fired when the list of selectable items changes.\n' +
    ' * TODO (rbpotter): Rename these events, now that they are not fired by an\n' +
    ' * "iron-" behavior.'
]
cr_slider.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_slider.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'cr-slider' is a slider component used to select a number from\n" +
    ' * a continuous or discrete range of numbers.',
  ' * The |value| is the corresponding value that the current slider tick is\n' +
    ' * associated with. The string |label| is shown in the UI as the label for the\n' +
    ' * current slider value. The |ariaValue| number is used for aria-valuemin,\n' +
    ' * aria-valuemax, and aria-valuenow, and is optional. If missing, |value| will\n' +
    ' * be used instead.',
  ' * The following are the events emitted from cr-slider.\n' +
    ' *\n' +
    ' * cr-slider-value-changed: fired when updating slider via the UI.\n' +
    ' * dragging-changed: fired on pointer down and on pointer up.'
]
cr_splitter.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_tab_box.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_tabs.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_tabs.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'cr-tabs' is a control used for selecting different sections or\n" +
    ' * tabs. cr-tabs was created to replace paper-tabs and paper-tab. cr-tabs\n' +
    " * displays the name of each tab provided by |tabs|. A 'selected-changed' event\n" +
    ' * is fired any time |selected| is changed.\n' +
    ' *\n' +
    ' * cr-tabs takes its #selectionBar animation from paper-tabs.\n' +
    ' *\n' +
    ' * Keyboard behavior\n' +
    ' *   - Home, End, ArrowLeft and ArrowRight changes the tab selection\n' +
    ' *\n' +
    ' * Known limitations\n' +
    ' *   - no "disabled" state for the cr-tabs as a whole or individual tabs\n' +
    ' *   - cr-tabs does not accept any <slot> (not necessary as of this writing)\n' +
    ' *   - no horizontal scrolling, it is assumed that tabs always fit in the\n' +
    ' *     available space'
]
cr_textarea.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_textarea.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview 'cr-textarea' is a component similar to native textarea,\n" +
    ' * and inherits styling from cr-input.'
]
cr_toast.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_toast.ts [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview A lightweight toast.'
]
cr_toast_manager.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_toast_manager.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' @fileoverview Element which shows toasts with optional undo button.'
]
cr_toggle.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_toggle.ts [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Number of pixels required to move to consider the pointermove event as\n' +
    ' * intentional.',
  " * @fileoverview 'cr-toggle' is a component for showing an on/off switch. It\n" +
    " * fires a 'change' event *only* when its state changes as a result of a user\n" +
    ' * interaction. Besides just clicking the element, its state can be changed by\n' +
    ' * dragging (pointerdown+pointermove) the element towards the desired direction.'
]
cr_toolbar.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_toolbar.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_toolbar_search_field.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_toolbar_search_field.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_toolbar_selection_overlay.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_toolbar_selection_overlay.ts [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Element which displays the number of selected items, designed\n' +
    ' * to be used as an overlay on top of <cr-toolbar>. See <history-toolbar> for an\n' +
    ' * example usage.\n' +
    ' *\n' +
    ' * Note that the embedder is expected to set position: relative to make the\n' +
    ' * absolute positioning of this element work, and the cr-toolbar should have the\n' +
    ' * has-overlay attribute set when its overlay is shown to prevent access through\n' +
    ' * tab-traversal.'
]
cr_tooltip.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_tooltip.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Tooltip with simple fade-in/out animations. Forked/migrated\n' +
    " * from Polymer's paper-tooltip."
]
cr_tree.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview cr-tree is a container for a tree structure. Items can be added\n' +
    ' * or removed from the tree using the add/addAt/removeItem methods. Adding items\n' +
    ' * declaratively is not currently supported, as this class is primarily intended\n' +
    ' * to replace cr.ui.Tree, which is used for cases of creating trees at runtime\n' +
    ' * (e.g. from backend data).',
  ' * Helper function that returns the next visible tree item.',
  ' * Another helper function that returns the next visible tree item.',
  ' * Helper function that returns the previous visible tree item.',
  ' * Helper function that returns the last visible tree item in the subtree.'
]
cr_tree_base.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Encapuslates shared behavior of cr-trees and the cr-tree-items that they\n' +
    ' contain. This reduces code duplication for e.g. adding/removing children and\n' +
    ' facilitates writing methods navigating the full tree structure (cr-tree and\n' +
    ' all cr-tree-item descendants), without introducing circular dependencies.'
]
cr_tree_item.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview cr-tree-item represents a node in a tree structure. Child items\n' +
    ' * can be added or removed using the add/addAt/removeItem methods. A parent can\n' +
    ' * be set using the setParent() method; the parent may be a cr-tree or\n' +
    ' * cr-tree-item. Adding items declaratively is not currently supported, as this\n' +
    ' * class is primarily intended to replace cr.ui.TreeItem, which is used for\n' +
    ' * cases of creating trees at runtime (e.g. from backend data).',
  ' Returns true if |root| has |el| as a descendant.'
]
cr_url_list_item.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_url_list_item.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_view_manager.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_view_manager.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
find_shortcut_manager.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Listens for a find keyboard shortcut (i.e. Ctrl/Cmd+f or /)\n' +
    ' * and keeps track of an stack of potential listeners. Only the listener at the\n' +
    ' * top of the stack will be notified that a find shortcut has been invoked.'
]
find_shortcut_mixin.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Used to determine how to handle find shortcut invocations.'
]
find_shortcut_mixin_lit.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Used to determine how to handle find shortcut invocations.'
]
focus_row_mixin.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' clang-format on',
  ' * Any element that is being used as an iron-list row item can extend this\n' +
    ' * behavior, which encapsulates focus controls of mouse and keyboards.\n' +
    ' * To use this behavior:\n' +
    ' *    - The parent element should pass a "last-focused" attribute double-bound\n' +
    ' *      to the row items, to track the last-focused element across rows, and\n' +
    ' *      a "list-blurred" attribute double-bound to the row items, to track\n' +
    ' *      whether the list of row items has been blurred.\n' +
    ' *    - There must be a container in the extending element with the\n' +
    ' *      [focus-row-container] attribute that contains all focusable controls.\n' +
    ' *    - On each of the focusable controls, there must be a [focus-row-control]\n' +
    ' *      attribute, and a [focus-type=] attribute unique for each control.\n' +
    ' *'
]
focus_row_mixin_delegate.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
focus_row_mixin_lit.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' clang-format on',
  ' * Any element that is being used as an iron-list or infinite-list row item can\n' +
    ' * extend this mixin, which encapsulates focus controls of mouse and keyboards.\n' +
    ' * To use this mixin:\n' +
    ' *    - The parent element should pass a "last-focused" attribute double-bound\n' +
    ' *      to the row items, to track the last-focused element across rows, and\n' +
    ' *      a "list-blurred" attribute double-bound to the row items, to track\n' +
    ' *      whether the list of row items has been blurred.\n' +
    ' *    - There must be a container in the extending element with the\n' +
    ' *      [focus-row-container] attribute that contains all focusable controls.\n' +
    ' *    - On each of the focusable controls, there must be a [focus-row-control]\n' +
    ' *      attribute, and a [focus-type=] attribute unique for each control.\n' +
    ' *'
]
i18n_mixin.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview\n' +
    " * 'I18nMixin' is a Mixin offering loading of internationalization\n" +
    " * strings. Typically it is used as [[i18n('someString')]] computed bindings or\n" +
    " * for this.i18n('foo'). It is not needed for HTML $i18n{otherString}, which is\n" +
    ' * handled by a C++ templatizer.'
]
i18n_mixin_lit.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview\n' +
    " * 'I18nMixinLit' is a Mixin offering loading of internationalization\n" +
    " * strings. Typically it is used as [[i18n('someString')]] computed bindings or\n" +
    " * for this.i18n('foo'). It is not needed for HTML $i18n{otherString}, which is\n" +
    ' * handled by a C++ templatizer.'
]
list_property_update_mixin.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview |ListPropertyUpdateMixin| is used to update an existing\n' +
    ' * polymer list property given the list after all the edits were made while\n' +
    ' * maintaining the reference to the original list. This allows\n' +
    ' * dom-repeat/iron-list elements bound to this list property to not fully\n' +
    ' * re-rendered from scratch.\n' +
    ' *\n' +
    ' * The minimal splices needed to transform the original list to the edited list\n' +
    ' * are calculated using |Polymer.ArraySplice.calculateSplices|. All the edits\n' +
    ' * are then applied to the original list. Once completed, a single notification\n' +
    ' * containing information about all the edits is sent to the polyer object.'
]
mouse_hoverable_mixin.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file provides a mixin to manage a `hovered` style on mouse\n' +
    ' * events. Relies on listening for pointer events as touch devices may fire\n' +
    ' * mouse events too.'
]
mouse_hoverable_mixin_lit.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file provides a mixin to manage a `hovered` style on mouse\n' +
    ' * events. Relies on listening for pointer events as touch devices may fire\n' +
    ' * mouse events too.'
]
cr_policy_indicator.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_policy_indicator.ts [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' @fileoverview Lit element for indicating policies by type.'
]
cr_policy_types.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Strings required for policy indicators. These must be set at runtime.\n' +
    ' * Chrome OS only strings may be undefined.',
  ' * Possible policy indicators that can be shown in settings.'
]
cr_tooltip_icon.html.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
cr_tooltip_icon.ts [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
store_client.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview defines a helper function `makeStoreClientMixin` to create a\n' +
    ' * Polymer mixin that binds Polymer elements to a specific instance of `Store`.\n' +
    ' * The mixin provides utility functions for Polymer elements to dispatch actions\n' +
    ' * that change state, and to react to Store state changes.',
  ' * A callback function that runs when the store state has been updated.\n' +
    ' * Returning `undefined` will skip updating the local property.\n' +
    ' * @see StoreClientInterface.watch',
  ' * Create a store client mixin for the store instance returned by\n' +
    ' * `storeGetter()`. An app, such as Personalization App, will have one central\n' +
    ' * store to bind to. Example:\n' +
    ' *\n' +
    ' * class MyStore extends Store {\n' +
    ' *   static getInstance(): MyStore {\n' +
    ' *     ....\n' +
    ' *   }\n' +
    ' * }\n' +
    ' *\n' +
    ' * const MyStoreClientMixin = makeStoreClientMixin(MyStore.getInstance);\n' +
    ' *\n' +
    ' * const MyElement extends MyStoreClientMixin(PolymerElement) {\n' +
    ' *   ....\n' +
    ' * }'
]
web_ui_listener_mixin.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Mixin to be used by Polymer elements that want to\n' +
    ' * automatically remove WebUI listeners when detached.'
]
web_ui_listener_mixin_lit.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Mixin to be used by CrLitElement subclasses that want to\n' +
    ' * automatically remove WebUI listeners when detached.'
]
action_link.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Action links are elements that are used to perform an in-page navigation or\n' +
    ' action (e.g. showing a dialog).\n' +
    ' They look like normal anchor (<a>) tags as their text color is blue. However,\n' +
    " they're subtly different as they're not initially underlined (giving users a\n" +
    " clue that underlined links navigate while action links don't).\n" +
    ' Action links look very similar to normal links when hovered (hand cursor,\n' +
    ' underlined). This gives the user an idea that clicking this link will do\n' +
    ' something similar to navigation but in the same page.\n' +
    ' They can be created in JavaScript like this (note second arg):\n' +
    "   var link = document.createElement('a', {is: 'action-link'});\n" +
    ' or with a constructor like this:\n' +
    '   var link = new ActionLink();\n' +
    ' They can be used easily from HTML as well, like so:\n' +
    '   <a is="action-link">Click me!</a>\n' +
    " NOTE: <action-link> and document.createElement('action-link') don't work."
]
assert.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Verify |value| is truthy.\n' +
    ' * @param value A value to check for truthiness. Note that this\n' +
    " *     may be used to test whether |value| is defined or not, and we don't want\n" +
    ' *     to force a cast to boolean.',
  ' * Call this from places in the code that should never be reached.\n' +
    ' *\n' +
    ' * For example, handling all the values of enum with a switch() like this:\n' +
    ' *\n' +
    ' *   function getValueFromEnum(enum) {\n' +
    ' *     switch (enum) {\n' +
    ' *       case ENUM_FIRST_OF_TWO:\n' +
    ' *         return first\n' +
    ' *       case ENUM_LAST_OF_TWO:\n' +
    ' *         return last;\n' +
    ' *     }\n' +
    ' *     assertNotReached();\n' +
    ' *   }\n' +
    ' *\n' +
    ' * This code should only be hit in the case of serious programmer error or\n' +
    ' * unexpected input.'
]
browser_command_proxy.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file provides a class that exposes the Mojo handler\n' +
    ' * interface used for sending the browser commands to the browser and\n' +
    ' * receiving the browser response.'
]
color_utils.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview Helper functions for color manipulations.',
  ' * Converts an SkColor object to a string in the form\n' +
    ' * "rgba(<red>, <green>, <blue>, <alpha>)".\n' +
    ' * @param skColor The input color.\n' +
    ' * @return The rgba string.',
  ' * Converts an SkColor object to a string in the the form "#rrggbb".\n' +
    ' * @param skColor The input color.\n' +
    ' * @return The hex color string,',
  ' * Converts a string of the form "#rrggbb" to an SkColor object.\n' +
    ' * @param hexColor The color string.\n' +
    ' * @return The SkColor object,',
  ' * Converts a string of the form "<red>, <green>, <blue>" to an SkColor\n' +
    ' * object.\n' +
    ' * @param rgb The rgb color string.\n' +
    ' * @return The SkColor object,'
]
cr.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Counter for use with createUid',
  ' @return A new unique ID.',
  ' * The mapping used by the sendWithPromise mechanism to tie the Promise\n' +
    ' * returned to callers with the corresponding WebUI response. The mapping is\n' +
    ' * from ID to the PromiseResolver helper; the ID is generated by\n' +
    ' * sendWithPromise and is unique across all invocations of said method.',
  ' * The named method the WebUI handler calls directly in response to a\n' +
    ' * chrome.send call that expects a response. The handler requires no knowledge\n' +
    ' * of the specific name of this method, as the name is passed to the handler\n' +
    ' * as the first argument in the arguments list of chrome.send. The handler\n' +
    ' * must pass the ID, also sent via the chrome.send arguments list, as the\n' +
    ' * first argument of the JS invocation; additionally, the handler may\n' +
    ' * supply any number of other arguments that will be included in the response.\n' +
    ' * @param id The unique ID identifying the Promise this response is\n' +
    ' *     tied to.\n' +
    ' * @param isSuccess Whether the request was successful.\n' +
    ' * @param response The response as sent from C++.',
  ' * A variation of chrome.send, suitable for messages that expect a single\n' +
    ' * response from C++.\n' +
    ' * @param methodName The name of the WebUI handler API.\n' +
    ' * @param args Variable number of arguments to be forwarded to the\n' +
    ' *     C++ call.',
  ' * A map of maps associating event names with listeners. The 2nd level map\n' +
    ' * associates a listener ID with the callback function, such that individual\n' +
    ' * listeners can be removed from an event without affecting other listeners of\n' +
    ' * the same event.',
  ' * The named method the WebUI handler calls directly when an event occurs.\n' +
    ' * The WebUI handler must supply the name of the event as the first argument\n' +
    ' * of the JS invocation; additionally, the handler may supply any number of\n' +
    ' * other arguments that will be forwarded to the listener callbacks.\n' +
    ' * @param event The name of the event that has occurred.\n' +
    ' * @param args Additional arguments passed from C++.',
  ' * Registers a listener for an event fired from WebUI handlers. Any number of\n' +
    ' * listeners may register for a single event.\n' +
    ' * @param eventName The event to listen to.\n' +
    ' * @param callback The callback run when the event is fired.\n' +
    ' * @return An object to be used for removing a listener via\n' +
    ' *     removeWebUiListener. Should be treated as read-only.',
  ' * Removes a listener. Does nothing if the specified listener is not found.\n' +
    ' * @param listener The listener to be removed (as returned by addWebUiListener).\n' +
    ' * @return Whether the given listener was found and actually removed.',
  ' Globally expose functions that must be called from C++.'
]
cr_router.ts [
  ' Copyright 2024 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
custom_element.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  " * @fileoverview Base class for Web Components that don't use Polymer.\n" +
    ' * See the following file for usage:\n' +
    ' * chrome/test/data/webui/js/custom_element_test.js'
]
drag_wrapper.ts [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview DragWrapper\n' +
    ' * A class for simplifying HTML5 drag and drop. Classes should use this to\n' +
    ' * handle the details of nested drag enters and leaves.',
  ' * Creates a DragWrapper which listens for drag target events on |target| and\n' +
    ' * delegates event handling to |delegate|.'
]
event_tracker.ts [
  ' Copyright 2011 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview EventTracker is a simple class that manages the addition and\n' +
    ' * removal of DOM event listeners. In particular, it keeps track of all\n' +
    ' * listeners that have been added and makes it easy to remove some or all of\n' +
    ' * them without requiring all the information again. This is particularly handy\n' +
    ' * when the listener is a generated function such as a lambda or the result of\n' +
    ' * calling Function.bind.',
  ' The type of the internal tracking entry.'
]
focus_grid.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' clang-format on',
  ' * A class to manage grid of focusable elements in a 2D grid. For example,\n' +
    ' * given this grid:\n' +
    ' *\n' +
    ' *   focusable  [focused]  focusable  (row: 0, col: 1)\n' +
    ' *   focusable  focusable  focusable\n' +
    ' *   focusable  focusable  focusable\n' +
    ' *\n' +
    ' * Pressing the down arrow would result in the focus moving down 1 row and\n' +
    ' * keeping the same column:\n' +
    ' *\n' +
    ' *   focusable  focusable  focusable\n' +
    ' *   focusable  [focused]  focusable  (row: 1, col: 1)\n' +
    ' *   focusable  focusable  focusable\n' +
    ' *\n' +
    ' * And pressing right or tab at this point would move the focus to:\n' +
    ' *\n' +
    ' *   focusable  focusable  focusable\n' +
    ' *   focusable  focusable  [focused]  (row: 1, col: 2)\n' +
    ' *   focusable  focusable  focusable'
]
focus_outline_manager.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * The class name to set on the document element.',
  ' * This class sets a CSS class name on the HTML element of |doc| when the user\n' +
    ' * presses a key. It removes the class name when the user clicks anywhere.\n' +
    ' *\n' +
    ' * This allows you to write CSS like this:\n' +
    ' *\n' +
    ' * html.focus-outline-visible my-element:focus {\n' +
    ' *   outline: 5px auto -webkit-focus-ring-color;\n' +
    ' * }\n' +
    ' *\n' +
    ' * And the outline will only be shown if the user uses the keyboard to get to\n' +
    ' * it.\n' +
    ' *'
]
focus_row.ts [
  ' Copyright 2014 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' clang-format on',
  ' * A class to manage focus between given horizontally arranged elements.\n' +
    ' *\n' +
    ' * Pressing left cycles backward and pressing right cycles forward in item\n' +
    ' * order. Pressing Home goes to the beginning of the list and End goes to the\n' +
    ' * end of the list.\n' +
    ' *\n' +
    " * If an item in this row is focused, it'll stay active (accessible via tab).\n" +
    ' * If no items in this row are focused, the row can stay active until focus\n' +
    " * changes to a node inside |this.boundary_|. If |boundary| isn't specified,\n" +
    ' * any focus change deactivates the row.'
]
focus_without_ink.ts [
  ' Copyright 2017 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' clang-format off',
  ' clang-format on',
  ' * Attempts to track whether focus outlines should be shown, and if they\n' +
    ` * shouldn't, removes the "ink" (ripple) from a control while focusing it.\n` +
    " * This is helpful when a user is clicking/touching, because it's not super\n" +
    ' * helpful to show focus ripples in that case. This is Polymer-specific.'
]
icon.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @return The scale factors supported by this platform for webui resources.',
  ' * Generates a CSS url string.\n' +
    ' * @param s The URL to generate the CSS url for.\n' +
    ' * @return The CSS url string.',
  ' * A URL for the filetype icon for |filePath|. OS and theme dependent.',
  ' * Generates a CSS image-set for a chrome:// url.\n' +
    ' * An entry in the image set is added for each of getSupportedScaleFactors().\n' +
    ' * The scale-factor-specific url is generated by replacing the first instance\n' +
    " * of 'scalefactor' in |path| with the numeric scale factor.\n" +
    ' *\n' +
    ' * @param path The URL to generate an image set for.\n' +
    " *     'scalefactor' should be a substring of |path|.\n" +
    ' * @return The CSS image-set.',
  ' * Returns the URL of the image, or an image set of URLs for the provided\n' +
    ' * path.  Resources in chrome://theme have multiple supported scale factors.\n' +
    ' *\n' +
    ' * @param path The path of the image.\n' +
    ' * @return The url, or an image set of URLs.',
  ' * Creates a CSS image-set for a favicon.\n' +
    ' *\n' +
    ' * @param url URL of the favicon\n' +
    ' * @return image-set for the favicon',
  ' * Creates a CSS image-set for a favicon request based on a page URL.\n' +
    ' *\n' +
    ' * @param url URL of the original page\n' +
    ' * @param isSyncedUrlForHistoryUi Should be set to true only if the\n' +
    ' *     caller is an UI aimed at displaying user history, and the requested url\n' +
    ' *     is known to be present in Chrome sync data.\n' +
    ' * @param remoteIconUrlForUma In case the entry is contained in sync\n' +
    ' *     data, we can pass the associated icon url.\n' +
    ' * @param size The favicon size.\n' +
    ' * @param forceLightMode Flag to force the service to show the light\n' +
    ' *     mode version of the default favicon.\n' +
    ' *\n' +
    ' * @return image-set for the favicon.'
]
keyboard_shortcut_list.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' This is used to identify keyboard shortcuts.',
  ' A list of keyboard shortcuts which all perform one command.'
]
load_time_data.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview This file defines a singleton which provides access to all data\n' +
    " * that is available as soon as the page's resources are loaded (before DOM\n" +
    ' * content has finished loading). This data includes both localized strings and\n' +
    ' * any data that is important to have ready from a very early stage (e.g. things\n' +
    ' * that must be displayed right away).\n' +
    ' *\n' +
    ' * Note that loadTimeData is not guaranteed to be consistent between page\n' +
    ' * refreshes (https://crbug.com/740629) and should not contain values that might\n' +
    ' * change if the page is re-opened later.'
]
browser_proxy.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.'
]
metrics_reporter.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * MetricsReporter: A Time Measuring Utility.\n' +
    ' *\n' +
    ' * Usages:\n' +
    ' *   - Use getInstance() to acquire the singleton of MetricsReporter.\n' +
    ' *   - Use mark(markName) to mark a timestamp.\n' +
    ' *     Use measure(startMark[, endMark]) to measure the duration between two\n' +
    ' * marks. If `endMark` is not given, current time will be used.\n' +
    ' *   - Use umaReportTime(metricsName, duration) to record UMA histogram.\n' +
    ' *   - You can call these functions from the C++ side. The marks are accessible\n' +
    ' * from both C++ and WebUI Javascript.\n' +
    ' *\n' +
    ' * Examples:\n' +
    ' *   1. Pure JS.\n' +
    " *     metricsReporter.mark('StartMark');\n" +
    ' *     // your code to be measured ...\n' +
    ' *     metricsReporter.umaReportTime(\n' +
    " *       'Your.Histogram', await metricsReporter.measure('StartMark'));\n" +
    ' *\n' +
    ' *   2. C++ & JS.\n' +
    ' *     // In C++\n' +
    ' *     void PageAction() {\n' +
    ' *       metrics_reporter_.Mark("StartMark");\n' +
    ' *       page->PageAction();\n' +
    ' *     }\n' +
    ' *     // In JS\n' +
    ' *     pageAction() {\n' +
    ' *       // your code to be measure ...\n' +
    ' *       metricsReporter.umaReportTime(\n' +
    " *         metricsReporter.measure('StartMark'));\n" +
    ' *     }\n' +
    ' *\n' +
    ' * Caveats:\n' +
    ' *   1. measure() will assert if the mark is not available. You can use\n' +
    ' *      catch() to prevent execution from being interrupted, e.g.\n' +
    ' *\n' +
    " *      metricsReporter.measure('StartMark').then(duration =>\n" +
    " *         metricsReporter.umaReportTime('Your.Histogram', duration))\n" +
    ' *      .catch(() => {})\n' +
    ' *\n' +
    ' *   2. measure() will record inaccurate time if a mark is reused for\n' +
    ' *      overlapping measurements. To prevent this, you can:\n' +
    ' *\n' +
    ' *      a. check if a mark exists using hasLocalMark() before calling mark().\n' +
    ' *      b. check if a mark exists using hasMark() before calling measure().\n' +
    ' *      c. erase a mark using clearMark() after calling measure().\n' +
    ' *\n' +
    ' *      Alternative to b., you can use an empty catch() to ignore\n' +
    ' *      missing marks (due to the mark deletion by c.).'
]
mojo_type_util.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Convert a javascript string into a Mojo String16.',
  ' Convert a Mojo String16 into a javascript string.',
  ' Note: This does not do any validation of the URL string.'
]
open_window_proxy.ts [
  ' Copyright 2023 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview A helper object used to open a URL in a new tab.\n' +
    ' * the browser.'
]
os_about.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' trigger the click handler for middle-button clicks'
]
parse_html_subset.ts [
  ' Copyright 2012 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Make a string safe for Polymer bindings that are inner-h-t-m-l or other\n' +
    ' * innerHTML use.\n' +
    ' * @param rawString The unsanitized string\n' +
    ' * @param opts Optional additional allowed tags and attributes.',
  ' <if expr="not is_ios">',
  ' * Same as |sanitizeInnerHtmlInternal|, but it passes through sanitizedPolicy\n' +
    ' * to create a TrustedHTML.',
  ' </if>',
  ' <if expr="is_ios">',
  ' * Delegates to sanitizeInnerHtmlInternal() since on iOS there is no\n' +
    ' * window.trustedTypes support yet.',
  ' </if>',
  ' Allow-list of attributes in parseHtmlSubset.',
  ' Allow-list of optional attributes in parseHtmlSubset.',
  ' Allow-list of tag names in parseHtmlSubset.',
  ' Allow-list of optional tag names in parseHtmlSubset.',
  ' * This policy maps a given string to a `TrustedHTML` object\n' +
    ' * without performing any validation. Callsites must ensure\n' +
    ' * that the resulting object will only be used in inert\n' +
    ' * documents. Initialized lazily.',
  ' * @param optTags an Array to merge.\n * @return Set of allowed tags.',
  ' * @param optAttrs an Array to merge.\n' +
    ' * @return Map of allowed attributes.',
  ' * Parses a very small subset of HTML. This ensures that insecure HTML /\n' +
    ' * javascript cannot be injected into WebUI.\n' +
    ' * @param s The string to parse.\n' +
    ' * @param extraTags Optional extra allowed tags.\n' +
    ' * @param extraAttrs\n' +
    ' *     Optional extra allowed attributes (all tags are run through these).\n' +
    ' * @throws an Error in case of non supported markup.\n' +
    ' * @return A document fragment containing the DOM tree.'
]
platform.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' @fileoverview Utilities for determining the current platform.',
  ' Whether we are using a Mac or not.',
  ' Whether this is on the Windows platform or not.',
  ' Whether this is the ChromeOS/ash web browser.',
  ' Whether this is the ChromeOS/Lacros web browser.',
  ' Whether this is on vanilla Linux (not chromeOS).',
  ' Whether this is on Android.',
  ' Whether this is on iOS.'
]
plural_string_proxy.ts [
  ' Copyright 2020 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview A helper object used to get a pluralized string.',
  ' clang-format off',
  ' clang-format on'
]
promise_resolver.ts [
  ' Copyright 2016 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview PromiseResolver is a helper class that allows creating a\n' +
    ' * Promise that will be fulfilled (resolved or rejected) some time later.\n' +
    ' *\n' +
    ' * Example:\n' +
    ' *  const resolver = new PromiseResolver();\n' +
    ' *  resolver.promise.then(function(result) {\n' +
    " *    console.log('resolved with', result);\n" +
    ' *  });\n' +
    ' *  ...\n' +
    ' *  ...\n' +
    " *  resolver.resolve({hello: 'world'});"
]
search_highlight_utils.ts [
  ' Copyright 2018 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Replaces the the highlight wrappers given in |wrappers| with the original\n' +
    ' * search nodes.',
  ' * Finds all previous highlighted nodes under |node| and replaces the\n' +
    ' * highlights (yellow rectangles) with the original search node. Searches only\n' +
    ' * within the same shadowRoot and assumes that only one highlight wrapper\n' +
    ' * exists under |node|.',
  ' * Applies the highlight UI (yellow rectangle) around all matches in |node|.\n' +
    ' * @param node The text node to be highlighted. |node| ends up\n' +
    ' *     being hidden.\n' +
    ' * @return The new highlight wrapper.',
  ' * Creates an empty search bubble (styled HTML element without text).\n' +
    ' * |node| should already be visible or the bubble will render incorrectly.\n' +
    ' * @param node The node to be highlighted.\n' +
    ' * @param horizontallyCenter Whether or not to horizontally center\n' +
    " *     the shown search bubble (if any) based on |node|'s left and width.\n" +
    ' * @return The search bubble that was added, or null if no new\n' +
    ' *     bubble was added.'
]
static_types.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @return Whether the passed tagged template literal is a valid array.',
  ' * Checks if the passed tagged template literal only contains static string.\n' +
    ' * And return the string in the literal if so.\n' +
    ' * Throws an Error if the passed argument is not supported literals.',
  ' * Rules used to enforce static literal checks.',
  ' * This policy returns Trusted Types if the passed literal is static.',
  ' * Returns TrustedHTML if the passed literal is static.',
  ' * Returns TrustedScript if the passed literal is static.',
  ' * Returns TrustedScriptURL if the passed literal is static.'
]
store.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * @fileoverview a base class and utility types for managing javascript WebUI\n' +
    ' * state in a redux-like fashion.',
  ' * A generic datastore for the state of a page, where the state is publicly\n' +
    ' * readable but can only be modified by dispatching an Action.\n' +
    ' * The Store should be extended by specifying S, the page state type\n' +
    ' * associated with the store.'
]
test_loader.ts [
  ' Copyright 2019 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' @fileoverview Helper script used to load a JS module test into a WebUI page.\n' +
    ' Example usage:\n' +
    '   chrome://welcome/test_loader.html?module=foo/my_test.js\n' +
    ' will load the JS module at chrome/test/data/webui/foo/my_test.js, through the\n' +
    ' chrome://webui-test/foo/my_test.js URL.\n' +
    ' test_loader.html and test_loader.js should be registered with the\n' +
    ' WebUIDataSource corresponding to the WebUI being tested, such that the\n' +
    ' testing code is loaded from the same origin. Also note that the\n' +
    ' chrome://webui-test/ data source only exists in a testing context, so using\n' +
    ' this script in production will result in a failed network request.'
]
test_loader_util.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Note: Do not export this method, it is only meant to be used within this\n' +
    ' module, otherwise the fairly loose scriptPolicy above would be exposed.',
  ' * @return Whether a test module was loaded.\n' +
    ' *   - In case where a module was not specified, returns false (used for\n' +
    ' *     providing a way for UIs to wait for any test initialization, if run\n' +
    ' *     within the context of a test).\n' +
    ' *   - In case where loading failed (probably incorrect URL) a rejected Promise\n' +
    ' *     is returned.'
]
util.ts [
  ' Copyright 2022 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' * Alias for document.getElementById. Found elements must be HTMLElements.',
  ' * Alias for document.getElementById. Found elements must be HTMLElements.',
  ' * @return The currently focused element (including elements that are\n' +
    ' *     behind a shadow root), or null if nothing is focused.',
  ' * Check the directionality of the page.\n' +
    ' * @return True if Chrome is running an RTL UI.',
  ' * Creates a new URL which is the old URL with a GET param of key=value.\n' +
    ' * @param url The base URL. There is no validation checking on the URL\n' +
    ' *     so it must be passed in a proper format.\n' +
    ' * @param key The key of the param.\n' +
    ' * @param value The value of the param.\n' +
    ' * @return The new URL.',
  ' * transitionend does not always fire (e.g. when animation is aborted\n' +
    ' * or when no paint happens during the animation). This function sets up\n' +
    ' * a timer and emulate the event if it is not fired when the timer expires.\n' +
    ' * @param el The element to watch for transitionend.\n' +
    ' * @param timeOut The maximum wait time in milliseconds for the transitionend\n' +
    ' *     to happen. If not specified, it is fetched from |el| using the\n' +
    ' *     transitionDuration style value.',
  ` * Replaces '&', '<', '>', '"', and ''' characters with their HTML encoding.\n` +
    ' * @param original The original string.\n' +
    ' * @return The string with all the characters mentioned above replaced.',
  ' * Quote a string so it can be used in a regular expression.\n' +
    ' * @param str The source string.\n' +
    ' * @return The escaped string.',
  ' * Calls |callback| and stops listening the first time any event in |eventNames|\n' +
    ' * is triggered on |target|.\n' +
    ' * @param eventNames Array or space-delimited string of event names to listen to\n' +
    " *     (e.g. 'click mousedown').\n" +
    ' * @param callback Called at most once. The optional return value is passed on\n' +
    ' *     by the listener.',
  ' * @return Whether a modifier key was down when processing |e|.',
  ' * @return Whether a given KeyboardEvent resembles an undo action, on different\n' +
    ' * platforms.'
]
bindings.d.ts [
  ' Copyright 2021 The Chromium Authors\n' +
    ' Use of this source code is governed by a BSD-style license that can be\n' +
    ' found in the LICENSE file.',
  ' Minimal definitions for the Mojo core bindings, just enough to make the TS\n' +
    ' compiler to not throw errors, and minimal definitions of types that are\n' +
    ' indirectly exposed by generated bindings. These should be fleshed out, or\n' +
    ' even better auto-generated from bindings_uncompiled.js eventually. The\n' +
    ' latter currently does not produce definitions that work.\n' +
    ' More information about them can be found in the *.idl files that generate\n' +
    ' many of these functions and types.\n' +
    ' @see //third_party/blink/renderer/core/mojo/mojo.idl',
  ' eslint-disable @typescript-eslint/no-unused-vars',
  ' eslint-disable @typescript-eslint/naming-convention'
]
> ./out/extract-comments/ui_.ts.json
