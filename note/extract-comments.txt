Processing: /home/daiiz/daiiz2/chromium/ui
.js 67
popup.js [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
background.js [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Script that runs on the background page.'
]
background.js [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'We probably need the permission again.',
  'Close the stream so it stops using resources.'
]
common.js [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
highcontrast.js [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Add the elements to the pgae that make high-contrast adjustments possible.',
  "We used to include the CSS, but that doesn't work when the document",
  'uses the <base> element to set a relative url. So instead we',
  'add a <style> element directly to the document with the right',
  'urls hard-coded into it.',
  "Starting in Chrome 45 we can't apply a filter to the html element,",
  'so instead we create an element with low z-index that copies the',
  "body's background.",
  'As a special case, replace a zero-alpha background with white,',
  "otherwise we can't invert it.",
  'Add a hidden element with the SVG filters.',
  'This is called on load and every time the mode might have changed\n' +
    '(i.e. enabling/disabling, or changing the type of contrast adjustment\n' +
    'for this page).',
  'Called when we get a message from the background page.',
  'KeyDown event handler',
  'Update again after a few seconds and again after load so that',
  "the background isn't wrong for long.",
  'Also update when the document body attributes change.'
]
ui.js [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "This needs to be optional. Doesn't always do what we want."
]
background.js [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@param {function(chrome.tabs.Tab)} tabCallback A function that performs\n' +
    'an action on each tab\n' +
    '@private',
  'Adds filter script and css to all existing tabs.\n' +
    'TODO(wnwen): Verify content scripts are not being injected multiple times.',
  'Updates all existing tabs with config values.\n@private',
  '@private',
  'Initial extension loading.\n@private',
  'TODO(mustaq): Handle uninstall'
]
common.js [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'TODO(wnwen): Move most of these functions to their own page rather than',
  'common, which should be shared with content script.',
  'TODO(wnwen): Remove this and use actual web API.',
  'The filter should not apply to these URLs.\n' +
    '@param {string} url The URL to check.',
  'Whether extension is loaded unpacked or from Chrome Webstore.\n' +
    '@const {boolean}',
  'Easily turn on/off console logs.\n' +
    '@param {*} logArgs The message to potentially pass to {@code console.log}.'
]
cvd.js [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@private {number}',
  '@private {number}',
  '@private {!CvdType}',
  '@private {boolean}',
  '@private {boolean}',
  '@private {number}',
  '@private {!CvdAxis}',
  '@const {string}\n@private',
  '@const {string}\n@private',
  '@const {string}\n@private',
  '======= CVD parameters =======',
  'Parameters for simulating color vision deficiency.\n' +
    'Source:\n' +
    'http://www.inf.ufrgs.br/~oliveira/pubs_files/CVD_Simulation/CVD_Simulation.html\n' +
    'Original Research Paper:\n' +
    'http://www.inf.ufrgs.br/~oliveira/pubs_files/CVD_Simulation/Machado_Oliveira_Fernandes_CVD_Vis2009_final.pdf\n' +
    '@const {!Object<!CvdType, !Array<!Array<number>>}}\n' +
    '@private',
  'TODO(mustaq): This should be nuked, see this.getCvdCorrectionMatrix_().\n' +
    '@const {Object<!CvdAxis, {addendum: !Matrix3x3, delta_factor: !Matrix3x3}>}\n' +
    '@private',
  '@const {string}\n@private',
  '@const {string}\n@private',
  '=======  CVD matrix builders =======',
  'Returns a 3x3 matrix for simulating the given type of CVD with the given\n' +
    'severity.\n' +
    '@param {!CvdType} cvdType Type of CVD, either PROTANOMALY or\n' +
    'DEUTERANOMALY or TRITANOMALY.\n' +
    '@param {number} severity A real number in [0,1] denoting severity.\n' +
    '@return {!Matrix3x3}\n' +
    '@private',
  'Returns a 3x3 matrix for correcting the given type of CVD using the given\n' +
    'color adjustment.\n' +
    '@param {!CvdType} cvdType Type of CVD, either PROTANOMALY or\n' +
    'DEUTERANOMALY or TRITANOMALY.\n' +
    '@param {!CvdAxis} cvdAxis Axis of correction: RED, GREEN, BLUE or DEFAULT.\n' +
    '@param {number} delta A real number in [0,1] denoting color adjustment.\n' +
    '@return {!Matrix3x3}\n' +
    '@private',
  'TODO(mustaq): Perhaps nuke full-matrix operations after experiment.',
  'Returns the 3x3 matrix to be used for the given settings.\n' +
    '@param {!CvdType} cvdType Type of CVD, either PROTANOMALY or\n' +
    'DEUTERANOMALY or TRITANOMALY.\n' +
    '@param {!CvdAxis} cvdAxis Axis of correction: RED, GREEN, BLUE or DEFAULT.\n' +
    '@param {number} severity A real number in [0,1] denoting severity.\n' +
    '@param {number} delta A real number in [0,1] denoting color adjustment.\n' +
    '@param {boolean} simulate Whether to simulate the CVD type.\n' +
    '@param {boolean} enable Whether to enable color filtering.\n' +
    '@return {!Matrix3x3}\n' +
    '@private',
  '======= Page linker =======',
  'Checks for required elements, adding if missing.\n@private',
  'Updates the SVG filter based on the RGB correction/simulation matrix.\n' +
    '@param {!Matrix3x3} matrix  3x3 RGB transformation matrix.\n' +
    '@private',
  'Updates the SVG matrix using the current settings.\n@private',
  'Process a message from background page.\n' +
    '@param {!object} message An object containing color filter parameters.\n' +
    '@private',
  'Remove the filter from the page.\n@private',
  'Prepare to process background messages and let it know to send initial\n' +
    'values.\n' +
    '@private',
  '============ Public Methods ==============',
  'Generate SVG filter for color enhancement based on type and severity using\n' +
    'default color adjustment.\n' +
    '@param {!CvdType} type Type type of color vision defficiency (CVD).\n' +
    '@param {!CvdAxis} axis Axis of color correction.\n' +
    '@param {number} severity The degree of CVD ranging from 0 for normal\n' +
    'vision to 1 for dichromats.',
  'set color shift to default correction (zero shift, simulate = false\n' +
    '* and enable = true)  0, false, true);',
  'Adds support for a color enhancement filter.\n' +
    '@param {!Matrix3x3} matrix 3x3 RGB transformation matrix.',
  'Clears color correction filter.'
]
cvd_type.js [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@enum {string}',
  '@typedef {!CvdType|Storage.INVALID_TYPE_PLACEHOLDER}',
  '@enum {string} The Cvd Matrix can be pivot across different color axis:\n' +
    'DEFAULT uses the standard color rotation depending on CVD\n' +
    'while RED, GREEN, BLUE are used to override.\n' +
    '*'
]
matrix.js [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Class that represents a 3x3 matrix.',
  '@private',
  '@private {!Array<!Array<number>>}',
  '========== Constructor methods ===========',
  'Returns a new matrix, with elements specified by the elementCalculator\n' +
    'function.\n' +
    '@param {!function(!Matrix3x3.Index, !Matrix3x3.Index): number}\n' +
    'elementCalculator Given the i and j indices of the element, calculates\n' +
    'the value for the new matrix.\n' +
    '@return {!Matrix3x3}',
  'Returns a new matrix with the provided data array.\n' +
    '@param {!Array<!Array<number>>} data A 3x3 array of numbers.\n' +
    '@return {!Matrix3x3}',
  '=============== operations ================',
  'Adds the provided matrix with this matrix, and returns a new matrix\n' +
    'containing the result.\n' +
    '@param {!Matrix3x3} other\n' +
    '@return {!Matrix3x3} The matrix this + other.',
  'Subtracts the given matrix from this one, and returns a new matrix\n' +
    'containing the result.\n' +
    '@param {!Matrix3x3} other\n' +
    '@return {!Matrix3x3} The matrix this - other.',
  'Multiplies this matrix times the given matrix, and returns a new matrix\n' +
    'containing the result.\n' +
    '@param {!Matrix3x3} other\n' +
    '@return {!Matrix3x3} The matrix this * other.',
  'Scales this matrix by the provided scalar value, and returns a new matrix\n' +
    'containing the result.\n' +
    '@param {number} scaleFactor\n' +
    '@return {!Matrix3x3} The matrix scaleFactor * this.',
  '============== Utils =============',
  'Returns the value at a given pair of indices.\n' +
    '@param {Matrix3x3.Index} i\n' +
    '@param {Matrix3x3.Index} j\n' +
    '@return {number}',
  'Makes a human readable string for this matrix.\n@override',
  'Fix the decimal precision at 2 digits.',
  'Makes the SVG matrix string (of 20 values) for this matrix.\n' +
    '@return {string} The SVG matrix string.',
  'Add the alpha row.',
  '@const {!Matrix3x3}',
  '@enum {number}'
]
matrix_test.js [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Test fixture for matrix.js.',
  '@param {!Array<!Array<number>>} expected\n@param {!Matrix3x3} actual',
  'Check that the identity matrix was constructed correctly.',
  'Check that construction from a data array is as expected.',
  'Check that elementwise construction is as expected.',
  'Check that adding two matrices together gets the desired results.',
  'Check that subtracting one matrix from another gets the desired result.',
  'Check that multiplying one matrix by the other gets the desired result.',
  'Specifically, multiplying by a matrix that is all ones will result in every',
  'element in the row having the same value -- the sum of the elements in the',
  'non-one matrix provided.',
  'If we reverse the order of the matrices, we instead get the columns having',
  'the same value (the sum of the elements in the column).',
  'Check that scaling the matrix gives the desired results.'
]
popup.js [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Save previous state of setup parameters for use in the event of a\n' +
    'canceled setup.\n' +
    '@type {{type: !CvdType, axis: !CvdAxis, severity: number} | undefined}',
  'Creates a radio button for selecting the given type of CVD and a series of\n' +
    'color swatches for testing color vision.\n' +
    '@param {!CvdType} cvdType Type of CVD, either PROTANOMALY or\n' +
    'DEUTERANOMALY or TRITANOMALY.\n' +
    '@return {!Element} Row of color swatches with a leading radio button.',
  '======= UI hooks =======',
  'Gets the CVD type selected through the radio buttons.\n@return {CvdType}',
  'Gets the CVD AXIS selected through the radio buttons.\n@return {!CvdAxis}',
  'Sets the radio buttons selection to the given CVD type.\n' +
    '@param {!CvdType} cvdType Type of CVD, either PROTANOMALY or\n' +
    'DEUTERANOMALY or TRITANOMALY.',
  'Sets the radio buttons selection to the given CVD axis.\n' +
    '@param {!CvdAxis} cvdAxis Type of Axis, either DEFAULT or\n' +
    'RED or GREEN or BLUE.',
  'Enable/Disable all axis selectors.\n' +
    '@param {boolean} enable determines if the axis control is enabled.',
  'Styles controls based on stage of setup.',
  'Not performing setup.  Ensure main controls are enabled.',
  'Disable advanced',
  'Disable main controls during setup phase.',
  'Enable Advanced Toggle',
  'Have not selected a CVD type. Mark Step 1 as active.',
  'Disable "step 2" controls.',
  'Enable "step 2" controls.',
  'Force filter update.',
  'Update the popup controls based on settings for this site or the default.\n' +
    '@return {boolean} True if settings are valid and update performed.',
  'Callback for color rotation slider.\n' +
    '@param {number} value Parsed value of slider element.',
  'Callback for severity slider.\n' +
    '@param {number} value Parsed value of slider element.',
  'Apply filter to popup swatches.',
  'Force a refresh.',
  'Callback for changing color deficiency type.\n' +
    '@param {string} value Value of dropdown element.',
  'Callback for enable/disable setting.\n' +
    '@param {boolean} value Value of checkbox element.',
  'Settings are not valid for a reconfiguration.',
  'Callback for changing color deficiency correction axis.\n' +
    '@param {string} value Value of checkbox element.',
  'Attach event handlers to controls and update the filter config values for\n' +
    'the currently visible tab.',
  'Store current settings in the event of a canceled setup.',
  'Initialize controls based on current settings.',
  'Vertical offset for displaying the row highlight.\n@const {number}',
  '======= Swatch generator =======',
  'Set of colors for test swatches.\n' +
    'Each row of swatches corresponds to a different type of color blindness.\n' +
    'Tests for the 3 different types of dichromatic color vison.\n' +
    'Colors selected based on color confusion lines for dichromats using our\n' +
    'swatch generator tool. See:\n' +
    'http://www.color-blindness.com/2007/01/23/confusion-lines-of-the-cie-1931-color-space/'
]
storage.js [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Class to handle both storing values using the chrome.storage API, and\n' +
    'fetching/caching values that have been stored that way.',
  '@private',
  '@private {number}',
  '@private {!Object<string, number>}',
  '@private {number}',
  '@private {!OptionalCvdType}',
  '@private {boolean}',
  '@private {boolean}',
  '@private {!CvdAxis|undefined}',
  '======= Public methods =======',
  '@param {function()=} opt_callbackForTesting',
  '@return {number}',
  '@return {number}',
  '@return {!OptionalCvdType}',
  '@return {boolean}',
  '@return {boolean}',
  '@return {!CvdAxis}',
  'on earlier versions axis was not defined and deutan',
  'correction used a RED shift. Ensure backwards compatibility',
  'with legacy behavior',
  '@param {string} site\n@return {number}',
  '@param {number} newDelta',
  '@param {number} newSeverity',
  '@param {!CvdType} newCvdType',
  '@param {boolean} newValue',
  '@param {boolean} newValue',
  '@param {string} site\n@param {number} delta',
  '@param {!CvdAxis} newCvdAxis',
  '======== Private Methods ========',
  '@param {!Storage.Value} container\n@param {*} newValue\n@private',
  '@param {!Storage.Value} value\n@private',
  '@param {function()} opt_callback\n@private',
  '@param {!Object<string, chrome.storage.StorageChange>} changes\n@private',
  '======== Stored Values ========',
  '@const {string}',
  '@typedef {{\n' +
    'key: string,\n' +
    'defaultValue: *,\n' +
    'validate: function(*): boolean,\n' +
    'get: function(): *,\n' +
    'set: function(*),\n' +
    'reset: function(),\n' +
    'listeners: !Array<function(*)>\n' +
    '}}',
  '@const {!Storage.Value}',
  '@const {!Storage.Value}',
  '@const {!Storage.Value}',
  '@const {!Storage.Value}',
  '@const {!Storage.Value}',
  '@const {!Storage.Value}',
  '@const {!Storage.Value}',
  '@const {!Array<!Storage.Value>}'
]
storage_test.js [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Test fixture for storage.js.',
  '@override',
  'Increments a counter, to wait for all callbacks to be completed before\n' +
    'finishing the test.\n' +
    '@param {Function=} opt_callback\n' +
    '@return {Function}',
  '@param {number} expected\n@param {number} actual',
  'Default delta',
  'Check that unset sites fall back to the default delta.',
  'Severity',
  'Type',
  'Axis',
  'Simulate',
  'Enable',
  'Site delta',
  'Default delta',
  'Severity',
  'Type',
  'Axis',
  'Simulate',
  'Enable',
  'Site delta',
  'When an invalid value is provided, Storage resets to the default, and',
  'listeners are called.',
  'Setting to the same value already set should not call the listener.',
  "Clean up the listener. Note: if callback is async in testing, you'll need",
  'to find another place for this.',
  'Make sure any values from previous tests are cleared.',
  'Simulate re-starting the extension by creating a new instance.',
  'Check that unset values are at default.',
  'Make sure any values from previous tests are cleared.',
  'Simulate re-starting the extension by creating a new instance.',
  'Check that Axis uses legacy value',
  'Because the listener is only called if the value changes, make sure the',
  'value is false beforehand.',
  'Check that the values were set properly, in addition to the callbacks being',
  'called.'
]
background.js [
  'Copyright (c) 2014 The Chromium Authors. All rights reserved.',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
common.js [
  'Copyright (c) 2014 The Chromium Authors. All rights reserved.',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Wrap chrome.storage.local API.'
]
highcontrast.js [
  'Copyright (c) 2014 The Chromium Authors. All rights reserved.',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Add the elements to the pgae that make high-contrast adjustments possible.',
  "We used to include the CSS, but that doesn't work when the document",
  'uses the <base> element to set a relative url. So instead we',
  'add a <style> element directly to the document with the right',
  'urls hard-coded into it.',
  "Starting in Chrome 45 we can't apply a filter to the html element,",
  'so instead we create an element with low z-index that copies the',
  "body's background.",
  'As a special case, replace a zero-alpha background with white,',
  "otherwise we can't invert it.",
  'Add a hidden element with the SVG filters.',
  'This is called on load and every time the mode might have changed\n' +
    '(i.e. enabling/disabling, or changing the type of contrast adjustment\n' +
    'for this page).',
  'Called when a pref changes.',
  'KeyDown event handler',
  'Update again after a few seconds and again after load so that',
  "the background isn't wrong for long.",
  'Also update when the document body attributes change.'
]
popup.js [
  'Copyright (c) 2014 The Chromium Authors. All rights reserved.',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
storage.js [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@enum {number}',
  'Class to handle interactions with the chrome.storage API and values that are\n' +
    'stored there.',
  '@param {function()=} opt_callbackForTesting\n@private',
  '@private {boolean}',
  '@private {!SchemeType}',
  '@private {!Object<string, !SchemeType>}',
  '======= Public Methods =======',
  '@return {boolean}',
  '@return {!SchemeType}',
  '@param {string} site\n@return {!SchemeType}',
  '@param {boolean} newValue',
  '@param {!SchemeType} newScheme',
  '@param {string} site\n@param {!SchemeType} scheme',
  '======= Private Methods =======',
  '@param {!Storage.Value} container\n@param {*} newValue\n@private',
  '@param {function()=} opt_callback\n@private',
  '@param {!Object<string, chrome.storage.StorageChange>} changes\n@private',
  '@param {!Storage.Value} value\n@private',
  '======= Stored Values =======',
  '@typedef {{\n' +
    'key: string,\n' +
    'defaultValue: *,\n' +
    'validate: function(*): boolean,\n' +
    'get: function: *,\n' +
    'set: function(*),\n' +
    'reset: function(),\n' +
    'listeners: !Array<function(*)>\n' +
    '}}',
  '@const {!Storage.Value}',
  '@const {!Storage.Value}',
  '@const {!Storage.Value}',
  '@const {!Array<!Storage.Value>}'
]
storage_test.js [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Test fixture for storage.js.',
  '@override',
  'Increments a counter, to wait for all callbacks to be completed before\n' +
    'finishing the test.\n' +
    '@param {Function=} opt_callback\n' +
    '@return {Function}',
  '@param {string} key\n@param {*} expected',
  'Enabled',
  'Base Scheme',
  'Check that unset sites fall back to the base scheme',
  'Site Scheme',
  'Enabled',
  'Base Scheme',
  'Site scheme',
  'Make sure any values from previous tests are cleared.',
  'Simulate re-starting the extension by creating a new instance.',
  'Check that unset values are at default.',
  'Check that the values were set properly, in addition to the callbacks being',
  'called.'
]
background.js [
  'Copyright 2014 The Chromium Authors\n' +
    'Use of this source code is governed by a BSD-style license that can be\n' +
    '* found in the LICENSE file.',
  'This is called when the extension is first loaded, so that it can be\n' +
    "immediately used in all already-open tabs. It's not needed for any\n" +
    'new tabs that open after that, the content script will be automatically\n' +
    'injected into any new tab.',
  'Add context menu item when the extension is installed.',
  'Add listener for messages from content script.\n' +
    'Enable/disable the context menu item.',
  'Event handler for when a context menu item is clicked.\n' +
    'aria-describedat is given a higher priority.\n' +
    'No need to strip the URL of leading/trailing white space\n' +
    'because Chrome takes care of this.\n' +
    '@param info\n' +
    '@param tab'
]
lastRightClick.js [
  'Copyright 2014 The Chromium Authors\n' +
    'Use of this source code is governed by a BSD-style license that can be\n' +
    '* found in the LICENSE file.',
  'Sends a message to the backgrond script notifying it to\n' +
    'enable or disable the context menu item.\n' +
    '@param element',
  'Modify border to make the HTML element more visible.',
  'Revert back to the original border styling.'
]
options.js [
  'Copyright 2014 The Chromium Authors\n' +
    'Use of this source code is governed by a BSD-style license that can be\n' +
    '* found in the LICENSE file.',
  'Saves options to chrome.storage',
  'Update status to let user know options were saved.',
  'Restores select box and checkbox state using the preferences',
  'stored in chrome.storage.',
  'Use default value addBOrder = false.'
]
webstore_extension_test_base.js [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Generic parts of the test fixture for webstore extension tests.',
  '@override',
  '@override',
  '@override'
]
webstore_extension_test_base.js [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Generic parts of the test fixture for webstore extension tests.',
  '@override',
  '@override',
  '@override'
]
.eslintrc.js [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Disable clang-format because it produces odd formatting for these rules.',
  'clang-format off',
  'https://google.github.io/styleguide/tsguide.html#function-expressions',
  'https://google.github.io/styleguide/tsguide.html#type-inference',
  'Function parameters may have explicit types for clearer APIs.',
  'Class properties may have explicit types for clearer APIs.',
  'Turn off until all TS violations under this folder are fixed. This was',
  'done for other parts of the codebase in http://crbug.com/1521107',
  'clang-format on'
]
test_harness.js [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Mark the test as fully loaded. The Browser Test reads this.',
  'Grab the JS module to test from the GET params.',
  'Push all entities to global namespace to be visible to the test harness:',
  'ash/webui/common/resources/webui_resource_test.js',
  'Notify the BrowserTest to continue.'
]
quick_view.js [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview: This file describes the interfaces shared between the Files\n' +
    'app UI and the JS code run from unstrusted_resources (as part of the\n' +
    'QuickView).\n' +
    '@see `//ash/webui/file_manager/untrusted_resources/` for its usage.',
  'File preview content. Sent from <files-quick-view> to a sandboxed page, as\n' +
    'part of UntrustedPreviewData. |data| field holds a Blob/File, or a content\n' +
    "URL. |dataType| specifies 'blob' or 'url' accordingly (other values are\n" +
    'interpreted as no preview data).\n' +
    '@typedef {{\n' +
    'data: ?(Blob|string|undefined),\n' +
    'dataType: string\n' +
    '}}',
  'Parameters gathered to set the Quick View dialog properties.\n' +
    '@typedef {{\n' +
    'type: string,\n' +
    'subtype: string,\n' +
    'filePath: string,\n' +
    'hasTask: boolean,\n' +
    'canDelete: boolean,\n' +
    'sourceContent: (?FilePreviewContent|undefined),\n' +
    'videoPoster: (?FilePreviewContent|undefined),\n' +
    'audioArtwork: (?FilePreviewContent|undefined),\n' +
    'autoplay: (?boolean|undefined),\n' +
    'browsable: (?boolean|undefined),\n' +
    '}}',
  'Preview data that we send from the trusted context (Files app) to\n' +
    "the untrusted context. |type| specifies the type of file to preview ('audio',\n" +
    "'image', etc...).\n" +
    '@typedef {{\n' +
    'type: string,\n' +
    'sourceContent: !FilePreviewContent\n' +
    '}}'
]
.eslintrc.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "Turn off since there are many imports of 'Polymer'. Remove if/when",
  'everything under this folder is migrated to PolymerElement.'
]
init_globals.js [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Runtime setup before main.js is executed.',
  'Sets window.IN_TEST if this code is run in the test environment. We\n' +
    'detect this by checking for presence of domAutomationController.\n' +
    '@const @type {boolean}'
]
background.js [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '',
  'background.js: test loading the [piexwasm] module in chrome extension.',
  ''
]
tests.js [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
background.js [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'eslint-disable-next-line no-var',
  'For anything other than root, return no entries.',
  'For root we return 1 folder entry.',
  'If the manifest for device or file source is used, then mount a fake file',
  'system on install.'
]
.eslintrc.js [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
dom_automation_controller.js [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Extern for window.domAutomationController which is used in\n' +
    'browsertests.',
  '@constructor',
  '@param {*} jsonObj',
  '@type {DomAutomationController}'
]
mojo_api.js [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Note: The API should stay in sync with the IDL definitions in',
  'third_party/WebKit/Source/core/mojo',
  'eslint-disable-next-line no-var',
  'MojoResult {number}: Result codes for Mojo operations.',
  'Creates a message pipe.\n' +
    '@return {result: !MojoResult, handle0: !MojoHandle=, handle1: !MojoHandle=}\n' +
    'Result code and (on success) the two message pipe handles.',
  'Binds to the specified Mojo interface.\n' +
    '@param {string} interfaceName The interface name to connect.\n' +
    '@param {!MojoHandle} requestHandle The interface request handle.',
  '@param {?number=} nativeHandle An opaque number representing the underlying\n' +
    'Mojo system resource.',
  '@type {number|null}',
  'Takes the native handle value. This is not part of the public API.\n' +
    '@return {?number}',
  'Closes the handle.',
  'Begins watching the handle for |signals| to be satisfied or unsatisfiable.\n' +
    '@param {readable: boolean=, writable: boolean=, peerClosed: boolean=}\n' +
    'signals The signals to watch.\n' +
    '@param {!function(!MojoResult)} callback Called with a result any time\n' +
    'the watched signals become satisfied or unsatisfiable.\n' +
    '@return {!MojoWatcher} A MojoWatcher instance that could be used to cancel\n' +
    'the watch.',
  'Writes a message to the message pipe.\n' +
    '@param {!ArrayBufferView} buffer The message data. May be empty.\n' +
    '@param {!Array<!MojoHandle>} handles Any handles to attach. Handles are\n' +
    'transferred and will no longer be valid. May be empty.\n' +
    '@return {!MojoResult} Result code.',
  'calls from mojo_bindings.js',
  'calls from mojo/public/js/bindings.js',
  'Reads a message from the message pipe.\n' +
    '@return {result: !MojoResult,\n' +
    'buffer: !ArrayBufferView=,\n' +
    'handles: !Array<!MojoHandle>=}\n' +
    'Result code and (on success) the data and handles received.',
  'MojoWatcher identifies a watch on a MojoHandle and can be used to cancel the\n' +
    'watch.',
  '@param {number} An opaque id representing the watch.',
  'Cancels a handle watch.\n@return {Object=} Response from Mojo backend.',
  '-----------------------------------------------------------------------------',
  'Mojo API implementation details. It is not part of the public API.',
  'Synchronously sends a message to Mojo backend.\n' +
    '@param {!Object} message The message to send.\n' +
    '@return {Object=} Response from Mojo backend.',
  'Holds callbacks for all currently active watches.',
  'Next callback id to be used for watch.\n@type{number}',
  'Map where keys are callbacks ids and values are callbacks.\n' +
    '@type {!Map<number, !function(!MojoResult)>}',
  'Map where keys are watch ids and values are callback ids.\n' +
    '@type {!Map<number, number>}',
  'Calls watch callback.\n' +
    '@param {number} callbackId Callback id previously returned from\n' +
    '{@code getNextCallbackId}.\n' +
    '@param {!MojoResult} mojoResult The result code to call the callback with.',
  'Signalling the watch is asynchronous operation and this function may be',
  'called for already removed watch.',
  'Returns next callback id to be used for watch (idempotent).\n' +
    '@return {number} callback id.',
  'Adds callback which must be executed when the watch fires.\n' +
    '@param {number} watchId The value returned from "MojoHandle.watch" Mojo\n' +
    'backend.\n' +
    '@param {!function(!MojoResult)} callback The callback which should be\n' +
    'executed when the watch fires.',
  'Removes callback which should no longer be executed.\n' +
    '@param {!number} watchId The id to remove callback for.',
  'Base64-encode an ArrayBuffer\n@param {ArrayBuffer} buffer\n@return {String}',
  'Base64-encode an Uint8Array\n@param {Uint8Array} buffer\n@return {String}'
]
web_ui.js [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Sends messages to the browser. See\n' +
    'https://chromium.googlesource.com/chromium/src/+/main/docs/webui_explainer.md#chrome_send\n' +
    '@param {string} message name to be passed to the browser.\n' +
    '@param {Array=} args optional.'
]
load_time_data_deprecated.js [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview\n' +
    'NOTE: This file is deprecated, and provides only the minimal LoadTimeData\n' +
    'functions for places in the code still not using JS modules. Use\n' +
    'load_time_data.ts in all new code.\n' +
    'This file defines a singleton which provides access to all data\n' +
    "that is available as soon as the page's resources are loaded (before DOM\n" +
    'content has finished loading). This data includes both localized strings and\n' +
    'any data that is important to have ready from a very early stage (e.g. things\n' +
    'that must be displayed right away).\n' +
    'Note that loadTimeData is not guaranteed to be consistent between page\n' +
    'refreshes (https://crbug.com/740629) and should not contain values that might\n' +
    'change if the page is re-opened later.',
  '@type {!LoadTimeData}',
  'eslint-disable-next-line no-var',
  '@type {?Object}',
  'Sets the backing object.\n' +
    'Note that there is no getter for |data_| to discourage abuse of the form:\n' +
    "var value = loadTimeData.data()['key'];\n" +
    '@param {Object} value The de-serialized page data.',
  '@param {string} id An ID of a value that might exist.\n' +
    '@return {boolean} True if |id| is a key in the dictionary.',
  'Fetches a value, expecting that it exists.\n' +
    '@param {string} id The key that identifies the desired value.\n' +
    '@return {*} The corresponding value.',
  'As above, but also makes sure that the value is a string.\n' +
    '@param {string} id The key that identifies the desired string.\n' +
    '@return {string} The corresponding string value.',
  'Returns a formatted localized string where $1 to $9 are replaced by the\n' +
    'second to the tenth argument.\n' +
    '@param {string} id The ID of the string we want.\n' +
    '@param {...(string|number)} var_args The extra values to include in the\n' +
    'formatted output.\n' +
    '@return {string} The formatted string.',
  'Returns a formatted localized string where $1 to $9 are replaced by the\n' +
    'second to the tenth argument. Any standalone $ signs must be escaped as\n' +
    '$$.\n' +
    '@param {string} label The label to substitute through.\n' +
    'This is not an resource ID.\n' +
    '@param {...(string|number)} var_args The extra values to include in the\n' +
    'formatted output.\n' +
    '@return {string} The formatted string.',
  'As above, but also makes sure that the value is a boolean.\n' +
    '@param {string} id The key that identifies the desired boolean.\n' +
    '@return {boolean} The corresponding boolean value.',
  'As above, but also makes sure that the value is an integer.\n' +
    '@param {string} id The key that identifies the desired number.\n' +
    '@return {number} The corresponding number value.',
  'Override values in loadTimeData with the values found in |replacements|.\n' +
    '@param {Object} replacements The dictionary object of keys to replace.',
  'Checks condition, throws error message if expectation fails.\n' +
    '@param {*} condition The condition to check for truthiness.\n' +
    '@param {string} message The message to display if the check fails.',
  'Checks that the given value has the given type.\n' +
    '@param {string} id The id of the value (only used for error message).\n' +
    '@param {*} value The value to check the type on.\n' +
    '@param {string} type The type we expect |value| to be.',
  'Expose |loadTimeData| directly on |window|, since within a JS module the',
  'scope is local and not all files have been updated to import the exported',
  '|loadTimeData| explicitly.'
]
util_deprecated.js [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@filedescription Minimal utils and assertion support for places in the code\n' +
    'that are still not updated to JS modules. Do not use in new code. Use\n' +
    '* assert_ts and util_ts instead.',
  'Note: This method is deprecated. Use the equivalent method in assert_ts.ts\n' +
    'instead.\n' +
    'Verify |condition| is truthy and return |condition| if so.\n' +
    '@template T\n' +
    '@param {T} condition A condition to check for truthiness.  Note that this\n' +
    "may be used to test whether a value is defined or not, and we don't want\n" +
    'to force a cast to Boolean.\n' +
    '@param {string=} opt_message A message to show on failure.\n' +
    '@return {T} A non-null |condition|.\n' +
    '@closurePrimitive {asserts.truthy}\n' +
    '@suppress {reportUnknownTypes} because T is not sufficiently constrained.',
  '@type {boolean}',
  'Note: This method is deprecated. Use the equivalent method in assert_ts.ts\n' +
    'instead.\n' +
    'Call this from places in the code that should never be reached.\n' +
    'For example, handling all the values of enum with a switch() like this:\n' +
    'function getValueFromEnum(enum) {\n' +
    'switch (enum) {\n' +
    'case ENUM_FIRST_OF_TWO:\n' +
    'return first\n' +
    'case ENUM_LAST_OF_TWO:\n' +
    'return last;\n' +
    '}\n' +
    'assertNotReached();\n' +
    'return document;\n' +
    '}\n' +
    'This code should only be hit in the case of serious programmer error or\n' +
    'unexpected input.\n' +
    '@param {string=} message A message to show when this is hit.\n' +
    '@closurePrimitive {asserts.fail}',
  '@param {*} value The value to check.\n' +
    '@param {function(new: T, ...)} type A user-defined constructor.\n' +
    '@param {string=} message A message to show when this is hit.\n' +
    '@return {T}\n' +
    '@template T',
  "We don't use assert immediately here so that we avoid constructing an error",
  "message if we don't have to.",
  'Alias for document.getElementById. Found elements must be HTMLElements.\n' +
    '@param {string} id The ID of the element to find.\n' +
    '@return {HTMLElement} The found element or null if not found.',
  'Disable getElementById restriction here, since we are instructing other',
  'places to re-use the $() that is defined here.',
  'eslint-disable-next-line no-restricted-properties',
  'Return the first ancestor for which the {@code predicate} returns true.\n' +
    '@param {Node} node The node to check.\n' +
    '@param {function(Node):boolean} predicate The function that tests the\n' +
    'nodes.\n' +
    '@param {boolean=} includeShadowHosts\n' +
    '@return {Node} The found ancestor or null if not found.'
]
lit_migration.js [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Classes/Mixins',
  'URLs',
  "First perform easy regex based transformations that don't require a  parser",
  'and a full AST representation.',
  'Step 1: Replace Classes, Mixins and URLs.',
  'Step 2: Replace getTemplate import.',
  "Step 3: Replace 'getTemplate()' calls.",
  "Step 4: Replace 'static get properties() {...}'",
  "Step5: Update 'reflectToAttribute' attribute",
  'Step6: Update ready() callbacks.',
  'Secondly, perform more complex transformations that require a parser and a',
  'proper AST representation.',
  'Step7: Replace "foo: <Type>" shorthand with "foo: {type: <Type>}"',
  'Ignore properties that already use the non-shorthand Polymer',
  'syntax.',
  'Create replacement node.',
  'Add replacement node to the tree.',
  'TODO(crbug.com/40943652): Make more AST transformations here.'
]
.eslintrc.js [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
bar_ui.rollup.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '# sourceMappingURL=bar_ui.rollup.js.map'
]
bar_wrapper.rollup.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '# sourceMappingURL=bar_wrapper.rollup.js.map'
]
baz_ui.rollup.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '# sourceMappingURL=baz_ui.rollup.js.map'
]
foo_ui.rollup.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '# sourceMappingURL=foo_ui.rollup.js.map'
]
foo_ui_excludes.rollup.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '# sourceMappingURL=foo_ui.rollup.js.map'
]
foo_ui_excludes_resources.rollup.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '# sourceMappingURL=foo_ui.rollup.js.map'
]
foo_ui_multi_bundle.rollup.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '# sourceMappingURL=foo_ui.rollup.js.map'
]
shared.rollup.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '# sourceMappingURL=shared.rollup.js.map'
]
bar.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
baz.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
foo.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
bar_resource.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
foo_resource.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
foo_untrusted.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
bar.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
bar_ui.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
bar_wrapper.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
foo.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
foo_ui.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
baz.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
baz_ui.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
bar.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'comments should be removed',
  'Copyright (C) 2024 Bar\n' +
    "Test a different copyright from Chromium to make sure that's not removed."
]
bar_expected.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright (C) 2024 Bar\n' +
    "Test a different copyright from Chromium to make sure that's not removed.\n" +
    'const quux=5;'
]
foo.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
foo_expected.js [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
> ./out/extract-comments/ui_.js.json
.ts 697
app_window_wrapper.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Coordinates the creation of new windows for Files app.',
  'Gets the launch lock, used to synchronize the asynchronous initialization\n' +
    'steps.',
  'Opens the window.\n@return Resolves when the window is launched.',
  'Check if the window is opened or not.',
  'Save application state.',
  'Opens a new window for the SWA. Returns a Promise which resolves when the\n' +
    'window is launched.',
  'Return a Promise which resolves when the new window is opened.'
]
crostini.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Handles shares for Crostini VMs.',
  "Default Crostini VM is 'termina'.",
  "Plugin VM 'PvmDefault'.",
  'Valid root types to their share location.',
  'Implementation of Crostini shared path state handler.',
  'Keys maintaining enablement state for VMs that is keyed by vm then subkeyed\n' +
    'by the container name.',
  'A list of shared paths keyed by the VM name.',
  'The volume manager instance.',
  'Initialize enabled settings and register for any shared path changes.\n' +
    'Must be done after loadTimeData is available.',
  'Initialize Volume Manager.',
  'Set whether the specified Guest is enabled.',
  'Returns true if the specified VM is enabled.',
  'Get the root type for the supplied `entry`.',
  'Registers an entry as a shared path for the specified VM.',
  'Remove any existing paths that are children of the new path.',
  'These paths will still be shared as a result of a parent path being',
  'shared, but if the parent is unshared in the future, these children',
  'paths should not remain.',
  'Unregisters path as a shared path from the specified VM.',
  'Unregisters entry as a shared path from the specified VM.',
  'Handles events for enable/disable, share/unshare.',
  'Returns true if entry is shared with the specified VM. Returns true if path\n' +
    'is shared either by a direct share or from one of its ancestor directories.',
  'Check path and all ancestor directories.',
  'Returns true if entry can be shared with the specified VM.',
  'Only directories for persistent shares.',
  'TODO(crbug.com/40607763): Remove when DriveFS enforces allowed write paths.',
  'Disallow Computers Grand Root, and Computer Root.',
  'TODO(crbug.com/41456343): Sharing Play files root is disallowed until',
  'we can ensure it will not also share Downloads.',
  'Special case to disallow PluginVm sharing on /MyFiles/PluginVm and',
  'subfolders since it gets shared by default.',
  'Disallow sharing LinuxFiles with itself.',
  'Cannot share root of Shared with me since it represents 2 dirs:',
  '`.files-by-id` and `.shortcut-targets-by-id`.'
]
crostini_unittest.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Set up the test components.',
  'Mock fileManagerPrivate.onCrostiniChanged.',
  'Create a fake volume manager that provides entry location info.',
  'Reset initial root type.',
  'Create and initialize Crostini.',
  'Tests init sets crostini and PluginVm enabled status.',
  'Tests setEnabled tracks enabled/disabled correctly, in particular with\n' +
    'multiple containers in a VM.',
  'Tests path sharing.',
  'Test collapsing vm1, but not vm2.  Setup with /a/a, /a/b, /b',
  'Add /a for vm1, collapses /a/a, /a/b in vm1.',
  'Unregister /a for vm1, /a/a and /a/b should be lost in vm1.',
  'Register root for vm1, collapses all vm1.',
  'Unregister root for vm1, all vm1 should be lost.',
  'Tests disallowed and allowed shared paths.',
  'TODO(crbug.com/40607763): Add computers_grand_root and computers when DriveFS',
  'enforces allowed write paths.',
  'TODO(crbug.com/41456343): Sharing Play files root is disallowed until',
  'we can ensure it will not also share Downloads.',
  "We don't share 'Shared with me' root since it is fake.",
  'TODO(crbug.com/40607763): Remove when DriveFS enforces allowed write paths.',
  'Sharing LinuxFiles is allowed for all VMs except termina.'
]
drive_sync_handler.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Handles notifications supplied by drivefs.',
  'Shorthand for metadata keys.',
  'Shorthand for sync statuses.',
  'Prefix for Out of Quota sync messages to ensure they reuse existing\n' +
    'notification messages instead of starting new ones.',
  'The completed event name.',
  'A list of prefixes used to disambiguate errors that come from the same source\n' +
    'to ensure separate notifications are generated.',
  'Recently completed URLs whose metadata should be updated after 300ms.',
  'With a rate limit of 200ms, update entries that have completed 300ms ago or\n' +
    'longer.',
  'Stop tracking URLs that are no longer in the store.',
  'Update URLs that have completed over 300ms and stop tracking them.',
  'Keep tracking URLs that are in the store and have completed <300ms ago.',
  'TODO(austinct): Check if we can remove the `as MetadataKey[]` assertion',
  'once we only have typescript bindings for fileManagerPrivate.',
  'Register events.',
  'Sets the MetadataModel on the DriveSyncHandler.',
  'Returns the completed event name.',
  'TODO(austinct): Check if we can remove the `as MetadataKey` assertion',
  'once we only have typescript bindings for fileManagerPrivate.',
  'Handles file transfer status updates for individual files, updating their\n' +
    'sync status metadata.',
  'Only update status to completed if the previous status was different.',
  "Note: syncCompletedTime is 0 if the last event wasn't completed.",
  'Attempts to infer of the given event is processable by the drive sync\n' +
    'handler. It uses fileUrl to make a decision. It\n' +
    "errs on the side of 'yes', when passing the judgement.",
  "Handles drive's sync errors.",
  'This error will reappear every time sync is retried, so we use',
  'a fixed ID to avoid spamming the user.',
  'This error will reappear every time sync is retried, so we use',
  'a fixed ID to avoid spamming the user.',
  'Shared drives will keep trying to sync the file until it is either',
  'removed or available storage is increased. This ensures each',
  'subsequent error message only ever shows once for each individual',
  'shared drive.',
  'Handles connection state change.',
  'If offline, hide any sync progress notifications. When online again,',
  'the Drive sync client may retry syncing and trigger',
  'onFileTransfersUpdated events, causing it to be shown again.'
]
drive_sync_handler_unittest.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Global progress center object.',
  'Global DriveSyncHandler object.',
  'Mock chrome APIs.',
  'Stub out file URLs handling.',
  'Set up the test components.',
  'Install mock chrome APIs.',
  'Create a mock ProgressCenter.',
  'Create DriveSyncHandlerImpl.',
  'Test that in general case item IDs produced for errors are unique.',
  'Dispatch an event.',
  'Check that this created one item.',
  'Dispatch another event.',
  'Check that this created a second item.',
  'Test that item IDs produced for quota errors are same.',
  'Dispatch an event.',
  'Check that this created one item.',
  'Dispatch another event.',
  'Check that this did not create a second item.',
  'Temporary stub the entry resolving to always fail.',
  'Dispatch an event.',
  'Check that this created one item.'
]
entry_location_impl.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "Location information which shows where the path points in FileManager's\n" +
    'file system.',
  'Whether the location is under Google Drive or a special search root which\n' +
    'represents a special search from Google Drive.',
  'Whether the location is under Google Drive or a special search root which\n' +
    'represents a special search from Google Drive.',
  'Whether the entry should be displayed with a fixed name instead of\n' +
    `individual entry's name. (e.g. "Downloads" is a fixed name)`
]
file_manager_base.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Root class of the former background page.',
  'Map of all currently open file dialogs. The key is an app ID.',
  'Progress center of the background page.',
  'Drive sync handler.',
  'String assets.',
  'Initializes the strings. This needs for the volume manager.',
  'Handle newly mounted FSP file systems. Workaround for crbug.com/456648.',
  'TODO(mtomasz): Replace this hack with a proper solution.',
  'Registers dialog window to the background page.\n' +
    '@param dialogWindow Window of the dialog.',
  'Launches a new File Manager window.\n' +
    '@param appState App state.\n' +
    '@return Resolved when the new window is opened.',
  'Opens the volume root (or opt directoryPath) in main UI.\n' +
    '@param event An event with the volumeId or\n' +
    'devicePath.',
  '@param event An event with the volumeId.',
  'Retrieves the root file entry of the volume on the requested device.\n' +
    '@param volumeId ID of the volume to navigate to.',
  'Opens the volume root (or opt directoryPath) in main UI.\n' +
    '@param volumeId ID of the volume to navigate to.\n' +
    '@param directoryPath Optional path to be opened.',
  'Opens the volume root (or opt directoryPath) in the main UI of the focused\n' +
    'window.\n' +
    '@param volumeId ID of the volume to navigate to.\n' +
    '@param directoryPath Optional path to be opened.',
  'If a path was specified, retrieve that directory entry,\n' +
    'otherwise return the root entry of the volume.\n' +
    '@param directoryPath Optional directory path to be opened.',
  'Opens the volume root (or opt directoryPath) in main UI.\n' +
    '@param directoryPath Optional directory path to be opened.',
  'Launches app opened on {@code directory}.',
  'Opens the volume root (or opt directoryPath) in main UI of the focused\n' +
    'window.\n' +
    '@param directoryPath Optional directory path to be opened.',
  'Handles mounted FSP volumes and fires the Files app. This is a quick fix\n' +
    'for crbug.com/456648.\n' +
    '@param event Event details.',
  '@param event Event details.',
  'Prefix for the dialog ID.',
  'Value of the next file manager dialog ID.',
  'Singleton instance of Background object.',
  'End recording of the background page Load.BackgroundScript metric.'
]
file_operation_handler.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'An event handler of the background page for file operations.',
  'Process the IO Task ProgressStatus events.',
  'For scanning, the progress is the percentage of scanned items out of',
  'the total count.',
  'Check if the task is paused because of warning level restrictions.',
  'Proceed/cancel the action directly from the notification.',
  'Show the dialog to proceed/cancel.',
  'Otherwise same is in-progress - fall through',
  'ERROR events can be dispatched before BEGIN events.',
  'params= {});',
  'Check if there was a policy error.',
  "For policy errors, we keep track of the task's info since it",
  'might be required to review the details. Notify when dismissed',
  'that this can be cleared.',
  'There is not a default learn more URL for EC, and when a custom',
  'one is set we show the review button defined above instead.',
  "Set state to canceled so notification doesn't display.",
  "Set state to canceled so notification doesn't display.",
  'Obtains ProgressItemType from OperationType of ProgressStatus.type.',
  'Generate a progress message from the event.',
  'The non-error states text is managed directly in the',
  'ProgressCenterPanel.',
  'TODO(b/295438773): Remove this special case for the "in use" error once',
  'the files app error strings are made consistent and an "in use" string is',
  'properly added.',
  'Converts fileManagerPrivate.PolicyErrorType to\n' +
    'ProgressCenterItem.PolicyErrorType.',
  'Returns the extra button text for policy panel items. Currently only\n' +
    'supported for PAUSED and ERROR states due to policy, and for COPY or MOVE\n' +
    'operation types.',
  'Single item:'
]
metrics_start.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Metrics calls to start measurement of script loading.  Include\n' +
    'this as the first script in main_background.js.'
]
mock_crostini.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Crostini shared path state handler.',
  'Crostini shared path state handler factory for foreground tests. Change it\n' +
    'to a mock when tests need to override {CrostiniImpl} behavior.'
]
mock_progress_center.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Mock implementation of ProgressCenter for tests.',
  'Items stored in the progress center.',
  'Stores an item to the progress center.\n' +
    '@param item Progress center item to be stored.',
  'Obtains an item stored in the progress center.\n' +
    '@param id ID spcifying the progress item.',
  'Returns the number of unique keys in |this.items|.',
  'Returns the items that have a given state.\n' +
    '@param state State to filter by.'
]
mock_volume_manager.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Mock class for VolumeManager.',
  "Create Drive.   Drive attempts to resolve FilesSystemURLs for '/root',",
  "'/team_drives' and '/Computers' during initialization. Create a",
  'filesystem with those entries now, and mock',
  'webkitResolveLocalFileSystemURL.',
  'Mock window.webkitResolve to return entries.',
  'Create Drive, swap entries back in, revert window.webkitResolve.',
  'Create Downloads.',
  'Replaces the VolumeManager singleton with a MockVolumeManager.',
  'Creates, installs and returns a mock VolumeInfo instance.',
  'Obtains location information from an entry.\n' +
    'Current implementation can handle only fake entries.\n' +
    '@param entry A fake entry.\n' +
    '@return Location information.',
  "For filtered out volumes, its volume info won't exist in the volume info",
  'list.',
  '@param volumeType Volume type.\n@return Volume info.',
  '@return Current drive connection state.',
  'Utility function to create a mock VolumeInfo.\n' +
    '@param type Volume type.\n' +
    '@param volumeId Volume id.\n' +
    '@param label Label.\n' +
    '@param devicePath Device path.\n' +
    '@param providerId Provider id.\n' +
    '@param remoteMountPath Remote mount path.\n' +
    '@return Created mock\n' +
    'VolumeInfo.',
  "If there's no label set it to volumeId to make it shorter to write",
  'tests.',
  'Used to window.webkitResolveLocalFileSystemURL for testing. This\n' +
    'emulates the real function by parsing `url` and finding the matching entry\n' +
    'in `volumeManager`. E.g. filesystem:downloads:test_mount_path/dir/file.txt\n' +
    "will look up the volume with ID 'downloads:test_mount_path' for\n" +
    '/dir/file.txt.\n' +
    '@param volumeManager VolumeManager to resolve URLs with.\n' +
    '@param url URL to resolve.\n' +
    '@param successCallback Success callback.\n' +
    '@param errorCallback Error callback.',
  'Decode URI in file paths.'
]
progress_center.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Implementation of ProgressCenter at the background page.',
  'Current items managed by the progress center.',
  'List of panel UI managed by the progress center.',
  'Inhibit end of operation updates for testing.',
  "Turns off sending updates when a file operation reaches 'completed' state.\n" +
    'Used for testing UI that can be ephemeral otherwise.',
  'Updates the item in the progress center.\n' +
    'If the item has a new ID, the item is added to the item list.',
  'Update item.',
  'Error item is not removed until user explicitly dismiss it.',
  'Update panels.',
  'Requests to cancel the progress item.\n' +
    '@param id Progress ID to be requested to cancel.',
  'Adds a panel UI to the notification center.\n@param panel Panel UI.',
  'Update the panel list.',
  'Set the current items.',
  'Register the cancel callback.',
  'Register the dismiss error item callback.',
  'Removes a panel UI from the notification center.\n@param panel Panel UI.',
  'Obtains item by ID.\n' +
    '@param id ID of progress item.\n' +
    '@return Progress center item having the\n' +
    'specified ID. Null if the item is not found.',
  'Obtains item index that have the specifying ID.\n' +
    '@param id Item ID.\n' +
    '@return Item index. Returns -1 If the item is not found.',
  'Requests all panels to dismiss an error item.\n@param id Item ID.',
  'Testing method to construct a new notification panel item.\n' +
    '@param props partial properties from the `ProgressCenterItem`.',
  'Apply defaults and overrides.',
  'Testing method to add the notification panel item to the notification\n' +
    'panel.\n' +
    '@param item the panel item to be added.',
  'Make notification panel item show immediately.',
  'Make notification panel item keep showing for 5 minutes.',
  'Add the item to the panel.',
  'Testing method to add a new "progressing" state notification panel item.\n' +
    '@param props partial properties from the `ProgressCenterItem`.',
  'Testing method to add a new "completed" state notification panel item.\n' +
    '@param props partial properties from the `ProgressCenterItem`.',
  'Completed item needs to be in the panel before it completes.',
  'Testing method to add a new "error" state notification panel item.\n' +
    '@param props partial properties from the `ProgressCenterItem`.',
  'Testing method to add a new "scanning" state notification panel item.\n' +
    '@param props partial properties from the `ProgressCenterItem`.',
  'Scanning item needs to be in the panel before it starts to scan.',
  'Testing method to add a new "paused" state notification panel item.\n' +
    '@param props partial properties from the `ProgressCenterItem`.',
  'Paused item needs to be in the panel before it pauses.'
]
runtime_loaded_test_util.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Script loaded into the background page of a component\n' +
    'extension under test at runtime to populate testing functionality.',
  'Extract the information of the given element.\n' +
    '@param element Element to be extracted.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param styleNames List of CSS property name to be obtained. NOTE: Causes\n' +
    'element style re-calculation.\n' +
    '@return Element information that contains contentText, attribute names and\n' +
    'values, hidden attribute, and style names and values.',
  'The hidden attribute is not in the element.attributes even if',
  "element.hasAttribute('hidden') is true.",
  'Force a style resolve and record the requested style values.',
  'These attributes are set when element is <img> or <canvas>.',
  'Get the element client rectangle properties.',
  'Get the element scroll properties.',
  'Gets total Javascript error count from background page and each app window.\n' +
    '@return Error count.',
  'Resizes the window to the specified dimensions.\n' +
    '@param width Window width.\n' +
    '@param height Window height.\n' +
    '@return True for success.',
  'Queries all elements.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param targetQuery Query to specify the element.\n' +
    '@param styleNames List of CSS property name to be obtained.\n' +
    '@return Element information that contains contentText, attribute names and\n' +
    'values, hidden attribute, and style names and values.',
  'Queries elements inside shadow DOM.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param targetQuery Query to specify the element.\n' +
    '|targetQuery[0]| specifies the first element(s). |targetQuery[1]| specifies\n' +
    'elements inside the shadow DOM of the first element, and so on.\n' +
    '@param styleNames List of CSS property name to be obtained.\n' +
    '@return Element information that contains contentText, attribute names and\n' +
    'values, hidden attribute, and style names and values.',
  'Count elements matching the selector query.\n' +
    'This avoid serializing and transmitting the elements to the test extension,\n' +
    'which can be time consuming for large elements.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param query Query to specify the element.\n' +
    '|query[0]| specifies the first element(s). |query[1]| specifies elements\n' +
    'inside the shadow DOM of the first element, and so on.\n' +
    '@param callback Callback function with results if the number of elements\n' +
    'match |count|.',
  "Uses requestIdleCallback so it doesn't interfere with normal operation",
  'of Files app UI.',
  'Selects elements below |root|, possibly following shadow DOM subtree.\n' +
    '@param root Element to search from.\n' +
    '@param targetQuery Query to specify the element.\n' +
    '|targetQuery[0]| specifies the first element(s). |targetQuery[1]| specifies\n' +
    'elements inside the shadow DOM of the first element, and so on.\n' +
    '@return Matched elements.',
  'Gets the information of the active element.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param styleNames List of CSS property name to be obtained.\n' +
    '@return Element information that contains contentText, attribute names and\n' +
    'values, hidden attribute, and style names and values. If there is no\n' +
    'active element, returns null.',
  'Gets the information of the active element. However, unlike the previous\n' +
    'helper, the shadow roots are searched as well.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param styleNames List of CSS property name to be obtained.\n' +
    '@return Element information that contains contentText, attribute names and\n' +
    'values, hidden attribute, and style names and values. If there is no\n' +
    'active element, returns null.',
  'Gets an array of every activeElement, walking down the shadowRoot of every\n' +
    'active element it finds.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param styleNames List of CSS property name to be obtained.\n' +
    '@return Element information that contains contentText, attribute names and\n' +
    'values, hidden attribute, and style names and values. If there is no\n' +
    'active element, returns an empty array.',
  'Assigns the text to the input element.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param query Query for the input element.\n' +
    'If |query| is an array, |query[0]| specifies the first element(s),\n' +
    '|query[1]| specifies elements inside the shadow DOM of the first element,\n' +
    'and so on.\n' +
    '@param text Text to be assigned.\n' +
    '@return Whether or not the text was assigned.',
  'Sets the left scroll position of an element.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param query Query for the test element.\n' +
    '@param position scrollLeft position to set.\n' +
    '@return True if operation was successful.',
  'Sets the top scroll position of an element.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param query Query for the test element.\n' +
    '@param position scrollTop position to set.\n' +
    '@return True if operation was successful.',
  'Sets style properties for an element using the CSS OM.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param query Query for the test element.\n' +
    '@param properties CSS Property name/values to set.\n' +
    '@return Whether styles were set or not.',
  'Sends an event to the element specified by |targetQuery| or active element.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param targetQuery Query to specify the element.\n' +
    'If this value is null, an event is dispatched to active element of the\n' +
    'document.\n' +
    'If targetQuery is an array, |targetQuery[0]| specifies the first\n' +
    'element(s), |targetQuery[1]| specifies elements inside the shadow DOM of\n' +
    'the first element, and so on.\n' +
    '@param event Event to be sent.\n' +
    '@return True if the event is sent to the target, false otherwise.',
  'Sends an fake event having the specified type to the target query.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param targetQuery Query to specify the element.\n' +
    '@param eventType Type of event.\n' +
    '@param additionalProperties Object containing additional properties.\n' +
    '@return True if the event is sent to the target, false otherwise.',
  'bubbles is a read-only which, causes an error when assigning.',
  'Sends a fake key event to the element specified by |targetQuery| or active\n' +
    'element with the given |key| and optional |ctrl,shift,alt| modifier.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param targetQuery Query to specify the element. If this value is\n' +
    'null, key event is dispatched to active element of the document.\n' +
    '@param key DOM UI Events key value.\n' +
    '@param ctrl Whether CTRL should be pressed, or not.\n' +
    '@param shift whether SHIFT should be pressed, or not.\n' +
    '@param alt whether ALT should be pressed, or not.\n' +
    '@return True if the event is sent to the target, false otherwise.',
  'Simulates a fake mouse click (left button, single click) on the element\n' +
    'specified by |targetQuery|. If the element has the click method, just calls\n' +
    "it. Otherwise, this sends 'mouseover', 'mousedown', 'mouseup' and 'click'\n" +
    'events in turns.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param targetQuery Query to specify the element.\n' +
    'If targetQuery is an array, |targetQuery[0]| specifies the first\n' +
    'element(s), |targetQuery[1]| specifies elements inside the shadow DOM of\n' +
    'the first element, and so on.\n' +
    '@param keyModifiers Object containing common key modifiers : shift, alt, and\n' +
    'ctrl.\n' +
    '@param button Mouse button number as per spec, e.g.: 2 for right-click.\n' +
    '@param eventProperties Additional properties to pass to each event, e.g.:\n' +
    'clientX and clientY. right-click.\n' +
    '@return True if the all events are sent to the target, false otherwise.',
  'Only sends the event to the first matched element.',
  'Simulates a mouse hover on an element specified by |targetQuery|.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param targetQuery Query to specify the element.\n' +
    'If targetQuery is an array, |targetQuery[0]| specifies the first\n' +
    'element(s), |targetQuery[1]| specifies elements inside the shadow DOM of\n' +
    'the first element, and so on.\n' +
    '@param keyModifiers Object containing common key modifiers : shift, alt, and\n' +
    'ctrl.\n' +
    '@return True if the event was sent to the target, false otherwise.',
  'Simulates a mouseout event on an element specified by |targetQuery|.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param targetQuery Query to specify the element.\n' +
    'If targetQuery is an array, |targetQuery[0]| specifies the first\n' +
    'element(s), |targetQuery[1]| specifies elements inside the shadow DOM of\n' +
    'the first element, and so on.\n' +
    '@param keyModifiers Object containing common key modifiers : shift, alt, and\n' +
    'ctrl.\n' +
    '@return True if the event is sent to the target, false otherwise.',
  'Simulates a fake full mouse right-click  on the element specified by\n' +
    '|targetQuery|.\n' +
    'It generates the sequence of the following MouseEvents:\n' +
    '1. mouseover\n' +
    '2. mousedown\n' +
    '3. mouseup\n' +
    '4. click\n' +
    '5. contextmenu\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param targetQuery Query to specify the element.\n' +
    '@param keyModifiers Object containing common key modifiers: shift, alt, and\n' +
    'ctrl.\n' +
    '@return True if the event is sent to the target, false otherwise.',
  'Simulate a fake contextmenu event without right clicking on the element\n' +
    'specified by |targetQuery|. This is mainly to simulate long press on the\n' +
    'element.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param targetQuery Query to specify the element.\n' +
    '@return True if the event is sent to the target, false otherwise.',
  'Simulates a fake touch event (touch start and touch end) on the element\n' +
    'specified by |targetQuery|.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param targetQuery Query to specify the element.\n' +
    '@return True if the event is sent to the target, false otherwise.',
  'Simulates a fake double click event (left button) to the element specified by\n' +
    '|targetQuery|.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param targetQuery Query to specify the element.\n' +
    '@return True if the event is sent to the target, false otherwise.',
  'Double click is always preceded with a single click.',
  'Send the second click event, but with detail equal to 2 (number of',
  'clicks) in a row.',
  'Send the double click event.',
  'Sends a fake mouse down event to the element specified by |targetQuery|.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param targetQuery Query to specify the element.\n' +
    '@return True if the event is sent to the target, false otherwise.',
  'Sends a fake mouse up event to the element specified by |targetQuery|.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param targetQuery Query to specify the element.\n' +
    '@return True if the event is sent to the target, false otherwise.',
  'Simulates a mouse right-click on the element specified by |targetQuery|.\n' +
    'Optionally pass X,Y coordinates to be able to choose where the right-click\n' +
    'should occur.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param targetQuery Query to specify the element.\n' +
    '@param offsetBottom offset pixels applied to target element bottom, can be\n' +
    'negative to move above the bottom.\n' +
    '@param offsetRight offset pixels applied to target element right can be\n' +
    'negative to move inside the element.\n' +
    '@return True if the all events are sent to the target, false otherwise.',
  'Calculate the offsets.',
  'Sends drag and drop events to simulate dragging a source over a target.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param sourceQuery Query to specify the source element.\n' +
    '@param targetQuery Query to specify the target element.\n' +
    '@param skipDrop Set true to drag over (hover) the target only, and not send\n' +
    'target drop or source dragend events.\n' +
    '@param callback Function called with result true on success, or false on\n' +
    'failure.',
  'Get the middle of the source element since some of Files app logic',
  'requires clientX and clientY.',
  'Sends a target dragleave or drop event, and source dragend event, to finish\n' +
    'the drag a source over target simulation started by fakeDragAndDrop for the\n' +
    'case where the target was hovered.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param sourceQuery Query to specify the source element.\n' +
    '@param targetQuery Query to specify the target element.\n' +
    '@param dragLeave Set true to send a dragleave event to the target instead of\n' +
    'a drop event.\n' +
    '@param callback Function called with result true on success, or false on\n' +
    'failure.',
  'Get the middle of the source element since some of Files app logic',
  'requires clientX and clientY.',
  'Define the target event type.',
  'Sends a drop event to simulate dropping a file originating in the browser to\n' +
    'a target.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param fileName File name.\n' +
    '@param fileContent File content.\n' +
    '@param fileMimeType File mime type.\n' +
    '@param targetQuery Query to specify the target element.\n' +
    '@param callback Function called with result true on success, or false on\n' +
    'failure.',
  'The value for the callback is true if the event has been handled,',
  'i.e. event has been received and preventDefault() called.',
  'Sends a resize event to the content window.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@return True if the event was sent to the contentWindow.',
  'Focuses to the element specified by |targetQuery|. This method does not\n' +
    'provide any guarantee whether the element is actually focused or not.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param targetQuery Query to specify the element.\n' +
    '@return True if focus method of the element has been called, false otherwise.',
  'Obtains the list of notification ID.\n' +
    '@param _callback Callback function with results returned by the script.',
  'TODO(TS): Add type for chrome notifications.',
  'TODO(b/189173190): Enable',
  'TODO(b/296960734): Enable',
  'chrome.notifications.getAll(callback);',
  'Gets file entries just under the volume.\n' +
    '@param volumeType Volume type.\n' +
    '@param names File name list.\n' +
    '@param callback Callback function with results returned by\n' +
    'the script.',
  'Wait for the volume to initialize.',
  'TODO(crbug.com/40591990): Remove this conditional.',
  'Unmounts the specified volume.\n' +
    '@param volumeType Volume type.\n' +
    '@param callback Function receives true on success.',
  'Remote call API handler. When loaded, this replaces the declaration in\n' +
    'test_util_base.js.',
  'Check the function name.',
  'Prepare arguments.',
  'request.contentWindow is present if this function was called via',
  'test.swaTestMessageListener.',
  'Call the test utility function and respond the result.',
  'Returns the MetadataStats collected in MetadataModel, it will be serialized\n' +
    'as a plain object when sending to test extension.',
  'Calls the metadata model to get the selected file entries in the file list\n' +
    'and try to get their metadata properties.\n' +
    '@param properties Content metadata properties to get.\n' +
    '@param callback Callback with metadata results returned.',
  'Wait for the promise to resolve',
  'Returns true when FileManager has finished loading, by checking the attribute\n' +
    '"loaded" on its root element.',
  'The test util functions can be loaded prior to the fileManager.ui',
  'element being available, this results in an assertion failure. Treat',
  'this as file manager not being loaded instead of a hard failure.',
  'Returns all a11y messages announced by |FileManagerUI.speakA11yMessage|.',
  'Reports to the given |callback| the number of volumes available in\n' +
    'VolumeManager in the background page.\n' +
    '@param callback Callback function to be called with the number of volumes.',
  'Updates the preferences.',
  'Reports an enum metric.\n' +
    '@param name The metric name.\n' +
    '@param value The metric enumerator to record.\n' +
    '@param validValues An array containing the valid enumerators in order.',
  'Tells background page progress center to never notify a completed operation.',
  'Waits for the background page to initialize.\n' +
    '@param callback Callback function called when background page has finished\n' +
    'initializing.',
  'Isolates a specific banner to be shown. Useful when testing functionality\n' +
    'of a banner in isolation.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param bannerTagName Tag name of the banner to isolate.\n' +
    '@param callback Callback function to be called with a boolean indicating\n' +
    'success or failure.',
  'Disable banners from attaching themselves to the DOM.\n' +
    '@param contentWindow Window the banner controller exists.\n' +
    '@param callback Callback function to be called with a boolean indicating\n' +
    'success or failure.',
  'Disables the nudge expiry period for testing.\n' +
    '@param contentWindow Window the banner controller exists.\n' +
    '@param callback Callback function to be called with a boolean indicating\n' +
    'success or failure.'
]
test_util.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Shorter alias for the task descriptor type.',
  'This is the shape of the data managed by overrideTasks().',
  'A function that has been replaced by a Fake.',
  'Sanitizes the formatted date. Replaces unusual space with normal space.\n' +
    '@param strDate the date already in the string format.',
  'Returns details about each file shown in the file list: name, size, type and\n' +
    'modification time.\n' +
    'Since FilesApp normally has a fixed display size in test, and also since the\n' +
    '#detail-table recycles its file row elements, this call only returns details\n' +
    'about the visible file rows (11 rows normally, see crbug.com/850834).\n' +
    '@param contentWindow Window to be tested.\n' +
    '@return Details for each visible file row.',
  'Returns the name of the files currently selected in the file list. Note the\n' +
    "routine has the same 'visible files' limitation as getFileList() above.\n" +
    '@param contentWindow Window to be tested.\n' +
    '@return Selected file names.',
  'Fakes pressing the down arrow until the given |filename| is selected.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param filename Name of the file to be selected.\n' +
    '@return True if file got selected, false otherwise.',
  'Open the file by selectFile and fakeMouseDoubleClick.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param filename Name of the file to be opened.\n' +
    '@return True if file got selected and a double click message is\n' +
    'sent, false otherwise.',
  'Returns the last URL visited with visitURL() (e.g. for "Manage in Drive").\n' +
    '@param contentWindow The window where visitURL() was called.\n' +
    '@return The URL of the last URL visited.',
  'Returns a string translation from its translation ID.\n' +
    '@param id The id of the translated string.',
  'Executes Javascript code on a webview and returns the result.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param webViewQuery Selector for the web view.\n' +
    '@param code Javascript code to be executed within the web view.\n' +
    '@param callback Callback function with results returned by the script.',
  'Selects |filename| and fakes pressing Ctrl+C, Ctrl+V (copy, paste).\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param filename Name of the file to be copied.\n' +
    '@return True if copying got simulated successfully. It does not\n' +
    'say if the file got copied, or not.',
  'Ctrl+C and Ctrl+V',
  'Selects |filename| and fakes pressing the Delete key.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param filename Name of the file to be deleted.\n' +
    '@return True if deleting got simulated successfully. It does not\n' +
    'say if the file got deleted, or not.',
  'Delete',
  'Execute a command on the document in the specified window.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param command Command name.\n' +
    '@return True if the command is executed successfully.',
  'TODO(b/191831968): Fix execCommand for SWA.',
  'Override the task-related methods in private api for test.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param taskList List of tasks to be returned in\n' +
    'fileManagerPrivate.getFileTasks().\n' +
    '@param isPolicyDefault Whether the default is set by policy.\n' +
    '@return Always return true.',
  'Call onTask asynchronously (same with original getFileTasks).',
  'Obtains the list of executed tasks.',
  'Obtains the list of executed tasks.\n' +
    '@param _contentWindow Window to be tested.\n' +
    '@param descriptor the task to *     check.\n' +
    '@param fileNames Name of files that should have been passed to the\n' +
    'executeTasks().\n' +
    '@return True if the task was executed.',
  'Invokes an executed task with |responseArgs|.\n' +
    '@param _contentWindow Window to be tested.\n' +
    '@param descriptor the task to be replied to.\n' +
    '@param responseArgs the arguments to invoke the callback with.',
  'Calls the unload handler for the window.\n' +
    '@param contentWindow Window to be tested.',
  'Returns the path shown in the breadcrumb.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@return The breadcrumb path.',
  'Obtains the preferences.\n' +
    '@param callback Callback function with results returned by the script.',
  'Stubs out the formatVolume() function in fileManagerPrivate.\n' +
    '@param contentWindow Window to be affected.',
  'Run a contentWindow.requestAnimationFrame() cycle and resolve the\n' +
    'callback when that requestAnimationFrame completes.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param callback Completion callback.',
  'Set the window text direction to RTL and wait for the window to redraw.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param callback Completion callback.',
  'Map the appId to a map of all fakes applied in the foreground window e.g.:\n' +
    "{'files#0': {'chrome.bla.api': FAKE}",
  'A factory that returns a fake (aka function) that returns a static value.\n' +
    'Used to force a callback-based API to return always the same value.',
  'This code is executed when the production code calls the function that',
  'has been replaced by the test.',
  '`args` is the arguments provided by the production code.',
  'Find the first callback.',
  'A factory that returns an async function (aka a Promise) that returns a\n' +
    'static value. Used to force a promise-based API to return always the same\n' +
    'value.',
  'This code is executed when the production code calls the function that',
  'has been replaced by the test.',
  '`args` is the arguments provided by the production code.',
  'Registry of available fakes, it maps the an string ID to a factory\n' +
    'function which returns the actual fake used to replace an implementation.',
  'Class holds the information for applying and restoring fakes.',
  'The instance of the fake to be used, ready to be used.',
  'After traversing |context_| the object that holds the attribute to be\n' +
    'replaced by the fake.',
  'After traversing |context_| the attribute name in |parentObject_| that\n' +
    'will be replaced by the fake.',
  'Original object that was replaced by the fake.',
  'If this fake object has been constructed and everything initialized.',
  'Counter to record the number of times the static fake is called.',
  'Additional data provided from integration tests to the fake constructor.',
  'List to record the arguments provided to the static fake calls.',
  '@param attrName Name of the attribute to be replaced by the fake\n' +
    'e.g.: "chrome.app.window.create".\n' +
    '@param fakeId The name of the fake to be used from `fakes_`.\n' +
    '@param context The context where the attribute will be traversed from,\n' +
    'e.g.: Window object.\n' +
    '@param args Additional args provided from the integration test to the fake,\n' +
    'e.g.: static return value.',
  'Initializes the fake and traverse |context_| to be ready to replace the\n' +
    'original implementation with the fake.',
  'Replaces the original implementation with the fake.\n' +
    'NOTE: It requires prepare() to have been called.\n' +
    '@param contentWindow Window to be tested.',
  'Restores the original implementation that had been previously replaced by\n' +
    'the fake.',
  'Saves the original implementation to be able restore it later.\n' +
    '@param contentWindow Window to be tested.',
  'Only save once, otherwise it can save an object that is already fake.',
  'Constructs the fake.',
  'Finds the parent and the object to be replaced by fake.',
  'Replaces implementations in the foreground page with fakes.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param fakeData An object mapping the path to the\n' +
    'object to be replaced and the value is the Array with fake id and\n' +
    'additional arguments for the fake constructor, e.g.: fakeData = {\n' +
    "'chrome.app.window.create' : [\n" +
    "'static_fake',\n" +
    "['some static value', 'other arg'],\n" +
    ']\n' +
    '}\n' +
    "This will replace the API 'chrome.app.window.create' with a static fake,\n" +
    "providing the additional data to static fake: ['some static value',\n" +
    "'other value'].",
  'Removes all fakes that were applied to the foreground page.\n' +
    '@param contentWindow Window to be tested.',
  'Obtains the number of times the static fake api is called.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param fakedApi Path of the method that is faked.\n' +
    '@return Number of times the fake api called.',
  'Obtains the list of arguments with which the static fake api was called.\n' +
    '@param contentWindow Window to be tested.\n' +
    '@param fakedApi Path of the method that is faked.\n' +
    '@return An array with all calls to this fake, each item\n' +
    'is an array with all args passed in when the fake was called.',
  'Send progress item to Foreground page to display.\n' +
    '@param id Progress item id.\n' +
    '@param type Type of progress item.\n' +
    '@param state State of the progress item.\n' +
    '@param message Message of the progress item.\n' +
    '@param remainingTime The remaining time of the progress in second.\n' +
    '@param progressMax Max value of the progress.\n' +
    '@param progressValue Current value of the progress.\n' +
    '@param count Number of items being processed.',
  'Remote call API handler. This function handles messages coming from the\n' +
    'test harness to execute known functions and return results. This is a\n' +
    'dummy implementation that is replaced by a real one once the test harness\n' +
    'is fully loaded.',
  'Handles a direct call from the integration test harness. We execute\n' +
    'swaTestMessageListener call directly from the FileManagerBrowserTest.\n' +
    'This method avoids enabling external callers to Files SWA. We forward\n' +
    'the response back to the caller, as a serialized JSON string.'
]
test_util_base.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Namespace for test related things.',
  'Namespace for test utility functions.\n' +
    'Public functions in the test.util.sync and the test.util.async namespaces are\n' +
    'published to test cases and can be called by using callRemoteTestUtil. The\n' +
    'arguments are serialized as JSON internally. If application ID is passed to\n' +
    'callRemoteTestUtil, the content window of the application is added as the\n' +
    'first argument. The functions in the test.util.async namespace are passed the\n' +
    'callback function as the last argument.',
  'Namespace for synchronous utility functions.',
  'Namespace for asynchronous utility functions.'
]
volume_info.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Represents each volume, such as "drive", "download directory", each "USB\n' +
    'flush storage", or "mounted zip archive" etc.',
  'An entry to be used as prefix of this volume on breadcrumbs, e.g. "My Files\n' +
    '> Downloads", "My Files" is a prefixEntry on "Downloads" VolumeInfo.',
  '@param volumeType is the type of the volume.\n' +
    '@param volumeId is the ID of the volume.\n' +
    '@param fileSystem is the file system object for this volume.\n' +
    '@param error is the error if an error is found. Note: This represents if\n' +
    'the mounting of the volume is successfully done or not. (If error is\n' +
    'empty string, the mount is successfully done).\n' +
    '@param deviceType is the type of device\n' +
    "('usb'|'sd'|'optical'|'mobile'|'unknown') (as defined in\n" +
    'chromeos/ash/components/disks/disk_mount_manager.cc). Can be undefined.\n' +
    '@param devicePath is the identifier of the device that the volume belongs\n' +
    'to. Can be undefined.\n' +
    '@param isReadOnly is true if the volume is read only.\n' +
    '@param isReadOnlyRemovableDevice is true if the volume is read only\n' +
    'removable device.\n' +
    '@param profile is the profile information.\n' +
    '@param label is the abel of the volume.\n' +
    '@param providerId is the Id of the provider for this volume. Undefined for\n' +
    'non-FSP volumes.\n' +
    '@param configurable is true when the volume can be configured.\n' +
    '@param watchable is true when the volume can be watched.\n' +
    "@param source is the source of the volume's data.\n" +
    '@param diskFileSystemType is the file system type identifier.\n' +
    '@param iconSet is the set of icons for this volume.\n' +
    '@param driveLabel is the drive label of the volume. Removable partitions\n' +
    'belonging to the same device will share the same drive label.\n' +
    '@param remoteMountPath is the path on the remote host where this volume is\n' +
    "mounted, for crostini this is the user's homedir (/home/<username>).\n" +
    '@param vmType is the type of the VM which owns the volume if this is a\n' +
    'GuestOS volume.',
  "Users can't create new files directinly in Offline or Shared With Me",
  'roots.',
  'Display root path. It is null before finishing to resolve the entry.',
  'The display root path of Shared Drives directory. It is null before\n' +
    'finishing to resolve the entry. Valid only for Drive volume.',
  'The display root path of Computers directory. It is null before finishing\n' +
    'to resolve the entry. Valid only for Drive volume.',
  "The volume's fake entries such as Recent, Offline, Shared with me, etc...\n" +
    'in Google Drive.',
  'This represents if the mounting of the volume is successfully done or\n' +
    'not. (If error is empty string, the mount is successfully done)',
  'The type of device. (e.g. USB, SD card, DVD etc.)',
  'If the volume is removable, devicePath is the path of the system device\n' +
    "this device's block is a part of. (e.g.\n" +
    '/sys/devices/pci0000:00/.../8:0:0:0/) Otherwise, this should be empty.',
  'Whether the device is read-only removable device or not.',
  'Label for the volume if the volume is either removable or a provided file\n' +
    'system. In case of removables, if disk is a parent, then its label, else\n' +
    `parent's label (e.g. "TransMemory").`,
  'ID of a provider for this volume.',
  'True if the volume is configurable.\n' +
    'See https://developer.chrome.com/apps/fileSystemProvider.',
  'True if the volume notifies about changes via file/directory watchers.',
  "Source of the volume's data.",
  'File system type identifier.',
  'Set of icons for this volume.',
  'Drive label for the volume. Removable partitions belonging to the same\n' +
    'physical media device will share the same drive label.',
  'The path on the remote host where this volume is mounted, for crostini this\n' +
    "is the user's homedir (/home/<username>).",
  'An entry to be used as prefix of this volume on breadcrumbs,\n' +
    'e.g. "My Files > Downloads"\n' +
    '"My Files" is a prefixEntry on "Downloads" VolumeInfo.',
  'If this is a GuestOS volume, the type of the VM which owns this volume.',
  'Returns a promise to the entry for the given URL',
  'Sets |sharedDriveDisplayRoot_| if team drives are enabled.\n' +
    'The return value will resolve once this operation is complete.',
  'Sets |computersDisplayRoot_| if Computers are enabled.\n' +
    'If Computers are not enabled, resolveFileSystemUrl_ will return a\n' +
    "'NotFoundError' which will be caught here. Any other errors will be\n" +
    'rethrown.\n' +
    'The return value will resolve once this operation is complete.',
  'Returns a promise that resolves when the display root is resolved.',
  'For Drive, we need to resolve.',
  'Store the obtained displayRoot.',
  'Starts resolving the display root and obtains it.  It may take long time\n' +
    'for Drive. Once resolved, it is cached.\n' +
    '@param onSuccess Success callback with the display root directory as an\n' +
    'argument.'
]
volume_info_list.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview The container of the VolumeInfo for each mounted volume.',
  'The container of the VolumeInfo for each mounted volume.',
  'Adds the volumeInfo to the appropriate position. If there already exists,\n' +
    'just replaces it.',
  'Removes the VolumeInfo having the given ID.',
  'Obtains an index from the volume ID.'
]
volume_manager.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Time in milliseconds that we wait a response for general volume operations\n' +
    'such as mount, unmount, and requestFileSystem. If no response on\n' +
    'mount/unmount received the request supposed failed.',
  'A list of RequestType',
  'Logs a warning message if the given error is not in\n' +
    'VolumeError.\n' +
    '@param error Status string usually received from APIs.',
  'Builds the VolumeInfo data from chrome.fileManagerPrivate.VolumeMetadata.\n' +
    '@param volumeMetadata Metadata instance for the volume.\n' +
    '@return Promise settled with the VolumeInfo instance.',
  'TODO(mtomasz): Calculate volumeLabel for all types of volumes in the',
  'C++ layer.',
  'resolveDisplayRoot() is a promise, but instead of using await here,',
  "we just pass a onSuccess function to it, because we don't want to it",
  'to interfere the startup time.',
  'TODO(crbug.com/41391739): Report a mount error via UMA.',
  'An event triggered when a user tries to mount the volume which is\n' +
    'already mounted. The event object must have a volumeId property.',
  'An event triggered when an archive file is newly mounted, or when opened a\n' +
    'one already mounted.',
  "Event object which is dispatched with 'externally-unmounted' event.",
  'VolumeManager is responsible for tracking list of mounted volumes.',
  'The list of VolumeInfo instances for each mounted volume.',
  'The list of archives requested to mount. We will show contents once\n' +
    'archive is mounted, but only for mounts from within this filebrowser tab.',
  'The status should be merged into VolumeManager.',
  'TODO(hidehiko): Remove them after the migration.',
  'Connection state of the Drive.',
  'Holds the resolver for the `waitForInitialization_` promise.',
  'Promise used to wait for the initialize() method to finish.',
  'Subscribe to mount event as early as possible, but after the',
  'waitForInitialization_ above.',
  "Gets the 'fusebox-only' filter state: true if enabled, false if disabled.\n" +
    'The filter is only enabled by the SelectFileAsh (Lacros) file picker, and\n' +
    'implemented by {FilteredVolumeManager} override.',
  "Gets the 'media-store-files-only' filter state: true if enabled, false if\n" +
    'disabled. The filter is only enabled by the Android (ARC) file picker, and\n' +
    'implemented by {FilteredVolumeManager} override.',
  'Disposes the instance. After the invocation of this method, any other\n' +
    'method should not be called.',
  'Invoked when the drive connection status is changed.',
  'Returns the drive connection state.',
  'Adds new volume info from the given volumeMetadata. If the corresponding\n' +
    'volume info has already been added, the volumeMetadata is ignored.',
  'Update the network connection status, because until the drive',
  'is initialized, the status is set to not ready.',
  'TODO(mtomasz): The connection status should be migrated into',
  'chrome.fileManagerPrivate.VolumeMetadata.',
  'Update for remounted USB external storage, because they were',
  'remounted to switch read-only policy.',
  'Initializes mount points.',
  'Resolves the initialization promise to unblock any code awaiting for\nit.',
  'Create VolumeInfo for each volume.',
  'createVolumeInfo() requests the filesystem and resolve its root,',
  'after that it only creates a VolumeInfo.',
  'Add addVolumeInfo_() changes the VolumeInfoList which propagates',
  'to the foreground.',
  'Finish after all volumes have been processed, or at least Downloads',
  'or Drive.',
  'At this point the volumes are still initializing.',
  'Event handler called when some volume was mounted or unmounted.',
  'Wait for the initialization to guarantee that the initialize() runs for',
  'some volumes before any mount event, because the mounted volume can be',
  'unresponsive, getting stuck when resolving the root in the method',
  'createVolumeInfo(). crbug.com/504366',
  'Creates string to match mount events with requests.\n' +
    "@param requestType 'mount' | 'unmount'.\n" +
    '@param argument Argument describing the request, eg. source file\n' +
    'path of the archive to be mounted, or a volumeId for unmounting.\n' +
    '@return Key for |this.requests_|.',
  '@param fileUrl File url to the archive file.\n' +
    '@param password Password to decrypt archive file.\n' +
    '@return Fulfilled on success, otherwise rejected with a VolumeError.',
  'Cancels mounting an archive.\n' +
    '@param fileUrl File url to the archive file.\n' +
    '@return Fulfilled on success, otherwise rejected with a VolumeError.',
  'Unmounts a volume.\n' +
    '@param volumeInfo Volume to be unmounted.\n' +
    '@return Fulfilled on success, otherwise rejected with a VolumeError.',
  'Configures a volume.\n' +
    '@param volumeInfo Volume to be configured.\n' +
    '@return Fulfilled on success, otherwise rejected with an error message.',
  'Obtains a volume info containing the passed entry.\n' +
    '@param entry Entry on the volume to be returned. Can be fake.',
  'Additionally, check fake entries.',
  'Obtains volume information of the current profile.',
  'Obtains location information from an entry.\n' +
    '@param entry File or directory entry. It can be a fake entry.',
  'Aggregated views like RECENTS and TRASH exist as fake entries but may',
  'actually defer their logic to some underlying implementation or',
  'delegate to the location filesystem.',
  'For Drive, the roots are /root, /team_drives, /Computers and /other,',
  'instead of /. Root URLs contain trailing slashes.',
  'Regular files/directories under Shared Drives.',
  'Regular files/directories under a Computer entry.',
  '/.files-by-id/<id> is read-only, but /.files-by-id/<id>/foo is',
  'read-write.',
  '/.shortcut-targets-by-id/<id> is read-only, but',
  '/.shortcut-targets-by-id/<id>/foo is read-write.',
  'Drive uses "$topdir/.Trash-$uid" as the trash dir as per XDG spec.',
  'User chronos is always uid 1000.',
  'Accessing Drive files outside of /drive/root and /drive/other is not',
  'allowed, but can happen. Therefore returning null.',
  'Although "Play files" root directory is writable in file system level,',
  'we prohibit write operations on it in the UI level to avoid confusion.',
  'Users can still have write access in sub directories like',
  '/Play files/Pictures, /Play files/DCIM, etc...',
  'Searches the information of the volume that exists on the given device\n' +
    'path.\n' +
    '@param devicePath Path of the device to search.\n' +
    "@return The volume's information, or null if not found.",
  'Returns a promise that will be resolved when volume info, identified by\n' +
    '`volumeId` is created.\n' +
    "@return Resolved with the `VolumeInfo`. It won't resolve if the volume is\n" +
    'never mounted.',
  'Obtains the default display root entry.\n' +
    '@returns Default display root promise, fulfilled when resolved\n' +
    'successfully.',
  '@param key Key produced by |makeRequestKey_|.\n' +
    '@return Fulfilled on success, otherwise rejected with a\n' +
    'VolumeError.',
  'Called if no response received in |TIMEOUT|.\n' +
    '@param key Key produced by |makeRequestKey_|.',
  '@param key Key produced by |makeRequestKey_|.\n' +
    '@param status Status received from the API.\n' +
    '@param volumeInfo Volume info of the mounted volume.',
  '@param request Structure created in |startRequest_|.\n' +
    "@param status If status === 'success' success callbacks are called.\n" +
    '@param volumeInfo Volume info of the mounted volume.',
  'Checks if any volumes are disabled for selection.\n' +
    'See overridden implementation in `FilteredVolumeManager`.',
  'Checks whether the given volume is disabled for selection.\n' +
    'See overridden implementation in `FilteredVolumeManager`.\n' +
    '@param volume Volume to check.',
  'Checks if a volume is allowed.\n' +
    'See overridden implementation in `FilteredVolumeManager`.'
]
volume_manager_factory.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The singleton instance of VolumeManager. Initialized by the first\n' +
    'invocation of getInstance().',
  'Returns the VolumeManager instance asynchronously. If it has not been\n' +
    'created or is under initialization, it will waits for the finish of the\n' +
    'initialization.',
  'Returns instance of VolumeManager for debug purpose.\n' +
    'This method returns VolumeManager.instance which may not be initialized.',
  'Revokes the singleton instance for testing.'
]
volume_manager_unittest.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Set up mock of chrome.fileManagerPrivate APIs.',
  'Mock window.webkitResolveLocalFileSystemURL to return entries for DriveFS.',
  'To avoid a closure warning assigning to |chrome|, tearDown() does not',
  'balance the call to installMockChrome() here.',
  'Restore window.webkitResolveLocalFileSystemURL.',
  'Drive + Downloads + Android:',
  'Returns a mock profile.',
  "Tests that an unresponsive volume doesn't lock the whole Volume Manager\n" +
    'initialization.',
  'Replace chrome.fileManagerPrivate.getVolumeRoot() to emulate 1',
  'volume not resolving.',
  "getInstance() calls and waits for initialize(), which shouldn't get stuck",
  'waiting for the all volumes to resolve.',
  'Wait 2 out 3 volumes to be ready.',
  'Unblock the unresponsive volume and check if it gets available:',
  "Tests that failing to get the root doesn't add a volume to the\n" +
    '`volumeInfoList`.',
  'Replace chrome.fileManagerPrivate.getVolumeRoot() to emulate failure to get',
  '1 volume root.',
  "getInstance() calls and waits for initialize(), which shouldn't add",
  "'download:Downloads' to the volumeInfoList when failing to get the root.",
  'Default connection state is online',
  'Sets it to offline.',
  'Sets it back to online',
  'Set states of mock fileManagerPrivate APIs.',
  'Drive + Downloads + Android.',
  'Mount an archive',
  'Unmount the mounted archive',
  'Set states of mock fileManagerPrivate APIs.',
  'Drive + Downloads + Android.',
  'volumeType  VolumeType.MY_FILES,',
  "volumeId  'volumeId',",
  "fileSystem  new MockFileSystem('testName', '/testURL'),",
  'error  undefined,',
  'deviceType  undefined,',
  'devicePath  undefined,',
  'isReadOnly  false,',
  'isReadOnlyRemovableDevice  false,',
  "profile  {displayName: '', isCurrentProfile: true},",
  "label  'testLabel',",
  'extensionid  undefined,',
  'configurable  false,',
  'watchable  true,',
  'source  Source.FILE,',
  'diskFileSystemType  FileSystemType.UNKNOWN,',
  "iconSet  {icon16x16Url: '', icon32x32Url: ''},",
  "driveLabel  'TEST_DRIVE_LABEL',",
  "remoteMountPath '',",
  'vmType undefined);',
  'Start volume manager initialization.',
  'Drive is mounted during initialization.',
  'Wait until volume manager initialization calls getVolumeMetadataList().',
  'Inject the callback value for getVolumeMetadataList(), making the',
  'initialization continue and finish.',
  'Wait for volume manager to finish initializing.',
  'Check volume manager.',
  "Tests that an error initializing one volume doesn't stop other volumes to be\n" +
    'initialized. crbug.com/1041340',
  'Confirm that a Drive volume is on faked getVolumeMetadataList().',
  'Replace createVolumeInfo() to fail to create Drive volume.',
  'For any other volume return normal value.',
  'Wait for initialization to populate volumeInfoList.',
  'VolumeInfoList should contain only Android and MyFiles.'
]
api.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Helpers for APIs used within Files app.',
  'Opens a new window for Files SWA.',
  'Wrap the chrome.fileManagerPrivate.getSizeStats function in an async/await\n' +
    'compatible style.',
  'Wrap the chrome.fileManagerPrivate.getDriveQuotaMetadata function in an\n' +
    'async/await compatible style.',
  'Retrieves the current holding space state, for example the list of items the\n' +
    'holding space currently contains.',
  'Wrap the chrome.fileManagerPrivate.getDisallowedTransfers function in an\n' +
    'async/await compatible style.',
  'Wrap the chrome.fileManagerPrivate.getDlpMetadata function in an async/await\n' +
    'compatible style.',
  'Retrieves the list of components to which the transfer of an Entry is blocked\n' +
    'by Data Leak Prevention (DLP) policy.',
  'Retrieves Data Leak Prevention (DLP) restriction details.',
  'Retrieves the caller that created the dialog (Save As/File Picker).',
  'Lists Guest OSs which support having their files mounted.',
  'Lists Guest OSs which support having their files mounted.',
  'FileSystemEntry helpers',
  'Starts an IOTask of `type` and returns a taskId that can be used to cancel\n' +
    'or identify the ongoing IO operation.',
  'Parses .trashinfo files to retrieve the restore path and deletion date.',
  'Returns unique parent directories of provided entries. Note: this assumes\n' +
    'all provided entries are from the same filesystem.',
  'Gets the current bulk pin progress status.',
  'Starts calculating the required space to pin all the users items on their My\n' +
    'drive.',
  'Wrap the chrome.fileManagerPrivate.getDriveConnectionStatus function in an\n' +
    'async/await compatible style.'
]
array_data_model.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This is a data model representin',
  'Default compare function.',
  'We could insert i18n comparisons here.',
  'A data model that wraps a simple array and supports sorting by storing\n' +
    'initial indexes of elements for each position in sorted array.',
  '@param array The underlying array.',
  'The length of the data model.',
  'Returns the item at the given index.\n' +
    'This implementation returns the item at the given index in the sorted\n' +
    'array.\n' +
    '@param index The index of the element to get.\n' +
    '@return The element at the given index.',
  'Returns compare function set for given field.\n' +
    '@param field The field to get compare function for.\n' +
    '@return Compare function set for given field.',
  'Sets compare function for given field.\n' +
    '@param field The field to set compare function.\n' +
    '@param compareFunction Compare function to set for given field.',
  'Returns true if the field has a compare function.\n' +
    '@param field The field to check.\n' +
    '@return True if the field is sortable.',
  'Returns current sort status.\n@return Current sort status.',
  'Returns the first matching item.\n' +
    '@param item The item to find.\n' +
    '@param fromIndex If provided, then the searching start at the fromIndex.\n' +
    '@return The index of the first found element or -1 if not found.',
  'Returns an array of elements in a selected range.\n' +
    '@param from The starting index of the selected range.\n' +
    '@param to The ending index of selected range.\n' +
    '@return An array of elements in the selected range.',
  'This removes and adds items to the model.\n' +
    'This dispatches a splice event.\n' +
    'This implementation runs sort after splice and creates permutation for\n' +
    'the whole change.\n' +
    '@param index The index of the item to update.\n' +
    '@param deleteCount The number of items to remove.\n' +
    '@param itemsToAdd The items to add.\n' +
    '@return An array with the removed items.',
  'Copy items before the insertion point.',
  'Delete items.',
  'Insert new items instead deleted ones.',
  'Copy items after the insertion point.',
  'TODO(arv): Maybe unify splice and change events?',
  'if sortStatus.field is null, this restores original order.',
  'Still need to finish the sorting above (including events), so',
  'list will not go to inconsistent state.',
  'Appends items to the end of the model.\n' +
    'This dispatches a splice event.\n' +
    '@param itemsToAppend The items to append.\n' +
    '@return The new length of the model.',
  'Updates the existing item with the new item.\n' +
    'The existing item and the new item are regarded as the same item and the\n' +
    'permutation tracks these indexes.\n' +
    '@param oldItem Old item that is contained in the model. If the item is not\n' +
    'found in the model, the method call is just ignored.\n' +
    '@param newItem New item.',
  'Use this to update a given item in the array. This does not remove and\n' +
    'reinsert a new item.\n' +
    'This dispatches a change event.\n' +
    'This runs sort after updating.\n' +
    '@param index The index of the item to update.',
  'Notifies of update of the items in the array. This does not remove and\n' +
    'reinsert new items.\n' +
    'This dispatches one or more change events.\n' +
    'This runs sort after updating.\n' +
    '@param indexes The index list of items to update.',
  'Still need to finish the sorting above (including events), so',
  'list will not go to inconsistent state.',
  'Creates sort status with given field and direction.\n' +
    '@param field Sort field.\n' +
    '@param direction Sort direction.\n' +
    '@return Created sort status.',
  'Sorts data model according to given field and direction and dispatches\n' +
    'sorted event with delay. If no need to delay, use sort() instead.\n' +
    '@param field Sort field.\n' +
    '@param direction Sort direction.',
  'If the sort status has been changed, sorting has already done',
  'on the change event.',
  'Sorts data model according to given field and direction and dispatches\n' +
    'sorted event.\n' +
    '@param field Sort field.\n' +
    '@param direction Sort direction.',
  'Sorts data model according to given field and direction.\n' +
    '@param field Sort field.\n' +
    '@param direction Sort direction.',
  'Creates compare function for the field.\n' +
    'Returns the function set as sortFunction for given field or default compare\n' +
    'function\n' +
    '@param field Sort field.\n' +
    '@return Compare function.',
  'Creates compare function for given field and direction.\n' +
    '@param field Sort field.\n' +
    '@param direction Sort direction.'
]
array_data_model_unittest.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
async_util.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Creates a class for executing several asynchronous closures in a fifo queue.\n' +
    'Added tasks will be started in order they were added. Tasks are run\n' +
    'concurrently. At most, |limit| jobs will be run at the same time.',
  '@param limit_ The number of tasks to run at the same time.',
  '@return whether a task is running.',
  '@return the number of waiting tasks.',
  '@return the number of running tasks.',
  'Enqueues a task for running as soon as possible. If there is already the\n' +
    'maximum number of tasks running, the run of this task is delayed until less\n' +
    'than the limit given at the construction time of tasks are running.',
  'Cancels the queue. It removes all the not-run (yet) tasks. Note that this\n' +
    'does NOT stop tasks currently running.',
  '@return whether the queue is cancelling or is already cancelled.',
  'Attempts to run another tasks. If there is less than the maximum number\n' +
    'of task running, it immediately executes the task at the front of\n' +
    'the queue.',
  'Executes the given `task`. The task is placed in the list of running tasks\n' +
    'and immediately executed.',
  'If the task executes successfully, it calls the callback, where we',
  'schedule a next run.',
  'If the task fails we call the callback explicitly.',
  'Handles a task being finished.',
  'Attempts to remove the task that was running.',
  'Schedules the next attempt at execution of the task at the front of\n' +
    'the queue.',
  'TODO(1350885): Use setTimeout(()=>{this.maybeExecute();});',
  '@return a string representation of the instance.',
  'Creates a class for executing several asynchronous closures in a fifo queue.\n' +
    'Added tasks will be executed sequentially in order they were added.',
  'Starts a task gated by this concurrent queue.\n' +
    'Typical usage:\n' +
    'const unlock = await queue.lock();\n' +
    'try {\n' +
    '// Operations of the task.\n' +
    '...\n' +
    '} finally {\n' +
    'unlock();\n' +
    '}\n' +
    '@return Completion callback to run when finished.',
  'A task which is executed by Group.',
  '@param closure Closure with a completion callback to be executed.\n' +
    '@param dependencies Array of dependencies.\n' +
    '@param name Task identifier. Specify to use in dependencies.',
  '@return a string representation of the instance.',
  'Creates a class for executing several asynchronous closures in a group in a\n' +
    'dependency order.',
  '@return the pending tasks.',
  'Enqueues a closure to be executed after dependencies are completed.\n' +
    '@param closure Closure with a completion callback to be executed.\n' +
    '@param dependencies Array of dependencies. If no dependencies, then the\n' +
    'the closure will be executed immediately.\n' +
    '@param maybeName Task identifier. Specify to use in dependencies.',
  'Runs the enqueued closure in order of dependencies.\n' +
    '@param onCompletion Completion callback.',
  'Runs enqueued pending tasks whose dependencies are completed.',
  'If all of the added tasks have finished, then call completion callbacks.',
  'Check if the dependency has finished.',
  'All dependences finished, therefore start the task.',
  'Finishes the passed task and continues executing enqueued closures.',
  'Aggregates consecutive calls and executes the closure only once instead of\n' +
    'several times. The first call is always called immediately, and the next\n' +
    'consecutive ones are aggregated and the closure is called only once once\n' +
    '|delay| amount of time passes after the last call to run().',
  '@param closure_ Closure to be aggregated.\n' +
    '@param delay_ Minimum aggregation time in milliseconds.',
  'Runs a closure. Skips consecutive calls. The first call is called\n' +
    'immediately.',
  'If recently called, then schedule the consecutive call with a delay.',
  'Otherwise, run immediately.',
  'Calls the schedule immediately and cancels any scheduled calls.',
  'Cancels all scheduled runs (if any).',
  'Samples calls so that they are not called too frequently. The first call is\n' +
    'always called immediately, and the following calls may be skipped or delayed\n' +
    'to keep each interval no less than `minInterval_`.',
  'Last time the closure is called.',
  '@param closure_ Closure to be called.\n' +
    '@param minInterval_ Minimum interval between each call in milliseconds.',
  'Requests to run the closure. Skips or delays calls so that the intervals\n' +
    'between calls are no less than `minInterval_` milliseconds.',
  'If |minInterval| has not passed since the closure is run, skips or delays',
  'this run.',
  'Delays this run only when there is no scheduled run.',
  'Otherwise, simply skip this run.',
  'Otherwise, run immediately',
  'Calls the scheduled run immediately and cancels any scheduled calls.',
  'Cancels all scheduled runs (if any).'
]
async_util_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Checks that the order of the tasks is preserved.',
  "Checks that tasks with errors do not interrupt the queue's operations.",
  'Checks the order of start and end of two mutually calling tasks. We expect\n' +
    'that task that is run first finishes before the task ran after it.',
  'Makes a task that enqueues the task specified by the |index|.',
  'Each task also records its trace right at the start and at the end.',
  'Task 0 enqueues task 1.',
  'Task 1 enqueues task 0.',
  'Kick off the process by running task 0.',
  'TODO(1350885): This records problematic behavior in the test. Fixing',
  'concurrent queue should change this tests to expect the sequence to be',
  '[0, 0, 1, 1, 2, 2, 3, 3].',
  "Checks that calling `run` inside a RateRimiter's clojure does not lead to\n" +
    'recursive calls.',
  'This should not lead to an infinite recursion.'
]
cr_ui.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Setter used by the deprecated cr.ui elements.\n' +
    'It sets the value of type T in the private `${name}_`.\n' +
    'It also dispatches the event `${name}Changed` when the value actually\n' +
    'changes.',
  'Converts camelCase to DOM style casing: myName => my-name.',
  'Setter used by the deprecated cr.ui elements.\n' +
    'It sets or removes the DOM attribute, the attribute name is converted\n' +
    'from the camelCase to DOM style case myName => my-name.\n' +
    'It also dispatches the event `${name}Changed` when the value actually\n' +
    'changes.',
  'Setter used by the deprecated cr.ui elements.\n' +
    'It sets the value of type T in the DOM `${name}`. NOTE: Name is converted\n' +
    'from the camelCase to DOM style case myName => my-name.\n' +
    'It also dispatches the event `${name}Changed` when the value actually\n' +
    'changes.',
  'Used by the deprecated cr.ui elements. It receives a regular DOM element\n' +
    '(like a <div>) and injects the cr.ui element implementation methods in that\n' +
    'instance.\n' +
    "It then calls the cr.ui element's `decorate()` which is the initializer for\n" +
    'its state, since it cannot run the constructor().',
  'Inject the methods of the DecoratableElement in the HTMLElement.',
  "Initialize since it doesn't run the constructor.",
  "If the class has a static decorate it can't be used with",
  'crInjectTypeAndInit(), use TheClass.decorate(...) instead.'
]
dialog_type.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
dom_utils.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Only import types from the XfTree/XfTreeItem to',
  'prevent circular imports.',
  'Function to be used as event listener for `mouseenter`, it sets the `title`\n' +
    "attribute in the event's element target, when the text content is clipped due\n" +
    'to CSS overflow, as in showing `...`.\n' +
    'NOTE: This should be used with `mouseenter` because this event triggers less\n' +
    "frequent than `mouseover` and `mouseenter` doesn't bubble from the children\n" +
    'element to the listener (see mouseenter on MDN for more details).',
  "Sets the `title` attribute in the event's element target, when the text\n" +
    'content is clipped due to CSS overflow, as in showing `...`.',
  'Whether the text content is clipped due to CSS overflow, as in showing `...`.',
  'Escapes the symbols: < > &',
  "Returns a string '[Ctrl-][Alt-][Shift-][Meta-]' depending on the event\n" +
    'modifiers. Convenient for writing out conditions in keyboard handlers.\n' +
    '@param event The keyboard event.',
  'A shortcut function to create a child element with given tag and class.\n' +
    '@param parent Parent element.\n' +
    '@param className Class name.\n' +
    '@param {string=} tag tag, DIV is omitted.\n' +
    '@return Newly created element.',
  "Query an element that's known to exist by a selector. We use this instead of\n" +
    'just calling querySelector and not checking the result because this lets us\n' +
    'satisfy the JSCompiler type system.\n' +
    '@param selectors CSS selectors to query the element.\n' +
    '@param {(!Document|!DocumentFragment|!Element)=} context An optional\n' +
    'context object for querySelector.',
  'Obtains the element that should exist, decorates it with given type, and\n' +
    'returns it.\n' +
    '@param query Query for the element.\n' +
    '@param type Type used to decorate.',
  'Returns an array of elements, based on the `selectors`. Exactly one of these\n' +
    'elements is required to exist. The rest will be null.\n' +
    '@param selectors A list of CSS selectors to query for elements.\n' +
    '@param {(!Document|!DocumentFragment|!Element)=} context An optional\n' +
    'context object for querySelector.\n' +
    '@returns A list of query results, with the same indices as the provided\n' +
    '`selectors`. One element will exist, and the rest will be null padding.',
  'Creates an instance of UserDomError subtype of DOMError because DOMError is\n' +
    "deprecated and its Closure extern is wrong, doesn't have the constructor\n" +
    'with 2 arguments. This DOMError looks like a FileError except that it does\n' +
    'not have the deprecated FileError.code member.\n' +
    '@param  name Error name for the file error.\n' +
    '@param {string=} message optional message.',
  'Creates a DOMError-like object to be used in place of returning file errors.',
  '@param name Error name for the file error.\n' +
    '@param {string=} message Optional message for this error.\n' +
    'constructor with 1 arg.',
  'A util function to get the correct "top" value when calling\n' +
    "<cr-action-menu>'s `showAt` method.\n" +
    '@param triggerElement The he element which triggers the menu dropdown.\n' +
    '@param marginTop The gap between the trigger element and the menu dialog.',
  'The menu dialog from <cr-action-menu> is "absolute" positioned, we need to',
  'start from the trigger element and go upwards to add all offsetTop from all',
  'offset parents because each level can have its own offsetTop.'
]
entry_utils.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Type guard used to identify if a generic Entry is actually a DirectoryEntry.',
  'Type guard used to identify if a generic Entry is actually a FileEntry.',
  'Returns the native entry (aka FileEntry) from the Store. It returns `null`\n' +
    "for entries that aren't native.",
  'Type guard used to identify if a given entry is actually a\nVolumeEntry.',
  'Check if the entry is MyFiles or not.\n' +
    'Note: if the return value is true, the input entry is guaranteed to be\n' +
    'EntryList or VolumeEntry type.',
  'Check if the entry is the drive root entry list ("Google Drive" wrapper).\n' +
    'Note: if the return value is true, the input entry is guaranteed to be\n' +
    'EntryList type.',
  `Given an entry, check if it's a grand root ("Shared drives" and  "Computers")\n` +
    'inside Drive. Note: if the return value is true, the input entry is\n' +
    'guaranteed to be DirectoryEntry type.',
  `Given an entry, check if it's a fake entry ("Shared with me" and "Offline")\n` +
    'inside Drive.',
  "Returns true if fileData's entry is inside any part of Drive 'My Drive'.",
  "Returns true if fileData's entry is inside any part of Drive 'Computers'.",
  "Returns true if fileData's entry is inside any part of Drive.",
  'Returns whether or not the root type is one of Google Drive root types.',
  'Sort the entries based on the filter and the names.',
  'TODO: proper way to get file filter and volume manager.',
  'For entries under My Files we need to use a different sorting logic',
  'because we need to make sure curtain files are always at the bottom.',
  'Use locationInfo from first entry because it only compare within the',
  'same volume.',
  'TODO(b/271485133): Do not use getLocationInfo() for sorting.',
  'Only Linux/Play/GuestOS files are in the UI children.',
  'Take an entry and extract the rootType.',
  'Obtains whether an entry is fake or not.',
  'Obtains whether an entry is the root directory of a Shared Drive.',
  'Obtains whether an entry is the grand root directory of Shared Drives.',
  'Obtains whether an entry is descendant of the Shared Drives directory.',
  'Extracts Shared Drive name from entry path.\n' +
    '@return The name of Shared Drive. Empty string if |entry| is not\n' +
    'under Shared Drives.',
  'Returns true if the given root type is for a container of recent files.',
  'Returns true if the given entry is the root folder of recent files.',
  'Whether the `fileData` the is RECENT root.\n' +
    'NOTE: Drive shared with me and offline are marked as RECENT for its "type"\n' +
    'field, so we need to use "rootType" instead.',
  'Obtains whether an entry is the root directory of a Computer.',
  'Obtains whether an entry is descendant of the My Computers directory.',
  'Returns true if the given root type is Trash.',
  'Returns true if the given entry is the root folder of Trash.',
  'Returns true if the given entry is a descendent of Trash.',
  'Returns true if the given entry is a placeholder for OneDrive.',
  'Compares two entries.\n' +
    '@return True if the both entry represents a same file or\n' +
    'directory. Returns true if both entries are null.',
  'Compares two entry arrays.\n' +
    '@return True if the both arrays contain same files or directories\n' +
    'in the same order. Returns true if both arrays are null.',
  'Compares two file systems.\n' +
    '@return True if the both file systems are equal. Also, returns true\n' +
    'if both file systems are null.',
  'Checks if given two entries are in the same directory.\n' +
    '@return True if given entries are in the same directory.',
  'Checks if the child entry is a descendant of another entry. If the entries\n' +
    'point to the same file or directory, then returns false.\n' +
    '@param ancestorEntry The ancestor\n' +
    'directory entry. Can be a fake.\n' +
    '@param childEntry The child entry. Can be a fake.\n' +
    '@return True if the child entry is contained in the ancestor path.',
  'For EntryList and VolumeEntry they can contain entries from different',
  'files systems, so we should check its getUiChildren.',
  'VolumeEntry has to check to root entry descendant entry.',
  'root entry might not be resolved yet.',
  "Check if the ancestor's path with trailing slash is a prefix of child's",
  'path.',
  'Compare by name. The 2 entries must be in same directory.',
  'Compare by label (i18n name). The 2 entries must be in same directory.',
  'Compare by path.',
  '@param bottomEntries entries that should be grouped in the bottom, used for\n' +
    'sorting Linux and Play files entries after\n' +
    'other folders in MyFiles.',
  'Compare entries putting entries from |bottomEntries| in the bottom and\n' +
    'sort by name within entries that are the same type in regards to\n' +
    '|bottomEntries|.',
  'Bottom entry here means Linux or Play files, which should appear after',
  'all native entries.',
  'When there are the same type, just compare by label.',
  'Converts array of entries to an array of corresponding URLs.',
  'When building file_manager_base.js, cachedUrl is not referred other than',
  'here. Thus closure compiler raises an error if we refer the property like',
  'entry.cachedUrl.',
  'Converts array of URLs to an array of corresponding Entries.\n' +
    '@param callback Completion callback with array of success Entries and failure\n' +
    'URLs.',
  'Not an error. Possibly, the file is not accessible anymore.',
  'Invoke the callback. If opt_callback is specified, resultPromise is still',
  'returned and fulfilled with a result.',
  'Converts a url into an {!Entry}, if possible.',
  'Returns true if the given |entry| matches any of the special entries:\n' +
    '- "My Files"/{Downloads,PvmDefault,Camera} directories, or\n' +
    '- "Play Files"/{<any-directory>,DCIM/Camera} directories, or\n' +
    '- "Linux Files" root "/" directory\n' +
    '- "Guest OS" root "/" directory\n' +
    'which cannot be modified such as deleted/cut or renamed.',
  'Retrieves all entries inside the given |rootEntry|.\n' +
    '@param entriesCallback Called when some chunk of entries are read. This can\n' +
    'be called a couple of times until the completion.\n' +
    '@param successCallback Called when the read is completed.\n' +
    '@param errorCallback Called when an error occurs.\n' +
    '@param shouldStop Callback to check if the read process should stop or not.\n' +
    'When this callback is called and it returns true, the remaining recursive\n' +
    'reads will be aborted.\n' +
    '@param maxDepth Max depth to delve directories recursively. If 0 is\n' +
    'specified, only the rootEntry will be read. If -1 is specified or\n' +
    'maxDepth is unspecified, the depth of recursion is unlimited.',
  'Read remaining entries.',
  'Returns true if entry is FileSystemEntry or FileSystemDirectoryEntry, it\n' +
    "returns false if it's FakeEntry or any one of the FilesAppEntry types.",
  'For FilesAppEntry types that wraps a native entry, returns the native entry\n' +
    'to be able to send to fileManagerPrivate API.',
  'Used for logs and debugging. It tries to tell what type is the entry, its\n' +
    'path and URL.',
  'Returns true if all entries belong to the same volume. If there are no\n' +
    'entries it also returns false.',
  'Returns the ODFS root as an Entry. Request the actions of this\n' +
    'Entry to get ODFS metadata.',
  'Return true if the volume with |volumeInfo| is an\ninteractive volume.',
  'Returns a boolean indicating whether the volume is a GuestOs volume. And\n' +
    'ANDROID_FILES type volume can also be a GuestOs volume if ARCVM is enabled.',
  `Returns true if fileData's entry supports the "shared" feature, as in,\n` +
    `displays a shared icon. It's only supported inside "My Drive" or\n` +
    '"Computers", even Shared Drive does not support it, the "My Drive" and\n' +
    `"Computers" itself don't support it either, only their children.\n` +
    "Note: if the return value is true, fileData's entry is guaranteed to be\n" +
    'native Entry type.',
  'Extracts the `entry` from the supplied `treeItem` depending on if the new\n' +
    'directory tree is enabled or not.',
  'Check if the entry support `getUiChildren()` method.',
  'A generator version of `entry.readEntries()`.\n' +
    'Example usage:\n' +
    '```\n' +
    'const childEntries = []\n' +
    'for await (const partialEntries of readEntries(...)) {\n' +
    'childEntries.push(...partialEntries);\n' +
    '}\n' +
    '```',
  'The final return here is void.',
  'Check if the given entry is scannable or not, e.g. can we call\n' +
    '`readEntries()` on it.\n' +
    'If the return value is true, its type is guaranteed to be a Directory like\n' +
    'entry.',
  'Check if the given fileData can display sub-directories.'
]
entry_utils_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Test private methods: isEntryInsideDrive_() and isEntryInsideMyDrive_(),\n' +
    'which should return true when inside My Drive and any of its sub-directories;\n' +
    'Should return false for everything else, including within Team Drive.',
  'Add sub folders for MyFiles and Drive.',
  'Convert entry into FileData.',
  'insideMyDrive',
  'insideDrive',
  'Index 1 is Downloads.',
  'No descendants.',
  'If all directories are read recursively, found files should be 6.',
  'If only the top directory is read, found entries should be 3.',
  'If we delve directories only one level, found entries should be 5.',
  "Tests that it doesn't fail with different types of entries and inputs.",
  'Check static values.',
  'Construct some types of entries.',
  'Index 1 is Downloads.',
  'Mocked values are identified as Object instead of DirectoryEntry and',
  'FileEntry.',
  'FilesAppEntry types:'
]
error_counter.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'This variable is checked in several integration and unit tests, to make sure\n' +
    "that new code changes don't cause unhandled exceptions.",
  'Creates a list of arguments extended with stack information.\n' +
    '@param prefix The prefix indicating type of error situation.\n' +
    '@param args The remaining, if any, arguments of the call.\n' +
    '@return A string representing args and stack traces.',
  'Remove stack trace that is specific to this function.',
  'Count uncaught exceptions.',
  'Count uncaught errors in promises.',
  'Overrides console.error() to count errors.\n' +
    '@param args Message and/or objects to be logged.',
  'Overrides console.assert() to count errors.\n' +
    '@param condition If false, log a message and stack trace.\n' +
    '@param args Message and/or objects to be logged when condition is\n' +
    'false.'
]
file_tasks.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The SWA actionId is prefixed with chrome://file-manager/?ACTION_ID, just the\n' +
    'sub-string compatible with the extension/legacy e.g.: "view-pdf".',
  "Returns whether the provided appId corresponds Files app's.",
  "The task descriptor of 'Install Linux package'.",
  'Gets the default task from tasks. In case there is no such task (i.e. all\n' +
    'tasks are generic file handlers), then return null.',
  'If policy assignment is incorrect, then no default should be set.',
  '1. Default app set for MIME or file extension by user, or built-in app.',
  'If policy assignment is marked as correct, then by this moment we',
  "should've already found the default.",
  '2. Most recently executed or sole non-generic task.',
  'Annotates tasks returned from the API.\n' +
    '@param tasks Input tasks from the API.\n' +
    '@param entries List of entries for the tasks.',
  'Tweak images, titles of internal tasks.'
]
file_type.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'All supported file types are now defined in',
  'ui/file_manager/base/gn/file_types.json5.',
  'A special type for directory.',
  'Returns the file path extension for a given file.\n' +
    '@param entry Reference to the file.\n' +
    "@return The extension including a leading '.', or empty string if not found.",
  'No extension for a directory.',
  'Gets the file type object for a given entry. If mime type is provided, then\n' +
    'uses it with higher priority than the extension.\n' +
    '@param entry Reference to the entry.\n' +
    '@param mimeType Optional mime type for the entry.\n' +
    '@return The matching descriptor or a placeholder.',
  'For removable partitions, use the file system type.',
  'Gets the media type for a given file.\n' +
    '@param entry Reference to the file.\n' +
    '@param mimeType Optional mime type for the file.\n' +
    "@return The value of 'type' property from one of the elements in the knows\n" +
    'file types (file_types.json5) or undefined.',
  '@param entry Reference to the file.\n' +
    '@param mimeType Optional mime type for the file.\n' +
    '@return True if audio file.',
  'Returns whether the |entry| is image file that can be opened in browser.\n' +
    'Note that it returns false for RAW images.\n' +
    '@param entry Reference to the file.\n' +
    '@param mimeType Optional mime type for the file.\n' +
    '@return True if image file.',
  '@param entry Reference to the file.\n' +
    '@param mimeType Optional mime type for the file.\n' +
    '@return True if video file.',
  '@param entry Reference to the file.\n' +
    '@param mimeType Optional mime type for the file.\n' +
    '@return True if document file.',
  '@param entry Reference to the file.\n' +
    '@param mimeType Optional mime type for the file.\n' +
    '@return True if raw file.',
  '@param entry Reference to the file\n' +
    '@param mimeType Optional mime type for this file.\n' +
    '@return Whether or not this is a PDF file.',
  "Files with more pixels won't have preview.\n" +
    '@param entry Reference to the file.\n' +
    '@param mimeType Optional mime type for the file.\n' +
    '@return True if type is in specified set.',
  '@param entry Reference to the file.\n' +
    '@param mimeType Optional mime type for the file.\n' +
    '@return Returns true if the file is hosted.',
  '@param entry Reference to the file.\n' +
    '@param mimeType Optional mime type for the file.\n' +
    '@return Returns true if the file is encrypted with CSE.',
  '@param entry Reference to the file.\n' +
    '@param mimeType Optional mime type for the file.\n' +
    '@param rootType The root type of the entry.\n' +
    '@return Returns string that represents the file icon. It refers to a file\n' +
    "'images/filetype_' + icon + '.png'.",
  'Handles the FileData and FilesAppEntry types.',
  'Handles other types of entries.',
  'Returns a string to be used as an attribute value to customize the entry\n' +
    'icon.\n' +
    '@param rootType The root type of the entry.',
  'Overrides per RootType and defined by fullPath.'
]
file_type_unittest.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests that Downloads icon is customized within Downloads root, but not in\n' +
    'others.',
  "Guess by mime type only, name won't give a hint.",
  'Guess by name only.',
  'Guess by both factors.',
  'Guess by both factors possible, but names are misleading.'
]
file_types_base.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'A special placeholder for unknown types with no extension.',
  'Returns the final extension of a file name, check for the last two dots\n' +
    'to distinguish extensions like ".tar.gz" and ".gz".',
  'No dot, so no extension.',
  'Only one dot, so only 1 extension.',
  'More than 1 dot/extension: e.g. ".tar.gz".',
  "Double extension doesn't exist in the map, return the single one.",
  'Gets the file type object for a given file name (base name). Use getType()\n' +
    "if possible, since this method can't recognize directories.",
  'Unknown file type.',
  'subtype is the extension excluding the first dot.'
]
file_types_base_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Simple cases: file name only.',
  'Complex cases, directory and file name.',
  'Archive types.',
  'Support upper case file name.',
  'Unknown files.'
]
files_app_entry_types.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Entry-like types for Files app UI.\n' +
    'This file defines the interface |FilesAppEntry| and some specialized\n' +
    'implementations of it.\n' +
    'These entries are intended to behave like the browser native FileSystemEntry\n' +
    '(aka Entry) and FileSystemDirectoryEntry (aka DirectoryEntry), providing an\n' +
    'unified API for Files app UI components. UI components should be able to\n' +
    'display any implementation of FilesAppEntry.\n' +
    'The main intention of those types is to be able to provide alternative\n' +
    'implementations and from other sources for "entries", as well as be able to\n' +
    'extend the native "entry" types.\n' +
    'Native Entry:\n' +
    'https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry\n' +
    'Native DirectoryEntry:\n' +
    'https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader',
  'Generalized entry and directory entry definitions.',
  'FilesAppEntry represents a single Entry (file, folder or root) in the Files\n' +
    'app. Previously, we used the Entry type directly, but this limits the code to\n' +
    "only work with native Entry type which can't be instantiated in JS.\n" +
    'For now, Entry and FilesAppEntry should be used interchangeably.\n' +
    'See also FilesAppDirEntry for a folder-like interface.\n' +
    'TODO(lucmult): Replace uses of Entry with FilesAppEntry implementations.',
  "@returns the class name of this object. It's a workaround for the fact that\n" +
    'an instance created in the foreground page and sent to the background page\n' +
    "can't be checked with `instanceof`.",
  'This attribute is defined on Entry.\n' +
    '@return true if this entry represents a Directory-like entry, as\n' +
    'in have sub-entries and implements {createReader} method.',
  'This attribute is defined on Entry.\n' +
    '@return true if this entry represents a File-like entry.\n' +
    'Implementations of FilesAppEntry are expected to have this as true.\n' +
    'Whereas implementations of FilesAppDirEntry are expected to have this as\n' +
    'false.',
  'This attribute is defined on Entry.\n' +
    "@return absolute path from the file system's root to the entry. It can also\n" +
    'be thought of as a path which is relative to the root directory, prepended\n' +
    'with a "/" character.',
  'This attribute is defined on Entry.\n' +
    '@return the name of the entry (the final part of the path, after the last.',
  'This method is defined on Entry.',
  '@return a string used to compare entries. It should return an unique\n' +
    "identifier for such entry, usually prefixed with it's root type like:\n" +
    '"fake-entry://unique/path/to/entry".\n' +
    'This method is defined on Entry.',
  'eslint-disable-next-line @typescript-eslint/naming-convention',
  'Gets metadata, such as "modificationTime" and "contentMimeType".',
  'Returns true if this entry object has a native representation such as Entry\n' +
    'or DirectoryEntry, this means it can interact with VolumeManager.',
  'Returns a FileSystemEntry if this instance has one, returns null if it\n' +
    "doesn't have or the entry hasn't been resolved yet. It's used to unwrap a\n" +
    'FilesAppEntry to be able to send to FileSystem API or fileManagerPrivate.',
  'Interface with minimal API shared among different types of FilesAppDirEntry\n' +
    'and native DirectoryEntry. UI components should be able to display any\n' +
    'implementation of FilesAppEntry.\n' +
    'FilesAppDirEntry represents a DirectoryEntry-like (folder or root) in the\n' +
    "Files app. It's a specialization of FilesAppEntry extending the behavior for\n" +
    'folder, which is basically the method createReader.\n' +
    'As in FilesAppEntry, FilesAppDirEntry should be interchangeable with Entry\n' +
    'and DirectoryEntry.',
  '@return Returns a reader compatible with DirectoryEntry.createReader (from\n' +
    'Web Standards) that reads the children of this instance.\n' +
    'This method is defined on DirectoryEntry.',
  "FakeEntry is used for entries that used only for UI, that weren't generated\n" +
    'by FileSystem API, like Drive, Downloads or Provided.',
  'FakeEntry can be disabled if it represents the placeholder of the real\n' +
    'volume.',
  '@param label Translated text to be displayed to user.\n' +
    '@param rootType Root type of this entry. Used on Recents to filter the\n' +
    'source of recent files/directories. Used on Recents to filter recent\n' +
    'files by their file types.\n' +
    '@param sourceRestriction Used to communicate restrictions about sources to\n' +
    'chrome.fileManagerPrivate.getRecentFiles API.\n' +
    '@param fileCategory Used to communicate category filter to\n' +
    'chrome.fileManagerPrivate.getRecentFiles API.',
  'String used to determine the icon.',
  'FakeEntry can be a placeholder for the real volume, if so\n' +
    'this field will be the volume type of the volume it\n' +
    'represents.',
  'A reader compatible with DirectoryEntry.createReader (from Web Standards)\n' +
    'that reads a static list of entries, provided at construction time.\n' +
    'https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader\n' +
    'It can be used by DirectoryEntry-like such as EntryList to return its\n' +
    'entries.',
  '@param entries_ Array of Entry-like instances that will be returned/read by\n' +
    'this reader.',
  'Reads array of entries via |success| callback.\n' +
    '@param success A callback that will be called multiple times with the\n' +
    'entries, last call will be called with an empty array indicating that no\n' +
    'more entries available.\n' +
    "@param _error A callback that's never called, it's here to match the\n" +
    'signature from the Web Standards.',
  'readEntries is suppose to return empty result when there are no more',
  'files to return, so we clear the entries_ attribute for next call.',
  'Triggers callback asynchronously.',
  'A reader compatible with DirectoryEntry.createReader (from Web Standards),\n' +
    'It chains entries from one reader to another, creating a combined set of\n' +
    'entries from all readers.',
  '@param readers_ Array of all readers that will have their entries combined.',
  'Reverse readers_ so the readEntries can just use pop() to get the next.',
  "@param success returning entries of all readers, it's called with empty\n" +
    'Array when there is no more entries to return.\n' +
    '@param error called when error happens when reading from readers for this\n' +
    'implementation.',
  'If there is no more reader to consume, just return an empty result',
  'which indicates that read has finished.',
  "If there isn't no more readers, finish by calling success with no",
  'results.',
  'Move to next reader and start consuming it.',
  'EntryList, a DirectoryEntry-like object that contains entries. Initially used\n' +
    'to implement "My Files" containing VolumeEntry for "Downloads", "Linux\n' +
    'Files" and "Play Files".',
  'Children entries of this EntryList instance.',
  'EntryList can be a placeholder of a real volume (e.g. MyFiles or\n' +
    'DriveFakeRootEntryList). It can be disabled if the corresponding volume\n' +
    'type is disabled.',
  '@param label: Label to be used when displaying to user, it should\n' +
    'already translated.\n' +
    '@param rootType root type.\n' +
    '@param devicePath Path belonging to the external media device. Partitions\n' +
    'on the same external drive have the same device path.',
  '@return List of entries that are shown as\n' +
    'children of this Volume in the UI, but are not actually entries of the\n' +
    "Volume.  E.g. 'Play files' is shown as a child of 'My files'.",
  'Defaults modificationTime to current time just to have a valid value.',
  'eslint-disable-next-line @typescript-eslint/naming-convention',
  '@param entry that should be added as\n' +
    'child of this EntryList.\n' +
    'This method is specific to EntryList instance.',
  'Only VolumeEntry can have prefix set because it sets on VolumeInfo,',
  'which is then used on LocationInfo/PathComponent.',
  '@return Returns a reader compatible with\n' +
    'DirectoryEntry.createReader (from Web Standards) that reads the children of\n' +
    'this EntryList instance.\n' +
    'This method is defined on DirectoryEntry.',
  'This method is specific to VolumeEntry/EntryList instance.\n' +
    'Note: we compare the volumeId instead of the whole volumeInfo reference\n' +
    'because the same volume could be mounted multiple times and every time a\n' +
    'new volumeInfo is created.\n' +
    '@return index of entry on this EntryList or -1 if not found.',
  'Removes the first volume with the given type.\n' +
    '@param volumeType desired type.\n' +
    'This method is specific to VolumeEntry/EntryList instance.\n' +
    '@return if entry was removed.',
  'Removes all entries that match the rootType.\n' +
    '@param rootType to be removed.\n' +
    'This method is specific to VolumeEntry/EntryList instance.',
  'Removes all entries that match the volumeType.\n' +
    '@param volumeType to be removed.\n' +
    'This method is specific to VolumeEntry/EntryList instance.',
  'Removes the entry.\n' +
    '@param entry to be removed.\n' +
    'This method is specific to EntryList and VolumeEntry instance.\n' +
    '@return true if entry was removed.',
  'EntryList can be a placeholder for the real volume (e.g. MyFiles or\n' +
    'DriveFakeRootEntryList), if so this field will be the volume type of the\n' +
    'volume it represents.',
  'A DirectoryEntry-like which represents a Volume, based on VolumeInfo.\n' +
    'It uses composition to behave like a DirectoryEntry and proxies some calls\n' +
    'to its VolumeInfo instance.\n' +
    "It's used to be able to add a volume as child of |EntryList| and make volume\n" +
    'displayable on file list.',
  "Additional entries that will be displayed together with this Volume's\n" +
    'entries.',
  '@param volumeInfo VolumeInfo for this entry.',
  '@return List of entries that are shown as\n' +
    'children of this Volume in the UI, but are not\n' +
    "actually entries of the Volume.  E.g. 'Play files' is\n" +
    "shown as a child of 'My files'.  Use createReader to find\n" +
    "real child entries of the Volume's filesystem.",
  '@see https://github.com/google/closure-compiler/blob/mastexterns/browser/fileapi.js\n' +
    '@param path Entry fullPath.',
  '@see https://github.com/google/closure-compiler/blob/mastexterns/browser/fileapi.js',
  'eslint-disable-next-line @typescript-eslint/naming-convention',
  'String used to determine the icon.',
  'callback, it returns itself since EntryList is intended to be used as\n' +
    'root node and the Web Standard says to do so.\n' +
    '@param _error callback, not used for this implementation.',
  '@return Returns a reader from root entry, which is compatible with\n' +
    'DirectoryEntry.createReader (from Web Standards). This method is defined on\n' +
    'DirectoryEntry.',
  '@param entry An entry to be used as prefix of this instance on breadcrumbs\n' +
    'path, e.g. "My Files > Downloads", "My Files" is a prefixEntry on\n' +
    '"Downloads" VolumeInfo.',
  '@param entry that should be added as child of this VolumeEntry. This method\n' +
    'is specific to VolumeEntry instance.',
  'Only VolumeEntry can have prefix set because it sets on',
  'VolumeInfo, which is then used on',
  'LocationInfo/PathComponent.',
  "that's desired to be removed.\n" +
    'This method is specific to VolumeEntry/EntryList instance.\n' +
    'Note: we compare the volumeId instead of the whole volumeInfo reference\n' +
    'because the same volume could be mounted multiple times and every time a\n' +
    'new volumeInfo is created.\n' +
    '@return index of entry within VolumeEntry or -1 if not found.',
  'Removes the first volume with the given type.\n' +
    '@param volumeType desired type.\n' +
    'This method is specific to VolumeEntry/EntryList instance.\n' +
    '@return if entry was removed.',
  'Removes all entries that match the rootType.\n' +
    '@param rootType to be removed.\n' +
    'This method is specific to VolumeEntry/EntryList instance.',
  'Removes all entries that match the volumeType.\n' +
    '@param volumeType to be removed.\n' +
    'This method is specific to VolumeEntry/EntryList instance.',
  'Removes the entry.\n' +
    '@param entry to be removed.\n' +
    'This method is specific to EntryList and VolumeEntry instance.\n' +
    '@return if entry was removed.',
  "FakeEntry is used for entries that used only for UI, that weren't generated\n" +
    'by FileSystem API, like Drive, Downloads or Provided.',
  '@param label Translated text to be displayed to user.\n' +
    '@param rootType Root type of this entry. used on Recents to filter the\n' +
    'source of recent files/directories. used on Recents to filter recent\n' +
    'files by their file types.\n' +
    '@param sourceRestriction Used to communicate restrictions about sources to\n' +
    'chrome.fileManagerPrivate.getRecentFiles API.\n' +
    '@param fileCategory Used to communicate file-type filter to\n' +
    'chrome.fileManagerPrivate.getRecentFiles API.',
  "FakeEntry is used as root, so doesn't have a parent and should return\n" +
    'itself. callback, it returns itself since EntryList is intended to be used\n' +
    'as root node and the Web Standard says to do so.\n' +
    '@param _error callback, not used for this implementation.',
  'eslint-disable-next-line @typescript-eslint/naming-convention',
  '@return List of entries that are shown as children of this Volume in the\n' +
    "UI, but are not actually entries of the Volume.  E.g. 'Play files' is\n" +
    "shown as a child of 'My files'.",
  'String used to determine the icon.',
  "When Drive volume isn't available yet, the",
  'FakeEntry should show the "drive" icon.',
  '@return Returns a reader compatible with DirectoryEntry.createReader (from\n' +
    'Web Standards) that reads 0 entries.',
  'FakeEntry can be a placeholder for the real volume, if so this field will\n' +
    'be the volume type of the volume it represents.',
  'Recent rootType has no corresponding volume',
  'type, and it will throw error in the below',
  'getVolumeTypeFromRootType() call, we need to',
  'return null here.',
  'GuestOsPlaceholder is used for placeholder entries in the UI, representing\n' +
    "Guest OSs (e.g. Crostini) that could be mounted but aren't yet.",
  '@param label Translated text to be displayed to user.\n' +
    '@param guest_id Id of the guest\n' +
    '@param vm_type Type of the underlying VM',
  'String used to determine the icon.',
  'eslint-disable-next-line @typescript-eslint/naming-convention',
  'OneDrivePlaceholder is used to represent OneDrive in the UI, before being\n' +
    'mounted and set up.',
  'eslint-disable-next-line @typescript-eslint/naming-convention',
  'TODO(b/340168761): Use proper icon.'
]
files_app_entry_types_unittest.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Creates a new volume with a single, mock VolumeEntry.',
  'Create the VolumeEntry via casting (duck typing).',
  'Tests constructor and default public attributes.',
  'How many times the reader callback |accumulateResults| has been called?',
  'How many times it was called with results?',
  "It's called with readerResult==[] a last time to indicate no more files.",
  "readEntries runs asynchronously, so let's wait it to be called.",
  'accumulateResults should be called 2x in normal conditions;',
  'Now we can check the final result.',
  'Tests method EntryList.getParent.',
  "EntryList should return itself since it's a root and that's what the web",
  'spec says.',
  'Tests method EntryList.addEntry.',
  "Tests EntryList's methods addEntry, findIndexByVolumeInfo,\n" +
    'removeByVolumeType, removeAllByRootType, removeChildEntry.',
  'Test findIndexByVolumeInfo.',
  'Test removeByVolumeType.',
  "Now Crostini volume doesn't exist anymore, so should return False.",
  'Test removeAllByRootType.',
  'Test removeChildEntry.',
  'Nothing left to remove.',
  "Tests VolumeEntry's methods findIndexByVolumeInfo, removeByVolumeType,\n" +
    'removeAllByRootType, removeChildEntry.',
  'Test findIndexByVolumeInfo.',
  'Test removeByVolumeType.',
  "Now crostini volume doesn't exist anymore, so should return False.",
  'Test removeAllByRootType.',
  'Test removeChildEntry.',
  'Nothing left to remove.',
  'Tests method EntryList.getMetadata.',
  "getMetadata runs asynchronously, so let's wait it to be called.",
  `Now we can check the final result, it returns "now", so let's just`,
  'check the type and 1 attribute here.',
  'Tests StaticReader.readEntries.',
  'How many times the reader callback |accumulateResults| has been called?',
  'merge on testResults.',
  "readEntries runs asynchronously, so let's wait it to be called.",
  'accumulateResults should be called 2x in normal conditions;',
  'Now we can check the final result.',
  'Tests CombinedReader.readEntries.',
  'How many times the reader callback |accumulateResults| has been called?',
  'merge on testResults.',
  "readEntries runs asynchronously, so let's wait it to be called.",
  'accumulateResults should be called 2x in normal conditions;',
  'Now we can check the final result.',
  'merge on testResults.',
  "readEntries runs asynchronously, so let's wait it to be called.",
  'accumulateResults should be called 2x in normal conditions;',
  'Now we can check the final result.',
  'Returns an object that can be used as displayRoot on a FakeVolumeInfo.\n' +
    'VolumeEntry delegates many attributes and methods to displayRoot.',
  'Tests VolumeEntry constructor and default public attributes/getter/methods.',
  'Downloads volume is displayed with MyFiles icon.',
  "readEntries runs asynchronously, so let's wait it to be called.",
  'Now we can check the final result.',
  "Tests VolumeEntry createReader when root entry isn't resolved yet.",
  "A VolumeInfo that doesn't resolve the display root.",
  'Do nothing here.',
  "readEntries runs asynchronously, so let's wait it to be called.",
  'Now we can check the final result.',
  'Tests VolumeEntry getFile and getDirectory methods.',
  "Tests VolumeEntry which initially doesn't have displayRoot.",
  'Create an entry using a VolumeInfo without displayRoot.',
  'rootEntry_ starts as null.',
  'Eventually rootEntry_ gets the value.',
  'Tests VolumeEntry.getParent',
  "VolumeEntry should return itself since it's a root and that's what the",
  'web spec says.',
  'Tests VolumeEntry.getMetadata',
  "getMetadata runs asynchronously, so let's wait it to be called.",
  'Test EntryList.addEntry sets prefix on VolumeEntry.',
  'entryList is parent of volumeEntry so it should be its prefix.',
  'Test FakeEntry, which is only static data.',
  'Check sourceRestriction constructor args.',
  'Returns default initialized values (current date and 0 size).',
  'Should return itself.',
  'It should be called for getMetadata and for getParent.'
]
files_app_state.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
files_event_target.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '`FilesEventTarget` is a strongly typed version of EventTarget, it accepts a\n' +
    'generic `EventMap` to restrict what kind of custom events it can add/remove.\n' +
    'For example:\n' +
    '```\n' +
    'type MyCustomEvent = CustomEvent<{ data: xxx }>\n' +
    'interface MyEventMap extend CustomEventMap {\n' +
    "'my-event': MyCustomEvent;\n" +
    '}\n' +
    'class MyClass extends FilesEventTarget<MyEventMap> {}\n' +
    '```\n' +
    "We rely on TS's declaration merge to support both typing and implementation.\n" +
    'The above interface will provide the typing and the below class (same name)\n' +
    'will provide the actual implementation (no implementation override, we just\n' +
    'use whatever is provided by the native EventTarget).',
  "TS is complaining `EventMap` is not used and we can't use `_EventMap` here",
  'because we need to keep the class and interface exactly the same to do',
  'declaration merge, hence adding the eslint-disable below.',
  'eslint-disable-next-line @typescript-eslint/no-unused-vars'
]
filtered_volume_manager.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Implementation of VolumeInfoList for FilteredVolumeManager.\n' +
    'In foreground/ we want to enforce this list to be filtered, so we forbid\n' +
    'adding/removing/splicing of the list.\n' +
    'The inner list ownership is shared between FilteredVolumeInfoList and\n' +
    'FilteredVolumeManager to enforce these constraints.',
  "Volume types that match the Android 'media-store-files-only' volume filter,\n" +
    'viz., the volume content is indexed by the Android MediaStore.',
  'Thin wrapper for VolumeManager. This should be an interface proxy to talk\n' +
    'to VolumeManager. This class also filters some "disallowed" volumes;\n' +
    'for example, Drive volumes are dropped if Drive is disabled, and read-only\n' +
    'volumes are dropped in save-as dialogs.',
  'VolumeManager.volumeInfoList property accessed by callers.',
  "True if |volumeFilter| contains the 'fusebox-only' filter. SelectFileAsh\n" +
    '(Lacros) file picker sets this filter.',
  "True if |volumeFilter| contains the 'media-store-files-only' filter.\n" +
    'Android (ARC) file picker sets this filter.',
  'True if chrome://flags#fuse-box-debug is enabled. This shows additional\n' +
    'UI elements, for manual fusebox testing.',
  'Tracks async initialization of volume manager.',
  '@param allowedPaths_ Which paths are supported in the Files app dialog.\n' +
    '@param writableOnly_ If true, only writable volumes are returned.\n' +
    'volumeManagerGetter Promise that resolves when the VolumeManager has\n' +
    'been initialized.\n' +
    '@param volumeManagerGetter_ Promise that resolves when the VolumeManager\n' +
    'has been initialized.\n' +
    '@param volumeFilter Array of Files app mode dependent volume filter names\n' +
    'from Files app launch params, [] typically.\n' +
    "@param disabledVolumes_ List of volumes that should be visible but can't be\n" +
    'selected.',
  'List of disabled volumes.',
  'True if the volume content is indexed by the Android MediaStore.',
  'Checks if a volume is allowed.',
  'If the media store filter is enabled and the volume is not supported',
  'by the Android MediaStore, remove the volume from the UI.',
  'Volumes come in three categories: NAT, FSF and FWF.',
  '',
  "- NAT volumes are 'native'. Their '/foo/bar.dat' file paths are visible",
  'at the kernel level (and hence visible to all chromes).',
  "- FSF (Foreign Sans (without) FuseBox) volumes are 'virtual',",
  "non-native. Their '/fake/file.paths' file paths are only visible to",
  'ash-chrome. An example of this is attaching a phone to a Chromebook',
  "by a USB cable and viewing the phone's Downloads folder on the",
  "Chromebook's file manager, via MTP (Media Transfer Protocol).",
  '- FWF (Foreign With FuseBox) volumes use FuseBox to provide',
  'kernel-visible file paths for non-native volumes, so that',
  "lacros-chrome's file manager can also read MTP volumes.",
  '',
  'In terms of boolean expressions:',
  '',
  '- NAT: isNative(volumeType)',
  "- FSF: !isNative(volumeType) && (diskFileSystemType !== 'fusebox')",
  "- FWF: !isNative(volumeType) && (diskFileSystemType === 'fusebox')",
  '',
  'Note that both FSF-MTP and FWF-MTP volumes have the same volumeType',
  'value: VolumeType.MTP. Their FSF/FWF-ness (FuseBox-ness) is instead',
  'carried by the diskFileSystemType field.',
  '',
  "As of February 2024, when attaching a phone, Chrome's C++ will actually",
  'create two MTP volumes - FSF and FWF variants - and it is up to the',
  'TypeScript code to filter out (hide) one of them. FSF-MTP and FWF-MTP',
  'are roughly equivalent, in terms of functionality. But in terms of',
  'performance, FWF-MTP has higher overheads (as it indirects through the',
  "kernel's FUSE protocol and other IPC). Hence, we prefer FSF-MTP when",
  "feasible (i.e. when in ash-chrome) but FWF-MTP when FSF-MTP won't work",
  'at all (i.e. when in lacros-chrome). In this TypeScript code, being in',
  'lacros-chrome is represented by the isFuseBoxOnly_ field.',
  '',
  "There's also the isFuseBoxDebugEnabled_ field, corresponding to",
  'chrome://flags#fuse-box-debug. When true, we should show both FSF and',
  'FWF volumes, for manual testing. But normally, we should show only one',
  'of the FSF and FWF categories.',
  '',
  'FuseBox (and its FWF volumes) was invented in 2021. Before then, there',
  'were only NAT and FSF volumes: native and non-native. There was also the',
  "AllowedPaths.NATIVE_PATH enum value, which originally meant 'only",
  "native': only NAT. After FuseBox was invented, AllowedPaths.NATIVE_PATH",
  "was retconned to mean 'kernel-visible' here: NAT or FWF.",
  '',
  'In the long term, we might be able to remove the NATIVE_PATH concept',
  'here (or remove it entirely). The original authors of that NATIVE_PATH',
  "code no longer maintain it, so it's hard to be sure, but it dates from a",
  'time before FuseBox but also possibly where non-native volume types like',
  "FSP (File System Provider) or MTP didn't have good write-support and,",
  'for some workflows, read-support was facilitated by first downloading a',
  "virtual file's contents to a temporary 'snapshot file' and passing on",
  `the snapshot file path. When showing e.g. a browser's "Save As" dialog,`,
  "we'd therefore want to hide FSP, MTP, etc. volumes and an easy way to do",
  'that might have been to hide non-native volumes.',
  '',
  'However, "Save As" passes NATIVE_PATH and combining that with FSF',
  'volumes currently crashes here:',
  'https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/ash/extensions/file_manager/private_api_util.cc;l=83;drc=ccce03e75fc4822e12fb63e60021e0a5e5e9f5b0',
  "Its 'unreachable' comment is from 2014",
  '(https://codereview.chromium.org/339503003 and',
  'https://crrev.com/c/1868529) but things have changed since then.',
  'fwf is equivalent to (!nat && !fsf).',
  'chrome://flags#fuse-box-debug is enabled. Show everything.',
  "We are in lacros-chrome. SelectFileAsh needs 'kernel-visible',",
  'which means nat (native) or fwf (foreign-with-fusebox) volumes.',
  'We are in ash-chrome. If not nat (native), prefer fsf',
  '(foreign-sans-fusebox) over fwf (foreign-with-fusebox).',
  "'Kernel-visible' means native (nat) or fusebox (fwf) volumes.",
  'Async part of the initialization.',
  'Subscribe to VolumeManager.',
  "Dispatch 'drive-connection-changed' to listeners, since the return value",
  'of FilteredVolumeManager.getDriveConnectionState() can be changed by',
  'setting this.volumeManager_.',
  'Cache volumeInfoList.',
  'Subscribe to VolumeInfoList.',
  "In VolumeInfoList, we only use 'splice' event.",
  'Disposes the instance. After the invocation of this method, any other\n' +
    'method should not be called.',
  'Called on events sent from VolumeManager. This has responsibility to\n' +
    're-dispatch the event to the listeners.\n' +
    '@param event Custom event object sent from VolumeManager.',
  'Note: Can not re-dispatch the same |event| object, because it throws a',
  'runtime "The event is already being dispatched." error.',
  'Called on events of modifying VolumeInfoList.\n' +
    '@param event Event object sent from VolumeInfoList.',
  'Filters some volumes.',
  'Ensures the VolumeManager is initialized, and then invokes callback.\n' +
    'If the VolumeManager is already initialized, callback will be called\n' +
    'immediately.\n' +
    '@param callback Called on initialization completion.',
  ... 12 more items
]
filtered_volume_manager_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Create a new MockVolumeManager for each test fixture.',
  'Create mock volume manager.',
  'Patch its addEventListener, removeEventListener methods to make them log',
  '(instead of throw) "not implemented", since those throw events break the',
  'FilteredVolumeManager initialization code in tests.',
  'Tests FilteredVolumeManager default volume filter.',
  'Create mock volume manager.',
  'Get `DRIVE` volume.',
  'Get `DOWNLOADS` volume.',
  'Add `MTP` volume.',
  'Add `MTP` fusebox volume.',
  'Add `DOCUMENTS_PROVIDER` volume.',
  'Check: volumeManager.volumeInfoList should have 5 volumes.',
  'Default volume filter []: FilteredVolumeManager should remove fusebox\n' +
    'volumes from the files app UI.',
  'Check: hasDisabledVolumes() should return false.',
  'Check: getFuseBoxOnlyFilterEnabled should return false.',
  'Check: getMediaStoreFilesOnlyFilterEnabled should return false.',
  'Check: filteredVolumeManager.volumeInfoList should have 4 volumes.',
  'Get `DRIVE` volume.',
  'Get `DOWNLOADS` volume.',
  'Get `MTP` volume.',
  'Check: the MTP volume should be a normal volume.',
  'Get `DOCUMENTS_PROVIDER` volume.',
  'Check: the DOCUMENTS_PROVIDER volume should be a normal volume.',
  "Tests FilteredVolumeManager 'fusebox-only' volume filter.",
  'Create mock volume manager.',
  'Get `DRIVE` volume.',
  'Get `DOWNLOADS` volume.',
  'Add `MTP` volume.',
  'Add `MTP` fusebox volume.',
  'Add `DOCUMENTS_PROVIDER` volume.',
  'Check: volumeManager.volumeInfoList should have 5 volumes.',
  "SelectFileAsh (Lacros) ['fusebox-only'] filter: FilteredVolumeManager\n" +
    'should only show native and fusebox volumes in the files app UI.',
  'Check: hasDisabledVolumes() should return false.',
  'Check: getFuseBoxOnlyFilterEnabled should return true.',
  'Check: getMediaStoreFilesOnlyFilterEnabled should return false.',
  'Check: filteredVolumeManager.volumeInfoList should have 3 volumes.',
  'Get `DRIVE` volume.',
  'Get `DOWNLOADS` volume.',
  'Get `MTP` volume.',
  'Check: the MTP volume should be a fusebox volume.',
  "Tests FilteredVolumeManager 'media-store-files-only' volume filter.",
  'Create mock volume manager.',
  'Get `DRIVE` volume.',
  'Get `DOWNLOADS` volume.',
  'Add `ARCHIVE` volume.',
  'Add `REMOVABLE` volume.',
  'Add `MTP` volume.',
  'Add `MTP` fusebox volume.',
  'Add `DOCUMENTS_PROVIDER` volume.',
  'Add `PROVIDED` volume.',
  'Add `PROVIDED` fusebox volume.',
  'Add `SMB` volume.',
  'Check: volumeManager.volumeInfoList should have 10 volumes.',
  "ArcSelectFile ['media-store-files-only'] filter: FilteredVolumeManager\n" +
    'should only allow volumes that are indexed by the Android MediaStore.',
  'Check: hasDisabledVolumes() should return false.',
  'Check: getFuseBoxOnlyFilterEnabled should return false.',
  'Check: getMediaStoreFilesOnlyFilterEnabled should return true.',
  'Check: filteredVolumeManager.volumeInfoList should have 2 volumes.',
  'Get `DOWNLOADS` volume.',
  'Get `REMOVABLE` volume.',
  'Tests the disabled volume related functions.',
  'Create mock volume manager.',
  'Get `DRIVE` volume.',
  'Get `DOWNLOADS` volume.',
  'Add `MTP` volume.',
  'Add `MTP` fusebox volume.',
  'Add `DOCUMENTS_PROVIDER` volume.',
  'Check: volumeManager.volumeInfoList should have 5 volumes.',
  'Check: hasDisabledVolumes() should return true.',
  'Check: isDisabled() should return true for DRIVE.',
  'Check: isDisabled() should return false for REMOVABLE.'
]
flags.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Whether the Files app integration with DLP (Data Loss Prevention) is enabled.',
  'Returns true if FuseBoxDebug flag is enabled.',
  'Returns true if GuestOsFiles flag is enabled.',
  'Returns true if the cros-components flag is enabled.',
  'Returns true if DriveFsMirroring flag is enabled.',
  'Returns true if FilesSinglePartitionFormat flag is enabled.',
  'Returns whether the DriveFsBulkPinning feature flag is enabled.',
  'Returns true if FilesMaterializedViews flag is enabled.',
  'Returns true if SkyVaultV2 flag is enabled.'
]
glitch.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Possible error metrics. We allow for errors intercepted by an error counter.\n' +
    'These are unhandled errors and promise rejections.\n' +
    'These values are persisted to logs. Entries should not be renumbered and\n' +
    'numeric values should never be reused.\n' +
    'Must be kept in synch with FileManagerGlitch defined in\n' +
    '//tools/metrics/histograms/enums.xml',
  'Do not use it to report all caught exceptions. Only those exceptions that',
  'we catch to work around errors that should never occur.',
  '@param glitchType What type of glitch was it.'
]
icon_util.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file contains utils for working with icons.',
  'Return icon name for the VM type.'
]
lru_cache.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'A linked-list node which holds data for cache entry such as key, value, size.',
  'Container of the list of cache nodes.',
  'Removes a node from this list.',
  'Adds a node at the head of this list.',
  'Returns the last node of the list, or null if the list has no nodes.',
  'Cache management class implementing LRU algorithm.',
  '@param maxSize_ Maximum total size of items this cache can hold.\n' +
    'When items are put without specifying their sizes, their sizes are\n' +
    'treated as 1 and the |maxSize_| can be interpreted as the maximum\n' +
    'number of items. If items are put with specifying their sizes in bytes,\n' +
    'the |maxSize_| can be interpreted as the maximum number of bytes.',
  'Returns a cached item corresponding to the given key. The referenced item\n' +
    "will be the most recently used item and won't be evicted soon.",
  'Returns a cached item corresponding to the given key without making the\n' +
    'referenced item the most recently used item.',
  'Returns true if the cache contains the key.',
  'Saves an item in this cache. The saved item will be the most recently used\n' +
    "item and won't be evicted soon. If an item with the same key already exists\n" +
    "in the cache, the existing item's value and size will be updated and the\n" +
    'item will become the most recently used item.\n' +
    '@param key Key to find the cached item later.\n' +
    '@param value Value of the item to be cached.\n' +
    '@param size Size of the put item. If not specified, the size\n' +
    'is regarded as 1. If the size is larger than the |maxSize_|, put\n' +
    'operation will be ignored keeping cache state unchanged.',
  'The referenced node may be evicted, so it needs to be updated.',
  'Removes an item from the cache.',
  'Returns the cache size.',
  'Updates max size of the cache.\n@param {number} value New max size.',
  'Returns the max size of the cache.',
  'Evicts the oldest cache node.',
  'Removes given node from this cache store completely.',
  'Prepends given node to the head of list.',
  'Updates the given nodes size and value.',
  'Moves the given node to the head of the linked list.'
]
lru_cache_unittest.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Querying by non-existent key will get null.',
  'Add initial cache set.',
  "Cached keys will be: MRU<-['c','b','a']->LRU",
  "Reference failure doesn't change the order.",
  "Now: MRU<-['c','b','a']->LRU",
  "Putting new value will evict 'a'.",
  "Now: MRU<-['d','c','b']->LRU",
  "Referencing 'b' makes it to MRU.",
  "Now: MRU<-['b','d','c']->LRU",
  "Putting new key will evict 'c'.",
  "Now: MRU<-['e','b','d']->LRU",
  'Putting new value for existing key will make it MRU.',
  "Now: MRU<-['b','e','d']->LRU",
  "Putting 2 new keys will evict 'e', 'd'.",
  "Now: MRU<-['g', 'f', 'b']->LRU",
  "Removing non-existent key won't change the size of cache.",
  'Removing existent key will change the size of cache.',
  'Querying by non-existent key will get null.',
  'Add initial cache set.',
  "Cached keys will be: MRU<-['c(4)','b(3)','a(2)']->LRU",
  "Make 'a' MRU.",
  "Now: MRU<-['a(2)','c(4)','b(3)']->LRU",
  'Adding small item will fit.',
  "Now: MRU<-['d(1)','a(2)','c(4)','b(3)']->LRU",
  'Adding an item whose size is 5 will evict c and b.',
  'Adding an item whose size is bigger than the max size will be ignored.',
  'We need fixed random number sequence to avoid test flakiness, so',
  'RandomeNumberGenerator is used instead of Math.random() here.',
  'Make fixed set of keys.',
  "Adding items won't make the cache's size exceed the max size.",
  "Removing all keys will make the cache's size exactly 0."
]
metrics.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Utility methods for accessing chrome.metricsPrivate API.\n' +
    'To be included as a first script in main.html',
  'A map from interval name to interval start timestamp.',
  'Start the named time interval.\n' +
    'Should be followed by a call to recordInterval with the same name.\n' +
    '@param name Unique interval name.',
  'Convert a short metric name to the full format.',
  'Wrapper method for calling chrome.fileManagerPrivate safely.',
  'Records a value than can range from 1 to 10,000.\n' +
    '@param name Short metric name.\n' +
    '@param value Value to be recorded.',
  'Records a value than can range from 1 to 100.\n' +
    '@param name Short metric name.\n' +
    '@param value Value to be recorded.',
  'Records an elapsed time of no more than 10 seconds.\n' +
    '@param name Short metric name.\n' +
    '@param time Time to be recorded in milliseconds.',
  'Records a boolean value to the given metric.\n' +
    '@param name Short metric name.\n' +
    '@param value The value to be recorded.',
  'Records an action performed by the user.\n' +
    '@param {string} name Short metric name.',
  'Records an elapsed time of no more than 10 seconds.\n' +
    '@param value Numeric value to be recorded in units that match the histogram\n' +
    'definition (in histograms.xml).',
  'Complete the time interval recording.\n' +
    'Should be preceded by a call to startInterval with the same name.\n' +
    '@param {string} name Unique interval name.',
  'Complete the time interval recording into appropriate bucket.\n' +
    'Should be preceded by a call to startInterval with the same |name|.\n' +
    '@param name Unique interval name.\n' +
    '@param numFiles The number of files in this current directory.\n' +
    '@param buckets Array of numbers that correspond to a bucket value, this will\n' +
    'be suffixed to |name| when recorded.\n' +
    '@param tolerance Allowed tolerance for |value| to coalesce into a\n' +
    'bucket.',
  'Record an enum value.\n' +
    '@param name Metric name.\n' +
    '@param value Enum value.\n' +
    '@param validValues Array of valid values or a boundary number\n' +
    '(one-past-the-end) value.',
  'Collect invalid values in the overflow bucket at the end.',
  'Setting min to 1 looks strange but this is exactly the recommended way',
  'of using histograms for enum-like types. Bucket #0 works as a regular',
  'bucket AND the underflow bucket.',
  '(Source: UMA_HISTOGRAM_ENUMERATION definition in',
  'base/metrics/histogram.h)'
]
mock_chrome.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "A wrapper of `typeof chrome` because we can't use `typeof chrome` in\n" +
    'exported function parameters.',
  'Installs a mock object to replace window.chrome in a unit test.',
  'TS thinks the types on both sides are no compatible, hence the "any".',
  'Mocks out the chrome.fileManagerPrivate.onDirectoryChanged and getSizeStats\n' +
    'methods to be useful in unit tests.',
  'Listeners attached to listen for directory changes.\n*',
  'Mocked out size stats to return when testing.',
  'Mocked out drive quota metadata to return when testing.',
  'eslint-disable-next-line @typescript-eslint/ban-ts-comment',
  "@ts-ignore: The file_manager_private.d.ts don't allow to overwrite",
  '`onDirectoryChanged`.',
  'Store a copy of the listener to emit changes to',
  'Returns the stubbed out file stats for a directory change.\n' +
    '@param volumeId The underlying volumeId requesting size stats for.',
  'Sets the size stats for the volumeId, to return when testing.',
  'Remove the sizeStats for the volumeId which can emulate getSizeStats\n' +
    'returning back undefined.\n' +
    '@param volumeId The volumeId to unset.',
  'Returns the stubbed out drive quota metadata for a directory change.',
  'Sets the drive quota metadata to be returned when testing.',
  'Set the drive quota metadata to undefined to emulate getDriveQuotaMetadata_\n' +
    'returning back undefined.',
  'Invoke all the listeners attached to the\n' +
    'chrome.fileManagerPrivate.onDirectoryChanged method.',
  'Mock for chrome.metricsPrivate.\n' +
    'It records the method calls made to chrome.metricsPrivate.\n' +
    'Typical usage:\n' +
    'const mockMetrics = new MockMetrics();\n' +
    '// NOTE: installMockChrome() mocks metricsPrivate by default, which useful\n' +
    "when you don't want to check the calls to metrics.\n" +
    'installMockChrome({\n' +
    'metricsPrivate: mockMetrics,\n' +
    '});\n' +
    '// Run the code under test:\n' +
    'Then check the calls made to metrics private using either:\n' +
    'mockMetrics.apiCalls\n' +
    'mockMetrics.metricCalls',
  'Maps the API name to every call which is an array of the call\narguments.',
  'Maps the metric names to every call with its arguments, similar to\n' +
    '`apiCalls` but recorded by metric instead of API method.',
  'The API has this enum which referenced in the code.',
  'Inconsistent name here because of chrome.metricsPrivate.MetricType.',
  'eslint-disable-next-line @typescript-eslint/naming-convention',
  "Ignore the first position because it's the metric name.",
  'Some APIs uses `metricName` instead of first argument.',
  'To make MockMetrics compatible with chrome.metricsPrivate.'
]
mock_entry.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "Joins paths so that the two paths are connected by only 1 '/'.",
  'Mock class for DOMFileSystem.',
  '@param name Volume ID.\n' +
    '@param rootURL URL string of root which is used in MockEntry.toURL.',
  'Creates file and directory entries for all the given entries.  Entries can\n' +
    "be either string paths or objects containing properties 'fullPath',\n" +
    "'metadata', 'content'.  Paths ending in slashes are interpreted as\n" +
    'directories.  All intermediate directories leading up to the\n' +
    'files/directories to be created, are also created.\n' +
    '@param entries An array of either string file paths, objects containing\n' +
    "'fullPath' and 'metadata', or Entry to populate in this file system.\n" +
    '@param clear If true clears all entries before populating.',
  "If the path doesn't end in a slash, create a file.",
  'Returns all children of the supplied directoryEntry.\n' +
    '@param directory parent directory to find children of.',
  'Add immediate children files and directories...',
  'Clones the entry with the new full path.\n' +
    '@param fullPath New full path.\n' +
    '@param filesystem New file system\n' +
    '@return Cloned entry.',
  'Base class of mock entries.',
  'Name of the entry.',
  'Gets metadata of the entry.',
  'Returns fake URL.',
  'eslint-disable-next-line @typescript-eslint/naming-convention',
  'Gets parent directory.',
  'Moves the entry to the directory.\n' +
    '@param parent Destination directory.\n' +
    '@param newName New name.\n' +
    '@param onSuccess Callback invoked with the moved entry.',
  'For directories, also move all descendant entries.',
  'Removes the entry.',
  'Removes the entry and any children.',
  'Asserts that the entry was removed.',
  'Mock class for FileEntry.',
  'Use create() instead, so the instance gets the |FileEntry| type.',
  'Gets a File that this object represents.',
  'Gets a FileWriter.',
  'Helper to expose methods mixed in via MockEntry to the type checker.',
  'Mock class for FileWriter.',
  'eslint-disable-next-line @typescript-eslint/naming-convention',
  'eslint-disable-next-line @typescript-eslint/naming-convention',
  'eslint-disable-next-line @typescript-eslint/naming-convention',
  'Mock class for DirectoryEntry.',
  'Use create() instead, so the instance gets the DirectoryEntry type.',
  'Returns all children of the supplied directoryEntry.',
  'Returns a file under the directory.',
  'Returns a file under the directory.',
  'Returns a directory under the directory.',
  'Creates a MockDirectoryReader for the entry.',
  'Mock class for DirectoryReader.',
  'Returns entries from the filesystem associated with this directory in\n' +
    'chunks of 2.'
]
progress_center_common.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'State of progress items.',
  'Policy error type. Only applicable if DLP or Enterprise Connectors policies\n' +
    'apply.',
  'Type of progress items.',
  'The item is file copy operation.',
  'The item is file delete operation.',
  'The item is emptying the trash operation.',
  'The item is file extract operation.',
  'The item is file move operation.',
  'The item is file zip operation.',
  'The item is drive sync operation.',
  'The item is restoring the trash.',
  'The item is general file transfer operation.',
  'This is used for the mixed operation of summarized item.',
  'The item is being trashed.',
  'The item is external drive format operation.',
  'The item is archive operation.',
  'The item is external drive partitioning operation.',
  'Visual signals can have an additional button that, when clicked, performs\n' +
    'some arbitrary action. The `text` defines the button text to show and the\n' +
    '`callback` defines the arbitrary action.',
  'Item of the progress center.',
  'Item ID.',
  'State of the progress item.',
  'Message of the progress item.',
  'Source message for the progress item.',
  'Destination message for the progress item.',
  'Number of items being processed.',
  'Max value of the progress.',
  'Current value of the progress.',
  'Type of progress item.',
  'Whether the item represents a single item or not.',
  'If the property is true, only the message of item shown in the progress\n' +
    'center and the notification of the item is created as priority = -1.',
  'Callback function to cancel the item.',
  'Optional callback to be invoked after dismissing the item.',
  'The predicted remaining time to complete the progress item in seconds.',
  'Contains the text and callback on an extra button when the progress\n' +
    'center item is either in COMPLETED, ERROR, or PAUSED state.',
  'In the case of a copy/move operation, whether the destination folder is\n' +
    'a child of My Drive.',
  'The type of policy error that occurred, if any.',
  'The number of files with a policy restriction, if any.',
  'The name of the first file with a policy restriction, if any.',
  "List of files skipped during the operation because we couldn't decrypt\n" +
    'them.',
  'Sets the extra button text and callback. Use this to add an additional\n' +
    'button with configurable functionality.\n' +
    '@param text Text to use for the button.\n' +
    '@param state Which state to show the button for. Currently only\n' +
    '`ProgressItemState.COMPLETED`, `ProgressItemState.ERROR`, and\n' +
    '`ProgressItemState.PAUSED` are supported.\n' +
    '@param callback The callback to invoke when the button is pressed.',
  'Sets the Item ID.',
  'Gets the Item ID.',
  'Gets progress rate in percent.\n' +
    'If the current state is canceled or completed, it always returns 0 or 100\n' +
    'respectively.',
  'Whether the item can be canceled or not.',
  'Clones the item.'
]
recent_date_bucket.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Recent date bucket definition and util functions.',
  'Given a date and now date, return the date bucket it belongs to.',
  "Computes the timestamp based on options. If the options ask for today's\n" +
    'results, it uses the time in ms from midnight. For yesterday, it goes back\n' +
    'by one day from midnight. For week, it goes back by 6 days from midnight.\n' +
    'For a month, it goes back by 30 days since midnight, regardless of how\n' +
    'many days are in the current month. For a year, it goes back by 365 days\n' +
    'since midnight, regardless if the current year is a leap year or not.\n' +
    '@return The earliest timestamp for the given recency option.'
]
recent_date_bucket_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'May 9, 2022, Monday, 12:00pm Local time.',
  'Mar 1, 2022, Tuesday, 8:00am Local time.',
  'Jan 1, 2022, Saturday, 4:00pm Local time.',
  'Future date: June 1, 2022, Wednesday, 12:00pm Local time.',
  'May 9, 2022, Monday, 08:30am Local time.',
  'May 8, 2022, Sunday, 10:30am Local time.',
  'May 7, 2022, Saturday, 07:30am Local time.',
  'May 1, 2022, Monday, 10:30am Local time.',
  'April 28, 2022, Thursday, 10:30am Local time.',
  'Future date: Mar 1, 2022, Tuesday, 12:00pm Local time.',
  'Mar 1, 2022, Tuesday, 3:00am Local time.',
  'Feb 28, 2022, Monday, 08:30am Local time.',
  'Feb 27, 2022, Sunday, 10:30am Local time.',
  'Feb 10, 2022, Thursday, 10:30am Local time.',
  'Future date: Jan 2, 2022, Sunday, 12:00pm Local time.',
  'Jan 1, 2022, Saturday, 08:30am Local time.',
  'Dec 31, 2021, Friday, 10:30am Local time.',
  'Dec 27, 2021, Monday, 07:30am Local time.',
  'Dec 2, 2021, Thursday, 10:30am Local time.',
  'Nov 28, 2021, Sunday, 10:30am Local time.'
]
script_loader.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Script loader allows loading scripts at the desired time.',
  'Used to load scripts at a runtime. Typical use:\n' +
    "await new ScriptLoader('its_time.js').load();\n" +
    'Optional parameters may be also specified:\n' +
    "await new ScriptLoader('its_time.js', {type: 'module'}).load();",
  'Creates a loader that loads the script specified by |src| once the load\n' +
    'method is called. Optional |params| can specify other script attributes.'
]
shared_types.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview The types and enums in this file are used in integration tests.\n' +
    "For this reason we don't want additional imports in here to avoid cascading\n" +
    'importing files.',
  'Paths that can be handled by the dialog opener in native code.',
  'The type of each volume.',
  'List of dialog types.\n' +
    'Keep this in sync with FileManagerDialog::GetDialogTypeAsString, except\n' +
    'FULL_PAGE which is specific to this code.',
  'A list of extensions with a corresponding description for them, e.g.\n' +
    "{ extensions: ['htm', 'html'], description: 'HTML' }",
  'FilesAppState is used in 2 ways:\n' +
    '1. Persist in the localStorage the some state, like current directory,\n' +
    'sorting column options, etc.\n' +
    '2. To open a new window:\n' +
    '2.1, Requests to open a new window set part of these options to configure the\n' +
    'how the new window should behave.\n' +
    '2.2  When the Files app extension is restarted, the background page retrieves\n' +
    'the last state from localStorage for each opened window and re-spawn the\n' +
    'windows with their state.',
  'The desired target directory when opening a new window.',
  'The URL for a file or directory to be selected once a new window is\n' +
    'spawned.',
  'For SaveAs dialog it prefills the <input> for the file name with this\n' +
    'value.\n' +
    'For FilePicker it pre-selects the file in the file list.',
  'Search term to initialize the Files app directly in a search results.',
  "The type of the window being opened, when it's undefined it defaults to\n" +
    'the normal Files app window (non-dialog version).',
  'List of file extensions (.txt, .zip, etc) that will be used by\n' +
    'AndroidAppListModel, when displaying Files app as FilePicker for ARC++.\n' +
    'Files app displays Android apps that can handle such extensions in the\n' +
    'DirectoryTree.',
  'For FilePicker indicates that the "All files" should be displayed in the\n' +
    'file type dropdown in the footer.',
  'Defines what volumes are available in the Files app, when NATIVE_PATH is\n' +
    'used, any virtual volume (FSPs) is hidden.\n' +
    'Defaults to `ANY_PATH_OR_URL` when undefined.',
  'If the Android apps should be shown in the DirectoryTree for FilePicker.',
  'Array of Files app mode dependent volume filter names. Defaults to an\n' +
    'empty Array when undefined, and is the normal case (no filters).\n' +
    'See filtered_volume_manager.js for details about the available volume\n' +
    'filter names and their volume filter effects.',
  'Stats collected about Metadata handling for tests.',
  'Total of entries fulfilled from cache.',
  'Total of entries that requested to backends.',
  'Total of entries that called to invalidate.',
  'Total of entries that called to clear.',
  'Total of calls to function clearAllCache.',
  'Object containing common key modifiers: shift, alt, and ctrl.'
]
storage.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Class used to emit window.localStorage change events to event listeners.\n' +
    'This class does 3 things:\n' +
    '1. Holds the onChanged event listeners for the current window.\n' +
    '2. Sends broadcast event to all windows.\n' +
    '3. Listens to broadcast events and propagates to the listeners in\n' +
    'the current window.\n' +
    "NOTE: This doesn't support the `oldValue` because it's simpler and the\n" +
    "current clients of `onChanged` don't need it.",
  'Storage onChanged event listeners for the current window.',
  '@param storageNamespace_ Storage namespace argument added when calling\n' +
    'listeners.',
  'Event to send local storage changes to all window listeners.',
  'Resets for testing: removes all listeners.',
  'Adds an onChanged event listener for the current window.',
  'Notifies listeners of key value changes.',
  "`oldValue` isn't necessary for the current use case.",
  'Processes storage event and notifies listeners.',
  'This is expected when window.localStorage is used directly instead of',
  '`local.storage` defined below.',
  'Notifies local (current window) listeners of key value changes.',
  'StorageAreaImpl using window.localStorage as the storage area.',
  'Gets values of `keys` and returns them in the callback.',
  'Gets the value of `key` from local storage.',
  'Async version of `this.get()`.',
  'Stores items in local storage.\n' +
    '@param items The items to store.\n' +
    '@param callback Callback to be called when the items have been stored.',
  'Async version of `this.set()`.\n@param items The items to store.',
  'Removes the given `keys` from local storage.',
  'Clears local storage.',
  'Notifies key changes to storage change tracker listeners.'
]
storage_unittest.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Used to store the test listener calls.',
  'Add the test listeners to default onChanged which is a StorageChangeTracker',
  'instance.',
  'Tests that changing the storage.local values is propagated to the listeners\n' +
    'of onChanged.',
  'Check: That the listener receives the update.',
  'Tests the value propagates in its original type, window.localStorage always\n' +
    'returns in string, we use JSON.parse() to convert back to original type.',
  'Check: That the listener from `tracker` receives the update.'
]
test_error_reporting.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Asserts that promise gets rejected.',
  'Logs after the testFunction has run >3x (100ms each sleep).',
  'Waits until testFunction becomes true.\n' +
    '@param testFunction A function which is tested.\n' +
    '@return A promise which is fulfilled when the testFunction becomes true.'
]
translations.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Returns a translated string.\n' +
    'Wrapper function to make dealing with translated strings more concise.\n' +
    'Equivalent to loadTimeData.getString(id).',
  'Returns a translated string with arguments replaced.\n' +
    'Wrapper function to make dealing with translated strings more concise.\n' +
    'Equivalent to loadTimeData.getStringF(id, ...).',
  'Collator for sorting.',
  "Returns normalized current locale, or default locale - 'en'.",
  'Convert a number of bytes into a human friendly format, using the correct\n' +
    'number separators.',
  'Translation identifiers for size units.',
  'Minimum values for the units above.',
  'Rounding with precision.',
  "Less than 1KB is displayed like '80 bytes'.",
  'Up to 1MB is displayed as rounded up number of KBs, or with the desired',
  'number of precision digits.',
  'This loop index is used outside the loop if it turns out |bytes|',
  'requires the largest unit.',
  'Returns the localized name of the root type.',
  '|locationInfo| points to either the root directory of an individual Team',
  'Drive or sub-directory under it, but not the Shared Drives grand',
  'directory. Every Shared Drive and its sub-directories always have',
  'individual names (locationInfo.hasFixedLabel is false). So',
  'getRootTypeLabel() is used by PathComponent.computeComponentsFromEntry()',
  'to display the ancestor name in the breadcrumb like this:',
  'Shared Drives > ABC Shared Drive > Folder1',
  '^^^^^^^^^^^',
  'By this reason, we return the label of the Shared Drives grand root here.',
  'Returns the localized/i18n name of the entry.',
  'Placeholders have locationInfo, but no locationInfo.volumeInfo',
  'so getRootTypeLabel() would return null.',
  'Special case for MyFiles/Downloads, MyFiles/PvmDefault and MyFiles/Camera.',
  'Get the locale based week start from the load time data.',
  'Converts seconds into a time remaining string.',
  'Less than one minute. Display remaining time in seconds.',
  'Less than one hour. Display remaining time in minutes.',
  'Hours but no minutes.',
  'Hours and minutes.',
  'Mapping table of file error name to i18n localized error name.',
  'Returns i18n localized error name for file error |name|.',
  'Get the plural string with a specified count.\n' +
    'Note: the string id to get must be handled by `PluralStringHandler` in C++\n' +
    'side.\n' +
    '@param id The translation string resource id.\n' +
    '@param count The number count to get the plural.',
  'Get the plural string with a specified count and placeholder values.\n' +
    'Note: the string id to get must be handled by `PluralStringHandler` in C++\n' +
    'side.\n' +
    '```\n' +
    '{NUM_FILE, plural,\n' +
    '= 1 {1 file with <ph name="FILE_SIZE">$1<ex>44 MB</ex></ph> size.},\n' +
    'other {# files with <ph name="FILE_SIZE">$1<ex>44 MB</ex></ph> size.}}\n' +
    "await getPluralStringWithPlaceHolders(id, 2, '44 MB')\n" +
    '=> "2 files with 44 MB size"\n' +
    '```\n' +
    '@param id The translation string resource id.\n' +
    '@param count The number count to get the plural.\n' +
    '@param placeholders The placeholder value to replace.'
]
translations_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests the formatting of bytesToString.',
  "Up to 1KB is displayed as 'bytes'.",
  'Up to 1MB is displayed as a number of KBs with no precision digit.',
  'Up to 1GB is displayed as a number of MBs with <= 1 precision digit.',
  'Up to 1TB is displayed as a number of GBs with <= 1 precision digit.',
  'Up to 1PB is displayed as a number of TBs with <= 1 precision digit.',
  'Above 1PB is displayed as a number of PBs with <= 1 precision digit.',
  'Tests the formatting of bytesToString with added precision digits.\n' +
    'Useful information regarding the below assertions:\n' +
    '647 bytes = 0.6318359375 KB.\n' +
    'bytesToString() internally uses Number.toLocaleString() which outputs at most\n' +
    '3 precision digits in en-US.',
  'Up to 1KB formatting unchanged.',
  'Exact values, no trailing 0s regardless of precision.',
  'up to MB, initially no precision digits.',
  'From 1MB, up to 1 precision digit + added precision.',
  'Up to 1TB.',
  'Up to 1PB.',
  'Above 1PB.',
  'Tests the getFileErrorString helper for undefined, null, or empty\n' +
    'string error name input, which should output an i18n FILE_ERROR_GENERIC\n' +
    'error name.\n' +
    "Also tests pre-defined error names ('NotFoundError' and 'PathExistsError'\n" +
    'here), which should output their associated i18n error names.'
]
trash.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Trash implementation is based on\n' +
    'https://specifications.freedesktop.org/trash-spec/trashspec-1.0.html.\n' +
    'When you move /dir/hello.txt to trash, you get:\n' +
    '.Trash/files/hello.txt\n' +
    '.Trash/info/hello.trashinfo\n' +
    '.Trash/files/hello.txt is the original file.  .Trash/files.hello.trashinfo is\n' +
    'a text file which looks like:\n' +
    '[Trash Info]\n' +
    'Path=/dir/hello.txt\n' +
    'DeletionDate=2020-11-02T07:35:38.964Z\n' +
    'TrashEntry combines both files for display.',
  'Configuration for where Trash is stored in a volume.',
  'The id representing this specific TrashConfig.',
  'Volumes supported for Trash, and location of Trash dir. Items will be\n' +
    'searched in order.',
  'MyFiles/Downloads is a separate volume on a physical device, and doing a',
  'move from MyFiles/Downloads/<path> to MyFiles/.Trash actually does a',
  'copy across volumes, so we have a dedicated MyFiles/Downloads/.Trash.',
  'deleteIsForever= true),',
  'deleteIsForever= true),',
  'deleteIsForever= false));',
  'Interval (ms) until items in trash are permanently deleted. 30 days.',
  'Interval (ms) when .trashinfo files with no related files entry can be\n' +
    'considered stale and should be removed. 1 hour.',
  'Returns a list of strings that represent volumes that are enabled for Trash.\n' +
    "Used to validate drag drop data without resolving the URLs to Entry's.",
  'Returns true if all supplied entries reside at a known trash location.',
  'Returns true if all supplied entries are on a volume where delete or empty\n' +
    'from trash will delete forever.',
  'deleteIsForeverOnly= true);',
  "Returns true if all entries are on a trashable volume and they aren't already\n" +
    'trashed.',
  'All trash directories in configuration have a trailing slash, so if the',
  "entry URL is a directory and doesn't have a trailing slash, add one to",
  `ensure a .Trash directory doesn't show a "Move to trash" button.`,
  'Wrapper for /.Trash/files and /.Trash/info directories.',
  'Promise wrapper for FileSystemDirectoryEntry.getDirectory().',
  'Get trash dirs from file system as specified in config.',
  'Represents a file moved to trash. Combines the info from both .Trash/info and\n' +
    './Trash/files.',
  'The underlying filesystem for the volume the .Trash folder resides on.',
  'The trash root type.',
  'The type name of TrashEntry.',
  'True if the trashed item is a file, false otherwise.',
  'True if the trashed item is a directory, false otherwise.',
  'The full path of the trashed item.',
  'Use filesEntry toURL() so this entry can be used as that file to view,\n' +
    'copy, etc.',
  'Adding suppression since this class implements FileSystemEntry from',
  'https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry',
  'eslint-disable-next-line @typescript-eslint/naming-convention',
  'Pass through to getMetadata() of filesEntry, keep size, but use\n' +
    'DeletionDate from infoEntry for modificationTime.\n' +
    '@override Entry',
  'Remove filesEntry first, then remove infoEntry. Overrides Entry.',
  'Pass through to filesEntry. Overrides FileEntry.',
  'Pass through to filesEntry. Overrides DirectoryEntry.',
  'Remove filesEntry first, then remove infoEntry. Overrides DirectoryEntry.',
  'Trash entries should not allow the following methods, specifically `moveTo`\n' +
    'and `copyTo` should be handled by the restore IO task.',
  'We must set entry.isNativeType to true, so that this is not considered a\n' +
    'FakeEntry, and we are allowed to delete the item.',
  'Reads all entries in each of .Trash/info and .Trash/files and produces a\n' +
    'single stream of TrashEntry.',
  'The entries that exist in this .Trash directory.',
  'A directory reader used to read the items out of the .Trash/info directory.',
  'Create a trash entry if infoEntry and matching files entry are valid, else\n' +
    'return null.',
  'Ignore any .trashinfo file with no matching file entry.',
  'Returns the Entry from the cached files entries.',
  'Async version of readEntries(). This function may be called multiple times\n' +
    'and returns an empty result to indicate end of stream.\n' +
    'Reads all items in .Trash/files on first call and caches them. Then reads\n' +
    '1 or more batches of infoReader until we have at least 1 valid result to\n' +
    'send, or reader is exhausted.',
  'Read all of .Trash/files on first call.',
  'If trash dirs do not yet exist, then return successful empty read.',
  'Get all entries in trash/files.',
  'Consume infoReader which is initialized in the first call. Read from',
  '.Trash/info until we have at least 1 result, or end of stream.',
  'In the event the parsed entry was deleted more than 30 days ago,',
  "schedule them for deletion and don't render them in the view.",
  'Any leftover entries in the `infoEntryMap` have no corresponding file',
  'entry. This can be due to 2 possible reasons:',
  '1. An in progress trash operation that has written the trashinfo file',
  'but not moved the corresponding item.',
  '2. The trashinfo has been removed or is dangling from a previously',
  'failed operation.',
  "To avoid (1) check the `modificationDate` and ensure it's >1 hour old,",
  'given a trash operation is atomic (no cross filesystem trashes) this',
  'should be sufficient time to ensure there is no file to be moved.',
  'Record the amount of files seen for this particularly directory reader.',
  'name= `TrashFiles.${this.config_.volumeType}`, result.length);',
  'Root Trash entry sits inside "My files". It shows the combined entries of\n' +
    'trashes defined in TrashConfig.',
  'Returns all the Trash directory readers.',
  'Promisifies retrieval of a files metadata.',
  'The UMA to track the enum that is reported below.',
  'A single item has attempted to be restored but the parent has been removed.',
  'Multiple items have attempted to be restored where they all shared the same',
  'parent folder, but it has been removed.',
  'Multiple items have attempted to be restored and they all have different',
  'parent folders but all the parent folders have been removed.',
  'Multiple items have attempted to be restored from different parents with',
  'some parent folders still existing and some have been removed.',
  'Keep the order of this in sync with RestoreFailedNoParentType in\n' +
    'tools/metrics/histograms/enums.xml.'
]
trusted_script_url_policy_util.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Trusted script URLs used by the Files app.',
  'Create a TrustedTypes script URL policy from a list of allowed sources, if\n' +
    'one does not already exist.\n' +
    'We are storing this policy inside `window` as a global variable, because of\n' +
    "GN's `optimize_webui` concatenating this file multiple times and causing\n" +
    'duplicate policy definitions when we use a local variable.',
  'Create a TrustedTypes script URL policy from a list of allowed sources, and\n' +
    'return a sanitized script URL using this policy.\n' +
    '@param url Script URL to be sanitized.'
]
tslib_shim.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'This file serves as a shim to tslib. Using experimental features like\n' +
    `decorator will make TS generates compiled JS code like "import 'tslib'",\n` +
    "but our existing build toolchain can't handle that import correctly. To\n" +
    'mitigate that, we use "noEmitHelpers: true" in the tsconfig to make sure\n' +
    `it won't generate "import 'tslib'", but this configuration requires the\n` +
    'functions from tslib are available in the global space, hence the assignment\n' +
    'below.\n' +
    'Note: for any functions we expose here, we also need to add function\n' +
    'type declaration to closure type externs in app_window_common.js.'
]
uma.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Keep the order of this in sync with FileManagerVolumeType in\n' +
    'tools/metrics/histograms/enums.xml.',
  'Keep the name and the value in sync with `FileManagerNavigationSurface` in\n' +
    '//tools/metrics/histograms/metadata/file/enums.xml',
  'The ordering is important.',
  'Records the action of opening a file by the file volume type.',
  'Records the action of opening a file by the file navigation surface.*'
]
unittest_util.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Wait for the update (render/re-render) of the `element` to be finished\n' +
    'in unit test.',
  'For LitElement we explicitly await the internal updateComplete promise.',
  'Wait for nested LitElements to finish rendering. Assumes that all nested',
  "elements' render() complete in microtasks.",
  'For others, wait for the next animation frame.',
  'Mock PluralStringProxy in the unit test.'
]
url_constants.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'App ID generated by the SWA framework.',
  'Special key for when we are showing search results. Search results do not\n' +
    'have a corresponding entry in the directory tree. As a result we need to\n' +
    'fake the PathComponent that represents the "current" directory. This constant\n' +
    'corresponds to the key field of the PathComponent object.',
  'The URL of the legacy version of File Manager.',
  'The URL of the System Web App version of File Manager.',
  'The path to the File Manager icon.',
  '@param path relative to the Files app root.\n' +
    '@return The absolute URL for a path within the Files app.',
  '@param path relative to the sandboxed page origin.\n' +
    '@return The absolute URL.',
  '@return The URL of the file that holds Files App icon.'
]
util.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file should contain utility functions used only by the\n' +
    'files app. Other shared utility functions can be found in base/*_util.js,\n' +
    'which allows finer-grained control over introducing dependencies.',
  'Calls the `fn` function which should expect the callback as last argument.\n' +
    'Resolves with the result of the `fn`.\n' +
    'Rejects if there is `chrome.runtime.lastError`.',
  'Mapping table for FileError.code style enum to DOMError.name string.',
  'Extracts path from filesystem: URL.\n' +
    '@return The path if it can be parsed, null if it cannot.',
  '@return True if the Files app is running as an open files or a\n' +
    'select folder dialog. False otherwise.',
  'The last URL with visitURL().',
  'Visit the URL.\n' +
    'If the browser is opening, the url is opened in a new tab, otherwise the url\n' +
    'is opened in a new window.',
  'openURL opens URLs in the primary browser (ash vs lacros) as opposed to',
  'window.open which always opens URLs in ash-chrome.',
  'Return the last URL visited with visitURL().',
  'Returns whether the window is teleported or not.',
  'Runs chrome.test.sendMessage in test environment. Does nothing if running\n' +
    'in production environment.',
  'Extracts the extension of the path.\n' +
    'Examples:\n' +
    "splitExtension('abc.ext') -> ['abc', '.ext']\n" +
    "splitExtension('a/b/abc.ext') -> ['a/b/abc', '.ext']\n" +
    "splitExtension('a/b') -> ['a/b', '']\n" +
    "splitExtension('.cshrc') -> ['', '.cshrc']\n" +
    "splitExtension('a/b.backup/hoge') -> ['a/b.backup/hoge', '']",
  'Checks if an API call returned an error, and if yes then prints it.',
  'Makes a promise which will be fulfilled |ms| milliseconds later.',
  'Makes a promise which will be rejected if the given |promise| is not resolved\n' +
    'or rejected for |ms| milliseconds.',
  'Returns the Files app modal dialog used to embed any files app dialog\n' +
    'that derives from cr.ui.dialogs.',
  'Create a taskID which is a string unique-ID for a task. This is temporary\n' +
    'and will be removed once we use task.descriptor everywhere instead.',
  'Returns a new promise which, when fulfilled carries a boolean indicating\n' +
    'whether the app is in the guest mode. Typical use:\n' +
    'isInGuestMode().then(\n' +
    '(guest) => { if (guest) { ... in guest mode } }',
  'A kind of error that represents user electing to cancel an operation. We use\n' +
    'this specialization to differentiate between system errors and errors\n' +
    'generated through legitimate user actions.',
  'Returns whether the given value is null or undefined.',
  'Bulk pinning should only show visible UI elements when in progress or\n' +
    'continuing to sync.',
  'If the stage is in progress and the bulk pinning preference is enabled,',
  'then the cloud panel should not be visible.',
  'For the PAUSED... states the preference should still be enabled, however,',
  'for the latter the preference will have been disabled.',
  'The native Partial only marks the immediate properties as optional,\n' +
    'DeepPartial is basically a recursive version of Partial: if the immediate\n' +
    'property value is an Object, it allows using partial values for that object.',
  "Get Payload's type from ActionFactory<Payload>."
]
util_unittest.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'In the Extension:',
  'In the SWA:'
]
volume_manager_types.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Type of a file system.',
  'Volume name length limits by file system type.',
  'Type of a navigation root.\n' +
    'Navigation root are the top-level entries in the navigation tree, in the\n' +
    'left hand side.\n' +
    'This must be kept synchronised with the VolumeManagerRootType variant in\n' +
    'tools/metrics/histograms/metadata/file/histograms.xml.',
  'Root for a downloads directory.',
  'Root for a mounted archive volume.',
  'Root for a removable volume.',
  'Root for a drive volume.',
  'The grand root entry of Shared Drives in Drive volume.',
  'Root directory of a Shared Drive.',
  'Root for a MTP volume.',
  'Root for a provided volume.',
  'Fake root for offline available files on the drive.',
  'Fake root for shared files on the drive.',
  'Fake root for recent files on the drive.',
  'Root for media views.',
  'Root for documents providers.',
  'Fake root for the mixed "Recent" view.',
  "'Google Drive' fake parent entry of 'My Drive', 'Shared with me' and",
  "'Offline'.",
  "Root for crostini 'Linux files'.",
  'Root for mountable Guest OSs.',
  'Root for android files.',
  'My Files root, which aggregates DOWNLOADS, ANDROID_FILES and CROSTINI.',
  'The grand root entry of My Computers in Drive volume.',
  'Root directory of a Computer.',
  'Root directory of an external media folder under computers grand root.',
  'Root directory of an SMB file share.',
  'Trash.',
  'Keep the order of this in sync with FileManagerRootType in\n' +
    'tools/metrics/histograms/enums.xml.\n' +
    'The array indices will be recorded in UMA as enum values. The index for\n' +
    'each root type should never be renumbered nor reused in this array.',
  'Error type of VolumeManager.',
  'Internal errors',
  'System events',
  "Source of each volume's data.",
  '@returns if the volume is linux native file system or not. Non-native file\n' +
    'system does not support few operations (e.g. load unpacked extension).',
  'Gets volume type from root type.',
  'Gets root type from volume type.',
  '@returns whether the given `volumeType` is expected to provide third party\n' +
    'icons in the iconSet property of the volume.',
  'List of media view root types.\n' +
    'Keep this in sync with constants in arc_media_view_util.cc.',
  'Gets volume type from root type.',
  'An event name triggered when a user tries to mount the volume which is\n' +
    'already mounted. The event object must have a volumeId property.',
  'This is the top level directory name for Computers in drive that are using\n' +
    'the backup and sync feature.',
  'ID of the Google Photos DocumentsProvider volume.',
  'ID of the MediaDocumentsProvider. All the files returned by ARC source in\n' +
    'Recents have this ID prefix in their filesystem.',
  'Checks if a file entry is a Recent entry coming from ARC source.'
]
volume_manager_types_unittest.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Test that every volumeType has a rootType, and that it maps back to the same',
  'volumeType.',
  'System Internal volumes do not have a corresponding root.',
  'Test that all rootType have a corresponding volumeType, except for "fake"',
  'root types that do not have a volume of their own.',
  'The "Recent" view and "Google Drive" parent entry are not handled in the',
  'switch because they do not have a corresponding volume.',
  'TODO(tapted): Validate this against isFakeEntry(..) when',
  'files_app_entry_types is moved to file_manager/base.',
  'Tests that IsRecentArcEntry() should return true/false if an entry belongs/',
  "doesn't belong to recent.",
  "Deprecated roots shouldn't have an enum on RootType, however all te indexes",
  'in the UMA array has to still match the enums.xml.'
]
breadcrumb_container.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The controller of breadcrumb. The Breadcrumb element only renders a given\n' +
    'path. This controller component is responsible for constructing the path\n' +
    'and passing it to the Breadcrumb element.',
  'Search results do not have the corresponding directory in the',
  'directory tree. When V2 version of search is active, we short-circuit',
  'the process to show the correct label and exit.',
  'If the current location is somewhere in Drive, all files in Drive can',
  'be listed as search results regardless of current location.',
  'In this case, showing current location is confusing, so use the Drive',
  'root "My Drive" as the current location.',
  "The leaf path isn't clickable."
]
breadcrumb_container_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'An instance of BreadcrumbContainer.',
  'Tests that when current directory has "/" in the path, it will be escaped\n' +
    'before passing to the underlying breadcrumb.',
  'Simulate a state change from the store.',
  "Check that breadcrumb's path has been escaped."
]
cloud_panel_container.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Maintains the state of the `<xf-cloud-panel>` and ensures the\n' +
    'information is passed to it appropriately.',
  'The `CloudPanelContainer` acts as a translation layer between the data in the\n' +
    'store relating to bulk pinning and the `<xf-cloud-panel>` element that\n' +
    'presents the data.',
  'The store element.',
  'The previously stored progress, used to identify if any changes have\n' +
    'occurred. Store updates could happen to any key within the store, so make\n' +
    "sure it's to one that this container uses.",
  'The driveFsBulkPinningEnabled preference, used to identify if it has\n' +
    'changed or not.',
  'If true, drive syncing is paused due to both being on a network reporting\n' +
    'as metered and also having the preference of syncing disabled on metered\n' +
    'networks.',
  'Keeps track of the number of updates.\nNOTE: Used for testing only.',
  'When the "Google Drive settings" button is clicked, open OS Settings to the\n' +
    'Google Drive page.',
  'Check if any of the required state has changed between store changes.',
  "If the bulk pinning cloud panel can't be shown, make sure to close any",
  'open variants of it. This ensures if the panel is open when the',
  'preference is disabled, it will not stay open with stale data.',
  'When on a metered network, drive syncing is paused.',
  'If the bulk pinning is paused, this indicates that it is currently',
  'offline or battery saver mode is active.',
  'Not enough space indicates the available local storage is insufficient to',
  'store all the files required by the users My drive.',
  "Files to pin can't be negative the pinned bytes should never exceed",
  'the bytes to pin (>100%).',
  'Updates the underlying panel to the `type` and removes the in progress\n' +
    'attributes.',
  'Clear all the attributes in anticipation of setting new ones.',
  'If in a test environment, keep track of the number of updates that have\n' +
    'been performed based on state changes.'
]
cloud_panel_container_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'An instance of the cloud panel container.',
  'An instance of the `<xf-cloud-panel>`.',
  'A preferences object to initialize the store with that ensures bulk pinning\n' +
    'preference is enabled.',
  'Unsubscribe from the store.',
  'Tests that when bulk pinning is in a progress mode the cloud panel receives\n' +
    'that data as attributes.',
  'Initialize the store with bulk pinning pref enabled.',
  'Setup a syncing state that should be 15% done with 24 items.',
  'Dispatch an update to the store and wait for the panel to have the',
  'attribute `items`.',
  'Assert the items and progress values are representative of the data in the',
  'store.',
  'Tests that if somehow any invalid data makes its way into the store, it\n' +
    "doesn't propagate to the element.",
  'Initialize the store with bulk pinning pref enabled.',
  'Setup a syncing state that should contain invalid data.',
  "Dispatch an update to the store and ensure the panel doesn't get",
  'attributes.',
  'Tests that updates to the store unrelated to bulk pinning OR any duplicate\n' +
    'updates do not get passed onto the underlying element.',
  'Initialize the store with bulk pinning pref enabled.',
  'Start using a basic syncing state.',
  'Dispatch an update to the store and ensure the panel does get attributes.',
  'Update the preferences with new values and ensure the `setAttribute` call',
  "hasn't happened again and the attributes remain the same.",
  'Update the value for `pinnedBytes` and dispatch to the store then assert',
  'more invocations have occurred and the attributes have updated.',
  'Update the bulk pin progress with the exact same data as before, this',
  'should not cause another update and the attributes should not be changed.',
  'Tests that when there are no bytes to be pinned, the percente should be\n' +
    'updated to be 100% as any new user who logs in with no new changes will have\n' +
    'no bytes to pin on initialization.',
  'Initialize the store with bulk pinning pref enabled.',
  'Setup a syncing state that should be 0% done with 0 items.',
  'Dispatch an update to the store and wait for the panel to have the',
  'attribute `items`.',
  'Assert the items and progress values are representative of the data in the',
  'store.',
  'Tests that when a click event is emitted, the correct subpage in settings is\n' +
    'opened.',
  'Mock the fileManagerPrivate API.',
  'Dispatch an event from the cloud panel indicating the drive settings was',
  'clicked.',
  "Wait until the page has called the private API and assert it's the correct",
  'page.',
  "Tests that the element doesn't receive updates when the preference is\n" +
    'disabled, after enabling the preference updates should propagate through.',
  'Initialize the store with bulk pinning disabled.',
  'Setup a syncing state that should be 10% done with 10 items.',
  'Dispatch an update to the store, wait for the store to update before',
  "asserting that the panel doesn't get attributes due to the pref not being",
  'enabled.',
  'Enable the bulk pinning preference and wait for it to update the cloud',
  'panel attributes.',
  'Tests that updating the syncing stage to offline adds the type attribute and\n' +
    'going back to syncing (i.e. back online) removes the type attribute.',
  'Initialize the store with bulk pinning enabled.',
  'Setup a syncing state that should be 10% done with 10 items.',
  'Dispatch an update to the store and ensure the panel does get attributes.',
  'Pausing the bulk pinning operation does not update the attributes except',
  'changing the type attribute to offline.',
  'Switching back into `SYNCING` with new pinned bytes removes the type',
  'attribute and updates the attributes.',
  'Tests that updating the syncing stage to not enough space adds the type\n' +
    'attribute and goes back to syncing (i.e. user has started it again) removes\n' +
    'the type attribute.',
  'Initialize the store with bulk pinning enabled.',
  'Setup a syncing state that should be 10% done with 10 items.',
  'Dispatch an update to the store and ensure the panel does get attributes.',
  'Entering into a not enough space state ensures the type is updated and the',
  'items and percentage attributes are removed.',
  'Switching back into `SYNCING` with new pinned bytes removes the type',
  'attribute and updates the attributes.',
  'Test that any existing properties are removed when moving to the listing\n' +
    'files stage.',
  'Initialize the store with bulk pinning enabled.',
  'Setup a syncing state that should be 10% done with 10 items.',
  'Dispatch an update to the store and ensure the panel does get attributes.',
  'Dispatch an update to the store to move back to the listing files stage,',
  'this should clear the percentage attribute.',
  'Tests that if the user has any files to pin but no bytes (i.e. has ONLY\n' +
    '0-byte files) the percentage is also attached (a pre-requisite to show the\n' +
    'File sync is on page).',
  'Initialize the store with bulk pinning enabled.',
  'Setup a syncing state that should be 10% done with 10 items.',
  'Tests that a metered network update to the store passes the state down to the\n' +
    'cloud panel.',
  'Initialize the store with bulk pinning enabled.',
  'Setup a syncing state that should be 10% done with 10 items.',
  'Entering into a not enough space state ensures the type is updated and the',
  'items and percentage attributes are removed.'
]
directory_tree_container.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview The Directory Tree aka Navigation Tree.',
  'The navigation item data structure, which includes:\n' +
    '* `element`: the corresponding DOM element on the UI (rendered by\n' +
    'XfTreeItem).\n' +
    '* `fileData`: the corresponding file data which backs up this navigation\n' +
    'item.',
  'The navigation root data structure, which includes:\n' +
    '* `element` and `fileData`.\n' +
    '* `androidAppData`: the corresponding android app data which backs up this\n' +
    'navigation item, can be null if the navigation is not backed up by an\n' +
    'android app.',
  'The root tree widget.',
  'Context menu element for root navigation items.',
  'Context menu element for sub navigation items.',
  'Context menu element for disabled navigation items.',
  'Mark the tree item with a specific file key as to be renamed. When rename\n' +
    'is triggered from outside and the item to be renamed is yet to be rendered\n' +
    '(e.g. "New folder" command), we store the file key here in order to attach\n' +
    "the rename input to the tree item when it's rendered.",
  'Mark the tree item with a specific file key as to be focused. When we need\n' +
    'to change the focus to a tree item which is yet to be rendered (e.g. an\n' +
    'item is just renamed and the newly renamed item is not rendered yet), we\n' +
    "store the file key here in order to focus the tree item when it's\n" +
    'rendered.',
  'Sometimes the selected item can be changed from outside (e.g. currently\n' +
    'selected directory item gets deleted, or operations from other place which\n' +
    'triggers the active directory change), if the selected item is also focused\n' +
    'before the change, we need to shift the focus to the newly selected item\n' +
    "after it's rendered. This flag is used to control that.",
  'When current directory changes, if the corresponding tree item has not been\n' +
    'rendered yet, an asynchronous read-sub-directory action will be dispatched\n' +
    'to read the children until we could find the item. During this asynchronous\n' +
    'process, the current directory might change again (either manually by user\n' +
    'or other operations), we need this variable to see if we need to trigger\n' +
    'another read-sub-directories call or not.',
  'The map of the navigation roots and items, from a navigation key to an\n' +
    'object which includes the navigation DOM element and the related data.\n' +
    'Note: we are having 2 separate map for roots and items, because root item\n' +
    'and normal item can have the same key, e.g. for Shortcut item and its\n' +
    'original item, they share the same key but have different DOM elements, so\n' +
    "they can't be in the same map.",
  'Indicate if the RequestAnimationFrame is active for scroll or not, check\n' +
    'the usage in `onTreeScroll_` below.',
  'Navigation roots from the store.',
  'Volumes data from the store.',
  'Folder shortcuts data from the store.',
  'UI entries data from the store.',
  'Android apps data from the store.',
  'For file watcher.',
  'Skip this render, and the refreshNavigationRoots() action will trigger',
  'another call of `onStateChanged`, which will run the re-render logic',
  'below.',
  'When current directory changes in the store, and the selected item in',
  'the tree is different from that, select the corresponding navigation',
  'item.',
  'When navigation roots data changes in the store, re-render all navigation',
  'root items.',
  'Navigation item can be backed up by either a FileData or a',
  'AndroidAppData, we need to compare what we have in the container with the',
  'data in the store to see if it changes or not. When',
  'FileData/AndroidAppData changes in the store, re-render the corresponding',
  'navigation item.',
  'Remove non-exist navigation roots.',
  'Add new navigation roots.',
  "We put the navigationKey on the element's dataset, so when certain",
  'DOM events happens from the element, we know the corresponding',
  'navigation key.',
  'The states here might be lost after `insertBefore`, we need to store',
  'it here and restore it later if needed.',
  "Skip `insertBefore` for the tree item if it's an existing item in",
  "renaming state, otherwise it will interrupt user's input (via",
  'triggering `blur` event). Even we try to re-attach the rename input',
  "after `insertBefore`, it still interrupts user's input.",
  'Always call insertBefore here even if the element already exists,',
  'because the index can change. Calling insertBefore with existing',
  'child element will move it to the correct position.',
  'Use `children` here because `items` is asynchronous.',
  'For existing items, `insertBefore` call above might make the element',
  'lose some status (e.g. focus), check if we need to restore',
  'them or not.',
  'For newly rendered items, check if they are the next item to',
  'focus.',
  'Item with file key to focus is rendered for the first time (e.g.',
  'right after rename finishes), focus on it.',
  "No need to handle `fileKeyToRename_` here, because it's not allowed to",
  'create a new folder in the directory tree root.',
  'The corresponding data is deleted from the store, do nothing here.',
  'Handle navigation items backed up by an android app. Note: only',
  'navigation root item can be backed up by an android app.',
  'Nothing changes, this render might be triggered by its parent.',
  'Setup external link for android app item.',
  'Update new data back to the map.',
  'Handle navigation items backed up by a file data.',
  'Nothing changes, this render might be triggered by its parent.',
  'Add eject button for ejectable item.',
  "Handle navigation item's children.",
  "For disabled tree or collapsed items, we don't render any children",
  "inside, but we always render children for Drive even it's collapsed.",
  'TODO(b/308504417): remove the special case for Drive.',
  'Remove non-exist navigation items.',
  "We put the navigationKey on the element's dataset, so when certain",
  'DOM events happens from the element, we know the corresponding',
  'navigation key.',
  'The states here might be lost after `insertBefore`, we need to store',
  'it here and restore it later if needed.',
  "Skip `insertBefore` for the tree item if it's an existing item in",
  "renaming state, otherwise it will interrupt user's input (via",
  'triggering `blur` event). Even we try to re-attach the rename input',
  "after `insertBefore`, it still interrupts user's input.",
  'Always call insertBefore here even if the element already exists,',
  'because the index can change. Calling insertBefore with existing',
  'child element will move it to the correct position.',
  'Use `.children` instead of `.items` here because `items` is',
  'asynchronous.',
  'For existing items, `insertBefore` call above might make the element',
  'lose some status (e.g. focus), check if we need to restore',
  'them or not.',
  'For newly rendered items, check if they are the next item to',
  'rename/focus.',
  'Item with file key to focus is rendered for the first time (e.g.',
  'right after rename finishes), focus on it.',
  'Item with file key to rename is rendered for the first time (e.g.',
  '"New folder" case), attach the rename input here.',
  'The entries under ODFS are not disabled recursively. Collapse ODFS when',
  'it is disabled.',
  'Update new data to the map.',
  'Update navigation item icon based on the navigation data and the file data.',
  ... 136 more items
]
directory_tree_container_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The directory tree container instance',
  'To store all the directory changed listener.',
  'DirectoryModel and VolumeManager are required for DirectoryTreeContainer.',
  'Mock file manager private API.',
  'Initialize directory tree container.',
  'Unsubscribe from the store.',
  'Returns the directory tree item labels.',
  'Dispatch MyFiles and Drive volumes data to the store.',
  'Prepare data for MyFiles.',
  'Prepare data for Drive.',
  'Add MyFiles children and trigger file watcher change event.',
  'Trigger file watcher event.',
  'Add Drive children and trigger file watcher change event.',
  'Trigger file watcher event.',
  'Add Android app navigation data to the store.',
  'Test case for typical creation of directory tree.\n' +
    'This test expects that the following tree is built.\n' +
    'MyFiles\n' +
    'Google Drive\n' +
    '- My Drive\n' +
    '- Shared with me\n' +
    '- Offline',
  'Add MyFiles and Drive to the store.',
  'At top level, MyFiles and Drive should be listed.',
  'Under the drive item, there exist 3 entries.',
  'There exist 1 my drive entry and 2 fake entries under the drive item.',
  'Test case for creating tree with Team Drives.\n' +
    'This test expects that the following tree is built.\n' +
    'MyFiles\n' +
    'Google Drive\n' +
    '- My Drive\n' +
    '- Team Drives (only if there is a child team drive).\n' +
    '- Shared with me\n' +
    '- Offline',
  'Add MyFiles and Drive to the store.',
  'Add Team Drives.',
  'At top level, MyFiles and Drive should be listed.',
  'Expand Drive before checking Team drives.',
  'Under the drive item, there exist 4 entries.',
  'There exist 1 my drive entry and 3 fake entries under the drive item.',
  'Test case for creating tree with empty Team Drives.\n' +
    'The Team Drives subtree should be removed if the user has no team drives.',
  'Add MyFiles and Drive to the store.',
  'At top level, MyFiles and Drive should be listed.',
  'Expand Drive before checking Team drives.',
  "Root entries under Drive volume is generated, Team Drives isn't",
  'included because it has no child.',
  'See testCreateDirectoryTreeWithTeamDrive for detail.',
  'Test case for creating tree with Computers.\n' +
    'This test expects that the following tree is built.\n' +
    'MyFiles\n' +
    'Google Drive\n' +
    '- My Drive\n' +
    '- Computers (only if there is a child computer).\n' +
    '- Shared with me\n' +
    '- Offline',
  'Add MyFiles and Drive to the store.',
  'Add Computers.',
  'At top level, MyFiles and Drive should be listed.',
  'Expand Drive before checking Computers.',
  'Under the drive item, there exist 4 entries.',
  'There exist 1 my drive entry and 3 fake entries under the drive item.',
  'Test case for creating tree with empty Computers.\n' +
    'The Computers subtree should be removed if the user has no computers.',
  'Add MyFiles and Drive to the store.',
  'At top level, MyFiles and Drive should be listed.',
  'Expand Drive before checking Computers.',
  "Root entries under Drive volume is generated, Computers isn't",
  'included because it has no child.',
  'See testCreateDirectoryTreeWithComputers for detail.',
  'Test case for creating tree with Team Drives & Computers.\n' +
    'This test expects that the following tree is built.\n' +
    'MyFiles\n' +
    'Google Drive\n' +
    '- My Drive\n' +
    '- Team Drives\n' +
    '- Computers\n' +
    '- Shared with me\n' +
    '- Offline',
  'Add MyFiles and Drive to the store.',
  'Add Team drives.',
  'Add Computers.',
  'At top level, MyFiles and Drive should be listed.',
  'Expand Drive before checking Team drives and Computers.',
  'Under the drive item, there exist 5 entries.',
  'There exist 1 my drive entry and 4 fake entries under the drive item.',
  'Test case for setting separator property.\n' +
    "'separator' property is used to display a line divider between\n" +
    '"sections" in the directory tree.\n' +
    'This test expects that the following tree is built.\n' +
    'MyFiles\n' +
    'Google Drive\n' +
    'Android app 1',
  'Add MyFiles and Drive to the store.',
  'Add Android apps.',
  'At top level, MyFiles, Drive and Android app should be listed.',
  'First element should not have separator property, to not display a',
  'division line in the first section.',
  'Downloads:',
  "Drive should have separator, because it's a new section but not the",
  'first section.',
  "Android app should have separator, because it's a new section but not the",
  'first section.',
  'Test case for directory update with volume changes.\n' +
    'Mounts/unmounts removable and archive volumes, and checks these volumes come\n' +
    'up to/disappear from the list correctly.',
  'Add MyFiles and Drive to the store.',
  'There are 2 volumes, MyFiles and Drive, at first.',
  'Mounts a removable volume.',
  'Asserts that a removable directory is added after the update.',
  'Mounts an archive volume.',
  'Asserts that an archive directory is added before the removable',
  'Deletes an archive directory.',
  'Asserts that an archive directory is deleted.',
  'Test case for directory tree with disabled Android files.\n' +
    'If some of the volumes under MyFiles are disabled, this should be reflected\n' +
    "in the directory model as well: the children shouldn't be loaded, and\n" +
    "clicking on the item or the expand icon shouldn't do anything.",
  'Add MyFiles and Drive to the store.',
  "Create Android 'Play files' volume and set as disabled.",
  'Asserts that MyFiles should have 1 child: Android files.',
  "Clicking on the item shouldn't select it.",
  "The item shouldn't be expanded.",
  "Clicking on the expand icon shouldn't expand.",
  'Test case for directory tree with disabled removable volume.\n' +
    'If removable volumes are disabled, they should be allowed to mount/unmount,\n' +
    'but cannot be selected or expanded.',
  'Add MyFiles and Drive to the store.',
  'Create removable volume and set as disabled.',
  'Asserts that a removable directory is added after the update.',
  "Clicking on the item shouldn't select it.",
  "The item shouldn't be expanded.",
  "Clicking on the expand icon shouldn't expand.",
  "Unmount the removable and assert that it's removed from the directory.",
  'Test a disabled drive volume.\n' +
    'If drive is disabled, this should be reflected in the directory model as\n' +
    "well: the children shouldn't be loaded, and clicking on the item or the\n" +
    "expand icon shouldn't do anything.",
  'Disable Drive volume before adding it.',
  'Add MyFiles and Drive to the store.',
  'Add sub folders for them.',
  'At top level, MyFiles and Drive should be listed.',
  'Under the drive item, there exist 0 entries. In MyFiles should',
  ... 77 more items
]
nudge_container.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'NudgeContainer maintains the lifetime of a "nudge". A nudge refers to an\n' +
    'educational overlay that shows up to highlight new features, currently we\n' +
    'only support a single nudge showing in Files app.',
  'The educational nudge that is added as a web component to the DOM.',
  'The handle that represents the requestIdleCallback to enable cancellation.',
  'The current `NudgeType` that is visible.',
  'Each nudge has a described-by <p> tag to enable an announcement to be made\n' +
    'when hovering over or tabbing to the anchored element.',
  'A controller which sends out an abort signal once we no longer want to\n' +
    'listen to events i.e. on nudge hide.',
  'Cache the DOMRect of the anchor to allow comparison of the previous\n' +
    'location and in the case the anchor DOMRect changes, reposition the nudge\n' +
    'accordingly.',
  'Stores the ID of the current requestAnimationFrame(). Used to ensure only\n' +
    'run callback is running at a time.',
  'True if the expiry period on the nudge is observed. False otherwise.',
  'A callback that repositions the nudge element prior to a repaint. The\n' +
    'callback is throttled to only run on animation frames since we call it for\n' +
    'scroll events; which can be numerous between frames.',
  'First verify that the anchor has changed in some position or dimension',
  "before repositioning the nudge. This ensures we're not too aggressive",
  'in repositioning.',
  'Attempts to reposition the visible nudge if it is showing. There is no easy\n' +
    'way to listen for DOM elements that change without user input (e.g. if a\n' +
    'volume is added or removed from the directory tree). So use an IdleCallback\n' +
    'to keep checking the nudge is in the right position.',
  'A method for the nudge manager to decide whether a given nudge has been\n' +
    'previously seen and dismissed by the user.',
  'A method for the nudge manager to specify that a given nudge has been seen\n' +
    'and dismissed by the user.',
  'Clears the `seen` state from the localStorage for the given nudge.',
  'Shows the nudge if it has not already been seen before.',
  'No nudge info exists for the supplied nudge.',
  "Don't show the nudge if it's expired and the expiry period is enabled.",
  'Create a new controller since they can only be aborted once (adding an',
  'aborted signal to a listener will result in no listening).',
  'Anchor container scrolling and document resizes can potentially',
  'reposition the anchor, which will need a matching reposition of the nudge',
  'element-- so we listen to those events and reposition upon them',
  'occurring. Note, it is possible that there are other ways of manipulating',
  'the anchor position without triggering any of the events here (e.g.',
  'resizing an element within the document); but no such use case exists',
  'yet.',
  'Self dismissable nudge only dismisses if the user clicks on the nudge.',
  'Otherwise the nudge dismisses when user clicks anywhere in the app.',
  'Hide the currently showing nudge and update the seen status if provided.',
  "Abort listeners since we don't want to update position after hiding.",
  'Used to override the expiry period for nudges in test.',
  'Handle key down events such that any "Escape", "Enter" or "Space" should\n' +
    'close the nudge.',
  'Handle any pointer down events on the Nudge.',
  "Ignore pointer events on the nudge to allow copying the nudge's text.",
  'Set the <p> aria-described-by content to enable screen readers to hear the\n' +
    'nudge content when navigating over the anchored element.',
  'Add a new element as a sibling of the anchor so we can aria-describedBy',
  'it to read out the contents of the nudge.',
  'Remove the <p> aria-described-by content.',
  'Helper function to return whether a current nudge is showing.',
  'An enum of nudges that can be shown, only a single nudge is shown at a time.',
  'Type to define the callback used that gets the anchor element from the DOM.',
  'The anchor that the nudge will appear near. The location of the nudge',
  'relative to the anchor is dictated by the `direction`.',
  'The string contents of the nudge.',
  'The direction that nudge appears relative to the anchor. For more',
  "explanation on the various `NudgeDirection`'s look in `xf_nudge.ts` file.",
  'The date the nudge expires, after this date even if the nudge is invoked it',
  'will not appear.',
  'When the using selfDimiss=true the user can dismiss by clicking in the',
  'nudge. Otherwise the nudge is dismissed when clicking anywhere in',
  'the app/document.',
  'For selfDismiss nudge the nudge and its anchor might not get keyboard focus',
  'to be able to dismiss via keyboard.',
  'Implement this callback that receives the keydown from document and should',
  'return true if the nudge should be dismissed.',
  'Dismisses the nudge when the tree-item that anchors the nudge is selected.\n' +
    'NOTE: It relies on the nudge anchor being in the icon, to traverse 2 parents\n' +
    'up to the tree-item.',
  'When the anchor (tree item) is selected we dismiss.',
  'A mapping of nudges to their information that can be shown throughout the\n' +
    'Files app.',
  'Expire after 4 releases (expires when M120 hits Stable).'
]
nudge_container_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Holds all the elements, used to easily clear the DOM in between tests.',
  'An instance of the `NudgeContainer`, this is reset in between every test.',
  'The <xf-nudge> element that is appended to the page at the start of every\n' +
    'test.',
  'Save a copy of the test Nudge so that any test overwrites can be restored in\n' +
    'between tests. For example if the expiry date needs to be overwritten it is\n' +
    'restored for the next test.',
  'Sets up the initial holder that is used for every test.',
  'Creates new <xf-nudge> element for each test.',
  'Clears the <xf-nudge> between each test to ensure a clean slate.',
  'Ensure to close the nudge before clearing the container as the idle',
  'callback needs to be properly shutdown.',
  'Create a <div id="test"> which anchors the `NudgeType.TEST_NUDGE`.',
  'Helper method to get the <p id="nudge-content"> element that is added to the\n' +
    'page to describe the content in the nudge.',
  'Wait until the desired number of repositions is met.',
  'The repositions are setup as 0, this indicates the nudge has not been moved\n' +
    'to position, i.e. an uninitialised state.',
  'Creates the test anchor and nudge and waits until the repositions are 1.',
  'Tests that a defined nudge without an anchor is not shown.',
  'The first showing of nudge should not work as the <div id="test"> is not',
  'visible on the DOM.',
  "The second showing of the nudge should work as we've appended the <div",
  'id="test"> to the DOM.',
  'Tests that the enter key dismisses the nudge.',
  'No new repositions should be called and the check seen property should be',
  'true.',
  'Tests that a <p> element is appended beside the anchor element with the nudge\n' +
    'content to enable screen readers to hear the content.',
  'Tests that the nudge moves with the element if it gets moved\n' +
    'programmatically.',
  'Moving the `testDiv` should toggle the repositioning logic.',
  'Tests that the nudge is not shown after being shown for the first time.',
  'Close the nudge which should set the nudge to "seen".',
  "Assert that showing the nudge again doesn't work as it's already been",
  '"seen".',
  "Tests the nudge doesn't show if the expiry period has elapsed.",
  'Update the test nudge timestamp to be 60s before now.',
  'Tests the nudge is dismissed by clicking on the nudge.',
  'Click and wait it to dismiss.',
  'Reposition to hidden.',
  'Tests the nudge is dismissed by clicking on the anchor.',
  'Click and wait it to dismiss.',
  'Reposition to hidden.',
  'Tests the nudge using the dismissOnKeyDown().',
  'In tests we can send the keydown directly to the nudge.',
  'Send a keydown somewhere else, should not dismiss.',
  'Send keydown to the nudge.',
  'Reposition to hidden.'
]
search_container.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Defines the possible states of the query input widget. This is a widget with\n' +
    'a search button, text input and clear button. By default, the widget is\n' +
    'closed. When active, it is open. Due to CSS transitions it has two\n' +
    'intermediate states, OPENING and CLOSING.',
  'Helper function that centralizes the test if we are searching the "Recents"\n' +
    'directory.',
  "Creates location options. These always consist of 'Everywhere' and the\n" +
    'local folder. However, if the local folder has a parent, that is different\n' +
    'from it, we also add the parent between Everywhere and the local folder.',
  'For Google Drive we currently do not have the ability to search a',
  'specific folder. Thus the only options shown, when the user is',
  'triggering search from a location in Drive, is Everywhere (set up',
  'above) and Drive.',
  'Creates Recency options. Depending on the current directory these have either\n' +
    'ANYTIME or LAST_MONTH selected as the default.',
  'Creates file category option. Uses the state to find out if we are in the\n' +
    'Recent view. If so, it sets the default based on the Recent view selectors.',
  'Updates visibility of recency options based on the current directory.',
  'The controller for the search UI elements. The controller takes care of the\n' +
    'behavior of UI elements. It must not deal with the look-and-feel. It finds\n' +
    'them, hooks to the UI events and drives the business logic based on those UI\n' +
    'events.',
  'The button that clears the search query.',
  'The element contains the the input element.',
  'The input element where the user enters the query.',
  'The search button that shows the query input element.',
  'The div that holds elements all of the UI elements.',
  'The current state of the search widget elements.',
  'The current value of search options, initialized to some sensible default.',
  'The store which updates us about state changes.',
  'The cached state of the store; store may post events if other parts of the',
  'state change. However, we just want to react to changes related to search.',
  'We use the cached search state to check if the state change was related to',
  'search state change or some other part of the state.',
  'The container with search options widget.',
  'The UI widget that allows users to manipulate search options. This is used',
  'mostly to cache the access to the actual element, rather than accessing it',
  'via querySelector.',
  'The container used to display the path of the currently selected file.',
  'The element that shows the path of the currently selected file.',
  'The parts of the path of the selected result or empty.',
  'Volume manager, used by us to resolve paths of selected entries.',
  'The accessibility interface that is used to announce the outcomes of file',
  'searches.',
  'Builds a search container that creates and manages UI elements. This\n' +
    'container receives a reference to `searchWrapper` that contains query\n' +
    'UI elements and `optionsContainer` that has search options UI element.\n' +
    'It uses `searchWrapper` to fetch them by IDs. Once the UI elements are\n' +
    'found, this container makes itself the listener of the events that are\n' +
    'posted to by the UI elements and converts them to business logic. This\n' +
    'includes notifying listeners when the the search query changes or the\n' +
    'auto-complete item is selected.',
  'The "box" around the search button, query input, and clear button.',
  'The button that opens and closes the query input element.',
  'The element that holds search UI elements.',
  'Start in the collapsed state. This attribute is read in tests.',
  'Text input element where the user enters the query.',
  'The button that allows the user to clear the query.',
  'Hide clear button when created.',
  'Sets hidden attribute for components of search box.',
  'Clears the current search query. If the query was not already empty, it\n' +
    'closes the search box.',
  'Returns the user entered search query. This method trims white spaces from\n' +
    'the left side of the query.',
  'A method invoked every time the store state changes.',
  'Handles changes in the search state of the store state. If the search\n' +
    'is not active it hides the UI elements. Otherwise, updates them\n' +
    'accordingly.',
  'Bail out early if the search part of the state has not changed.',
  'Cache the last received search state for future comparisons.',
  'Handles changes in the current directory part of the state. It uses it\n' +
    'to set the path of the currently selected element.',
  'Helper function that converts information stored in State to an array\n' +
    'of PathComponents of the selected entry. If there are multiple entries\n' +
    'selected or no entries selected, this method returns an empty array.',
  'TODO(b:274559834): Improve efficiency of these computations.',
  'Hides the element that allows users to manipulate search options.',
  'Shows or creates the element that allows the user to manipulate search\n' +
    'options.',
  'Returns the breadcrumb element by either retuning the cached instance,\n' +
    'or fetching it by its tag. May return null.',
  'Increase the default maxPathParts to allow for longer path display.',
  "The leaf path isn't clickable.",
  'Returns the search options element by either retuning the cached instance,\n' +
    'or fetching it by its tag. May return null.',
  'Updates search options in the store.',
  'Attaches all necessary event listeners to the UI elements that make the\n' +
    'search interface. This method must be called as the last statement of the\n' +
    'constructor.',
  'Hide the search if the user clicks outside it and there is no search',
  'query entered.',
  'Returns whether the search container is open. In the open state the user\n' +
    'may enter a search query, interact with options, etc.',
  'Starts the process of opening the search widget. We use CSS transitions to\n' +
    'open the widget and thus the widget it not fully opened until the CSS\n' +
    'transition finishes.',
  'Do not initiate open transition if we are not closed. This would leave us',
  'in the OPENING state, without ever getting to OPEN state.',
  'Starts the process of closing the search widget. We use CSS transitions to\n' +
    'close the widget and thus the widget it not fully closed until the CSS\n' +
    'transition finishes.',
  'Do not initiate close transition if we are not open. This would leave us',
  'in the CLOSING state, without ever getting to CLOSED state.',
  'Updates the visibility of clear button.',
  'Generates a custom event with the current value of the input element as the\n' +
    'search query.'
]
search_container_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Creates a store if necessary. Initializes it to an empty state.',
  'Creates a search container if necessary.',
  'Creates new <search-container> element for each test.',
  'Clears accessibility message from the previous test.',
  'Checks that manually entering a query (simulated here by setting value and\n' +
    'posint an input event) correctly propagates the state to the store.',
  'Manually open the search container; without this the container is in the',
  'closed state and does not clean up query or option values on close.',
  'Test 1: Enter a query.',
  'Test 2: Clear the query.',
  'Checks that store changes correctly result in opening and closing of the\n' +
    'search box.',
  'No results appeared so expect just one message about search being closed.',
  "Start a file search with the query 'hello'.",
  'Wait for the store to update its state.',
  'Fake a successful search.'
]
file_error.d.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Definitions for FileError.\n' +
    'This is for compatibility with Closure definition for File API [1].\n' +
    '[1]\n' +
    'https://github.com/google/closure-compiler/blob/master/externs/browser/nonstandard_fileapi.js#L197',
  'DOMError is deprecated and not shipped with TS anymore.\n' +
    'Definition copied from:\n' +
    'https://github.com/microsoft/TypeScript/blob/v3.7.7/lib/lib.dom.d.ts'
]
file_manager.d.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Type definition for foreground/js/file_manager.js:FileManager.\n' +
    'For now only defining the bare minimum.',
  'The singleton instance for FileManager is available in the Window object.',
  'Namespace used for test utils.',
  'Only used for grid.ts',
  'Defined in the file_manager_base.ts',
  'Defined in the main_window_component.ts',
  'For unit test.'
]
file_manager_private.d.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Definitions for chrome.fileManagerPrivate API\n' +
    'Generated from: chrome/common/extensions/api/file_manager_private.idl\n' +
    'run `tools/json_schema_compiler/compiler.py\n' +
    'chrome/common/extensions/api/file_manager_private.idl -g ts_definitions` to\n' +
    'regenerate.'
]
navigator_connection.d.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Definitions related to the navigation.connection.type API which\n' +
    'is used to identify if a Chromebook is currently using an LTE connection.'
]
files_format_dialog.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Used to set "single-partition-format" attribute on element.\n' +
    'It is used to check flag status in the tests.',
  'Shows the dialog for drive represented by |volumeInfo|.',
  'Shows the dialog for erasing device.'
]
files_metadata_box.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'File path and type, e.g. image, video.',
  'File size, modification time, mimeType, location.',
  'True if the size field is loading.',
  'File-specific metadata.',
  'TODO(b/289003444): Move the following type definitions into ../js/metadata',
  'when that folder has been converted to typescript.',
  'GPS Data as per https://exiv2.org/tags.html.',
  'seconds.',
  'seconds.',
  'File path and type, e.g. image, video.',
  'File size, modification time, mimeType, location.',
  'True if the size field is loading.',
  'File-specific metadata.',
  'True if the file has file-specific metadata.',
  'FilesMetadataBox [metadata] attribute. Used to indicate the\n' +
    'metadata box field rendering phases.',
  'Clears fields.\n' +
    '@param keepSizeFields Do not clear size and isSizeLoading fields.',
  'If the originalLocation is set, the preview is for a trashed item.',
  'Sets this.hasFileSpecificMetadata_ if there is file-specific metadata.',
  'Sets the file |type| field based on setFileSpecificMetadata_().',
  'Update the metadata attribute with the rendered metadata |type|.',
  'Converts the duration into human friendly string.',
  '@param r An array of two strings representing the numerator and the\n' +
    'denominator.',
  "Returns geolocation as a string in the form of 'latitude, longitude',\n" +
    'where the values have 3 decimal precision. Negative latitude indicates\n' +
    'south latitude and negative longitude indicates west longitude.',
  'Returns device settings as a string containing the fNumber, exposureTime,\n' +
    "focalLength, and isoSpeed. Example: 'f/2.8 0.008 23mm ISO4000'."
]
files_metadata_entry.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'If |value| is empty, the entire entry will be hidden.',
  'When value is changed, it is displayed in the #valueContainer element.\n' +
    'How the value is represented depends on [[isPath]] value.',
  "Divide path 'foo/bar/baz.png' to ['foo', 'bar', 'baz.png'] and",
  'append corresponding span elements (<span>foo/</span> etc...) in the',
  'container.',
  '',
  "Note that, if the container's children are",
  '<span>foo/</span><span>bar/</span><span>baz.png</span>,',
  "container.textContent evaluates to 'foo/bar/baz.png'. That's why the",
  'container.textContent is still equal to [[value]] regardless of',
  "[[isPath]] and integration tests verifying element's textContent won't",
  'be affected.'
]
files_quick_view.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'File media type, e.g. image, video.',
  'True if there is a file task that can open the file type.',
  'True if the entry shown in Quick View can be deleted.',
  'Preview content to be sent rendered in a sandboxed environment.',
  'Autoplay property for audio, video.',
  'True if this file is not image, audio, video or HTML, but is',
  'supported by Chrome - content that is directly preview-able in',
  'Chrome by setting the untrusted <iframe> src attribute. Examples:',
  'pdf, text.',
  'The metadata-box-active-changed event is fired on attribute change.',
  'Text shown when there is no playback/preview available.',
  'True if the Files app window is a dialog, e.g. save-as or\nopen-with.',
  'Send browsable preview content (i.e. content that can be displayed by the\n' +
    'browser directly e.g. PDF/text) to the chrome-untrusted:// <iframe>.',
  'Clears fields.',
  "Remove the video's untrusted <iframe> child. The <iframe> contains the",
  '<video> element. Removing the <iframe> removes the <video>: that stops',
  'the video and its audio track playing: crbug.com/970192',
  'Handle load error from the files-safe-media container.',
  'Opens the dialog.',
  'Make dialog focusable and set focus to a dialog. This is how we can',
  'prevent default behaviour of a dialog which by default sets focus to',
  'the first input inside itself. When a dialog gains focus we remove',
  'focusability to prevent selecting dialog when moving with a keyboard.',
  'Closes the dialog.',
  'Client should assign the function to open the file.',
  'Client should assign the function to delete the file.',
  'See the changes on crbug.com/641587, but crbug.com/779044#c11 later undid\n' +
    'that work. So the focus remains on the metadata button when clicked after\n' +
    'the crbug.com/779044 "ghost focus" fix.\n' +
    'crbug.com/641587 mentions a different UI behavior, that was wanted to fix\n' +
    'that bug. TODO(files-ng): UX to resolve the correct behavior needed here.',
  'Close Quick View unless the clicked target or its ancestor contains\n' +
    "'no-close-on-click' class.",
  "Catch and re-fire the 'close' event such that it bubbles across Shadow",
  'DOM v1.'
]
files_safe_media.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Polymer element to render media securely in a chrome-untrusted:// <iframe>\n' +
    'element.\n' +
    "When tapped, 'files-safe-media-tap-inside', 'files-safe-media-tap-outside'\n" +
    'events are fired depending on the position of the tap.',
  'Source content accessible from the sandboxed environment.',
  '<files-safe-media> media type: e.g. audio, image, video, html.',
  'Remove untrusted iframe to clean up unnecessary processes.',
  'Remove old video item first to stop UI flicker when drawing the new',
  'video content: bug b/260619403',
  'Create the node, which will callback here (onSrcChange_) when done.',
  'Send the data to preview to the untrusted <iframe>.',
  'Allow autoplay for audio files.',
  'Holds the untrusted iframe when a source to preview is set. Set to null\n' +
    'otherwise.',
  'Avoid setting the focus on the files-safe-media itself, rather sends',
  'it down to its untrusted iframe element.'
]
files_spinner.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'DOM connected: set aria attributes.'
]
files_toast.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Files Toast.\n' +
    'The toast is shown at the bottom-right in LTR, bottom-left in RTL. Usage:\n' +
    "toast.show('Toast without action.');\n" +
    "toast.show('Toast with action', {text: 'Action', callback:function(){}});\n" +
    'toast.hide();',
  'Shows toast. If a toast is already shown, add the toast to the pending\n' +
    'queue. It will shown later when other toasts have completed.\n' +
    '@param text Text of toast.\n' +
    '@param action Action. The |Action.callback| is called if the user taps or\n' +
    'clicks the action button.',
  'Handles action button tap/click.',
  'Handles the <cr-toast> transitionend event. On a hide transition, show\n' +
    'the next queued toast if any.',
  'Hides toast if visible.'
]
files_toast_unittest.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Toast is hidden to start.',
  'Show toast1, wait for cr-toast to finish animating, and then verify all the',
  'properties and HTML is correct.',
  'Queue up toast2 and toast3, should still be showing toast1.',
  'Invoke toast1 action, callback will be called.',
  'Wait for toast1 to finish hiding and then wait for toast2 to finish',
  'showing.',
  'Invoke toast2 action, callback will be called.',
  'Wait for toast2 to finish hiding and wait for toast3 to finish showing.',
  'Call hide(), toast should no longer be visible, no more toasts shown.'
]
files_tooltip.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Files Tooltip.\n' +
    'Adds target elements with addTarget or addTargets. Value of aria-label is\n' +
    'used as a label of the tooltip.\n' +
    'Usage:\n' +
    "document.querySelector('files-tooltip').addTargets(\n" +
    "document.querySelectorAll('[has-tooltip]'))",
  'Delay for showing the tooltip in milliseconds.',
  'Delay for hiding the tooltip in milliseconds.',
  'Adds targets to tooltip.',
  'Adds a target to tooltip.',
  'Hides currently visible tooltip if there is. In some cases, mouseout event\n' +
    'is not dispatched. This method is used to handle these cases manually.',
  'Update the tooltip text with the passed-in target.',
  'Some tooltip is already visible.',
  'Even the current target is the visible tooltip target, we still need to',
  'check if the label is different from the existing tooltip text, because',
  'if label text changes, we need to show the tooltip.',
  'The tooltip is not visible.',
  "Push left to the body's left when tooltip is longer than viewport.",
  'Calculate position for rtl mode to align to the right of target.',
  'The tooltip remains inside viewport if right align push it outside.',
  'The tooltip remains inside viewport if left align push it outside.',
  "Stick to the body's right if it goes outside viewport from right.",
  'Clearing out style in case card-tooltip displayed previously.',
  'Additionally prevent any scheduled tooltips from showing up.',
  'Clear card and link tooltip.',
  'Clear card tooltip styles to prevent overwriting normal tooltip rules.',
  'Clear link tooltip styles to prevent overwriting normal tooltip rules.',
  '#',
  'sourceURL=//ui/file_manager/file_manager/foreground/elements/files_tooltip.ts'
]
files_tooltip_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Check the label.',
  'Check the link: it should be visible now.',
  'Check the label.',
  'Check the link: it should be hidden and cleared out.',
  "Change the button's aria-label attribute and the tooltip should",
  'also update.',
  'Hiding here is synchronous. Dispatch the event asynchronously,',
  'so the mutation observer is started before hiding.',
  'A border with 1px insets (top=bottom=left=right=1px) will be',
  'applied to the window when drak/light feature is enabled. See',
  'more details at crrev.com/c/3656414.',
  'revert back document direction to not impact other tests.',
  'Check the label.',
  'Check the link: it should be visible now.',
  'Check the label.',
  'Check the link: it should be hidden since not all required',
  'attributes are set.'
]
files_xf_elements_unittest.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Adds a xf-display-panel element to the test page.',
  'Tests that adding and removing panels to <xf-display-panel> updates the\n' +
    'aria-hidden attribute.',
  'Starts without any panel so should be hidden;',
  "Create a panel, but since it isn't attached so the container should still",
  'be hidden.',
  'Attach the Panel. It should make the container visible.',
  'Remove the last panel and should be hidden again.',
  'Add multiple panels, then should be visible.',
  'Clear all the panels, then should be hidden.',
  'Get the host display panel container element.',
  'Test create/attach/remove sequences.',
  'Create a progress panel item.',
  "Attach the panel to it's host display panel.",
  'Verify the panel is attached to the document.',
  'Remove the panel item.',
  'Verify the panel item is not attached to the document.',
  'Create a progress panel item.',
  'Remove the panel item.',
  "Try to attach the removed panel to it's host display panel.",
  'Verify the panel is not attached to the document.',
  'Get the host display panel container element.',
  'Setup the panel item signal (click) callback.',
  'Verify the panel item indicator is progress.',
  'Check cancel signal from the panel from a click.',
  'Check the progress panel text container has correct aria role.',
  'Change the panel item to an error panel.',
  'Verify the panel item indicator is set to error.',
  'Verify the panel item icon is the failure icon.',
  'Check dismiss signal from the panel from a click.',
  'Change the panel item to an info panel.',
  'Verify the panel item indicator is set to warning.',
  'Verify the panel item icon is the warning icon.',
  'Check cancel signal from the panel from a click.',
  'Change the panel type to a done panel.',
  'Verify the panel item indicator is set to done.',
  'Verify the panel item icon is the success icon.',
  'Check the dimiss signal from the panel from a click.',
  'Change the type to a summary panel.',
  'Verify the panel item indicator is largeprogress.',
  'Check no signal emitted from the summary panel from a click.',
  'Check the summary panel text container has no aria role.',
  'Get the host display panel container element.',
  'Add a panel item to the display panel container.',
  'To work with screen readers, the text element should have aria role',
  "'alert'.",
  'Change the primary and secondary text on the panel item.',
  'Check the primary and secondary text has been set on the panel.',
  'Change the panel item type to an error panel.',
  "Check that primary and secondary text don't change.",
  'Get the host display panel container element.',
  'Add a panel item to the display panel container.',
  'To work with screen readers, the text element should have aria role',
  "'alert'.",
  'Change the primary and secondary text on the panel item.',
  'Check the primary and secondary text has been set on the panel.',
  'Change the panel item type to an info panel.',
  'Check the primary and secondary text has been set on the panel.',
  'Setup the panel item signal (click) callback.',
  'Check cancel signal from the panel from a click.',
  'Get the host display panel container element.',
  'Add a summary panel item to the display panel container.',
  'Confirm the error marker is not visible by default.',
  'Confirm the error marker can be made visible through property setting on',
  'the progress indicator.',
  'Confirm we can change visibility of the error marker from panel item',
  'property setting.',
  'Confirm the panel item reflects the visibility of the error marker.',
  'Get the host display panel container element.',
  'Add an error panel item to the display panel container.',
  'Add a progress panel item to the display panel container.',
  'Verify a summary panel item is created and shows the error indicator.',
  'Remove the error panel item and add a second progress panel item.',
  'Verify a summary panel item is created without an error indicator.',
  'Remove the progress panels and add two info (a.k.a. warning) panel items.',
  'Verify a summary panel item is created with a warning indicator.',
  'Remove one info panel and add 2 error panel items.',
  'Verify a summary panel item is shown, with an error status indicator.',
  'Remove the error panels items and add a done (a.k.a. success) panel item.',
  'Verify a summary panel item is created with a warning indicator.',
  'Remove the info panel items and add another done panel item.',
  'Verify a summary panel is shown with success indicator.',
  'Get the host display panel container element.',
  'Add a generic progress panel item to the display panel container.',
  'Add a format progress panel item to the display panel container.',
  'Confirm that format progress panels do not have a cancel button.',
  'Add a drive sync progress panel item to the display panel container.',
  'Confirm that sync progress panels do not have a cancel button.',
  'Verify a summary panel item is created with the correct average.',
  'Get the host display panel container element.',
  'Add a progress panel item to the display panel container.',
  'Verify the circular progress panel item marker stroke width.',
  'Verify setting large radius on the circular marker changes stroke width.',
  'TODO(b/293228531): Reenable test when fixed for createElement().',
  'Get the host display panel container element.',
  'Declare the expected panel item height managed from CSS.',
  'Add a progress panel item to the display panel container.',
  'Confirm the expected height of a single panelItem.',
  ... 22 more items
]
xf_button.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'A button used inside PanelItem with varying display characteristics.',
  'Creates a PanelButton.',
  'Registers this instance to listen to these attribute changes.',
  'Callback triggered by the browser when our attribute values change.\n' +
    "@param name Attribute that's changed.\n" +
    '@param oldValue Old value of the attribute.\n' +
    '@param newValue New value of the attribute.',
  'When using the extra button, the text can be programmatically set\n' +
    '@param text The text to use on the extra button.'
]
xf_circular_progress.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Definition of a circular progress indicator custom element.\n' +
    "The element supports two attributes for control - 'radius' and 'progress'.\n" +
    'Default radius for the element is 10px, use the DOM API\n' +
    "element.setAttribute('radius', '12px'); to set the radius to 12px;\n" +
    'Default progress is 0, progress is a value from 0 to 100, use\n' +
    "element.setAttribute('progress', '50'); to set progress to half complete\n" +
    "or alternately, set the 'element.progress' JS property for the same result.",
  'The visual indicator for the progress is accomplished by changing the\n' +
    'stroke-dasharray SVG attribute on the top circle. The stroke-dasharray\n' +
    'is calculated by using the circumference of the circle as the 100%\n' +
    'length and then setting the dash length to match the percentage of\n' +
    "the set 'progress_' value.",
  'Registers this instance to listen to these attribute changes.',
  'Sets the indicators progress position.\n' +
    '@param progress A value between 0 and MAX_PROGRESS to indicate.',
  'Clamp progress to 0 .. MAX_PROGRESS.',
  'Sets the position of the error indicator.\n' +
    'The error indicator is used by the summary panel. Its position is aligned\n' +
    'with the top-right square that contains the progress circle itself.\n' +
    '@param radius The radius of the progress circle.\n' +
    '@param strokeWidth The width of the progress circle stroke.',
  'Callback triggered by the browser when our attribute values change.\n' +
    'TODO(crbug.com/40620728) Add unit tests to exercise attribute edge cases.\n' +
    "@param name Attribute that's changed.\n" +
    '@param oldValue Old value of the attribute.\n' +
    '@param newValue New value of the attribute.',
  'Restrict the allowed size to what fits in our area.',
  'Position the error indicator relative to the progress circle.',
  'Calculate the circumference for the progress dash length.',
  'Getter for the visibility of the error marker.',
  'Set the visibility of the error marker.\n' +
    '@param visibility Visibility value being set.',
  'Reflect the progress property into the attribute.',
  'Getter for the current state of the progress indication.',
  'Sets the progress position between 0 and 100.0.\n' +
    '@param progress Progress value being set.',
  'Reflect the progress property into the attribute.',
  'Set the text label in the centre of the progress indicator.\n' +
    'This is used to indicate multiple operations in progress.\n' +
    '@param label Text to place inside the circle.'
]
xf_display_panel.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'A panel to display a collection of PanelItem.',
  'True if the panel is collapsed to summary view.',
  'Collection of PanelItems hosted in this DisplayPanel.',
  'Creates an instance of DisplayPanel, attaching the template clone.',
  'We cannot set attributes in the constructor for custom elements when using\n' +
    '`createElement()`. Set attributes in the connected callback instead.',
  'Re-enable scrollbar visibility after expand/contract animation.',
  'Hides the active panel items at end of collapse animation.',
  'Set attributes and style for expanded summary panel.',
  'Event handler to toggle the visible state of panel items.',
  'Get an array of panel items that are connected to the DOM.',
  'Update the summary panel item progress indicator.',
  'Only sum progress for attached progress panels.',
  'Show either a progress indicator or a status indicator (success, warning,',
  'error) if no operations are ongoing.',
  'Make sure we have a progress indicator on the summary panel.',
  'Make sure we have a status indicator on the summary panel.',
  'Both errors and warnings: show the error indicator, along with counts',
  'of both.',
  'Only errors, but no warnings.',
  'Only warnings, but no errors.',
  'No errors or warnings.',
  'Update the summary panel.\n@public',
  'Make the display panel available by tab if there are panels to',
  "show and there's an aria-label for use by a screen reader.",
  'Work out how many panel items are being shown.',
  "If there's only one panel item active, no need for summary.",
  'For transfer summary details.',
  'Show summary panel if there are more than 1 panel items.',
  'Setup the panels based on expand/collapse state of the summary panel.',
  'Create a panel item suitable for attaching to our display panel.\n' +
    '@param id The identifier attached to this panel.',
  'Attach a panel item element inside our display panel.\n' +
    '@param panel The panel item to attach.',
  "Only attach the panel if it hasn't been removed.",
  "If it's already attached, nothing to do here.",
  'Add a panel entry element inside our display panel.\n' +
    '@param id The identifier attached to this panel.',
  'Remove a panel from this display panel.\n' +
    '@param item The PanelItem to remove.\n' +
    '@public',
  'Set aria-hidden to false if there is no panel.',
  "Find a panel with given 'id'.",
  'Remove all panel items.',
  'Generates the summary panel title message based on the number of errors.\n' +
    '@param errors Number of error subpanels.\n' +
    '@return Title text.',
  'Generates the summary panel title message based on the number of warnings.\n' +
    '@param warnings Number of warning subpanels.\n' +
    '@return Title text.'
]
xf_panel_item.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'A panel to display the status or progress of a file operation.',
  'Callback that signals events happening in the panel (e.g. click).',
  'User specific data, used as a reference to persist any custom\n' +
    'data that the panel user may want to use in the signal callback.\n' +
    'e.g. holding the file name(s) used in a copy operation.',
  "Remove an element from the panel using it's id.",
  'Sets up the different panel types. Panels have per-type configuration\n' +
    'templates, but can be further customized using individual attributes.\n' +
    '@param type The enumerated panel type to set up.',
  'Remove the indicators/buttons that can change.',
  'Mark the indicator as empty so it recreates on setAttribute.',
  'Default the text host to use an alert role.',
  'Setup the panel configuration for the panel type.',
  'TOOD(crbug.com/947388) Simplify this switch breaking out common cases.',
  "Remove the 'alert' role to stop screen readers repeatedly",
  'reading each progress update.',
  'Registers this instance to listen to these attribute changes.',
  'Callback triggered by the browser when our attribute values change.',
  'TODO(adanilo) Chop out each attribute handler into a function.',
  'Get rid of any existing indicator',
  'Set the aria labels for the activity and cancel button.',
  'Remove the secondary text node if the text is empty',
  'DOM connected.',
  'Set click event handler references.',
  'DOM disconnected.',
  'Replace references to any signal callback.',
  "Handles 'click' events from our sub-elements and sends\n" +
    'signals to the |signal_| callback if needed.',
  'Ignore clicks on the panel item itself.',
  'Sets the callback that triggers signals from events on the panel.',
  'Set the visibility of the error marker.\n' +
    '@param visibility Visibility value being set.',
  'Getter for the visibility of the error marker.',
  'If we have an indicator on the panel, then grab the',
  'visibility value from that.',
  "If there's no indicator on the panel just return the",
  'value of any attribute as a fallback.',
  'Setter to set the indicator type.\n' +
    '@param indicator Progress (optionally large) or status.',
  'Getter for the progress indicator.',
  'Setter to set the success/failure indication.\n' +
    '@param status Status value being set.',
  'Getter for the success/failure indication.',
  'Setter to set the progress property, sent to any child indicator.',
  'Getter for the progress indicator percentage.',
  'Setter to set the primary text on the panel.\n@param text Text to be shown.',
  'Getter for the primary text on the panel.',
  'Setter to set the secondary text on the panel.\n' +
    '@param text Text to be shown.',
  'Getter for the secondary text on the panel.',
  '@param shouldFade Whether the secondary text should be displayed\n' +
    'with a faded color to avoid drawing too much attention to it.',
  '@return Whether the secondary text should be displayed with a\n' +
    'faded color to avoid drawing too much attention to it.',
  'Setter to set the panel type.\n@param type Enum value for the panel type.',
  'Getter for the panel type.',
  'Getter for the primary action button.',
  'Getter for the secondary action button.',
  'Getter for the panel text div.',
  'Setter to replace the default aria-label on any close button.\n' +
    "@param text Text to set for the 'aria-label'."
]
actions_controller.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Manages actions for the current selection.',
  'Id for an UI update, when an async update happens we only send the state\n' +
    "to the DOM if the sequence hasn't changed since its start.",
  'Attach listeners to non-user events which will only update the in-memory',
  'ActionsModel.',
  'Attach listeners to events based on user action to show the menu, which',
  'updates the DOM.',
  'Element can be null, eg. when invoking a command via a keyboard shortcut.',
  'DirectoryTree has the focused item.',
  'Clears data associated with the given `key`.',
  'Try to update synchronously.',
  'Asynchronously update the UI, after fetching actions from the backend.',
  "Only update if there wasn't another UI update started while the promise",
  'was resolving, which could be for different entries and avoids multiple',
  'updates for the same entries.',
  'To avoid the menu flickering, make this call to start the caching',
  'process. We do not return the result on purpose.',
  'Force to recalculate for the new current directory.',
  'To avoid the menu flickering, make this call to start the caching',
  'process. We do not return the result on purpose.',
  "If it's still initializing, return the cached promise.",
  "If it's already initialized, resolve with the model.",
  "Once it's initialized, move to readyModels_ so we don't have to construct",
  'and initialized again.',
  'Cache in the waiting initialization map.',
  'Invalidate the model early so new UI has to refresh it.'
]
actions_model.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'A single action, that can be taken on a set of entries.',
  'Executes this action on the set of entries.',
  'Checks whether this action can execute on the set of entries.\n' +
    '@return True if the function can execute, false if not.',
  'Entries that this Action will execute upon.',
  'Pick an entry and pin it.',
  'Check if all the entries are pinned or not.',
  'Skip files we cannot pin.',
  'Check the result of pinning.',
  'Update the user interface according to the cache state.',
  'After execution of last entry call "onExecute_" to invalidate the',
  'model.',
  'Show an error.',
  'TODO(crbug.com/40725624): Migrate this error message to a visual signal.',
  'Opens the entry in Drive Web for the user to manage permissions etc.',
  "@param entry The entry to open the 'Manage' page for.",
  'Creates a new DriveManageAction object.\n' +
    '|entries| must contain only a single entry.',
  'A custom action set by the FSP API.',
  'Represents a set of actions for a set of entries. Includes actions set\n' +
    'locally in JS, as well as those retrieved from the FSP API.',
  'Initializes the ActionsModel, including populating the list of available\n' +
    'actions for the given entries.',
  'All entries need to be on the same volume to execute ActionsModel',
  'commands.',
  'For Drive, actions are constructed directly in the Files app',
  'code.',
  'For FSP, fetch custom actions via an API.',
  'Skip fake actions that should not be displayed to the',
  'user, for example actions that just expose OneDrive',
  'URLs.',
  'Destroys the model and cancels initialization if in progress.',
  'Invalidates the current actions model by emitting an invalidation event.\n' +
    'The model has to be initialized again, as the list of actions might have\n' +
    'changed.',
  'List of common actions, used both internally and externally (custom actions).\n' +
    'Keep in sync with file_system_provider.idl.'
]
actions_model_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@return total number of calls for that metric.',
  'Mock Chrome APIs.',
  'Setup Drive file system.',
  'Setup Provided file system.',
  'Create mock action model components.',
  'Tests that the correct actions are available for a Google Drive directory.',
  "'Manage in Drive' should be disabled in offline mode.",
  "'Create Shortcut' should be enabled, until it's executed, then",
  'disabled.',
  'The model is invalidated, as list of actions have changed.',
  'Recreated the model and check that the actions are updated.',
  "'Create shortcut' should be disabled.",
  'Tests that the correct actions are available for a Google Drive file.',
  "'Save for Offline' should be enabled.",
  "'Manage in Drive' should be enabled.",
  'For pinning, invalidating is done asynchronously, so we need to',
  'wait for it with a promise.',
  'The model is invalidated, as list of actions have changed.',
  'Recreated the model and check that the actions are updated.',
  "'Offline not Necessary' should be enabled.",
  "'Manage in Drive' should be enabled.",
  'Tests that the correct actions are available for a Google Drive hosted file.',
  "'Save for Offline' should be enabled.",
  'Check the actions for multiple selection.',
  "'Offline not Necessary' should not be enabled.",
  "'Save for Offline' should be enabled.",
  'For pinning, invalidating is done asynchronously, so we need to',
  'wait for it with a promise.',
  "'Offline not Necessary' should be enabled.",
  "'Save for Offline' should not be enabled.",
  'For pinning, invalidating is done asynchronously, so we need to',
  'wait for it with a promise.',
  'Tests that the correct actions are available for a Drive file that cannot be\n' +
    'pinned.',
  "'Save for Offline' should be enabled, but not executable.",
  'Check the actions for multiple selection.',
  "'Offline not Necessary' should not be enabled.",
  "'Save for Offline' should be enabled even though we can't pin",
  "hosted files as we've also selected a non-hosted file.",
  'For pinning, invalidating is done asynchronously, so we need to',
  'wait for it with a promise.',
  "'Offline not Necessary' should be enabled.",
  "'Save for Offline' should be enabled, but not executable.",
  'For pinning, invalidating is done asynchronously, so we need to',
  'wait for it with a promise.',
  'Tests that a Team Drive Root entry has the correct actions available.',
  '"manage in drive" action is disabled for Team Drive Root entries.',
  'Tests that a Team Drive directory entry has the correct actions available.',
  '"Available Offline" toggle is enabled for Team Drive directories.',
  '"Available Offline" toggle is enabled for Team Drive directories.',
  '"Manage in drive" is enabled for Team Drive directories.',
  "'Create shortcut' should be enabled.",
  'Tests that a Team Drive file entry has the correct actions available.',
  '"save for offline" action is enabled for Team Drive file entries.',
  '"manage in drive" action is enabled for Team Drive file entries.',
  'Tests that if actions are provided with getCustomActions(), they appear\n' +
    'correctly for the file.',
  'The fake actions are hidden.',
  'Sharing on FSP is possible even if Drive is offline. Custom actions',
  "are always executable, as we don't know the actions implementation.",
  'Tests that no actions are available when getCustomActions() throws an error.'
]
android_app_list_model.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Model for managing a list of Android apps.',
  '@param showAndroidPickerApps Whether to show picker apps in file\n' +
    'selector.\n' +
    '@param includeAllFiles Corresponds to LaunchParam.includeAllFiles\n' +
    '@param typeList Corresponds to LaunchParam.typeList',
  '@return Number of picker apps.',
  '@param index Index of the picker app to be retrieved.\n' +
    '@return The value of the |index|-th\n' +
    'picker app.'
]
app_state_controller.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Preferred sort field of file list. This will be ignored in the Recent\n' +
    'folder, since it always uses descendant order of date-modified.',
  'Preferred sort direction of file list. This will be ignored in the Recent\n' +
    'folder, since it always uses descendant order of date-modified.',
  'Load initial view option.',
  'Load the global default options.',
  'Restore preferences.',
  'The stored config might not match the current table width, do a',
  'normalization here after restoration.',
  'Register event listeners.',
  'Saves current view option.',
  'Save the global default.',
  'Update preferred sort field and direction only when the current directory',
  'is not Recent folder.',
  'Sort the file list by:',
  "1) 'date-modified' and 'desc' order on Recent folder.",
  '2) preferred field and direction on other folders.',
  'TODO(b/354587005): Capture all recent categories in the store.',
  'Currently only fake-entry://recent/all is in the store, but',
  '`previousFileKey` can be other categories like fake-entry://recent/images',
  "which is not in the store, we can't rely on store data to fetch the entry",
  'by the file key here, hence matching the file key string directly here.',
  'Default sort field of the file list.',
  'Default sort direction of the file list.'
]
banner_controller.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Local storage key suffix for how many times a banner was shown.',
  'Local storage key suffix for the last Date a banner was dismissed.',
  'Local storage key suffix that stores the total number of seconds a banner has\n' +
    'been visible for.',
  'Duration between calls to keep the current banners time limit in sync.',
  'Local storage key suffix for a banner that has been dismissed forever.',
  'The HTML attribute to force show a banner, if applied, the banner will always\n' +
    'show.',
  'Allowed duration between onDirectorySizeChanged events in milliseconds.',
  'Type defining the object that stores the volume size stats for various volume\n' +
    'types that are tracked by banners.\n' +
    'The key of this is the volume ID.',
  'A custom filter context that is set when the existing filters are not\n' +
    'powerful enough and more custom behaviour must be used to define when a\n' +
    'banner should be shown or not.',
  'The central component to the Banners Framework. The controller maintains the\n' +
    'core logic that dictates which banner should be shown as well as what events\n' +
    'require a reconciliation of the banners to ensure the right banner is shown\n' +
    'at the right time.',
  'Warning banners ordered by priority. Index 0 is the highest priority.',
  'Educational banners ordered by priority. Index 0 is the highest\npriority.',
  'State banners ordered by priority. Index 0 is the highest priority.',
  'Keep track of banners that subscribe to volume changes.',
  'Stores the state of each banner, such as view count or last dismissed\n' +
    'time. This is kept in sync with local storage.',
  'Maintains the state of the current volume that has been navigated. This\n' +
    'is updated by the directory-changed event.',
  'Maintains the currently navigated root type. This is updated by the\n' +
    'directory-changed event.',
  'Maintains the currently navigated shared drive if any. This is updated\n' +
    'when a reconcile event is called.',
  'Maintains the currently navigated directory entry. This is updated when\n' +
    'a reconcile event is called.',
  'Maintains a cache of the current size for all observed volumes. If a\n' +
    'banner requests to observe a volumeType on initialization, the volume\n' +
    'size is cached here, keyed by volumeId.',
  "Maintains a cache of the user's Google Drive quota and associated\n" +
    'metadata.',
  'The container where all the banners will be appended to.',
  'Whether banners should be loaded or not during for unit tests.',
  'Whether banners should be completely disabled, useful to remove banners\n' +
    'during integration tests or tast tests.',
  "A single banner to isolate and test it's functionality. Denoted by it's\n" +
    'tagName (in uppercase).',
  'setInterval handle that keeps track of the total time a banner has\n' +
    'been shown for.',
  'Last time that the setInterval was invoked.',
  'An object keyed by a banners tagName (in upper case) that lists custom\n' +
    'filters for the specified banner. Used to house banner specific logic\n' +
    'that can decide whether to display a banner or not.',
  'The instance of the store.',
  'Cached value of `this.store_.currentDirectory.hasDisabledFiles`, to avoid\n' +
    'unnecessary reconciling.',
  'The volumeId that is pending a volume size update, updateVolumeSizeStats_\n' +
    'will remove the volumeId once updated. This is cleared when the debounced\n' +
    'version of updateVolumeSizeStats_ executes.',
  'Bind the onDirectorySizeChanged_ method to this instance once.',
  'Debounced version of updateVolumeSizeStats_ to stop overly aggressive\n' +
    'calls coming from onDirectoryChanged_.',
  'Whether the Drive bulk-pinning feature is available on this device.',
  'Whether the Drive bulk-pinning feature is currently enabled.',
  'SkyVault migration destination. If set, one of {Google Drive, OneDrive}.',
  'Ensure changes are received for store updates.',
  'Only attach event listeners if the controller is enabled. Used to disable',
  'all banners from being loaded.',
  'Checks if the DlpRestrictedBanner should be shown/hidden based on the\n' +
    'latest state and reconciles banners if necessary.',
  'Ensure all banners are in priority order and any existing local storage\n' +
    'values are retrieved.',
  'Banners are initialized in their priority order. The order of the array',
  'denotes the priority of the banner, 0th index is highest priority.',
  'Register custom filters that verify whether the currently navigated',
  'path is shared with Crostini, PluginVM or both.',
  'Register a custom filter that passes the current size stats down to the',
  'the Drive banner only if the volume stats are available. The general',
  'volume available handler will run before this ensuring the minimum',
  'ratio has been met.',
  'Register a custom filter that checks if the removable device has an',
  'error and show the invalid USB file system banner.',
  'Register a custom filter that checks if DLP restricted banner should',
  'be shown.',
  'Loops through all the banners and checks whether they should be shown or\n' +
    'not. If shown, picks the highest priority banner.',
  'When navigating to a different volume, refresh the volume size stats',
  'when first navigating. A listener will keep this in sync.',
  'updateVolumeSizeStats will call reconcile at its end. Return here to',
  'avoid calling showBanner_ twice for a banner.',
  'Identify if (given current conditions) any of the banners should be shown',
  'or hidden.',
  'If a higher priority banner has been chosen, hide any lower priority',
  'banners that may already be showing.',
  'Checks if the banner should be visible.',
  'If a banner has been isolated to be shown for testing, all other banners',
  'should not show. The isolated baner should still ensure it should be',
  'displayed.',
  'Check if the banner should be shown on this particular volume type.',
  'Check if the banner has been dismissed forever.',
  'Check if the banner has exceeded the maximum number of times it can be',
  'shown over multiple Files app sessions.',
  'Check if the threshold has been breached for the banner to be shown.',
  'Check if the banner has previously been dismissed and should not be shown',
  'for a set duration. Date.now returns in milliseconds so convert seconds',
  'into milliseconds.',
  "Check if the banner has been shown for more than it's required limit.",
  'Date.now returns in milliseconds so convert seconds into milliseconds.',
  'See if the banner has any custom filters assigned, if the shouldShow',
  'method returns true, the banner should be shown and the context is passed',
  'to the banner in preparation.',
  "Check if the banner exists (add to DOM if not) and ensure it's visible.",
  'Views are set when the banner is first appended to the DOM. This',
  'denotes a new app session.',
  "If the banner to be shown needs to checkpoint it's time shown, start",
  'the checkpoint interval.',
  'Hide the banner if it exists in the DOM.',
  'If the banner implements diskThreshold, add the banner to the observers of\n' +
    'volume size for the specified volumeType.',
  "Creates all the warning banners with the supplied tagName's. This will\n" +
    "populate the warningBanners_ array with HTMLElement's.",
  "Creates all the educational banners with the supplied tagName's. This will\n" +
    "populate the educationalBanners_ array with HTMLElement's.",
  "Creates all the state banners with the supplied tagName's. This will\n" +
    "populate the stateBanners_ array with HTMLElement's.",
  'Disable the banners entirely from executing',
  'Disable the banners from being loaded for testing. This is used to override\n' +
    'the loading of actual banners to load fake banners in unit tests.',
  'Isolates a banner from the priority list for testing. Used to test\n' +
    'functionality of a specific banner in integration tests.',
  'Clears the time interval and resets the tracked interval and time in ms\n' +
    'back to null.\n' +
    '@private',
  'Toggles force show a single banner. If multiple banners are force shown\n' +
    'the banner with the highest priority will still be the only one shown.',
  'Create an event handler bound to the specific banner that was created.',
  'If the banner has been dismissed forever (in the case of educational',
  'banners) set the localStorage value to be 1.',
  ... 17 more items
]
banner_controller_unittest.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Maintains the registered web components for testing the warning banners.',
  'Maintains the registered web components for testing the educational banners.',
  'Number of banners to create on startup.',
  'Returns an object with helper methods to manipulate a test banner.',
  'Element.tagName returns uppercase.',
  'Helper method to use with waitUntil to assert that only one banner is\n' +
    'visible.',
  'Helper method to use with waitUntil to assert that all banners are hidden.',
  'Changes the global directory to |newVolume|.',
  'Certain directory roots return null (USB drive root).',
  'Infer the root type from the volume type unless explicitly defined.',
  'Update the current volume size stats that are returned by\n' +
    'chrome.fileManagerPrivate.getSizeStats.',
  'Sends a DISMISS event to the supplied banner. This synthetic event is\n' +
    'wired up to the event handler set in the BannerController.',
  'Sends a DISMISS_FOREVER event to the supplied banner. This synthetic event is\n' +
    'wired up to the event handler set in the BannerController.',
  'Mocks the Date.now() function to enable us to not have to wait for a\n' +
    'specified duration. Returns 2 functions, one to set the Date.now() and one\n' +
    "to restore the Date.now() to it's existing functionality.",
  'Date.now works in milliseconds, convert seconds appropriately.',
  'Imitates a new Files app session. The Banner controller looks to see if the\n' +
    'banner has been connected to the DOM and so clearing the DOM should\n' +
    'sufficiently demonstrate this.',
  'Register and keep track of test warning banners.',
  'Register and keep track of test educational banners.',
  'Ensure local storage is cleared between each test.',
  'Test that upon initialize (with no banners loaded) the container has none\n' +
    'appended.',
  'Test that a warning banner takes priority over any educational banners.',
  'Add 1 warning and 1 educational banner to the controller.',
  'Set the allowed volume type to be the DOWNLOADS directory.',
  'Test a banner with lower priority can be shown if the higher priority banner\n' +
    'does not match the current volume type.',
  'Add 1 warning and 1 educational banner to the controller.',
  'Only set the educational banner to have allowed type of DOWNLOADS.',
  'Test banners of the same types are prioritised by the order they are set.',
  'Add 2 warning banners.',
  'Set the banner at index 1 to be shown.',
  'Test banners of the same types are prioritised by the order they are set.',
  'Add 2 warning banners and 1 educational banner.',
  'Set the following banners to show:',
  'First Warning Banner shows on Downloads.',
  'Second Warning Banner shows on Drive.',
  'First Educational Banner shows on Android Files.',
  'Verify for Downloads the first banner shows.',
  'Change volume to Drives and verify the second warning banner is showing.',
  'Change volume to Android files and verify the educational banner is shown.',
  'Test that a null VolumeInfo hides all the banners.',
  'Verify for Downloads the warning banner is shown.',
  'Change current volume to a null volume type and assert no banner is shown.',
  'Test that banners that have hit their show limit are not shown again.',
  'Add 2 educational banners.',
  'Set the showLimit for the educational banners.',
  'The first reconciliation should increment the counter and append to DOM.',
  'After a new Files app session has started, the previous counter has',
  "exceeded it's show limit, assert the next priority banner is shown.",
  'Test that the show limit is increased only on a per app session.',
  'Add 1 educational banner.',
  'Change directory one more times than the show limit to verify the show',
  "limit doesn't increase.",
  'Change directory and verify no banner shown.',
  'Change back to DOWNLOADS and verify banner has been shown.',
  'Test that multiple banners with different allowedVolumes and show limits\n' +
    "are show at the right stages. This also asserts that banners that don't\n" +
    'implement showLimit still are shown as expected.',
  'Set the allowed volume types for the warning banners.',
  'Set the showLimit and allowed volume types for the educational banner.',
  'The first reconciliation should increment the counter and append to DOM.',
  'Change the directory to Drive.',
  'Change the directory back Downloads.',
  'Change back to Drive, warning banner should still be showing.',
  "Educational banner should no longer be showing as it has exceeded it's show",
  'limit.',
  'Test that when chrome.fileManagerPrivate.getSizeStats returns null,\n' +
    'banners relying on specific size are not shown.',
  'Test that setting the remaining size coming back from getSizeStats triggers\n' +
    'the banner to display.',
  'When a volume is first navigated to it retrieves the size of the disk at',
  'first. Ensure the first size it retrieves is above the threshold.',
  'Change remaining size in the current volume to 512 KB (less than 1 GB)',
  'Test that when a volume size changes multiple events in sequence are\n' +
    'debounced to avoid the scenario when lots of small size files cause many\n' +
    'events to be emitted that will lock up the UI thread.',
  'When a volume is first navigated to it retrieves the size of the disk at',
  'first. Ensure the first size it retrieves is above the threshold.',
  'Set the date to 1s, any time from [1s, 6s] will cause the debouncing to',
  'kick in and therefore no banner will be visible.',
  'Change remaining size in the current volume to 512 KB (less than 1 GB)',
  'Set the date to 3s (still within the debounce interval) and change the size',
  'to cause the banner to not show. Expect this to not happen until the time',
  'is set to >6s which is outside the debounce window. Update the current',
  'volume multiple times ensuring the banner never changes.',
  'Once the date is set to a time outside the debounce interval, the banner',
  'should hide.',
  'Test that when the remaining space goes below the threshold, the banner is\n' +
    'show and if enough free space is reclaimed the banner is hidden.',
  'When a volume is first navigated to it retrieves the size of the disk at',
  'first. Ensure the first size it retrieves is above the threshold.',
  'Verify banner is shown when disk space goes below threshold.',
  'Verify banner is hidden when free space goes above minSize.',
  'Test that multiple banners (with different volume size observers; minRatio\n' +
    'and minSize) can co-exist and will be shown at appropriate times.',
  'Banner should show on Downloads when volume goes below 1GB remaining size.',
  'Banner should show on Drive when volume goes below 20% remaining free',
  'space.',
  'When a volume is first navigated to it retrieves the size of the disk at',
  'first. Ensure the first size it retrieves is above the threshold.',
  'Verify well below threshold, banner is triggered for minSize.',
  'Verify equal to threshold, banner is triggered for minSize.',
  'Change volume to Drive and ensure banner is not shown.',
  'Verify well below threshold, banner is triggered for minRatio.',
  'Verify equal to threshold, banner is triggered for minRatio.',
  'Test that if a volume is changed mid way through a volume size request, the\n' +
    'banner is not shown, but the cache is maintained such that navigating back\n' +
    'to the volume causes the banner to show.',
  'When a volume is first navigated to it retrieves the size of the disk at',
  ... 115 more items
]
banner_util_unittest.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Returns a VolumeInfo with the type and id set.',
  'Creates a chrome.fileManagerPrivate.MountPointSizeStats type.',
  'Test when there are no allowed volume types.',
  'Test when there is a single allowed volume type matching the current volume.',
  'Test when there are multiple volumes with one being the current volume.',
  'Test when there are multiple volumes but none match the current volume.',
  'Test multiple identical volume types, with only one allowed volume id.',
  'Test multiple identical volume types, with none matching the current volume.',
  'Test that a single root type (with no volume info) returns true if the\n' +
    'allowed volumes only contains root information.',
  'currentVolume  null, currentRootType, allowedVolumes));',
  'Test that multiple root types defined in allowed volumes (with one matching\n' +
    'the current type) returns true.',
  'currentVolume  null, currentRootType, allowedVolumes));',
  'Test multiple defined root types with none matching the allowed volumes\n' +
    'returns false.',
  'currentVolume  null, currentRootType, allowedVolumes));',
  'Test both volume info and root type returns true (for stricter checking of\n' +
    'a volume type).)',
  'Test that if volume type matches with but not root type should return false.',
  'Test that volume type is defined but the root type is null, allowed volumes\n' +
    'should allow for stricter checking of a volume type, this should return\n' +
    'false.',
  'Test that root type is defined but not volume type. If the allowed volumes\n' +
    'requires both defined, should return false.',
  'currentVolume  null, currentRootType, allowedVolumes));',
  'Test that volume type, root type and id are all defined.',
  'Test that volume type, root type are defined but id does not match.',
  'Test multiple volume types, root types and ids defined with one matching.',
  'Test multiple volume types, root types and ids defined with none matching.',
  'Test undefined types return false.',
  'Test that below, equal to and above the minSize threshold returns correct\n' +
    'results.',
  'Remaining Size: 512 KB, Min Size: 1 GB',
  'Remaining Size: 1 GB, Min Size: 1 GB',
  'Remaining Size: 2 GB, Min Size: 1 GB',
  'Test that below, equal to and above the minRatio threshold returns correct\n' +
    'results.',
  'Remaining Size Ratio: 0.1, Threshold: 0.2',
  'Remaining Size Ratio: 0.1, Threshold: 0.1',
  'Remaining Size Ratio: 0.1, Threshold: 0.05'
]
command_handler.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Interface on which `CommandHandler` depends.',
  'Name of a command (for UMA).',
  'A map of FilesCommand to the ID that is used in the DOM to reference them.',
  'Strongly type any places which can ONLY provide a key that directly maps to a\n' +
    'files command above.',
  'Handle of the command events.',
  'Command elements.',
  '@param fileManager_ Classes |CommandHandler| depends.',
  'Decorate command tags in the document.',
  'Register events.',
  'Set focus asynchronously to give time for menu "show" event to finish and',
  'have all items set up before focusing.',
  'Handles command events.',
  'Handles canExecute events.',
  'Returns command handler by name.',
  'Keep the order of this in sync with FileManagerMenuCommands in\n' +
    'tools/metrics/histograms/enums.xml.\n' +
    'The array indices will be recorded in UMA as enum values. The index for each\n' +
    'root type should never be renumbered nor reused in this array.',
  'Records the menu item as selected in UMA.'
]
constants.ts [
  'Copyright 2017 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'These metadata is expected to be cached to accelerate computeAdditional.\n' +
    'See: crbug.com/458915.',
  'Metadata property names used by FileTable and FileGrid.\n' +
    'These metadata is expected to be cached.\n' +
    'TODO(sashab): Store capabilities as a set of flags to save memory. See\n' +
    'https://crbug.com/849997',
  'Metadata properties used to inform the user about DLP (Data Leak Prevention)\n' +
    'Files restrictions. These metadata is expected to be cached.',
  'Name of the default crostini VM: crostini::kCrostiniDefaultVmName',
  'Name of the Plugin VM: plugin_vm::kPluginVmName.',
  'Name of the default bruschetta VM: bruschetta::kBruschettaVmName',
  'DOMError type for crostini connection failure.',
  'ID of the fake fileSystemProvider custom action containing OneDrive document\n' +
    'URLs.',
  'ID of the fake fileSystemProvider custom action containing OneDrive document\n' +
    'User Emails.',
  "TODO(b/330786891): Remove this once it's no longer needed for backwards",
  'compatibility with ODFS.',
  'ID of the fake fileSystemProvider custom action containing OneDrive document\n' +
    'Reauthentication Required state.',
  'ID of the fake fileSystemProvider custom action containing OneDrive document\n' +
    'Account state.',
  'An array of IDs of fake fileSystemProvider custom actions for ODFS.',
  'All icon types.',
  'Explicitly request the icon to be 0x0. Used to avoid the scenario where a',
  '`type` is not specifically supplied vs. actually wanting a blank icon.',
  'Extension ID for OneDrive FSP, also used as ProviderId.'
]
crossover_search_utils.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Return DirectoryEntry of the first root directory (all volume display root\n' +
    'directories) that contains one or more query-matched files, returns null if\n' +
    'no such directory is found.\n' +
    '@param volumeManager The volume manager.\n' +
    '@param dirModel The directory model.\n' +
    '@param searchQuery Search query.',
  'Make sure the volume root is resolved before scanning.'
]
crostini_controller.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'CrostiniController handles the foreground UI relating to crostini.',
  '@param crostini_ Crostini background object.',
  'Refreshes the Linux files item at startup and when crostini enabled\n' +
    'changes.',
  'Setup Linux files fake root.',
  'Load the list of shared paths and show a toast if this is the first time\n' +
    'that FilesApp is loaded since login.\n' +
    '@param maybeShowToast if true, show toast if this is the first\n' +
    'time FilesApp is opened since login.',
  'Toasts are queued and shown one-at-a-time if multiple apply.',
  'TODO(b/260521400): Or at least, they will once this bug is fixed.'
]
deferred_elements.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Elements not used in the first painting of the app.'
]
dialog_action_controller.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Controller for handling behaviors of the Files app opened as a file/folder\n' +
    'selection dialog.',
  'Bound function for onCancel_.',
  '@param dialogType Dialog type.\n' +
    '@param dialogFooter Dialog footer.\n' +
    '@param directoryModel Directory model.\n' +
    '@param volumeManager Volume manager.\n' +
    '@param fileFilter File filter model.\n' +
    '@param namingController Naming controller.\n' +
    '@param fileSelectionHandler Initial file selection.\n' +
    '@param launchParam Whether the dialog should return local path or not.',
  'List of acceptable file types for open dialog.',
  '',
  'If OK action is clicked when a directory is selected, open the directory.',
  "Save-as doesn't require a valid selection from the list, since",
  "we're going to take the filename from the text input.",
  'Handle a click of the ok button.\n' +
    'The ok button has different UI labels depending on the type of dialog, but\n' +
    "in code it's always referred to as 'ok'.",
  'All other dialog types require at least one selected list item.',
  'The logic to control whether or not the ok button is enabled should',
  'prevent us from ever getting here, but we sanity check to be sure.',
  'Multi-file selection has no other restrictions.',
  'Everything else must have exactly one.',
  'Cancels file selection and closes the file selection dialog.',
  'Creates a new folder using new-folder command.',
  "Handles disabledChange event to update the new-folder button's\n" +
    'avaliability.',
  'Tries to close this modal dialog with some files selected.\n' +
    'Performs preprocessing if needed (e.g. for Drive).\n' +
    '@param selection Contains urls, filterIndex and multiple fields.',
  "Call next method on a timeout, as it's unsafe to",
  'close a window from a callback.',
  'Record the root types of chosen files in OPEN dialog.',
  'Recorded per file.',
  'Returns the regex to match against files for the current filter.',
  'Note selectedFilterIndex indexing is 1-based. (0 is "all files").',
  'Updates the file input field to agree with the current filter.\n' +
    '@param forConfirm The update is for the final confirm step.',
  'No current extension.',
  'Filters file according to the selected file type.',
  'In save dialog, update the destination name extension.',
  'Handles selection change.',
  'If this is a save-as dialog, copy the selected file into the filename',
  'input text box.',
  'Updates the Ok button enabled state.',
  'No "select" buttons on the full page UI.',
  'In SELECT_FOLDER mode, we allow to select current directory',
  'when nothing is selected.'
]
directory_contents.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Common callback types used by content scanners.',
  'Scanner of the entries.',
  'Starts to scan the entries. Any entries discovered during the scanning\n' +
    'operation should be delivered on the `entriesCallback`. This callback can\n' +
    'be called multiple times. Once the scanning completed successfully, it must\n' +
    'call the `successCallback`. If the scanning encountered an error it must\n' +
    'call the `errorCallback`. The last parameter tells the scanner if it must\n' +
    'invalidate any cached results before scanning.',
  'Request cancelling of the running scan. When the cancelling is done,\n' +
    'an error will be reported from errorCallback passed to scan().',
  'Whether the scanner pushes the entry directly to the store.',
  'No-op class to be used for fake entries and such.',
  'A dummy implementation of the scan method. It delivers an empty list of\n' +
    'entries on the `entriesCallback` and immediately calls the\n' +
    '`successCallback`.',
  'Scanner of the entries in a directory.',
  'Starts to read the entries in the directory.',
  "If entry is not specified or if entry doesn't implement createReader,",
  'we cannot read it.',
  'All entries are read.',
  'Latency metric variant names supported by the search content scanner.',
  'Local volume; typically local SSD',
  'Removable storage, typically USB',
  'Provided volume, such as OneDrive',
  'Android based volume exposed via DocumentsProvider type service.',
  'A content scanner capable of scanning both the local file system and Google\n' +
    'Drive. When created you need to specify the root type, current entry\n' +
    'in the directory tree, the search query and options. The `rootType` together\n' +
    'with `options` is then used to determine if the search is conducted on the\n' +
    'local folder, root folder, or on the local file system and Google Drive.\n' +
    'NOTE: This class is a stop-gap solution when transitioning to a content\n' +
    'scanner that talks to a browser level service. The service ultimately should\n' +
    'be the one that determines what is being searched, and aggregates the results\n' +
    'for the frontend client.',
  'For the given `dirEntry` it returns a list of searchable roots. This\n' +
    'method exists as we have special volumes that aggregate other volumes.\n' +
    'Examples include Crostini, Playfiles, aggregated in My files or\n' +
    'USB partitions aggregated by USB root. For those cases we return multiple\n' +
    'search roots. For plain directories we just return the directory itself.',
  'For the given entry attempts to return the top most volume that contains\n' +
    'this entry. The reason for this method is that for some entries, getting\n' +
    'the root volume is not sufficient. For example, for a Linux folder the root\n' +
    'volume would be the Linux volume. However, in the UI Linux is nested inside\n' +
    'My files, so we need to get My files as the top-most volume of a Linux\n' +
    'directory.',
  "It's a placeholder or a fake entry.",
  'TODO(b/289003444): Fix this cast.',
  'Here entry should never be null, but due to Closure annotations, Closure',
  'thinks it may be (both prefixEntry and displayRoot above are not',
  'guaranteed to be non-null).',
  'Fetch the wrapped VolumeEntry from the store.',
  'TODO(b/289003444): Fix this cast.',
  'For the given colume type returns root directories for all volumes with the\n' +
    'given `volumeType`.',
  'Creates a single promise that, when fulfilled, returns a non-null array of\n' +
    'file entries. The array may be empty. The metricVariant must be a valid\n' +
    'name of the UMA search metric variant.',
  'Creates a promise that, when fulfilled, returns a non-null array of\n' +
    'file entries. This promise uses a client side recursive entry reader.',
  'A promise that resolves to an entry if it is modified after cutoffDate or',
  'null, otherwise. Used to filter entries by modified time. If we fail to',
  'get metadata for an entry we return it without comparison, to be on the',
  'safe side.',
  'TODO(b:289003444): Check if metadata is available in the store.',
  'More entries found callback.',
  'All entries read callback.',
  'Error callback.',
  'Should stop callback.',
  'For the given set of `folders` holding directory entries, creates an array\n' +
    'of promises that, when fulfilled, return an array of entries in those\n' +
    'directories.',
  'Returns an array of promises that, when fulfilled, return an array of\n' +
    'entries matching the current query, modified timestamp, and category for\n' +
    'folders located under My files.',
  'Returns an array of promises that, when fulfilled, return an array of\n' +
    'entries matching the current query, modified timestamp, and category for\n' +
    'all known removable drives.',
  'Returns an array of promises that, when fulfilled, return an array of\n' +
    'entries matching the current query, modified timestamp, and category for\n' +
    'all known document providers.',
  'Returns an array of promises that, when fulfilled, return an array of\n' +
    'entries matching the current query, modified timestamp, and category for\n' +
    'all known file system provider volumes.',
  'Returns a promise that, when fulfilled, returns an array of file entries\n' +
    'matching the current query, modified timestamp and category for files\n' +
    'located on Drive.',
  'My Files or a folder nested in it.',
  'Starts the file name search.',
  'The job of entriesCallbackCaller is to call entriesCallback as soon as',
  'entries are available. We call successCallback only once all of them are',
  'settled, but we do not wish to wait for all of promises to be settled',
  'before showing the entries.',
  'Scanner of the entries for the metadata search on Drive File System.',
  'Starts to metadata-search on Drive File System.',
  'Files app launched with "volumeFilter" launch parameter will filter\n' +
    'out some volumes. Before returning the recent entries, we need to\n' +
    "check if the entry's volume location is valid or not\n" +
    '(crbug.com/1333385/#c17).',
  'Scanner of media-view volumes.',
  'Creates a scanner at the given root entry of the media-view volume.',
  'This scanner provides flattened view of media providers.\n' +
    'In FileSystem API level, each media-view root directory has directory\n' +
    'hierarchy. We need to list files under the root directory to provide\n' +
    'flatten view. A file will not be shown in multiple directories in\n' +
    'media-view hierarchy since no folders will be added in media documents\n' +
    'provider. We can list all files without duplication by just retrieving\n' +
    'files in directories recursively.',
  'To provide flatten view of files, this media-view scanner retrieves',
  "files in directories inside the media's root entry recursively.",
  'Shows an empty list and spinner whilst starting and mounting the\n' +
    'crostini container.\n' +
    'This function is only called once to start and mount the crostini\n' +
    'container.  When FilesApp starts, the related fake root entry for\n' +
    'crostini is shown which uses this CrostiniMounter as its ContentScanner.\n' +
    'When the sshfs mount completes, it will show up as a disk volume.\n' +
    '`refreshNavigationRootsReducer` will detect that crostini\n' +
    'is mounted as a disk volume and hide the fake root item while the\n' +
    'disk volume exists.',
  "Shows an empty list and spinner whilst starting and mounting a Guest OS's\n" +
    'shared files.\n' +
    'When FilesApp starts, the related placeholder root entry is shown which uses\n' +
    'this GuestOsMounter as its ContentScanner. When the mount succeeds it will\n' +
    'show up as a disk volume. `refreshNavigationRootsReducer` will\n' +
    'detect thew new volume and hide the placeholder root item while the disk\n' +
    'volume exists.',
  'Creates a new GuestOSMounter. The `guest_id` is the id for the\n' +
    'GuestOsMountProvider to use',
  'TODO(crbug/1293229): Strings',
  'Read all the Trash directories for content.',
  'volumeManager Identifies the underlying filesystem.',
  'Scan all the trash directories for content.',
  'All Trash directories have been read.',
  'Top-level Android folders which are visible by default.',
  'Windows files or folders to hide by default.',
  'This class manages filters and determines a file should be shown or not.\n' +
    "When filters are changed, a 'changed' event is fired.",
  'Setup initial filters.',
  'Registers the given filter with the given name.',
  '@param name Filter identifier.',
  "Show/Hide hidden files (i.e. files starting with '.', or other system files\n" +
    'for Windows files). Passing `true` as the `visible` parameters means the\n' +
    'hidden files should be visible to the user.',
  "Hide folders under .Trash, but we don't want to hide anything showing",
  'in "Trash", hence the `!isTrashEntry` check because all entries',
  'showing under "Trash" will be TrashEntry.',
  'Only hide WINDOWS_HIDDEN in downloads:/PvmDefault.',
  'Returns whether or not hidden files are visible to the user now.',
  'Show/Hide uncommon Android folders.\n' +
    '@param visible True if uncommon folders should be visible to the\n' +
    'user.',
  'Hide top-level folder or sub-folders that should be hidden.',
  '@return True if uncommon folders is visible to the user now.',
  "Sets up a filter to hide /Download directory in 'Play files' volume.\n" +
    `"Play files/Download" is an alias to Chrome OS's Downloads volume. It is\n` +
    'convenient in Android file picker, but can be confusing in Chrome OS Files\n' +
    "app. This function adds a filter to hide the Android's /Download.",
  '@param entry File entry.\n' +
    '@return True if the file should be shown, false otherwise.',
  'A context of DirectoryContents.\n' +
    'TODO(yoshiki): remove this. crbug.com/224869.',
  'Whether the content scanner was based in the store.',
  'This class is responsible for scanning directory (or search results), and\n' +
    'filling the fileList. Different descendants handle various types of directory\n' +
    'contents shown: basic directory, drive search results, local search results.',
  'Metadata snapshot which is used to know which file is actually changed.',
  '@param context The file list context.\n' +
    '@param isSearch True for search directory contents, otherwise false.\n' +
    '@param directoryEntry The entry of the current directory.\n' +
    '@param scannerFactory The factory to create ContentScanner instance.',
  'Create the copy of the object, but without scan started.\n' +
    '@return Object copy.',
  'Returns the file list length.',
  'Use a given fileList instead of the fileList from the context.\n' +
    '@param fileList The new file list.',
  'Creates snapshot of metadata in the directory. Returns Metadata snapshot\n' +
    'of current directory contents.',
  'Sets metadata snapshot which is used to check changed files.\n' +
    '@param metadataSnapshot A metadata snapshot.',
  'Use the filelist from the context and replace its contents with the entries\n' +
    'from the current fileList. If metadata snapshot is set, this method checks\n' +
    'actually updated files and dispatch change events by calling updateIndexes.',
  'TODO(yawano): While we should update the list with adding or deleting',
  'what actually added and deleted instead of deleting and adding all',
  ... 40 more items
]
directory_contents_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Mock chrome APIs.',
  'Initializes the test environment.',
  'Install mock chrome APIs.',
  'Check that files are shown or hidden correctly.',
  'Create a fake volume manager that provides entry location info.',
  'Create a set of entries in root dir, and in /PvmDefault dir.',
  '.test should be hidden in any dir.',
  '$RECYCLE.BIN is hidden in downloads:/PvmDefault only.',
  'No files hidden when we show hidden files.',
  '$RECYCLE.BIN is not hidden in other volumes.',
  'Still no files hidden when we show hidden files.',
  "Check the recent entries which doesn't match the query or whose volume is\n" +
    'disallowed will be filtered out.',
  'Mock volume manager',
  '1.txt: volume is not allowed; 3.png: query is not matched.'
]
directory_model.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Used to track asynchronous directory change use like:\n' +
    'const tracker = directoryModel.createDirectoryChangeTracker();\n' +
    'tracker.start();\n' +
    'try {\n' +
    '... async code here ...\n' +
    'if (tracker.hasChanged) {\n' +
    "// This code shouldn't continue anymore.\n" +
    '}\n' +
    '} finally {\n' +
    'tracker.stop();\n' +
    '}',
  'Indicates that another directory change has occurred since start(). The',
  'change tracker that sees a `hasChanged=true` should not proceed to change',
  'the directory, because they became stale.',
  "If directory files changes too often, don't rescan directory more than once",
  'per specified interval',
  'Used for operations that require almost instant rescan.',
  'Helper function that can decide if the scan of the given entry should be\n' +
    'performed by recent scanner or other (search) scanner. In transition period\n' +
    'between V1 and V2 versions of search, when the user searches in Recent, and\n' +
    'uses Recent as location, we reuse the Recent scanner. Otherwise, the true\n' +
    'search scanner is used.',
  'Potential search in Recents. However, if options are present and are',
  'indicating that the user wishes to scan current entry, still use Recent',
  'scanner.',
  'Helper function that determines the category of files we are looking for\n' +
    'based on the fake entry, query and options.',
  'Whether the content scanner was based in the store.',
  'Data model for the current directory for Files app.\n' +
    'It encapsulates the current directory, the file selection, directory scanner,\n' +
    'etc.',
  'Number of running directory change trackers.',
  '@param singleSelection True if only one file could be selected at the time.',
  'Empty file list which is used as a dummy for inactive view of file list.',
  'For non-watchable directories (e.g. FakeEntry) and volumes (MTP) we need',
  'to subscribe to the IOTask and manually refresh.',
  "Handles the current directory slice of the store's state.\n" +
    '@param state latest state from the store.',
  'Observe volume changes.',
  'If the directory is the same or the newURL is null, ignore it.',
  'When something changed the current directory status to STARTED, Here we',
  'initiate the actual change and will update to SUCCESS at the end.',
  'TODO(lucmult): Fix potential race condition in this await/then.',
  'Initiate the directory change.',
  'Initiate the directory change.',
  'Reacts to changes in the search state of the store. If the search changed\n' +
    'and the query is not empty, this method triggers a new directory search.',
  'Do not handle any search state until we have the current directory set.',
  'Requests to handle current search state may be triggered by the files app',
  'before it is fully started.',
  'Bail out early if the search part of the state has not changed.',
  'Cache the last received search state for future comparisons.',
  'We change the search state (STARTED, SUCCESS, etc.) so only trigger',
  'a new search if the query or the options have changed.',
  'Disposes the directory model by removing file watchers.',
  '@return Files in the current directory.',
  '@return File list which is always empty.',
  '@return Selection in the fileList.',
  'Obtains current volume information.',
  '@return Root type of current root, or null if not found.',
  'Metadata property names that are expected to be Prefetched.',
  '@return True if the current directory is read only. If there is no entry\n' +
    'set, then returns true.',
  '@return True if the a scan is active.',
  '@return True if search is in progress.',
  "@return True if it's on Drive.",
  '@return True if the current volume is provided by FuseBox.',
  "@return True if it's on a Linux native volume.",
  '@return True if the current volume is blocked by DLP.',
  '@param volumeType Volume Type\n' +
    '@return True if current root volume type is equal to specified volume type.',
  'Updates the selection by using the updateFunc and publish the change event.\n' +
    'If updateFunc returns true, it force to dispatch the change event even if\n' +
    'the selection index is not changed.\n' +
    '@param selection Selection to be updated.\n' +
    '@param updateFunc Function updating the selection.',
  'Begin change.',
  'If dispatchNeeded is true, we should ensure the change event is',
  'dispatched.',
  'Check if the change event is dispatched in the endChange function',
  'or not.',
  'If the change event have been already dispatched, dispatchNeeded is',
  'false.',
  'The selection status (selected or not) is not changed because',
  'this event is caused by the change of selected item.',
  'Sets to ignore current directory deletion. This method is used to prevent\n' +
    'going up to the volume root with the deletion of current directory by\n' +
    'rename operation in directory tree.\n' +
    '@param value True to ignore current directory deletion.',
  'Invoked when a change in the directory is detected by the watcher.\n' +
    '@param event Event object.',
  'If the change is deletion of currentDir, move up to its parent',
  'directory.',
  'Passing the resolved entries and failed URLs as the removed',
  "files. The URLs are removed files and they chan't be resolved.",
  "Invokes force refresh if the detailed information isn't provided.",
  'This can occur very frequently (e.g. when copying files into Downloads)',
  'and rescan is heavy operation, so we keep some interval for each',
  'rescan.',
  'Invoked when filters are changed.',
  'If the current directory should be hidden in the new filter setting,',
  "change the current directory to the current volume's root.",
  'Invoked when volumes have been modified in the state.\n' +
    '@param state latest state from the store.',
  'Navigate out of ODFS if it got disabled and the current directory is',
  'under ODFS.',
  'Normally the default root is MyFiles, however with SkyVault, this',
  'is the volume in the Cloud (OneDrive or GoogleDrive).',
  '@return Array of selected entries.',
  '@param value List of selected entries.',
  '@return Lead entry.',
  '@param value The new lead entry.',
  'Schedule rescan with short delay.\n' +
    '@param refresh True to refresh metadata, or false to use cached one.\n' +
    '@param invalidateCache True to invalidate the backend scanning result\n' +
    'cache. This param only works if the corresponding backend scanning\n' +
    'supports cache.',
  'Schedule rescan with delay. Designed to handle directory change\n' +
    'notification.\n' +
    '@param refresh True to refresh metadata, or false to use cached one.\n' +
    '@param invalidateCache True to invalidate the backend scanning result\n' +
    'cache. This param only works if the corresponding backend scanning\n' +
    'supports cache.',
  'Schedule rescan with delay. If another rescan has been scheduled does\n' +
    'nothing. File operation may cause a few notifications what should cause\n' +
    'a single refresh.\n' +
    '@param delay Delay in ms after which the rescan will be performed.\n' +
    '@param refresh True to refresh metadata, or false to use cached one.\n' +
    '@param invalidateCache True to invalidate the backend scanning result\n' +
    'cache. This param only works if the corresponding backend scanning\n' +
    'supports cache.',
  'Cancel a rescan on timeout if it is scheduled.',
  'Rescan current directory. May be called indirectly through rescanLater or\n' +
    'directly in order to reflect user action. Will first cache all the\n' +
    'directory contents in an array, then seamlessly substitute the fileList\n' +
    'contents, preserving the select element etc.\n' +
    'This should be to scan the contents of current directory (or search).\n' +
    '@param refresh True to refresh metadata, or false to use cached one.\n' +
    '@param invalidateCache True to invalidate the backend scanning result\n' +
    'cache. This param only works if the corresponding backend scanning\n' +
    'supports cache.',
  'Run scan on the current DirectoryContents. The active fileList is cleared\n' +
    'and the entries are added directly.\n' +
    'This should be used when changing directory or initiating a new search.\n' +
    '@param newDirContents New DirectoryContents instance to replace\n' +
    '`currentDirContents_`.\n' +
    '@param callback Callback with result. True if the scan is completed\n' +
    'successfully, false if the scan is failed.',
  'Clear metadata information for the old (no longer visible) items in the',
  'file list.',
  'Retrieve metadata information for the newly selected directory.',
  'When bulk pinning is enabled, this call is made with more frequency in',
  'the UI delegate as hosted documents receive the available offline tick',
  'when they are both explicitly pinned and heuristically cached.',
  'Clear the table, and start scanning.',
  'Similar to clearAndScan_() but instead of passing a `newDirContents`, it\n' +
    'uses the `currentDirContents_`.',
  'Adds/removes/updates items of file list.\n' +
    '@param changedEntries Entries of updated/added files.\n' +
    '@param removedUrls URLs of removed files.',
  ... 108 more items
]
directory_model_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Initializes the test environment.',
  'Mock chrome APIs.',
  'Install mock chrome APIs.',
  "Mock DirectoryModel's dependencies and return a DirectoryModel instance.",
  'Tests that the fake directory will be re-scanned after the delete and copy\n' +
    'operation.',
  'Current directory is not Recent.',
  'Current directory is Recent.',
  'Tests that the non-watchable volume will be re-scanned after each of\n' +
    'the IOTask operations.',
  'Current directory is non-watchable.'
]
directory_tree_naming_controller.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Naming controller for directory tree.',
  'Whether the entry being renamed is a root of a removable partition/volume.',
  'Stop propagation of click event to prevent it being captured by',
  'directory item and current directory is changed to editing item.',
  'These events propagation needs to be stopped otherwise ripple will show',
  'on the tree item when the input is clicked.',
  "Note: 'up/down' are events from <paper-ripple> component.",
  'Returns input element.',
  'Attaches naming controller to specified directory item and start rename.\n' +
    '@param directoryItem An html element of a node of the target.\n' +
    '@param isRemovableRoot Indicates whether the target is a removable volume\n' +
    'root or not.\n' +
    '@param volumeInfo A volume information about the target entry. |volumeInfo|\n' +
    'can be null if method is invoked on a folder that is in the tree view\n' +
    'and is not root of an external drive.',
  'Commits rename.',
  'If new name is the same as current name or empty, do nothing.',
  'Performs rename operation.\n@param newName Validated name.',
  'TODO(yawano): Rename might take time on some volumes. Optimistically show',
  'new name in the UI before actual rename is completed.',
  'Put the new name in the .label element before detaching the <input> to',
  'prevent showing the old name.',
  "We currently don't have promises/callbacks for when removableRoots are",
  "successfully renamed, so we can't update their subdirectories or update",
  'the current directory to them at this point.',
  'If renamed directory was current directory, change it to new one.',
  'ignore=  false);',
  'Detaches controller from current directory item.',
  'Restore focus to directory tree.',
  'Handles keydown event.'
]
elements_importer.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
empty_folder_controller.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The empty state image for the Recents folder.',
  'The image shown when search returned no results.',
  'The empty state image for the Trash folder.',
  'The reauthentication required image for ODFS. There are no files when\n' +
    'reauthentication is required (scan fails).',
  'The frozen account image for ODFS. There are no files when the account\n' +
    'is frozen (scan fails).',
  "The state of the user's OneDrive account. Matches the enum in ODFS.",
  'TODO(b/330786891): Remove reauthenticationRequired once no longer needed',
  'for backwards compatibility with ODFS.',
  'Empty folder controller which controls the empty folder element inside\n' +
    'the file list container.',
  'Checks whether the volumes or fake entries changed, and sets an error state\n' +
    'if there are no volumes except Recent to show.',
  'MyFiles might still be present as an UI entry, in case the migration is',
  'in process.',
  'Handles scan start.',
  'Queries ODFS for the ODFS metadata using the special root actions request.',
  'Request ODFS root actions to get ODFS metadata.',
  'Find the reauthentication required action.',
  'Handles scan fail. If the scan failed for the ODFS volume due to\n' +
    'reauthenticaton being required or the user having a frozen account, set the\n' +
    'state of the volume as not interactive and set the correct svg to display.',
  'If scan did not fail for ODFS, return.',
  'If the error is not NO_MODIFICATION_ALLOWED_ERR or QUOTA_EXCEEDED_ERR,',
  'return. This is equivalent to the ACCESS_DENIED and NO_SPACE error',
  'respectively thrown by ODFS.',
  'Set the svg and set ODFS to non-interactive if the ACCESS_DENIED was due',
  'to reauthentication being required rather than some other access error.',
  'TODO(b/330786891): Remove odfsMetadata.reauthenticationRequired',
  'once no longer needed for backwards compatibility with ODFS.',
  'Handles scan finish.',
  'Set |isInteractive| to true for ODFS when in an authenticated state.',
  'Shows the given message. It may consist of just the `title`, or\n' +
    '`title` and `description`.',
  'Shows the ODFS reauthentication required message. Includes the "Sign in"\n' +
    'link and sets the handler.',
  'Shows the ODFS frozen account message.',
  'Called when "Sign in" link for ODFS reauthentication is clicked. Request\n' +
    'a new ODFS mount. ODFS will unmount the old mount if the authentication is\n' +
    'successful in the new mount.',
  "Shows the message informing the user that the file system isn't available,\n" +
    'for example because the admin misconfigured SkyVault policies.',
  'Resets the empty folder UI.\n' +
    '@param setImageVisible Whether the image element should be visible.',
  'Updates visibility of empty folder UI.'
]
empty_folder_controller_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Test class to enable accessing protected methods on the',
  '`EmptyFolderController`.',
  'Create EmptyFolderController instance with dependencies.',
  'Setup the image, nested svg and nested use elements.',
  'Tests that no files message will be rendered for each filter type.',
  'Mock current directory to Recent.',
  'For all filter.',
  'For audio filter.',
  'For document filter.',
  'For image filter.',
  'For video filter.',
  'Tests that no files message will be hidden for non-Recent entries.',
  'Mock current directory to Downloads.',
  'Tests that no files message will be hidden if scanning is in progress.',
  'Mock current directory to Recent.',
  'Mock scanning.',
  'Tests that no files message will be hidden if there are files in the list.',
  'Mock current directory to Recent.',
  'Current file list has 1 item.',
  'Tests that the empty folder element is hidden and ODFS is still interactive\n' +
    'if the scan finished with no error. Add ODFS to the store so that the\n' +
    '|isInteractive| state of the volume can be read.',
  'Set ODFS as the volume.',
  'Expect that ODFS is interactive.',
  'Complete the scan with no error.',
  'Expect that the empty-folder element is hidden.',
  'Expect that ODFS is still interactive.',
  'TODO(b/330786891): Remove this test once',
  'FSP_ACTION_HIDDEN_ONEDRIVE_REAUTHENTICATION_REQUIRED is no longer needed for',
  'backwards compatibility with ODFS.',
  'Tests that the empty folder element is hidden and ODFS is still interactive\n' +
    'if the scan failed from a NO_MODIFICATION_ALLOWED_ERR (access denied) but\n' +
    'reauthentication is not required. Add ODFS to the store so that the\n' +
    '|isInteractive| state of the volume can be read.',
  'Mock fileManagerPrivate.getCustomActions which is called when determining',
  'if reauth is required.',
  'Reauthentication is not required.',
  'Set ODFS as the volume.',
  'Initialise the element to be shown to detect when it becomes hidden.',
  'Expect that ODFS is interactive.',
  'Pass a NO_MODIFICATION_ALLOWED_ERR error (triggers a call to',
  'getCustomActions).',
  'Expect that the empty-folder element is hidden. Need to wait for |updateUi|',
  '(where the element is hidden) to be called as the check for',
  'reauthentication is required is asynchronous.',
  'Expect that ODFS is still interactive.',
  'Tests that the empty folder element is hidden and ODFS is still interactive\n' +
    'if the scan failed from a NO_MODIFICATION_ALLOWED_ERR (access denied) but\n' +
    'reauthentication is not required. Add ODFS to the store so that the\n' +
    '|isInteractive| state of the volume can be read.',
  'Mock fileManagerPrivate.getCustomActions which is called when determining',
  'if reauth is required.',
  'Reauthentication is not required.',
  'Set ODFS as the volume.',
  'Initialise the element to be shown to detect when it becomes hidden.',
  'Expect that ODFS is interactive.',
  'Pass a NO_MODIFICATION_ALLOWED_ERR error (triggers a call to',
  'getCustomActions).',
  'Expect that the empty-folder element is hidden. Need to wait for |updateUi|',
  '(where the element is hidden) to be called as the check for',
  'reauthentication is required is asynchronous.',
  'Expect that ODFS is still interactive.',
  'Tests that the empty folder element is hidden and ODFS is still interactive\n' +
    'if the scan failed from a QUOTA_EXCEEDED_ERR but the account is not frozen.\n' +
    'Add ODFS to the store so that the |isInteractive| state of the volume can be\n' +
    'read.',
  'Mock fileManagerPrivate.getCustomActions which is called when determining',
  'if reauth is required.',
  'The account is not frozen.',
  'Set ODFS as the volume.',
  'Initialise the element to be shown to detect when it becomes hidden.',
  'Expect that ODFS is interactive.',
  'Pass a QUOTA_EXCEEDED_ERR error (triggers a call to getCustomActions).',
  'Expect that the empty-folder element is hidden. Need to wait for |updateUi|',
  '(where the element is hidden) to be called as the check for',
  'the frozen state is asynchronous.',
  'Expect that ODFS is still interactive.',
  'Tests that the empty state image shows up when root type is Trash.',
  'TODO(b/330786891): Remove test once',
  'FSP_ACTION_HIDDEN_ONEDRIVE_REAUTHENTICATION_REQUIRED is no longer needed',
  'for backwards compatibility with ODFS.',
  'Tests that the reauthentication required image shows up and ODFS becomes\n' +
    'non-interactive when the scan failed from a NO_MODIFICATION_ALLOWED_ERR\n' +
    '(access denied) and reauthentication is required. Add ODFS to the store so\n' +
    'that the |isInteractive| state of the volume can be set and read.',
  'Mock fileManagerPrivate.getCustomActions which is called when determining',
  'if reauth is required.',
  'Reauthentication is required.',
  'Set ODFS as the volume.',
  'Expect that ODFS is interactive.',
  'Initialise the element to be hidden to detect when it becomes shown.',
  'Pass a NO_MODIFICATION_ALLOWED_ERR error (triggers a call to',
  'getCustomActions).',
  'Expect that the empty-folder element is shown and the sign in link is',
  'present. Need to wait for |updateUi| (where the element is shown) to be',
  'called as the check for reauthentication is required is asynchronous.',
  'Expect that ODFS is non-interactive.',
  'Tests that the reauthentication required image shows up and ODFS becomes\n' +
    'non-interactive when the scan failed from a NO_MODIFICATION_ALLOWED_ERR\n' +
    '(access denied) and reauthentication is required. Add ODFS to the store so\n' +
    'that the |isInteractive| state of the volume can be set and read.',
  'Mock fileManagerPrivate.getCustomActions which is called when determining',
  'if reauth is required.',
  'Reauthentication is required.',
  'Set ODFS as the volume.',
  'Expect that ODFS is interactive.',
  'Initialise the element to be hidden to detect when it becomes shown.',
  'Pass a NO_MODIFICATION_ALLOWED_ERR error (triggers a call to',
  'getCustomActions).',
  'Expect that the empty-folder element is shown and the sign in link is',
  'present. Need to wait for |updateUi| (where the element is shown) to be',
  'called as the check for reauthentication is required is asynchronous.',
  'Expect that ODFS is non-interactive.',
  'Tests that the frozen account image shows up and ODFS becomes\n' +
    'non-interactive when the scan failed from a QUOTA_EXCEEDED_ERR and the user\n' +
    'has a frozen account. Add ODFS to the store so that the |isInteractive| state\n' +
    'of the volume can be set and read.',
  ... 18 more items
]
fake_android_app_list_model.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@param appNames List app names to be added.\n@return fake for unittests.',
  'AndroidAppListModel fake.',
  '@param appNames List app names to be added.',
  '@return Number of picker apps.',
  '@param index Index of the picker app to be retrieved.\n' +
    '@return The value of the\n' +
    '|index|-th picker app.'
]
fake_file_selection_handler.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Mock FileSelectionHandler.',
  'Make sure that the entry is in the directory content.',
  'Mark the entry as selected.'
]
file_list_model.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Currently we only support group by modificationTime or isDirectory, so the\n' +
    'group value can only be one of them.',
  'This represents a group header.',
  'The start index of this group.',
  'The end index of this group.',
  'The actual group value.',
  'The group label.',
  'This represents the snapshot of a groupBy result.',
  'When groupBy is calculated, what the sort order is.',
  'The groupBy results, each item is a `GroupHeader` type.',
  'File list.',
  'Whether this file list is sorted in descending order.',
  'The number of folders in the list.',
  'The number of files in the list.',
  'The number of image files in the list.',
  'Whether to use modificationByMeTime as "Last Modified" time.',
  'The volume manager.',
  'Used to get the label for entries when\nsorting by label.',
  'The field to do group by on.',
  'The key is the field name which is used by groupBy. The value is a\n' +
    'object with type GroupBySnapshot.',
  'Initialize compare functions.',
  '@param fileType Type object returned by getType().\n' +
    '@return Localized string representation of file type.',
  "Partitions on removable volumes are treated separately, they don't",
  'have translatable names.',
  'Sorts data model according to given field and direction and dispatches\n' +
    'sorted event.\n' +
    '@param field Sort field.\n' +
    '@param direction Sort direction.',
  'Removes and adds items to the model.\n' +
    'The implementation is similar to ArrayDataModel.splice(), but this\n' +
    'has a Files app specific optimization, which sorts only the new items and\n' +
    'merge sorted lists.\n' +
    'Note that this implementation assumes that the list is always sorted.\n' +
    '@param index The index of the item to update.\n' +
    '@param deleteCount The number of items to remove.\n' +
    '@param args The items to add.\n' +
    '@return An array with the removed items.',
  'Prepare a comparison function to sort the list.',
  'Store the given new items in |newItems| and sort it before marge them to',
  'the existing list.',
  'Creating a list of existing items.',
  "This doesn't include items which should be deleted by this splice() call.",
  'Initialize splice permutation with -1s.',
  'Values of undeleted items will be filled in following merge step.',
  'Merge the list of existing item and the list of new items.',
  'Determine which should be inserted to the resulting list earlier, the',
  'smallest item of unused current items or the smallest item of unused',
  'new items.',
  'If the comparator is not defined, new items should be inserted to',
  'the insertion position. That is, the current items before insertion',
  'position should be pushed to the resulting list earlier.',
  'Calculate the index property of splice event.',
  'If no item is inserted, it is simply the insertion/deletion position.',
  'If at least one item is inserted, it should be the resulting index of the',
  'item which is inserted first.',
  'Dispatch permute/splice event.',
  'TODO(arv): Maybe unify splice and change events?',
  '',
  'Returns the number of files in this file list.\n' +
    '@return The number of files.',
  'Returns the number of folders in this file list.\n' +
    '@return The number of folders.',
  'Sets whether to use modificationByMeTime as "Last Modified" time.',
  'Updates the statistics about contents when new entry is about to be added.\n' +
    '@param entry Entry of the new item.',
  'Updates the statistics about contents when an entry is about to be removed.\n' +
    '@param entry Entry of the item to be removed.',
  'Compares entries by name.\n' +
    '@param a First entry.\n' +
    '@param b Second entry.\n' +
    '@return Compare result.',
  'Directories always precede files.',
  'Compares entries by label (i18n name).\n' +
    '@param a First entry.\n' +
    '@param b Second entry.\n' +
    '@return Compare result.',
  'Set locationInfo once because we only compare within the same volume.',
  'Directories always precede files.',
  'Compares entries by mtime first, then by name.\n' +
    '@param a First entry.\n' +
    '@param b Second entry.\n' +
    '@return Compare result.',
  'Directories always precede files.',
  'Returns the modification time from a properties object.\n' +
    '"Modification time" can be modificationTime or modificationByMeTime\n' +
    'depending on this.useModificationByMeTime_.\n' +
    '@param properties Properties object.\n' +
    '@return Modification time.',
  'Compares entries by size first, then by name.\n' +
    '@param a First entry.\n' +
    '@param b Second entry.\n' +
    '@return Compare result.',
  'Directories always precede files.',
  'Compares entries by type first, then by subtype and then by name.\n' +
    '@param a First entry.\n' +
    '@param b Second entry.\n' +
    '@return Compare result.',
  'Directories always precede files.',
  "Clear the location info, it's reset by compareLabel_ when needed.",
  'Initialize compare function based on Labels.',
  '@param field the field to group by.',
  'Should the current list model show group heading or not.',
  'GroupBy modification time is only valid when the current sort field is',
  'modification time.',
  '@param item Item in the file list model.\n' +
    '@param now Timestamp represents now.',
  '@param item Item in the file list model.',
  'Update the GroupBy snapshot by the existing sort field.',
  'The last element is always the end of the last group.',
  'Refresh the group by data, e.g. when date modified changes due to\n' +
    'timezone change.',
  'Return the groupBy snapshot.',
  'Why are we calculating reverse order data in the snapshot instead',
  "of calculating it inside sort() function? It's because redraw can",
  'happen before sort() finishes, if we generate reverse order data',
  'at the end of sort(), that might be too late for redraw.',
  'Grid view Folders/Files group order never changes, e.g. Folders group',
  'always shows first, and then Files group.'
]
file_list_model_unittest.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Mock Date.now() to: Jun 8 2022, 12:00:00 local time.',
  'Restore Date.now().',
  'Returns a fake MetadataModel, used to provide metadata from the given |data|\n' +
    'object (usually TEST_METADATA) to the FileListModel.',
  '`undefined` is the intersection of all possible properties of',
  'MetadataItem.',
  'In following sort tests, note that folders should always be prior to files.',
  'Sort files by size. Folders should be sorted by their names.',
  'Sort files by modification. Folders should be sorted by their names.',
  "The first inserted item, 'p', should be at index:3 after splice.",
  "The first inserted item, 'p', should be at index:2 after splice.",
  'If the sort status is not specified, the original order should be kept.',
  "i.e. the 2nd element in the original array, 'x', should be removed, and",
  "'p' and 'b' should be inserted at the position without changing the order.",
  "The first item after insertion/deletion point is 'x', which should be at",
  '2nd position after the sort.',
  'Empty list.',
  'Only one item.',
  'Today.',
  'All items are in the same group.',
  'Today.',
  'Today.',
  'Today.',
  'Items belong to different groups.',
  'Today.',
  'Today.',
  'Yesterday.',
  'This week.',
  'This week.',
  'This month.',
  'This year.',
  'Reverse order.',
  'Empty list.',
  'Only one item.',
  'All items are in the same group.',
  'Items belong to different groups.',
  "Reverse order won't change the group snapshot, e.g Folders are always",
  'at the beginning.'
]
file_manager.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'FileManager constructor.\n' +
    'FileManager objects encapsulate the functionality of the file selector\n' +
    'dialogs, as well as the full screen file manager application.',
  '------------------------------------------------------------------------',
  'Services FileManager depends on.',
  'Volume manager.',
  'File filter.',
  'Model of current directory.',
  'Model of folder shortcuts.',
  'Model of Android apps.',
  'Model for providers (providing extensions).',
  'Model for quick view.',
  'Controller for actions for current selection.',
  'Handler for command events.',
  'Handler for the change of file selection.',
  'UI management class of file manager.',
  '------------------------------------------------------------------------',
  'Parameters determining the type of file manager.',
  'Dialog type of this window.',
  'Startup parameters for this application.',
  '------------------------------------------------------------------------',
  'Controllers.',
  'File transfer controller.',
  'Naming controller.',
  'Directory tree naming controller.',
  'Controller for directory scan.',
  'Controller for spinner.',
  'Sort menu controller.',
  'Gear menu controller.',
  'Controller for the context menu opened by the action bar button in the\n' +
    'check-select mode.',
  'Toolbar controller.',
  'App state controller.',
  'Dialog action controller.',
  'List update controller.',
  'Last modified controller.',
  'OneDrive controller.',
  'Component for main window and its misc UI parts.',
  'Empty folder controller.',
  'Records histograms of directory-changed event.',
  '------------------------------------------------------------------------',
  'DOM elements.',
  '',
  'The root DOM element of this app.',
  'The document object of this app.',
  '------------------------------------------------------------------------',
  "Miscellaneous FileManager's states.",
  'Promise object which is fulfilled when initialization for app state\n' +
    'controller is done.',
  'Promise object which is fulfilled when initialization related to the\n' +
    'background page is done.',
  'Whether Drive is enabled. Retrieved from user preferences.',
  'Whether Drive bulk-pinning is available on this device. Retrieved from\n' +
    'user preferences.',
  'Whether Drive bulk-pinning has been initialized in Files App.',
  'Whether Trash is enabled or not, retrieved from user preferences.',
  'A fake entry for Recents.',
  'Whether or not we are running in guest mode.',
  'Whether local user files (e.g. My Files, Downloads, Play files...) are\n' +
    'enabled or not, retrieved from user preferences.',
  '@return If the app is running in the guest mode.',
  'Launch a new File Manager app.\n@param appState App state.',
  'Returns the last URL visited with visitURL() (e.g. for "Manage in Drive").\n' +
    'Used by the integration tests.',
  'Returns a string translation from its translation ID.\n' +
    '@param id The id of the translated string.',
  'One time initialization for app state controller to load view option from\n' +
    'local storage.',
  'Updates guestMode_ field based on what the result of the isInGuestMode\n' +
    'helper function. It errs on the side of not-in-guestmode, if the util\n' +
    'function fails. The worse this causes are extra notifications.',
  'Leave this.guestMode_ as its initial value.',
  'One time initialization for the file system and related things.',
  'Remember the list which was used when updating files started, so',
  'endBatchUpdates() is called on the same list.',
  'Subscribes to bulk-pinning events to ensure the store is kept up to date.\n' +
    'Also tries to retrieve a first bulk pinning progress to populate the store.',
  "CopyManager are required for 'Delete' operation in",
  'Open and Save dialogs. But drag-n-drop and copy-paste are not needed.',
  'One-time initialization of commands.',
  'TODO(hirono): Move the following block to the UI part.',
  'Hook up the cr-button commands.',
  'Get input elements from root DOM element of this app.',
  'Set context menu and handlers for an input element.',
  'stop contextmenu propagation for touch-induced events.',
  'Registers cut, copy, paste and delete commands on input element.\n' +
    '@param node Text input element to register on.',
  'If this key event is propagated, this is handled search command,',
  "which calls 'preventDefault' method.",
  'Entry point of the initialization.\nThis method is called from main.js.',
  'importElements depend on loadTimeData which is initialized in the',
  'initBackgroundPagePromise_.',
  'Initialize the Store for the whole app.',
  'Initializes general purpose basic things, which are used by other\n' +
    'initializing methods.',
  'Initialize the application state, from the GET params.',
  'Initialize the member variables that depend this.launchParams_.',
  'Initializes the background page.',
  'For the SWA, we load background and foreground in the same Window, avoid',
  'loading the `data` twice.',
  'Initializes the VolumeManager instance.',
  'FilteredVolumeManager hides virtual file system related event and data',
  'even depends on the value of |supportVirtualPath|. If it is',
  'VirtualPathSupport.NO_VIRTUAL_PATH, it hides Drive even if Drive is',
  'enabled on preference.',
  'In other words, even if Drive is disabled on preference but the Files app',
  'should show Drive when it is re-enabled, then the value should be set to',
  'true.',
  'Note that the Drive enabling preference change is listened by',
  "DriveIntegrationService, so here we don't need to take care about it.",
  'One time initialization of the essential UI elements in the Files app.\n' +
    'These elements will be shown to the user. Only visible elements should be\n' +
    "initialized here. Any heavy operation should be avoided. The Files app's\n" +
    'window is shown at the end of this routine.',
  'Record stats of dialog types. New values must NOT be inserted into the',
  ... 130 more items
]
file_manager_commands.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "Used to filter out `VolumeInfo` that don't exist and maintain the return\n" +
    'array is of type `VolumeInfo[]` without null or undefined.',
  'A command.',
  'Handles the execute event.\n' +
    '@param event Command event.\n' +
    '@param fileManager CommandHandlerDeps.',
  'Handles the can execute event.\n' +
    'By default, sets the command as always enabled.\n' +
    '@param event Can execute event.\n' +
    '@param fileManager CommandHandlerDeps.',
  'Unmounts external drive.',
  '@param event Command event.\n@param fileManager CommandHandlerDeps.',
  'Find volumes to unmount.',
  'The element is a group of removable partitions.',
  'Add child partitions to the list of volumes to be unmounted.',
  'The element is a removable volume with no partitions.',
  'Eject volumes of which there may be multiple.',
  'Formats external drive.',
  'The command is executed from the directory tree context menu.',
  'The command is executed from the gear menu.',
  'If an entry is not found from the event target, use the current',
  'directory. This can happen for the format button for unsupported and',
  'unrecognized volumes.',
  'The command is executed from the directory tree context menu.',
  'The command is executed from the gear menu.',
  '|root| is null for unrecognized volumes. Enable format command for such',
  'volumes.',
  'See the comment in execute() for why doing this.',
  'Enable the command if this is a removable device (e.g. a USB drive).',
  'root entry is device node if it has child (partition).',
  'Disable format command on device when SinglePartitionFormat on,',
  'erase command will be available.',
  'Deletes removable device partition, creates single partition and formats it.',
  'root entry is device node if it has child (partition).',
  'Enable the command if this is a removable and device node.',
  'Initiates new folder creation.',
  'Whether a new-folder is in progress.',
  'Select new directory and start rename operation.',
  'After new directory is created on parent directory, we',
  "need to expand it otherwise the new child item won't",
  'show, and also trigger a re-scan for the parent',
  'directory.',
  'Generates new directory name.',
  'If there is a selected entry on a non-interactive volume, remove',
  'new-folder command.',
  'If blank space was clicked and current volume is non-interactive,',
  'remove new-folder command.',
  'Initiates new window creation.',
  'Check we can select multiple items.',
  'Check we are not inside an input element (e.g. the search box).',
  'Toggles visibility of top-level Android folders which are not visible by\n' +
    'default.',
  'Toggles drive sync settings.',
  'Delete / Move to Trash command.',
  '',
  'Execute might be called without a call of canExecute method, e.g.,',
  'called directly from code, crbug.com/509483. See toolbar controller',
  'delete button handling, for an example.',
  'If entries contain fake, non-interactive or root entry, remove delete',
  'option.',
  'Block fusebox volumes in SelectFileAsh (Lacros) file picker mode.',
  'TODO(crbug/1292825) Make it work with fusebox volumes: MTP, etc.',
  'Remove if nothing is selected, e.g. user clicked in an empty',
  'space in the file list.',
  `If the "move-to-trash" command is enabled, don't show the Delete command`,
  'but still leave it executable.',
  'Delete the entries (if the entries can be deleted).\n' +
    '@param entries\n' +
    '@param fileManager\n' +
    '@param permanentlyDelete if true, entries are permanently deleted\n' +
    'rather than moved to trash.\n' +
    '@param dialog An optional delete confirm dialog.\n' +
    'The default delete confirm dialog will be used if |dialog| is null.\n' +
    '@public',
  'Verify that the entries are not fake, non-interactive or root entries,',
  'and that they can be deleted.',
  'Trashing an item shows an "Undo" visual signal instead of a confirmation',
  'dialog.',
  'params= {});',
  'Start the permanent delete.',
  'Files that are deleted from locations that are trash enabled (except',
  'Drive) should instead show copy indicating the files will be permanently',
  "deleted. For all other filesystem the permanent deletion can't",
  'necessarily be verified (e.g. a copy may be moved to the underlying',
  'filesystems version of trash).',
  'Returns true if all entries can be deleted. Note: This does not check for\n' +
    'root or fake entries.',
  'Returns True if entries can be deleted.',
  'Verify that the entries are not fake, non-interactive or root entries,',
  'and that they can be deleted.',
  'Returns true if any entry belongs to a read-only volume or is\n' +
    'forced to be read-only like MyFiles>Downloads.',
  'Restores selected files from trash.',
  "Only a single item is being trashed and the parent doesn't exist.",
  'More than one item has been trashed but all the items have their',
  'parent removed.',
  'All the items were from the same parent folder.',
  'All the items are from different parent folders.',
  'A mix of items with parents and without parents are attempting to be',
  'restored.',
  'params= {});',
  'Check whether the parent exists from a supplied entry and return the folder\n' +
    "name (if it exists or doesn't).\n" +
    '@param entry The entry to identify the parent from.\n' +
    'volumeManager',
  "If this failed, it may be because the parent doesn't exist.",
  'Extract the parent from the path components in that case.',
  'Empties (permanently deletes all) files from trash.',
  'params= {});',
  'Pastes files from clipboard.',
  'Hide this command if only one folder is selected.',
  'If there is a selected entry on a non-interactive volume, remove paste',
  'command.',
  'If blank space was clicked and current volume is non-interactive,',
  'remove paste command.',
  "Pastes files from clipboard. This is basically same as 'paste'.\n" +
    'This command is used for always showing the Paste command to gear menu.',
  ... 146 more items
]
file_manager_commands_unittest.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Checks that the `toggle-holding-space` command is appropriately enabled/\n' +
    'disabled given the current selection state and executes as expected.',
  'Verify `toggle-holding-space` command exists.',
  'Mock chrome APIs.',
  'Mock volume manager.',
  'Create `DOWNLOADS` volume.',
  'Create `REMOVABLE` volume.',
  'Mock file/folder entries.',
  'Define test cases.',
  'Run test cases.',
  'Mock `Event`.',
  'Mock `FileManager`.',
  'Mock `chrome.fileManagerPrivate.getHoldingSpaceState()` response.',
  'Verify `command.canExecute()` results in expected `event` state.',
  'Wait for the command.checkHoldingSpaceState() promise to finish.',
  'Mock private API.',
  'Reset cache of metrics recorded.',
  'Verify `command.execute()` results in expected mock API interactions.',
  'Verify metrics recorded.',
  "The index is 2nd position argument, we're only checking the first call.",
  "Checks that the 'extract-all' command is enabled or disabled\n" +
    'dependent on the current selection.',
  'Check: `extract-all` command exists.',
  'Mock chrome startIOTask API.',
  'Mock volume manager.',
  'Create `DOWNLOADS` volume.',
  'Mock file entries.',
  'Mock `Event`.',
  'The current selection for testing.',
  'Mock `FileManager`.',
  'Check: canExecute is false and command is hidden with no selection.',
  'Check: canExecute is true and command is visible with a single ZIP file.',
  'Check: `zip-selection` command exists.',
  'Check: ZIP canExecute is false and command hidden with a single ZIP file.',
  'Check: canExecute is false and command hidden for no ZIP multi-selection.',
  'Check: canExecute is true and command visible for ZIP multiple selection.',
  'Check: ZIP canExecute is true and command visible for multiple selection.',
  'Tests that rename command should be disabled for Recent entry.',
  'Check: `rename` command exists.',
  'Mock volume manager.',
  'Create `documents_root` volume.',
  'Mock file entries.',
  'Mock `Event`.',
  'The current selection for testing.',
  'Mock `FileManager`.',
  'Check: canExecute is false and command is disabled.',
  'Create and add a Downloads volume to the store. Update the volume as\n' +
    'non-interactive.',
  'Dispatch an action to add MyFiles volume.',
  'Expect the newly added volume is in the store.',
  'Dispatch an action to set |isInteractive| for the volume to false.',
  'Expect the volume is set to non-interactive.',
  'Tests that the paste, cut, copy and new-folder commands should be\n' +
    'disabled and hidden when there are no selected entries but the current\n' +
    'directory is on a non-interactive volume (e.g. when the blank space in a\n' +
    'non-interactive directory is right clicked).',
  'Mock `FileManager`.',
  'Selection includes entry on non-interactive volume.',
  'Navigate to the non-interactive volume.',
  'Allow paste command.',
  'Check each command is disabled and hidden.',
  'Check: command exists.',
  'Mock `Event`.',
  'Tests that the paste, cut, copy, new-folder, delete, move-to-trash,\n' +
    'paste-into-folder, rename, extract-all and zip-selection commands should be\n' +
    'disabled and hidden for an entry on a non-interactive volume.',
  'Create non-interactive volume.',
  'Mock volume manager.',
  'Create file entry on non-interactive volume.',
  'Mock `FileManager`.',
  'Selection includes entry on non-interactive volume.',
  'Allow copy, cut and paste command.',
  'Check each command is disabled and hidden.',
  'Check: command exists.',
  'Mock `Event`.'
]
file_manager_commands_util.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The IDs of elements that can trigger share action.',
  'Helper function that for the given event returns the launch source of the\n' +
    'sharesheet. If the source cannot be determined, this function returns\n' +
    'chrome.fileManagerPrivate.SharesheetLaunchSource.UNKNOWN.',
  'Extracts entry on which command event was dispatched.',
  'Extracts entries on which command event was dispatched.',
  'DirectoryTree has the focused item.',
  'The event target could still be a descendant of a legacy TreeItem element',
  '(e.g. the eject button).',
  'Handle eject button in the new directory tree.',
  'File list (List).',
  'Check if it is Entry or not by checking for toURL().',
  'Commands in the action bar can only act in the currently selected files.',
  'Context Menu: redirect to the element the context menu is displayed for.',
  'Context Menu Item: redirect to the element the context menu is displayed',
  'for.',
  'Extracts a directory which contains entries on which command event was\n' +
    'dispatched.',
  'DirectoryTree has the focused item.',
  'Returns VolumeInfo from the current target for commands, based on |element|.\n' +
    'It can be from directory tree (clicked item or selected item), or from file\n' +
    'list selected items; or null if can determine it.',
  "Sets the command as visible only when the current volume is drive and it's\n" +
    'running as a normal app, not as a modal dialog.\n' +
    "NOTE: This doesn't work for directory tree menu, because user can right-click\n" +
    'on any visible volume.',
  'Sets the default handler for the commandId and prevents handling\n' +
    'the keydown events for this command. Not doing that breaks relationship\n' +
    'of original keyboard event and the command. WebKit would handle it\n' +
    'differently in some cases.',
  'Returns a directory entry when only one entry is selected and it is\n' +
    'directory. Otherwise, returns null.\n' +
    '@param selection Instance of FileSelection.\n' +
    '@return Directory entry which is selected alone.',
  'Returns true if the given entry is the root entry of the volume.\n' +
    '@param volumeManager\n' +
    '@param entry Entry or a fake entry.\n' +
    '@return True if the entry is a root entry.',
  'Returns true if the given event was triggered by the selection menu button.\n' +
    '@param event Command event.\n' +
    '@return True if the event was triggered by the selection menu button.',
  "If entry is fake/invalid/non-interactive/root, we don't show menu items\n" +
    'intended for regular entries.\n' +
    '@param volumeManager\n' +
    '@param entry Entry or a fake entry.\n' +
    '@return True if we should show the menu items for regular entries.',
  'If the entry is fake entry, hide context menu entries.',
  'If the entry is not a valid entry, hide context menu entries.',
  'If the entry belongs to a non-interactive volume, hide context menu',
  'entries.',
  'If the entry is root entry of its volume (but not a team drive root),',
  'hide context menu entries.',
  'Returns whether all of the given entries have the given capability.\n' +
    '@param fileManager CommandHandlerDeps.\n' +
    '@param entries List of entries to check capabilities for.\n' +
    '@param capability Name of the capability to check for.',
  'Check if the capability is true or undefined, but not false. A capability',
  'can be undefined if the metadata is not fetched from the server yet (e.g.',
  'if we create a new file in offline mode), or if there is a problem with the',
  "cache and we don't have data yet. For this reason, we need to allow the",
  "functionality even if it's not set.",
  'TODO(crbug.com/41392991): Store restrictions instead of capabilities.',
  'Checks if the handler should ignore the current event, eg. since there is\n' +
    'a popup dialog currently opened.\n' +
    '@return True if the event should be ignored, false otherwise.',
  'Do not handle commands, when a dialog is shown. Do not use querySelector',
  "as it's much slower, and this method is executed often.",
  'Returns true if all entries is inside Drive volume, which includes all Drive\n' +
    'parts (Shared Drives, My Drive, Shared with me, etc).',
  'Returns true if all entries descend from the My Drive root (e.g. not located\n' +
    'within Shared with me or Shared drives).',
  'Returns true if the current root is Trash. Items in Trash are a fake\n' +
    'representation of a file + its metadata. Some actions are infeasible and\n' +
    'items should be restored to enable these actions.',
  'Extracts entry on which command event was dispatched.',
  'The command is executed from the directory tree context menu.',
  'The command is executed from the gear menu.',
  'Returns true if the current volume is interactive.',
  'Returns true if any entry belongs to a non-interactive volume.'
]
file_rename.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file should contain renaming utility functions used only\n' +
    'by the files app frontend.',
  'Verifies name for file, folder, or removable root to be created or renamed.\n' +
    'Names are restricted according to the target filesystem.\n' +
    '@param entry The entry to be named.\n' +
    '@param name New file, folder, or removable root name.\n' +
    '@param areHiddenFilesVisible Whether to report hidden file name errors or\n' +
    'not.\n' +
    '@param volumeInfo Volume information about the target entry.\n' +
    '@param isRemovableRoot Whether the target is a removable root.\n' +
    '@return Fulfills on success, throws error message otherwise.',
  'Verifies the user entered name for external drive to be\n' +
    'renamed to. Name restrictions must correspond to the target filesystem\n' +
    'restrictions.\n' +
    'It also verifies that name length is in the limits of the filesystem.\n' +
    'This function throws if the new label is invalid, else it completes.\n' +
    '@param name New external drive name.',
  'Verify if entered name for external drive respects restrictions',
  'provided by the target filesystem.',
  'Verify length for the target file system type.',
  'Checks if the name contains only alphanumeric characters or allowed',
  'special characters. This needs to stay in sync with',
  'cros-disks/filesystem_label.cc on the ChromeOS side.',
  'Verifies the user entered name for file or folder to be created or\n' +
    'renamed to. Name restrictions must correspond to File API restrictions\n' +
    '(see DOMFilePath::isValidPath). Curernt WebKit implementation is\n' +
    'out of date (spec is\n' +
    'http://dev.w3.org/2009/dap/file-system/file-dir-sys.html, 8.3) and going\n' +
    'to be fixed. Shows message box if the name is invalid.\n' +
    'It also verifies if the name length is in the limit of the filesystem.\n' +
    '@param parentEntry The entry of the parent directory.\n' +
    '@param name New file or folder name.\n' +
    '@param areHiddenFilesVisible Whether to report the hidden file name error or\n' +
    'not.\n' +
    '@return Fulfills on success, throws error message otherwise.',
  'Renames file, folder, or removable root with newName.\n' +
    '@param entry The entry to be renamed.\n' +
    '@param newName The new name.\n' +
    '@param volumeInfo Volume information about the target entry.\n' +
    '@param isRemovableRoot Whether the target is a removable root.\n' +
    '@return Resolves the renamed entry if successful, else throws error message.',
  'Renames the entry to newName.\n' +
    '@param entry The entry to be renamed.\n' +
    '@param newName The new name.\n' +
    '@return Resolves the renamed entry if successful, else throws error message.',
  'Before moving, we need to check if there is an existing entry at',
  'parent/newName, since moveTo will overwrite it.',
  'Note that this way has a race condition. After existing check,',
  'a new entry may be created in the background. However, there is no way',
  'not to overwrite the existing file, unfortunately. The risk should be',
  'low, assuming the unsafe period is very short.',
  'Unexpected error found.',
  'The entry with the name already exists.',
  'Converts DOMError response from renameEntry() to error message.',
  'Check the existing entry is file or not.',
  '1) If the entry is a file:',
  'a) If we get PATH_EXISTS_ERR, a file exists.',
  'b) If we get TYPE_MISMATCH_ERR, a directory exists.',
  '2) If the entry is a directory:',
  'a) If we get PATH_EXISTS_ERR, a directory exists.',
  'b) If we get TYPE_MISMATCH_ERR, a file exists.'
]
file_selection.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The current selection object.',
  'If the current selection has any read-only entry.',
  '@return True if there is any read-only entry in the current selection.',
  "If no availableOffline property, then assume it's",
  'available.',
  'This object encapsulates everything related to current selection.',
  'The time, in ms since the epoch, when it is OK to post next throttled\n' +
    'selection event. Can be directly compared with Date.now().',
  'Listens to changes in the selection model to propagate to other parts.',
  'Register events to update file selections.',
  'Update the UI when the selection model changes.',
  'Filter out undefined for invalid index b/277232289.',
  'The rest of the selection properties are computed via (sometimes lengthy)',
  'asynchronous calls. We initiate these calls after a timeout. If the',
  'selection is changing quickly we only do this once when it slows down.',
  'The previous selection change happened a while ago and there is few',
  'selected items, so computation is lightweight. Update the UI with',
  '1 millisecond of delay.',
  'Calculates async selection stats and updates secondary UI elements.\n' +
    '@param selection The selection object.',
  'Calculate all additional and heavy properties.',
  'Sends the current selection to the Store.',
  'Returns true if all files in the selection files are selectable.',
  "Returns true if we're offline with any selected files absent from the\n" +
    'cache.',
  "Returns true if we're a dialog requiring real files with hosted files\n" +
    'selected.',
  "Returns true if we're a dialog requiring real files with encrypted files\n" +
    'selected.',
  'Returns true if any file/directory in the selection is blocked by DLP\n' +
    'policy.',
  'Check if any of the selected entries are blocked by DLP:',
  'a volume/directory in case of file-saveas (managed by the VolumeManager),',
  'or a file in case file-open dialogs (stored in the metadata).',
  'Dispatched every time when selection is changed.',
  'Dispatched |UPDATE_DELAY| ms after the selection is changed.\n' +
    'If multiple changes are happened during the term, only one CHANGE_THROTTLED\n' +
    'event is dispatched.',
  'Delay in milliseconds before recalculating the selection in case the\n' +
    'selection is changed fast, or there are many items. Used to avoid freezing\n' +
    'the UI.',
  'Number of items in the selection which triggers the update delay. Used to\n' +
    'let the Material Design animations complete before performing a heavy task\n' +
    'which would cause the UI freezing.'
]
file_tasks.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Office file handlers UMA values (must be consistent with OfficeFileHandler in\n' +
    'tools/metrics/histograms/enums.xml).',
  'Represents a collection of available tasks to execute for a specific list\n' +
    'of entries.',
  'Mutex used to serialize password dialogs.',
  'Creates an instance of FileTasks for the specified list of entries with\n' +
    'mime types.',
  'Cannot use fake entries with getFileTasks.',
  'Linux package installation is currently only supported for a single',
  'file which is inside the Linux container, or in a shareable volume.',
  'TODO(timloh): Instead of filtering these out, we probably should show a',
  'dialog with an error message, similar to when attempting to run',
  'Crostini tasks with non-Crostini entries.',
  'Creates FileTasks instance based on the data from the Store.',
  'resultingTasks_.tasks is annotated at create().',
  'Gets the policy default handler status.',
  'Returns whether the system is currently offline.',
  'Records a metric, as well as recording online and offline versions of it.\n' +
    '@param name Metric name.\n' +
    '@param value Enum value.\n' +
    '@param values Array of valid values.',
  "Returns ViewFileType enum or 'other' for the given entry.\n" +
    "@return A ViewFileType enum or 'other'.",
  'Records trial of opening file grouped by extensions.',
  'Recorded per file.',
  'Records trial of opening file grouped by root types.\n' +
    '@param rootType The type of the root where entries are being opened.',
  'Records the elapsed time for mounting a ZIP file as a ZipMountTime\n' +
    'histogram value.\n' +
    '@param rootType The type of the root where the ZIP file has been mounted\n' +
    'from.\n' +
    '@param time Time to be recorded in milliseconds.',
  'Records trial of opening Office file grouped by file handlers.\n' +
    '@param entries The entries to be opened.\n' +
    '@param rootType The type of the root where entries are being opened.',
  'This UMA is only applicable to Office files.',
  'Returns true if the descriptor is for an internal task.',
  "Legacy Files app task type is 'app', Files SWA is 'web'.",
  'Show dialog when user opens or drags a file with PluginVM and the file\n' +
    'is not in PvmSharedDir or shared with PluginVM. The dialog tells the\n' +
    'user to move or copy the file to PvmSharedDir and offers an action to do\n' +
    'that.\n' +
    '@param entries Selected entries to be moved or copied.\n' +
    '@param ui FileManager UI to show dialog.\n' +
    '@param moveMessage Message if files are local and can be moved.\n' +
    '@param copyMessage Message if files should be copied.',
  'isMove= isMyFiles));',
  'Executes default task.',
  "If there's policy involved and |defaultTask_| is null, means that policy",
  'assignment was incorrect. We should not execute anything in this case.',
  'If there is only one task that is not a generic file handler, it should',
  'be executed as a default task. If there are multiple tasks that are not',
  'generic file handlers, and none of them are considered as default, we',
  'show a task picker to ask the user to choose one.',
  "We don't have tasks, so try to show a file in a browser tab.",
  'We only do that for single selection to avoid confusion.',
  'Executes a single task.',
  'The core implementation to execute a single task.',
  'Ensures that the all files are available right now.\n' +
    'Must not call before initialization.\n' +
    'Resolved when checking is completed and all files are available\n' +
    'Rejected/throws if the user cancels the confirmation dialog for downloading\n' +
    'in cellular/metered network dialog.',
  'If got no properties, we safely assume that item is available.',
  'Availability is not checked for non-Drive files, as availableOffline, nor',
  'availableWhenMetered are not exposed for other types of volumes at this',
  'moment.',
  'Executes an internal task, which is a task Files app handles internally\n' +
    'without calling into fileManagerPrivate to execute it.',
  'Install a Linux Package in the Linux container.',
  'Imports a Crostini Image File (.tini). This overrides the existing Linux\n' +
    'apps and files.',
  'Mounts an archive file. Asks for password and retries if necessary.\n' +
    '@param url URL of the archive file to mount.',
  'Remove progress panel.',
  'Cancel archive mounting.',
  'Display progress panel.',
  'First time, try without providing a password.',
  'If error is not about needing a password, propagate it.',
  'Remove progress panel.',
  'We need a password.',
  'Ask for password.',
  'Display progress panel.',
  'Mount archive with password.',
  'If error is not about needing a password, propagate it.',
  'Remove progress panel.',
  'Mounts an archive file and changes directory. Asks for password if\n' +
    'necessary. Displays error message if necessary.\n' +
    '@param url URL of the archive file to moumt.\n' +
    '@return a promise that is never rejected.',
  'On mountArchive_ success, record mount time UMA.',
  'No need to display an error message if user canceled mounting or',
  'canceled the password prompt.',
  'Mounts the selected archive(s). Asks for password if necessary.',
  'TODO(mtomasz): Move conversion from entry to url to custom bindings.',
  'crbug.com/345527.',
  'Shows modal task picker dialog with currently available list of tasks.\n' +
    '@param taskDialog Task dialog to show and update.\n' +
    '@param onSuccess Callback to pass selected task.\n' +
    '@param pickerType Task picker type.',
  'Dialog types to show a task picker.',
  'Office file extensions.'
]
file_tasks_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Mock chrome APIs.',
  'Mock to keep track of the calls to metricsPrivate.',
  'Mock task history.',
  'Mock file transfer controller.',
  'Mock directory change tracker.',
  'Fake url for mounted ZIP file.',
  'Panel IDs for ZIP mount operations.',
  'Panel IDs for ZIP mount errors.',
  'Set up test components.',
  'Override the translations used in the tests to make easier to compare.',
  'Mock chome APIs.',
  'Fail with an error message.\n' +
    '@param message The error message.\n' +
    '@param details Optional details.',
  'Returns mocked file manager components.',
  'Returns a promise that resolves when the showHtml method of alert dialog is\n' +
    'called with the expected title and text.',
  'Returns a promise that resolves when the task picker is called.',
  'Returns a promise that resolves when showImportCrostiniImageDialog is called.',
  'Tests opening a .exe file.',
  'Tests opening a .dmg file.',
  'Tests opening a .crx file.',
  'Tests opening a .rtf file.',
  'Tests opening the task picker with an entry that does not have a default app\n' +
    'but there are multiple apps that could open it.',
  'Tests opening the task picker with an entry that does not have a default app\n' +
    'but there are multiple apps that could open it. The app with the most recent\n' +
    'task execution order should execute.',
  'File tasks is sorted by last executed time, latest first.',
  'Tests opening a .deb file. The crostini linux package install dialog should\n' +
    'be called.',
  'Tests opening a .tini file. The import crostini image dialog should be\n' +
    'called.',
  'Checks that the function that returns a file type for file entry handles\n' +
    'correctly identifies files with known and unknown extensions.',
  'Checks that the progress center is properly updated when mounting archives\n' +
    'successfully.',
  'Define FileTasks instance.',
  'Check: progressing state.',
  'Mount archive.',
  'Check: mount completed, no error.',
  'Check: a zip mount time UMA has been recorded.',
  'Checks that the progress center is properly updated when mounting an archive\n' +
    'resolves with an error.',
  'Define FileTasks instance.',
  'Mount archive.',
  'Check: mount is completed with an error.',
  'Check: no zip mount time UMA has been recorded since mounting the archive',
  'failed.',
  'Checks that the progress center is properly updated when the password prompt\n' +
    'for an encrypted archive is canceled.',
  'Define FileTasks instance.',
  'Mount archive.',
  'Check: mount is completed, no error since the user canceled the password',
  'prompt.',
  'Check: no zip mount time UMA has been recorded since the mount has been',
  'cancelled.',
  'Checks that the progress center is properly updated when mounting an\n' +
    'encrypted archive.',
  'Define FileTasks instance.',
  'Mount archive.',
  'Check: mount is completed, no error since the user entered a valid',
  'password.'
]
file_transfer_controller.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Global (placed in the window object) variable name to hold internal\n' +
    'file dragging information. Needed to show visual feedback while dragging\n' +
    'since DataTransfer object is in protected state. Reachable from other\n' +
    'file manager instances.',
  'The key under which we store if the file content is missing. This property\n' +
    'tells us if we are attempting to use a drive file while Drive is\n' +
    'disconnected.',
  'The key under which we store the list of dragged files. This allows us to\n' +
    'set the correct drag effect.',
  'The key under which we store the root of the file system of files on which\n' +
    'we operate. This allows us to set the correct drag effect.',
  'The key under which we store the flag denoting that the dragged file is\n' +
    'encrypted with Google Drive CSE. Given that decrypting of such files is not\n' +
    'implemented at the moment (May 2023), this allows us to unset the drag effect\n' +
    'when moving such a file outside Drive.',
  'Confirmation message types.',
  "ConfirmationCallback called when operation requires user's confirmation. The\n" +
    'operation will be executed if the return value resolved to true.',
  "Extracts the `DataTransfer` from a generic event ensuring it's type asserted.",
  'The type of a file operation error.',
  'Error class used to report problems with a copy operation.\n' +
    'If the code is UNEXPECTED_SOURCE_FILE, data should be a path of the file.\n' +
    'If the code is TARGET_EXISTS, data should be the existing Entry.\n' +
    'If the code is FILESYSTEM_ERROR, data should be the FileError.',
  '@param code Error type.\n@param data Additional data.',
  'Resolves a path to either a DirectoryEntry or a FileEntry, regardless of\n' +
    'whether the path is a directory or file.\n' +
    '@param root The root of the filesystem to search.\n' +
    '@param path The path to be resolved.\n' +
    '@return Promise fulfilled with the resolved entry, or rejected with\n' +
    'FileError.',
  "Bah. It's a directory, ask again.",
  'Checks if an entry exists at |relativePath| in |dirEntry|.\n' +
    'If exists, tries to deduplicate the path by inserting parenthesized number,\n' +
    'such as " (1)", before the extension. If it still exists, tries the\n' +
    'deduplication again by increasing the number.\n' +
    'For example, suppose "file.txt" is given, "file.txt", "file (1).txt",\n' +
    '"file (2).txt", ... will be tried.\n' +
    '@param dirEntry The target directory entry.\n' +
    '@param optSuccessCallback Callback run with the deduplicated path on success.\n' +
    '@param optErrorCallback Callback run on error.\n' +
    '@return  Promise fulfilled with available path.',
  'Crack the path into three part. The parenthesized number (if exists)',
  'will be replaced by incremented number for retry. For example, suppose',
  '|relativePath| is "file (10).txt", the second check path will be',
  '"file (11).txt".',
  'Check to see if the target exists.',
  'We expect to be unable to resolve the target file, since',
  "we're going to create it during the copy.  However, if the",
  "resolve fails with anything other than NOT_FOUND, that's",
  'trouble.',
  'Filters the entry in the same directory\n' +
    '@param sourceEntries Entries of the source files.\n' +
    '@param targetEntry The destination entry of the target directory.\n' +
    '@param isMove True if the operation is "move", otherwise (i.e. if the\n' +
    'operation is "copy") false.\n' +
    '@return Promise fulfilled with the filtered entry. This is not rejected.',
  'Check all file entries and keeps only those need sharing operation.',
  'Call processEntry for each item of sourceEntries.',
  'Remove null entries.',
  'Writes file to destination dir. This function is called when an image is\n' +
    'dragged from a web page. In this case there is no FileSystem Entry to copy\n' +
    'or move, just the JS File object with attached Blob. This operation does\n' +
    'not use EventRouter or queue the task since it is not possible to track\n' +
    'progress of the FileWriter.write().\n' +
    '@param file The file entry to be written.\n' +
    '@param dir The destination directory to write to.',
  'The array of the pending task IDs.',
  'File objects for selected files.',
  'Drag selector.',
  'Whether a user is touching the device or not.',
  'The element for showing a label while dragging files.',
  'Note: We use synchronous `getCache` method under assumption that fields\n' +
    'we request are already cached. See constants.js, specifically\n' +
    'LIST_CONTAINER_METADATA_PREFETCH_PROPERTY_NAMES for list of fields\n' +
    'which are safe to use.',
  'Register the events.',
  'Allow to drag external files to the browser window.',
  'Attaches items in the `list` that will be draggable.',
  'Attach handlers of copy, cut and paste operations to the document.',
  'Write the current selection to system clipboard.',
  'In the event the entry resides in the Trash root, delegate to the item',
  'in .Trash/files to get the source filesystem.',
  'Appends copy or cut information of |entries| to |clipboardData|.',
  "Tag to check it's filemanager data.",
  'In the event a cut event has begun from the TrashRoot, the sources should',
  'be delegated to the underlying files to ensure any validation done',
  'onDrop_ (e.g. DLP scanning) is done on the actual file.',
  'Appends files of |entries| to |clipboardData|.',
  'Extracts source root URL from the |clipboardData| or |dragAndDropData|\n' +
    'object.',
  '|clipboardData| in protected mode.',
  'Unknown source.',
  '|clipboardData| in protected mode.',
  '|clipboardData| in protected mode.',
  'Calls executePaste with |pastePlan| if paste is allowed by Data Leak\n' +
    'Prevention policy. If paste is not allowed, it shows a toast to the\n' +
    'user.',
  'This can happen when copied files were deleted before pasting',
  'them. We execute the plan as-is, so as to share the post-copy',
  'logic. This is basically same as getting empty by filtering',
  'same-directory entries.',
  'Collects parameters of paste operation by the given command and the current\n' +
    'system clipboard.\n' +
    '@param writeFileFunc Used for unittest.',
  'When FilesApp does drag and drop to itself, it uses fs/sources to',
  'populate sourceURLs, and it will resolve sourceEntries later using',
  'webkitResolveLocalFileSystemURL().',
  'When FilesApp is the paste target for other apps such as crostini,',
  'the file URL is either not provided, or it is not compatible. We use',
  'DataTransferItem.webkitGetAsEntry() to get the entry now.',
  'A File which does not resolve for webkitGetAsEntry() must be an',
  'image drag drop from the browser. Write it to destination dir.',
  'effectAllowed set in copy/paste handlers stay uninitialized. DnD handlers',
  'work fine.',
  'Queue up a file copy operation based on the current system clipboard and\n' +
    'drag-and-drop global object.',
  'Queue up a file copy operation.',
  'Execute the IOTask in asynchronously.',
  'Publish source not found error item.',
  'Extract the file name.',
  'Renders a drag-and-drop thumbnail.',
  'If renaming is in progress, drag operation should be used for selecting',
  "substring of the text. So we don't drag files here.",
  'If this drag operation is initiated by mouse, check if we should start',
  'selecting area.',
  'If the drag starts outside the files list on a touch device, cancel the',
  'drag.',
  'Nothing selected.',
  'TODO(fukino): This is workaround for crbug.com/373125.',
  'This should be removed after the bug is fixed.',
  "If mouse moves from one element to another the 'dragenter'",
  "event for the new element comes before the 'dragleave' event for",
  'the old one. In this case event.target !== this.lastEnteredTarget_',
  "and handler of the 'dragenter' event has already carried of",
  'drop target. So event.target === this.lastEnteredTarget_',
  'could only be if mouse goes out of listened element.',
  'TODO(files-ng): dropLabel_ is not used in files-ng, remove it.',
  'The list of entries should not be special entries (e.g. Camera, Linux',
  "files) and should not already exist in Trash (i.e. you can't trash",
  "something that's already trashed).",
  'params= {});',
  'Change to the drop target directory.',
  'Do custom action.',
  'Disallow dropping a directory either on itself or on one of its children.',
  ... 109 more items
]
file_transfer_controller_unittest.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Setup page DOM.',
  'Initialize Command with the <command>s.',
  'Fake confirmation callback.',
  'Fake ProgressCenter;',
  'Fake MetadataModel.',
  'Fake DirectoryModel.',
  'Create fake VolumeManager and install webkitResolveLocalFileSystemURL.',
  'Fake FileSelectionHandler.',
  'Fake A11yAnnounce.',
  'Setup FileTable.',
  'Setup FileGrid.',
  'Setup the ListContainer and its dependencies',
  'Setup DirectoryTree elements.',
  'Initialize FileTransferController.',
  'Tests isDocumentWideEvent_.',
  'Should return true when body is focused.',
  'Should return true when button is focused.',
  'Should return true when tree is focused.',
  'Should return true when FileList is focused.',
  'Should return true when document is focused.',
  'Should return true when document is focused.',
  'Tests canCutOrDrag() respects non-modifiable entries like Downloads.',
  'Item 1 of the volume info list should be Downloads volume type.',
  'Create a downloads folder inside the item.',
  "Downloads can't be cut.",
  'otherFolder can be cut.',
  'Tests preparePaste() with FilesApp fs/sources and standard DataTransfer.',
  'FilesApp internal drag and drop should populate sourceURLs at first, and',
  'only populate sourceEntries after calling resolveEntries().',
  'Drag and drop from other apps will use DataTransfer.item with',
  "item.kind === 'file', and use webkitGetAsEntry() to populate sourceEntries.",
  'Drag and drop browser file will use DataTransfer.item with',
  "item.kind === 'file', but webkitGetAsEntry() will not resolve the file.",
  'sourceURLs and sourceEntries should not be populated from File instances.',
  'File instances should still be copied to target folder.',
  "Tests the drag-and-drop's `isDropTargetAllowed_` utility function, which\n" +
    'relies on the local storage that mirrors the data stored in the clipboard,\n' +
    'and on the "disabled" state of the target entry in the store.\n' +
    'Note: Setting the drop target used to infer the dragged entries from the\n' +
    'selection handler, which is not valid when entries are dragged from one Files\n' +
    'window to another.',
  'Item 1 of the volume info list should be Downloads volume type.',
  'Create entries under myFiles and cache them in the store.',
  'Update the local storage to simulate dragging the "/dir" entry.',
  '"/dir" is not a valid target for itself.',
  'Check that "/dir" is a valid target for "/file.txt".',
  'Check that "/dir" is a valid target for "/dir/file2.txt".',
  'Check that "/dir/dir2" is not a valid target for "/dir".',
  `Disable the directory "/dir" in the store and check that it can't be used`,
  'as a drop target anymore for "/file.txt".',
  'Size of directory.',
  'Creates test file system.\n' +
    '@param id File system Id.\n' +
    '@param entries Map of entry paths and their size.\n' +
    'If the entry size is DIRECTORY_SIZE, the entry is a directory.',
  'Tests the resolvePath() function.',
  'Tests the deduplicatePath() function.',
  'Test writeFile() with file dragged from browser.'
]
file_type_filters_controller.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'This class controls wires file-type filter UI and the filter settings in\n' +
    'Recents view.',
  '@param state latest state from the store.',
  '@param fileCategory File category\nfilter which needs to be recorded.',
  'Keep the order of this in sync with FileManagerRecentFilterType in\n' +
    'tools/metrics/histograms/enums.xml.\n' +
    'The array indices will be recorded in UMA as enum values. The index for\n' +
    'each filter type should never be renumbered nor reused in this array.',
  'Speak voice message in screen recording mode depends on the existing\n' +
    'filter and the new filter type.',
  'When changing button active/inactive states, the common voice message is\n' +
    '"AAA filter is off. BBB filter is on.", i.e. the "off" message first\n' +
    'then the "on" message. However there are some exceptions:\n' +
    '* If the active filter changes from "All" to others, no need to say\n' +
    'the off message.\n' +
    '* If the active filter changes from others to "All", the on message will\n' +
    'be a filter reset message.',
  "Creates filter button's UI element.\n" +
    '@param fileCategory File category\n' +
    'for the filter button.',
  'Store the "FileCategory" on the button element so we know the mapping',
  'between the DOM element and its corresponding "FileCategory", which',
  'will make it easier to trigger UI change based on "FileCategory" or',
  'vice versa.',
  'Updates the UI when the current directory changes.\n@param event Event.',
  'We show filter buttons only in Recents view at this moment.',
  'Reset the filter back to "All" on leaving Recents view.',
  'Updates the UI when one of the filter buttons is clicked.\n' +
    '@param event Event.',
  'Do nothing if "All" button is active and being clicked again.',
  'Clicking an active button will make it inactive and make "All"',
  'button active.',
  'Clear and scan the current directory with the updated Recent setting.',
  'Update the filter button active states based on current `fileCategory`.\n' +
    'Every time `fileCategory` is changed (including the initialization),\n' +
    'this method needs to be called to render the UI to reflect the file\n' +
    'type filter change.'
]
file_type_filters_controller_unittest.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '',
  '',
  '',
  '',
  "Change the directory model's current directory to |dirEntry|.",
  "Emit 'directory-changed' event synchronously to simplify testing.",
  'Create FileTypeFiltersController instance with dependencies.',
  'Create a directory entry which is not Recents to simulate directory change.',
  'Tests that creating FileTypeFiltersController generates four buttons in the\n' +
    'given container element.',
  'Tests that initial states of all buttons inside container are inactive\n' +
    'except the first button (button with label "All").',
  'Tests that click events can toggle button state (active <-> inactive),\n' +
    'if the button is already active, make it inactive and make "All" button\n' +
    'active.',
  'State change: inactive -> active -> inactive.',
  'Clicking active "All" does nothing.',
  'Tests that only one button can be active.\n' +
    'If button_1 is clicked when button_0 is active, button_0 becomes inactive and\n' +
    'button_1 becomes active.',
  'Tests that container element is visible only when the current directory is\n' +
    'Recents view.',
  "Tests that button's active state is reset when the user leaves\n" +
    'Recents view and go back again.',
  "Changing directory to the same Recent doesn't reset states.",
  "Tests that the active state of each button is reflected to the Recent entry's\n" +
    'fileCategory property, and DirectoryModel.rescan() is called after the\n' +
    "Recent entry's property is modified.",
  'Clicking an active button will trigger a scan for "All".'
]
file_watcher.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Watches for changes in the tracked directory.',
  'Stops watching (must be called before page unload).',
  'Called when a file in the watched directory is changed.\n' +
    '@param event Change event.',
  'When watched directory is deleted by the change in parent directory,',
  'notify it as watcher directory changed.',
  'Changes the watched directory. In case of a fake entry, the watch is\n' +
    'just released, since there is no reason to track a fake directory.\n' +
    '@param entry Directory entry to be tracked, or the fake entry.',
  "Resets the watched entry. It's a best effort method.",
  'Run the tasks in the queue to avoid races.',
  'Release the watched directory.',
  'Even on error reset the watcher locally, so at least the',
  'notifications are discarded.',
  "Sets the watched entry to the passed directory. It's a best effort method.\n" +
    '@param entry Directory to be watched.',
  'Run the tasks in the queue to avoid races.',
  'Most probably setting the watcher is not supported on the',
  'file system type.',
  'Reset the watched directory first, then set the new watched directory.',
  '@return Current watched directory entry.'
]
folder_shortcuts_data_model.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "The drive mount path used in the persisted storage. It must be '/drive'.",
  'Model for the folder shortcuts. This object is ArrayDataModel-like\n' +
    'object with additional methods for the folder shortcut feature.\n' +
    'Items are always sorted by URL.',
  '@param volumeManager Volume manager instance.',
  'Queue to serialize resolving entries.',
  'Load the shortcuts. Runs within the queue.',
  'The list of folder shortcuts is persisted in the preferences.',
  'If the volume info list is changed, then shortcuts have to be reloaded.',
  'If the drive status has changed, then shortcuts have to be re-resolved.',
  '@return Number of elements in the array.',
  "Remembers the Drive volume's root URL used for conversions between virtual\n" +
    'paths and URLs.',
  'Resolves Entries from a list of stored virtual paths. Runs within a queue.\n' +
    '@param list List of virtual paths.',
  'Remove the shortcut on error, only if Drive is fully online.',
  'Only then we can be sure, that the error means that the directory',
  'does not exist anymore.',
  'Not adding to the model nor to the |unresolvablePaths_| means',
  'that it will be removed from the persistent storage permanently after',
  'the next call to save_().',
  'Resolve the items all at once, in parallel.',
  'Save the model after finishing.',
  'Remove all of those old entries, which were resolved by this method.',
  'If something changed, then save.',
  'Initializes the model and loads the shortcuts.',
  'Record metrics.',
  'Resolve and add the entries to the model.',
  'Fetches the shortcut paths from the persistent storage (preferences) it\n' +
    'migrates from the legacy storage.chrome.sync if needed.',
  'Reloads the model and loads the shortcuts.',
  'Returns the entries in the given range as a new array instance. The\n' +
    'arguments and return value are compatible with Array.slice().\n' +
    '@param begin Where to start the selection.\n' +
    '@param end Where to end the selection.\n' +
    '@return Entries in the selected range.',
  '@param index Index of the element to be retrieved.\n' +
    '@return The value of the |index|-th element.',
  '@param value URL of the entry to be found.\n' +
    '@return Index of the element with the specified |value|.',
  'Same item check: must be exact match.',
  '@param value Value of the element to be retrieved.\n' +
    '@return Index of the element with the specified |value|.',
  'Same item check: must be exact match.',
  'Compares 2 entries and returns a number indicating one entry comes before\n' +
    'or after or is the same as the other entry in sort order.\n' +
    '@param a First entry.\n' +
    '@param b Second entry.\n' +
    '@return Returns -1, if |a| < |b|. Returns 0, if |a| === |b|.\n' +
    'Otherwise, returns 1.',
  'Adds the given item to the array. If there were already same item in the\n' +
    'list, return the index of the existing item without adding a duplicate\n' +
    'item.\n' +
    '@param value Value to be added into the array.\n' +
    '@return Index in the list which the element added to.',
  'Adds the given item to the array. If there were already same item in the\n' +
    'list, return the index of the existing item without adding a duplicate\n' +
    'item.\n' +
    '@param value Value to be added into the array.\n' +
    '@return Index in the list which the element added to.',
  'Same item check: must be exact match.',
  'Since the array is sorted, new item will be added just before the first',
  'larger item.',
  'If value is not added yet, add it at the last.',
  'Removes the given item from the array.\n' +
    '@param value Value to be removed from the array.\n' +
    '@return Index in the list which the element removed from.',
  'Removes the given item from the array.\n' +
    '@param value Value to be removed from the array.\n' +
    '@return Index in the list which the element removed from.',
  'Same item check: must be exact match.',
  'No item is removed.',
  '@param entry Entry to be checked.\n' +
    '@return True if the given |entry| exists in the array. False otherwise.',
  'Saves the current array to the persistent storage (Chrome prefs).',
  'TODO(mtomasz): Migrate to URL.',
  "Creates a permutation array for 'permuted' event, which is compatible with\n" +
    'a permutation array used in cr/ui/array_data_model.js.\n' +
    '@param oldArray Previous array before changing.\n' +
    '@param newArray New array after changing.\n' +
    '@return Created permutation array.',
  'Note that both new and old arrays are sorted.',
  'oldArray[oldIndex] is deleted, which is not in the new array.',
  'Unchanged item, which exists in both new and old array. But the',
  'index may be changed.',
  'oldArray[oldIndex] is deleted, which is not in the new array.',
  'In the case of this.compare(oldArray[oldIndex]) > 0:',
  'newArray[newIndex] is added, which is not in the old array.',
  "Fires a 'permuted' event, which is compatible with ArrayDataModel.\n" +
    '@param permutation Permutation array.',
  "Note: This model only fires 'permuted' event, because:",
  "1) 'change' event is not necessary to fire since it is covered by",
  "'permuted' event.",
  "2) 'splice' and 'sorted' events are not implemented. We have to implement",
  'them when necessary.',
  'Called externally when one of the items is not found on the filesystem.\n' +
    '@param entry The entry which is not found.',
  'If Drive is online, then delete the shortcut permanently. Otherwise,',
  'delete from model and add to |unresolvablePaths_|.',
  'TODO(mtomasz): Add support for multi-profile.',
  'Converts the given "stored path" to the URL.\n' +
    'This conversion is necessary because the shortcuts are not stored with\n' +
    'stored-formatted mount paths for compatibility. See http://crbug.com/336155\n' +
    'for detail.\n' +
    '@param path Path in Drive with the stored drive mount path.\n' +
    '@return URL of the given path.',
  'Converts the URL to the stored-formatted path.\n' +
    'See the comment of convertStoredPathToUrl_() for further information.\n' +
    '@param url URL of the directory in Drive.\n' +
    '@return Path with the stored drive mount path.',
  'Root URLs contain a trailing slash.'
]
gear_menu_controller.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Trigger an update of the providers submenu.',
  'Refreshes space info of the current volume.',
  'TODO(mtomasz): Add support for remaining space indication for provided',
  'file systems.',
  'Handles preferences change and updates menu.'
]
guest_os_controller.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'GuestOsController handles the foreground UI relating to Guest OSs.',
  'Refresh the Guest OS placeholders by fetching an updated list of guests,\n' +
    'adding them to the directory tree and triggering a redraw.',
  'Updates the list of Guest OSs when we receive an event for the list of\n' +
    'registered guests changing, by adding them to the directory tree and\n' +
    'triggering a redraw.',
  'Remove non-existing guest os.'
]
holding_space_util.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Utility methods for the holding space feature.',
  'Key in localStorage to store the time (in milliseconds) of the first pin to\n' +
    'holding space.',
  'Key in localStorage to store the time (in milliseconds) of the first showing\n' +
    'of the holding space welcome banner.',
  'Gets the volume types for which the holding space feature is allowed.',
  'Returns a promise which resolves to the time (in milliseconds) of the first\n' +
    'pin to holding space. If no pin has occurred, resolves to `undefined`.',
  'Returns a promise which resolves to the time (in milliseconds) of the first\n' +
    'showing of the holding space welcome banner. If no showing has occurred,\n' +
    'resolves to `undefined`.',
  'If not previously stored, stores now (in milliseconds) as the time of the\n' +
    'first pin to holding space.',
  'Time of first pin should only be stored once.',
  'Store time of first pin.',
  'Record a metric of the interval from the first time the holding space',
  'welcome banner was shown to the time of the first pin to holding space.',
  'If the welcome banner was not shown prior to the first pin, record zero.',
  'We trim the max value to be 2^31 - 1, which is the maximum integer value',
  'that histograms can record.',
  'The histogram will use min values of 1 second and max of 1 day. Note',
  "that it's permissible to record values smaller/larger than the min/max",
  "and they will fall into the histogram's underflow/overflow bucket",
  'respectively.',
  "name= 'HoldingSpace.TimeFromFirstWelcomeBannerShowToFirstPin',",
  'min= oneSecondInMillis,',
  'max= oneDayInMillis,',
  'buckets= 50,',
  'value= timeFromFirstWelcomeBannerShowToFirstPin);',
  'If not previously stored, stores now (in milliseconds) as the time of the\n' +
    'first showing of the holding space welcome banner.',
  'Time of first show should only be stored once.',
  'Store time of first show.'
]
last_modified_controller.ts [
  'Copyright 2017 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Controls last modified column in the file table.',
  'Handles directory scan start.',
  'If the current directory is Recent root, request FileTable to use',
  'modificationByMeTime instead of modificationTime in last modified column.'
]
launch_param.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Parsed options used to launch a new Files app window.',
  'The following fields are described in detail in the FilesAppState class.'
]
list_thumbnail_loader.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Thumbnail loaded event.',
  'A thumbnail loader for list style UI.\n' +
    'ListThumbnailLoader is a thumbnail loader designed for list style ui. List\n' +
    'thumbnail loader loads thumbnail in a viewport of the UI. ListThumbnailLoader\n' +
    'is responsible to return dataUrls of thumbnails and fetch them with proper\n' +
    'priority.',
  'Cache size. Cache size must be larger than sum of high priority range size\n' +
    'and number of prefetch tasks.',
  'Current volume type.',
  'Number of maximum active tasks for testing.',
  '@param directoryModel A directory model.\n' +
    '@param thumbnailModel Thumbnail metadata model.\n' +
    '@param volumeManager Volume manager.\n' +
    '@param opt_thumbnailLoaderConstructor A constructor of thumbnail loader.\n' +
    'This argument is used for testing.',
  'Constructor of thumbnail loader.',
  'Cache size. Cache size must be larger than sum of high priority range\n' +
    'size and number of prefetch tasks.',
  'Gets number of prefetch requests. This number changes based on current\n' +
    'volume type.\n' +
    '@return Number of prefetch requests.',
  'Gets maximum number of active thumbnail fetch tasks. This number changes\n' +
    'based on current volume type.\n' +
    '@return Maximum number of active thumbnail fetch tasks.',
  'An event handler for scan-completed event of directory model. When\n' +
    "directory scan is running, we don't fetch thumbnail in order not to block\n" +
    'IO for directory scan. i.e. modification events during directory scan is\n' +
    'ignored. We need to check thumbnail loadings after directory scan is\n' +
    'completed.',
  'An event handler for splice event of data model. When list is changed,\n' +
    'start to rescan items.',
  'An event handler for sorted event of data model. When list is sorted, start\n' +
    'to rescan items.',
  'An event handler for change event of data model.',
  'Mark the thumbnail in cache as invalid.',
  'Sets high priority range in the list.\n' +
    '@param beginIndex Begin index of the range, inclusive.\n' +
    '@param endIndex End index of the range, exclusive.',
  'Returns a thumbnail of an entry if it is in cache. This method returns\n' +
    'thumbnail even if the thumbnail is outdated.\n' +
    '@return If the thumbnail is not in cache, this returns null.',
  'Since we want to evict cache based on high priority range, we use peek',
  'here instead of get.',
  'Enqueues tasks if available.',
  'If directory scan is running or all items are scanned, do nothing.',
  'Check volume type for optimizing the parameters.',
  'If tasks are running full or all items are scanned, do nothing.',
  'If the entry is a directory, already in cache as valid or fetching, skip.',
  'Enqueues a thumbnail fetch task for an entry.\n' +
    '@param index Index of an entry in current data model.\n' +
    '@param entry An entry.',
  'Dispatches thumbnail loaded event.\n' +
    '@param index Index of an original image in the data model.\n' +
    '@param thumbnail Thumbnail.',
  "Update index if it's already invalid, i.e. index may be invalid if some",
  'change had happened in the data model during thumbnail fetch.',
  'Volume type for testing.',
  'A class to represent thumbnail data.',
  '@param fileUrl File url of an original image.\n' +
    '@param dataUrl Data url of thumbnail.\n' +
    '@param width Width of thumbnail.\n' +
    '@param height Height of thumbnail.',
  'A task to load thumbnail.',
  '@param entry An entry.\n' +
    '@param volumeManager Volume manager.\n' +
    '@param thumbnailModel Metadata cache.\n' +
    '@param thumbnailLoaderConstructor A constructor of thumbnail loader.',
  'Fetches thumbnail.\n' +
    '@return A promise which is resolved when thumbnail data is fetched with\n' +
    'either a success or an error.',
  'When it failed to read exif header with an IO error, do not',
  'generate thumbnail at this time since it may success in the second',
  'try. If it failed to read at 0 byte, it would be an IO error.',
  "If the file is on a network filesystem, don't generate thumbnails",
  'from file entry, as it could cause very high network traffic.',
  'Allow Drive to do so however, as ThumbnailLoader tries to generate',
  'thumbnails of Drive files from file entry only if cached locally.',
  'If an error happens during generating of a thumbnail, then return',
  "an empty object, so we don't retry the thumbnail over and over",
  'again.',
  'If fetching a thumbnail from EXIF fails due to an IO error, then',
  'try to refetch it in the future, but not earlier than in 3',
  'second.',
  'Minimum delay of milliseconds before another retry for fetching a\n' +
    'thumbnmail from EXIF after failing with an IO error. In milliseconds.'
]
list_thumbnail_loader_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Create an image dataURL for testing.',
  'Story test for list thumbnail loader.',
  'Set high priority range to 0 - 2.',
  'Assert that 2 fetch tasks are running.',
  'Fails to get thumbnail from cache for Test2.jpg.',
  'Set high priority range to 4 - 6.',
  'Assert that no new tasks are enqueued.',
  'Assert that thumbnailLoaded event is fired for Test2.jpg.',
  'Since thumbnail of Test2.jpg is loaded into the cache,',
  'getThumbnailFromCache returns thumbnail for the image.',
  'Assert that new task is enqueued.',
  'Set high priority range to 2 - 4.',
  'Assert that task for (Test3.jpg) is enqueued.',
  'Do not enqueue prefetch task when high priority range is at the end of list.',
  'Set high priority range to 5 - 6.',
  'Assert that a task is enqueued for entry5.',
  'Set high priority range to 0 - 2.',
  'In this test case, entry 3 is resolved earlier than entry 2.',
  'Move high priority range to 1 - 3.',
  'Move high priority range to 4 - 6.',
  'Move high priority range to 3 - 5.',
  'Move high priority range to 0 - 2.',
  'Test case for thumbnail fetch error. In this test case, thumbnail fetch for\n' +
    'entry 2 is failed.',
  'Assert that new task is enqueued for entry3.',
  'Test case for handling sorted event in data model.',
  'In order to assert that following task enqueues are fired by sorted event,',
  'wait until all thumbnail loads are completed.',
  'After the sort, list should be',
  'directory1, entry5, entry4, entry3, entry2, entry1.',
  'Test case for handling change event in data model.',
  'entry1 is changed.',
  'cache of entry1 should become invalid.',
  'Wait until thumbnailLoaded event is fired again for the change.',
  'Test case for MTP volume.',
  'Only one request should be enqueued on MTP volume.',
  'Test case that directory scan is running.',
  'Items are added during directory scan.',
  'Scan completed after adding the last item.',
  'Test case for EXIF IO error and retrying logic.',
  'Thumbnails should be fetched only from',
  'EXIF on IO error.'
]
main.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Start point for Files app.'
]
main_window_component.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Component for the main window.\n' +
    'The class receives UI events from UI components that does not have their own\n' +
    'controller, and do corresponding action by using models/other controllers.\n' +
    "The class also observes model/browser API's event to update the misc\n" +
    'components.',
  'True while a user is pressing <Tab>.\n' +
    'This is used for identifying the trigger causing the filelist to\n' +
    'be focused.',
  'Register events.',
  'We are binding both click/keyup event here because "click" event will\n' +
    'be triggered multiple times if the Enter/Space key is being pressed\n' +
    'without releasing (because the focus is always on the button).',
  'Handles touch events.',
  'We only need to know that a tap happens somewhere in the list.',
  'Also the 2nd parameter of handleTouchEvents is just passed back to the',
  'callback. Therefore we can pass a dummy value -1.',
  'Taps on the checkmark should only toggle select the item.',
  'File list focus handler. Used to select the top most element on the list\n' +
    'if nothing was selected.',
  'If the file list is focused by <Tab>, select the first item if no item',
  'is selected.',
  'Handles a double click event.\n@param event The dblclick event.',
  'Opens the selected item by the default command.\n' +
    'If the item is a directory, change current directory to it.\n' +
    'Otherwise, accepts the current selection.\n' +
    '@param event The dblclick event.\n' +
    '@return true if successfully opened the item.',
  "Don't pay attention to clicks or taps during a rename.",
  'It is expected that the target item should have already been selected',
  'by previous touch or mouse event processing.',
  "If the selection is blocked by DLP restrictions, we don't allow to change",
  'directory or the default action.',
  'Accepts the current selection depending on the files app dialog mode.\n' +
    '@return true if successfully accepted the current selection.',
  'Files within the trash root should not have default tasks. They should',
  'be restored first.',
  "Show a confirm dialog that shows whether the current selection can't be\n" +
    'opened and offer to restore instead.\n' +
    '@param trashEntries The current selection.',
  'Handles click/keyup event on the toggle-view button.\n' +
    '@param event Click or keyup event.',
  'This callback can be triggered by both mouse click and Enter/Space key,\n' +
    'so we explicitly check if the "click" event is triggered by keyboard\n' +
    'or not, if so, do nothing because this callback will be triggered\n' +
    'again by "keyup" event when users release the Enter/Space key.',
  'The aria-label of toggleViewButton has been updated, we need to',
  'explicitly show the tooltip.',
  'KeyDown event handler for the document.\n@param event Key event.',
  'Ignore keydown handler in the rename input box.',
  'If there is nothing else for ESC to do, then cancel the dialog.',
  'KeyUp event handler for the document.\n@param event Key event.',
  'KeyDown event handler for the directory tree element.\n' +
    '@param event Key event.',
  'Enter => Change directory or perform default action.',
  'KeyDown event handler for the div#list-container element.\n' +
    '@param event Key event.',
  'If the selection is blocked by DLP restrictions, we',
  "don't allow to",
  'change directory or the default action.',
  "If the item is in renaming process we don't allow to change",
  'directory.',
  "Performs a 'text search' - selects a first list entry with name\n" +
    'starting with entered text (case-insensitive).',
  'Update the UI when the current directory changes.\n' +
    '@param event The directory-changed event.',
  'Update unformatted volume status.',
  'Updates UI.',
  'When the window have got a focus while the current directory is Recent',
  'root, refresh the contents.',
  'Do not start the spinner here to silently refresh the contents.',
  'Adds an isFocused method to the current window object.',
  '@return True if focused.'
]
byte_reader.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@param arrayBuffer An array of buffers to be read from.\n' +
    '@param offset Offset to read bytes at.\n' +
    '@param length Number of bytes to read.',
  'Throw an error if (0 > pos >= end) or if (pos + size > end).\n' +
    'Static utility function.\n' +
    '@param pos Position in the file.\n' +
    '@param size Number of bytes to read.\n' +
    '@param end Maximum position to read from.',
  'Read as a sequence of characters, returning them as a single string.\n' +
    'This is a static utility function.  There is a member function with the\n' +
    'same name which side-effects the current read position.\n' +
    '@param dataView Data view instance.\n' +
    '@param pos Position in bytes to read from.\n' +
    '@param size Number of bytes to read.\n' +
    '@param end Maximum position to read from.\n' +
    '@return Read string.',
  'Read as a sequence of characters, returning them as a single string.\n' +
    'This is a static utility function.  There is a member function with the\n' +
    'same name which side-effects the current read position.\n' +
    '@param dataView Data view instance.\n' +
    '@param pos Position in bytes to read from.\n' +
    '@param size Number of bytes to read.\n' +
    '@param end Maximum position to read from.\n' +
    '@return Read string.',
  'Read as a sequence of UTF16 characters, returning them as a single string.\n' +
    'This is a static utility function.  There is a member function with the\n' +
    'same name which side-effects the current read position.\n' +
    '@param dataView Data view instance.\n' +
    '@param pos Position in bytes to read from.\n' +
    '@param bom True if BOM should be parsed.\n' +
    '@param size Number of bytes to read.\n' +
    '@param end Maximum position to read from.\n' +
    '@return Read string.',
  'Read as a sequence of bytes, returning them as a single base64 encoded\n' +
    'string.\n' +
    'This is a static utility function.  There is a member function with the\n' +
    'same name which side-effects the current read position.\n' +
    '@param dataView Data view instance.\n' +
    '@param pos Position in bytes to read from.\n' +
    '@param size Number of bytes to read.\n' +
    '@param end Maximum position to read from.\n' +
    '@return Base 64 encoded value.',
  'Read as an image encoded in a data url.\n' +
    'This is a static utility function.  There is a member function with the\n' +
    'same name which side-effects the current read position.\n' +
    '@param dataView Data view instance.\n' +
    '@param pos Position in bytes to read from.\n' +
    '@param size Number of bytes to read.\n' +
    '@param end Maximum position to read from.\n' +
    '@return Image as a data url.',
  'Two bytes is enough to identify the mime type.',
  'Return true if the requested number of bytes can be read from the buffer.\n' +
    '@param size Number of bytes to read.\n' +
    '@return True if allowed, false otherwise.',
  'Return true if the current position is past the end of the buffer.\n' +
    '@return True if EOF, otherwise false.',
  'Return true if the current position is before the beginning of the buffer.\n' +
    '@return True if BOF, otherwise false.',
  'Return true if the current position is outside the buffer.\n' +
    '@return True if outside, false if inside.',
  'Set the expected byte ordering for future reads.\n' +
    '@param order Byte order. Either LITTLE_ENDIAN or BIG_ENDIAN.',
  'Throw an error if the reader is at an invalid position, or if a read a read\n' +
    'of |size| would put it in one.\n' +
    'You may optionally pass |end| to override what is considered to be the\n' +
    'end of the buffer.\n' +
    '@param size Number of bytes to read.\n' +
    '@param end Maximum position to read from.',
  '@param width Number of bytes to read.\n' +
    '@param signed True if signed, false otherwise.\n' +
    '@param end Maximum position to read from.\n' +
    '@return Scalar value.',
  'Read as a sequence of characters, returning them as a single string.\n' +
    'Adjusts the current position on success.  Throws an exception if the\n' +
    'read would go past the end of the buffer.\n' +
    '@param size Number of bytes to read.\n' +
    '@param end Maximum position to read from.\n' +
    '@return String value.',
  'Read as a sequence of characters, returning them as a single string.\n' +
    'Adjusts the current position on success.  Throws an exception if the\n' +
    'read would go past the end of the buffer.\n' +
    '@param size Number of bytes to read.\n' +
    '@param end Maximum position to read from.\n' +
    '@return Null-terminated string value.',
  "If we've stopped reading because we found '0' but didn't hit size limit",
  "then we should skip additional '0' character",
  'Read as a sequence of UTF16 characters, returning them as a single string.\n' +
    'Adjusts the current position on success.  Throws an exception if the\n' +
    'read would go past the end of the buffer.\n' +
    '@param bom True if BOM should be parsed.\n' +
    '@param size Number of bytes to read.\n' +
    '@param end Maximum position to read from.\n' +
    '@return Read string.',
  'If the BOM word was present advance the position.',
  "If we've stopped reading because we found '0' but didn't hit size limit",
  "then we should skip additional '0' character",
  'Read as a sequence of bytes, returning them as a single base64 encoded\n' +
    'string.\n' +
    'Adjusts the current position on success.  Throws an exception if the\n' +
    'read would go past the end of the buffer.\n' +
    '@param size Number of bytes to read.\n' +
    '@param end Maximum position to read from.\n' +
    '@return Base 64 encoded value.',
  'Read an image returning it as a data url.\n' +
    'Adjusts the current position on success.  Throws an exception if the\n' +
    'read would go past the end of the buffer.\n' +
    '@param size Number of bytes to read.\n' +
    '@param end Maximum position to read from.\n' +
    '@return Image as a data url.',
  'Seek to a give position relative to seekStart.\n' +
    '@param pos Position in bytes to seek to.\n' +
    '@param seekStart Relative position in bytes.\n' +
    '@param end Maximum position to seek to.',
  'Seek to a given position relative to seekStart, saving the current\n' +
    'position.\n' +
    'Recover the current position with a call to seekPop.\n' +
    '@param pos Position in bytes to seek to.\n' +
    '@param seekStart Relative position in bytes.',
  'Alter the seekStack_ after the call to seek(), in case it throws.',
  'Undo a previous seekPush.',
  'Return the current read position.\n@return Current position in bytes.',
  'Intel, 0x1234 is [0x34, 0x12]',
  'Motorola, 0x1234 is [0x12, 0x34]',
  'Seek relative to the beginning of the buffer.',
  'Seek relative to the current position.',
  'Seek relative to the end of the buffer.'
]
content_metadata_provider.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@final',
  'Map from Entry.toURL() to callback.\n' +
    'Note that simultaneous requests for same url are handled in MetadataCache.',
  '@param messagePort Message port overriding the default worker port.',
  'Set up |this.disapatcher_|. Creates the Shared Worker if needed.',
  'Returns |messagePort| if given. Otherwise creates the Shared Worker\n' +
    'and returns its message port.',
  'Converts content metadata from parsers to the internal format.\n' +
    '@param metadata The content metadata.\n' +
    '@return Converted metadata.',
  'Fetches the entry metadata.\n' +
    '@param entry File entry.\n' +
    '@param names Requested metadata types.\n' +
    '@param callback MetadataItem callback. Note\n' +
    'this callback is called asynchronously.',
  'Parse the image using the Worker image metadata parsers.',
  'The RAW file ifd will be processed herein, so remove ifd from names.',
  'Creates an ifdError metadata item: when reading the fileEntry failed\n' +
    'or extracting its ifd data failed.',
  'Gets the content metadata for a file entry consisting of the content mime\n' +
    'type. For audio and video file content mime types, additional metadata is\n' +
    'extracted if requested, such as metadata tags and images.\n' +
    '@param entry File entry.\n' +
    '@param names Requested metadata types.\n' +
    '@return Promise that resolves with the content\n' +
    'metadata of the file entry.',
  'First step is to determine the sniffed content mime type of |entry|.',
  'Once the content mime type sniff step is done, search |names| for any\n' +
    'remaining media metadata to extract from the file. Note mediaMimeType\n' +
    'is excluded since it is used for the sniff step.\n' +
    '@param names Requested metadata types.\n' +
    '@param type File entry content mime type.\n' +
    '@return Media metadata type: false for metadata tags, true\n' +
    'for metadata tags and images. A null return means there is no more\n' +
    'media metadata that needs to be extracted.',
  'Dispatches a message from a metadata reader to the appropriate on* method.\n' +
    '@param event The event.',
  "Handles the 'initialized' message from the metadata Worker.",
  'Tests can monitor for this state with',
  'ExtensionTestMessageListener listener("worker-initialized");',
  'ASSERT_TRUE(listener.WaitUntilSatisfied());',
  'Automated tests need to wait for this, otherwise we crash in',
  'browser_test cleanup because the worker process still has',
  'URL requests in-flight.',
  "Handles the 'result' message from the metadata Worker.\n" +
    '@param url File url.\n' +
    '@param metadataItem The metadata item.',
  "Handles the 'log' message from the metadata Worker.\n" +
    '@param arglist Log arguments.',
  'Converts fileManagerPrivate.MediaMetadata |metadata| to a MetadataItem.\n' +
    '@param entry File entry.\n' +
    '@param metadata The metadata.\n' +
    '@return Promise that resolves with the\n' +
    'converted metadata item.',
  "It is possible that metadata['track'] is undefined but this is",
  'defined.',
  "Returns an 'error' MetadataItem.\n" +
    '@param url File entry.\n' +
    '@param step Step that failed.\n' +
    '@param cause Error cause.\n' +
    '@return Error metadata',
  '@param url File Entry.\n' +
    '@param step Step that failed.\n' +
    '@param errorDescription Error cause.'
]
content_metadata_provider_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on',
  "Mocking SharedWorker's port.",
  'TODO(ryoh): chrome.mediaGalleries API is not available in unit tests.'
]
dlp_metadata_provider.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Metadata provider for FileEntry#getMetadata.\n' +
    'Returns Data Leak Prevention (DLP) status of the file, such as whether the\n' +
    'file is restricted or not.\n' +
    '@final',
  'Filter out fake entries before fetching the metadata.',
  'Check if this entry was filtered, and if not, add the retrieved',
  'metadata.'
]
dlp_metadata_provider_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Setup mock chrome APIs.',
  'Tests that DlpMetadataProvider filters out fake entries before calling\n' +
    "`getDlpMetadata()` because the private API fails with entries that aren't\n" +
    'from FileSystem API. For fake entries the provider should return an empty\n' +
    'metadata object.'
]
exif_constants.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Exif marks.',
  'Start of "stream" (the actual image data).',
  'Start of "frame".',
  'Start of image data.',
  'End of image data.',
  'APP0 block, most commonly JFIF data.',
  'Start of exif block.',
  'Exif align.',
  'Indicates little endian exif data.',
  'Indicates big endian exif data.',
  'Exif tag.',
  'First directory containing TIFF data.',
  'Pointer from TIFF to the GPS directory.',
  'Pointer from TIFF to the EXIF IFD.',
  'Pointer from TIFF to thumbnail.',
  'Length of thumbnail data.',
  'Type definition of exif entry.'
]
exif_parser.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@final',
  '@param parent Parent object.',
  '@param file File object to parse.\n' +
    '@param metadata Metadata object for the file.\n' +
    '@param callback Callback to be called on success.\n' +
    '@param errorCallback Error callback.',
  '@param file File object to parse.\n' +
    '@param callback Callback to be called on success.\n' +
    '@param errorCallback Error callback.\n' +
    '@param metadata Metadata object.\n' +
    '@param filePos Position to slice at.\n' +
    '@param length Number of bytes to slice. By default 1 KB.',
  'Read at least 1Kb so that we do not issue too many read requests.',
  '@param file File object to parse.\n' +
    '@param callback Callback to be called on success.\n' +
    '@param errorCallback Error callback.\n' +
    '@param metadata Metadata object.\n' +
    '@param filePos Position to slice at.\n' +
    '@param buf Buffer to be parsed.',
  'We never ask for less than 4 bytes. This can only mean we reached',
  'EOF.',
  'First slice, check for the SOI mark.',
  '',
  'Cannot read the mark and the length, request a minimum-size slice.',
  'Get the entire section.',
  'The most reliable size information is encoded in the SOF section.',
  '@param mark Mark to be checked.\n' +
    '@return True if the mark is SOF (Start of Frame).',
  'There are 13 variants of SOF fragment format distinguished by the last',
  'hex digit of the mark, but the part we want is always the same.',
  'If the last digit is 4, 8 or 12 it is not really a SOF.',
  '@param metadata Metadata object.\n' +
    '@param buf Buffer to be parsed.\n' +
    '@param br Byte reader to be used.',
  'Some JPEG files may have sections marked with EXIF_MARK_EXIF',
  'but containing something else (e.g. XML text). Ignore such sections.',
  'Offsets inside the EXIF block are based after the magic string.',
  'Create a new ByteReader based on the current position to make offset',
  'calculations simpler.',
  'Image directory.',
  'Thumbnail Directory chained from the end of the image directory.',
  'If no thumbnail orientation is encoded, assume same orientation as',
  'the primary image.',
  'EXIF Directory may be specified as a tag in the image directory.',
  'GPS Directory may also be linked from the image directory.',
  'Thumbnail may be linked from the image directory.',
  '@param metadata Metadata object.\n' +
    '@param width Width in pixels.\n' +
    '@param height Height in pixels.',
  '@param br Byte reader to be used for reading.\n@return Mark value.',
  '@param br Bye reader to be used for reading.\n' +
    '@return Size of the mark at the current position.',
  'Length includes the 2 bytes used to store the length.',
  '@param br Byte reader to be used for reading.\n' +
    '@param tags Map of tags to be written to.\n' +
    '@return Directory offset.',
  '@param br Byte reader to be used for reading.\n@param tag Tag object.',
  'Every time this function is called with `size` =',
  '8, `readFunction` is also passed, so',
  'readScalar is only ever called with `size` = 1,2',
  'or 4.',
  'This is probably invalid exif data, skip it.',
  'If the total size is > 4, the next 4 bytes will be a pointer to the',
  'actual data.',
  'Read multiple components into an array.',
  'Go back to the previous position if we had to jump to the data.',
  "Otherwise, if the value wasn't exactly 4 bytes, skip over the",
  'unread data.',
  'Validates string tag value, and fix it if necessary.\n' +
    '@param tag A tag to be validated and fixed.',
  'String should end with null character.',
  'Transform exif-encoded orientation into a set of parameters compatible with\n' +
    'CSS and canvas transforms (scaleX, scaleY, rotation).\n' +
    '@param ifd Exif property dictionary (image or thumbnail).\n' +
    '@return Orientation object.',
  'Map from the exif orientation value to the horizontal scale value.',
  'Map from the exif orientation value to the vertical scale value.',
  'Map from the exif orientation value to the rotation value.'
]
exif_parser_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@param arrayBuffer Underlying buffer to use.\n' +
    '@param offset Offset at which to start writing.\n' +
    '@param length Maximum length to use.',
  'If key is a number, format it in hex style.\n' +
    '@param key A key.\n' +
    '@return Formatted representation.',
  'Set the byte ordering for future writes.\n' +
    '@param order ByteOrder to use\n' +
    '{ByteOrder.LITTLE_ENDIAN} or {ByteOrder.BIG_ENDIAN}.',
  '@return the current write position.',
  'Skips desired amount of bytes in output stream.\n' +
    '@param count Byte count to skip.',
  "Check if the buffer has enough room to read 'width' bytes. Throws an error\n" +
    'if it has not.\n' +
    '@param width Amount of bytes to check.',
  'Writes scalar value to output stream.\n' +
    '@param value Value to write.\n' +
    '@param width Desired width of written value.\n' +
    '@param signed True if value represents signed number.',
  'Writes string.\n@param str String to write.',
  "Allocate the space for 'width' bytes for the value that will be set later.\n" +
    "To be followed by a 'resolve' call with the same key.\n" +
    '@param key A key to identify the value.\n' +
    '@param width Width of the value in bytes.',
  "Set the value previously allocated with a 'forward' call.\n" +
    '@param key A key to identify the value.\n' +
    '@param value value to write in pre-allocated space.',
  'A shortcut to resolve the value to the current write position.\n' +
    '@param key A key to identify pre-allocated position.',
  'Check if every forward has been resolved, throw and error if not.',
  'Creates a directory with specified tag. This method only supports string\n' +
    'format tag, which is longer than 4 characters.\n' +
    '@param bytes Bytes to be written.\n' +
    '@param tag An exif entry which will be written.',
  'Parses exif data bytes (with logging) and returns the parsed tags.\n' +
    '@param bytes Bytes to be read.\n' +
    '@return Tags.',
  'Tests that parsed exif strings have a null character termination.',
  'Create exif with a value that does not end with null character.',
  'Parse the exif data.',
  'The parsed value should end in a null character.'
]
external_metadata_provider.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Metadata provider for FileEntry#getMetadata.\n' +
    'TODO(hirono): Rename thumbnailUrl with externalThumbnailUrl.\n' +
    '@final',
  '@param nameSet A set of property names that will be used to copy the value\n' +
    'from |propertiesList|.'
]
external_metadata_provider_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Mock chrome APIs.',
  'Set up mock chrome APIs.'
]
file_system_metadata_provider.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Metadata provider for FileEntry#getMetadata.\n@final',
  "Can't use console.error because some tests hit this line and",
  'console.error causes them to fail because of JSErrorCount.',
  'This error is an acceptable condition.'
]
file_system_metadata_provider_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
id3_parser.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'ID3 parser.',
  '@param parent A metadata dispatcher.',
  'Reads synchsafe integer.\n' +
    "'SynchSafe' term is taken from id3 documentation.\n" +
    '@param reader Reader to use.\n' +
    '@param length Rytes to read.\n' +
    '@return Synchsafe value.',
  'fall through',
  'fall through',
  'fall through',
  'Reads 3bytes integer.\n@param reader Reader to use.\n@return Uint24 value.',
  'Reads string from reader with specified encoding\n' +
    '@param reader Reader to use.\n' +
    '@param encoding String encoding.\n' +
    '@param size Maximum string size. Actual result may be shorter.\n' +
    '@return String value.',
  'TODO: implement UTF_8.',
  'Reads text frame from reader.\n' +
    '@param reader Reader to use.\n' +
    '@param majorVersion Major id3 version to use.\n' +
    '@param frame Frame so store data at.\n' +
    '@param end Frame end position in reader.',
  'Reads user defined text frame from reader.\n' +
    '@param reader Reader to use.\n' +
    '@param majorVersion Major id3 version to use.\n' +
    '@param frame Frame so store data at.\n' +
    '@param end Frame end position in reader.',
  '@param reader Reader to use.\n' +
    '@param majorVersion Major id3 version to use.\n' +
    '@param frame Frame so store data at.\n' +
    '@param end Frame end position in reader.',
  '@param reader Reader to use.\n' +
    '@param majorVersion Major id3 version to use.\n' +
    '@param frame Frame so store data at.\n' +
    '@param end Frame end position in reader.',
  'Reads string from reader with specified encoding\n' +
    '@param reader Reader to use.\n' +
    '@param majorVersion Major id3 version to use.\n' +
    '@return Frame read.',
  'Parse the `file` and attempt to extract id3v1 metadata from it, and place\n' +
    'these properties on the `metadata` object.\n' +
    '@param file Input File object to parse.\n' +
    '@param metadata Output metadata object of the file.',
  'Reads last 128 bytes of file in bytebuffer, which passes further. In',
  'last 128 bytes should be placed ID3v1 tag if available.',
  'Attempts to extract ID3v1 tag from 128 bytes long ByteBuffer',
  'Parse the `file` and attempt to extract id3v2 metadata from it, and place\n' +
    'these properties on the `metadata` object.\n' +
    '@param file Input File object to parse.\n' +
    '@param metadata Output metadata object of the file.',
  'Check if the first 10 bytes contains ID3 header.',
  'Extract all ID3v2 frames',
  'Skip extended header if found',
  "Adds 'description' object to metadata. 'description' is used to unify",
  'different parsers and make metadata parser-aware. The key of each',
  'description item should be used to properly format the value before',
  'displaying to users.',
  '@param file Input File object to parse.\n' +
    '@param metadata Output metadata object of the file.\n' +
    '@param callback Success callback.\n' +
    '@param onError Error callback.',
  'Metadata order to use for metadata generation',
  'Id3v1 constants.',
  "Genres list as described in id3 documentation. We aren't going to\n" +
    'localize this list, because at least in Russian (and I think most\n' +
    'other languages), translation exists at least for 10% and most time\n' +
    'translation would degrade to transliteration.',
  'Id3v2 constants.',
  'ISO-8859-1 [ISO-8859-1]. Terminated with $00.',
  '[UTF-16] encoded Unicode [UNICODE] with BOM. All\n' +
    'strings in the same frame SHALL have the same byteorder.\n' +
    'Terminated with $00 00.',
  'UTF-16BE [UTF-16] encoded Unicode [UNICODE] without BOM.\n' +
    'Terminated with $00 00.',
  'UTF-8 [UTF-8] encoded Unicode [UNICODE]. Terminated with $00.',
  'User defined text information frame',
  'User defined URL link frame',
  'User defined text information frame',
  'User defined URL link frame',
  'User attached image',
  'User attached image'
]
id3_parser_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Frame header',
  'Frame',
  'Frame header',
  'Frame',
  'Frame header',
  'Frame'
]
image_parsers.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Base class for image metadata parsers that only need to look at a short\n' +
    'fragment at the start of the file.',
  '@param parent Parent object.\n' +
    '@param type Image type.\n' +
    '@param urlFilter RegExp to match URLs.\n' +
    '@param headerSize Size of header.',
  '@param file File to be parsed.\n' +
    '@param metadata Metadata object of the file.\n' +
    '@param callback Success callback.\n' +
    '@param errorCallback Error callback.',
  'Parse header of an image. Inherited class must implement this.\n' +
    '@param metadata Dictionary to store the parsed metadata.\n' +
    '@param byteReader Reader for header binary data.',
  'Parser for the header of png files.',
  'Parser for the header of bmp files.',
  'Parser for the header of gif files.',
  'Parser for the header of webp files.',
  'VP8 lossy bitstream format.',
  'VP8 lossless bitstream format.',
  'VP8 extended file format.',
  'Read 24-bit value. ECMAScript assures left-to-right evaluation order.',
  'Parser for the header of .ico icon files.'
]
metadata_cache_item.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Cache of metadata for a FileEntry.',
  'Map of property name and MetadataCacheItemProperty.',
  'Creates requested names that need to be loaded.\n' +
    '@return Property names that need to be loaded.',
  'Check if the property needs to be updated.',
  'Marks the given properties as loading.',
  'Feeds the result of startRequests.\n' +
    '@param requestId Request ID passed when calling startRequests.\n' +
    '@param typedObject Map of property name and value.\n' +
    '@return Whether at least one property is updated or not.',
  'Marks the caches of all properties in the item as invalidates and forces to\n' +
    'reload at the next time of startRequests. Optionally, takes an array of\n' +
    'names and only invalidates those.\n' +
    '@param requestId Request ID of the invalidation request. This must\n' +
    'be larger than other requests ID passed to the item before.',
  'Obtains property for entries and names.\n' +
    'Note that it returns invalidated properties also.',
  '`undefined` is the intersection of all possible properties of',
  'MetadataItem.',
  'TODO(TS): check ... if (!(errorKey in result)){',
  'Creates deep copy of the item.',
  'Returns whether all the given properties are fulfilled.\n' +
    '@param names Property names.',
  'Cache of metadata for a property.',
  'Cached value of property.',
  'Last request ID.',
  'Cache state of the property.'
]
metadata_cache_item_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
metadata_cache_set.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Custom event dispatched by the metadata cache set when results from metadata\n' +
    'provider are set on it.',
  'A collection of MetadataCacheItem objects. This class acts as a map from file\n' +
    'entry URLs to metadata items. You can store metadata for entries, you can\n' +
    'retrieve metadata for entries, clear the entire cache, or just selected\n' +
    'entries. In addition, you can generate MetadataRequests and start them (i.e.,\n' +
    'put them in the LOADING state).',
  'Creates list of MetadataRequest based on the cache state.',
  'Updates cache states to start the given requests.',
  'Stores results from MetadataProvider with the request ID.\n' +
    '@param requestId Request ID. If a newer operation has already been done,\n' +
    'the results must be ignored.\n' +
    '@param names Property names that have been requested and updated.\n' +
    '@return Whether at least one result is stored or not.',
  'Obtains cached properties for entries and names.\n' +
    'Note that it returns invalidated properties also.\n' +
    '@param entries Entries.\n' +
    '@param names Property names.\n' +
    '@return metadata for the given entries.',
  'Obtains cached properties for file URLs and names.\n' +
    'Note that it returns invalidated properties also.\n' +
    '@param urls File URLs.\n' +
    '@param names Property names.\n' +
    '@return metadata for the given entries.',
  'Marks the caches of entries as invalidates and forces to reload at the next\n' +
    'time of startRequests. Optionally, takes an array of metadata names and\n' +
    'only invalidates those.\n' +
    '@param requestId Request ID of the invalidation request. This must\n' +
    'be larger than other request ID passed to the set before.\n' +
    '@param [names]',
  'Clears the caches of entries.',
  'Clears all cache.',
  'Creates snapshot of the cache for entries.\n' +
    '@return a cache with metadata for the given entries.',
  'Returns whether all the given properties are fulfilled.\n' +
    '@param entries Entries.\n' +
    '@param names Property names.',
  'Generates a unique request ID every time when it is called.'
]
metadata_cache_set_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'entryA has already been cached.',
  'contentMimeType should not be stored because it is requested before clear.'
]
metadata_dispatcher.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Helper function to type entries as FileEntry. We redefine it here because',
  'importing entry_utils.js has some transitive side effects that access objects',
  'not accessible in a shared worker.',
  'Dispatches metadata requests to the correct parser.',
  'Verbose logging for the dispatcher.\n' +
    'Individual parsers also take this as their default verbosity setting.',
  'Explicitly type this as a record so we can index into this object with a',
  'string.',
  '@param port Worker port.',
  '|init| message handler.',
  "Inform our owner that we're done initializing.",
  'If we need to pass more data back, we can add it to the param array.',
  'TODO(cleanup): parserRegexp_ looks unused in content_metadata_provider',
  'and in this file, too.',
  '|request| message handler.\n@param fileURL File URL.',
  'Indicate to the caller that an operation has failed.\n' +
    'No other messages relating to the failed operation should be sent.',
  'TODO(cleanup): Strictly type these arguments to the [url, step, cause]',
  'format that ContentMetadataProvider expects.',
  'Send a log message to the caller.\n' +
    'Callers must not parse log messages for control flow.',
  'Send a log message to the caller only if this.verbose is true.',
  'Post a properly formatted message to the caller.\n' +
    '@param verb Message type descriptor.\n' +
    '@param args Arguments array.',
  'Message handler.\n@param event Event object.',
  '@param fileURL File URL.\n@param callback Completion callback.',
  'Step one, find the parser matching the url.',
  'Create the metadata object as early as possible so that we can',
  'pass it with the error message.',
  'Step two, turn the url into an entry.',
  'Step three, turn the entry into a file.',
  'Step four, parse the file.',
  'This interface and the following self type assertion is needed as we',
  'currently use the same tsconfig to build this as with the rest of Files App.',
  'TODO(b/289003444): Use a separate tsconfig to build this file with webworker',
  'definitions, and then remove this interface and the following type assertion.',
  "Webworker spec says that the worker global object is called self.  That's",
  'a terrible name since we use it all over the chrome codebase to capture',
  "the 'this' keyword in lambdas.",
  'Non-shared worker.'
]
metadata_item.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Metadata of a file.',
  'Size of the file. -1 for directory.',
  'Thumbnail URL obtained from external provider.',
  'Cropped thumbnail URL obtained from external provider.',
  'Thumbnail obtained from content provider.',
  'Thumbnail transformation obtained from content provider.',
  'Image transformation obtained from content provider.',
  'Whether the entry is pinned for ensuring it is available offline.',
  'Whether the entry is cached locally.',
  'Whether the entry is hosted document of google drive.',
  'Whether the entry is modified locally and not synched yet.',
  'Whether the entry is present or hosted;',
  'Whether the entry is shared explicitly with me.',
  'Whether the entry is shared publicly.',
  'URL for open a file in browser tab.',
  'Audio or video duration in seconds.',
  'Mime type obtained by content provider based on URL.\n' +
    'TODO(hirono)?: Remove the mediaMimeType.',
  '"Image File Directory" obtained from EXIF header.\n' +
    'TODO(b/289003444): Add a type for this field once we move the type\n' +
    'definition for Ifd into metadata.',
  'Whether the entry is under any DataLeakPrevention policy.',
  'Source URL that can be used to check DataLeakPrevention policy.',
  'Only applicable in file picker dialogs.\n' +
    'Whether the entry is blocked by DataLeakPrevention policy from being\n' +
    'uploaded to/opened by a specific destination, defined by the caller of\n' +
    'the dialog.',
  'Status indicating the current syncing behaviour for this item.',
  'Represents some ongoing operation with this item. E.g., pasting, syncing.\n' +
    'Note: currently, this is exclusively used for Drive syncing.',
  'If true, the item is a shortcut. Typically refers to a shortcut in Drive,\n' +
    'but used to surface a shortcut badge on the file item.',
  'Time in milliseconds since the epoch when the file last received a\n' +
    '"completed" sync status.',
  'Three to four character identifier for the type of frame.',
  'Size excludes the header.',
  'Only set for v2.3 and v2.4.',
  'Various optional fields set depending on the type of frame.'
]
metadata_model.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Record stats about Metadata when in tests.',
  'Obtains metadata for entries.\n' +
    '@param entries Entries.\n' +
    '@param names Metadata property names to be obtained.',
  'Check if the results are cached or not.',
  'The LRU cache may be cached out when the callback is completed.',
  'To hold cached values, create snapshot of the cache for entries.',
  'Register callback.',
  'If the requests are not empty, call the requests.',
  'Obtain requested entries and ensure all the requested properties are',
  'contained in the result.',
  'Store cache.',
  'Invoke callbacks and remove the ones that were successful.',
  'Updates the metadata of the given fileUrls with the provided values for\n' +
    'each specified metadata name.\n' +
    '@param fileUrls FileURLs to have their metadata updated\n' +
    '@param names Metadata property names to be updated.\n' +
    '@param values Contains an array for each file, where the array contains a\n' +
    'new value for each metadata property passed in `names`.',
  'Only update corresponding entries that are available in the store.',
  'TODO(austinct): Change the function call signature and update all',
  'callers to allow this statement to be well typed without the type',
  'assertions.',
  'Obtains metadata cache for entries.\n' +
    '@param entries Entries.\n' +
    '@param names Metadata property names to be obtained.',
  'Check if the property name is correct or not.',
  'Obtains metadata cache for file URLs.\n' +
    '@param urls File URLs.\n' +
    '@param names Metadata property names to be obtained.',
  'Check if the property name is correct or not.',
  'Clears old metadata for newly created entries.',
  'Clears metadata for deleted entries.\n' +
    '@param urls Note it is not an entry list because we cannot\n' +
    'obtain entries after removing them from the file system.',
  'Invalidates metadata for updated entries.',
  'Clears all cache.',
  'Adds event listener to internal cache object.',
  'Removes event listener from internal cache object.',
  'Stores properties to snapshot cache of the callback request.\n' +
    'If all the requested property are served, it invokes the callback.\n' +
    '@return Whether the callback is invoked or not.'
]
metadata_model_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Only string metadata properties are valid in this metadata provider.',
  'This function implements an existing function from FileSystemEntry, so we',
  "can't change the name.",
  'eslint-disable-next-line @typescript-eslint/naming-convention',
  'Returns a property of a Metadata result object.',
  'All the results should be cached here.',
  'mediaArtist has not been cached here.',
  'entryB has not been cached here.',
  'The result of first call has not been fetched yet.',
  "'mediaAlbum' is cached here.",
  'Returns alternateUrl.',
  'The result should be cached value at the time when get was',
  'called.',
  'getImpl returns empty result.'
]
metadata_parser.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Verbose logging for the dispatcher.\n' +
    'Individual parsers also take this as their default verbosity setting.',
  'Indicate to the caller that an operation has failed.\n' +
    'No other messages relating to the failed operation should be sent.',
  'Send a log message to the caller.\n' +
    'Callers must not parse log messages for control flow.',
  'Send a log message to the caller only if this.verbose is true.',
  '@param parent_ Parent object.\n' +
    '@param type_ Parser type.\n' +
    '@param urlFilter_ RegExp to match URLs.',
  'Output an error message.',
  'Output a log message.',
  'Output a log message if |verbose| flag is on.',
  '@return Metadata object with the minimal set of properties.',
  'Get a ByteReader for a range of bytes from file. Rejects on error.\n' +
    '@param file The file to read.\n' +
    '@param begin Starting byte (included).\n' +
    '@param end Last byte (excluded).',
  'Parses the file and fills out the given metadata object, returning the\n' +
    'result via the passed in callback.\n' +
    '@param file File object to parse.\n' +
    '@param metadata Metadata object of the file.\n' +
    '@param callback Success callback.\n' +
    '@param onError Error callback.',
  'Base class for image metadata parsers.',
  '@param parent Parent object.\n' +
    '@param type Image type.\n' +
    '@param urlFilter RegExp to match URLs.'
]
metadata_provider.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Check if the property name is correct or not.',
  'Obtains the metadata for the request.\n' +
    '@return Promise with obtained metadata.\n' +
    'It should not return rejected promise. Instead it should return\n' +
    'undefined property for property error, and should return empty\n' +
    'MetadataItem for entry error.'
]
metadata_request.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@param names Property name list to be requested.'
]
mock_metadata.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "Mock metadata provider that doesn't actually do anything just so\n" +
    "MockMetadataModel has an object it can pass to MetadataModel's constructor.",
  'Returns a mock of metadata model.',
  'Per entry properties, which can be set by a test.',
  '@param properties Default properties, which can be overwritten by a test.'
]
mpeg_parser.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@param br ByteReader instance.\n' +
    '@param end End of atom position.\n' +
    '@return Atom size.',
  'Assert that opt_end <= buffer end.',
  'When supplied, opt_end is the end of the enclosing atom and is used to',
  'check the correct nesting.',
  '@param br ByteReader instance.\n' +
    '@param end End of atom position.\n' +
    '@return Atom name.',
  '@param metadata Metadata object.\n@return Root of the parser tree.',
  "'meta' atom can occur at one of the several places in the file structure.",
  'main parser for the entire file structure.',
  '@param file File.\n' +
    '@param metadata Metadata.\n' +
    '@param callback Success callback.\n' +
    '@param onError Error callback.',
  "Kick off the processing by reading the first atom's header.",
  '@param parser Parser tree node.\n' +
    '@param br ByteReader instance.\n' +
    '@param atom Atom descriptor.\n' +
    '@param filePos File position of the atom start.',
  '@param parser Parser tree node.\n' +
    '@param br ByteReader instance.\n' +
    '@param parentAtom Parent atom descriptor.\n' +
    '@param filePos File position of the atom start.',
  'Most likely we are looping through a corrupt file.',
  '@param rootParser Parser definition.\n' +
    '@param file File.\n' +
    '@param filePos Start position in the file.\n' +
    '@param size Atom size.\n' +
    '@param name Atom name.\n' +
    '@param onError Error callback.\n' +
    '@param onSuccess Success callback.',
  '@param buf Data buffer.\n' +
    '@param rootParser Parser definition.\n' +
    '@param file File.\n' +
    '@param filePos Start position in the file.\n' +
    '@param size Atom size.\n' +
    '@param name Atom name.\n' +
    '@param onError Error callback.\n' +
    '@param onSuccess Success callback.',
  'the header has already been read.',
  'Check the available data size. It should be either exactly',
  'what we requested or HEADER_SIZE bytes less (for the last atom).',
  'Process the top level atom.',
  'The previous read returned everything we asked for, including',
  'the next atom header at the end of the buffer.',
  'Parse this header and schedule the next read.',
  'If we do not have a parser for the next atom, skip the content and',
  'read only the header (the one after the next).',
  'The previous read did not return the next atom header, EOF reached.',
  'Size of the atom header.'
]
multi_metadata_provider.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@final',
  'Property names of documents-provider files which we should get from\n' +
    'ExternalMetadataProvider.\n' +
    'We should NOT use ExternalMetadataProvider.PROPERTY_NAMES for\n' +
    'documents-provider files, since ExternalMetadataProvider zero-fills all\n' +
    "requested properties (e.g. 'size' is initialized to '0 bytes' even when\n" +
    'size is not acquired by chrome.fileManagerPrivate.getEntryProperties) and\n' +
    'the zero-filled property can overwrite a valid property which is already\n' +
    'acquired from FileSystemMetadataProvider.',
  'Obtains metadata for entries.',
  'Group property names.',
  'If the property can be obtained both from ExternalProvider and from',
  'ContentProvider, we can obtain the property from ExternalProvider',
  'without fetching file content. On the other hand, the values from',
  "ExternalProvider may be out of sync if the file is 'dirty'. Thus we",
  'fallback to ContentProvider if the file is dirty. See below.',
  'Because properties can be out of sync just after sync completion',
  "even if 'dirty' is false, it refers 'present' here to switch the",
  'content and the external providers.',
  'When using a documents provider, we need to discard:',
  '- contentRequests: since the content sniffing code',
  "can't resolve the file path in the MediaGallery API. See",
  'crbug.com/942417',
  '- fileSystemRequests: because it does not correctly handle unknown',
  'file size, which DocumentsProvider files may report (all filesystem',
  'request fields are retrieved using external requests instead).',
  'Merge results.',
  '`undefined` is the intersection of all possible properties of',
  'MetadataItem.'
]
multi_metadata_provider_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests that we only use ExternalMetadataProvider for a DocumentsProvider file.'
]
thumbnail_model.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Metadata containing thumbnail information.',
  '@return Promise fulfilled with old format metadata list.',
  'TODO(hirono): Use the provider results directly after removing',
  'code using old metadata format.'
]
thumbnail_model_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Assign all the properties from `metadata` with keys in `names` to the',
  'same named property in `result`.'
]
metadata_box_controller.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Controller of metadata box.\nThis should be initialized with |init| method.',
  'Initialize the controller with quick view which will be lazily loaded.',
  'Update the view of metadata box.',
  'Update the displayed entry modificationTime format only, and return.',
  'Do not clear isSizeLoading and size fields when the entry is not changed.',
  'Accessor to get a guaranteed `FilesMetadataBox`.',
  'Updates the metadata box with general and file-specific metadata.\n' +
    '@param isSameEntry if the entry is not changed from the last time.',
  'Extra metadata types for local video media.',
  'Updates the metadata box modificationTime.',
  "Set a current directory's size in metadata box.\n" +
    'A loading animation is shown while fetching the directory size. However, it\n' +
    "won't show if there is no size value. Use a dummy value ' ' in that case.\n" +
    'To avoid flooding the OS system with chrome.getDirectorySize requests, if a\n' +
    'previous request is active, store the new request and return. Only the most\n' +
    'recent new request is stored. When the active request returns, it calls the\n' +
    'stored request instead of updating the size field.\n' +
    '`isSameEntry` is True if the entry is not changed from the last time. False\n' +
    'enables the loading animation.',
  'Store the new setDirectorySize_ request and return.',
  "Returns a label to display the file's location."
]
metadata_update_controller.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Number of milliseconds in a day.',
  'Controller for list contents update.',
  "Update metadata to change 'Today' and 'Yesterday' dates.",
  'Clears metadata cache for the current directory and its descendants.',
  "We don't pass callback here. When new metadata arrives, we have an",
  'observer registered to update the UI.',
  'Handles local metadata changes in the current directory.\n' +
    '@param event Change event.',
  'TODO(hirono): Specify property name instead of metadata type.',
  'TODO(oka): Remove these two lines, and add fileMetadataFormatter to',
  'constructor for each field instead.',
  'Sends the new metadata to the Store.'
]
metrics_start.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Metrics calls to start measurement of script loading.  Include\n' +
    'this as the first script in main.html (i.e. after the common scripts that\n' +
    'define the metrics namespace).'
]
mock_actions_model.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
mock_directory_model.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@return fake for unittests.',
  'FileFilter fake.',
  '@param entry File entry.\n@return True if the file should be shown.',
  '@return fake for unittests.',
  'DirectoryModel fake.',
  '@return file filter.',
  '@return Current directory.',
  '@param dirEntry The entry of the new\n' +
    'directory to be changed to.\n' +
    '@param opt_callback Executed if the directory loads\n' +
    'successfully.'
]
mock_folder_shortcut_data_model.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Mock FolderShortcutDataModel.',
  '',
  '@public',
  'Mock function for FolderShortcutDataModel.compare().\n' +
    '@param a First parameter to be compared.\n' +
    '@param b Second parameter to be compared with.\n' +
    '@return Negative if a < b, positive if a > b, or zero if a === b.'
]
mock_thumbnail_loader.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Mock thumbnail loader.',
  '@param entry An entry.\n' +
    '@param metadata Metadata.\n' +
    '@param mediaType Media type.\n' +
    '@param loadTargets Load targets.\n' +
    '@param priority Priority.',
  'Loads thumbnail as data url.\n' +
    '@return A promise which is resolved with data url.'
]
naming_controller.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'TODO(b/289003444): Fix this by using proper custom element.',
  'Controller to handle naming.',
  'Whether the entry being renamed is a root of a removable\npartition/volume.',
  'Register events.',
  'Verifies the user entered name for file or folder to be created or\n' +
    'renamed to. See also validateFileName.\n' +
    'Returns true immediately if the name is valid, else returns false\n' +
    'after the user has dismissed the error dialog.\n' +
    '@param parentEntry The URL of the parent directory entry.\n' +
    '@param name New file or folder name.\n' +
    '@return True if valid.',
  "Can't save a file into a fake directory.",
  'The file does not exist, so it should be ok to create a new file.',
  'A directory is found. Do not allow to overwrite directory.',
  'Unexpected error.',
  'An existing file is found. Show confirmation dialog to overwrite it.',
  'If the user selects "OK", save it.',
  'Start the renaming flow. The `isRemovableRoot` parameter indicates whether\n' +
    'the target is a removable volume root or not. The `volumeInfo` parameter\n' +
    'provides a volume information about the target entry. The `volumeInfo`\n' +
    'parameter can be null if method is invoked on a folder that is in the\n' +
    'tree view and is not root of an external drive.',
  "This has to be set late in the process so we don't handle spurious",
  'blur events.',
  'Restores the item which is being renamed while refreshing the file list. Do\n' +
    'nothing if no item is being renamed or such an item disappeared.\n' +
    'While refreshing file list it gets repopulated with new file entries.\n' +
    'There is not a big difference whether DOM items stay the same or not.\n' +
    'Except for the item that the user is renaming.',
  'Convenience method to access HTMLInputElement with the type that contains\n' +
    'all extra properties we set on it.',
  'Do not move selection or lead item in list during rename.',
  'Returns a promise that resolves when done renaming - both when renaming is\n' +
    'successful and when it fails.',
  'Cancel rename if it fails to restore focus from alert dialog.',
  'Otherwise, just cancel the commitment and continue to rename.',
  'Validation succeeded. Do renaming.',
  'Optimistically apply new name immediately to avoid flickering in',
  'case of success.',
  "RemovableRoot doesn't have a callback to report renaming is done.",
  'Select new entry.',
  'Force to update selection immediately.',
  'Focus may go out of the list. Back it to the list.',
  'Write back to the old name.',
  'Show error dialog.',
  'Focus may go out of the list. Back it to the list.'
]
navigation_uma.ts [
  'Copyright 2017 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Records a UMA when a new directory is navigated to.',
  'Records a UMA that captures the root type of the new current directory.\n' +
    '@param entry the new directory',
  'TOOD(b/327533814): Refactor to work with FileData.'
]
one_drive_controller.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'OneDriveController handles the foreground UI relating to ODFS placeholder.',
  'Adds or removes the OneDrive placeholder based on the SkyVault policies.',
  'TODO(b/334511998): Use proper strings.'
]
path_component.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'File path component.\n' +
    'File path can be represented as a series of path components. Each component\n' +
    'has its name used as a visible label and URL which point to the component\n' +
    'in the path.\n' +
    'PathComponent.computeComponentsFromEntry computes an array of PathComponent\n' +
    'of the given entry.',
  '@param name Name.\n' +
    '@param url Url.\n' +
    '@param fakeEntry Fake entry should be set when this component represents\n' +
    'fake entry.',
  'Resolve an entry of the component.\n' +
    '@return A promise which is resolved with an entry.',
  'Returns the key of this component (its URL).',
  'Computes path components for the path of entry.\n' +
    '@param entry An entry.\n' +
    '@return Components.',
  'Replace the root directory name at the end of a url.\n' +
    'The input, |url| is a displayRoot URL of a Drive volume like\n' +
    'filesystem:chrome-extension://....foo.com-hash/root\n' +
    'The output is like:\n' +
    'filesystem:chrome-extension://....foo.com-hash/other\n' +
    '@param url which points to a volume display root\n' +
    '@param newRoot new root directory name\n' +
    '@return new URL with the new root directory name',
  'Add volume component.',
  'Directories under Drive Fake Root can return the fake root entry list as',
  'prefix entry, but we will never show "Google Drive" as the prefix in the',
  'breadcrumb.',
  'DriveFS shared items are in either of:',
  '<drivefs>/.files-by-id/<id>/<item>',
  '<drivefs>/.shortcut-targets-by-id/<id>/<item>',
  'Get relative path to display root (e.g. /root/foo/bar -> foo/bar).',
  'currentUrl should be without trailing slash.',
  'Add directory components to the target path.'
]
path_component_unittest.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Drive volume.',
  '.files-by-id.',
  '.shortcut-targets-by-id.',
  'Computers.',
  'root.',
  'team_drives.',
  'Downloads.',
  "Special labels for '/Downloads', '/PvmDefault', '/Camera'."
]
providers_model.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'An item in the model. Represents a single providing extension.',
  'Model for providing extensions. Providers methods for fetching lists of\n' +
    'providing extensions as well as performing operations on them, such as\n' +
    'requesting a new mount point.',
  'File systems handling files are mounted via file handlers. Device',
  'handlers are mounted when a device is inserted. Only network file',
  'systems are mounted manually by user via a menu.'
]
providers_model_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "Providing extension which has a mounted file system and doesn't support\n" +
    'multiple mounts.',
  "Providing extension which has a not-mounted file system and doesn't support\n" +
    'multiple mounts.',
  'Providing extension which has a mounted file system and supports multiple\n' +
    'mounts.',
  'Providing extension which has a not-mounted file system of FILE source.\n' +
    'Such providers are mounted via file handlers.',
  'Providing extension which has a not-mounted file system of DEVICE source.\n' +
    'Such providers are not mounted by users: they automatically mount when the\n' +
    'DEVICE is attached.',
  'Install mock volume manager.',
  'Add provided test volumes.'
]
quick_view_controller.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Controller for QuickView.',
  'Delete confirm dialog.',
  'Current selection of selectionHandler.',
  'The tasks for the current entry shown in quick view.',
  'The current selection index of this.entries_.',
  'Stores whether we are in check-select mode or not.',
  'Selection menu command can be triggered with focus outside of file list',
  'or button e.g.: from the directory tree.',
  'Initialize the controller with quick view which will be lazily loaded.',
  'Prevent selected file from being copied when quick view is open and',
  'instead allow any selected "General info" text to be copied.',
  "Stop 'copy' event propagation to FileTransferController and allow",
  'default copy event behaviour.',
  'Create quick view element.',
  'Handles open-in-new button tap.',
  'Handles delete button tap.',
  "Handles key event on listContainer if it's relevant to quick view.",
  'Handles key event on quick view.',
  'Prevent the open dialog from closing.',
  'Changes the currently selected entry when in single-select mode.  Sets\n' +
    'the models |selectedIndex| to indirectly trigger onFileSelectionChanged_\n' +
    'and populate |this.entries_|.',
  'Changes the currently selected entry when in multi-select mode (file\n' +
    'list calls this "check-select" mode).',
  'Delete the currently selected entry in quick view.',
  'Create a delete confirm dialog if needed.',
  'Delete the entry if the entry can be deleted.',
  'Returns true if the entry can be deleted.',
  'Display quick view.',
  'On opening Quick View, always reset the current selection index.',
  'Update quick view on file selection change.',
  'Update quick view using current entries.',
  'Update quick view for |entry| from its loaded metadata and tasks.\n' +
    'Note: fast-typing users can change the active selection while the |entry|\n' +
    'metadata and tasks were being async fetched. Bail out in that case.',
  'Treat certain types on Drive as if they were local (try auto-play etc).',
  'Drive files: Try to fetch their thumbnail or fallback to read the whole',
  'file.',
  'RAW files: fetch their ImageLoader thumbnail.',
  'Loads a thumbnail from Drive.',
  'Loads a RAW image thumbnail from ImageLoader. Resolve the file entry first\n' +
    'to get its |lastModified| time. ImageLoaderClient uses that to work out if\n' +
    'its cached data for |entry| is up-to-date or otherwise call ImageLoader to\n' +
    'refresh the cached |entry| data with the most recent data.',
  'List of local volume types.\n' +
    'In this context, "local" means that files in that volume are directly\n' +
    'accessible from the Chrome browser process by Linux VFS paths. In this\n' +
    'regard, media views are NOT local even though files in media views are\n' +
    'actually stored in the local disk.\n' +
    'Due to access control of WebView, non-local files can not be previewed\n' +
    'with Quick View unless thumbnails are provided (which is the case with\n' +
    'Drive).',
  'List of unsupported image subtypes excluded from being displayed in\n' +
    'QuickView. An "unsupported type" message is shown instead.'
]
quick_view_model.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "Quick view model that doesn't fit into properties of quick view element.",
  'Returns the selected file entry.',
  'Sets the selected file entry. Emits a synchronous selected-entry-changed\n' +
    'event to immediately call MetadataBoxController.updateView_().'
]
quick_view_uma.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'UMA exporter for Quick View.',
  'Exports file type metric with the given histogram `name`.',
  'Exports UMA based on the entry shown in Quick View.',
  'Exports UMA based on the entry selected when Quick View is opened.',
  'Record stats of dialog types. It must be in sync with',
  'FileDialogType enum in tools/metrics/histograms/enums.xml.',
  'In which way quick view was opened.',
  'The order should be consistent with the definition in histograms.xml.'
]
scan_controller.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Handler for scan related events of DirectoryModel.',
  'Whether a scan is in progress.',
  'Timer ID to delay UI refresh after a scan is updated.',
  'Update the store with the new entries before hiding the spinner.',
  'TODO(crbug.com/1290197): Currently we only care about the load time for',
  'local files, filter out all the other root types.',
  'Sends the scanned directory content to the Store.',
  '',
  'Call this immediately (instead of debouncing it with `scanUpdatedTimer_`)',
  "so the current directory entries don't get accidentally removed from the",
  'store by `clearCachedEntries()`, when the scan is store-based the entries',
  'are already in the store.',
  'Show contents incrementally by finishing batch updated, but only after',
  '200ms elapsed, to avoid flickering when it is not necessary.',
  'Update the UI.',
  '',
  "Handle the 'cur-dir-rescan-completed' from the DirectoryModel.",
  'When a spinner is shown, updates the UI to remove items in the previous\n' +
    'directory.',
  "Hides the spinner if it's shown or scheduled to be shown."
]
selection_menu_controller.ts [
  'Copyright 2017 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'crbug.com 752035 focus still on button, get rid of the tooltip',
  "If menu is animating to close, then do not remove 'toolbar-menu' yet, it",
  'will be removed at the end of FilesMenuItem.setMenuAsAnimating_ to avoid',
  'flicker.  See crbug.com/862926.'
]
sort_menu_controller.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Update checkmarks for each sort options.',
  "Set attribute 'checked' for the menu item."
]
spinner_controller.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Controller for spinners. Spinner requests can be stacked. Eg. if show()\n' +
    'is called 3 times, the hide callback has to be called 3 times to make the\n' +
    'spinner invisible.',
  'Blinks the spinner for a short period of time. Hides automatically.',
  'Shows the spinner immediately until the returned callback is called.\n' +
    '@return Hide callback.',
  'Shows the spinner until hide is called. The returned callback must be\n' +
    'called when the spinner is not necessary anymore.\n' +
    '@param delay Delay in milliseconds.\n' +
    '@param callback Show callback.\n' +
    '@return Hide callback.',
  'Sets blink duration to the given `duration` value that must\n' +
    'be specified in milliseconds.'
]
spinner_controller_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Set the duration to 100ms, which is short enough, but also long enough',
  'to happen later than 0ms timers used in test cases.',
  'Call asynchronously, so the mutation observer catches the change.'
]
task_controller.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Type of the object stashed in the Map extractTasks_.',
  'More actions command that uses #open-with as selector due to the\n' +
    'open-with command used previously for the same task.',
  'Cached promise used to avoid initializing the same FileTasks\n' +
    'multiple times.',
  'Map used to track extract IOTasks in progress.',
  'TODO: Move the following events to the Store.',
  'If the selection changed.',
  'Kickoff the async/ActionsProducer to fetch the tasks for the new',
  'selection. If the new selection is empty, still need to update the',
  'store so no old file task lingers.',
  'Hides the button while fetching the tasks.',
  'If the file tasks changed.',
  'Exposes the TaskHistory instance for the ActionsProducer.\n' +
    'NOTE: This is a temporary workaround until the TaskHistory is migrated to\n' +
    'the store.',
  'Task combobox handler.\n' +
    '@param event Event containing task which was clicked.',
  'If the clicked target has an associated command, the click event should',
  'not be handled here since it is handled as a command.',
  'TODO(lucmult): Add TS definition for these events instead of using any.',
  'Change default was clicked. We should open "change default"',
  'dialog.',
  'Sets the given task as default, when this task is applicable.\n' +
    '@param selection File selection.\n' +
    '@param task Task to set as default.',
  'Update task menu button unless the task button was updated by other',
  'selection.',
  'Displays the list of tasks in a open task picker combobutton.',
  'Populate the #tasks-menu with the open-with tasks. The menu is managed by\n' +
    'the top task menu Open combobutton, but it is also used as the\n' +
    'right-click open-with context menu.',
  'Even if the task menu button is hidden, we still update the items if',
  'tasks exist since they are used for the right-click context menu.',
  'If there exist defaultTask show it on the combobutton.',
  'If there exist 2 or more available tasks, show them in context menu',
  '(including defaultTask). If only one generic task is available, we',
  'also show it in the context menu.',
  'If there exist non generic task (i.e. defaultTask is set) and this',
  'default is not set by policy, we show an item to change default task.',
  'TODO(greengrape): Ensure that the passed object is a',
  '`DropdownItem`.',
  'Creates sorted array of available task descriptions such as title and\n' +
    'icon.\n' +
    '@param fileTasks File Tasks to create items.\n' +
    '@return Created array can be used to feed combobox, menus and so on.',
  'Create items.',
  'isPolicyDefault=',
  'Sort items (Sort order: isDefault, lastExecutedTime, label).',
  'Sort by isDefaultTask.',
  'Sort by last-executed time.',
  'Sort by label.',
  'Executes default task from the dropdown menu.',
  'Get MIME type for an entry. This method first tries to obtain the MIME\n' +
    'type from metadata. If it fails, this falls back to obtain the MIME type\n' +
    'from its content or name.\n' +
    '@param entry An entry to obtain its mime type.',
  'Explicitly removes the cached tasks first and and re-calculates the\n' +
    'current tasks.',
  'Dispatch an empty fetch to invalidate any ongoing fetch.',
  'For the Store version the other conditions are checked in the store.',
  'Updates available tasks opened from context menu or the open button.',
  'Update the DOM.',
  'Request to fetch the tasks just to double check.',
  'Returns whether default task command can be executed or not.',
  'Returns whether default task command should be hidden or not.',
  'Returns whether open with command can be executed or not.',
  'Updates tasks menu item to match passed task items.\n' +
    '@param openTasks List of OPEN tasks.',
  'Menu icon can be controlled by either `iconEndImage` or\n' +
    '`iconEndFileType`, since the default task menu item DOM is shared,\n' +
    'before updating it, we should remove the previous one, e.g. reset\n' +
    'both `iconEndImage` and `iconEndFileType`.',
  'If default is set by policy, we hide the original app icon and show',
  'only the managed one.',
  'iconType is defined for some tasks in FileTasks.annotate_().',
  'Return the tasks for the `entry`.\n@param entry',
  'Removes information about an extract archive task.',
  'TaskController only manages IOTasks related to zip extract that were',
  'started in this window.',
  'Starts the Zip extract Here IO Task.\n' +
    '@param {!Array<!Entry|FilesAppEntry>} entries\n' +
    '@param {!DirectoryEntry|!FilesAppDirEntry} destination\n' +
    '@return {!Promise<void>} resolved with taskId.',
  'Starts extraction for a single entry and stores the task details.\n' +
    '@return resolved with taskId.',
  'Triggers a password dialog and starts an extract task with the\n' +
    'password (unless cancel is clicked on the dialog).',
  'Ask for password.',
  'If an extract operation has finished due to missing password,\n' +
    'see if we have the operation stored and if so, pop up a password\n' +
    'dialog and try to restart another IO operation for it.',
  'If we have multiple entries (from a multi-select extract) then',
  'we need to start a new task for each of them individually so',
  'that the password dialog is presented once for every file',
  "that's encrypted.",
  "Remove the failed operation reference since it's finished.",
  'Type of the task in the dropdown menu.',
  'Item in the dropdown menu.',
  'Creates dropdown item based on task.\n' +
    '@param isDefault Mark the item as default item.'
]
task_controller_unittest.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Mock chrome APIs.',
  'VolumeInfo for Downloads volume',
  'Set up test components.',
  'Mock chrome APIs.',
  'Install <command> elements on the page.',
  'Initialize Command with the <command>s.',
  'Setup test case fileManagerPrivate.',
  'Tests that executeEntryTask() runs the expected task.',
  'Tests that getFileTasks() does not call .fileManagerPrivate.getFileTasks()\n' +
    'multiple times when the selected entries are not changed.',
  'NOTE: It updates to the same file.',
  "The update above generates a new selection, even though it's updating to",
  'the same file, this causes a new private API call.',
  'The Store ActionsProducer debounces multiple concurrent calls for the same',
  "file so in practice this shouldn't be a problem.",
  'Await 0ms to give time to promise1 to initialize.',
  'Check concurrent calls right after changing the selection.',
  'Await 0ms to give time to promise3 to initialize.',
  'Tests the file tasks in the store are updated each time the selected entries\n' +
    'are changed, including when there are no selected entries.',
  'Check no file tasks initially in the store.',
  'Select entry.',
  'Check file tasks in store.',
  'Select blank.',
  'Check no file tasks in the store.',
  'Tests that getFileTasks() should always return the promise whose FileTasks\n' +
    'correspond to FileSelectionHandler.selection at the time getFileTasks() is\n' +
    'called.',
  'Tests that changing the file selection during a getFileTasks() call causes\n' +
    'the getFileTasks() promise to reject.',
  'Setup the selection handler computeAdditionalCallback to change the file',
  'selection during the getFileTasks() call.',
  'Update the selection.',
  'Set the initial selection.',
  'Clears the selection handler computeAdditionalCallback so that the',
  "promise won't be rejected during the getFileTasks() call.",
  'Calling getFileTasks() in the same selection should not call the',
  'private API.',
  'No more calls to the private API.'
]
task_history.ts [
  'Copyright 2017 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Key used to store the task history in local storage.',
  'TaskHistory object keeps track of the history of task executions. Recent\n' +
    'history is stored in local storage.',
  'The recent history of task executions. Key is task ID and value is time\n' +
    'stamp of the latest execution of the task.',
  'Records the timing of task execution.',
  'Gets the time stamp of last execution of given task. If the record is not\n' +
    'found, returns 0.',
  'Loads the current history from local storage.',
  'Saves the current history to local storage.',
  'Handles local storage change event to update the current history.',
  'Truncates current history so that the size of history does not exceed\n' +
    'STORAGE_KEY_LAST_EXECUTED_TIME.'
]
thumbnail_loader.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Loads a thumbnail as an <img> using provided url.',
  'The image transform from metadata.',
  '@param entry_ File entry.\n' +
    '@param metadata_ Metadata object.\n' +
    '@param mediaType Media type.\n' +
    '@param loadTargets The list of load targets in preferential order. The\n' +
    'default value is [CONTENT_METADATA, EXTERNAL_METADATA, FILE_ENTRY].\n' +
    '@param priority Priority, the highest is 0. default: 2.',
  'Use fallback as the primary thumbnail.',
  'Returns the target of loading.',
  'Loads and attaches an image.\n' +
    '@param box Container element.\n' +
    '@param fillMode Fill mode.\n' +
    '@param onSuccess Success callback, accepts the image.\n' +
    '@param autoFillThreshold Auto fill threshold.\n' +
    "@param boxWidth Container box's width.\n" +
    "@param boxHeight Container box's height.",
  'Relevant CSS rules are in file_types.css.',
  'TODO(mtomasz): Smarter calculation of the requested size.',
  'Loads thumbnail as dataUrl. If the thumbnail dataUrl can be fetched from\n' +
    'metadata, this fetches it from it. Otherwise, this tries to load it from\n' +
    'thumbnail loader.\n' +
    'Compared with ThumbnailLoader.load, this method does not provide a\n' +
    'functionality to fit image to a box.\n' +
    '@param fillMode Only FIT and OVER_FILL are supported. This takes effect\n' +
    'only when an external thumbnail source is used.\n' +
    '@return A promise which is resolved when data url is fetched.\n' +
    'TODO(yawano): Support cancel operation.',
  'Use the croppedThumbnailUrl_ if available.',
  'Load using ImageLoaderClient.',
  'Set crop option to image loader. Since image of croppedThumbnailUrl_',
  "is 360x360 with current implementation, it's no problem to crop it.",
  'Cancels loading the current image.',
  '@return True if a valid image is loaded.',
  '@return Image width.',
  '@return Image height.',
  'Attach the image to a given element.\n' +
    '@param box Container element.\n' +
    '@param fillMode Fill mode.\n' +
    '@param autoFillThreshold Threshold value which is used for fill mode auto.\n' +
    "@param boxWidth Container box's width.\n" +
    "@param boxHeight Container box's height.",
  'Updates the image style to fit/fill the container.\n' +
    'Using webkit center packing does not align the image properly, so we need\n' +
    'to wait until the image loads and its dimensions are known, then manually\n' +
    'position it at the center.\n' +
    '@param box Containing element.\n' +
    '@param img Element containing an image.\n' +
    '@param fillMode Fill mode.\n' +
    '@param autoFillThreshold Threshold value which is used for fill mode auto.\n' +
    "@param boxWidth Container box's width.\n" +
    "@param boxHeight Container box's height.",
  'Cropped area in percents.',
  'When we know the box size we can position the image correctly even',
  'in a non-square box.',
  'We do not know the box size so we assume it is square.',
  'Compute the image position based only on the image dimensions.',
  'First try vertical fit or horizontal fill.',
  'In percents (0.0 - 1.0), how much area can be cropped to fill an image\n' +
    'in a container, when loading a thumbnail in FillMode.AUTO mode.\n' +
    'The default 30% value allows to fill 16:9, 3:2 pictures in 4:3 element.',
  'Type of displaying a thumbnail within a box.',
  'Load target of ThumbnailLoader.',
  'e.g. Drive thumbnail, FSP thumbnail.',
  'e.g. EXIF thumbnail.',
  'Image file itself.',
  "Maximum thumbnail's width when generating from the full resolution image.",
  "Maximum thumbnail's height when generating from the full resolution image."
]
thumbnail_loader_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Generates a data url of a sample image for testing.\n' +
    '@param width Width.\n' +
    '@param height Height.\n' +
    '@return Data url of a sample image.',
  'Installs a mock ImageLoader with a compatible load method.',
  'Embed thumbnail is provided.',
  'Drive thumbnail is provided and the file is not cached locally.',
  'Drive thumbnail is provided but the file is cached locally.',
  'Drive thumbnail is provided and it is not an image file.',
  'Assert that data url is passed.',
  'Assert that data url and transform info is passed.'
]
toolbar_controller.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Helper function that extract common pattern for getting commands associated',
  'with the toolbar and also deals with lack of return type information in',
  'assertInstaneof function.',
  'This class controls wires toolbar UI and selection model. When selection\n' +
    'status is changed, this class changes the view of toolbar. If cancel\n' +
    'selection button is pressed, this class clears the selection.',
  'HTML Elements',
  'Commands',
  'Other',
  'HTML elements.',
  'Commands.',
  'Using CHANGE_THROTTLED because updateSharesheetCommand_() uses async',
  'API and can update the state out-of-order specially when updating to',
  'an empty selection.',
  "Updates toolbar's UI elements which are related to current directory.",
  'Normally, isReadOnly can be used to show the label. This property',
  'is always true for fake volumes (eg. Google Drive root). However, "Linux',
  'files" and GuestOS volumes are fake volume on first access until the VM',
  'is loaded and the mount point is initialised. The volume is technically',
  'read-only since the temporary fake volume can (and should) not be',
  'written to. However, showing the read only label is not appropriate since',
  'the volume will become read-write once all loading has completed.',
  "Handles selection's change event to update the UI.",
  'Update the label "x files selected." on the header.',
  'Update visibility of the delete and move to trash buttons.',
  "Show 'Move to Trash' rather than 'Delete' if possible. The",
  '`moveToTrashCommand` needs to be set to hidden to ensure the',
  '`canExecuteChange` invokes the `hiddenChange` event in the case where',
  'Trash should be shown.',
  'Update visibility of the restore-from-trash button.',
  'Set .selecting class to containing element to change the view',
  'accordingly.',
  'TODO(fukino): This code changes the state of body, not the toolbar, to',
  'update the checkmark visibility on grid view. This should be moved to a',
  'controller which controls whole app window. Or, both toolbar and FileGrid',
  'should listen to the FileSelectionHandler.',
  'Handles click event for cancel button to change the selection state.',
  'Handles click event for delete button to execute the delete command.',
  'Handles click event for move to trash button to execute the move to trash\n' +
    'command.',
  'Handles click event for restore from trash button to execute the restore\n' +
    'command.',
  'Handles click event for sharesheet button to set button background color.',
  "Optimistally update the command's properties so we get notified if they",
  'change back.',
  'Checks if the cloud icon should be showing or not based on the enablement\n' +
    'of the user preferences, the feature flag and the existing stage.',
  'Updates the visibility of the cloud button and the "Available offline"\n' +
    'toggle based on whether the bulk pinning is enabled or not.',
  'If bulk-pinning is enabled, the user should not be able to toggle items',
  'offline.',
  'Encapsulates the logic to update the bulk pinning cloud icon and the sub\n' +
    'icons that indicate the current stage it is in.'
]
a11y_announce.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@param text Text to be announced by screen reader, which should be already\n' +
    'translated.'
]
action_model_ui.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
actions_submenu.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@param element The target element.',
  'Then add the Manage in Drive item (if available).',
  'Removing shortcuts is not rendered in the submenu to keep the previous',
  'behavior. Shortcuts can be removed in the left nav using the roots menu.',
  'TODO(mtomasz): Consider rendering the menu item here for consistency.',
  'Both save-for-offline and offline-not-necessary are handled by the single',
  '#toggle-pinned command.',
  'Process all the rest as custom actions.',
  "If the action has no title it isn't visible to users, so we skip here.",
  'All actions that are not custom actions are hide-on-toolbar, so',
  'set hide-on-toolbar for the separator if there are no custom actions.'
]
actions_submenu_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
dlp_restricted_banner.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The custom element tag name.',
  'A banner that shows that some of the files or folders in the current\n' +
    'directory are restricted by Data Leak Prevention (DLP).',
  'Returns the HTML template for this banner.',
  'This banner relies on a custom trigger registered in the BannerController.\n' +
    'It is shown in SELECT_OPEN_FILE and SELECT_OPEN_MULTI_FILE dialog types\n' +
    'when some files are restricted by DLP, and in SELECT_SAVEAS_FILE dialog\n' +
    'when some destinations are restricted. Regardless of the dialog type, the\n' +
    'user can navigate to different roots so the banner can be shown in any of\n' +
    'them.',
  'Persist the banner at all times if the folder is shared.',
  'When the custom filter shows this banner in the controller, it passes the\n' +
    'context to the banner. The type, which is either File Picker or File Saver,\n' +
    'determines the text used in the banner.'
]
dlp_restricted_banner_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Test that the banner is shown in all root types.'
]
drive_bulk_pinning_banner.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The custom element tag name.',
  'A banner that prompts users to bulk pin their files.',
  'Returns the HTML template for the Bulk pinning banner.',
  'Only show the banner when the user has navigated to the Drive volume type\n' +
    'and the feature flag is enabled.',
  'Show this banner for an unlimited number of sessions.'
]
drive_bulk_pinning_banner_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Gets the <drive-bulk-pinning-banner> element.',
  'Gets the <xf-bulk-pinning-dialog> element.',
  'Test that the "Get started" button can be clicked, and that clicking it opens',
  'the bulk-pinning activation dialog.'
]
drive_low_individual_space_banner.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The custom element tag name.',
  'A banner that shows a warning when the remaining space on a Google Drive goes\n' +
    'below 20%. This is only shown if the user has navigated to the My drive under\n' +
    'the Google Drive root excluding other directories such as Computers or\n' +
    'Shared drives.',
  'Returns the HTML template for this banner.',
  'Show the banner when the Drive volume has gone below 20% remaining space.',
  'Only show the banner when the user has navigated to the My drive directory\n' +
    'and all children. Having root and type means this warning does not show on\n' +
    'Shared drives, Team drives, Computers or Offline.',
  'When the custom filter shows this banner in the controller, it passes the\n' +
    'context to the banner.'
]
drive_low_shared_drive_space_banner.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The custom element tag name.',
  'A banner that shows a warning when the remaining space on a Google Shared\n' +
    'Drive goes below 20%.',
  'Returns the HTML template for this banner.',
  'Show the banner when the Drive volume has gone below 20% remaining space.',
  'Only show the banner when the user has navigated to a Shared Drive.',
  'When the custom filter shows this banner in the controller, it passes the\n' +
    'context to the banner.'
]
drive_offline_pinning_banner.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The custom element tag name.',
  'A banner that shows users they can pin Docs / Sheets / Slides in Google Drive\n' +
    'and have them available offline.',
  'Returns the HTML template for the Drive Offline Pinning educational banner.',
  'The Drive offline pinning banner uses a templatised string to ensure the\n' +
    "toggle name is a reference. This can't be achieved with C++ template\n" +
    'replacements, so set it once the web component has been connected to the\n' +
    'DOM.',
  'Only show the banner when the user has navigated to the Drive volume type\n' +
    'and the feature flag is enabled.'
]
drive_out_of_individual_space_banner.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The custom element tag name.',
  "An error banner displayed when the user runs out of their Google Drive's\n" +
    'individual quota. This is only shown if the user has navigated to the My\n' +
    'drive under the Google Drive root excluding other directories such as\n' +
    'Computers or Shared drives.',
  'Returns the HTML template for this banner.',
  'Only show the banner when the user has navigated to the My drive directory\n' +
    'and all children. Having root and type means this error does not show on\n' +
    'Shared drives, Team drives, Computers or Offline.'
]
drive_out_of_organization_space_banner.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The custom element tag name.',
  "An error banner displayed when the user's Google Drive organization runs\n" +
    'out of quota. This is only shown if the user has navigated to the My drive\n' +
    'under the Google Drive root excluding other directories such as Computers or\n' +
    'Shared drives.',
  'Returns the HTML template for this banner.',
  'Only show the banner when the user has navigated to the My drive directory\n' +
    'and all children. Having root and type means this error does not show on\n' +
    'Shared drives, Team drives, Computers or Offline.',
  'When the custom filter shows this banner in the controller, it passes the\n' +
    'context to the banner.'
]
drive_out_of_shared_drive_space_banner.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The custom element tag name.',
  "An error banner displayed when the user runs out of their Google Drive's\n" +
    'individual quota. This is only shown if the user has navigated to the My\n' +
    'drive under the Google Drive root excluding other directories such as\n' +
    'Computers or Shared drives.',
  'Returns the HTML template for this banner.',
  'Only show the banner when the user has navigated to the My drive directory\n' +
    'and all children. Having root and type means this error does not show on\n' +
    'Shared drives, Team drives, Computers or Offline.'
]
drive_welcome_banner.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The custom element tag name.',
  'A banner that shows when a user navigates to the Google Drive volume. This\n' +
    'banner appears for all children of the Google Drive root (e.g. My Drive,\n' +
    'Shared with me, Offline etc.)',
  'Returns the HTML template for the Drive Welcome educational banner.',
  'Only show the banner when the user has navigated to the Drive volume type.'
]
educational_banner.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'EducationalBanner is a type of banner that is the second highest priority\n' +
    'type of banner (below WarningBanner). It is used to highlight new features or\n' +
    'contextually relevant information in specific part of the Files app.\n' +
    'To implement an EducationalBanner, extend from this banner and override the\n' +
    'allowedVolumes method to define the VolumeType you want the banner to be\n' +
    'shown on. All other configuration elements are optional and can be found\n' +
    'documented on the Banner externs.\n' +
    'For example the following banner will show when a user navigates to the\n' +
    'Downloads volume type:\n' +
    'class ConcreteEducationalBanner extends EducationalBanner {\n' +
    'allowedVolumes() {\n' +
    'return [{type: VolumeType.DOWNLOADS}];\n' +
    '}\n' +
    '}\n' +
    'Create a HTML template with the same file name as the banner and override\n' +
    'the text using slots with the content that you want:\n' +
    '<educational-banner>\n' +
    '<span slot="title">Main banner text</span>\n' +
    '<span slot="subtitle">Extra information that appears smaller</span>\n' +
    '<cr-button slot="extra-button" href="{{url_to_navigate}}">\n' +
    'Extra button text\n' +
    '</cr-button>\n' +
    '</educational-banner>\n' +
    'There is also an optional HTML attribute that can be added to the\n' +
    'extra-button slot called dismiss-banner-when-clicked that will dismiss the\n' +
    'banner forever when the extra button is pressed. Example:\n' +
    '<cr-button\n' +
    'slot="extra-button"\n' +
    'href="{{url_to_navigate}}"\n' +
    'dismiss-banner-when-clicked>\n' +
    'Extra button text\n' +
    '</cr-button>',
  'Returns the HTML template for the Educational Banner.',
  'Get the concrete banner instance.',
  'In the case the educational-banner web component is not the root node',
  '(e.g. it is contained within another web component) prefer the outer',
  'component.',
  'Called when the web component is connected to the DOM. This will be called\n' +
    'for both the inner warning-banner component and the concrete\n' +
    'implementations that extend from it.',
  'If an EducationalBanner subclass overrides the default dismiss button',
  'the button will not exist in the shadowRoot. Add the event listener to',
  'the overridden dismiss button first and fall back to the default button',
  'if no overridden button.',
  'Attach an onclick handler to the extra-button slot. This enables a new',
  'element to leverage the href tag on the element to have a URL opened.',
  'TODO(crbug.com/40189485): Add UMA trigger to capture number of extra',
  'button clicks.',
  'Only show the banner 3 Files app sessions (unless dismissed). Please refer\n' +
    'to the Banner externs for information about Files app session.',
  'All banners that inherit this class should override with their own\n' +
    'volume types to allow. Setting this explicitly as an empty array ensures\n' +
    "banners that don't override this are not shown by default.",
  'Handler for the dismiss button on click, switches to the custom banner\n' +
    'dismissal event to ensure the controller can catch the event.'
]
educational_banner_unittest.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Test that the dismiss handler bubbles the correct event on click.',
  'Test that the default dismiss button from the educational banner successfully\n' +
    'emits the BANNER_DISMISSED_FOREVER event if no dismiss button has been\n' +
    'supplied.',
  'Test that the additional button can be set and the link is visited when the\n' +
    'button is clicked.',
  'Test that the default configuration is set on the warning banners to ensure\n' +
    'any overridden banners have sensible configuration.',
  'Ensure the number of app sessions an educational banner is shown is 3.',
  'Ensure the default allowed volume type is empty. This ensures any',
  "banners that don't override this property do not show by default.",
  'Test that if extra button slot has attribute dismiss-banner-when-clicked the\n' +
    'banner emits a DISMISS_FOREVER event.',
  'Test that when the custom attribute to dismiss a banner emits a\n' +
    'DISMISS_FOREVER event, the banner instance attached is the correct instance.'
]
files_migrating_to_cloud_banner.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The custom element tag name.',
  'A banner that shows a warning when SkyVault policies are set and the user\n' +
    "still has some files stored locally that are being moved to the cloud. It's\n" +
    'only shown in local directories (My Files/).',
  'Returns the HTML template for this banner.',
  'Persist the banner at all times.',
  'The context contains the CloudProvider set as SkyVault migration\n' +
    'destination.',
  'Only show the banner when the user has navigated to a local volume.'
]
google_one_offer_banner.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview The Google One banner highlights the benefit for Chromebook\n' +
    'users when navigating to Drive.',
  'The custom element tag name.',
  'User actions of GoogleOneOfferBanner.',
  'GoogleOneOfferBanner shows when the user navigates to the Google Drive\n' +
    'volume. This banner will be shown instead of DriveWelcomeBanner if\n' +
    'GoogleOneOfferFilesBanner flag is on.',
  'Returns the HTML template for the Google One offer educational banner.',
  'Only show the banner when the user has navigated to the Drive volume type.',
  'Called when the banner gets connected to the DOM.',
  'Called when the banner gets shown in the UI.',
  'Called when the get perk button gets clicked.',
  'Called when DismissedForeverEvent gets dispatched for this banner. Note\n' +
    'that the event can gets dispatched for dismiss caused by a click of get\n' +
    'perk button.',
  'UserActions.DISMISS should not be recorded for dismiss caused by a click',
  'of the get perk button.'
]
holding_space_welcome_banner.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The custom element tag name.',
  'A banner that shows when a user navigates to a volume that allows pinning\n' +
    'of files to the shelf. Highlights to the user how to use the Holding space\n' +
    'feature.',
  'Returns the HTML template for the Holding Space Welcome educational banner.',
  'Returns the list of allow volume types remapping over the canonical source\n' +
    'at HoldingSpaceUtil.',
  'Store the time the banner was first shown.'
]
invalid_usb_filesystem_banner.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The custom element tag name.',
  'A banner that shows is a removable device is plugged in and it has a\n' +
    'filesystem that is either unknown or unsupported. It includes an action\n' +
    'button for the user to format the device.',
  'Returns the HTML template for this banner.',
  'Only show the banner when the user has navigated to the Removable root type\n' +
    'this is used in conjunction with a custom filter to ensure only removable\n' +
    'roots with errors are shown the banner.',
  'When the custom filter shows this banner in the controller, it passes the\n' +
    'context to the banner. This is used to identify if the device has an\n' +
    'unsupported OR unknown file system.'
]
local_disk_low_space_banner.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The custom element tag name.',
  'A banner that shows a warning when the remaining space on a local disk goes\n' +
    'below 1GB. This is only shown if the user has navigated to the My files /\n' +
    'Downloads directories (and any children).',
  'Returns the HTML template for this banner.',
  'Show the banner when the Downloads volume (local disk) is less than or\n' +
    'equal to 1 GB of remaining space.',
  'Only show the banner when the user has navigated to the Downloads volume\n' +
    'type (this includes the My files directory).'
]
photos_welcome_banner.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The custom element tag name.',
  'A banner that shows when a user navigates to the Google Photos documents\n' +
    'provider. Shows helpful information about using Photos on ChromeOS.',
  'Returns the HTML template for the Google Photos Welcome banner.',
  'Only show the banner when the user has navigated to the Documents Provider\n' +
    'volume, specifically the Photos document provider.'
]
shared_with_crostini_pluginvm_banner.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The custom element tag name.',
  'A banner that shows if the current navigated directory has been shared with\n' +
    'Crostini or PluginVM.',
  'Returns the HTML template for this banner.',
  'This banner relies on a custom trigger registered in the BannerController\n' +
    'and thus the following list are root types where sharing to Crostini or\n' +
    'PluginVM is allowed and thus a banner may appear.',
  'Persist the banner at all times if the folder is shared.',
  'When the custom filter shows this banner in the controller, it passes the\n' +
    'context to the banner. This type is used to identify if this folder is\n' +
    'shared with Crostini, PluginVM or both and update the text and links\n' +
    'accordingly.'
]
state_banner.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'State banner is a type of banner that indicates the Files app has reached a\n' +
    'certain state, e.g. the current folder is shared with Linux.\n' +
    'To implement an StateBanner, extend from this banner and override the\n' +
    'allowedVolumes method to define the VolumeType you want the banner to be\n' +
    'shown on. All other configuration elements are optional and can be found\n' +
    'documented on the Banner externs.\n' +
    'For example the following banner will show when a user navigates to the\n' +
    'Downloads volume type:\n' +
    'class ConcreteStateBanner extends StateBanner {\n' +
    'allowedVolumes() {\n' +
    'return [{type: VolumeType.DOWNLOADS}];\n' +
    '}\n' +
    '}\n' +
    'Create a HTML template with the same file name as the banner and override\n' +
    'the text using slots with the content that you want:\n' +
    '<state-banner>\n' +
    '<span slot="text">Main banner text</span>\n' +
    '<cr-button slot="extra-button" href="{{url_to_navigate}}">\n' +
    'Extra button text\n' +
    '</cr-button>\n' +
    '</state-banner>',
  'Returns the HTML template for the State Banner.',
  'Called when the web component is connected to the DOM. This will be called\n' +
    'for both the inner state-banner component and the concrete\n' +
    'implementations that extend from it.',
  'Attach an onclick handler to the extra-button slot. This enables a new',
  'element to leverage the href tag on the element to have a URL opened.',
  'TODO(crbug.com/40189485): Add UMA trigger to capture number of extra',
  'button clicks.',
  "Unit tests don't enclose a StateBanner inside a concrete banner,",
  'so we want to ensure the event is appropriately dispatched from the',
  "outer scope otherwise it won't bubble up to the commands.",
  'All banners that inherit this class should override with their own\n' +
    'volume types to allow. Setting this explicitly as an empty array ensures\n' +
    "banners that don't override this are not shown by default."
]
state_banner_unittest.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Mocks out the chrome.fileManagerPrivate.openSettingsSubpage function to\n' +
    'enable interrogation of the subpage that was invoked.\n' +
    '@returns {{ restore: function(), getSubpage: (function(): string)}}',
  'Test that the additional button can be set and the link is visited when the\n' +
    'button is clicked.',
  'Test that the default configuration is set on the state banners to ensure\n' +
    'any overridden banners have sensible configuration.',
  'Ensure the default allowed volume type is empty. This ensures any',
  "banners that don't override this property do not show by default.",
  'Test that extra buttons with a ChromeOS settings href utilise the\n' +
    'chrome.fileManagerPrivate.openSettingsSubpage appropriately. The prefix\n' +
    'chrome://os-settings/ should be stripped and the subpage passed through.',
  'Test that a href with no subpage, still calls visitURL as there is no\n' +
    'internal method to make the chrome://os-settings/ page appear except for\n' +
    'link capturing.',
  'Test that an extra-button with a command triggers an Event of the correct\n' +
    'type.',
  'Add a listener to wait for the #format command to be received and keep',
  'track of the event it received. Given the actual command is not properly',
  'setup in the unittest environment, the event bubbles up to the body and',
  'we can listen for it there.',
  'Click the extra button with a command associated with it.',
  'Wait until the command has been received.',
  'Assert the event type received is a command.'
]
trash_banner.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The custom element tag name.',
  'A banner that shows users navigating to their Trash directory that files in\n' +
    'the Trash directory are automatically removed after 30 days.',
  'Returns the HTML template for this banner.',
  'Only show the banner when the user has navigated to the Trash rootType.',
  'The Trash banner should always be visible in the Trash root.'
]
types.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Events dispatched by concrete banners.',
  'Event source for BANNER_DISMISSED_FOREVER event.',
  'Helper const to define infinite time showing.',
  'An allowed volume defines a `VolumeType` that a banner should be shown on.',
  'An allowed root defines a `RootType` that a banner should be shown on.',
  'A union of the two above types to ensure either `root` or `type` is defined.',
  'The minimum free disk space ratio for the `RootType` before a banner should\n' +
    'be shown.',
  'A minimum free disk space size for a RootType before a banner should be\n' +
    'shown.',
  'A union of the above type to ensure either `minRatio` or `minSize` is shown.',
  'Returns the volume types or roots where the banner is enabled.',
  'The number of Files app sessions a banner can be shown for. A session is\n' +
    'defined as a new window for Files app. If a user opens a window, the same\n' +
    'session is maintained until either that window is closed or another\n' +
    'window is opened.',
  'The seconds that a banner is to remain visible.',
  'The size threshold to trigger a banner if it goes below.',
  'The duration (in seconds) to hide the banner after it has been dismissed\n' +
    'by the user.',
  'Drive connection state to trigger the banner on.',
  "Lifecycle method used to notify Banner implementations when they've been\n" +
    'shown.',
  'When a custom filter is registered for a banner and the banner is shown,\n' +
    'some context can be passed back to the banner to update.'
]
warning_banner.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'WarningBanner is a type of banner that is highest priority and is used to\n' +
    'showcase potential underlying issues for the filesystem (e.g. low disk space)\n' +
    'or that are contextually relevant (e.g. Google Drive is offline).\n' +
    'To implement a WarningBanner, extend from this banner and override the\n' +
    'allowedVolumes method where you want the warning message shown. The\n' +
    'connectedCallback method can be used to set the warning text and an optional\n' +
    'link to provide more information. All other configuration elements are\n' +
    'optional and can be found documented on the Banner extern.\n' +
    'For example the following banner will show when a user navigates to the\n' +
    'Downloads volume type:\n' +
    'class ConcreteWarningBanner extends WarningBanner {\n' +
    'allowedVolumes() {\n' +
    'return [{type: VolumeType.DOWNLOADS}];\n' +
    '}\n' +
    '}\n' +
    'Create a HTML template with the same file name as the banner and override\n' +
    'the text using slots with the content that you want:\n' +
    '<warning-banner>\n' +
    '<span slot="text">Warning Banner text</span>\n' +
    '<cr-button slot="extra-button" href="{{url_to_navigate}}">\n' +
    'Extra button text\n' +
    '</cr-button>\n' +
    '</warning-banner>',
  'Returns the HTML template for the Warning Banner.',
  'Called when the web component is connected to the DOM. This will be called\n' +
    'for both the inner warning-banner component and the concrete\n' +
    'implementations that extend from it.',
  'If a WarningBanner subclass overrides the default dismiss button, the',
  'button will not exist in the shadowRoot. Add the event listener to the',
  'overridden dismiss button first and fall back to the default button if',
  'no overridden button.',
  'Attach an onclick handler to the extra-button slot. This enables a new',
  'element to leverage the href tag on the element to have a URL opened.',
  'TODO(crbug.com/40189485): Add UMA trigger to capture number of extra',
  'button clicks.',
  'When a WarningBanner is dismissed, do not show it again for another 36\n' +
    'hours.',
  'All banners that inherit this class should override with their own\n' +
    'volume types to allow. Setting this explicitly as an empty array ensures\n' +
    "banners that don't override this are not shown by default.",
  'Handler for the dismiss button on click, switches to the custom banner\n' +
    'dismissal event to ensure the controller can catch the event.',
  'In the case the warning-banner web component is not the root node (e.g.',
  'it is contained within another web component) prefer the outer component.'
]
warning_banner_unittest.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Test that the dismiss handler bubbles the correct event on click.',
  'Test that the additional button can be set and the link is visited when the\n' +
    'button is clicked.',
  'Test that the default configuration is set on the warning banners to ensure\n' +
    'any overridden banners have sensible configuration.',
  'Ensure the warning banner default timeout is 36 hours.',
  'Ensure the default allowed volume type is empty. This ensures any',
  "banners that don't override this property do not show by default."
]
combobutton.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This implements a combobutton control.',
  'Internal interface used for ComboButton, it attaches the `data` to a MenuItem',
  'to read it back in the `MenuActivate` event.',
  'Creates a new combo button element.',
  'Truncates drop-down list.',
  'Move backgroundImage from the menu item container to the child icon.',
  'Adds separator to drop-down list.',
  'Default item to fire on combobox click',
  'Remove mousedown event listener created by MultiMenuButton::decorate,',
  'and move it down to trigger_.',
  'When there are multiple choices just show/hide menu.',
  'When there is only 1 choice, just dispatch to open.',
  'When there are multiple choices just show/hide menu.'
]
command.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview A command is an abstraction of an action a user can do in the\n' +
    'UI.\n' +
    'When the focus changes in the document for each command a canExecute event\n' +
    'is dispatched on the active element. By listening to this event you can\n' +
    'enable and disable the command by setting the event.canExecute property.\n' +
    'When a command is executed a command event is dispatched on the active\n' +
    'element. Note that you should stop the propagation after you have handled the\n' +
    'command if there might be other command listeners higher up in the DOM tree.',
  'Creates a new command element.',
  'Initializes the command.',
  'Executes the command by dispatching a command event on the given element.\n' +
    "If `element` isn't given, the active element is used instead.\n" +
    'If the command is `disabled` this does nothing.\n' +
    '@param element Optional element to dispatch event on.',
  "Sets 'hidden' property of a Command instance which dispatches\n" +
    "'hiddenChange' event automatically, so that associated MenuItem can\n" +
    'handle the event.\n' +
    '@param value New value of hidden property.',
  'Call this when there have been changes that might change whether the\n' +
    'command can be executed or not.\n' +
    '@param node Node for which to actuate command state.',
  'The keyboard shortcut that triggers the command. This is a string\n' +
    'consisting of a key (as reported by WebKit in keydown) as\n' +
    "well as optional key modifiers joined with a '|'.\n" +
    'Multiple keyboard shortcuts can be provided by separating them by\n' +
    'whitespace.\n' +
    'For example:\n' +
    '"F1"\n' +
    '"Backspace|Meta" for Apple command backspace.\n' +
    '"a|Ctrl" for Control A\n' +
    '"Delete Backspace|Meta" for Delete and Command Backspace',
  'Set this after the keyboardShortcuts_ since that might throw.',
  'Whether the event object matches the shortcut for this command.\n' +
    '@param e The key event object.\n' +
    '@return Whether it matched or not.',
  'The label of the command.',
  'Whether the command is disabled or not.',
  'Whether the command is hidden or not.',
  'Whether the command is checked or not.',
  'The flag that prevents the shortcut text from being displayed on menu.\n' +
    'If false, the keyboard shortcut text (eg. "Ctrl+X" for the cut command)\n' +
    'is displayed in menu when the command is associated with a menu item.\n' +
    'Otherwise, no text is displayed.',
  'Dispatches a canExecute event on the target.\n' +
    '@param command The command that we are testing for.\n' +
    '@param target The target element to dispatch the event on.',
  'The command managers for different documents.',
  'Keeps track of the focused element and updates the commands when the focus\n' +
    'changes.',
  '@param doc The document that we are managing the commands for.',
  'Make sure we add the listener to the bubbling phase so that elements can',
  'prevent the command.',
  'Initializes a command manager for the document as needed.\n' +
    '@param doc The document to manage the commands for.',
  'Handles focus changes on the document.\n@param e The focus event object.',
  'Ignore focus on a menu button or command item.',
  'Handles the keydown event and routes it to the right command.\n' +
    '@param e The keydown event.',
  'Because Command uses injected methods the <command> in the DOM might',
  'not have been initialized yet.',
  'When invoking a command via a shortcut, we have to manually check if it',
  'can be executed, since focus might not have been changed what would',
  "have updated the command's state.",
  'We do not want any other element to handle this.',
  'The event type used for canExecute events.',
  'Whether the target can execute the command. Setting this also stops the\n' +
    'propagation and prevents the default. Callers can tell if an event has\n' +
    'been handled via |this.defaultPrevented|.',
  '@param command The command that we are evaluating.',
  'Event triggered when a Command is executed.',
  'These event can bubble, so we can listen to it in any element parent of the',
  '<command>.'
]
command_unittest.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'US keyboard - qwerty-N should work.',
  'DV keyboard - qwerty-L (dvorak-N) should work.',
  'DV keyboard - qwerty-N (dvorak-B) should not work.',
  'RU keyboard - qwerty-N (Cyrillic Te) should work.'
]
commandbutton.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This implements a common button control, bound to command.',
  'Creates a new button element.',
  'Associated command.',
  'Returns associated command.',
  'Associates command with this button.\n' +
    '@param command Command id, or command object to associate with this button.',
  'Returns button label',
  'Sets button label.',
  "Swap the textContent with current label only when this button doesn't",
  'have any elements as children.',
  '',
  'TODO(fukino): If a user customize the button content, it becomes the',
  "user's responsibility to update the content on command label's change.",
  'Updating the label in customized button content should be done',
  'automatically by specifying an element which should be synced with the',
  "command label using class name or polymer's template binding.",
  'Handles click event and dispatches associated command.\n' +
    '@param _e The mouseup event object.',
  'Handles changes to the associated command.'
]
context_menu_handler.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Handles context menus.',
  'When the user presses the context menu key (on the keyboard) we need',
  'to detect this.',
  'Shows a menu as a context menu.\n' +
    '@param e The event triggering the show (usually a contextmenu event).\n' +
    '@param menu The menu to show.',
  'When the menu is shown we steal a lot of events.',
  'Hide the currently shown menu.\n' +
    '@param hideType Type of hide.\n' +
    'default: HideType.INSTANT.',
  'On windows we might hide the menu in a right mouse button up and if',
  'that is the case we wait some short period before we allow the menu',
  'to be shown again.',
  'Keep track of keydown state so that we can use that to determine the',
  'reason for the contextmenu event.',
  'context menu key or Shift-F10.',
  'If the menu is visible we let it handle all the keyboard events',
  'intended for the menu.',
  'Focus the item which triggers the context menu before showing the menu,',
  'so when the menu hides, the focus can be brought back to the item.',
  'Handles mouse event callbacks.',
  'Adds a contextMenu property to an element or element class.\n' +
    '@param elementOrClass The element or class to add the contextMenu property\n' +
    'to.',
  '@return The rect to use for positioning the context menu when the\n' +
    'context menu is not opened using a mouse position.',
  'Sets the given contextMenu to the given element. A contextMenu property\n' +
    'would be added if necessary.\n' +
    '@param element The element or class to set the contextMenu to.\n' +
    '@param contextMenu The contextMenu property to be set.',
  'Use this interface to define an element that also might have a context menu\n' +
    'attached, e.g. HTMLInputElement & WithContextMenu.',
  'The singleton context menu handler.'
]
context_menu_handler_unittest.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Keep original Date.now not to affect other code.',
  'Initial value is 1 since 0 becomes false.',
  'Overrides Date.now to simulate time.',
  'Create context menu.',
  'Create target elements.',
  'Show context menu of elem1.',
  'Show context menu of elem2.',
  'On Windows to prevent context menu show again by mouse right button up,',
  'we need to wait at least 50ms from the last hide of context menu.',
  'Tests that a keydown event that is not intended for the context menu will not\n' +
    'be consumed by the context menu.',
  'Create context menu.',
  'Show context menu.',
  'Only the event that is ignored by the context menu is received by',
  '`document.body`.',
  'Check this is the right keydown event.',
  'Confirm this is not a menu event.',
  'Send a keydown event expected to be consumed by the context menu.',
  'Send a keydown event expected to be ignored by the context menu.'
]
default_task_dialog.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'DefaultTaskDialog contains a message, a list box, an ok button, and a\n' +
    'cancel button.\n' +
    'This dialog should be used as task picker for file operations.',
  'The `parentNode` must be the parent element for this dialog.',
  'List has max-height defined at css, so that list grows automatically,',
  "but doesn't exceed predefined size.",
  "Use 'click' instead of 'change' for keyboard users.",
  "Binding stuff doesn't work with constructors, so we have to create",
  'closure here.',
  'RequestAnimationFrame id used for throttling the list scroll event',
  'listener.',
  'Renders item for list.\n@param item Item to render.',
  'Task label.',
  'Task file type icon.',
  'A11y - make it focusable and readable.',
  'Shows dialog. The `title` parameter specifies the title with which the\n' +
    'dialog is shown. The `message` is the message shown in the body of the\n' +
    'dialog. The `items` are items that describe actions available on the\n' +
    'selected file. The `defaultIndex` indicates the index of the item to be\n' +
    'selected by default. The `onSelectedItem` is the callback to be called once\n' +
    'the user clicks one of the `items`.',
  "List activation handler. Closes dialog and calls 'ok' callback.\n" +
    '@param index Activated index.',
  'Closes dialog and invokes callback with currently-selected item.',
  'Called when List triggers a change event, which means user\n' +
    'focused a new item on the list. Used here to issue .focus() on\n' +
    'currently active item so ChromeVox can read it out.\n' +
    '@param event triggered by List.',
  'TODO(b:289003444): Remove after M122 if this never fails.',
  'Handle Escape.'
]
dialog_footer.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Obtains the label of OK button for the dialog type.\n' +
    '@param dialogType Dialog type.\n' +
    '@return OK button label.',
  'Footer shown when the Files app is opened as a file/folder selecting dialog.',
  'OK button in the footer.',
  "OK button's label in the footer.",
  'Cancel button in the footer.',
  'New folder button in the footer.',
  'File type selector in the footer.',
  '@param dialogType The type of the dialog (folder select, save-as, etc.)\n' +
    '@param element The element that holds the dialog footer.\n' +
    '@param filenameInput Filename input element.',
  'Initialize the element styles.',
  'Set initial label for OK button. The label can be updated dynamically',
  'depending on dialog types.',
  'Register event handlers.',
  '@return Selected filter index. The index is 1 based and 0 means\n' +
    "'any file types'. Keep the meaniing consistent with the index passed to\n" +
    'chrome.fileManagerPrivate.selectFile.',
  "Get the 'value' property from the file type selector.\n" +
    '@return containing the value attribute of the selected type.',
  'Open (expand) the fake select drop down.',
  'Hide (collapse) the fake select drop down.',
  'TODO: Unify to use only aria-expanded.',
  'Event handler for an activation or click.',
  'Event handler for a blur.',
  'Event handler for a key down.',
  'If options are open, stop the window from closing.',
  'fall through',
  'fall through',
  'fall through',
  'Finds the dialog footer element for the dialog type.\n' +
    '@param dialogType Dialog type.\n' +
    '@param document Document.\n' +
    '@return Dialog footer created with the found element.',
  'Helper to set the option as the selected one.\n' +
    '@param option Element being set as selected.',
  "Update our fake 'select' HTMLDivElement.",
  'Force the width of the file-type selector div to be the width',
  'of the options area to stop it jittering on selection change.',
  'Fills the file type list or hides it.\n' +
    '@param fileTypes List of file type.\n' +
    "@param includeAllFiles Whether the filter includes the 'all\n" +
    "files' item or not.",
  'See if all the extensions in the group have the same description.',
  'Set the first time.',
  'No single description, fall through to the extension list.',
  "Convert ['jpg', 'png'] to '*.jpg, *.png'.",
  'Make sure one of the options is selected to match real <select>.',
  'Hide the UI if there is actually no choice to be made (0 or 1 option).',
  '@param event Focus event.',
  'On focus we want to select everything but the extension, but',
  'Chrome will select-all after the focus event completes.  We',
  'schedule a timeout to alter the focus after that happens.',
  '@param event Key event.'
]
dialogs.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Default text for Ok and Cancel buttons.\n' +
    'Clients should override these with localized labels.',
  'The DOM element from the dialog which should receive focus when the',
  'dialog is first displayed.',
  'The DOM element from the parent which had focus before we were displayed,',
  "so we can restore it when we're hidden.",
  'If set true, BaseDialog assumes that focus traversal of elements inside\n' +
    "the dialog due to 'Tab' key events is handled by its container (and the\n" +
    'practical example is this.parentNode_ is a modal <dialog> element).\n' +
    'The default is false: BaseDialog handles focus traversal for the entire\n' +
    'DOM document. See findFocusableElements_(), also crbug.com/1078300.',
  'Elements that have negative tabIndex can be focused but are not traversed',
  'by Tab key.',
  'Use cr-button as close button.',
  'Add hover/ripple layer for button.',
  'Add hover/ripple layer for button.',
  'Hook method for extending classes. Empty at this level.',
  '0=cancel, 1=ok.',
  'Not handled, so return and allow event to propagate.',
  "Start 'pulse' animation.",
  'We have child elements (hover/ripple) inside the button, setting',
  'textContent of the button will remove all children',
  'We have child elements inside the button, setting',
  'textContent of the button will remove all children.',
  'Some iframes have an undefined contentDocument for security reasons,',
  'such as chrome://terms (which is used in the chromeos OOBE screens).',
  'Modal containers manage dialog focus traversal. Otherwise, the focus',
  'is managed by |this| dialog, by making all outside nodes unfocusable',
  'while the dialog is shown.',
  'Check that hide() was not called in between.',
  'Restore focusability for the non-modal container case.',
  'Wait until the transition is done before removing the dialog.',
  'Check show() was not called in between.',
  'It is also possible to show/hide/show/hide and have hide called twice',
  'and container already removed from parentNode_.',
  'Number of milliseconds animation is expected to take, plus some margin for\n' +
    'error.',
  'AlertDialog contains just a message and an ok button.',
  'ConfirmDialog contains a message, an ok button, and a cancel button.'
]
drag_selector.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Target list of drag selection.',
  'Start point of dragging.',
  'Start point of dragging.',
  'Drag selector used on the file list or the grid table.',
  'Stores the current state of the drag selection. Only has a value while the\n' +
    'mouse button is down.',
  'Border element of drag handle.',
  'Indexes of selected items by dragging at the last update.',
  'Indexes of selected items at the start of dragging.',
  'Bind handlers to make them removable.',
  'Obtains the scrolled position in the element of mouse pointer from the\n' +
    'mouse event.\n' +
    '@param element Element that has the scroll bars.\n' +
    '@param event The mouse event.\n' +
    '@return Scrolled position.',
  'Starts drag selection by reacting dragstart event.\n' +
    'This function must be called from handlers of dragstart event.\n' +
    '@param list List where the drag selection starts.\n' +
    '@param event The dragstart event.',
  'Precondition check',
  'Save the start state.',
  'Set the target of the drag selection',
  'Create and add the border element',
  'Register event handlers.',
  'The handlers are bounded at the constructor.',
  'Handles the mousemove event.\n@param event The mousemove event.',
  'Get the selection bounds.',
  'Collect items within the selection rect.',
  'Diff the selection between currentSelection and this.lastSelection_.',
  'Bit operator can be used for undefined value.',
  'Bit operator can be used for undefined value.',
  'Update the selection',
  'The flag may be one of following:',
  '- IN_LAST_SELECTION | IN_CURRENT_SELECTION',
  '- IN_LAST_SELECTION',
  '- IN_CURRENT_SELECTION',
  '- undefined',
  'If the flag equals to (IN_LAST_SELECTION | IN_CURRENT_SELECTION),',
  'this is included in both the last selection and the current selection.',
  'We have nothing to do for this item.',
  'If the flag equals to IN_LAST_SELECTION,',
  'then the item is included in lastSelection but not in',
  'currentSelection. Revert the selection state to',
  'this.originalSelection_.',
  'If the flag equals to IN_CURRENT_SELECTION,',
  'this is included in currentSelection but not in lastSelection.',
  'Update the size of border',
  'Handle the mouseup event.\n@param event The mouseup event.',
  'The target may select an item by reacting to the mouseup event.',
  'This suppress to the selecting behavior.',
  'Flag that shows whether the item is included in the selection or not.'
]
file_grid.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Align with CSS .grid-title.group-by-modificationTime.',
  'Align with CSS .grid-title.group-by-isDirectory.',
  'Align with CSS .grid-title ~ .grid-title',
  'FileGrid constructor.\n' +
    'Represents grid for the Grid View in the File Manager.',
  "The setter for dataModel is overridden to remove/add the 'splice'",
  'listener for the current data model.',
  'Decorates an HTML element to be a FileGrid.',
  "Force the list's ending spacer to be tall enough to allow overscroll.",
  "Update the item's inline status when it's restored from List's cache.",
  '@param index Index of the list item.',
  'Sets list thumbnail loader.',
  'Returns the element containing the thumbnail of a certain list item as\n' +
    'background image.\n' +
    '@param index The index of the item containing the desired thumbnail.\n' +
    '@return  The element containing the thumbnail, or null, if an error\n' +
    'occurred.',
  "Make sure that grid item's selected attribute is updated just after the",
  'mergeItems operation is done. This prevents shadow of selected grid items',
  'from being animated unintentionally by redraw.',
  'Check if index i is the start of a new group.',
  'For first item in each group, we add a title div before the element.',
  'Keep these values to set range when a new list thumbnail loader is set.',
  'The index falls into the current group. Calculates how many rows',
  'we have in the current group up until this index.',
  'The index is not in the current group. Add all row heights in this',
  'group to the final result.',
  'The index falls into the current group. Calculates how many rows',
  'we have in the current group up until this index.',
  'The index is not in the current group. Add all rows in this',
  'group to the final result.',
  'Returns the column of an item which has given index.\n' +
    '@param index The item index.',
  'The index falls into the current group. Calculates the column index',
  'with the remaining index in this group.',
  'Return the item index which is placed at the given position.\n' +
    'If there is no item in the given position, returns -1.\n' +
    '@param row The row index.\n' +
    '@param column The column index.',
  'The row falls into the current group. Calculate the index based on',
  'the column value and return.',
  'column is larger than the item count in this row, return -1.',
  'This happens when we try to find the index for the above/below',
  'items. For example:',
  '--------------------------------------',
  'item 0 item 1 item 2',
  'item 3 (end of group)',
  'item 4 item 5 (end of group)',
  '--------------------------------------',
  '* To find above index for item 5, we pass (row - 1, col), col is',
  'not existed in the above row.',
  '* To find the below index for item 2, we pass (row + 1, col), col',
  'is not existed in the below row.',
  '`row` index is larger than the last row, return -1.',
  'Function to adjust the tops of viewport and row.',
  'Function to adjust the bottoms of viewport and row.',
  'Check if the entire of given indexed row can be shown in the viewport.',
  'Render 1 more row above to make the scrolling more smooth.',
  'Render 1 more rows below, +2 here because "endIndex" is the first item',
  'of the row, in order to render the whole +1 row, we need to make sure',
  'the "endIndex" is the first item of +2 row.',
  `beginIndex + 1 here because "first" will be -1 when it's being`,
  'consumed in redraw() method in the parent class.',
  'Excluding the current index, because [firstIndex, lastIndex) is used',
  'in mergeItems().',
  'Find the group of "index" and accumulate the height after that group.',
  'index falls into the current group. Starting from this group we need',
  'to add all remaining group heights into the final result.',
  'For current group, we need to add the row heights starting from the',
  'row which current index locates.',
  'Returns the height of folder items in grid view.\n' +
    '@return The height of folder items.',
  'Align with CSS value for .thumbnail-item.directory: height + margin +',
  'border.',
  'Returns the height of file items in grid view.\n' +
    '@return The height of file items.',
  'Align with CSS value for .thumbnail-item: height + margin + border.',
  'Returns the height of group heading.',
  'We have an additional margin for non-first group, check',
  'the CSS rule ".grid-title ~ .grid-title" for more information in the CSS',
  'file.',
  'Returns the height of the item in the group based on the group value.',
  'Returns the height of the item specified by the index.',
  'The index falls into the current group, return group item height',
  'by its group value.',
  'Returns the width of grid items.',
  'Align with CSS value for .thumbnail-item: width + margin + border.',
  'Returns the margin top of grid items.',
  'Align with CSS value for .thumbnail-item: margin-top.',
  'Returns the margin left of grid items.',
  'Align with CSS value for .thumbnail-item: margin-inline-start.',
  'Returns index of a row which contains the given y-position(offset).\n' +
    '@param offset The offset from the top of grid.\n' +
    '@return Row index corresponding to the given offset.',
  'Loop through all the groups, calculate the accumulated height for all',
  'items (item height + group heading height), until the total height',
  'reaches "offset", then we know how many items can be included in this',
  'offset.',
  'Current offset falls into the current group. Calculates how many',
  'rows in the offset within the group.',
  'TODO(crbug.com/1353650): find a way to update heading instead of',
  'redraw.',
  'Updates items to reflect metadata changes.\n' +
    '@param _type Type of metadata changed.\n' +
    '@param entries Entries whose metadata changed.',
  'Redraws the UI. Skips multiple consecutive calls.',
  'Redraws the UI immediately.',
  'Decorates thumbnail.\n@param  entry Entry to render a thumbnail for.',
  'Decorates the box containing a centered thumbnail image.\n' +
    '@param li List item which contains the box to be decorated.\n' +
    '@param entry Entry which thumbnail is generating for.',
  "Set thumbnail if it's already in cache, and the thumbnail data is not",
  'empty.',
  "Added 'shared' class to icon and placeholder of a folder item.\n" +
    '@param  li The grid item.\n' +
    '@param  entry File entry for the grid item.',
  ... 40 more items
]
file_grid_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Returns the element used to parent the file grid. The element is\n' +
    'attached to the body, and styled for visual display.',
  'Set up test components.',
  'Setup mock components.',
  'Create DOM element parent of the file grid under test.',
  'Force round number heights to simplify the math in the test.',
  'Add 10 fake files.',
  'Mock item size.',
  '3 columns in each row.',
  'Mock group by information.',
  'Visual illustration of the grid (in total 8 rows with 6 headings):',
  '-----------------------------------------------------------------',
  'Heading #1/today:',
  '(row 0)    Item 0    Item 1',
  'Heading #2/yesterday:',
  '(row 1)    Item 2    Item 3    Item 4',
  'Heading #3/earlier_this_week:',
  '(row 2)    Item 5    Item 6    Item 7',
  '(row 3)    Item 8    Item 9',
  'Heading #4/earlier_this_month:',
  '(row 4)    Item 10   Item 11   Item 12',
  '(row 5)    Item 13   Item 14   Item 15',
  'Heading #5/earlier_this_year:',
  '(row 6)    Item 16',
  'Heading #6/older:',
  '(row 7)    Item 17   Item 18   Item 19',
  'Mock group by information.',
  'Visual illustration of the grid (in total 8 rows with 2 headings):',
  '-----------------------------------------------------------------',
  'Heading #1/folders:',
  '(row 0)    Item 0    Item 1    Item 2',
  '(row 1)    Item 3',
  'Heading #2/files:',
  '(row 2)    Item 4    Item 5    Item 6',
  '(row 3)    Item 7    Item 8    Item 9',
  '(row 4)    Item 10   Item 11   Item 12',
  '(row 5)    Item 13   Item 14   Item 15',
  '(row 6)    Item 16   Item 17   Item 18',
  '(row 7)    Item 19',
  'Enable group by modification time.',
  'Item 0,1 is in group #1/today, nothing is above it.',
  'Item 2,3,4 is in group #2/yesterday, 1 row above + 1 header.',
  'Item 5,6,7 is in group #3/earlier_this_week, 2 rows above + 2 headers.',
  'Item 8,9 is in group #3/earlier_this_week, 3 rows above + 3 headers.',
  'Item 10,11,12 is in group #4/earlier_this_month, 4 rows above + 3 headers.',
  'Item 13,14,15 is in group #4/earlier_this_month, 5 rows above + 4 headers.',
  'Item 16 is in group #5/earlier_this_year, 6 rows above + 4 headers.',
  'Item 17,18,19 is in group #6/older, 7 rows above + 5 header.',
  'Test functions related to item position: getItemRow(), getItemColumn(),',
  'getItemIndex(), getFirstItemInRow().',
  'Enable group by modification time.',
  'Check the comment in groupByModificationTime() for a visual illustration.',
  'Item 0,1 is in group #1/today, row 0.',
  'Item 2,3,4 is in group #2/yesterday, row 1.',
  'Item 5,6,7 is in group #3/earlier_this_week, row 2.',
  'Item 8,9 is in group #3/earlier_this_week, row 3.',
  'Item 10,11,12 is in group #4/earlier_this_month, row 4.',
  'Item 13,14,15 is in group #4/earlier_this_month, row 5.',
  'Item 16 is in group #5/earlier_this_year, row 6.',
  'Item 17,18,19 is in group #6/older, row 7.',
  'Invalid inputs:',
  'row and column is negative.',
  'column is too big.',
  'row is too big.',
  'column on a specific row is too big for that row.',
  'Enable group by modification time.',
  'Check the comment in groupByModificationTime() for a visual illustration.',
  'Note: the index itself is being excluded.',
  'Item 0,1 is in group #1/today, 8 rows below + 5 headers.',
  'Item 2,3,4 is in group #2/yesterday, 7 rows below + 4 header.',
  'Item 5,6,7 is in group #3/earlier_this_week, 6 rows below + 3 headers.',
  'Item 8,9 is in group #3/earlier_this_week, 5 rows below + 3 headers.',
  'Item 10,11,12 is in group #4/earlier_this_month, 4 rows below + 2 headers.',
  'Item 13,14,15 is in group #4/earlier_this_month, 3 rows below + 2 headers.',
  'Item 16 is in group #5/earlier_this_year, 2 rows below + 1 header.',
  'Item 17,18,19 is in group #6/older, 1 row below.',
  'Enable group by modification time.',
  'index                                       height      total height',
  '--------------------------------------------------------------------',
  'Heading #1/today:                             30              30',
  '(row 0)   Item 0    Item 1                    50              80',
  'Heading #2/yesterday:                         30              110',
  '(row 1)   Item 2    Item 3    Item 4          50              160',
  'Heading #3/earlier_this_week:                 30              190',
  '(row 2)   Item 5    Item 6    Item 7          50              240',
  '(row 3)   Item 8    Item 9                    50              290',
  'Heading #4/earlier_this_month:                30              320',
  '(row 4)   Item 10   Item 11   Item 12         50              370',
  '(row 5)   Item 13   Item 14   Item 15         50              420',
  'Heading #5/earlier_this_year:                 30              450',
  '(row 6)   Item 16                             50              500',
  'Heading #6/older:                             30              530',
  '(row 7)   Item 17   Item 18   Item 19         50              580',
  'Enable group by modification time.',
  'We are testing the logic in getGroupHeadingHeight_(), so we should use',
  'the real MODIFICATION_TIME_GROUP_HEADING_HEIGHT(57) and',
  'GROUP_MARGIN_TOP(16) from file_grid.',
  'Enable group by directory.',
  ... 52 more items
]
file_list_selection_model.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@param length The number items in the selection.',
  'Overwrite ListSelectionModel to allow lead item to be independent of the\n' +
    'current selected item(s).',
  'Updates the check-select mode.\n' +
    '@param enabled True if check-select mode should be enabled.',
  'Force change event when selecting all but with only 1 item, to update the',
  'UI with select mode.',
  "If force lead index when there is no lead, because doesn't make sense",
  'to not have lead when there is selection.',
  'Gets the check-select mode.\n@return True if check-select mode is enabled.',
  'Changes to single-select mode if all selected files get deleted.',
  'Look at the old state.',
  'Call the superclass function.',
  'Leave check-select mode if all items have been deleted.',
  'Handles change event to update isCheckSelectMode_ BEFORE the change event\n' +
    'is dispatched to other listeners.\n' +
    "@param event Event object of 'change' event.",
  'When the number of selected item is not one, update the check-select',
  'mode. When the number of selected item is one, the mode depends on the',
  'last keyboard/mouse operation. In this case, the mode is controlled from',
  'outside. See filelist.handlePointerDownUp and filelist.handleKeyDown.',
  'Updates the check-select mode.\n' +
    '@param enabled True if check-select mode should be enabled.',
  'Do nothing, as check-select mode is invalid in single selection model.',
  'Gets the check-select mode.\n@return True if check-select mode is enabled.'
]
file_list_selection_model_unittest.ts [
  'Copyright 2017 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Verify that all selection and focus is dropped if all selected files get',
  'deleted.',
  'Set initial selection.',
  'Delete the selected items.',
  'Assert nothing is selected or in focus.',
  'Verify that all selection and focus is dropped only if all selected files get',
  'deleted.',
  'Set initial selection.',
  'Delete the selected items.',
  'Assert selection is not dropped.'
]
file_manager_dialog_base.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'This class is an extended class, to manage the status of the dialogs.',
  'The flag if any dialog is shown. True if a dialog is visible, false\n' +
    'otherwise.',
  '@param parentNode Parent node of the dialog.',
  '@param title Title.\n' +
    '@param message Message.\n' +
    '@param onOk Called when the OK button is pressed.\n' +
    '@param onCancel Called when the cancel button is\n' +
    'pressed.\n' +
    '@return True if the dialog can show successfully. False if the\n' +
    'dialog failed to show due to an existing dialog.',
  '@param title Title.\n' +
    '@param message Message.\n' +
    '@param onOk Called when the OK button is pressed.\n' +
    '@param onCancel Called when the cancel button is pressed.\n' +
    '@return {boolean} True if the dialog can show successfully. False if the\n' +
    'dialog failed to show due to an existing dialog.\n' +
    '@private',
  'If a dialog is shown, activate the window.',
  'Returns true if the dialog can show successfully. False if the\n' +
    'dialog failed to show due to an existing dialog.',
  '@param title Title.\n' +
    '@return True if the dialog can show successfully. False if the\n' +
    'dialog failed to show due to an existing dialog.',
  '@param title Title.\n' +
    '@param text Text to be shown in the dialog.\n' +
    '@return True if the dialog can show successfully. False if the\n' +
    'dialog failed to show due to an existing dialog.'
]
file_manager_dialog_base_unittest.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Returns true if cr.ui.dialog container has .shown class',
  'Show the dialog and wait until .shown is set on .cr-dialog-container.',
  'The setting of .shown happens async.',
  'Hide the dialog and verify .shown is removed (sync).',
  'Show the dialog again and ensure that it gets displayed.',
  'Previously some async processing from hide() would stop',
  'the dialog showing again at all if it was called too soon.'
]
file_manager_ui.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "The root of the file manager's view managing the DOM of the Files app.",
  'eslint-disable-next-line @typescript-eslint/naming-convention',
  'Dialog type.',
  'Alert dialog. Overrides ActionModelUI declaration.',
  'List container. Overrides ActionModelUI declaration.',
  'Confirm dialog.',
  'Confirm dialog for delete.',
  'Confirm dialog for emptying the trash.',
  'Restore dialog when trying to open files that are in the trash',
  'Confirm dialog for file move operation.',
  'Confirm dialog for file copy operation.',
  'Default task picker.\n' +
    'TODO(b:289003444): Make it readonly after fixing tests.',
  'readonly  defaultTaskPicker: DefaultTaskDialog;',
  'Dialog for installing .deb files\n' +
    'TODO(b:289003444): Make it readonly after fixing tests.',
  'readonly  installLinuxPackageDialog: InstallLinuxPackageDialog;',
  'Dialog for import Crostini Image Files (.tini)\n' +
    'TODO(b:289003444): Make it readonly after fixing tests.',
  'readonly  importCrostiniImageDialog: ImportCrostiniImageDialog;',
  'Dialog for formatting',
  'Dialog for password prompt',
  'Dialog for resolving file conflicts.',
  'Dialog for DLP (Data Leak Prevention) restriction details.',
  'Breadcrumb controller.',
  'The container element of the dialog.',
  'Context menu for texts.',
  'The toolbar which contains controls.',
  'The tooltip element.',
  'The actionbar which contains buttons to perform actions on selected\n' +
    'file(s).',
  'The navigation list.',
  'Toggle-view button.',
  'The button to sort the file list.',
  'The button to open gear menu.',
  'The button to open context menu in the check-select mode.',
  'Directory tree.',
  'Progress center panel.',
  'Activity feedback panel.',
  'The combo button to specify the task.',
  'Banners in the file list.',
  'Dialog footer.',
  'The container that maintains the lifetime of nudges.',
  'Container of file-type filter buttons.',
  'Empty folder element inside the file list container.',
  'A hidden div that can be used to announce text to screen\nreader/ChromeVox.',
  'True while FilesApp is in the process of a drag and drop. Set to true on\n' +
    "'dragstart', set to false on 'dragend'. If CrostiniEvent\n" +
    "'drop_failed_plugin_vm_directory_not_shared' is received during drag, we\n" +
    'show the move-to-windows-files dialog.',
  '@param providersModel Model for providers.\n' +
    '@param element Top level element of the Files app.\n' +
    '@param launchParam Launch param.',
  'Initialize the dialog label. This should be done before constructing',
  'dialog instances.',
  'Prevent the empty menu from opening.',
  'Initialize attributes.',
  'Modify UI default behavior.',
  'Gets password dialog.',
  'Gets conflict dialog.',
  'Gets the DlpRestrictionDetails dialog.',
  'Initializes here elements, which are expensive or hidden in the beginning.',
  'eslint-disable-next-line @typescript-eslint/naming-convention',
  'List container.',
  'Breadcrumb container.',
  'Splitter.',
  'Search container, which controls search UI elements.',
  'a11y= this);',
  'Init context menus.',
  'Add window resize handler.',
  'Add global pointer-active handler.',
  'http://crbug.com/1311472',
  'Add global drag-drop-active handler.',
  'Initializes the focus.',
  'eslint-disable-next-line @typescript-eslint/naming-convention',
  'Set the initial focus. When there is no focus, the active element is the',
  '<body>.',
  'TODO(hirono): Merge the method into initAdditionalUI.',
  'TODO(mtomasz): Merge the method into initAdditionalUI if possible.',
  'Attaches files tooltip.',
  'Initialize files menu items. This method must be called after all files\n' +
    'menu items are decorated as MenuItem.',
  'Relayouts the UI.',
  'May not be available during initialization.',
  'Sets the current list type.\n@param listType New list type.',
  'Overrides default handling for clicks on hyperlinks.\n' +
    "In a packaged apps links with target='_blank' open in a new tab by\n" +
    'default, other links do not open at all.\n' +
    '@param event Click event.',
  'Mark |element| with "loaded" attribute to indicate that File Manager has\n' +
    'finished loading.',
  'Sets up and shows the alert to inform a user the task is opened in the\n' +
    'desktop of the running profile.\n' +
    '@param entries List of opened entries.',
  'Find strings.',
  'Show the dialog.',
  'Shows confirmation dialog and handles user interaction.\n' +
    '@param isMove true if the operation is move. false if copy.\n' +
    '@param messages The messages to show in the dialog.\n' +
    'box.',
  'Send a text to screen reader/Chromevox without displaying the text in the\n' +
    'UI.\n' +
    '@param text Text to be announced by screen reader, which should be\n' +
    'already translated.',
  'Screen reader only reads if the content changes, so clear the content',
  'first.',
  'this.a11yAnnounces is not null only during tests; see constructor.'
]
file_metadata_formatter.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Formatter class for file metadatas.',
  'Sets date and time format.\n' +
    '@param use12hourClock True if 12 hours clock, False if 24 hours.',
  'Generates a formatted modification time text.\n' +
    '@return A string that represents modification time.',
  'Number of milliseconds in a day.',
  "In case of 'Invalid Date'.",
  'Generates a formatted filesize text.\n' +
    '@param addPrecision addPrecision used to optionally add more\n' +
    'precision digits to the formatted filesize text.\n' +
    '@return A string that represents a file size.'
]
file_table.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Custom column model for advanced auto-resizing.',
  'Sets column width so that the column dividers move to the specified\n' +
    'position. This function also check the width of each column and keep the\n' +
    'width larger than MIN_WIDTH.\n' +
    '@param newPos Positions of each column dividers.',
  'Check the minimum width and adjust the positions.',
  'Set the new width of columns',
  'Make sure each cell has the minimum width. This is necessary when the',
  'window size is too small to contain all the columns.',
  'Normalizes widths to make their sum 100% if possible. Uses the proportional\n' +
    'approach with some additional constraints.\n' +
    '@param contentWidth Target width.',
  'Some columns have fixed width.',
  'Faster alternative to Math.floor for non-negative numbers.',
  'Handles to the start of column resizing by splitters.',
  'Handles to the end of column resizing by splitters.',
  'Initialize a column snapshot which is used in setWidthAndKeepTotal().',
  'Destroy the column snapshot which is used in setWidthAndKeepTotal().',
  'Sets the width of column while keeping the total width of table.\n' +
    'Before and after calling this method, you must initialize and destroy\n' +
    'columnPos with initializeColumnPos() and destroyColumnPos().\n' +
    '@param columnIndex Index of column that is resized.\n' +
    '@param columnWidth New width of the column.',
  'Notify about resizing',
  'Obtains a column by the specified horizontal position.\n' +
    '@param x Horizontal position.\n' +
    '@return The object that contains column index, column width, and\n' +
    'hitPosition where the horizontal position is hit in the column.',
  'Re-layout the table.  This overrides the default column layout code in',
  'the parent class.',
  'Keep the current column width, but adjust the other columns to',
  'accommodate the new column.',
  'Export a set of column widths for use by #restoreColumnWidths.  Use these\n' +
    'two methods instead of manually saving and setting column widths, because\n' +
    'doing the latter will not correctly save/restore column widths for hidden\n' +
    'columns.\n' +
    'see #restoreColumnWidths\n' +
    '@return config',
  'Make a snapshot, and use that to compute a column layout where all the',
  'columns are visible.',
  'Export the column widths.',
  'Restores a set of column widths previously created by calling\n' +
    '#exportColumnConfig.\n' +
    'see #exportColumnConfig',
  'Columns must all be made visible before restoring their widths.  Save the',
  'current visibility so it can be restored after.',
  'Do not use external setters (e.g. #setVisible, #setWidth) here because',
  'they trigger layout thrash, and also try to dynamically resize columns,',
  'which interferes with restoring the old column layout.',
  'Set column width.  Ignore invalid widths.',
  'Restore column visibility.  Use setVisible here, to trigger table',
  'relayout.',
  'Customize the column header to decorate with a11y attributes that announces\n' +
    'the sorting used when clicked.\n' +
    '@this {TableColumn} Bound by TableHeader before calling.\n' +
    '@param table Table being rendered.',
  'Here we have to flip, because clicking will perform the opposite sorting.',
  "If we're the sorting column make the icon a tab target.",
  'Minimum width of column. Note that is not marked private as it is used in the\n' +
    'unit tests.',
  'A helper class for performing resizing of columns.',
  '',
  'Starts off as a copy of the current column positions, but gets modified.',
  'Set the width of the given column.  The snapshot will keep the total width\n' +
    'of the table constant.',
  "Skip to resize 'selection' column",
  'Round up if the column is shrinking, and down if the column is expanding.',
  'This prevents off-by-one drift.',
  'Calculate new positions of column splitters.',
  'File list Table View.',
  'Decorates the element.\n' +
    '@param self Table to decorate.\n' +
    '@param metadataModel To retrieve metadata.\n' +
    '@param volumeManager To retrieve volume info.\n' +
    '@param a11y FileManagerUI to be able to announce a11y\n' +
    'messages.\n' +
    "@param fullPage True if it's full page File Manager, False if a\n" +
    'file open/save dialog.',
  "Force the list's ending spacer to be tall enough to allow overscroll.",
  'Keep focus on the file list when clicking on the header.',
  'Save the last selection. This is used by shouldStartDragSelection.',
  "Update the item's inline status when it's restored from List's cache.",
  'Sort data by the given column. Overridden to add the a11y message after\n' +
    'sorting.\n' +
    '@param index The index of the column to sort by.',
  "If it's sorting the column that's already sorted, we need to flip the",
  'sorting order.',
  'Delegate to parent to sort.',
  '',
  "Sort doesn't trigger redraw sometimes, e.g. if we sort by Name for now,",
  "then we sort by time, if the list order doesn't change, no permuted event",
  'is triggered, thus no redraw is triggered. In this scenario, we need to',
  'manually trigger a redraw to remove/add the group heading.',
  'Updates high priority range of list thumbnail loader based on current\n' +
    'viewport.\n' +
    '@param beginIndex Begin index.\n' +
    '@param endIndex End index.',
  'Keep these values to set range when a new list thumbnail loader is set.',
  'Sets list thumbnail loader.\n' +
    '@param listThumbnailLoader A list thumbnail loader.',
  'Returns the element containing the thumbnail of a certain list item as\n' +
    'background image.\n' +
    '@param index The index of the item containing the desired\n' +
    'thumbnail.\n' +
    '@return The element containing the thumbnail, or null, if an\n' +
    'error occurred.',
  'Handles thumbnail loaded event.',
  'Adjust column width to fit its content.\n' +
    '@param index Index of the column to adjust width.',
  'Create a temporaty list item, put all cells into it and measure its',
  'width. Then remove the item. It fits "list > *" CSS rules.',
  'The container will have width of the longest cell.',
  'Select at most MAXIMUM_ROWS_TO_MEASURE items around visible area.',
  'Sets date and time format.\n' +
    '@param use12hourClock True if 12 hours clock, False if 24 hours.',
  'Sets whether to use modificationByMeTime as "Last Modified" time.',
  'Obtains if the drag selection should be start or not by referring the mouse\n' +
    'event.\n' +
    '@param event Drag start event.\n' +
    '@return True if the mouse is hit to the background of the list,\n' +
    'or certain areas of the inside of the list that would start a drag\n' +
    'selection.',
  'If the shift key is pressed, it should starts drag selection.',
  "If we're outside of the element list, start the drag selection.",
  'If the position values are negative, it points the out of list.',
  'If the item index is out of range, it should start the drag selection.',
  'Faster alternative to Math.floor for non-negative numbers.',
  'If the pointed item is already selected, it should not start the drag',
  'selection.',
  'If the horizontal value is not hit to column, it should start the drag',
  'selection.',
  'Check if the point is on the column contents or not.',
  'The `list.cachedBounds` is set by DragSelector.getScrolledPosition.',
  'Render the Name column of the detail table.\n' +
    'Invoked by Table when a file needs to be rendered.\n' +
    '@param entry The Entry object to render.\n' +
    '@param _columnId The id of the column to be rendered.\n' +
    '@param _table The table doing the rendering.\n' +
    '@return Created element.',
  '@param index Index of the list item.',
  'Render the Size column of the detail table.\n' +
    '@param entry The Entry object to render.\n' +
    '@param _columnId The id of the column to be rendered.\n' +
    '@param _table The table doing the rendering.\n' +
    '@return Created element.',
  'Sets up or updates the size cell.\n' +
    '@param div The table cell.\n' +
    '@param entry The corresponding entry.',
  'Render the Type column of the detail table.\n' +
    '@param entry The Entry object to render.\n' +
    '@param _columnId The id of the column to be rendered.\n' +
    '@param _table The table doing the rendering.\n' +
    '@return Created element.',
  'Render the Date column of the detail table.\n' +
    '@param entry The Entry object to render.\n' +
    '@param _columnId The id of the column to be rendered.\n' +
    '@param _table The table doing the rendering.\n' +
    '@return Created element.',
  'Sets up or updates the date cell.\n' +
    '@param div The table cell.\n' +
    '@param entry Entry of file to update.',
  'TODO(crbug.com/1353650): find a way to update heading instead of redraw',
  'Updates the file metadata in the table item.\n' +
    '@param item Table item.\n' +
    '@param entry File entry.',
  "Updates list items 'in place' on metadata change.\n" +
    '@param type Type of metadata change.\n' +
    '@param entries Entries to update.',
  'The cell name does not matter as the entire list item is needed.',
  'Renders table row.\n' +
    '@param baseRenderFunction Base renderer.\n' +
    '@param entry Corresponding entry.\n' +
    '@return Created element.',
  'Renders the file thumbnail in the detail table.\n' +
    '@param entry The Entry object to render.\n' +
    '@param parent The parent DOM element.\n' +
    '@return Created element.',
  ... 8 more items
]
file_table_list.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Group Heading height, align with CSS #list-container .group-heading.',
  'File table list.',
  'Returns the height of group heading.',
  '@param onMergeItems callback called from `mergeItems` with the\n' +
    'parameters `beginIndex` and `endIndex`.',
  "Make sure that list item's selected attribute is updated just after",
  'the mergeItems operation is done. This prevents checkmarks on',
  'selected items from being animated unintentionally by redraw.',
  'Check if index i is the start of a new group.',
  'For first item in each group, we add a title div before the',
  'element.',
  '@param index Index of the list item.',
  'Given a index, return how many group headings are there before this\n' +
    'index. Note: not include index itself.',
  "index - 1 because we don't want to include index itself.",
  'Given a index, return how many group headings are there after this\n' +
    'index. Note: not include index itself.',
  'Given a offset (e.g. scrollTop), return how many items can be included\n' +
    'within this height. Override here because previously we just need to\n' +
    'use the total height (offset) to divide the item height, now we also\n' +
    'need to consider the potential group headings included in these items.',
  'Without heading the original logic suffices.',
  'Loop through all the groups, calculate the accumulated height for all',
  'items (item height + group heading height), until the total height',
  'reaches "offset", then we know how many items can be included in this',
  'offset.',
  'Current offset falls into the current group. Calculates how many',
  'items in the offset within the group.',
  'Given an index, return the height (top) of all items before this index.\n' +
    'Override here because previously we just need to use the index to\n' +
    'multiply the item height, now we also need to add up the potential\n' +
    'group heading heights included in these items.\n' +
    'Note: for group start item, technically its height should be "all\n' +
    `heights above it + current group heading height", but here we don't add\n` +
    'the current group heading height (logic in\n' +
    "getGroupHeadingCountBeforeIndex_), that's because it will break the\n" +
    '"beforeFillerHeight" logic in the redraw of list.js.',
  'Given an index, return the height of all items after this index.\n' +
    'Override here because previously we just need to use the remaining\n' +
    'index to multiply the item height, now we also need to add up the\n' +
    'potential group heading heights included in these items.',
  'A special case handled in the parent class, delegate it back to',
  'parent.',
  'Returns whether the drag event is inside a file entry in the list (and not\n' +
    'the background padding area).\n' +
    '@param event Drag start event.\n' +
    '@return True if the mouse is over an element in the list, False if it is in\n' +
    'the background.',
  'Obtains the index list of elements that are hit by the point or the\n' +
    'rectangle.\n' +
    '@param _x X coordinate value.\n' +
    '@param y Y coordinate value.\n' +
    '@param _width Width of the coordinate.\n' +
    '@param height Height of the coordinate.\n' +
    '@return Index list of hit elements.',
  'For group start item, we need to explicitly add group height because',
  "its top doesn't take that into consideration. (check notes in",
  'getItemTop())',
  'Selection controller for the file table list.',
  '@param selectionModel The selection model to\ninteract with.',
  'If a tap event is processed, FileTapHandler cancels the event to',
  'prevent triggering click events. Then it results not moving the focus',
  'to the list. So we do that here explicitly.',
  "Common item decoration for table's and grid's items.\n" +
    '@param li List item.\n' +
    '@param entry The entry.\n' +
    '@param metadataModel Cache to\n' +
    'retrieve metadata.\n' +
    '@param volumeManager Used to retrieve VolumeInfo.',
  'The metadata may not yet be ready. In that case, the list item will be',
  'updated when the metadata is ready via updateListItemsMetadata. For',
  'files not on an external backend, externalProps is not available.',
  "Overriding the default role 'list' to 'listbox' for better",
  'accessibility on ChromeOS.',
  'Returns whether `entry` is blocked by DLP.\n' +
    'Relies on the fact that volumeManager.isDisabled() can only be true for\n' +
    'dirs in file-saveas dialogs, while metadata.isRestrictedForDestination\n' +
    'can only be true for files in other types of select dialogs.\n' +
    '@param entry The entry.\n' +
    '@param metadataModel Used to retrieve isRestrictedForDestination value.\n' +
    "@param volumeManager Used to retrieve VolumeInfo and check if it's disabled.",
  'TODO(b/259184588): Properly handle case when VolumeInfo is not',
  "available. E.g. for Crostini we might not have VolumeInfo before it's",
  'mounted.',
  'Render the type column of the detail table.\n' +
    '@param doc Owner document.\n' +
    '@param entry The Entry object to render.\n' +
    '@param mimeType Optional mime type for the file.\n' +
    '@return Created element.',
  'Renders a div beside the row icon that is used to surface badges for\n' +
    'individual items in the grid and list view.\n' +
    '@param doc Owner document.',
  'Render filename label for grid and list view.\n' +
    '@param doc Owner document.\n' +
    '@param entry The Entry object to render.\n' +
    '@return The label element.',
  "Filename need to be in a '.filename-label' container for correct",
  'work of inplace renaming.',
  'Updates grid item or table row for the externalProps.\n' +
    '@param li List item.\n' +
    '@param entry The entry.\n' +
    '@param externalProps Metadata.\n' +
    '@param isTeamDriveRoot Whether the entry is a team drive root.',
  'Handles tap events on file list to change the selection state.\n' +
    '@param e The browser mouse event.\n' +
    '@param index The index that was under the mouse pointer, -1 if none.\n' +
    '@return True if conducted any action. False when if did nothing special for\n' +
    'tap.',
  'Prepare to open the context menu in the same manner as the right',
  'click. If the target is any of the selected files, open a one for',
  'those files. If the target is a non-selected file, cancel current',
  'selection and open context menu for the single file. Otherwise (when',
  'the target is the background), for the current folder.',
  'Two-finger tap outside the list should be handled here because it',
  'does not produce mousedown/click events.',
  'Prepare to open context menu of the new item by selecting only',
  'it.',
  'Unselect all items once to ensure that the check-select mode is',
  'terminated.',
  'Context menu will be opened for the selected files by the following',
  "'contextmenu' event.",
  'Single finger tap.',
  'Revert to click handling for single tap on the checkmark or rename',
  'input. Single tap on the item checkmark should toggle select the item.',
  'Single tap on rename input should focus on input.',
  'toggle item selection. Equivalent to mouse click on checkbox.',
  'Toggle the current one and make it anchor index.',
  'Make sure to unselect the leading item that was not the touch',
  'target.',
  'Do not toggle selection yet, so as to avoid unselecting before drag.',
  'Single tap should open the item with default action.',
  'Select the item, so that MainWindowComponent will execute action of',
  'it.',
  'Handles mouseup/mousedown events on file list to change the selection\n' +
    'state.\n' +
    'Basically the content of this function is identical to\n' +
    "ListSelectionController's handlePointerDownUp(), but following\n" +
    'handlings are inserted to control the check-select mode.\n' +
    '1) When checkmark area is clicked, toggle item selection and enable the\n' +
    'check-select mode.\n' +
    '2) When non-checkmark area is clicked in check-select mode, disable the\n' +
    'check-select mode.\n' +
    '@param e The browser mouse event.\n' +
    '@param index The index that was under the mouse pointer, -1 if\n' +
    'none.',
  'If multiple selection is allowed and the checkmark is clicked without',
  "modifiers(Ctrl/Shift), the click should toggle the item's selection.",
  '(i.e. same behavior as Ctrl+Click)',
  'Selection is handled at mouseUp.',
  '1) When checkmark area is clicked, toggle item selection and',
  'enable',
  'the check-select mode.',
  "If Files app enters check-select mode by clicking an item's",
  'icon, existing selection should be cleared.',
  'Always enables check-select mode when the selection is updated by',
  "Ctrl+Click or Click on an item's icon.",
  'Toggle the current one and make it anchor index.',
  'Shift is done in mousedown.',
  'Right click for a context menu needs to not clear the selection.',
  'If the index is selected this is handled in mouseup.',
  '2) When non-checkmark area is clicked in check-select mode,',
  'disable',
  'the check-select mode.',
  ... 31 more items
]
file_table_list_unittest.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Set up test components.',
  'Setup mock components.',
  'Create DOM element parent of the file list under test.',
  'Returns the element used to parent the file list. The element is\n' +
    'attached to the body, and styled for visual display.',
  '@param code event.code value.',
  'Get keyCode for key like A, B but not for Escape, Arrow, etc.',
  'A==65, B==66, etc.',
  'Tests that the keyboard can be used to navigate the FileTableList.',
  'Render the FileTable on |element|.',
  'Overwrite the selectionModel of the FileTable class (since events',
  'would be handled by cr.ui.ListSelectionModel otherwise).',
  'Add FileTableList file entries, then draw and focus the table list.',
  'Grab all the elements in the file list.',
  'Assert file table list |item| selection state.',
  'Assert file table list |item| focus/lead state.',
  'FileTableList always allows multiple selection.',
  'Home key selects the first item (listItem0).',
  'Only 1 item selected.',
  'listItem0 should be selected and focused.',
  'Only one item is selected: multiple selection should be inactive.',
  'ArrowDown moves and selects next item.',
  'Only listItem1 should be selected.',
  'listItem1 should be focused.',
  'Only one item is selected: multiple selection should be inactive.',
  'Ctrl+ArrowDown only moves the focus.',
  'listItem1 should be not focused but still selected.',
  'listItem2 should be focused but not selected.',
  'Only one item is selected: multiple selection should be inactive.',
  'Ctrl+Space selects the focused item.',
  'Multiple selection mode should now be activated.',
  'Both listItem1 and listItem2 should be selected.',
  'listItem1 should not be focused.',
  'listItem1 should be focused and selected.',
  'Hit Esc to cancel the whole selection.',
  'The item with the focus should not change.',
  'But there should be no selected items anymore.',
  'Item 2 should have focus.',
  'Render the FileTable on |element|.',
  'Overwrite the selectionModel of the FileTable class (since events',
  'would be handled by cr.ui.ListSelectionModel otherwise).',
  'Add FileTableList file entries, then draw and focus the table list.',
  'Home key selects the first item (index 0).',
  'Only 1 item selected.',
  'Index 0 should be selected and focused.',
  'End key selects the last item (index 2).',
  'Only 1 item selected.',
  'Index 2 should be selected and focused.',
  'Ctrl+A key selects all items.',
  'All 3 items are selected.',
  'Escape key selects all items.',
  'All 3 items are selected.',
  'Home key selects the first item (index 0).',
  'ArrowDown moves and selects next item.',
  'Only index 1 should be selected.',
  'ArrowUp moves and selects previous item.',
  'Only index 0 should be selected.',
  "ArrowLeft and ArrowRight aren't really implemented.",
  'Selected item remains the same.',
  'Force round number heights to simplify the math in the test.',
  'Add 10 fake files.',
  'Disable group by.',
  'Mock item size.',
  '',
  'Mock group by information.',
  'No group heading, so only the item height is used.',
  'Enable group by.',
  'Item 0 is in group #1/today, nothing is above it.',
  'Item 1 is in group #1/today, 1 item above + 1 header.',
  'Item 2 is in group #2/yesterday, 2 items above + 1 header.',
  'Item 3 is in group #3/earlier_this_week, 3 items above + 2 headers.',
  'Item 4 is in group #3/earlier_this_week, 4 items above + 3 headers.',
  'Item 5 is in group #4/earlier_this_month, 5 items above + 3 headers.',
  'Item 6 is in group #4/earlier_this_month, 6 items above + 4 headers.',
  'Item 7 is in group #5/earlier_this_year, 7 items above + 4 headers.',
  'Item 8 is in group #5/earlier_this_year, 8 items above + 5 headers.',
  'Item 9 is in group #6/older, 9 items above + 5 headers.',
  'No group heading, so only the item height is used.',
  'Enable group by.',
  'A special case handled in file_table.js.',
  'Item 1 is in group #1/today, 9 items below + 5 headers.',
  'Item 1 is in group #2/yesterday, 8 items below + 4 headers.',
  'Item 1 is in group #3/earlier_this_week, 7 items below + 3 headers.',
  'Item 1 is in group #3/earlier_this_week, 6 items below + 3 headers.',
  'Item 1 is in group #4/earlier_this_month, 5 items below + 2 headers.',
  'Item 1 is in group #4/earlier_this_month, 4 items below + 2 headers.',
  'Item 7 is in group #5/earlier_this_year, 3 items below + 1 header.',
  'Item 8 is in group #5/earlier_this_year, 2 items below + 1 header.',
  'Item 9 is in group #6/older, 1 item below.',
  'No group heading.',
  'index      height      total height',
  '-----------------------------------',
  'Item 0       40            40',
  'Item 1       40            80',
  'Item 2       40            120',
  'Item 3       40            160',
  'Item 4       40            200',
  'Item 5       40            240',
  ... 61 more items
]
file_table_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Extracts column widths from the model.',
  'Verify that column visibility and width are correctly set when the visibility',
  'setting is toggled.',
  'The column under test.',
  'All columns should be visible to start.',
  'Test toggling visibility.',
  'Verify that the table layout does not drift when a column is repeatedly shown',
  'and hidden.',
  'The index of the column under test.',
  'Capture column widths.',
  'Total width should be invariant throughout.',
  'Hide a column, check total width.',
  'Show the column again, match the column widths to the original state.',
  'Hide the column again, match the column widths to the hidden state.',
  'Verify that table layout stays constant when the column config is exported',
  'and then restored, with no hidden columns.',
  'Change some column widths, then capture then.',
  'Export column config, restore it to the new model.',
  'Verify that table layout stays constant when the column config is exported',
  'and then restored, with a hidden column.',
  'The index of the column under test.',
  'Change some column widths, then capture then.',
  'Hide a column.',
  'Export column config, restore it to the new model.',
  'Hide the same column.',
  'Verify that table layout stays constant when the column config is exported',
  'with a hidden column but then restored with the column visible.',
  'The index of the column under test.',
  'Change some column widths, then capture then.',
  'Hide a column.',
  'Export column config, restore it to the new model.',
  'Restore column config while the test column is shown.',
  'Then hide it.',
  'Verify that table layout stays constant when the column config is exported',
  'with all columns visible but then restored with a hidden column.',
  'The index of the column under test.',
  'Change some column widths, then capture then.',
  'Verify the precondition.',
  'Export column config, restore it to the new model.',
  'Restore column config while the test column is hidden.',
  'Then show it.',
  "The rounding technique used in the implementation doesn't match floor() or",
  'ceil(), it diverges by +/- 1. So hard coding here.',
  'Reduce total with to 1/3 to Resizes columns proportionally.',
  'Should keep the minimum width.',
  'Make sure to take column snapshot. Required for setWidthAndKeepTotal.',
  'Attempt to expand the 3rd column exceeding the window.',
  'Should keep the minimum width.',
  'Total width = 500.'
]
file_tap_handler.ts [
  'Copyright 2017 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Processes touch events and calls back to the class user when tap events\n' +
    'defined by FileTapHandler.TapEvent are detected.\n' +
    'The user can choose to 1) handle the tap event, in which case this class\n' +
    'will suppress browser mouse event generation, or 2) not handle the event\n' +
    'to let it be handled by mouse event handlers.',
  'Whether the pointer is currently down and at the same place as the\n' +
    'initial position.',
  'If defined, the identifier of the active touch. Note that 0 is a valid\n' +
    'touch identifier.',
  'The index of the item which is being touched by the active touch. Valid\n' +
    'only when |activeTouchId_| is defined.',
  'Last touch X position in client co-ords.',
  'Last touch Y position in client co-ords.',
  'The absolute sum of all touch X deltas.',
  'The absolute sum of all touch Y deltas.',
  'Handles touch events. Calls touchend.preventDefault() if the |callback|\n' +
    "takes any action on the detected tap events to suppress the browser's\n" +
    'automatic conversion of touch events to mouse events:\n' +
    'browser events: touchstart > [touchmove] > touchend\n' +
    '... if touchend.preventDefault() not called ...\n' +
    'browser events: mouseover > mousedown > [mousemove] > mouseup\n' +
    '@param event Touch event.\n' +
    '@param index Index of the target item in the file list.\n' +
    '@param callback Called when a tap event is detected. Should return true if\n' +
    'it has taken any action, and false if it ignores the event.\n' +
    '@return True if a tap event was detected and the |callback| processed the\n' +
    'event. False otherwise.',
  'If the event is not cancelable, touch scrolling is active. Reset the',
  'touch tracking to disable tap event detection during scrolling.',
  'Only track the position of the single touch. However, we detect a',
  'two-finger tap for opening a context menu of the target.',
  'Allow some movement for two-finger taps, and none otherwise.',
  "If the touch has moved outside limits, it's no longer a tap.",
  'Mark as no longer being touched.',
  'Two-finger tap event is issued when either of the 2 touch points is',
  'released. Stop tracking the tap to avoid issuing duplicate events.',
  'The item at the touch start position is treated as the target item,',
  'rather than the one at the touch end position. Note that |index| is',
  'the latter.',
  'The item at the touch start position of the active touch is treated',
  'as the target item. In case of the two-finger tap, the first touch',
  'point points to the target.',
  'Resets the touch tracking state variables. Saves the |this.tapStarted_|\n' +
    'state first, then resets all tracking state variables.\n' +
    '@return The saved |this.tapStarted_| state or false if there is no active\n' +
    'touch Id.',
  'Given a list of Touches, find the one matching the active touch Id. Note\n' +
    'Chrome currently always uses 0 as the Id, so we end up always choosing\n' +
    'the first element in the list.\n' +
    '@param touches List of Touch objects to search.\n' +
    '@return Touch matching the active touch Id, or undefined if there is no\n' +
    'active touch Id or no match was found.',
  'The minimum duration of a tap to be recognized as long press and long tap.\n' +
    'This should be consistent with the Views of Android.\n' +
    'https://android.googlesource.com/platform/frameworks/base/+/HEAD/core/java/android/view/ViewConfiguration.java\n' +
    "Also this should also be consistent with Chrome's behavior for issuing\n" +
    'drag-and-drop events by touchscreen.',
  'Maximum movement of touch required to be considered a tap.',
  'The touch started and ended quickly, aka, both events have triggered:\n' +
    'touchstart and touchend.',
  "The touch started and took more than the threshold, it hasn't triggered\n" +
    'the touchend yet, but the LONG_PRESS is processed.',
  'The touchstart and the touchend have triggered and took more than the\n' +
    'threshold between the two.',
  'Similart to TAP but with exactly 2 fingers.'
]
file_tap_handler_unittest.ts [
  'Copyright 2017 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Callback should be called after touchend.',
  'A tap event should be emitted for a single tap.',
  'No tap event should be emitted for a single tap with movement.',
  'Wait for the long press threshold (500ms). No movement.',
  'A long press should be emitted if there was no movement.',
  'A long tap should be emitted if there was no movement.',
  'Exceeds the threshold (500ms) when added with the one above.',
  'No tap event should be emitted for a long tap with movement.',
  'case 1: Release the second touch point first.',
  'A two-finger tap event should be emitted, allowing for slight movement.',
  'case 2: Release the first touch point first.',
  'A two-finger tap event should be emitted.'
]
files_alert_dialog.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Alert dialog.',
  '',
  'Async version of show(). Resolves when the alert dialog is dismissed.'
]
files_confirm_dialog.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Confirm dialog.',
  'showModalElement Optional call to show the\n' +
    'modal <dialog> parent of |this| if needed.',
  'doneCallback Optional callback when |this|\n' +
    'is closed confirmed or cancelled via dialog buttons.',
  'focusCancelButton Set true if the cancel button\n' +
    'should be focused when the dialog is first displayed. Otherwise\n' +
    '(the default) the dialog will focus the confirm button.',
  '',
  "Before calling this, it's expected that this.parentNode_ was assigned to",
  'a <dialog> element.'
]
files_menu.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Menu item with ripple animation.',
  'Custom menu item can have sophisticated content (elements).',
  'This is hidden by default because most of the menu items require\n' +
    'neither the end icon nor the managed icon, so the component that\n' +
    'plans to use either end icon should explicitly make it visible.',
  'Override with standard menu item elements.',
  'Handles activate event.',
  "Perform ripple animation if it's activated by keyboard.",
  'Perform fade out animation.',
  "If activation was on a menu-item that hosts a sub-menu, don't animate",
  'Sets menu as animating. Pass value equal to true to set it as animating.',
  'Sets the menu item as animating. Pass value set to true to set this as\n' +
    'animating.',
  'Update hidden property if there is a pending change.',
  'Overrides hidden property to block the change of hidden property while\n' +
    'menu is animating.',
  'Sets or removes the `is-managed` attribute.',
  'Sets the `is-default` attribute.',
  'Toggles visibility of the `Managed by Policy` icon.'
]
gear_menu.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Selector used by tast tests to identify when the storage meter is empty.',
  'Promise to be resolved with volume space info.',
  'Initialize attributes.',
  '@param shouldHide Whether the providers gear menu item should be hidden or\n' +
    'not.',
  '@param spaceInfoPromise Promise to be fulfilled with space info.\n' +
    '@param showLoadingCaption Whether to show the loading caption or not.',
  'User has unlimited individual storage.'
]
grid.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This implements a grid control. Grid contains a bunch of\n' +
    "similar elements placed in multiple columns. It's pretty similar to the list,\n" +
    'except the multiple columns layout.',
  'Creates a new grid item element.',
  'Called when an element is decorated as a grid item.',
  'Creates a new grid element.',
  'The number of columns in the grid. Either set by the user, or lazy\n' +
    'calculated as the maximum number of items fitting in the grid width.',
  'Function used to create grid items.',
  'Initializes the element.',
  'Whether or not the rows on list have various heights.\n' +
    'Shows a warning at the setter because Grid does not support this.',
  'The number of columns determined by width of the grid and width of the\n' +
    'items.',
  "We should uncollapse margin, since margin isn't collapsed for",
  'inline-block elements according to css spec which are thumbnail items.',
  'Content fits within the client area (no scrollbar required).',
  "If the content doesn't fit within the client area, the number of",
  "columns should be calculated with consideration for scrollbar's width.",
  'Measure and cache client width and height with and without scrollbar.\n' +
    'Must be updated when offsetWidth and/or offsetHeight changed.',
  'Check changings that may affect number of columns.',
  'Column number may depend on whether scrollbar is present or not.',
  'At first make sure there is no scrollbar and calculate clientWidth',
  '(triggers reflow).',
  'If clientWidth changed then previously scrollbar was shown.',
  'Show scrollbar and recalculate clientWidth (triggers reflow).',
  'The number of columns in the grid. If not set, determined automatically\n' +
    'as the maximum number of items fitting in the grid width.',
  'The top position of the item inside the list, not taking into account lead\n' +
    'item. May vary in the case of multiple columns.\n' +
    '@param index The index of the item.',
  '@param index The index of the item.\n' +
    '@return The row of the item. May vary in the case of multiple columns.',
  '@param row The row.\n@return The index of the first item in the row.',
  'Creates the selection controller to use internally.\n' +
    '@param sm The underlying selection model.\n' +
    '@return The newly created selection controller.',
  'Calculates the number of items fitting in the given viewport.\n' +
    '@param scrollTop The scroll top position.\n' +
    '@param clientHeight The height of viewport.\n' +
    '@return The index of first item in view port, The number of items, The item\n' +
    'past the last.',
  'Merges list items. Calls the base class implementation and then puts\n' +
    'spacers on the right places.\n' +
    '@param firstIndex The index of first item, inclusively.\n' +
    '@param lastIndex The index of last item, exclusively.',
  "Spacer found on a place it mustn't be.",
  'Invisible pinned item could be outside of the',
  '[firstIndex, lastIndex). Ignore it.',
  'Leave the spacer on its place.',
  'Insert spacer.',
  'Returns the height of after filler in the list.\n' +
    '@param lastIndex The index of item past the last in viewport.',
  'We calculate the row of last item, and the row of last shown item.',
  'Returns true if the child is a list item.\n' +
    '@param child Child of the list.\n' +
    '@return True if a list item.',
  'Non-items are before-, afterFiller and spacers added in mergeItems.',
  'Force recalculation.',
  'Creates a selection controller that is to be used with grids.',
  'Creates a selection controller that is to be used with grids.\n' +
    '@param selectionModel The selection model to interact with.\n' +
    '@param grid The grid to interact with.',
  'Check if accessibility is enabled: if ChromeVox is running\n' +
    '(which provides spoken feedback for accessibility), make up/down\n' +
    "behave the same as left/right. That's because the 2-dimensional\n" +
    "structure of the grid isn't exposed, so it makes more sense to a\n" +
    'user who is relying on spoken feedback to flatten it.',
  'Returns the index below (y axis) the given element.\n' +
    '@param index The index to get the index below.\n' +
    '@return The index below or -1 if not found.',
  'Returns the index above (y axis) the given element.\n' +
    '@param  index The index to get the index above.\n' +
    '@return  The index below or -1 if not found.',
  'Returns the index before (x axis) the given element.\n' +
    '@param index The index to get the index before.\n' +
    '@return The index before or -1 if not found.',
  'Returns the index after (x axis) the given element.\n' +
    '@param index The index to get the index after.\n' +
    '@return The index after or -1 if not found.'
]
grid_unittest.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Item width equals 0.',
  'No item in the list.',
  'Client width is smaller than item width.',
  'Client height can fit two rows.',
  'Client height can not fit two rows. A scroll bar is needed.',
  'Can not fit two columns due to the scroll bar.',
  'Can fit two columns due to uncollapse margin.',
  'Can not fit two columns due to margin.',
  'Can fit two columns due to uncollapse margin.',
  'Can not fit two columns due to margin on left and right side.',
  'Can fit two columns as (22-2=)20px width is available for grid items.',
  'Can not fit two columns due to bigger horizontal padding.'
]
import_crostini_image_dialog.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'ImportCrostiniImageDialog is used as the handler for .tini files.\n' +
    'Creates dialog in DOM.',
  '@param parentNode Node to be parent for this dialog.',
  'Shows the dialog.'
]
install_linux_package_dialog.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'InstallLinuxPackageDialog is used as the handler for .deb files.',
  'Creates dialog in DOM tree.',
  'The OK button normally dismisses the dialog, so add a button we can',
  'customize.',
  'Need to copy the whole sub tree because we need child elements.',
  'We have child elements inside the button, setting',
  'textContent of the button will remove all children.',
  'Shows the dialog.',
  'We re-use the same object, so reset any visual state that may be',
  'changed.',
  "Resets the state of the details frame to just contain the 'Details'\n" +
    'label, then appends |message| if non-empty.\n' +
    '@param message The (optional) message to display.',
  'Updates the dialog with the package info. `linuxPackageInfo` holds the\n' +
    'retrieved package info.',
  'Summary and description are almost always set, but handle the case',
  "where they're missing gracefully.",
  'Allow install now.',
  "@param details Array with pairs:\n['label', 'value'].",
  'Starts installing the Linux package.',
  'Add the event listener first to avoid potential races.',
  'The callback for installLinuxPackage(). Progress updates and completion\n' +
    'for successfully started installations will be displayed in a\n' +
    'notification, rather than the file manager.',
  "Currently we always display a generic error message. Eventually we'll",
  "want a different message for the 'install_already_active' case, and to",
  'surface the provided failure reason if one is provided.'
]
install_linux_package_dialog_unittest.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Show dialog and verify that the install button is disabled.',
  'The install button should become enabled once info is ready.'
]
list.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This implements a list control.',
  'Whether a mouse event is inside the element viewport. This will return\n' +
    'false if the mouseevent was generated over a border or a scrollbar.\n' +
    '@param el The element to test the event with.\n' +
    '@param e The mouse event.',
  'Creates a new list element.',
  'Measured size of list items. This is lazily calculated the first time it\n' +
    'is needed. Note that lead item is allowed to have a different height, to\n' +
    'accommodate lists where a single item at a time can be expanded to show\n' +
    'more detail.',
  'Whether or not the list is auto-expanding. If true, the list resizes\n' +
    'its height to accommodate all children.',
  'Whether or not the rows on list have various heights. If true, all the\n' +
    'rows have the same fixed height. Otherwise, each row resizes its height\n' +
    'to accommodate all contents.',
  'Whether or not the list view has a blank space below the last row.',
  'Function used to create grid items.',
  'Cached item for measuring the default item size by measureItem().',
  'Maps the index to the ListItem.',
  "Maps the index to the ListItem's height.",
  'Managed by DragSelector',
  'Function used to create grid items.',
  'The data model driving the list.',
  'The selection model to use.',
  'Whether or not the list auto-expands.',
  'Whether or not the rows on list have various heights.',
  'Convenience alias for selectionModel.selectedItem',
  'Convenience alias for selectionModel.selectedItems',
  'b/307500990 somehow this was getting invalid indexes.',
  'The HTML elements representing the items.',
  'Returns true if the child is a list item. Subclasses may override this\n' +
    'to filter out certain elements.',
  'When making a lot of updates to the list, the code could be wrapped in\n' +
    'the startBatchUpdates and finishBatchUpdates to increase performance.\n' +
    'Be sure that the code will not return without calling endBatchUpdates\n' +
    'or the list will not be correctly updated.',
  'See startBatchUpdates.',
  'Initializes the element.',
  'Add fillers.',
  'Make list focusable',
  '@param item The list item to measure.\n' +
    '@return The height of the given item. If the fixed height on CSS\n' +
    "is set by 'px', uses that value as height. Otherwise, measures the\n" +
    'size.',
  'The height of default item, measuring it if necessary.',
  '@param index The index of the item.\n' +
    '@return The height of the item, measuring it if necessary.',
  'If |this.fixedHeight_| is true, all the rows have same default height.',
  'The height and width of default item, measuring it if necessary.',
  'Creates an item (dataModel.item(0)) and measures its height. The item\n' +
    'is cached instead of creating a new one every time..\n' +
    '@param {ListItem=} item The list item to use to do the measuring. If this\n' +
    'is not provided an item will be created based on the first value in the\n' +
    'model.\n' +
    '@return  The height and width of the item, taking margins into account, and\n' +
    'the top, bottom, left and right margins themselves.',
  'Handle margin collapsing.',
  'Callback for the double click event.\n@param e The mouse event object.',
  'Callback for mousedown and mouseup events.\n' +
    '@param e The mouse event object.',
  'If the target was this element we need to make sure that the user did',
  'not click on a border or a scrollbar.',
  'Called when an element in the list is focused. Marks the list as having\n' +
    "a focused element, and dispatches an event if it didn't have focus.\n" +
    '@param e The focus event.',
  'Called when an element in the list is blurred. If focus moves\n' +
    'outside the list, marks the list as no longer having focus and\n' +
    'dispatches an event.',
  'Returns the list item element containing the given element, or null if\n' +
    "it doesn't belong to any list item element.\n" +
    '@param element The element.\n' +
    '@return The list item containing `element`, or null.',
  'Handle a keydown event.',
  'Handle a scroll event.',
  'Handle touchmove/touchcancel events.',
  "Unlike the mouse events, we don't check if the touch is inside the",
  'viewport because of these reasons:',
  '- The scrollbars do not interact with touch.',
  '- touch* events are not sent to this element when tapping or',
  'dragging window borders by touch.',
  'Callback from the selection model. We dispatch {@code change} events\n' +
    'when the selection changes.\n' +
    '@param event Event with change info.\n' +
    '@private',
  'Handles a change of the lead item from the selection model.\n' +
    '@param event The property change event.',
  'If the lead item has a different height than other items, then we',
  'may run into a problem that requires a second attempt to scroll',
  'it into view. The first scroll attempt will trigger a redraw,',
  'which will clear out the list and repopulate it with new items.',
  'During the redraw, the list may shrink temporarily, which if the',
  'lead item is the last item, will move the scrollTop up since it',
  'cannot extend beyond the end of the list. (Sadly, being scrolled to',
  'the bottom of the list is not "sticky.") So, we set a timeout to',
  'rescroll the list after this all gets sorted out. This is perhaps',
  'not the most elegant solution, but no others seem obvious.',
  "This handles data model 'permuted' event.\n" +
    'this event is dispatched as a part of sort or splice.\n' +
    'We need to\n' +
    '- adjust the cache.\n' +
    '- adjust selection.\n' +
    '- redraw. (called in this.endBatchUpdates())\n' +
    'It is important that the cache adjustment happens before selection\n' +
    'model adjustments.\n' +
    "@param event The 'permuted' event.",
  '@param index The index of the item.\n' +
    '@return The top position of the item inside the list.',
  '@param index The index of the item.\n' +
    '@return The row of the item. May vary in the case of multiple columns.',
  '@param row The row.\n@return The index of the first item in the row.',
  'Ensures that a given index is inside the viewport.\n' +
    '@param index The index of the item to scroll into view.',
  'Function to adjust the tops of viewport and row.',
  'Function to adjust the bottoms of viewport and row.',
  'Check if the entire of given indexed row can be shown in the viewport.',
  '@return The rect to use for the context menu.',
  'Takes a value from the data model and finds the associated list item.\n' +
    '@param value The value in the data model that we want to get the list item\n' +
    'for.\n' +
    '@return The first found list item or null if not found.',
  'Find the list item element at the given index.\n' +
    '@param index The index of the list item to get.\n' +
    '@return The found list item or null if not found.',
  'Find the index of the given list item element.\n' +
    '@return  The index of the list item, or -1 if not found.',
  'Creates a new list item.\n' +
    '@param label The value to use for the item.\n' +
    '@return The newly created list item.',
  'Creates the selection controller to use internally.\n' +
    '@param sm The underlying selection model.\n' +
    '@return The newly created selection controller.',
  'Return the heights (in pixels) of the top of the given item index\n' +
    'within the list, and the height of the given item itself, accounting\n' +
    'for the possibility that the lead item may be a different height.\n' +
    '@param index The index to find the top height of.\n' +
    '@return  The heights for the given index.',
  'Find the index of the list item containing the given y offset (measured\n' +
    'in pixels from the top) within the list. In the case of multiple\n' +
    'columns, returns the first index in the row.\n' +
    '@param offset The y offset in pixels to get the index of.\n' +
    '@return The index of the list item. Returns the list size if given offset\n' +
    'exceeds the height of list.',
  'If offset exceeds the height of list.',
  'Estimates index.',
  'Searches the correct index.',
  'Return the number of items that occupy the range of heights between\n' +
    'the top of the start item and the end offset.\n' +
    '@param startIndex The index of the first visible item.\n' +
    '@param  endOffset The y offset in pixels of the end of the list.',
  'Calculates the number of items fitting in the given viewport.\n' +
    '@param scrollTop The scroll top position.\n' +
    '@param clientHeight The height of viewport.\n' +
    '@return The index of first item in view port, The number of items, The item\n' +
    'past the last.',
  'Merges list items currently existing in the list with items in the\n' +
    "range [firstIndex, lastIndex). Removes or adds items if needed. Doesn't\n" +
    'delete {@code this.pinnedItem_} if it is present (instead hides it if\n' +
    'it is out of the range).\n' +
    '@param firstIndex The index of first item, inclusively.\n' +
    '@param lastIndex The index of last item, exclusively.',
  'Emit synthetic event with cached item that is about to be restored.',
  'Ensures that all the item sizes in the list have been already cached.',
  'Adds temporary elements.',
  'If `listItems` is not on the list, appends it to the list and sets',
  'the flag.',
  'All mesurings must be placed after adding all the elements, to prevent',
  'performance reducing.',
  'Removes all the temporary elements.',
  'If the list item has been appended above, removes it.',
  'Returns the height of after filler in the list.\n' +
    '@param lastIndex The index of item past the last in viewport.',
  'Redraws the viewport.',
  'Save the previous positions before any manipulation of elements.',
  'Store all the item sizes into the cache in advance, to prevent',
  'interleave measuring with mutating dom.',
  ... 31 more items
]
list_container.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'List container for the file table and the grid view.',
  'The input element to rename entry.',
  'Spinner on file list which is shown while loading.',
  'Data model which is used as a placefolder in inactive file list. This is\n' +
    'set by FileManager.',
  'Selection model which is used as a placefolder in inactive file list.',
  'Whtehter to allow or cancel a context menu event.',
  'List container needs to know if the current active directory is Recent\n' +
    'or not so it can update groupBy filed accordingly.',
  '@param element The container element of the file list.\n' +
    '@param table File table.\n' +
    '@param grid File grid.\n' +
    '@param type The type of the main dialog.',
  "Overriding the default role 'list' to 'listbox' for better accessibility",
  'on ChromeOS.',
  'Ensure the list and grid are marked ARIA single select for save as.',
  'Avoid adding event listeners in the constructor because the ListContainer\n' +
    "isn't fully usable until setCurrentListType() is called.",
  'Disables context menu by long-tap when long-tap would transition to',
  'multi-select mode, but keep it enabled for two-finger tap.',
  'contextmenu event will be sent right after touchend.',
  'Notifies beginning of batch update to the UI.',
  'Notifies end of batch update to the UI.',
  'Sets the current list type.\n@param listType New list type.',
  "TODO(dzvorygin): style.display and dataModel setting order shouldn't",
  'cause any UI bugs. Currently, the only right way is first to set display',
  'style and only then set dataModel.',
  'Always sharing the data model between the detail/thumb views confuses',
  'them.  Instead we maintain this bogus data model, and hook it up to the',
  'view that is not in use.',
  'Finds list item element from the ancestor node.',
  'Focuses the active file list in the list container.',
  'Contextmenu event handler to prevent change of focus on long-tapping the\n' +
    'header of the file list.\n' +
    '@param e Menu event.',
  "sourceCapabilities isn't defined in TS, because it's experimental.",
  'Block context menu triggered by touch event unless either:',
  '- It is right after a multi-touch, or',
  '- We were already in multi-select mode, or',
  '- No items are selected (i.e. long-tap on empty area in the current',
  'folder).',
  'KeyDown event handler for the div#list-container element.\n' +
    '@param event Key event.',
  'Ignore keydown handler in the rename input box.',
  'KeyPress event handler for the div#list-container element.\n' +
    '@param event Key event.',
  'Ignore keypress handler in the rename input box.',
  'Keep the order of this in sync with FileManagerListType in\n' +
    'tools/metrics/histograms/enums.xml.\n' +
    'The array indices will be recorded in UMA as enum values. The index for each\n' +
    'root type should never be renumbered nor reused in this array.'
]
list_item.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The next id suffix to use when giving each item an unique id.',
  'Creates a new list item element.',
  "This item's index in the containing list.",
  'Plain text label.',
  "This item's index in the containing list.",
  'Whether the item is the lead in a selection. Setting this does not update\n' +
    'the underlying selection model. This is only used for display purpose.',
  'Whether the item is selected. Setting this does not update the underlying\n' +
    'selection model. This is only used for display purpose.',
  'Called when an element is decorated as a list item.'
]
list_selection_controller.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The selection controller that is to be used with lists. This is implemented\n' +
    'for vertical lists but changing the behavior for horizontal lists or icon\n' +
    'views is a matter of overriding `getIndexBefore()`, `getIndexAfter()`,\n' +
    '`getIndexAbove()` as well as `getIndexBelow()`.',
  '@param selectionModel The selection model to interact with.',
  'The selection model we are interacting with.',
  'Returns the index below (y axis) the given element.\n' +
    '@param index The index to get the index below.\n' +
    '@return The index below or -1 if not found.',
  'Returns the index above (y axis) the given element.\n' +
    '@param index The index to get the index above.\n' +
    '@return The index below or -1 if not found.',
  'Returns the index before (x axis) the given element. This returns -1\n' +
    'by default but override this for icon view and horizontal selection\n' +
    'models.\n' +
    '@param _index The index to get the index before.',
  'Returns the index after (x axis) the given element. This returns -1\n' +
    'by default but override this for icon view and horizontal selection\n' +
    'models.\n' +
    '@param index The index to get the index after.',
  'Returns the next list index. This is the next logical and should not\n' +
    'depend on any kind of layout of the list.\n' +
    '@param index The index to get the next index for.\n' +
    '@return The next index or -1 if not found.',
  'Returns the previous list index. This is the previous logical and should\n' +
    'not depend on any kind of layout of the list.\n' +
    '@param index The index to get the previous index for.\n' +
    '@return The previous index or -1 if not found.',
  '@return The first index.',
  '@return The last index.',
  'Called by the view when the user does a mousedown or mouseup on the\n' +
    'list.\n' +
    '@param e The browser mouse event.\n' +
    '@param index The index that was under the mouse pointer, -1 if none.',
  'On CrOS we always clear the selection if the user clicks a blank area.',
  'Selection is handled at mouseUp on windows/linux, mouseDown on mac.',
  'Toggle the current one and make it anchor index.',
  'Shift is done in mousedown.',
  'Right click for a context menu needs to not clear the selection.',
  'If the index is selected this is handled in mouseup.',
  'Called by the view when it receives either a touchstart, touchmove,\n' +
    'touchend, or touchcancel event.\n' +
    'Sub-classes may override this function to handle touch events separately\n' +
    'from mouse events, instead of waiting for emulated mouse events sent\n' +
    'after the touch events.\n' +
    '@param _e The event.\n' +
    '@param _index The index that was under the touched point, -1 if none.',
  'Do nothing.',
  'Called by the view when it receives a keydown event.\n' +
    '@param e The keydown event.',
  'If focus is in an input field of some kind, only handle navigation keys',
  "that aren't likely to conflict with input interaction (e.g., text",
  'editing, or changing the value of a checkbox or select).',
  'Just protect space (for toggling) for checkbox and radio.',
  'Protect all but the most basic navigation commands in anything',
  'else.',
  "Similarly, don't interfere with select element handling.",
  'Ctrl/Meta+A'
]
list_selection_model.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Creates a new selection model that is to be used with lists.',
  'Using a object/record and rely on the ascending order returned by iterating',
  'over its keys with `Object.keys()`.',
  'True if any item could be lead or anchor. False if only selected ones.',
  '@param length The number items in the selection.',
  'The number of items in the model.',
  'The selected indexes.\n' +
    'Setter also changes lead and anchor indexes if value list is nonempty.',
  'Mark the index as changed. If previously marked, then unmark,',
  'since it just got reverted to the original state.',
  'Mark the index as changed. If previously marked, then unmark,',
  'since it just got reverted to the original state.',
  'Convenience getter which returns the first selected index.\n' +
    'Setter also changes lead and anchor indexes if value is nonnegative.',
  'Returns the nearest selected index or -1 if no item selected.\n' +
    '@param index The origin index.',
  'If no index is provided, pick the first selected index if there is',
  'one.',
  'Selects a range of indexes, starting with `start` and ends with `end`.\n' +
    '@param start The first index to select.\n' +
    '@param end The last index to select.',
  'Swap if starts comes after end.',
  'Selects all indexes.',
  'Clears the selection',
  'Unselects all selected items.',
  'Sets the selected state for an index.\n' +
    '@param index The index to set the selected state for.\n' +
    '@param b Whether to select the index or not.',
  'End change dispatches an event which in turn may update the view.',
  'Whether a given index is selected or not.\n' +
    '@param index The index to check.\n' +
    '@return Whether an index is selected.',
  'This is used to begin batching changes. Call {@code endChange} when you\n' +
    'are done making changes.',
  'Call this after changes are done and it will dispatch a change event if\n' +
    'any changes were actually done.',
  'Calls delayed |dispatchPropertyChange|s, only when |leadIndex| or',
  '|anchorIndex| has been actually changed in the batch.',
  'The leadIndex is used with multiple selection and it is the index that\n' +
    'the user is moving using the arrow keys.',
  'Delays the call of dispatchPropertyChange if batch is running.',
  'The anchorIndex is used with multiple selection.',
  'Delays the call of dispatchPropertyChange if batch is running.',
  'Helper method that adjustes a value before assigning it to leadIndex or\n' +
    'anchorIndex.\n' +
    '@param index New value for leadIndex or anchorIndex.\n' +
    '@return Corrected value.',
  'On Mac and ChromeOS lead and anchor items are forced to be among',
  'selected items. This rule is not enforces until end of batch update.',
  'Whether the selection model supports multiple selected items.',
  'Adjusts the selection after reordering of items in the table.\n' +
    '@param permutation The reordering permutation.',
  'Will be adjusted in endChange.',
  'All selected items are deleted. We move selection to next item of',
  'last selected item, following it to its new position.',
  'Adjusts selection model length.\n@param length New selection model length.'
]
list_selection_model_test_util.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on',
  'Creates an array spanning a range of integer values.\n' +
    '@param start The first number in the range.\n' +
    '@param end The last number in the range inclusive.',
  'Modifies a selection model.\n' +
    '@param model The selection model to adjust.\n' +
    '@param index Starting index of the edit.\n' +
    '@param removed Number of entries to remove from the list.\n' +
    '@param added Number of entries to add to the list.'
]
list_selection_model_unittest.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on',
  '@param len size of the selection model.\n' +
    '@param dependentLeadItem inverse value for `independentLeadItem`\n' +
    'defaults to true.',
  'Remove 100 - 105',
  'Remove all'
]
list_single_selection_model.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Creates a new selection model that is to be used with lists. This only\n' +
    'allows a single index to be selected.',
  'True if any item could be lead or anchor. False if only selected ones.',
  '@param length The number items in the selection.',
  'The number of items in the model.',
  'The selected indexes.',
  'Convenience getter which returns the first selected index.\n' +
    'Setter also changes lead and anchor indexes if value is nonegative.',
  'Selects a range of indexes, starting with {@code start} and ends with\n' +
    '{@code end}.\n' +
    '@param start The first index to select.\n' +
    '@param end The last index to select.',
  'Only select first index.',
  'Selects all indexes.',
  'Select all is not allowed on a single selection model',
  'Clears the selection',
  'Unselects all selected items.',
  'Sets the selected state for an index.\n' +
    '@param index The index to set the selected state for.\n' +
    '@param b Whether to select the index or not.',
  'Only allow selection',
  'Whether a given index is selected or not.\n' +
    '@param index The index to check.\n' +
    '@return Whether an index is selected.',
  'This is used to begin batching changes. Call {@code endChange} when you\n' +
    'are done making changes.',
  'Call this after changes are done and it will dispatch a change event if\n' +
    'any changes were actually done.',
  'The leadIndex is used with multiple selection and it is the index that\n' +
    'the user is moving using the arrow keys.',
  'The anchorIndex is used with multiple selection.',
  'Whether the selection model supports multiple selected items.',
  'Adjusts the selection after reordering of items in the table.\n' +
    '@param permutation The reordering permutation.',
  'Adjusts selection model length.\n@param length New selection model length.'
]
list_single_selection_model_unittest.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on',
  '@param len size of the selection model.\n' +
    '@param dependentLeadItem inverse value for `independentLeadItem_`\n' +
    'defaults to true.'
]
list_unittest.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Add a header inside the list.',
  'Non-LI children should return null.',
  'It should return null for the list itself.',
  'Anything inside a LI should return the LI itself.'
]
menu.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Time from Date.now().',
  'Element for which menu is being shown.',
  'Initializes the menu element.',
  'Decorate the children as menu items.',
  'Adds menu item at the end of the list.\n' +
    '@param item Menu item properties.\n' +
    '@return The created menu item.',
  'Adds separator at the end of the list.',
  'Clears menu.',
  'Walks up the ancestors of |node| until a menu item belonging to this menu\n' +
    'is found.\n' +
    '@param node The node to start searching from.\n' +
    '@return The found menu item or undefined.',
  'Handles mouseover events and selects the hovered item.',
  'Handles mouseout events and deselects any selected item.\n' +
    '@param e The mouseout event.',
  "If there's a mouseup that happens quickly in about the same position,\n" +
    'stop it from propagating to items. This is to prevent accidentally\n' +
    "selecting a menu item that's created under the mouse cursor.\n" +
    '@param e A mouseup event on the menu (in capturing phase).',
  '@return Whether `e` can be trusted.',
  'The selected menu item or undefined if none.',
  'Focuses the selected item. If selectedIndex is invalid, set it to 0\nfirst.',
  'Find first visible item to focus by default.',
  'If the item is disabled we accept it, but try to find the next',
  'enabled item, but keeping the first disabled item.',
  'Menu length',
  'Returns whether the given menu item is visible.',
  `A "position: fixed" element won't have an offsetParent, so we have to`,
  'do the full style computation.',
  'Returns whether the menu has any visible items.\n' +
    '@return True if the menu has visible item. Otherwise, false.',
  'Inspect items in reverse order to determine if the separator above each',
  'set of items is required.',
  'This is the function that handles keyboard navigation. This is usually\n' +
    'called by the element responsible for managing the menu.\n' +
    '@param e The keydown event object.\n' +
    '@return Whether the event was handled be the menu.',
  'Edge case when there are no items.',
  'Edge case when needed to go the last item first.',
  '`i` may be negative(-1), so modulus operation and cycle below',
  "wouldn't work as assumed. This trick makes startPosition positive",
  "without altering it's modulo.",
  'Check not to enter into infinite loop if all items are hidden or',
  'disabled.',
  "Store |contextElement| since it'll be removed when handling the",
  "'activate' event.",
  'Updates menu items command according to context.\n' +
    '@param node Node for which to actuate commands state.',
  'Hide any separators without a visible item between them and the next',
  'separator or the end of the menu.',
  'The selected menu item.',
  'Selector for children which are menu items.'
]
menu_item.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Creates a new menu item element.',
  'Initializes the menu item.',
  "Adding the 'custom-appearance' class prevents widgets.css from changing",
  'the appearance of this element.',
  'Enable Text to Speech on the menu. Additionally, ID has to be set,',
  "since it is used in element's aria-activedescendant attribute.",
  'Creates a new menu separator element.\n@return The new separator element.',
  'The command associated with this menu item. If this is set to a string\n' +
    'of the form "#element-id" then the element is looked up in the document\n' +
    'of the command.',
  'The text label.',
  'Menu icon.',
  '@return Whether the menu item is a separator.',
  'Updates shortcut text according to associated command. If command has\n' +
    'multiple shortcuts, only first one is displayed.',
  'Handles mouseup events. This dispatches an activate event; if there is an\n' +
    'associated command, that command is executed.\n' +
    '@param e The mouseup event object.',
  'Only dispatch an activate event for left or middle click.',
  "Store |contextElement| since it'll be removed by {Menu} on handling",
  "'activate' event.",
  'Dispatch command event followed by executing the command object.',
  'Updates command according to the node on which this menu was invoked.\n' +
    '@param node Node on which menu was opened.',
  'Handles changes to the associated command.\n@param e The event object.',
  'Whether the menu item is disabled or not.',
  'Whether the menu item is hidden or not.',
  'Whether the menu item is selected or not.',
  'Whether the menu item is checked or not.',
  'Whether the menu item is checkable or not.',
  'Users complain they occasionally use doubleclicks instead of clicks\n' +
    '(http://crbug.com/140364). To fix it we freeze click handling for the\n' +
    'double-click time interval.\n' +
    '@param e Initial click event.',
  "Swallow the click since it's a click inside the double-click timeout.",
  'Stop tracking clicks and let regular handling.',
  "The following 'click' event (if e.type === 'mouseup') mustn't be taken",
  "into account (it mustn't stop tracking clicks). Start event listening",
  'after zero timeout.'
]
menu_unittest.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@param x The screenX coord of the mouseup event.\n' +
    '@param y The screenY coord of the mouseup event.\n' +
    '@return The return value is false if event is cancelable and at\n' +
    'least one of the event handlers which received event called\n' +
    'Event.preventDefault(). Otherwise it returns true.\n' +
    'https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent',
  'Stop mouseups at the same time and position.',
  'Allow mouseups with different positions but the same time.',
  'Allow mouseups with the same position but different times.',
  'Tests that if the command attributes are specified, they are copied to the\n' +
    'corresponding menuitem.',
  'Test 1: The case that the command label is set and other attributes copied.',
  'Confirms the label is copied from the command.',
  'Confirms the attributes are copied from the command.',
  'Test 2: The case that the command label is not set, and other attributes',
  'have default values.',
  'Confirms the label is not copied, keeping the original label.',
  'Confirms the attributes are copied from the command.',
  'Mark all menu items other than |hiddenItems| as visible and check that the\n' +
    'expected number of separators are visible.',
  'The separators at the ends are always hidden.',
  'Tests that separators are only displayed when there is a visible\n' +
    'non-separator item on both sides of it. Further, ensure that multiple\n' +
    'separators will not be displayed adjacent to each other.',
  'Tests that focusSelectedItem() ignores hidden and disabled items.',
  'Nothing is selected in the menu it should focus the first item.',
  'Focus the first item.',
  'Hide the first item, it should focus the second item.',
  'Focus the second item, index=1 is the separator.',
  'First item is visible but disabled, it should focus the second item.',
  'Focus the second item, index=1 is the separator.',
  'All items are visible but disabled, it should focus the first item.',
  'Focus the first item.',
  "If selectedIndex is already set, focusSelectedItem doesn't change it.",
  'Focus remains in the first item.',
  'Tests that MenuItem defaults to tabindex=-1.',
  'Defaults to -1.',
  'Keeps previously set tabindex.',
  "Separator doesn't get tabindex."
]
multi_menu.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Creates a menu that supports sub-menus.\n' +
    'This works almost identically to Menu apart from supporting\n' +
    'sub menus hanging off a <cr-menu-item> element. To add a sub menu\n' +
    "to a top level menu item, add a 'sub-menu' attribute which has as\n" +
    'its value an id selector for another <cr-menu> element.\n' +
    '(e.g. <cr-menu-item sub-menu="other-menu">).',
  'Whether a sub-menu is positioned on the left of its parent.\n' +
    'Used to direct the arrow key navigation.',
  'Property that hosts sub-menus for filling with overflow items.\n' +
    'Used for menu-items that overflow parent menu.',
  'Reference to the menu that the user is currently navigating.\n' +
    'Used to route events to the correct menu.',
  'Sub menu being used.',
  'Menu item hosting a sub menu.',
  'Padding used when restricting menu height when the window is too small\n' +
    'to show the entire menu.\n' +
    'Padding on cr.menu + 2px.',
  'AbortController allows for global aborting of all event listeners and thus\n' +
    'their removal from the DOM.',
  'Handles event callbacks.\n@param e The event object.',
  "Don't activate if there's a sub-menu to show",
  'Show the sub menu if needed.',
  'If the event was fired by the sub-menu, send an activate event to',
  'the top level menu.',
  "We only move off the sub-menu if we're on the top item",
  "Hide any showing sub-menu if we're moving in the parent.",
  'This event handler is used to redirect keydown events to\n' +
    "the top level and sub-menus when they're active.\n" +
    'Menu has a handleKeyDown() method and to support\n' +
    'sub-menus we monkey patch the cr.ui.menu call via\n' +
    'this.handleKeyDown_() and if any sub menu is active, by\n' +
    'calling the Menu method directly.\n' +
    '@param e The keydown event object.\n' +
    '@return Whether the event was handled be the menu.',
  'Position the sub menu adjacent to the cr-menu-item that triggered it.\n' +
    '@param item The menu item to position against.\n' +
    '@param subMenu The child (sub) menu to be positioned.',
  'The sub-menu needs to sit aligned to the top and side of',
  'the menu-item passed in. It also needs to fit inside the viewport',
  'See if it fits on the right, if not position on the left',
  "if there's more room on the left.",
  'Allow some menu overlap if sub menu will be clipped off.',
  'Allow overlap on the right to reduce sub menu clip.',
  'Size the subMenu to fit inside the height of the viewport',
  'Always set the maximum height so that expanding the window',
  'allows the menu height to grow crbug/934207',
  'Let the browser deal with scroll bar generation.',
  'Get the subMenu hanging off a menu-item if it exists.\n' +
    '@param item The menu item.',
  'Display any sub-menu hanging off the current selection.',
  'Find any sub-menu hanging off the event target and show/hide it.\n' +
    '@param e The event object.',
  'Hide any other sub menu being shown.',
  "If we're on top of the sub-menu, we don't want to dismiss it",
  'Change the selection from the top level menu to the first item\n' +
    'in the subMenu passed in.\n' +
    '@param subMenu sub-menu that should take selection.',
  'Change the selection from the sub menu to the top level menu.\n' +
    '@param subMenu sub-menu that should lose selection.',
  'Add event listeners to any sub menus.',
  'When the menu is shown we steal all keyboard events.',
  'Handle mouse-over to trigger sub menu opening on hover.',
  'Hides any sub-menu that is active.',
  'Hide any visible sub-menus first',
  'Check if a DOM element is containd within the main top\n' +
    'level menu or any sub-menu hanging off the top level menu.\n' +
    '@param node Node being tested for containment.'
]
multi_menu_button.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Enum for type of hide. Delayed is used when called by clicking on a\n' +
    'checkable menu item.',
  'A button that displays a MultiMenu (menu with sub-menus).',
  'Property that hosts sub-menus for filling with overflow items.\n' +
    'Used for menu-items that overflow parent menu.',
  'Padding used when restricting menu height when the window is too small\n' +
    'to show the entire menu.',
  'Initializes the menu button.',
  'Listen to the touch events on the document so that we can handle it',
  'before cancelled by other UI components.',
  "Adding the 'custom-appearance' class prevents widgets.css from",
  'changing the appearance of this element.',
  'Align the menu if the button moves. When the button moves, the parent',
  'container resizes.',
  'Checks if the menu(s) should be closed based on the target of a mouse\n' +
    'click or a touch event target.\n' +
    '@param e The event object.',
  'All menus are dismissed when clicking outside the menus. If we are',
  'showing a sub-menu, we need to detect if the target is the top',
  'level menu, or in the sub menu when the sub menu is being shown.',
  'The button is excluded here because it should toggle show/hide the',
  'menu and handled separately.',
  'Display any sub-menu hanging off the current selection.',
  'Do we have a menu visible to handle a keyboard event.\n' +
    "@return True if there's a visible menu.",
  'Handles event callbacks.',
  'Touch on the menu button itself is ignored to avoid that the menu',
  'opened again by the mousedown event following the touch events.',
  'Only show the menu when using left mouse button.',
  'Prevent the button from stealing focus on mousedown unless',
  'focus is on another button or cr-input element.',
  'Hide the focus ring on mouse click.',
  'If a menu is visible we let it handle keyboard events intended for',
  'the menu.',
  'Show the focus ring on keypress.',
  "Show the focus ring on focus - if it's come from a mouse event,",
  'the focus ring will be hidden in the mousedown event handler,',
  'executed after this.',
  'No need to hide the focus ring anymore, without having focus.',
  "If the menu-item hosts a sub-menu, don't hide",
  'Keyboard. Take focus to continue keyboard operation.',
  "Don't allow elements further up in the DOM to show their menus.",
  "Don't allow double click events to propagate.",
  'Shows the menu.\n' +
    '@param shouldSetFocus Whether to set focus on the\n' +
    'selected menu item.\n' +
    '@param mousePos The position of the mouse\n' +
    'when shown (in screen coordinates).',
  'Track element for which menu was opened so that command events are',
  'dispatched to the correct element.',
  'Toggle aria and open state.',
  'When the menu is shown we steal all keyboard events.',
  'Hides the menu. If your menu can go out of scope, make sure to call this\n' +
    'first.\n' +
    '@param hideType Type of hide.\n' +
    'default: HideType.INSTANT.',
  'Hides the menu. If your menu can go out of scope, make sure to call this\n' +
    'first.\n' +
    '@param hideType Type of hide.\n' +
    'default: HideType.INSTANT.',
  'Hides the menu. If your menu can go out of scope, make sure to call this\n' +
    'first.\n' +
    '@param shouldTakeFocus Moves the focus to the button if true.\n' +
    '@param hideType Type of hide.\n' +
    'default: HideType.INSTANT.',
  'Toggle aria and open state.',
  'Whether the menu is shown.',
  'Positions the menu below the menu button. We check the menu fits\n' +
    'in the viewport, and enable scrolling if required.',
  "Clear any maxHeight we've set from previous calls into here.",
  'Check if menu is larger than the viewport and adjust its height to',
  'enable scrolling if so. Note: style.bottom would have been set to 0.',
  'Limit the height to fit in the viewport.',
  'If the menu is too tall, position 2px from the bottom of the viewport',
  'so users can see the end of the menu (helps when scroll is needed).',
  'Let the browser deal with scroll bar generation.',
  'Handles the keydown event for the menu button.'
]
multi_menu_unittest.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Set up test components.',
  'Multiple tests rely on the window height, reset between tests to avoid',
  'interference.',
  'Install cr.ui <command> elements and <cr-menu>s on the page.',
  'Initialize cr.ui.Command with the <command>s.',
  "Send a 'mouseover' event to the element target of a query.\n" +
    '@param targetQuery Query to specify the element.',
  "Send a 'mousedown' event to the element target of a query.\n" +
    '@param targetQuery Query to specify the element.',
  "Send a 'mouseover' event to the element target of a query.\n" +
    '@param targetQuery Query to specify the element.\n' +
    "@param x Position of the event in 'X'.\n" +
    "@param y Position of the event in 'X'.",
  "Send a 'keydown' event to the element target of a query.\n" +
    '@param targetQuery Query to specify the element.\n' +
    '@param key property value for the key.',
  "Tests that making the top level menu visible doesn't\n" +
    'cause the sub-menu to become visible.',
  'Check the top level menu is not hidden.',
  'Check the sub-menu is hidden',
  "Tests that a 'mouseover' event on top of normal menu-items\n" +
    "doesn't cause the sub-menu to become visible.",
  "Tests that 'mouseover' on a menu-item with 'show-submenu' command\n" +
    'causes the sub-menu to become visible.',
  "Tests that 'mouseout' with the mouse over the top level\n" +
    'menu causes the sub-menu to hide.',
  'Get the location of one of our menu-items to send with the event.',
  "Tests that 'mouseout' with the mouse over the sub-menu\n" +
    "doesn't hide the sub-menu.",
  'Get the location of our sub-menu to send with the event.',
  "Tests that selecting a menu-item with a 'show-submenu' command\n" +
    "doesn't cause the sub-menu to become visible.",
  "Tests that selecting a menu-item with a 'show-submenu' command\n" +
    'followed by calling the showSubMenu() method causes the\n' +
    'sub-menu to become visible.\n' +
    '(Note: in an application, this would happen from a command\n' +
    'being executed rather than a direct showSubMenu() call.)',
  'Tests that a mouse click outside of a menu and sub-menu causes\n' +
    'both menus to hide.',
  'Tests that shrinking the window height will limit\n' +
    'the height of the sub-menu.',
  "Reduce window innerHeight so sub-menu won't fit.",
  'Navigate from sub-menu to the parent menu.',
  'Call the internal hide method, then re-show it',
  'to force the resizing behavior.',
  'Tests that growing the window height will increase\n' +
    'the height of the sub-menu.',
  'Remember the full size of the sub-menu',
  'Make sure the sub-menu has been reduced in height.',
  'Make the window taller than the sub-menu plus padding.',
  'Navigate from sub-menu to the parent menu.',
  'Call the internal hide method, then re-show it',
  'to force the resizing behavior.',
  'Test that the height of the sub-menu is the same as',
  'the height at the start of this test (before we',
  'deliberately shrank it).',
  'Utility function to prepare the menu and sub-menu for keyboard tests.',
  'Make sure the both of the menus are active.',
  'Re-enable the menu-items, since showMenu() disables',
  'all of them due to the canExecute() tests all returning',
  "false since we're just a unit test harness. This is",
  'needed since the arrow key handlers skip over disabled items.',
  'Tests that arrow navigates from main menu to sub-menu.',
  'Check that the hosting menu-item is not selected.',
  'Check that the sub-menu has taken selection.',
  'Tests that arrow left moves back to the top level menu\n' +
    'only when the selected sub-menu item is the first one.',
  'Use the arrow key to go to the next sub-menu item.',
  'Try to navigate from sub-menu to the parent menu.',
  "Check that parent menu hosting item didn't get selected.",
  'Check that selection is still on the sub-menu item.',
  'Navigate up to the first sub-menu item.',
  'Check that the first sub-menu item is selected.',
  'Navigate back to the parent menu.',
  'Check selection has moved back to the parent menu.',
  'Tests that arrow up on the top level menu hides the\n' +
    'sub menu when the sub-menu is visible.',
  'Check that the hosting menu-item is not selected.',
  'Navigate from sub-menu to the parent menu.',
  'Check that the hosting menu-item is not selected.',
  'Navigate up the main menu.',
  'Check that the sub-menu has been hidden.',
  'Tests that the top level menu is resized when the parent\n' +
    'window is too small to fit in without clipping.',
  "Reduce window innerHeight so the menu won't fit.",
  'Call showMenu() which will first hide it, then re-open',
  'it to force the resizing behavior.',
  'Tests that mousedown the menu button grabs focus.',
  'Set focus on a div element.',
  'Send mousedown event to the menu button.',
  'Verify that the previously focused element still has focus.',
  'Set focus on a button element.',
  '*   */',
  'Send mousedown event to the menu button.',
  'Verify that the previously focused button has lost focus.',
  'Verify the menu button has taken focus.',
  'Set focus on a cr-input element.',
  '*   */',
  'Send mousedown event to the menu button.',
  'Verify the cr-input element has lost focus.',
  'Verify the menu button has taken focus.',
  'Tests that opening a sub menu hides any showing sub menu.',
  'Check the previously shown sub menu is hidden.',
  'Check the second sub menu is visible.',
  'Tests that a keydown event that is not intended for the menu will not be\n' +
    'consumed by the menu.',
  'The event should be received by the `document.body` after it is ignored by',
  'the menu.',
  'Check this is the right keydown event.',
  'Confirm this is not a menu event.',
  'Send the event to the menu.',
  'Wait for the event to be received by the `document.body`.'
]
position_util.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file provides utility functions for position popups.',
  'Enum for defining how to anchor a popup to an anchor element.',
  "The popup's right edge is aligned with the left edge of the anchor.\n" +
    "The popup's top edge is aligned with the top edge of the anchor.",
  "The popop's left edge is aligned with the right edge of the anchor.\n" +
    "The popup's top edge is aligned with the top edge of the anchor.",
  "The popop's bottom edge is aligned with the top edge of the anchor.\n" +
    "The popup's left edge is aligned with the left edge of the anchor.",
  "The popop's top edge is aligned with the bottom edge of the anchor.\n" +
    "The popup's left edge is aligned with the left edge of the anchor.",
  'Helper function for positionPopupAroundElement and positionPopupAroundRect.\n' +
    '@param anchorRect The rect for the anchor.\n' +
    '@param popupElement The element used for the popup.\n' +
    '@param type The type of anchoring to do.\n' +
    '@param invertLeftRight [Optional] Whether to invert the right/left\n' +
    'alignment.',
  "For 'fixed' positioned popups, the available rectangle should be based",
  'on the viewport rather than the document.',
  'Flip BEFORE, AFTER based on alignment.',
  'Flip type based on available size',
  'flipping done',
  'Reset all directions.',
  'Primary direction',
  'Secondary direction',
  'align right edges',
  'align left edges',
  'not enough room on either side',
  'align left edges',
  'align right edges',
  'not enough room on either side',
  'align top edges',
  'align bottom edges',
  'not enough room on either side',
  'Positions a popup element relative to an anchor element. The popup element\n' +
    'should have position set to absolute and it should be a child of the body\n' +
    'element.\n' +
    '@param anchorElement The element that the popup is anchored\n' +
    'to.\n' +
    '@param popupElement The popup element we are positioning.\n' +
    '@param type The type of anchoring we want.\n' +
    '@param invertLeftRight [Optional] Whether to invert the right/left\n' +
    'alignment.',
  'Positions a popup around a point.\n' +
    '@param x The client x position.\n' +
    '@param y The client y position.\n' +
    '@param popupElement The popup element we are positioning.\n' +
    '@param anchorType [Optional] The type of anchoring we want.'
]
position_util_unittest.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on',
  'ensure enough below',
  'ensure not enough below',
  'ensure enough to the right',
  'ensure not enough below',
  'ensure not enough below'
]
progress_center_panel.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Progress center panel.',
  'Reference to the feedback panel host.',
  'Items that are progressing, or completed.\nKey is item ID.',
  'Callback to be called with the ID of the progress item when the cancel\n' +
    'button is clicked.',
  'Callback to be called with the ID of the error item when user pressed\n' +
    'dismiss button of it.',
  'Defer showing in progress operation to avoid displaying quick\n' +
    'operations, e.g. the notification panel only shows if the task is\n' +
    'processing longer than this time.',
  'Timeout for removing the notification panel, e.g. the notification\n' +
    'panel will be removed after this time.',
  'Generate source string for display on the feedback panel.\n' +
    "@param item Item we're generating a message for.\n" +
    '@param info Cached information to use for formatting.\n' +
    '@return String formatted based on the item state.',
  'Single items:',
  'Multiple items:',
  'Test if we have an empty or all whitespace string.\n' +
    "@param candidate String we're checking.\n" +
    "@return true if there's content in the candidate.",
  'Generate primary text string for display on the feedback panel.\n' +
    'It is used for TransferDetails mode.\n' +
    "@param item Item we're generating a message for.\n" +
    '@param info Cached information to use for formatting.\n' +
    '@return String formatted based on the item state.',
  'Source and primary string are the same for missing destination.',
  'fall through',
  'Single items:',
  'Multiple items:',
  'General error',
  'Generates the secondary string to display on the feedback panel.\n' +
    'The string can be empty in case of errors or tasks with no\n' +
    'remaining time set. In case of data protection policy related\n' +
    'notifications, the message provides more info about the state of the task.\n' +
    'Otherwise the message shows formatted remaining task time.\n' +
    'The time format in hour and minute and the durations more\n' +
    'than 24 hours also formatted in hour.\n' +
    'As ICU syntax is not implemented in web ui yet (crbug/481718), the i18n\n' +
    'of time part is handled using Intl methods.\n' +
    "@param item Item we're generating a message for.\n" +
    '@return Secondary string message.',
  "General error doesn't have secondary text.",
  "Return empty string for unsupported operation (which didn't set",
  'remaining time).',
  'Check if remaining time is valid (ie finite and positive).',
  'Return empty string for invalid remaining time in non progressing',
  'state.',
  'Process item updates for feedback panels.\n' +
    '@param item Item being updated.\n' +
    '@param newItem Item updating with new content.',
  'Show the panel only for long running operations.',
  "TODO(lucmult): Remove `userData`, it's only used in",
  'generatePrimaryString_() which already refers to `item`.',
  'Certain visual signals have the functionality to display an extra',
  'button with an arbitrary callback.',
  'On progress panels, make the cancel button aria-label more useful.',
  'The extra-button currently acts as a dismissal to invoke the',
  'dismiss and error item callbacks as well.',
  'Create a completed panel for copies, moves, deletes and formats.',
  "Delete after 4 seconds, doesn't matter if it's manually deleted",
  'before the timer fires, as removePanelItem handles that case.',
  'Drop through to remove the progress panel.',
  'falls through',
  'Remove the feedback panel when complete.',
  'Make sure the panel is attached so it shows immediately.',
  'Starts the item update and checks state changes.\n' +
    '@param item Item containing updated information.',
  'Compares the current state and the new state to check if the update is',
  'valid or not.',
  'Enterprise Connectors scanning is usually triggered in the beginning',
  'except when DLP files restrictions are enabled as well. In this case,',
  'DLP may pause the IOTask to show a warning and the panel item is',
  'dismissed when the user proceeds or cancels.',
  'Updates an item to the progress center panel.\n' +
    '@param item Item including new contents.',
  'Update an open view item.',
  'Called by background page when an error dialog is dismissed.\n' +
    '@param id Item id.'
]
providers_menu.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Fills out the menu for mounting or installing new providers.',
  '@param providerId ID of the provider.\n' +
    '@param iconSet Set of icons for the provider.\n' +
    '@param name Already localized name of the provider.',
  'Sends an update event to the sub menu to trigger a reload of its content.'
]
splitter.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This implements a splitter element which can be used to resize\n' +
    'elements in split panes.\n' +
    'The parent of the splitter should be an hbox (display: -webkit-box) with at\n' +
    'least one previous element sibling. The splitter controls the width of the\n' +
    'element before it.\n' +
    '<div class=split-pane>\n' +
    '<div class=left>...</div>\n' +
    '<div class=splitter></div>\n' +
    '...\n' +
    '</div>',
  'Creates a new splitter element.',
  'Initializes the element.',
  '@param resizeNext True if resize the next element. By default, splitter\n' +
    'resizes previous (left) element.',
  'Starts the dragging of the splitter. Adds listeners for mouse or touch\n' +
    'events and calls splitter drag start handler.\n' +
    '@param clientX X position of the mouse or touch event that\n' +
    'started the drag.\n' +
    '@param isTouchEvent True if the drag started by touch event.',
  'Case of concurrent drags.',
  'Another touch start (we somehow missed touchend or touchcancel).',
  'Use capturing events on the document to get events when the mouse',
  'leaves the document.',
  'Ends the dragging of the splitter. Removes listeners set in startDrag\n' +
    'and calls splitter drag end handler.',
  'Calculate width to resize target element.\n' +
    '@param deltaX horizontal drag amount',
  'Handles the mousedown event which starts the dragging of the splitter.',
  'Default action is to start selection and to move focus.',
  'Handles the touchstart event which starts the dragging of the splitter.',
  'Handles the mousemove event which moves the splitter as the user moves\n' +
    'the mouse.',
  'Handles the touch move event.\n@param e The touch event.',
  'Common part of handling mousemove and touchmove. Calls splitter drag\n' +
    'move handler.\n' +
    '@param clientX X position of the mouse or touch event.',
  'Handles the mouse up event which ends the dragging of the splitter.',
  'Handles start of the splitter dragging. Saves current width of the\n' +
    'element being resized.',
  'Use the computed width style as the base so that we can ignore what',
  'box sizing the element has. Add the difference between offset and',
  'client widths to account for any scrollbars.',
  'Handles splitter moves. Updates width of the element being resized.\n' +
    '@param deltaX The change of splitter horizontal position.',
  "Handles end of the splitter dragging. This fires a 'resize' event if\n" +
    'the size changed.',
  'Check if the size changed.'
]
splitter_unittest.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
table.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This implements a table control.',
  'Creates a new table element.',
  'The table data model.',
  'The list of table.',
  'The table column model.',
  'The table selection model.',
  'TODO: Remove the type cast when ListSingleSelectionModel is converted',
  'to TS.',
  'The accessor to "autoExpands" property of the list.',
  'Returns render function for row.\n@return Render function.',
  '`this` must not be accessed here, since it may be anything, especially',
  'not a pointer to this object.',
  'Sets render function for row.\n@param renderFunction Render function.',
  'The header of the table.',
  'Initializes the element.',
  'The contained list should be focusable, not the table itself.',
  'Redraws the table.',
  'Resize the table columns.',
  'We resize columns only instead of full redraw.',
  'Ensures that a given index is inside the viewport.\n' +
    '@param i The index of the item to scroll into view.',
  'Find the list item element at the given index.\n' +
    '@param index The index of the list item to get.\n' +
    '@return The found list item or null if not found.',
  "This handles data model 'sorted' event.\n" +
    'After sorting we need to redraw header\n' +
    "@param e The 'sorted' event.",
  "If we have 'focus-outline-visible' on the root HTML element and focus",
  'has reverted to the body element it means this sort header creation',
  'was the result of a keyboard action so set focus to the (newly',
  'recreated) sort button in that case.',
  'Override to inject custom logic after data model sorting is done.',
  "This handles data model 'change' and 'splice' events.\n" +
    'Since they may change the visibility of scrollbar, table may need to\n' +
    're-calculation the width of column headers.\n' +
    "@param e The 'change' or 'splice' event.",
  "This handles list 'scroll' events. Scrolls the header accordingly.\n" +
    '@param _e Scroll event.',
  'Sort data by the given column.\n' +
    '@param i The index of the column to sort by.',
  'Called when an element in the table is focused. Marks the table as having\n' +
    "a focused element, and dispatches an event if it didn't have focus.\n" +
    '@param e The focus event.',
  'Force styles based on hasElementFocus to take effect.',
  'Called when an element in the table is blurred. If focus moves outside\n' +
    'the table, marks the table as no longer having focus and dispatches an\n' +
    'event.\n' +
    '@param e The blur event.',
  'When the blur event happens we do not know who is getting focus so we',
  'delay this a bit until we know if the new focus node is outside the',
  'table.',
  'Force styles based on hasElementFocus to take effect.',
  'Adjust column width to fit its content.\n' +
    '@param index Index of the column to adjust width.',
  'Create a temporaty list item, put all cells into it and measure its',
  'width. Then remove the item. It fits "list > *" CSS rules.',
  'The container will have width of the longest cell.',
  'Ensure all needed data available.',
  'Select at most MAXIMUM_ROWS_TO_MEASURE items around visible area.',
  'Whether the table or one of its descendants has focus. This is necessary\n' +
    'because table contents can contain controls that can be focused, and for\n' +
    'some purposes (e.g., styling), the table can still be conceptually focused\n' +
    "at that point even though it doesn't actually have the page focus."
]
table_column.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This is a table column representation',
  'A table column that wraps column ids and settings.',
  'Clones column.\n@return Clone of the given column.',
  'Renders table cell. This is the default render function.\n' +
    '@param dataItem The data item to be rendered.\n' +
    '@param columnId The column id.\n' +
    '@param table The table.\n' +
    '@return Rendered element.',
  'Renders table header. This is the default render function.\n' +
    '@param table The table.\n' +
    '@return Rendered text node.',
  'The width of the column.  Hidden columns have zero width.',
  'The width of the column, disregarding visibility.  For hidden columns,\n' +
    'this would be the width of the column if it were to be made visible.'
]
table_column_model.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This is a table column model',
  'A table column model that wraps table columns array\n' +
    'This implementation supports widths in percents.',
  '@param tableColumns Array of table columns.',
  'The number of the columns.',
  'Returns id of column at the given index.\n' +
    '@param index The index of the column.\n' +
    '@return Column id.',
  'Returns name of column at the given index. Name is used as column header\n' +
    'label.\n' +
    '@param index The index of the column.\n' +
    '@return Column name.',
  'Sets name of column at the given index.\n' +
    '@param index The index of the column.\n' +
    '@param name Column name.',
  'Returns width (in percent) of column at the given index.\n' +
    '@param index The index of the column.\n' +
    '@return Column width in pixels.',
  'Check if the column at the given index should align to the end.\n' +
    '@param index The index of the column.\n' +
    '@return True if the column is aligned to end.',
  'Sets width of column at the given index.\n' +
    '@param index The index of the column.\n' +
    '@param width Column width.',
  'Dispatch an event if a visible column was resized.',
  'Returns render function for the column at the given index.\n' +
    '@param index The index of the column.\n' +
    '@return Render function.',
  'Sets render function for the column at the given index.\n' +
    '@param index The index of the column.',
  'Render the column header.\n' +
    '@param index The index of the column.\n' +
    '@param table Owner table.',
  'The total width of the columns.',
  'Normalizes widths to make their sum 100%.',
  'Returns default sorting order for the column at the given index.\n' +
    '@param index The index of the column.\n' +
    "@return 'asc' or 'desc'.",
  'Returns index of the column with given id.\n' +
    '@param id The id to find.\n' +
    '@return The index of column with given id or -1 if not found.',
  'Show/hide a column.\n' +
    '@param index The column index.\n' +
    '@param visible The column visibility.',
  'Changing column visibility alters the width.  Save the total width',
  'out first, then change the column visibility, then relayout the',
  'table.',
  "Returns a column's visibility.\n" +
    '@param index The column index.\n' +
    '@return Whether the column is visible.'
]
table_header.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This implements a table header.',
  'Rectangular area around the splitters sensitive to touch events\n' +
    '(in pixels).',
  'Creates a new table header.',
  'Initializes the element.',
  'Updates table header width. Header width depends on list having a\n' +
    'vertical scrollbar.',
  'Header should not span over the vertical scrollbar of the list.',
  'Resizes columns.',
  'Redraws table header.',
  "Don't display cells for hidden columns. Don't omit the cell",
  "completely, as it's much simpler if the number of cell elements and",
  'columns are in sync.',
  'Appends column splitters to the table header.',
  'splitter should use CSS for background image.',
  "Don't display splitters for hidden columns.  Don't omit the splitter",
  "completely, as it's much simpler if the number of splitter elements",
  'and columns are in sync.',
  'Place splitters to right positions.\n@param splitters Array of splitters.',
  "Don't account for the widths of hidden columns.",
  'Renders column header. Appends text label and sort arrow if needed.\n' +
    '@param index Column index.',
  'Creates sort function for given column.\n' +
    '@param index The index of the column to sort by.',
  'Handles the touchstart event. If the touch happened close enough\n' +
    'to a splitter starts dragging.',
  "Splitter itself shouldn't handle this event.",
  'Handles the double click on a column separator event.\n' +
    'Adjusts column width.\n' +
    '@param index Column index.\n' +
    '@param _e The double click event.',
  'Determines whether a full redraw is required.',
  'If the number of columns in the model has changed, a full redraw is',
  'needed.',
  'If the column visibility has changed, a full redraw is required.'
]
table_list.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This extends List for use in the table.',
  'Creates a new table list element.',
  'Resizes columns. Called when column width changed.',
  'Updates width of cells.',
  'Redraws the viewport.',
  'Returns the height of after filler in the list.\n' +
    '@param lastIndex The index of item past the last in viewport.\n' +
    '@return The height of after filler.',
  'If the list is empty set height to 1 to show horizontal',
  'scroll bar.',
  'Shows or hides vertical and horizontal scroll bars in the list.\n' +
    '@return True if horizontal scroll bar changed.',
  'Once we sure there will be horizontal',
  'scrollbar calculate with this height.',
  'Shows or hides vertical scroll bar.\n' +
    '@param show True to show.\n' +
    '@return True if visibility changed.',
  '@param visibleHeight Height in pixels.\n' +
    '@return True if all rows could be accomodiated in\n' +
    'visibleHeight pixels.',
  'Creates a new list item.\n' +
    '@param dataItem The value to use for the item.\n' +
    '@return The newly created list item.',
  'Determines whether a full redraw is required.',
  'If the number of columns in the model has changed, a full redraw is',
  'needed.',
  'If the column visibility has changed, a full redraw is required.',
  'The table associated with the list.'
]
table_splitter.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This implements a splitter element which can be used to resize\n' +
    'table columns.\n' +
    'Each splitter is associated with certain column and resizes it when dragged.\n' +
    'It is column model responsibility to resize other columns accordingly.',
  'Creates a new table splitter element.',
  'Initializes the element.',
  'Handles start of the splitter dragging.\n' +
    'Saves starting width of the column and changes the cursor.',
  'Handles spliter moves. Sets new width of the column.',
  'Handles end of the splitter dragging. Restores cursor.'
]
uma_enums.gen.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'File generated by //ui/file_manager/base/gn/uma_enums_generate.py.',
  'List of file extensions to record in UMA, from enums.xml ViewFileType.'
]
actions_producer.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'ActionsProducer is a generator function that yields and/or returns Actions.\n' +
    "It's a function that return a AsyncGenerator.\n" +
    "@template Args: It's the inferred types of the arguments in the function.\n" +
    'Example of an ActionsProducer:\n' +
    'async function* doSomething(): ActionsProducerGen {\n' +
    "yield {type: 'some-action', status: 'STARTING'};\n" +
    '// Call Some API.\n' +
    'const result = await someApi();\n' +
    "yield {type: 'some-action', status: 'SUCCESS', result};\n" +
    '}',
  'This is the type of the generator that is returned by the ActionsProducer.\n' +
    'This is used to enforce the type for the yield.\n' +
    'The return should be always void, because consuming the generator using `for\n' +
    "await()` doesn't consume the value from the return.\n" +
    'Yielding `undefined` or a bare yield like `yield;` gives the concurrency\n' +
    "model a chance to interrupt the ActionsProducer, when it's invalidated.",
  "Exception used to stop ActionsProducer when they're no longer valid.\n" +
    'The concurrency model function uses this exception to force the\n' +
    'ActionsProducer to stop.',
  'Helper to distinguish the Action from a ActionsProducer.'
]
actions_producer_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Helper to accumulate all produced actions from the ActionsProducer.',
  'Tests the keepLatest() concurrency model. Checks that the latest call\n' +
    'overtakes any previous call.',
  'keepLatest() wraps any ActionsGenerator.',
  'Array to collect all the generated actions.',
  '`first` here is a generator,  an ActionsProducer, wrapped in the',
  'concurrency model `keepLatest`.',
  'Starts consuming the generated actions and can start another one in',
  'parallel.',
  'A new call to the `action` will cause the previous `first` to be cancelled.',
  'At this point `first` should be cancelled by the keepLatest().',
  'However, the exception only shows up in the next iteration of the AP.',
  'Check that the generator is in `done=true` state.',
  'Await for the second generator to be fully consumed.',
  'The second action generates 4 results: 1 at start, 2 from the args [2, 2]',
  'and 1 for the final action.',
  'Tests the keyedKeepFirst() concurrency model. Checks that the first call\n' +
    "with the same key, doesn't start a new AP, and calls with a new key cancels\n" +
    'the previous APs and starts a new AP.',
  '`first` here is a generator,  an ActionsProducer, wrapped in the',
  'concurrency model `keyedKeepFirst`.',
  'Starts consuming the generated actions and can start another one in',
  'parallel.',
  'Make a second call with the same key, which finishes in the first iteration',
  'without generating any action.',
  'Start a new call with different key.',
  'Array to collect all the generated actions.',
  'At this point `first` should be cancelled by the keyedKeepFirst().',
  'However, the exception only shows up in the next iteration of the AP.',
  'Check that the generator is in `done=true` state.',
  'Await for the third generator to be fully consumed.',
  'The third action generates 4 results: 1 at start, 2 from the args [2,',
  '2] / and 1 for the final action.',
  'Tests the keyedKeepLatest() concurrency model. Checks that the first call\n' +
    "with the same key will cancel the pending AP with the same key, but shouldn't\n" +
    'affect the pending AP with different keys.',
  'Array to collect all the generated actions.',
  '`first` here is a generator, an ActionsProducer, wrapped in the',
  'concurrency model `keyedKeepLatest`.',
  'Starts consuming the generated actions and can start another one in',
  'parallel.',
  "Make a second call with a different key, which shouldn't affect the first",
  'action.',
  'Start a new call with the same key as the first action, which cancels the',
  'first action.',
  'At this point `first` should be cancelled by the keyedKeepLatest().',
  'However, the exception only shows up in the next iteration of the AP.',
  'Check that the generator is in `done=true` state.',
  'Await for the second/third generator to be fully consumed.',
  'The second/third action generates 4 results: 1 at start, 2 from the args',
  '[2, 2] / and 1 for the final action.'
]
base_store.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The Payload type for Action.',
  'Actions are handled by the store according to their name and payload,\n' +
    'triggering reducers.',
  'A callable object that generates actions of a given type while enforcing the\n' +
    'payload typing for that type of action.\n' +
    'For convenience and debugging purposes, it also includes the action type.',
  'Reducers generate a new state from the current state and a payload.',
  'Slices represent a part of the state that is nested directly under the root\n' +
    'state, aggregating its reducers and selectors.\n' +
    "@template State The shape of the store's root state.\n" +
    '@template LocalState The shape of this slice.',
  'eslint-disable-next-line @typescript-eslint/naming-convention',
  'Reducers registered with this slice.\n' +
    'Only one reducer per slice can be associated with a given action type.',
  "The slice's default selector - a selector that is created automatically\n" +
    "when the slice is constructed. It selects the slice's part of the state.",
  '@param name The prefix to be used when registering action types with\n' +
    'this slice.',
  "Returns the full action name given by prepending the slice's name to the\n" +
    'given action type (the full name is formatted as "[SLICE_NAME] TYPE").\n' +
    "If the given action type is already the full name, it's returned without\n" +
    'any changes.\n' +
    'Note: the only valid scenario where the given type is the full name is when\n' +
    'registering a reducer for an action primarily registered in another slice.',
  'Returns an action factory for the added reducer.\n' +
    '@param localType The name of the action handled by this reducer. It should\n' +
    "be either a new action, (e.g., 'do-thing') in which case it will get\n" +
    "prefixed with the slice's name (e.g., '[sliceName] do-thing'), or an\n" +
    'existing action from another slice (e.g., `someActionFactory.type`).\n' +
    '@returns A callable action factory that also holds the type and payload\n' +
    'typing of the actions it produces. Those can be used to register\n' +
    'reducers in other slices with the same action type.',
  'Include action type so different slices can register reducers for the',
  'same action type.',
  '@template State: The shape/interface of the state.',
  'A generic datastore for the state of a page, where the state is publicly\n' +
    'readable but can only be modified by dispatching an Action.\n' +
    'The Store should be extended by specifying `StateType`, the app state type\n' +
    'associated with the store.',
  'A map of action names to reducers handled by the store.',
  'The current state stored in the Store.',
  'Whether the Store has been initialized. See init() method to initialize.',
  'Queues actions while the Store un-initialized.',
  'Observers that are notified when the State is updated by Action/Reducer.',
  'Batch mode groups multiple Action mutations and only notify the observes\n' +
    'at the end of the batch. See beginBatchUpdate() and endBatchUpdate()\n' +
    'methods.',
  "The store's default selector - a selector that is created automatically\n" +
    'when the store is constructed. It selects the root state.',
  'The DAG representation of selectors held by the store. It ensures\n' +
    'selectors are updated in an efficient manner. For more information,\n' +
    'please see the `SelectorEmitter` class documentation.',
  'Connect the default root selector to the Selector Emitter.',
  "Connect the slice's default selector to the store's.",
  'Populate reducers with slice.',
  'Marks the Store as initialized.\n' +
    'While the Store is not initialized, no action is processed and no observes\n' +
    'are notified.\n' +
    "It should be called by the app's initialization code.",
  'Subscribe to Store changes/updates.\n' +
    '@param observer Callback called whenever the Store is updated.\n' +
    '@returns callback to unsubscribe the observer.',
  'Removes the observer which will stop receiving Store updates.\n' +
    '@param observer The instance that was observing the store.',
  'Create new copy of `observers_` to ensure elements are not removed',
  'from the array in the middle of the loop in `notifyObservers_()`.',
  'Begin a batch update to store data, which will disable updates to the\n' +
    'observers until `endBatchUpdate()` is called. This is useful when a single\n' +
    'UI operation is likely to cause many sequential model updates.',
  'End a batch update to the store data, notifying the observers of any\n' +
    'changes which occurred while batch mode was enabled.',
  '@returns the current state of the store.',
  'Dispatches an Action to the Store.\n' +
    'For synchronous actions it sends the action to the reducers, which updates\n' +
    'the Store state, then the Store notifies all subscribers.\n' +
    "If the Store isn't initialized, the action is queued and dispatched to\n" +
    'reducers during the initialization.',
  'Enable/Disable the debug mode for the store. More logs will be displayed in\n' +
    'the console with debug mode on.',
  'Synchronously call apply the `action` by calling the reducer.',
  'Consumes the produced actions from the actions producer.\n' +
    'It dispatches each generated action.',
  'Accept undefined to accept empty `yield;` or `return;`.',
  'The empty `yield` is useful to allow the generator to be stopped at',
  'any arbitrary point.',
  'This error is expected when the actionsProducer has been',
  'invalidated.',
  'Apply the `action` to the Store by calling the reducer.',
  'Batch notifications until after all initialization queuedActions are',
  'resolved.',
  'Notify observers with the current state.',
  "Subscribers shouldn't fail, here we only log and continue to all",
  'other subscribers.',
  'Returns true when the error is a ConcurrentActionInvalidatedError.',
  'Rollup sometimes duplicate the definition of error class so the',
  '`instanceof` above fail in this condition.',
  "Check if the store is in debug mode or not. When it's set, action data will\n" +
    'be logged in the console for debugging purpose.\n' +
    'Run `fileManager.store_.setDebug(true)` in the console to enable it.'
]
base_store_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'ActionsProducer that raises an error',
  'Returns the current numVisitors from the Store.',
  'Checks that the subscribers receive the initial state when the store is\n' +
    'initialized.',
  'It starts un-initialized.',
  'Checks that the subscribers are only called after the store has been\n' +
    'initialized.',
  'It starts un-initialized.',
  'Nothing happened yet, so counter is still null.',
  "The action here doesn't matter, since the reducer always increment by 1.",
  "Since the Store is still un-initialized, the subscriber isn't called.",
  'Checks that the store can be updated in batch mode. As in, multiple calls to\n' +
    'dispatch() is only propagated to the subscribers at the end of the batch.',
  "The action here doesn't matter, since the reducer always increment by 1.",
  "The subscriber isn't called for the 3 dispatches.",
  'However the State in the Store is updated.',
  'Checks that the reducer is called for every action.',
  'Add some actions before the init().',
  "Dispatches don't happen before the init().",
  'Both actions are processed after the init.',
  'In the same order.',
  'Both actions are processed after the init.',
  'Checks that subscriber can unsubscribe and stops receiving updates.',
  "Checks that an exception in one subscriber doesn't stop pushing to other\n" +
    'subscribers.',
  'NOTE: Subscribers are called in the order of subscription.',
  'So adding the failing subscriber first.',
  'Add the successful subscriber.',
  'Tests that dispatching an action that is an Actions Producer results in all\n' +
    'produced actions being dispatched.',
  'Tests that Actions Producers can generate an empty action `undefined` which\n' +
    'is ignored.',
  'The AP issues 2 non-empty actions and 1 empty between those.',
  "Tests that an error during the Actions Producer doesn't stop other\n" +
    'actions.',
  '4 actions from each Success producer.',
  'Tests that the Store throws when passed slices with colliding names.',
  'Tests that Slice::addReducer throws when trying to register actions with\n' +
    'the same name.',
  'Tests that Slice::addReducer produces action factories that can be shared\n' +
    'across slices to register other reducers.'
]
concurrency_models.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Wraps the Actions Producer and enforces the Keep Last concurrency model.\n' +
    'Assigns an `actionId` for each action call.\n' +
    'This consumes the generator from the Actions Producer.\n' +
    'In between each yield it might throw an exception if the actionId\n' +
    "isn't the latest action anymore. This effectively cancels any pending\n" +
    'generator()/action.\n' +
    '@template T Type of the action yielded by the Actions Producer.\n' +
    '@template Args the inferred type for all the args for foo().\n' +
    '@param actionsProducer This will be the `foo` above.',
  'Scope #1: Initial setup.',
  'Scope #2: Per-call to the ActionsProducer.',
  'Scope #3: The generated action.',
  'The generator is still valid, send the action to the store.',
  "While the key is the same it doesn't start a new Actions Producer (AP).\n" +
    'If the key changes, then it cancels the previous one and starts a new one.\n' +
    'If there is no other running AP, then it just starts a new one.',
  'Scope #1: Initial setup.',
  'Key for the current AP.',
  'Scope #2: Per-call to the ActionsProducer.',
  'One already exists, just leave that finish.',
  'This will force the previously running AP to cancel when yielding.',
  'Scope #3: The generated action.',
  "This error we don't want to clear the `inFlightKey`, because it's",
  'pointing to the actually valid AP instance.',
  "Clear the key if it wasn't invalidated.",
  'While the key is the same it cancels the previous pending Actions\n' +
    'Producer (AP).\n' +
    "Note: APs with different keys can happen simultaneously, e.g. `key-2` won't\n" +
    'cancel a pending `key-1`.',
  'Scope #1: Initial setup.',
  'Key->index map for all in-flight AP.',
  'Scope #2: Per-call to the ActionsProducer.',
  'Scope #3: The generated action.',
  'We rely on the above throw to break the loop.',
  'If the action producer finishes without being cancelled, remove the key.'
]
for_tests.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Async function to emulate async API calls.',
  'Store state used across all unittests in this file.',
  'Just an incremental counter.',
  'The latest string sent in the Action.',
  'Counts how many times `onStateChanged()` was called.',
  'Creates new Store, subscriber and dispatchedActions.\n' +
    'These can be called multiple times for each test, which create new\n' +
    'independent instances of those.',
  'All actions dispatched via the store and processed by the reducer.',
  'This is an Actions Producer implemented.\n' +
    'This produces 4 actions.\n' +
    'Imagine that each sleep() is an API call.\n' +
    '@param payload: A string to identify the call to foo.',
  'Produce an action before any async code.',
  'Emulate an async API call.',
  'Yield the final action to the store.',
  'ActionsProducer that yields an empty/undefined action.'
]
selector.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview A Selector implementation for redux, bundled with a\n' +
    'SelectorEmitter helper class that allows selectors to be efficiently updated.',
  'Interface implemented by SelectorNode. Used to expose SelectorNodes outside\n' +
    "the store without giving access to SelectorNode's implementation details.\n" +
    "SelectorNode's public methods that don't implement Selector's are meant to be\n" +
    'used by the BaseStore but not by the rest of the app.\n' +
    'Selectors let callers get either a selected part of the state immediately\n' +
    'through `get()`, or subscribe to updates whenever the selected state changes\n' +
    'through `subscribe()`. The `controller` class is a `ReactiveController` and\n' +
    'is meant for lit elements to conveniently re-render based on changes to the\n' +
    'selected state.',
  "Immediately return the selector's current value.",
  "Subscribe to changes to the selector's current value.\n" +
    'Note: Updates are only received when the selected state has actually\n' +
    'changed, regardless of changes to other parts of the root state. Therefore,\n' +
    "it's unnecessary to check if received values have in fact changed - the\n" +
    'selector guarantees that all new values differ from the previous.',
  'Creates a ReactiveController that lets Lit components automatically\n' +
    're-render when the selected state changes.\n' +
    'It automatically unsubscribes from the selector when the component is\n' +
    'destroyed.\n' +
    'For usage examples, see selector_unittest.ts.\n' +
    'For more information on ReactiveControllers, refer to the Lit\n' +
    'documentation.',
  'Deletes this Selector if it no longer has any children.',
  'A class implementing ReactiveController in order to provide an ergonomic\n' +
    'way to update Lit elements based on selected data.',
  'A node in the selector DAG (Directed Acyclic Graph). Used to efficiently\n' +
    'process selectors and eliminate redundant calculations and state updates. A\n' +
    'selector node essentially connects parent selectors through a `select()`\n' +
    "function that combines all of their parents' emitted values to form a new\n" +
    'value.\n' +
    'Note: `SelectorNode` implements the `Selector` interface, allowing the store\n' +
    'to expose nodes as `Selector`s, hiding complexities related to\n' +
    "`SelectorNode`'s implementation.",
  'Last value emitted by the selector.',
  "List of selector's current subscribers.",
  "List of selector's current parents.",
  'The depth of this node in the SelectorEmitter DAG. Used to ensure Selector\n' +
    'nodes are emitted in the correct order.\n' +
    'Nodes of depth D+1 are only processed after all nodes of depth D have been\n' +
    'processed, starting from D=0.\n' +
    'Only source nodes (nodes without parents) have depth=0;',
  "List of selector's current children.",
  '@param parents Either an array of Selectors or SelectorNodes whose values\n' +
    "should be fed into the `select` function to calculate the selector's\n" +
    'new value.\n' +
    "@param select The function that calculates the selector's new value once at\n" +
    'least one its parents emits a new value or, initially, after the\n' +
    'selector node is constructed. The arguments of select() must match the\n' +
    'order and type of what is emitted by the parents. This typing match is\n' +
    'not enforced here because SelectorNodes are only meant to be created by\n' +
    'the Store. Users of the Store should use `combineXSelectors()` to\n' +
    'combine selectors.\n' +
    '@param name An optional human-readable name used for debugging purposes.\n' +
    'Named selectors will log to the console when DEBUG_STORE is set,\n' +
    'whenever they emit a new value.\n' +
    '@param isEqual_ An optional comparison function which will be used\n' +
    'when compare the old value and the new value form the selector. By\n' +
    'default it will use triple equal.',
  'Creates a new source node (a node with no parents).\n' +
    "The store's default selector should be a source node, but other data\n" +
    'sources can be registered as source nodes as well.\n' +
    "Slice's default selectors are then connected to the store's source node,\n" +
    "and additional selector nodes can then be created from store and slices'\n" +
    'default selectors using `combineXSelectors()` (and resulting selectors can\n' +
    'be further combined using `combineXSelectors()`).',
  "Creates a selector node that doesn't have parents or select function. Used\n" +
    'by slices to create selectors that are not yet connected to the store but\n' +
    'that can be subscribed to before the store is constructed.\n' +
    'In other words, disconnected nodes should eventually be connected to the\n' +
    'SelectorEmitter DAG and should retain their list of subscribers after doing\n' +
    'so.\n' +
    'Disconnected nodes are exclusively used internally by slices and are not\n' +
    'meant to be used outside of it.',
  'We use a getter for parents to make sure they are always retrieved as\n' +
    'SelectorNodes, even though they might be passed in as Selectors in the\n' +
    '`combineXSelectors()` functions.',
  'Disconnect current parents, if any, before replacing them.',
  'Connects this node to its new parents.',
  "Calculate the node's initial value.",
  'Disconnects itself from the DAG by deleting its connections with its\n' +
    'parents.',
  'Disconnect node from its parents.',
  'Disconnects the node from one of its children.',
  'Sets a new value, if such new value is different from the current. If\n' +
    "it's different, returns true and notify subscribers. Else, returns false.",
  'Create a selector whose value derives from a single Selector.',
  'Create a selector whose value derives from 2 Selectors.',
  'Create a selector whose value derives from 3 Selectors.',
  'Create a selector whose value derives from 4 Selectors.',
  'A DAG (Directed Acyclic Graph) representation of chains of selectors where\n' +
    'one selector only emits if at least one of their parents has emitted, while\n' +
    'also guaranteeing that, when multiple parents of a given node emit, their\n' +
    'child only emits a single time.',
  'Source nodes. I.e., nodes with no parents.',
  'Connect source node to the DAG.',
  'Propagates changes from sourceNodes to the rest of the DAG.\n' +
    'Nodes of depth D+1 are only processed after all nodes of depth D have been\n' +
    'processed, starting from D=0.\n' +
    'This method ensures selectors are evaluated efficiently by:\n' +
    '- Only evaluating nodes if at least one of their parents has emitted a new\n' +
    'value;\n' +
    '- Ensuring each node only emits once per call to `processChange()` unlike a\n' +
    'naive implementation that would emit every time a parent emitted a new\n' +
    'value (meaning the node would emit multiple times per iteration if it had\n' +
    'multiple emitting parents).',
  'Only traverse children if a new value is emitted. Children with',
  'multiple parents might still be enqueued by the remaining parents.',
  'TODO(300209290): use heap instead.',
  'Ensure nodes are explored in ascending order of depth.',
  'Comparison functions can be passed to selectors when initialized.',
  'strictlyEqual use triple equal to compare values.',
  'shallowEqual compares the immediate property of the passed objects.',
  'Only throw error when `newValue` is not an object because `oldValue` could',
  'be `undefined` initially.'
]
selector_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Test that DAG nodes only emit if at least one of their parents also emits a',
  'new value and if their value has changed.',
  'Verify initial states.',
  'Only the root selector and the slice1 selector should emit.',
  "Only root, slice2, and slice2's child should update.",
  "Tests selectors' `get()` and `subscribe()` functions.",
  "The store hasn't been initialized yet, so the slice's state should be",
  'undefined.',
  "Now that the store has been initialized with `numVisitors: 0`, the slice's",
  'state should be 0.',
  'Similarly, it should reflect the numVisitors being increased to 2 by the',
  'reducer handling the action `increaseBy(2)`.',
  'Introduce a combined selector and verify it works as expected.',
  "Test that Lit components work with selector's ReactiveControllers.",
  "Create a test lit component using our selector's controller.",
  'Silence unused var TS error.',
  'Create test element and add it to the DOM, then wait for it to be ready on',
  'the next event loop cycle.',
  'Update the store and verify that the component automatically re-renders.',
  "Test that if one selector's subscriber errors out, the remaining subscribers",
  'are still notified.',
  'Test that updates are no longer received after the selector subscription is',
  'cancelled.',
  'Count should no longer increase after calling unsubscribe.',
  'Test that deleted selectors no longer provide updates.',
  'Count should no longer increase after deleting the selector.',
  'Test that Selector Emitter nodes are explored in the ascending order of',
  'depth.',
  'Verify nodes emit in the expected order (lowest depth first).',
  'Explanation: after the root is explored, all 3 children should be queued',
  "for later exploration. If they are explored in the wrong order, we'd get",
  "'0321', instead of '0123'. Note: Although all child nodes are children of",
  'root, child1 has a depth of 1, child2 of 2, and child3 of 3 - because the',
  "root node isn't their only parent.",
  'Test that strictlyEqual and shallowEqual works in different ways.',
  "shallowEqual only compares the first level, it doesn't go deeper.",
  "shallowEqual can't be called with non-object.",
  'Test that selector can accepts a custom isEqual function which will be used',
  'when checking changes.',
  'Construct 2 selectors which returns a plain object (whose reference will',
  'change every time the selector runs) contains "latestPayload" only.',
  'Change "numVisitors" twice.',
  'Expect the selector calls its callback twice because its returned object',
  'changes its reference every time (strict equal).',
  'Expect the selector never calls its callback because its returned object',
  'never changes its content (shallow equal).'
]
all_entries.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Entries slice of the store.',
  'Create action to scan `allEntries` and remove its stale entries.',
  'For all expanded entries, we need to keep them and all their direct',
  'children.',
  'For all kept entries, we also need to keep their children so we can decide',
  'if we need to show the expand icon or not.',
  'Schedules the routine to remove stale entries from `allEntries`.',
  'For unittest force to run at least at 50ms to avoid flakiness on slow',
  'bots (msan).',
  'ID for the current scheduled `clearCachedEntries`.',
  'Starts the action CLEAR_STALE_CACHED_ENTRIES.',
  'Get the icon for an entry.',
  'Pre-defined icons based on the URL.',
  'Handle icons for grand roots ("Shared drives" and "Computers") in Drive.',
  "Here we can't just use `fullPath` to check if an entry is a grand root or",
  'not, because normal directory can also have the same full path. We also',
  'need to check if the entry is a direct child of the drive root entry list.',
  'For grouped removable devices, its parent folder is an entry list, we',
  'should use USB icon for it.',
  'Fallthrough',
  "Only return IconSet if there's valid background image generated.",
  'If no background is generated from IconSet, set the icon to the',
  'generic one for certain volume type.',
  'For sub-partition from a removable volume, its children icon should',
  'be UNKNOWN_REMOVABLE.',
  'Given fileData, check if its loading children should be delayed.\n' +
    'We are doing this for SMB to avoid potentially hanging whilst scanning a\n' +
    'large SMB file share and causing performance issues.',
  'When this function is triggered when mounting new volumes, volumeInfo is',
  'not available in the VolumeManager yet, we need to get volumeInfo from the',
  'entry itself.',
  'TODO: Confirm how to remove the usage of entry here.',
  'Converts the entry to the Store representation of an Entry: FileData.',
  'When this function is triggered when mounting new volumes, volumeInfo is',
  'not available in the VolumeManager yet, we need to get volumeInfo from the',
  'entry itself.',
  "For FakeEntry, we need to read from entry.volumeType because it doesn't",
  'have volumeInfo in the volume manager.',
  'Update disabled attribute if entry supports disabled attribute and has a\n' +
    'non-null volumeType.',
  '`isEjectable` is determined by its corresponding volume, will be updated',
  'when volume is added.',
  'For slow volumes, we always mark the root and directories as canExpand, to',
  'avoid scanning to determine if it has sub-directories.',
  'Keep children to prevent sudden removal of the children items on the UI.',
  'Converts an EntryData object from FileManagerPrivate API to the store\n' +
    'representation of an Entry: FileData.',
  'TODO(b/328564447): This function should only rely on `entryData`, so',
  'gradually update the returned FileData to only use fields from `entryData`.',
  'Appends the entry to the Store.',
  'Some client code might dispatch actions based on',
  '`volume.resolveDisplayRoot()` which is a DirectoryEntry instead of a',
  "VolumeEntry. It's safe to ignore this entry because the data will be the",
  "same as `existingFileData` and we don't want to convert from VolumeEntry to",
  'DirectoryEntry.',
  'For existing entries already in the store, we want to keep the existing',
  'value for the following fields. For example, for "expanded" entries with',
  "expanded=true, we don't want to override it with expanded=false derived",
  'from `convertEntryToFileData` function above.',
  'Keep children to prevent sudden removal of the children items on the UI.',
  'Updates `FileData` from a `FileKey`.\n' +
    'Note: the state will be updated in place.',
  "Caches the Action's entry in the `allEntries` attribute.",
  'Entries from FilesAppEntry have the `typeName` property.',
  "TODO(lucmult): This isn't really Recent but it's the closest.",
  'Create action to update entries metadata.',
  'Cache entries, so the reducers can use any entry from `allEntries`.',
  "If the volume isn't resolved yet, we just ignore here.",
  'Returns the MyFiles entry and volume, the entry can either be a fake one\n' +
    '(EntryList) or a real one (VolumeEntry) depending on if the MyFiles volume is\n' +
    'mounted or not, and returns null if local files are disabled by policy.\n' +
    "Note: it will create a fake EntryList in the store if there's no\n" +
    'MyFiles entry in the store (e.g. no EntryList and no VolumeEntry), but local\n' +
    'files are enabled.',
  'Return null for TT version.',
  'For GA version we show local files in read-only mode, if present.',
  'Create action to add child entries to a parent entry.',
  'Cache entries, so the reducers can use any entry from `allEntries`.',
  'The corresponding parent entry item has been removed somehow, do nothing.',
  'Add children to the parent entry item.',
  'Update canExpand according to the children length.',
  'Read sub directories for a given entry.',
  'Track time for reading sub directories if metric for tracking is passed.',
  'Only dispatch directories.',
  'Fetch metadata if the entry supports Drive specific share icon.',
  'TODO(b/327534506): Add support for Materialize Views.',
  'Track time for reading sub directories if metric for tracking is passed.',
  'Read sub directories for children when recursive is true.',
  'Refresh the fileData from the store because it might have changed during',
  'the async operations above.',
  'We only read deeper if the parent entry is expanded in the tree.',
  'Recursive scan.',
  'If child item is expanded, we need to do a full scan for it.',
  'If we already know the child item can be expanded, no partial scan is',
  'required.',
  'If the child item is not expanded, we do a partial scan to check if',
  'it has children or not (so we know if we need to show expand icon',
  'or not).',
  'When there are multiple `readSubDirectories` actions with the same key being\n' +
    'dispatched at the same time, we only keep the latest one.',
  'Read entries for Drive root entry list (aka "Google Drive"), there are some\n' +
    'differences compared to the `readSubDirectoriesForDirectoryEntry()`:\n' +
    "* We don't need to call readEntries() to get its child entries. Instead, all\n" +
    'its children are from its entry.getUiChildren().\n' +
    '* For fake entries children (e.g. Shared with me and Offline), we only show\n' +
    'them based on the dialog type.\n' +
    '* For certain children (e.g. team drives and computers grand root), we only\n' +
    "show them when there's at least one child entry inside. So we need to read\n" +
    'their children (grand children of drive fake root) first before we can decide\n' +
    'if we need to show them or not.',
  'Store the filtered children, for fake entries or grand roots we might need\n' +
    'to hide them based on curtain conditions.',
  'For fake entries ("Shared with me" and "Offline").',
  'For non grand roots (also not fake entries), we put them in the children',
  'directly and dispatch an action to read the it later.',
  'For grand roots ("Shared drives" and "Computers") inside Drive, we only',
  "show them when there's at least one child entries inside.",
  'Read a given directory entry to get all child entries.\n' +
    '@param entry The parent directory entry to read.',
  ... 23 more items
]
all_entries_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'changeDirectory() reducer uses the VolumeManager.',
  'sortEntries() requires the directoryModel on the window.fileManager.',
  'opt_clear=  true);',
  'Generate MyFiles entry with fake entry list.',
  'Generate MyFiles entry with real volume entry.',
  'Tests that entries get cached in the allEntries.',
  'Wait for the async clear to be called.',
  'It should keep the current directory and all its parents that were',
  'previously cached.',
  'Running the clear multiple times should not change:',
  'Cache a directory via changeDirectory.',
  'Cache a file via changeSelection.',
  'Cache a directory via changeDirectory.',
  'Cache a file via changeSelection.',
  'Update the metadata: it should first cache missing entries, and append the',
  'new metadata to the already fetched values.',
  'Tests that getMyFiles will return the entry list if the volume is not in the\n' +
    'store.',
  'Add fake entry list MyFiles to the store.',
  'Expect MyFiles entry list returned, no volume.',
  'Tests that getMyFiles will return the volume entry if the volume is already\n' +
    'in the store.',
  'Add MyFiles volume to the store.',
  'Expect MyFiles volume entry and volume returned.',
  'Tests that getMyFiles will create a entry list if no MyFiles entry\n' +
    'in the store.',
  'Expect entry list is created in place.',
  'Tests that child entries can be added to the store correctly.',
  'Add parent/children entries to the store.',
  'opt_clear=  true);',
  "Make sure aEntry won't be cleared.",
  'Dispatch an action to add child entries for /aaa/.',
  'Expect the children filed of /a is updated.',
  'Dispatch an action to add child entries for /a/2.',
  'Dispatch an action to add child entries for non-existed parent entry.',
  'Expect nothing changes in the store.',
  'Tests converting VolumeEntry into FileData.',
  'Now disabled the volume in the volume manager.',
  'Tests the icon for DocumentsProvider FileData should be a generic icon with\n' +
    'an empty IconSet provided.',
  'By default an empty IconSet is used in this mock function.',
  'Tests converting EntryList into FileData.',
  'Tests converting FakeEntry into FileData.',
  'Tests converting native file entry into FileData.',
  'Tests converting native directory entry into FileData.',
  'Tests that reading sub directories will put the reading result into the\n' +
    'store.',
  'Populate fake entries in the file system.',
  'opt_clear=  true);',
  'The entry to be read should be in the store before reading.',
  "Put it in the uiEntries so it won't be cleared.",
  'Dispatch read sub directories action producer.',
  'Expect store to have all its sub directories.',
  'Tests that reading sub directories recursively will put the reading result of\n' +
    'children of grand children into the store.',
  'Populate fake entries in the file system.',
  'opt_clear=  true);',
  'The entry to be read should be in the store before reading.',
  'Set expanded = true, so it will be read deeper.',
  'Dispatch read sub directories action producer.',
  'Expect store to have all its sub directories.',
  "Partial scan for a/ (no `children` but `canExpand: true`) because it's",
  'not expanded.',
  "Full scan for b/ (updated `children`) because it's expanded.",
  'Entry /a/111/ is not here because its parent a/ is not expanded.',
  'Tests that reading a null entry does nothing.',
  'Check reading null entry will do nothing.',
  'Tests that reading a non directory entry does nothing.',
  'Populate a fake file entry in the file system.',
  'opt_clear=  true);',
  'Check reading non directory entry will do nothing.',
  'Tests that reading a disabled entry does nothing.',
  'Make downloadsEntry as disabled.',
  'Check reading disabled volume entry will do nothing.',
  'Tests that reading sub directories for fake drive entry will put the reading\n' +
    'result into the store and handle grand roots properly.',
  "MockVolumeManager will populate Drive's /root, /team_drives, /Computers",
  'automatically.',
  'Create drive root entry list and add all its children.',
  'Add child entries.',
  'opt_clear=  true);',
  'Drive root entry list needs to be in the store before reading.',
  "Put it in the uiEntries so it won't be cleared.",
  'Dispatch read sub directories action producer.',
  'Expect its direct sub directories and grand sub directories of /Computers',
  'should be in the store.',
  "/team_drives/ won't be here because it doesn't have children.",
  "/root children won't be read.",
  'Tests that traverse path entries will read entries for each parent and\n' +
    'expand them if the child entry could be found.',
  'Populate some fake entries.',
  'opt_clear=  true);',
  'Put the volume root and the last child entry in the store.',
  'Dispatch action producer to traverse on the entry path.',
  'Expect dirA and dirB will be in the store and expanded.',
  'Tests that traverse path entries will read entries for each parent, it\n' +
    "won't expand any parent entry if the child entry can not be found.",
  'Populate some fake entries.',
  'opt_clear=  true);',
  'Put the volume root and the last child entry in the store.',
  'Dispatch action producer to traverse on the entry path.',
  'Expect dirA and dirB will be in the store but no entry is expanded.',
  "dirB's children is not being read because read stops when non-exist-url",
  'is encountered.',
  "dirC is cleared because it's not referenced by any other entries.",
  'Tests that file data can be updated correctly.',
  ... 7 more items
]
android_apps.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Android apps slice of the store.\n' +
    'Android App is something we get from private API\n' +
    '`chrome.fileManagerPrivate.getAndroidPickerApps`, it will be shown as a\n' +
    'directory item in FilePicker mode.',
  'Action factory to add all android app config to the store.',
  'For android app item, if no icon is derived from IconSet, set the icon to',
  'the generic one.'
]
android_apps_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests that android apps can be added correctly to the store.',
  'Dispatch an action to add android apps.',
  'Expect both android apps are existed in the store.'
]
bulk_pinning.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Bulk pinning slice of the store.\n' +
    'BulkPinProgress is the current state of files that are being pinned when the\n' +
    'BulkPinning feature is enabled. During bulk pinning, all the users items in\n' +
    'My drive are pinned and kept available offline. This tracks the progress of\n' +
    'both the initial operation and any subsequent updates along with any error\n' +
    'states that may occur.',
  'Create action to update the bulk pin progress.'
]
bulk_pinning_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests that bulk pin progress updates the store and overwrites existing values\n' +
    'on each update.',
  'Dispatch an action to update bulk pin progress.',
  'Expect the bulk pin progress to be updated.',
  'Dispatch another action to change the stage to `SYNCING`.',
  'Expect the bulk pin progress to equal the new state.'
]
current_directory.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Current directory slice of the store.',
  'hostedCount might be updated to undefined in the for loop below.',
  'offlineCachedCount might be updated to undefined in the for loop below.',
  'Returns true if any of the entries in `currentDirectory` are DLP disabled,\n' +
    'and false otherwise.',
  'Create action to change the Current Directory.',
  'Cache entries, so the reducers can use any entry from `allEntries`.',
  "Use an empty selection when a selection isn't defined or it's navigating to",
  'a new directory.',
  "Use empty content when it isn't defined or it's navigating to a new",
  'directory. The content will be updated again after a successful scan.',
  'The new directory might not be in the allEntries yet, this might happen',
  "when starting to change the directory for a entry that isn't cached.",
  'At the end of the change directory, DirectoryContents will send an Action',
  'with the Entry to be cached.',
  'Create action to update currently selected files/folders.',
  'Cache entries, so the reducers can use any entry from `allEntries`.',
  "Update hostedCount to undefined if any entry doesn't have the metadata",
  'yet.',
  "If no availableOffline property, then assume it's available.",
  'Create action to update FileTasks for the current selection.',
  'Apply the changes over the current selection.',
  'Update the selection and current directory objects.',
  "Create action to update the current directory's content.",
  'Cache entries, so the reducers can use any entry from `allEntries`.',
  'Linux package installation is currently only supported for a single file\n' +
    'which is inside the Linux container, or in a shareable volume.\n' +
    'TODO(timloh): Instead of filtering these out, we probably should show a\n' +
    'dialog with an error message, similar to when attempting to run Crostini\n' +
    'tasks with non-Crostini entries.',
  'persiste= false);',
  'Filters out the non-native entries.',
  `File Picker/Save As doesn't show the "Open" button.`,
  'The list of available tasks should not be available to trashed items.',
  'TODO: Migrate TaskHistory to the store.',
  'Generates key based on each FileKey (entry.toURL()).',
  'TODO(lucmult): Add concurrency model, the latest should prevail.',
  'Mark as started.',
  'TODO(lucmult): Add this to concurrency model.',
  'User navigated to another directory.',
  'NOTE: Only implemented for Materialized view for now.',
  'Not an actual error, just stopping the actions producer.'
]
current_directory_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'changeDirectory() reducer uses the VolumeManager.',
  'The current directory starts empty.',
  'Change Directory happens in 2 steps.',
  'First step, start the directory change.',
  'Finish the directory change.',
  'Change the selection for a completely different one:',
  'Append to the selection.',
  'Send the content update:',
  'Send another content update - it should replace the original:',
  'Clear cached entries: only dir2 and file should be kept.',
  'Send the metadata update:',
  'Send a content update and "remove" the disabled file:',
  'Mock returning 0 tasks, returns SUCCESS and empty tasks.',
  'Mock the private API results with one task which is the default task.',
  "Mock the API task as genericFileHandler, so it shouldn't be a default task."
]
device.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Device slice of the store.',
  'Device connection.'
]
device_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Expect the volume to be added.',
  'Dispatch an action to set |connection| for the device to OFFLINE.',
  'Expect the volume to be set to disabled.'
]
drive.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Drive slice of the store.'
]
drive_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Connection type if properly added to the store.',
  'ONLINE connection type with offline reason has the reason ignored.',
  'METERED connection type with offline reason has the reason ignored.',
  'OFFLINE connection type with offline reason gets updated in the store.'
]
folder_shortcuts.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Create action to refresh all folder shortcuts with provided ones.',
  'Cache entries, so the reducers can use any entry from `allEntries`.',
  'Create action to add a folder shortcut.',
  'Cache entries, so the reducers can use any entry from `allEntries`.',
  'Do nothing if the key is already existed.',
  'The folder shortcut array is sorted, the new item will be added just',
  'before the first larger item.',
  'If for loop is not returned, the key is not added yet, add it at the last.',
  'Create action to remove a folder shortcut.',
  'Do nothing if the key is not existed.'
]
folder_shortcuts_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Generate a fake file system with fake file entries.',
  'Tests folder shortcuts can be refreshed correctly.',
  'Add shortcut-1 to the store.',
  'Dispatch a refresh action with shortcut 2 and 3.',
  'Expect all shortcut entries are in allEntries, and only shortcut 2 and 3',
  'are in the folderShortcuts.',
  'Tests folder shortcut can be added correctly.',
  'Add shortcut-1 and shortcut-3 to the store.',
  'Dispatch an action to add shortcut 4.',
  'Expect the newly added shortcut 4 is in the store.',
  'Dispatch another action to add already existed shortcut 1.',
  'Expect no changes in the store.',
  'Dispatch another action to add shortcut 2 to check sorting.',
  'Expect shortcut 2 will be inserted in the middle.',
  'Tests folder shortcut can be removed correctly.',
  'Add shortcut-1 to the store.',
  'Dispatch an action to remove shortcut 1.',
  'Expect shortcut 1 is removed from the store.',
  'Dispatch another action to remove non-existed shortcut 2.',
  'Expect no changes in the store.'
]
launch_params.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Updates the stored launch parameters in the store based on the supplied data.'
]
launch_params_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Update dialogType'
]
materialized_views.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
navigation.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Navigation slice of the store.',
  'My Files.',
  'Cloud.',
  'Removable.',
  "Returns the entry for the volume's top-most prefix or the volume itself.",
  'Create action to refresh all navigation roots. This will clear all existing\n' +
    'navigation roots in the store and regenerate them with the current state\n' +
    'data.\n' +
    "Navigation roots' Entries/Volumes will be ordered as below:\n" +
    '1. Recents.\n' +
    '2. Shortcuts.\n' +
    '3. "My-Files" (grouping), actually Downloads volume.\n' +
    '4. Google Drive.\n' +
    '5. ODFS.\n' +
    '6. SMBs\n' +
    '7. Other FSP (File System Provider) (when mounted).\n' +
    '8. Other volumes (MTP, ARCHIVE, REMOVABLE).\n' +
    '9. Android apps.\n' +
    '10. Trash.',
  'Roots in the desired order.',
  'Set to avoid adding the same entry multiple times.',
  'Add the Recent/Materialized view root.',
  'Add Starred files.',
  'Add the Shortcuts.',
  'TODO: Since Shortcuts are only for Drive, do we need to remove shortcuts',
  "if Drive isn't available anymore?",
  'MyFiles.',
  'Only show separator if this is not the first navigation item.',
  'Add Google Drive - the only Drive.',
  'When drive pref changes from enabled to disabled, we remove the drive root',
  'key from the `state.uiEntries` immediately, but the drive root entry itself',
  'is removed asynchronously, so here we need to check both, if the key',
  "doesn't exist any more, we shouldn't render Drive item even if the drive",
  'root entry is still available.',
  'Add OneDrive placeholder if needed.',
  'OneDrive is always added directly below Drive.',
  'Other volumes.',
  'ODFS is a PROVIDED volume type but is a special case to be directly',
  'below Drive.',
  'ODFS : 0',
  'Filter volumes based on the volumeInfoList in volumeManager.',
  'Only display if the entry is resolved.',
  'MyFiles and Drive is already displayed above.',
  "MediaView volumeType isn't displayed.",
  'Some volumes might be nested inside another volume or entry list, e.g.',
  'Multiple partition removable volumes can be nested inside a EntryList, or',
  'GuestOS/Crostini/Android volumes will be nested inside MyFiles, for these',
  'volumes, we only need to add its parent volume in the navigation roots.',
  'Android Apps.',
  'Trash.',
  'Trash should only show when Files app is open as a standalone app. The ARC',
  'file selector, however, opens Files app as a standalone app but passes a',
  'query parameter to indicate the mode. As Trash is a fake volume, it is',
  'not filtered out in the filtered volume manager so perform it here',
  'instead.',
  'When trash pref changes from enabled to disabled, we remove the trash root',
  'key from the `state.uiEntries` immediately, but the trash entry itself is',
  "removed asynchronously, so here we need to check both, if the key doesn't",
  "exist any more, we shouldn't render Trash item even if the trash entry is",
  'still available.'
]
navigation_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Create FileData for recent entry.',
  'Create FileData for shortcut entry.',
  'Create FileData for MyFiles entry.',
  'Create FileData for drive root entry.',
  'Create FileData for trash entry.',
  'Create android apps.',
  'Create file data and volume data for volume.',
  'Tests that navigation roots with all different types:\n' +
    '1. produces the expected order of volumes.\n' +
    '2. manages NavigationSection for the relevant volumes.\n' +
    '3. keeps MTP/Archive/Removable volumes on the original order.',
  'Put recent entry in the store.',
  'Put 2 shortcut entries in the store.',
  'Put MyFiles entry in the store.',
  'Put drive entry in the store.',
  'Put trash entry in the store.',
  'Put the android apps in the store.',
  'Create different volumes.',
  'Set the device paths of the removable volumes to different strings to',
  'test the behavior of two physically separate external devices.',
  'Dispatch an action to refresh navigation roots.',
  'Expect navigation roots being built in the store:',
  '1.  fake-entry://recent',
  '2.  /root/shortcut1',
  '3.  /root/shortcut2',
  '4.  My files',
  "* Android files - won't be included as root because it's inside",
  'MyFiles.',
  '5.  Google Drive',
  '6.  ODFS',
  '7.  smb:file-share',
  '8.  provided:prov1',
  '9.  provided:prov2',
  '',
  '10.  removable:hoge',
  '11.  removable:fuga',
  '12.  archive:a-rar  - mounted as archive',
  '13.  mtp:a-phone',
  '',
  '14.  android:app1',
  '15.  android:app2',
  '',
  '16.  Trash',
  'Check items order and that MTP/Archive/Removable respect the original',
  'order.',
  'recent.',
  'shortcut1.',
  'shortcut2.',
  'My Files.',
  'Drive.',
  'ODFS',
  'Other FSP, and SMB are grouped together.',
  'smb:file-share.',
  'provided:prov1.',
  'provided:prov2.',
  'MTP/Archive/Removable are grouped together.',
  'removable:hoge.',
  'removable:fuga.',
  'archive:a-rar.',
  'mtp:a-phone.',
  'android:app1.',
  'android:app2.',
  'Trash.',
  'Tests navigation roots with no Recents.',
  'Put shortcut entry in the store.',
  'Put MyFiles entry in the store.',
  'Dispatch an action to refresh navigation roots.',
  'Expect 2 navigation roots.',
  'shortcut.',
  'My Files volume.',
  'Tests navigation roots with fake MyFiles.',
  'Put recent entry in the store.',
  'Put MyFiles entry in the store.',
  'Dispatch an action to refresh navigation roots.',
  'Expect 2 navigation roots.',
  'recent.',
  'My Files entry list.',
  'Tests navigation roots with volumes.',
  'Put recent entry in the store.',
  'Put MyFiles entry in the store.',
  'Put drive entry in the store.',
  "Put removable volume 'hoge' in the store.",
  "Create a shortcut for the 'hoge' volume in the store.",
  "Put removable volume 'fuga' in the store. Not a partition, so set a",
  "different device path to 'hoge'.",
  'Dispatch an action to refresh navigation roots.',
  'Expect 6 navigation roots.',
  'recent.',
  'hoge shortcut.',
  'My Files.',
  'Drive.',
  'hoge volume.',
  'fuga volume.',
  'Tests that for multiple partition volumes, only the parent entry will be\n' +
    'added to the navigation roots.',
  'Add parent entry list to the store.',
  'Create 3 volumes with the same device path so the partitions are grouped.',
  'Dispatch an action to refresh navigation roots.',
  'Expect only the parent entry and MyFiles being added to the navigation',
  'roots.',
  'My Files entry list.',
  ... 16 more items
]
preferences.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Chrome preferences slice of the store.\n' +
    'Chrome preferences store user data that is persisted to disk OR across\n' +
    'profiles, this takes care of initially populating these values then keeping\n' +
    'them updated on dynamic changes.',
  'Type alises to avoid writing the `chrome.fileManagerPrivate` prefix.',
  'A type guard to see if the payload supplied is a change of preferences or the\n' +
    'entire preferences object. Useful in ensuring subsequent type checks are done\n' +
    'on the correct type (instead of the union type).',
  'The field `driveEnabled` is only on a `Preferences` object, so if this is',
  "undefined the payload is a `PreferencesChange` object otherwise it's a",
  '`Preferences` object.',
  'Only update the existing preferences with their new values if they are\n' +
    'defined. In the event of spreading the change event over the existing\n' +
    'preferences, undefined values should not overwrite their existing values.',
  "We're updating the `Preferences` original here and it doesn't type union",
  "well with `PreferencesChange`. Given we've done all the type validation",
  'above, cast them both to the `Preferences` type to ensure subsequent',
  'updates can work.',
  'Create action to update user preferences.',
  'This action takes two potential payloads:',
  '- chrome.fileManagerPrivate.Preferences',
  '- chrome.fileManagerPrivate.PreferencesChange',
  'Both of these have different type requirements. If we receive a',
  '`Preferences` update, just store the data directly in the store. If we',
  'receive a `PreferencesChange` the individual fields need to be checked to',
  "ensure they are different to what we have in the store AND they won't",
  'remove the existing data (i.e. they are not null or undefined).',
  'If no keys have been updated in the preference change, then send back the',
  'original state as nothing has changed.'
]
preferences_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Defines an initial state for user preferences that is used in all the tests.',
  'Tests that bulk pin progress updates the store and overwrites existing values\n' +
    'on each update.',
  'Dispatch an action to update user preferences.',
  'Expect the preferences in the store to be updated.',
  'Dispatch an action to update bulk pin progress.',
  'Test an individual preference update type.\n' +
    'NOTE: Closure types defined on the fileManagerPrivate.PreferencesChange\n' +
    'require that if 1 preference is being updated all others must have a key of\n' +
    "undefined, however, this doesn't mimic the real world scenario of the keys\n" +
    'not existing. Use `any` to ensure this can be passed through.',
  'Expect the preferences in the store to be updated.',
  'Verify all the `boolean` type preferences update appropriately, they are',
  'all initially `false` and this updates them all to `true` one by one.',
  'Folder shortcuts are an array, so test them separately.'
]
search.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Search slice of the store.',
  'Returns if the given search data represents empty (cleared) search.',
  'Helper function that does a deep comparison between two SearchOptions.',
  'If fresh options are undefined, that means keep the stored options. No',
  'matter what the stored options are, we are saying they have not changed.',
  'Special case: if none of the fields are set, the action clears the search',
  'state in the store.',
  'Only change the state if the stored value has some defined values.',
  'Create a clone of current search. We must not modify the original object,',
  'as store customers are free to cache it and check for changes. If we modify',
  'the original object the check for changes incorrectly return false.',
  'Generates a search action based on the supplied data.\n' +
    'Query, status and options can be adjusted independently of each other.',
  'Create action to clear all search settings.',
  'Search options to be used if the user did not specify their own.'
]
search_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Change the options only.',
  'Checks that the search action mutated only options.',
  'Check that changing options does not mutate firstState.',
  'Send the same options again, to verify that unchanged options do not change',
  'the state.',
  'Change the options a bit to verify that one property change inside options',
  'causes search state update.',
  'Check that changing options does not mutate firstState.',
  'Change query and status, and verify that options did not change.',
  'Clear search.'
]
ui_entries.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview UI entries slice of the store.\n' +
    'UI entries represents entries shown on UI only (aka FakeEntry, e.g.\n' +
    "Recents/Trash/Google Drive wrapper), they don't have a real entry backup in\n" +
    'the file system.',
  'Create action to add an UI entry to the store.',
  'Cache entries, so the reducers can use any entry from `allEntries`.',
  'Add UI entry to the store and re-scan MyFiles if the newly added UI entry is\n' +
    'under MyFiles.',
  'If the UI entry to be added is under MyFiles, we also need to update',
  "MyFiles's UI children.",
  'TODO(aidazolic): Add separately.',
  'Check if the the ui entry already has a corresponding volume entry.',
  'We only add the UI entry here if:',
  "1. it does not exist in MyFiles entry's UI children.",
  '2. its corresponding volume (which ui entry is a placeholder for) does',
  "not exist in MyFiles entry's UI children.",
  'Get MyFiles again from the latest state after yield because yield pause',
  'the execution of this function and between the pause MyFiles might',
  'change from EntryList to Volume (e.g. MyFiles volume mounts during the',
  'pause).',
  'Trigger a re-scan for MyFiles to make FileData.children in the store',
  'has this newly added children.',
  'Create action to remove an UI entry from the store.',
  'Remove UI entry from the store and re-scan MyFiles if the removed UI entry is\n' +
    'under MyFiles.',
  "We also need to remove it from the children of MyFiles if it's existed",
  'there.',
  'Get MyFiles from the latest state after yield because yield pause',
  'the execution of this function and between the pause MyFiles might',
  'change.',
  'Trigger a re-scan for MyFiles to make FileData.children in the store',
  'removes this children.'
]
ui_entries_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'sortEntries() from addUiEntry() reducer requires volumeManager and',
  'directoryModel on window.',
  'Generate MyFiles entry with real volume entry.',
  'Tests a normal UI entry can be added correctly.',
  'Dispatch an action to add a UI entry.',
  'Expect the newly added entry is in the store.',
  "Tests that a duplicate UI entry won't be added.",
  'Add one UI entry in the store.',
  'Dispatch an action to add an already existed UI entry.',
  'Expect nothing changes in the store.',
  'Tests that adding UI entry for MyFiles will reset the children filed of\n' +
    'MyFiles entry.',
  'Setup MyFiles entry in the store.',
  'Add children to the MyFiles entry.',
  'Dispatch an action to add a new UI entry which belongs to MyFiles.',
  'Expect 2 ui entries in the store.',
  'Children are in sorted order.',
  'No sorting order, order is based on the push order.',
  'Check the UI entry is added to MyFiles entry.',
  "Tests that UI entry won't be added to MyFiles if it's already existed.",
  'Setup MyFiles entry and add the new ui entry in the store.',
  'Dispatch an action to add an already existed UI entry.',
  'Expect no changes in the store.',
  'Check the UI entry is not being added to MyFiles entry again.',
  "Tests that UI entry won't be added to MyFiles if the corresponding volume\n" +
    'is already existed.',
  'Placeholder UI entry and the volume entry it represents have the same',
  'label.',
  'Setup MyFiles entry and add the volume entry in the store.',
  'Dispatch an action to add UI entry.',
  'Expect the UI entry is not being added to the store.',
  'Check the UI entry is not being added to MyFiles entry again.',
  'Tests that UI entry will be disabled if the corresponding volume\n' +
    'type is disabled in the volume manager.',
  'Dispatch an action to add UI entry.',
  'Disable Android files volume type.',
  'Expect the UI entry is being disabled.',
  'Tests that UI entry can be removed from store correctly.',
  'Setup the UI entry in both uiEntries and allEntries in the store.',
  'Dispatch an action to remove the UI entry.',
  'Expect the UI entry has been removed.',
  "Tests that removing non-existed UI entry won't do anything.",
  'Dispatch an action to remove a non-existed UI entry.',
  'Expect nothing changes in the store.',
  'Tests removing UI entry from MyFiles will also update MyFiles entry.',
  'Setup MyFiles entry and add the ui entry in the store.',
  'Dispatch an action to remove ui entry.',
  'Expect the entry has been removed from MyFiles.',
  'Check the UI entry has also been removed from MyFiles entry.',
  'Test MyFiles children should include PlayFiles even PlayFiles ui entry is\n' +
    "added when there's an ongoing scanning call for MyFiles.",
  'Populate one sub folder for MyFiles.',
  'Add MyFiles to the store.',
  'Dispatch an action to read children of MyFiles. At this moment, the',
  'UiChildren of MyFiles is empty so no `StaticReader` will be added to',
  'MyFiles.',
  'Dispatch an action to add an ui entry at the same time.',
  'Expect PlayFiles should be in the store eventually.'
]
volumes.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Volumes slice of the store.',
  "Should be consistent with EntryList's toURL() method.",
  'Convert VolumeInfo and VolumeMetadata to its store representation: Volume.',
  "FileKey for the volume root's Entry. Or how do we find the Entry for this\n" +
    'volume in the allEntries.',
  "FileKey to volume's parent in the Tree.",
  'A volume is by default interactive unless explicitly made',
  'non-interactive.',
  'Updates a volume from the store.',
  'Given a volume info, check if we need to group it into a wrapper.\n' +
    'When the "SinglePartitionFormat" flag is on, we always group removable volume\n' +
    "even there's only 1 partition, otherwise the group only happens when there\n" +
    'are more than 1 partition in the same device.',
  'Create action to add a volume.',
  'Cache entries, so the reducers can use any entry from `allEntries`.',
  'Update isEjectable fields in the FileData.',
  "Use volume entry's disabled property because that one is derived from",
  'volume manager.',
  'Handles volumes nested inside MyFiles, if local user files are allowed.',
  "It creates a placeholder for MyFiles if MyFiles volume isn't mounted yet.",
  'For volumes which are supposed to be nested inside MyFiles (e.g. Android,',
  'Crostini, GuestOS), we need to nest them into MyFiles and remove the',
  'placeholder fake entry if existed.',
  'Nest the entry for the new volume info in MyFiles.',
  'Remove a placeholder for the currently mounting volume.',
  'Do not remove the placeholder ui entry from the store. Removing it from',
  'the MyFiles is sufficient to prevent it from showing in the directory',
  'tree. We keep it in the store (`currentState["uiEntries"]`) because',
  'when the corresponding volume unmounts, we need to use its existence to',
  'decide if we need to re-add the placeholder back to MyFiles.',
  'Handles MyFiles volume.',
  'It nests the Android, Crostini & GuestOSes inside MyFiles.',
  'Do not use myFilesEntry above, because at this moment both fake MyFiles',
  'and real MyFiles are in the store.',
  'We need to copy the children of the entry list to the real volume',
  'entry.',
  'Remove MyFiles entry list from the uiEntries.',
  'Handles Drive volume.',
  'It nests the Drive root (aka MyDrive) inside a EntryList for "Google',
  'Drive", and also the fake entries for "Offline" and "Shared with me".',
  'When Drive is disabled via pref change, the root key in `uiEntries` will',
  'be removed immediately but the corresponding entry in `allEntries` is',
  "removed asynchronously. When Drive is enabled again, it's possible the",
  "entry is still in `allEntries` but we don't have root key in `uiEntries`.",
  'We want the order to be',
  '- My Drive',
  '- Shared Drives (if the user has any)',
  '- Computers (if the user has any)',
  '- Shared with me',
  '- Offline',
  '',
  'Clear all existing UI children to make sure we can maintain the append',
  'order. For example: when Drive is disconnected and then reconnected, if',
  "we don't clear current children, all other children are still there and",
  'only "My Drive" will be re-added at the end.',
  `Add "Shared drives" (team drives) grand root into Drive. It's guaranteed`,
  'to be resolved at this moment because ADD_VOLUME action will only be',
  'triggered after resolving all roots.',
  `Add "Computer" grand root into Drive. It's guaranteed to be resolved at`,
  'this moment because ADD_VOLUME action will only be triggered after',
  'resolving all roots.',
  'Add "Shared with me" into Drive.',
  'Add "Offline" into Drive.',
  'Handles Removable volume.',
  'It may nest in a EntryList if one device has multiple partitions.',
  'Update the siblings too.',
  'For sub-partition from a removable volume, its children icon',
  "should be UNKNOWN_REMOVABLE, and it shouldn't be ejectable.",
  'At this point the current `newVolumeEntry` is not in `parentEntry`, we',
  'need to add that to that group.',
  'For sub-partition from a removable volume, its children icon should be',
  "UNKNOWN_REMOVABLE, and it shouldn't be ejectable.",
  'Removable devices with group, its parent should always be ejectable.',
  'For volume changes which involves UI children change, we need to trigger a',
  're-scan for the parent entry to populate the FileData.children with its UI',
  'children.',
  'Adding volumes which are supposed to be nested inside MyFiles (e.g.',
  "Android, Crostini, GuestOS) will modify MyFiles's UI children, re-scan",
  'required.',
  'Adding MyFiles volume might inherit UI children from its placeholder,',
  "which modifies MyFiles's UI children, re-scan required.",
  'Adding Drive volume updates UI children for Drive root entry list,',
  're-scan required.',
  'Adding Removable volume which requires grouping updates UI children for',
  'the wrapper entry list, re-scan required.',
  'Create action to remove a volume.',
  'Somehow the volume is already removed from the store, do nothing.',
  'We also need to remove it from its prefix entry if there is one.',
  "Remove it from the prefix entry's UI children.",
  'If the prefix entry is an entry list for removable partitions, and this',
  'is the last child, remove the prefix entry.',
  'No scan is required because the prefix entry is removed.',
  'If the volume entry is under MyFiles, we need to add the placeholder',
  'entry back after the corresponding volume is removed (e.g.',
  'Crostini/Play files).',
  'Re-add the corresponding placeholder ui entry to the UI children.',
  'The UI children for the prefix entry has been changed, re-scan required.',
  'Create action to update isInteractive for a volume.',
  'Find ODFS volume(s) and disable it (or them) if offline.',
  'Make the ODFS FileData/VolumeEntry consistent with its volume in the',
  'store.'
]
volumes_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Mock Chrome APIs.',
  'Generate MyFiles entry with fake entry list.',
  'Generate MyFiles entry with real volume entry.',
  'Tests that MyFiles volume can be added correctly.',
  'Put MyFiles entry list in the store.',
  'Put Play files placeholder UI entry in the store.',
  'Put Linux files volume entry in the store.',
  'Dispatch an action to add MyFiles volume.',
  'Expect the newly added volume is in the store.',
  'Updated to MyFiles volume key.',
  'Tests that volume nested in MyFiles can be added correctly.',
  'Put MyFiles in the store.',
  'Put Play files placeholder UI entry in the store.',
  'Dispatch an action to add Play files volume.',
  'Expect the new play file volume will be nested inside MyFiles and the old',
  'placeholder will be removed from MyFiles children but still in the store.',
  'Tests that drive volume can be added correctly.',
  'Dispatch an action to add Drive volume.',
  'DriveFS takes time to resolve.',
  'Expect all fake entries inside Drive will be added as its children.',
  'My Drive.',
  'My Files entry list.',
  'Fake Drive root entry list.',
  'Shared with me.',
  'Offline.',
  "Shared drives and Computers won't be here because they will be cleared.",
  'Tests that single partition volume can be added correctly.',
  'Dispatch an action to add single partition volume.',
  'Expect the volume is in the store.',
  'There should be a parent wrapper if the flag is on.',
  'Single partition volume.',
  'When there is a parent wrapper, icon and ejectable values are',
  'different.',
  'My Files entry list.',
  'Parent wrapper entry.',
  'Run the above test with FilesSinglePartitionFormat flag off.',
  'Run the above test with FilesSinglePartitionFormat flag on.',
  'Tests that multiple partition volumes can be added correctly.',
  'Dispatch an action to add partition-1 volume.',
  'Dispatch an action to add partition-2 volume.',
  'Dispatch an action to add partition-3 volume.',
  'Expect all 3 partition volumes are in the store and there will be a wrapper',
  'entry created to group all 3 partitions.',
  'Partition-1 volume.',
  'Partition-2 volume.',
  'Partition-3 volume.',
  'My Files entry list.',
  'Parent wrapper entry.',
  'Run the above test with FilesSinglePartitionFormat flag off.',
  'Run the above test with FilesSinglePartitionFormat flag on.',
  'Tests that volume will be disabled if it is disabled in the volume manager.',
  'Dispatch an action to add crostini volume.',
  'Disable crostini volume type.',
  'Expect the volume entry is being disabled.',
  'Tests that drive fake root entry list will be disabled if the drive volume is\n' +
    'disabled in the volume manager.',
  'Dispatch an action to add drive volume.',
  'DriveFS takes time to resolve.',
  'Disable Drive volume type.',
  'Expect the volume entry is being disabled.',
  'Tests that archive volume can be added correctly.',
  'Dispatch an action to add the archive volume.',
  'Expect the volume will be added from the store.',
  'My Files entry list.',
  'Archive.',
  'Tests that volume can be removed correctly.',
  'Dispatch an action to remove the volume.',
  'Expect the volume will be removed from the store.',
  'Tests removing volume from MyFiles will also update the MyFiles entry.',
  'Put MyFiles in the store.',
  'Put Crostini in the store.',
  'Put Linux files placeholder in the store.',
  'Dispatch an action to remove volume.',
  'Expect the volume entry has been removed from MyFiles and the UI entry has',
  'been added back.',
  'Check the volume entry has also been removed from MyFiles entry.',
  'Tests removing grouped removable volume will also update the parent UI entry.',
  'Put partition-1 volume in the store.',
  'Put partition-2 volume in the store.',
  'Put parent wrapper in the store.',
  'Dispatch an action to remove partition1.',
  'Expect the partition1 entry has been removed from its parent entry.',
  'parent entry.',
  'partition2 entry.',
  'Check the partition1 entry has also been removed from parent entry.',
  'Dispatch an action to remove partition2.',
  'Expect the partition2 entry has been removed from its parent entry, but it',
  'still exists in the allEntries, waiting for the schedule cleaning.',
  'parent entry.',
  'partition2 entry.',
  'Check parent entry now has no children.',
  'Expect that the ODFS volume is interactive.',
  'Dispatch an action to set |isInteractive| for the volume to false.',
  'Expect that the volume is set to non-interactive.'
]
file_key.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Key to identify a file/entry.\n' +
    'Type to distinguish it from a regular string.'
]
for_tests.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Compares 2 State objects and fails with nicely formatted message when it\n' +
    'fails.',
  'Returns the `allEntries` size of the passed State.',
  "Compares the current state's allEntries field to the expected list. Fails\n" +
    "with a nicely formatted message if there's a mismatch.",
  'Change the directory in the store.',
  'Updates the selection in the store.',
  'Updates the metadata in the store.',
  'Updates the directory content in the store.',
  'Store state might include objects (e.g. Entry type) which can not stringified\n' +
    'by JSON, here we implement a custom "replacer" to handle that.',
  'Currently only the key with "entry" (inside `FileData`) can\'t be',
  'stringified, we just return its URL.',
  'Waits for a part of the Store to be in the expected state.\n' +
    'Waits a maximum of 10 seconds, since in the unittest the Store manipulation\n' +
    'has all async APIs mocked.\n' +
    'Usage:\n' +
    "let want: StoreSomething = {somePartOfStore: 'desired state'};\n" +
    'store.dispatch(someActionsProducer(...));\n' +
    'await waitDeepEquals(store, want, (state) => state.something);',
  'Setup store and initialize it with empty state.',
  'Setup fileManager dependencies on window object.',
  'Keys are defined in file_manager.d.ts',
  'Create a fake VolumeMetadata with VolumeInfo, VolumeInfo can be created by\n' +
    'MockVolumeManager.createMockVolumeInfo.'
]
state.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Entries from the FileSystem API.',
  'The root of a volume is an Entry from the FileSystem API, but it aggregates',
  'more data from the volume.',
  'A directory-like entry to aggregate other entries.',
  'Placeholder that is replaced for another entry, for Crostini/GuestOS.',
  'Root for the Trash.',
  'Root for the Recent.',
  "A folder-like that doesn't have an entry linked to it.",
  'The data for each individual file/entry.',
  '`key` is the file URL.',
  '`icon` can be either a string or a IconSet which is an object including\n' +
    'both high/low DPI icon data.',
  'TODO(b/271485133): `children` here only store sub directories for now, it\n' +
    "should store all children including files, it's up to the container to do\n" +
    'filter and sorting if needed.',
  'A stronger type for identifying an entry.\n' +
    'Currently entry is identified by its URL as string.\n' +
    'NOTE: Fake entry, as in, entries implemented directly in JS/TS are identified\n' +
    'by a made up URL like:\n' +
    'fake-entry://recent\n' +
    'fake-entry://trash',
  'A stronger type for identifying a volume.',
  'Describes each part of the path, as in each parent folder and/or root volume.',
  'The status of a property, for properties that have their state updated via\n' +
    'asynchronous steps.',
  'Finished:',
  'Task type is the source of the task, or what type of the app is this type\n' +
    'from. It has to match the `taskType` returned in the FileManagerPrivate.\n' +
    'For more details see //chrome/browser/ash/file_manager/file_tasks.h',
  'The task is from a chrome app/extension that has File Browser Handler in',
  'its manifest.',
  'The task is from a chrome app/extension that has File Handler in its',
  'manifest.',
  'The task is from an Android app.',
  'The task is from a Crostini app.',
  'The task is from a Parallels app.',
  'The task is from a Web app/PWA/SWA.',
  "Task Descriptor it's the unique identified for a Task.\n" +
    'For more details see //chrome/browser/ash/file_manager/file_tasks.h',
  'UI representation for File Task.\n' +
    'NOTE: This is slightly different from the FileTask from the\n' +
    'FileManagerPrivate API. Here the task is enhanced to deal with different\n' +
    'displaying icons and labels.\n' +
    'TODO(lucmult): Change isDefault and isGenericFileHandler to boolean when\n' +
    "non-Store version doesn't have to be supported anymore.",
  'Container for FileTask.\n' +
    "`defaultHandlerPolicy` is only set if the user can't change the default\n" +
    'handler due to a policy, either the policy forces the default handler or\n' +
    "the policy is incorrect, but we still don't allow user to change the\n" +
    'default.\n' +
    'TODO(lucmult): keys might not be needed here.',
  'Launch parameters for the file manager.',
  'This represents the entries currently selected, out of the entries\n' +
    'displayed in the file list/grid.',
  'Represents the entries displayed in the file list/grid.',
  'The current directory.\n' +
    'The directory is only effectively active when the `status` is SUCCESS.',
  'Enumeration of all supported search locations. If new location is added,\n' +
    'please update this enum.',
  'Enumeration of all supported how-recent time spans.',
  'The options used by the file search operation.',
  "Data for search. It should be empty `{}` when the user isn't searching.",
  'Used to group volumes in the navigation tree.\n' +
    'Sections:\n' +
    '- TOP: Recents, Shortcuts.\n' +
    '- MY_FILES: My Files (which includes Downloads, Crostini and Arc++ as\n' +
    'its children).\n' +
    '- TRASH: trash.\n' +
    '- GOOGLE_DRIVE: Just Google Drive.\n' +
    '- ODFS: Just ODFS.\n' +
    '- CLOUD: All other cloud: SMBs, FSPs and Documents Providers.\n' +
    '- ANDROID_APPS: ANDROID picker apps.\n' +
    '- REMOVABLE: Archives, MTPs, Media Views and Removables.',
  'Materialized view is used for Recent and in the future for Search.',
  'The key of navigation item, it could be:\n' +
    '* FileKey: the navigation is backed up by a real file entry.\n' +
    '* string: the navigation is backed up by others (e.g. androids_apps).',
  'This represents the navigation root node, it can be backed up by an file\n' +
    'entry or an Android app package (e.g. for android_apps type). If its type\n' +
    "is android_apps, the `key` filed will be android app's package name, not a\n" +
    'file key.',
  "It's just a ordered array with NavigationRoot.",
  'This carries the same information as VolumeInfo, which is very similar to\n' +
    'fileManagerPrivate.VolumeMetadata.\n' +
    'The property names are identical to VolumeInfo to simplify the migration.\n' +
    'Notable differences: missing the properties: profile, remoteMountPath.\n' +
    "When the volume has an unrecognized file system, it's still mounted here,\n" +
    'but with `error`=="unknown".',
  'This carries the state related to physical user device.',
  'This carries the state related to the underlying Drive connection status.\n' +
    'This differs from the device connection state as the Drive can also be in a\n' +
    'effectively paused state when on a metered network.',
  'An extension of `chrome.fileManagerPrivate.AndroidApp`. The only difference\n' +
    'from the private API AndroidApp is this one adds an union type `icon`. This\n' +
    'is because `iconSet` can generate a "none" background sometimes, in this\n' +
    'case we need a backup icon instead.\n' +
    'Note: we keep `iconSet` here to be compatible with the original AndroidApp\n' +
    'type because private API `selectAndroidPickerApp` still requires the\n' +
    'original type. For other use cases, we can ignore `iconSet` and just use\n' +
    '`icon`.',
  "A view behaves like a folder, as in, it's a collection of FileData.\n" +
    'Its content comes from the File Index.',
  "Files app's state."
]
store.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "Files app's Store type.\n" +
    'It enforces the types for the State and the Actions managed by Files app.',
  'Store singleton instance.\n' +
    "It's only exposed via `getStore()` to guarantee it's a single instance.\n" +
    'TODO(b/272120634): Use window.store temporarily, uncomment below code after\n' +
    'the duplicate store issue is resolved.',
  'let store: null|Store = null;',
  "Returns the singleton instance for the Files app's Store.\n" +
    "NOTE: This doesn't guarantee the Store's initialization. This should be done\n" +
    "at the app's main entry point.",
  'TODO(b/272120634): Put the store on window to prevent Store being created',
  'twice.',
  'TODO(b/241707820): Migrate State to allow optional attributes.',
  "Promise resolved when the store's state in an desired condition.\n" +
    'For each Store update the `checker` function is called, when it returns True\n' +
    'the promise is resolved.\n' +
    "Resolves with the State when it's in the desired condition.",
  'Check if the store is already in the desired state.',
  'Returns the `FileData` from a FileKey.',
  'Returns FileData for each key.\n' +
    "NOTE: It might return less results than the requested keys when the key isn't\n" +
    'found.',
  'A function used to select part of the Store.\n' +
    'TODO: Can the return type be stronger than `any`?'
]
xf_base.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview A base class for all Files app(xf) widgets.',
  'A base class for all Files app(xf) widgets.',
  'Expose shadowRootOptions so child classes can use this from XfBase directly.'
]
xf_breadcrumb.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Breadcrumb displays the current directory path.',
  'A path is a "/" separated string.',
  'The maximum number of path elements shown.',
  'emits when any part of the breadcrumb is changed.',
  'Represents the parts extracted from the "path".',
  'Indicates if the elider menu is open or not.',
  'Renders the path <button> parts.',
  'Renders elided path parts in a drop-down menu.',
  'If path changes, we also need to update the state (isMenuOpen_) before',
  'the next render.',
  "Handles 'click' events for path button.\n" +
    'Emits the `BREADCRUMB_CLICKED` event when a breadcrumb button is clicked\n' +
    'with the index indicating the current path part that was clicked.',
  'Handles mouseEnter event for the path button.',
  'Handles keyboard events for path button.',
  "Handles 'click' events for elider button.",
  'Handles keyboard events for elider button.',
  "Handles the custom 'tabkeyclose' event, that indicates a 'Tab' key event\n" +
    'has returned focus to button[elider] while closing its drop-down menu.\n' +
    'Moves the focus to the left or right of the button[elider] based on that\n' +
    "'Tab' key event's shiftKey state.  There is always a visible <button> to\n" +
    'the left or right of button[elider].',
  'Toggles drop-down menu: opens if closed or closes if open via closeMenu_.',
  'Compute drop-down horizontal RTL/LTR position.',
  'Show drop-down below the elider button.',
  'Style drop-down and horizontal position.',
  'Update global <html> and |this| element state.',
  'Closes drop-down menu if needed.',
  'Update global <html> and |this| element state.',
  'Close the drop-down <dialog> if needed.',
  "don't use browser's background-color.",
  'elide wide text',
  'text rendering debounce: fix a minimum width.',
  'text rendering debounce: center.',
  'Reset the hover color when using keyboard to navigate the menu items.',
  "TODO(wenbojie): use elevation variable when it's ready.\n" +
    '--cros-sys-elevation3',
  '`partIndex` is the index of the breadcrumb path e.g.:\n' +
    '"/My files/Downloads/sub-folder" indexes:\n' +
    '0        1         2'
]
xf_breadcrumb_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Creates new <xf-breadcrumb> element for each test. Asserts it has no initial\n' +
    'path using the element.path getter.',
  'Returns the <xf-breadcrumb> element.',
  'Returns the <xf-breadcrumb> child button elements.',
  'Returns the not-hidden <xf-breadcrumb> main button elements. The breadcrumb\n' +
    'main buttons have an id, all other breadcrumb buttons do not.',
  'Returns the last not-hidden <xf-breadcrumb> main button element.',
  'Returns the <xf-breadcrumb> elider button element.',
  'Returns the <xf-breadcrumb> drop-down menu button elements.',
  'Returns <xf-breadcrumb> main button visual state.\n' +
    '@param button Main button (these have an id).\n' +
    '@param i Number to assign to the button.',
  'Returns <xf-breadcrumb> elider button visual state.\n' +
    '@param button Elider button.\n' +
    '@param i Number to assign to the button.',
  'Returns <xf-breadcrumb> drop-down menu button visual state.\n' +
    '@param button Drop-down menu button.',
  'Returns the <xf-breadcrumb> buttons visual state.',
  'Elider should only display for paths with more than 4 parts.',
  "The 'last' main button displayed should always be [disabled].",
  'Sets and Waits for the path to updated in the DOM.',
  'Returns the visible buttons rendered with CSS overflow ellipsis.',
  'Tests rendering an empty path.',
  'Set path.',
  'An empty string is rendered if the path is empty.',
  'Tests rendering a one element path.',
  'Set path.',
  'clang-format off',
  'clang-format on',
  'Tests rendering a two element path.',
  'Set path.',
  'clang-format off',
  'clang-format on',
  'Tests rendering a three element path.',
  'Set path.',
  'clang-format off',
  'clang-format on',
  'Tests rendering a four element path.',
  'Set path.',
  'clang-format off',
  'clang-format on',
  'Tests rendering a path of more than four parts. The elider button should be\n' +
    'visible (not hidden and have display).\n' +
    'The drop-down menu button should contain the elided path parts and can have\n' +
    'display, but are invisible because the elider drop-down menu is closed.',
  'Set path.',
  "Elider button drop-down menu should be in the 'closed' state.",
  'clang-format off',
  'clang-format on',
  'Tests rendering a path where the path parts have escaped characters. Again,\n' +
    'the elider should be visible (not hidden and have display) because the path\n' +
    'has more than four parts.\n' +
    'The drop-down menu button should contain the elided path parts and can have\n' +
    'display, but are invisible because the elider drop-down menu is closed.',
  'Set path.',
  "Elider button drop-down menu should be in the 'closed' state.",
  'clang-format off',
  'clang-format on',
  'Tests rendering a path of more than four parts. The elider button should be\n' +
    "visible and clicking it should 'open' and 'close' its drop-down menu.",
  'Set path.',
  "Elider button drop-down menu should be in the 'closed' state.",
  "Clicking the elider button should 'open' its drop-down menu.",
  'clang-format off',
  'clang-format on',
  "Clicking the elider again should 'close' the drop-down menu.",
  'clang-format off',
  'clang-format on',
  'Tests that clicking on the main buttons emits a signal that indicates which\n' +
    'part of the breadcrumb path was clicked.',
  'Set path.',
  'clang-format off',
  'clang-format on',
  'Tests that clicking on the menu buttons emits a signal that indicates which\n' +
    'part of the breadcrumb path was clicked.',
  'Set path.',
  "Elider button drop-down menu should be in the 'closed' state.",
  "Clicking the elider button should 'open' its drop-down menu.",
  'clang-format off',
  'clang-format on',
  'Tests that setting the path closes the the drop-down menu.',
  'Set path.',
  "Elider button drop-down menu should be in the 'closed' state.",
  "Clicking the elider button should 'open' its drop-down menu.",
  'clang-format off',
  'clang-format on',
  'Changing the path should remove the drop-down menu.',
  'clang-format off',
  'clang-format on',
  'Tests that setting the path updates the <xf-breadcrumb path> attribute.',
  'Set path.',
  'Change path.',
  'Tests that opening and closing the elider button drop-down menu adds and\n' +
    'removes global <html> element state.',
  'Set path.',
  "Elider button drop-down menu should be in the 'closed' state.",
  "Clicking the elider button should 'open' its drop-down menu.",
  'And also change the global element state.',
  'Change path.',
  "Changing the path should 'close' the drop-down menu.",
  'And clear the global element state.',
  'Tests that wide text path components are rendered elided with ellipsis ...\n' +
    'and hovering over the button sets the `title` attribute which is used by the\n' +
    'browser to render the native tooltip.',
  'Set path.',
  'clang-format off',
  'clang-format on',
  'The wide part should render its text with ellipsis.',
  'Simulate the mouseenter that sets the title.',
  'Tests that wide text path components in the drop-down menu are rendered\n' +
    'elided with ellipsis ... and hovering over the button sets the `title`\n' +
    'attribute which is used by the browser to render the native tooltip.',
  'Set path.',
  'clang-format off',
  'clang-format on',
  'Display the dropdown menu.',
  'The wide part button should render its text with ellipsis.',
  'Simulate the mouseenter that sets the title.'
]
xf_bulk_pinning_dialog.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Different flavors of the XfBulkPinningDialog.',
  'The dialog is not displayed.',
  'Currently offline. Cannot compute space requirement for the time being.',
  'Currently not running due to battery saver mode active.',
  'Listing files and computing space requirements.',
  'An error occurred while computing the space requirements.',
  "There isn't enough space to activate the bulk-pinning feature.",
  'Computed space requirements and ready to activate the bulk-pinning feature.',
  'Dialog that shows the benefits of enabling bulk pinning along with storage\n' +
    "information if the feature can't be enabled.",
  'Called when the app has changed state.',
  'If bulk-pinning gets enabled while this dialog is open, just cancel this',
  'dialog.',
  "We're only interested in the bulk-pinning part of the app state.",
  'Shows the footer matching the given state.',
  "Enables or disables the 'Continue' button according to the given state.",
  'Indicates if this dialog is currently open.',
  'Shows the dialog and starts calculating the required space for',
  'bulk-pinning.',
  'Called when the "Continue" button is clicked.',
  'Called when the "Cancel" button is clicked.',
  'Called when the "Learn more" link is clicked.',
  'Called when the "View storage" link is clicked.'
]
xf_bulk_pinning_dialog_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Gets the <xf-bulk-pinning-dialog> element.',
  'Gets a footer of the given dialog.',
  'Gets a button of the given dialog.',
  'Gets the `innerText` of the <span> element of the given dialog.',
  'Tests that XfBulkPinningDialog.onStateChanged() correctly reacts to app State',
  'events.',
  'Show the dialog.',
  'Get relevant dialog elements.',
  'At first, listingFooter should be displayed.',
  'Create an empty app State event.',
  "This event should be ignored since it doesn't have a bulkPinning member.",
  'Set the bulkPinning member.',
  'Test different bulk-pinning stages.',
  'Change the different sizes in State.bulkPinning.',
  'If the pin manager sends an event with the SYNCING stage, this dialog',
  'should disappear.',
  'Tests that XfBulkPinningDialog.onStateChanged() correctly reacts when the',
  'bulk-pinning feature gets activated.',
  'Show the dialog.',
  'Tests that clicking the "Cancel" button closes the XfBulkPinningDialog.',
  'Show the dialog.',
  'Click the "Cancel" button.',
  'The dialog should now be closed.',
  'Tests that clicking the "Continue" button enables bulk-pinning and closes the',
  'XfBulkPinningDialog.',
  'Show the dialog.',
  'Make sure the dialog is ready to continue.',
  'Click the "Continue" button.',
  'The dialog should now be closed.',
  'Tests that clicking the "Learn More" link opens the appropriate URL.',
  'Show the dialog.',
  'Click the "Learn More" link.',
  'Tests that clicking the "View Storage" link opens the appropriate settings',
  'page.',
  'Show the dialog.',
  'Click the "View Storage" link.',
  'Test when listed files has a count, it appears in the footer dialog.',
  'Show the dialog.',
  'Dispatch the listing files state with 100 files listed.'
]
xf_cloud_panel.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview xf-cloud-panel element.',
  'These type indicate static states that the cloud panel can enter. If one of\n' +
    'these is supplied, `items` and `percentage` is ignored.',
  'The `<xf-cloud-panel>` represents the current state that the Drive bulk\n' +
    'pinning process is currently in. When files are being pinned and downloaded,\n' +
    'the `items` and `progress` attributes are used to signify that the panel is\n' +
    'in progress. The `type` attribute can be used with `not_enough_space`,\n' +
    '`offline`, and `battery_saver` to signify possible error or paused states.',
  'The number of items currently syncing.',
  'The percentage that should be represented in the progress bar, this also\n' +
    'ensures the value is a valid value within the range [0, 100].',
  'Attempts to map the supplied `type` attribute to an available value.',
  'The cloud panel uses the `CrActionMenu` to provide the dialog behaviour and\n' +
    'the overlay logic.',
  'Provide a number formatter that matches the users locale.',
  'Returns true if the dialog is open, false otherwise.',
  'Show the element relative to the cloud icon that was clicked.',
  'Close the panel.',
  "Refires the close event to ensure it's a known `XfCloudPanel` event to\n" +
    'subscribe to.',
  'Handles click events for the Google Drive settings button. This emits the\n' +
    'event to be handled by the container.'
]
xf_cloud_panel_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Creates new <xf-cloud-panel> for each test.',
  'Returns the <xf-cloud-panel> element.',
  'Checks that a computed style equals `want`.',
  'The different types of selectors that appear.',
  'Checks that a panel type is visible and that all the other types are hidden.',
  'Some stages use flexbox to center or vertically align their items, others',
  'use a normal block display.',
  'Tests that the initial `<xf-cloud-panel>` element defaults to the preparing',
  'state until both items and percentage are set.',
  'Expect neither `items` nor `progress` to be set on `<xf-cloud-panel>`.',
  'When no items or percentage is set on the element, it should show in a',
  'preparing state.',
  'Tests that when updating the progress values, it updates the underlying',
  'progress bar element.',
  'The initial progress state should default to preparing.',
  'Update the items and progress',
  'Wait for the progress bar to update and the #progress-state div to show.',
  'Tests that when clicking the "Google Drive settings" button an event is',
  'emitted.',
  'Set up an event listener for the button to be clicked.',
  'Click the "Google Drive settings" button.',
  'Wait until the number of clicks has incremented.',
  'Tests that when percentage is 100% it should show the "All files synced"',
  'state and not the progress state.',
  'When no attributes have been set, should default to preparing.',
  'Update the items to 3 and total percentage to 50%.',
  'Ensure the progressStateElement is showing but the finished element is not.',
  'Update the total percentage to 100%.',
  'Ensure the progressState is not showing but the finished element is',
  'showing.',
  'Tests that when the offline type attribute is supplied, the other states',
  'should all be hidden.',
  'When no attributes have been set, should default to preparing.',
  'Update the items to 3 and total percentage to 50%.',
  'Ensure only the in progress element is visible.',
  'Update the type to be offline.',
  'Ensure the only visible div is the offline one.',
  'Tests that when the not_enough_space type attribute is supplied, the other',
  'states should all be hidden.',
  'When no attributes have been set, should default to preparing.',
  'Update the items to 3 and total percentage to 50%.',
  'Ensure only the in progress element is visible.',
  'Update the type to be not_enough_space.',
  'Ensure the only visible div is the not_enough_space one.',
  'Tests that only accepted cloud panel types are valid values for the `type`',
  'attribute.',
  'The `type` attribute should initially be undefined.',
  'Setting it to a valid value should update the underlying type.',
  'Setting it to some random value will update the HTML elements type',
  'attribute but the actual elements `type` property will get set to null as',
  'it is not an acceptable value.',
  'Tests that when percentage is 0, the progress is shown instead of preparing.',
  'Setting the items to 1 but no percentage should show the preparing state.',
  'Only setting the percentage attribute should stay in preparing.',
  'When percentage is 0 and items is 1, the preparing should disappear and the',
  'progress should show.',
  'When no items are set but the percentage is 100, the panel should be',
  'finished.',
  'The type attribute should take precedence over progressing.',
  'Tests that metered network properly updates the state.',
  'Setting it to a valid value should update the underlying type.'
]
xf_conflict_dialog.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Files Conflict Dialog: if the target file of a copy/move operation exists,\n' +
    'the conflict dialog can be used to ask the user what to do in that case.\n' +
    "The user can choose to 'cancel' the copy/move operation by cancelling the\n" +
    "dialog. Otherwise, the user can choose to 'replace' the file or 'keepboth'\n" +
    'to keep the file.',
  'Mutex used to serialize conflict modal dialog use.',
  'Modal dialog element.',
  "Either 'keepboth' or 'replace' on dialog success, or an empty string if\n" +
    'the dialog was cancelled.',
  'Returns dialog success result using the Promise.resolve method.',
  'Returns dialog cancelled error using the Promise.reject method.',
  'Construct.',
  'Create element content.',
  'DOM connected callback.',
  'Open the modal dialog to ask the user to resolve a conflict for the given\n' +
    '|filename|. The default parameters after |filename| are as follows:\n' +
    "Set |checkbox| true to display the 'Apply to all' checkbox in the dialog,\n" +
    'and should be set true if there are potentially, multiple file names in\n' +
    'a copy or move operation that conflict. The default is false.\n' +
    'Set |directory| true if the |filename| is a directory (aka a folder). The\n' +
    'default is false.',
  'Resets the dialog for the given |filename| |checkbox| and |folder| values\n' +
    'and then shows the modal dialog.',
  'The conflict dialog has no title. Remove the <cr-dialog> title child that\n' +
    'would focus, remove its <dialog> aria-labelledby and aria-describedby, so\n' +
    'ARIA announces the #message (that is the initial focus) once.\n' +
    'Per https://w3c.github.io/aria-practices/#dialog_roles_states_props, adds\n' +
    "aria-modal='true' meaning all content outside the <dialog> is inert.",
  "Returns 'dialog' element.",
  "Returns 'dialog' <dialog> element.",
  "Returns 'message' element.",
  "Returns 'Apply to all' checkbox element.",
  "'Apply to all' checkbox value changed.",
  "Returns 'cancel' button element.",
  'Dialog was cancelled.',
  "Returns 'keepboth' button element.",
  "Dialog 'keepboth' button was clicked.",
  "Returns 'replace' button element.",
  "Dialog 'replace' button was clicked.",
  'Triggered by the modal dialog close(): rejects the Promise if the dialog\n' +
    'was cancelled or resolves it with the dialog result.'
]
xf_conflict_dialog_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Creates new <xf-conflict-dialog> for each test.',
  'Returns the <xf-conflict-dialog> element.',
  'Tests that the message element has the focus when the dialog opens. Child\n' +
    'UI elements (the dialog buttons, checkbox) must not be focused by design,\n' +
    'and ARIA will announce the focused element (the message).',
  'Check: the dialog should not be open.',
  "Open the conflict dialog for 'file-name' with random optional params.",
  'Check: the dialog should be visible.',
  'Check: the message element should have the focus.',
  'Check: the child <dialog> title element should be removed.',
  'Check: the child <dialog> has the correct ARIA attributes.',
  "Tests that the dialog opens with no 'Apply to all' checkbox shown.",
  'Check: the dialog should not be open.',
  'Open the conflict dialog for a given file name.',
  "Check: the dialog message should contain 'file.txt'.",
  "Check: the 'Apply to all' checkbox should not be shown.",
  "Tests that the dialog can open with the 'Apply to all' checkbox shown.",
  'Check: the dialog should not be open.',
  'Open the conflict dialog for a given file name, with a checkbox.',
  "Check: the dialog message should contain 'image.jpg'.",
  "Check: the 'Apply to all' checkbox should be shown.",
  'Tests that the dialog can open with the directory (aka a folder) message\n' +
    'text shown.',
  'Check: the dialog should not be open.',
  'Open the conflict dialog for a given file name, with no checkbox, and',
  '(test-case) message text indicating that the file type is a folder.',
  "Check: the dialog message should contain 'Downloads'.",
  "Check: the 'Apply to all' checkbox should not be shown.",
  "Tests that clicking the 'Apply to all' checkbox changes the dialog checked\n" +
    'state attributes, properties, and button texts.',
  'Check: the dialog should not be open.',
  'Open the conflict dialog for a given file name, with a checkbox.',
  "Check: the 'Apply to all' checkbox should be shown.",
  'Get the keepboth and replace buttons.',
  'Check: clicking the checkbox should change the checked state.',
  'Check: the checkbox should gain the focus.',
  'Check: clicking the checkbox should change the checked state.',
  'Check: the checkbox should retain the focus.',
  'Tests that the dialog checked state is reset when the dialog opens.',
  'Check: the dialog should not be open.',
  'Open the conflict dialog for a given file name, with a checkbox.',
  'Get the keepboth and replace buttons.',
  "Check: the 'Apply to all' checkbox should be shown.",
  'Check: clicking the checkbox should change the checked state.',
  'Close the modal dialog while in checked state. Closing should reject',
  'the resultPromise with a cancelled Error.',
  'Check: the dialog closed and should still have checked state.',
  'Open the dialog again.',
  'Check: the checked state should be reset when the dialog opens.',
  'Tests that the dialog consumes keyboard events.',
  'Check: the dialog should not be open.',
  'Open the conflict dialog for a given file name.',
  'Keyboard events should not bubble up to the <xf-conflict-dialog>. The',
  '<cr-dialog> should consume them (modal behavior).',
  "Create a <ctrl>-A keyboard event. The event has 'composed' true so it",
  'can cross shadow DOM boundaries and bubble up into the DOM.',
  'Add <cr-dialog> listener to confirm it saw the keyboard event.',
  'Check: the <cr-dialog> should consume keyboard events.',
  'Tests that cancel button closes the dialog with a cancelled error.',
  'Check: the dialog should not be open.',
  'Open the conflict dialog for a given file name.',
  'Check: the cancel button should be shown.',
  'Clicking the cancel button should close the dialog.',
  'And reject resultPromise with a dialog cancelled Error.',
  "Tests that replace button closes the dialog with a 'replace' result.",
  'Check: the dialog should not be open.',
  'Open the conflict dialog for a given file name.',
  'Check: the replace button should be shown.',
  'Clicking the replace button should close the dialog.',
  "And resolve the resultPromise with a 'replace' result.",
  'Open the conflict dialog for a given file name, with the checkbox.',
  "Check: the 'Apply to all' checkbox should be shown.",
  'Check: clicking the checkbox should change the checked state.',
  'Check: the replace button should be shown.',
  'Clicking the replace button should close the dialog.',
  "And resolve the resultCheckboxPromise with a 'replace' result.",
  "Tests that keepboth button closes the dialog with a 'keepboth' result.",
  'Check: the dialog should not be open.',
  'Open the conflict dialog for a given file name.',
  'Check: the keepboth button should be shown.',
  'Clicking the keepboth button should close the dialog.',
  "And resolve the resultPromise with a 'keepboth' result.",
  'Open the conflict dialog for a given file name, with the checkbox.',
  "Check: the 'Apply to all' checkbox should be shown.",
  'Check: clicking the checkbox should change the checked state.',
  'Check: the keepboth button should be shown.',
  'Clicking the keepboth button should close the dialog.',
  "And resolve the resultCheckboxPromise with a 'keepboth' result.",
  'Tests that requests to open the dialog are serialized.',
  'Check: the dialog should not be open.',
  'Send multiple show requests to the <xf-conflict-dialog>.',
  'Wait until the dialog is open.',
  "Check: the dialog message should be for 'file1.txt'.",
  'Click the keepboth button.',
  "Check: resultPromise1 should resolve with a 'keepboth' result.",
  "Wait until the dialog is re-opened for 'file2.txt'.",
  'Click the replace button.',
  "Check: resultPromise2 should resolve with a 'replace' result."
]
xf_dlp_restriction_details_dialog.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Dialog to show Data Leak Prevention (DLP) restriction details about a file.',
  'Create element content.',
  'Shows the dialog.\n' +
    '@param details DLP restriction details. Should not be empty and should\n' +
    'contain at most one element per level (only the first one will be\n' +
    'used).',
  'Add a section for each restriction level.',
  'Renders restriction details for the given level.\n' +
    '@param level DLP level. Must be one of BLOCK, WARN, REPORT.',
  'If `urls` is not empty, creates a formatted string with the restricted\n' +
    'destination URLs and shows it in the label designated for `level`. If\n' +
    '`urls` is empty, hides the corresponding element in the dialog. Expects\n' +
    'that `level` is one of BLOCK, WARN, REPORT.\n' +
    'If the restricted list includes a wildcard, then instead of a list "all\n' +
    `urls" is used. In that case, if there's a level with higher priority than\n` +
    'the one being rendered, "all urls except..." is used.\n' +
    '@param urls List of restricted URLs.\n' +
    '@param level DLP level. Must be one of BLOCK, WARN, REPORT.',
  'Append "except" all higher levels.',
  '@param level Level to be checked.\n' +
    '@returns List of levels, if any, with higher priority.',
  'If `components` is not empty, creates a formatted string with the\n' +
    'restricted components and shows it in the label designated for `level`. If\n' +
    '`components` is empty, hides the corresponding element in the dialog.\n' +
    'Expects that `level` is one of BLOCK, WARN, REPORT.\n' +
    '@param components List of restricted components.\n' +
    '@param level DLP level. Must be one of BLOCK, WARN, REPORT.'
]
xf_dlp_restriction_details_dialog_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Creates new <xf-dlp-restriction-details-dialog> element for each test.',
  'Returns the <xf-dlp-restriction-details-dialog> element.',
  'Returns the block details span element of the dialog.',
  'Returns the warn details span element of the dialog.',
  'Returns the report details span element of the dialog.',
  'Checks that the surronding list element for `level` is not hidden and returns\n' +
    'the `destinations` label of the dialog.\n' +
    "@level DLP level used to get the right elements. One of 'block', 'warn',\n" +
    "'report'.\n" +
    "@destinations One of 'urls' or 'components'.",
  'Checks that the "block-li-urls" element is not hidden and returns the\n' +
    'corresponding "block-urls" label of the dialog.',
  'Checks that the "warn-li-urls" element is not hidden and returns the\n' +
    'corresponding "warn-urls" label of the dialog.',
  'Checks that the "report-li-urls" element is not hidden and returns the\n' +
    'corresponding "report-urls" label of the dialog.',
  'Checks that the "block-li-components" element is not hidden and returns the\n' +
    'corresponding "block-components" label of the dialog.',
  'Checks that the "warn-li-components" element is not hidden and returns the\n' +
    'corresponding "warn-components" label of the dialog.',
  'Checks that the "report-li-components" element is not hidden and returns the\n' +
    'corresponding "report-components" label of the dialog.',
  'Closes the dialog.',
  'Tests that only the URL section for the block section is shown.',
  'Components should still be hidden.',
  'Other restriction levels should still be hidden.',
  'Tests that wildcard is shown as "all urls", any other specific URLs\n' +
    'listed along the wildcard are ignored, and components are not affected by the\n' +
    'wildcard.',
  'Other restriction levels should still be hidden.',
  'Tests that wildcard is shown as "all urls except..." if there are some URLs\n' +
    'with a higher restriction level.',
  'Components should still be hidden.',
  'Other restriction levels should still be hidden.',
  'Tests that only the components section for the block section is shown.',
  'Urls should still be hidden.',
  'Other restriction levels should still be hidden.',
  'Tests that showing the dialog multiple times in a row still shows correct\n' +
    'data.',
  'Other restriction levels should still be hidden.',
  'Block section should now be hidden.',
  'Report urls should now be hidden.',
  'Block and warn sections should now be hidden.'
]
xf_icon.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The icon size, can be "extra-small", "small" or "large" (from\n' +
    '`XfIcon.size`).',
  'The icon type, different type will render different SVG file\n' +
    '(from `ICON_TYPES`).',
  'Some icon data are directly passed from outside in base64 format. If\n' +
    '`iconSet` is provided, `type` will be ignored.',
  'Ignore checking "type" if iconSet is provided.',
  'These icons are never shown on their own but are shown as suffix icons,\n' +
    'hence why they are smaller with offset margins. At the moment these are\n' +
    'only supported with "small" size prefix icons.'
]
xf_icon_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'By default the size should be small.',
  'Check large size should change the width/height.'
]
xf_inline_status.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Sync status element used in both table and grid views that indicates sync\n' +
    'progress and file pinning.',
  'Syncing, hence displaying "queued" or "in progress".'
]
xf_jellybean.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Element which controls pre- and post-jellybean migration UI.',
  'Jellybean status does not change during runtime. We can cleanup the',
  'unused variant.'
]
xf_nudge.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The diameter of the dot that appears beside the anchor. Keep this up to date\n' +
    'with the width of the dot in the `xf_nudge.html` file.',
  'The default indent that the dot is from the side of the bubble.',
  "An XfNudge represents an element on the screen to draw the user's\n" +
    'attention to a specific portion of the screen. This can be a new feature, the\n' +
    'location of a file that has just changed etc.',
  'The dot element that appears near the anchor point.',
  'The bubble that contains the text content highlighting the anchor.',
  'The anchor element that the nudge should be highlighting.',
  'The internal content slot that is used to set the text of the nudge.',
  'The dismiss button element.',
  'The direction of the nudge relative to the anchor.',
  'The content of the nudge.',
  'Text used in the dismiss button. When empty the button is hidden.',
  'How many times the nudge has been repositioned, this is reset when the\n' +
    'nudge is hidden.',
  'Show the nudge attached to a provided anchor. Note: This class should not\n' +
    'handle any logic on _when_ a nudge should be shown. This should be\n' +
    'completely handled by the NudgeManager.',
  'Hide the nudge. Note: This class should not handle any logic on _when_ a\n' +
    'nudge should be hidden. This should be completely handled by the\n' +
    'NudgeManager.',
  'Rather than removing the nudge elements from the DOM, render them',
  'off-screen so that they change size correctly when the nudge contents are',
  'updated. In doing this, they will be the correct size before attempting',
  'to position the nudge the next time it is shown.',
  'Repositions the nudge component to be anchored to the anchor.',
  'Reset CSS values which might not get set.',
  'Sets the anchor that the nudge is tied to. This element will serve as the\n' +
    'point where the nudge will position itself relative to.',
  'Get the anchor this nudge is highlighting.',
  'Sets the content that the nudge will show.',
  'Returns the content that the nudge will display.',
  'Sets the text for the dismiss button, when empty hides the button.',
  'Sets the direction of the nudge to appear relative to the anchor point.',
  'Helper method that exposes the bounding DOMRect of the dot to introspect in\n' +
    'tests.',
  'Helper method that exposes the bounding DOMRect of the bubble to introspect\n' +
    'in tests.',
  'Returns the number of repositions for the nudge that is currently showing.\n' +
    'This is reset when the nudge is hidden.',
  'Position the dot of the nudge to be at the correct position to the anchored\n' +
    'element.',
  'Position the bubble that has the nudge contents vertically above or below\n' +
    'the dot.',
  "Calculate the bubble's vertical position.",
  'Fixed position bottom refers to how far the bottom edge of the element',
  'should be from the bottom edge of the window, so transform our value to',
  'account for this difference in semantics.',
  "Calculate the bubble's horizontal position.",
  'E.g.,',
  '_________________',
  '|  Nudge        |',
  '|_______________|',
  '.',
  '[]',
  'Calculate the ideal right edge position for the bubble to have it',
  'appear towards the left of the dot.',
  "The bubble's right edge should be `DEFAULT_DOT_INDENT_PX` further right",
  "than the dot's right edge.",
  'The bubble should not be positioned so far right that it goes',
  'off-screen.',
  'Fixed position right refers to how far the right edge of the element',
  'should be from the right edge of the window, so transform our value to',
  'account for this difference in semantics.',
  'E.g.,',
  '_________________',
  '|  Nudge        |',
  '|_______________|',
  '.',
  '[]',
  'Calculate the ideal left offset for the bubble to have it appear',
  'towards the right of the dot.',
  'Position the bubble that has the nudge contents horizontally to the left or\n' +
    'right of the dot.',
  "Calculate the bubble's vertical position.",
  "We can't guarantee the height of the anchor, so position the bottom of",
  'the bubble 10px below the dot.',
  'Fixed position bottom refers to how far the bottom edge of the element',
  'should be from the bottom edge of the window, so transform our value to',
  'account for this difference in semantics.',
  "We can't guarantee the height of the anchor, so position the top of the",
  'bubble 10px above the dot.',
  "Calculate the bubble's horizontal position.",
  'E.g.,',
  '_________________',
  '|  Nudge        |',
  '|_______________| . []',
  'Fixed position right refers to how far the right edge of the element',
  'should be from the right edge of the window, so transform our value to',
  'account for this difference in semantics.',
  'E.g.,',
  '_________________',
  '|  Nudge        |',
  '[] . |_______________|',
  'For the remainder methods, look at the NudgeDirection to understand what\n' +
    'they mean.',
  'The direction a nudge should render relative to its anchor.',
  'Shows above the anchor and extends to the left in LTR.',
  'Shows above the anchor and extends to the right in LTR.',
  'Shows below the anchor and extends to the left in LTR.',
  'Shows below the anchor and extends to the right in LTR.',
  'Shows left of the anchor in LTR and grows upwards if the content spans\n' +
    'multiple lines.',
  'Shows left of the anchor in LTR and grows downwards if the content spans\n' +
    'multiple lines.',
  'Shows right of the anchor in LTR and grows upwards if the content spans\n' +
    'multiple lines.',
  'Shows right of the anchor in LTR and grows downwards if the content spans\n' +
    'multiple lines.'
]
xf_nudge_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Creates new <xf-nudge> element for each test.',
  'Clears the <xf-nudge> between each test to ensure a clean slate.',
  'Returns the <xf-nudge> component in the DOM.',
  "Tests that show doesn't work if content or anchor is not set.",
  'The nudge should throw an error without setting content or anchor.',
  'The nudge should throw when content is added but no anchor.',
  'After setting an anchor, show should not throw.',
  'The nudge should be positioned in the viewport somewhere (the next tests',
  'asserts that somewhere).',
  'Tests that the dot and bubble are appropriately set given the location of the\n' +
    'anchor element.',
  'Create an anchor element and insert it before the nudge in the DOM.',
  'Update the nudge contents, direction and anchor it to the element created',
  'above.',
  'The y-ordinate for the dot must be lower than the height of the anchor',
  '(100px) + the height of the dot (8px) + a predefined gap (4px)',
  'The x-ordinate for the dot must be half of the anchor element (50px) + half',
  'the width of the dot (4px) to ensure if it is positioned at the screen edge',
  "it doesn't appear half off the edge.",
  'The y-ordinate for the bubble must start lower than the dot + height of the',
  'dot (8px) + a predetermined gap (4px)',
  'The x-ordinate for the bubble must be less than the x-ordinate for the dot',
  'as it uses the `NudgeDirection.BOTTOM_ENDWARD` direction which tries to',
  'show directly under the dot and extend evenly unless that extends past the',
  'window width.',
  'Tests that the nudge gets repositioned appopriately if the element moves.',
  'Insert an anchor and make it position relative to ensure we can position it',
  'using the left and right style attributes.',
  'Update and show the nudge.',
  'The nudge dot should be relative to the anchor.',
  'Update the anchor to be 300px inset in the page.',
  "Reposition the nudge should update it's position to be relative to the",
  'newly positioned anchor element.',
  'Tests that setting the dismissText displays the dismiss button and setting an\n' +
    'empty text hides the button.',
  'Create an anchor element and insert it before the nudge in the DOM.',
  'Add the dismiss text and display the nudge.',
  'Check that the button is visible.',
  '<xf-nudge> fires its DISMISS event when user clicks on the dismiss button.',
  'Displaying without dismiss text, the button should be hidden.'
]
xf_password_dialog.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The custom element tag name.',
  'Exception thrown when user cancels the password dialog box.',
  'Dialog to request user to enter password. Uses the askForPassword() which\n' +
    'resolves with either the password or rejected with USER_CANCELLED.',
  'Mutex used to serialize modal dialogs and error notifications.',
  'Controls whether the user is validating the password (Unlock button or\n' +
    'Enter key) or cancelling the dialog (Cancel button or Escape key).',
  'Return input password using the resolve method of a Promise.',
  'Return password prompt error using the reject method of a Promise.',
  'Password dialog.\n' +
    'TODO(crbug.com/40858292): This type should be CrDialogElement, and\n' +
    'an import of that type from cr_dialog.js should be added to this file.',
  'Input field for password.',
  'Called when this element is attached to the DOM.',
  'Asks the user for a password to open the given file.\n' +
    '@param filename Name of the file to open.\n' +
    '@param password Previously entered password. If not null, it\n' +
    'indicates that an invalid password was previously tried.\n' +
    '@return Password provided by the user. The returned\n' +
    'promise is rejected with USER_CANCELLED if the user\n' +
    'presses Cancel.',
  'An invalid password has previously been entered for this file.',
  "Display an 'invalid password' error message.",
  'Shows the password prompt represented by |filename|.\n@param filename',
  "Triggers a 'Cancelled by user' error.",
  'Sends user input password.',
  'Resolves the promise when the dialog is closed.\n' +
    'This can be triggered by the buttons, Esc key or anything that closes the\n' +
    'dialog.'
]
xf_password_dialog_unittest.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Adds a XfPasswordDialog element to the page.',
  'Get the <xf-password-dialog> element.',
  'Get its sub-elements.',
  'Tests that the password dialog is modal.',
  'Check that the dialog is closed.',
  'Open the password dialog.',
  'Wait until the dialog is open.',
  'Check that the name of the encrypted zip displays correctly on the dialog.',
  'Enter password.',
  'Keyboard events should not propagate out to the <xf-password-dialog>',
  'element. The internal <cr-dialog> element should handle keyboard events',
  'and should prevent them from bubbling up to the <xf-password-dialog>',
  'element (modal operation).',
  'Add a <cr-dialog> listener to confirm it saw the test keyboard event.',
  "Create a <ctrl>-A keyboard event. The event has 'composed' true, so it",
  'can cross shadow DOM bondaries and bubble up into the DOM document.',
  'Dispatch the keyboard event to the <cr-input> inner <input> element.',
  'Check: the <xf-password-dialog> should be modal.',
  'Tests cancel functionality of password dialog for single encrypted archive.\n' +
    'The askForPassword method should return a promise that is rejected with\n' +
    'USER_CANCELLED.',
  'Check that the dialog is closed.',
  'Open password prompt.',
  'Wait until the dialog is open.',
  'Check that the name of the encrypted zip displays correctly on the dialog.',
  'Enter password.',
  'Click the cancel button closes the dialog.',
  'The dialog should be hidden.',
  'The passwordPromise should be rejected with',
  'USER_CANCELLED.',
  'The password input field should be cleared.',
  'Check that the dialog is closed.',
  'Tests unlock functionality for single encrypted archive. The askForPassword\n' +
    'method should return a promise that resolves with the expected input\n' +
    'password.',
  'Check that the dialog is closed.',
  'Open password prompt.',
  'Wait until the dialog is open.',
  'Check that the name of the encrypted zip displays correctly on the dialog.',
  'Enter password.',
  'Click the unlock button.',
  'Wait until the second password promise is resolved with the password value',
  'found in the input field.',
  'The password input field should be cleared.',
  'Check that the dialog is closed.',
  "Tests opening the password dialog with an 'Invalid password' message. This\n" +
    'message is displayed when a wrong password was previously entered.',
  'Check that the dialog is closed.',
  'Open password prompt.',
  'Wait until the dialog is open.',
  'Check that the name of the encrypted zip displays correctly on the dialog.',
  'Check that the previous erroneous password is prefilled in the dialog.',
  'Check that the previous erroneous password is prefilled in the dialog.',
  'Tests cancel functionality for multiple encrypted archives.',
  'Check that the dialog is closed.',
  'Simulate password prompt for multiple archives.',
  'Wait until the dialog is open.',
  'Check that the name of the encrypted zip displays correctly on the dialog.',
  'Enter password.',
  'Click the cancel button closes the dialog.',
  'The passwordPromise should be rejected with',
  'USER_CANCELLED.',
  'The password input field should be cleared.',
  'Wait for password prompt dialog for second archive.',
  'Enter password.',
  'Click the cancel button closes the dialog.',
  'The passwordPromise should be rejected with',
  'USER_CANCELLED.',
  'The password input field should be cleared.',
  'Check that the dialog is closed.',
  'Tests unlock functionality for multiple encrypted archives.',
  'Check that the dialog is closed.',
  'Simulate password prompt for multiple archives.',
  'Wait until the dialog is open.',
  'Check that the name of the encrypted zip displays correctly on the dialog.',
  'Enter second password.',
  'Click the unlock button.',
  'Wait until the second password promise is resolved with the password value',
  'found in the input field.',
  'Wait until the dialog is open for the second password.',
  'Wait until the dialog is open.',
  'Check that the name of the encrypted zip displays correctly on the dialog.',
  'Enter third password.',
  'Click the unlock button.',
  'Wait until the second password promise resolves with the password value',
  'found in the input field.',
  'The password input field should be cleared.',
  'Check that the dialog is closed.'
]
xf_pie_progress.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Displays a pie shaped progress indicator.\n' +
    'Accepts a `progress` property ranging from 0 to 1.',
  'This should be a number between 0 and 1.',
  'The progress pie is drawn as an arc with a thick stroke width (as thick',
  'as the radius of the pie).'
]
xf_search_options.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The enumeration of strings used to identify the kind of option that changed.',
  'The interface that specifies the type of the detail field in the custom\n' +
    'SEARCH_OPTIONS_CHANGED event.',
  'The kind of option that has changed (LOCATION, RECENCY, FILE_TYPE).',
  'The current value of the changed option.',
  'Helper function for constructing a SEARCH_OPTIONS_CHANGED event.',
  'Search options is a composite element that allows users to tweak specifics of\n' +
    'the file search operation. For example, it presents an UI for selecting the\n' +
    'desired file type.\n' +
    'It emits the `SEARCH_OPTIONS_CHANGED` event when the options change. The\n' +
    'detail filed of the event carries information what option changes and to what\n' +
    'value. It is up to the creator of this element to set values that are\n' +
    'meaningful. Typical use:\n' +
    "const element = document.createElement('xf-search-options');\n" +
    'element.setLocationOptions(new Map<string, string>([\n' +
    "['value-a', 'Text of value A'],\n" +
    '...\n' +
    ']);\n' +
    'element.addEventListener(\n' +
    'SEARCH_OPTIONS_CHANGED, (event) => {\n' +
    'if (event.detail.kind === OptionKind.LOCATION) {\n' +
    "if (event.detail.value === 'value-a') {\n" +
    '// adjust search options, based on value-a being selected.\n' +
    '}\n' +
    '}\n' +
    '});',
  'Create element content.',
  'On DOM connected initialize all event listeners. We do not disconnect them,\n' +
    'as the only time we get DOM disconnected is when the entire files app is\n' +
    'closed.',
  'Provides access to the location select element.',
  'Provides access to the recency select element.',
  'Provides access to the file type select element.',
  'The name of the even generated by this widget.',
  'A custom event that informs the container which option kind change to what\n' +
    'value. It is up to the container to interpret these.'
]
xf_search_options_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Creates new <xf-search-options> element for each test.',
  'Returns the <xf-search-options> element.'
]
xf_select.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview xf-select element which is ChromeOS <select>..</select>.',
  'The data structure used to set the new options on the select element.\n' +
    'The value field should be independent of the user locale, while text should\n' +
    'be a string corresponding to the value in the user locale.',
  "The locale independent value, e.g., 'home'.",
  "The locale dependent string, e.g., 'hejmen' in Esperanto.",
  'Whether this is the default option, shown prior to user actions.',
  'The data structure used to inform SELECTION_CHANGED listeners about the\n' +
    'current selection. Posted in the event detail.',
  'Implements an element similar to HTML select, customized for ChromeOS files.\n' +
    'It emits the `SELECTION_CHANGED` event when the selected element change. The\n' +
    'detail filed of the event carries index of the new element, its value and the\n' +
    'text visible to the user.\n' +
    "const element = document.createElement('xf-select');\n" +
    'element.options = [\n' +
    "{value: 'value-a', text: 'Text of value A'},\n" +
    '...\n' +
    '];\n' +
    "element.icon = 'select-location';\n" +
    'element.addEventListener(\n' +
    'SELECTION_CHANGED, (event) => {\n' +
    "if (event.detail.value === 'value-a') {\n" +
    '... // React to value-a being selected.\n' +
    '}\n' +
    '});',
  'The name of the icon to be used by the xf-select. This icon name must match\n' +
    'the name of an icon in the\n' +
    '//ui/file_manager/file_manager/foreground/images/files/ui/',
  'The options available for selection.',
  'The current selected value.',
  'The alignment of items in the dropdown menu. Can be one of\n' +
    "'start', 'center', 'end'.",
  'emits when the currently selected option changed.',
  'The button that toggles the options menu.',
  'The options menu.',
  'The currently selected option.',
  'Returns whether the component is expanded, with options visible, or\n' +
    'collapsed.',
  'Returns a template of the chip that shows the currently selected filter\n' +
    'value.',
  'Returns a template of the dropdown which shows available choices.',
  'Attempts to find the index of the value among options.',
  'If the index is within range of option list, updates the selected value to\n' +
    'the one at the given index.',
  'Attempts to establish the index of the selected item. The priority is given\n' +
    'the the value attribute. If set, it decides which option is selected. If\n' +
    'not set we pick either the first option, or the option with the default set\n' +
    'to true.',
  'If we could not match the value, look for the default option.',
  'Invoked when the toggle button is clicked. Toggles the visibility of the\n' +
    'dropdown options.',
  'Opens the dropdown options, providing they were closed.',
  'Closes the dropdown options, providing they were open.',
  'React to one of the options being selected. If the selection changed the\n' +
    'currently selected option, it updates the value, which prompts\n' +
    're-rendering. It also posts a selection change event. Finally it always\n' +
    'closes the option, regardless of change.',
  'Returns the currently selected option. If nothing is selected the index is\n' +
    'set to -1, and text and value are set to an empty string.',
  'Dispatches SELECTION_CHANGED event with the current value of the selected\n' +
    'options.',
  'CSS used by the xf-select widget.',
  'Reset the hover color when using keyboard to navigate the menu items.',
  "TODO(wenbojie): use elevation variable when it's ready.\n" +
    '--cros-sys-elevation3',
  'A custom event that informs the container which option kind change to what\n' +
    'value. It is up to the container to interpret these.'
]
xf_select_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Creates new <xf-search-options> element for each test.',
  'Returns the <xf-search-options> element.',
  'Test 1: Expect the option with default: true to be the selected one.',
  'Test 2: No option has default: true; expect the first one to be selected.',
  'Open.',
  'Click the first option.'
]
xf_splitter.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Another touch start (we somehow missed touchend or touchcancel).',
  'Send a resize event if either side changed size.',
  'Handles mouse down on the splitter.',
  'Activate only for first button (0).',
  'Inhibit selection.',
  'Handles touchstart on the splitter.'
]
xf_splitter_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Creates new <xf-splitter> element for each test.',
  'Returns the <xf-splitter> element.',
  'Returns the <div> element that is the splitter separator.',
  'Tests that the default layout takes up the full client width.',
  'Check: width of splitter is the two panes plus default splitter bar size.',
  'Tests that firing move events on the splitter change the child sizes.',
  'Move the splitter 10px to the right with mouse events.',
  "Check: 'before' section has grown and 'after' section has shrunk.",
  'Move the splitter 15px to the right with touch events.',
  "Check: 'before' section has grown and 'after' section has shrunk.",
  'Move splitter 12px to the left with mouse events.',
  "Check: 'before' section has shrunk and 'after' section has grown.",
  'Tests that RTL layout changes the child sizes correctly.',
  'Move the splitter 10px to the right with mouse events.',
  "Check: 'before' section has shrunk and 'after' section has grown.",
  'Move the splitter 15px to the right with touch events.',
  "Check: 'before' section has shrunk and 'after' section has grown.",
  'Move splitter 12px to the left with mouse events.',
  "Check: 'before' section has grown and 'after' section has shrunk."
]
xf_tree.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '<xf-tree> is the container of the <xf-tree-item> elements. An example\n' +
    'DOM structure is like this:\n' +
    '<xf-tree>\n' +
    '<xf-tree-item>\n' +
    '<xf-tree-item></xf-tree-item>\n' +
    '</xf-tree-item>\n' +
    '<xf-tree-item></xf-tree-item>\n' +
    '</xf-tree>\n' +
    'The selection and focus of <xf-tree-item> is controlled in <xf-tree>,\n' +
    'this is because we need to make sure only one item is being selected or\n' +
    'focused.',
  'Triggers when a tree item has been selected.',
  'Return the selected tree item, could be null.',
  'Return the focused tree item, could be null.',
  'The child tree items.',
  'The child tree items which can be tabbed/focused into.',
  'The default unnamed slot to let consumer pass children tree items.',
  'The child tree items.',
  'Maintain these in the tree level so we can make sure at most one tree item\n' +
    'can be selected/focused.',
  'Value to set aria-setsize, which is the number of the top level child tree\n' +
    'items.',
  'The <xf-tree> itself is not focusable, it will delegate the focus down to\n' +
    'its `focusedItem_`.\n' +
    'Note: previously we use `delegatesFocus: true` in the shadowRootOptions,\n' +
    'but it triggers weird behavior b/320580121, hence the override here.',
  'Binding all these events at the host element level because the blank',
  "space of the tree doesn't belong to the root <ul> element.",
  'Update `items_` every time when the children slot changes (e.g.',
  'add/remove).',
  'Handles the collapse event of the tree item.',
  'If the currently focused tree item (`oldFocusedItem`) is a descent of',
  'another tree item (`treeItem`) which is going to be collapsed, we need to',
  'mark the ancestor tree item (`this`) as focused.',
  'Called when the user clicks within the host element.',
  "Mouse right click won't trigger click event, so this check is not",
  'necessary in real scenario. This is mainly for the browser test because',
  'waitAndRightClickEvent will actually trigger a click event with button=2.',
  'Stop if the the click target is not a tree item.',
  'Clicking the non tree item area should focus the whole tree, which will',
  'delegate the focus to the currently focusable child tree item.',
  'Use composed path to know which element inside the shadow root',
  'has been clicked.',
  'Called when the user double clicks within the host element.',
  'Stop if the the click target is not a tree item.',
  'Double clicking the non tree item area should focus the whole tree,',
  'which will delegate the focus to the currently focusable child tree',
  'item.',
  'Use composed path to know which element inside the shadow root',
  'has been clicked.',
  'Called when mouse down event happens within the host element.',
  'Only handle the right click here, left click is handled by the click',
  'handler above.',
  'Stop if the the click target is not a tree item.',
  'Right clicking the non tree item area should focus the whole tree,',
  'which will delegate the focus to the currently focusable child tree',
  'item.',
  'Called when a context menu event happens within the host element.',
  'Delegate the tree level contextmenu event to the focused child tree item.',
  'Note: tree item contextmenu event will never arrive here because the',
  'event listener registered in ContextMenuHandler stops propagation after',
  'showing the context menu. So the handler here is only for right clicking',
  'on the blank space area (e.g. outside the root <ul> element).',
  'Calculate the center point of the tree item, so <xf-tree-item> knows',
  'where to show the context menu pop-up.',
  'Handle the keydown within the host element, this mainly handles the\n' +
    'navigation and the selection with the keyboard.',
  'We allow repeated keydown (e.g. hold the key without releasing to trigger',
  'event multiple times) only for ArrowUp/ArrowDown, so users can use hold',
  'arrow up/down to quickly navigate to the tree items far away.',
  "Don't let back/forward keyboard shortcuts be used.",
  'Helper function that returns the next tabbable tree item.',
  'Another helper function that returns the next tabbable tree item.',
  'Helper function that returns the previous tabbable tree item.',
  'Helper function that returns the last tabbable tree item in the subtree.',
  'Make `itemToSelect` become the selected item in the tree, this will\n' +
    'also unselect the previously selected tree item to make sure at most\n' +
    'one tree item is selected in the tree.',
  'When tree item gets selected programmatically (e.g. not through',
  'mouse/keyboard), there might be other elements on the page which have',
  "the focus, we don't want to steal the focus, so all we do here is to",
  'make the item focusable.',
  'Make `itemToFocus` become the focusable, this will also make the previously\n' +
    'focused item non-focusable so we can make sure only 1 tree item is\n' +
    'focusable, this is essential for "delegatesFocus" to work.\n' +
    "Note: this method only make the item to be focusable, it won't actually\n" +
    'focus the item, we need to call `.focus()` after to focus it.',
  'Type of the tree item selection custom event.',
  'The tree item which has been selected previously.',
  'The tree item which has been selected now.'
]
xf_tree_item.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The number of pixels to indent per level.',
  "`separator` attribute will show a top border for the tree item. It's\n" +
    'mainly used to identify this tree item is a start of the new section.',
  'Indicate if a tree item is disabled or not. Disabled tree item will have\n' +
    "a grey out color, can't be selected, can't get focus. It can still have\n" +
    "children, but it can't be expanded, and the expand icon will be hidden.",
  'Indicate if a tree item has been selected or not.',
  'Indicate if a tree item has been expanded or not.',
  'Indicate if a tree item is in renaming mode or not.',
  'A tree item will have children if the child tree items have been inserted\n' +
    'to its default slot. Only use `mayHaveChildren` if we want the tree item\n' +
    'to appeared as having children even without the actual child tree items\n' +
    '(e.g. no DOM children). This is mainly used when we asynchronously loads\n' +
    'child tree items.',
  'The icon of the tree item, will be displayed before the label text.\n' +
    'The icon value should come from `ICON_TYPES`, it will be passed\n' +
    'as `type` to a <xf-icon> widget to render an icon element.',
  'The icon set is an object which contains multiple base64 image data, it\n' +
    'will be passed as `iconSet` property to `<xf-icon>` widget.\n' +
    'Note: `icon` will be ignored if `iconSet` is provided.',
  'The label text of the tree item.',
  'Triggers when a tree item has been expanded.',
  'Triggers when a tree item has been collapsed.',
  'The level of the tree item, starting from 1.',
  'The child tree items.',
  'The child tree items which can be tabbed.',
  'Toggle the focusable for the item. We put the tabindex on the <li> element\n' +
    'instead of the whole <xf-tree-item> because <xf-tree-item> also includes\n' +
    'all children slots.\n' +
    'We are delegate the focus to the <li> element in the shadow DOM, to make\n' +
    'sure the update is synchronous, we are operating on the DOM directly here\n' +
    'instead of updating this in the render() function.\n' +
    'Note: "tabindex = -1" is also considered as "focusable" according to the\n' +
    'spec\n' +
    'https://html.spec.whatwg.org/multipage/interaction.html#the-tabindex-attribute,\n' +
    'so we need to remove the "tabindex" attribute below to make it\n' +
    'non-focusable.',
  'Override focus() so we can manually focus the tree row element inside\n' +
    'shadow DOM.',
  'Make sure this is the only focusable item in the tree before calling',
  'focus().',
  'Return the parent XfTreeItem if there is one, for top level XfTreeItem\n' +
    "which doesn't have parent XfTreeItem, return null.",
  'Expands all parent items.',
  'This will be called when tree item is being set as a drop target.',
  'Indicate the level of this tree item, we use it to calculate the padding\n' +
    'indentation. Note: "aria-level" can be calculated by DOM structure so\n' +
    'no need to provide it explicitly.',
  'The child tree items.',
  'When <xf-tree-item> responds to the "contextmenu" event, the `e.target`\n' +
    'will always be the host element even if we put the focus on the inner\n' +
    `".tree-row" element, this is because it's inside the shadow DOM. To make\n` +
    'sure the context menu shows in the correct location (when triggered by\n' +
    'keyboard), we need to expose this method to re-position the menu based on\n' +
    `the ".tree-row"'s bounding box. This method will be invoked by\n` +
    '`ContextMenuHandler`.',
  'Update `items_` every time when the children slot changes (e.g.',
  'add/remove).',
  "If an expanded item's last children is deleted, update expanded property.",
  'Explicitly trigger an update because render() relies on hasChildren(),',
  'which relies on `this.items_`.',
  'For browser test use only.',
  'Update the level of the tree item by traversing upwards.',
  'Traverse upwards to determine the level.',
  "We need this layer to make sure there's no gap between tree items, so\n" +
    "when we drag items onto the tree items, it won't activate the parent tree\n" +
    'item unexpectedly.',
  'input is attached by DirectoryTreeNamingController.',
  'We need to ensure that even empty labels take up space.',
  'Trailing icon styles.',
  'Type of the tree item expanded custom event.',
  'The tree item which has been expanded.',
  'Type of the tree item collapsed custom event.',
  'The tree item which has been collapsed.'
]
xf_tree_item_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Construct a single tree item.',
  'Construct a tree with nested tree items.',
  'Tree structure:',
  '── item1',
  '├── item1a',
  '└── item1b',
  '└── item1bi',
  '── item2',
  'Helper method to get tree item by id.',
  'Helper method to get tree item by id.',
  'Helper method to get inner elements from a tree item.',
  'Tests tree item can be rendered without tree or child tree items.',
  "Check item1's parent/children.",
  'Test attributes on the root element.',
  'Test inner elements.',
  'Tests tree item can be rendered with child tree items.',
  "Check item1's parent/children.",
  "Check item1b's parent/children.",
  'Tests "may-have-children" attribute.',
  'Expand icon is hidden by default (no aria-expanded).',
  'Set may-have-children=true.',
  'Expand-icon should be visible now (has aria-expanded).',
  'Tests tree item level will be correctly updated.',
  'Tests trialing icon can be rendered correctly.',
  'Add a trailing icon for item1.',
  "Tests disabled tree item won't be included in the tabbable items.",
  'By default item1 has 2 tabbable items.',
  'Disable item1b.',
  'aria-disabled should be true and expand icon should be hidden.',
  'item1b will be ignored in tabbable items.',
  'Tests tree item can be selected.',
  'Select item1bi.',
  'All its parent chain will be expanded.',
  'Unselect item1bi.',
  'Tests tree item can be expanded.',
  'By default children items are not displayed.',
  'Expand item1.',
  'Assert the event is triggered.',
  'Assert the children items are shown.',
  'Tests tree item can be collapsed.',
  'Select item1b.',
  'Collapse item1.',
  'Assert the event is triggered.',
  'Assert the children items are hidden.',
  'Tests adding/removing tree items.',
  'Add item1a as a child to item1.',
  'Add item1b as a child to item1.',
  'Remove item1a.',
  'Tests expanded item will become collapsed when last child is removed.',
  'Expand item1.',
  'Remove item1a.',
  'Remove item1b.',
  'item1 will be collapsed because all its children are removed.',
  'Tests removal of the selected item.',
  'Select item1a.',
  'Remove item1a.',
  'The selected item should be null now.',
  'Tests removal of the focused item.',
  'Focus item1a.',
  'Select item1b.',
  'Remove item1a.',
  'The focused item should be the selected item now.',
  'Tests that iconSet has higher priority than icon property.',
  'Set both icon and iconSet.',
  'Check only iconSet property is set for the xf-icon.',
  'Tests the has-children attribute.',
  'Check has-children attribute is false because we have no children.',
  'Add a child item for item1.',
  'Check has-children attribute is true now because we have 1 child now.'
]
xf_tree_unittest.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Helper method to get tree root <ul>.',
  'Helper method to get tree item by id.',
  'Helper method that checks that focused item is correct.',
  'Force focus the tree before checking document.activeElement. This is',
  'because if the tree item itself is selected programmatically (e.g. via',
  '".selected = true"), the `.focusedItem` will update but it won\'t be',
  'actually focused(). For more details check `Tree.makeItemFocusable_()`.',
  'Construct a tree with only direct children.',
  'Tree structure:',
  '── item1',
  '── item2',
  'Construct a tree with nested children.',
  'Tree structure:',
  '── item1',
  '├── item1a',
  '└── item1b',
  '└── item1bi',
  '── item2',
  'Tests tree element can render without child tree items.',
  'Tests tree element can render with child tree items.',
  'Tests tree selection change.',
  'Change at the tree item level.',
  'Change at the tree level.',
  'Tests tree item navigation by pressing home and end key.',
  'Expand item1 and item1b, then select item1bi.',
  'Home -> item1.',
  'End -> item2.',
  'Tests tree item navigation by pressing arrow up and down key.',
  'Select and focus item1.',
  'By default all items are collapsed.',
  'ArrowDown -> item2.',
  'ArrowUp -> item1.',
  'Expand item1.',
  'ArrowDown -> item1a.',
  'ArrowDown -> item1b.',
  'ArrowDown -> item2.',
  'ArrowUp -> item1b.',
  'Expand item1b.',
  'ArrowDown -> item1bi.',
  'ArrowDown -> item2.',
  'ArrowUp -> item1bi.',
  'ArrowUp -> item1b.',
  'ArrowUp -> item1a.',
  'ArrowUp -> item1.',
  'Tests no affect for arrow up key if tree item has no previous sibling.',
  'Select item1 (no previous sibling).',
  'ArrowUp -> item1 is still focused.',
  'ArrowUp again.',
  'Tests no affect for arrow down key if tree item has no next sibling.',
  'Select item2 (no next sibling).',
  'ArrowDown -> item2 is still focused.',
  'ArrowDown again.',
  'Tests tree item expand/collapse by pressing arrow left and right key.',
  'Select item1.',
  'ArrowRight -> expand item1.',
  'Selected/focus item should not be changed.',
  'ArrowRight -> focus first child item1a.',
  'ArrowLeft -> item1.',
  'Selected item and expand status should not be changed.',
  'ArrowRight -> item1a.',
  'ArrowDown -> item1b.',
  'ArrowRight -> expand item1b.',
  'ArrowRight -> item1bi.',
  'Select item1bi.',
  'ArrowLeft -> item1b.',
  'ArrowLeft -> collapse item1b.',
  'ArrowLeft -> item1.',
  'ArrowLeft -> collapse item1.',
  'Tests no affect for arrow left key if tree item has no parent.',
  'Select item1 (no parent).',
  'ArrowLeft -> item1 is still focused.',
  'ArrowLeft again.',
  'Tests no affect for arrow right key if tree item has no children.',
  'Select item2 (no children).',
  'ArrowRight -> item2 is still focused.',
  'ArrowRight again.',
  'Tests tree item expand/collapse by pressing arrow left and right key in\n' +
    'RTL mode.',
  'Select item1.',
  'ArrowLeft -> expand item1.',
  'Selected/focus item should not be changed.',
  'ArrowLeft -> focus first child item1a.',
  'ArrowRight -> item1.',
  'Selected item and expand status should not be changed.',
  'ArrowLeft -> item1a.',
  'ArrowDown -> item1b.',
  'ArrowLeft -> expand item1b.',
  'ArrowLeft -> item1bi.',
  'Select item1bi.',
  'ArrowRight -> item1b.',
  'ArrowRight -> collapse item1b.',
  'ArrowRight -> item1.',
  'ArrowRight -> collapse item1.',
  'Tests tree item selection by pressing Enter/Space key.',
  'Use Enter to select item2.',
  'Use Space to select item1.',
  'Tests tree item can be expanded by single click.',
  'Single click on the expand-icon.',
  ... 56 more items
]
xf_tree_util.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Check if an `Element` is a tree or not.',
  'Check if an `Element` is a tree item or not.',
  "When tree slot or tree item's slot changes, we need to check if the change\n" +
    'impacts the selected item and focused item or not, if so we update the\n' +
    '`selectedItem/focusedItem` in the tree.',
  'If the currently selected item exists in `oldItems` but not in',
  "`newItems`, it means it's being removed from the children slot,",
  'we need to mark the selected item to null.',
  'If the currently focused item exists in `oldItems` but not in',
  "`newItems`, it means it's being removed from the children slot,",
  'we need to mark the focused item to the currently selected item.'
]
background.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Entry point for Image Loader.',
  'Load the extension.'
]
cache.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Last modification timestamp.',
  'Persistent cache storing images in an indexed database on the hard disk.',
  'IndexedDB database handle.',
  'Initializes the cache database.\n@param callback Completion callback.',
  'Establish a connection to the database or (re)create it if not available',
  "or not up to date. After changing the database's schema, increment",
  'DB_VERSION to force database recreating.',
  'Sets size of the cache.\n' +
    '@param size Size in bytes.\n' +
    '@param transaction Transaction to be reused. If not provided, then a new\n' +
    'one is created.',
  'Fetches current size of the cache.\n' +
    '@param onSuccess Callback to return the size.\n' +
    '@param onFailure Failure callback.\n' +
    '@param transaction Transaction to be reused. If not\n' +
    'provided, then a new one is created.',
  'Evicts the least used elements in cache to make space for a new image and\n' +
    'updates size of the cache taking into account the upcoming item.\n' +
    '@param size Requested size.\n' +
    '@param onSuccess Success callback.\n' +
    '@param onFailure Failure callback.\n' +
    '@param dbTransaction Transaction to be reused. If not provided, then a new\n' +
    'one is created.',
  'Check if the requested size is smaller than the cache size.',
  'Enough space, no need to evict.',
  'Fetch all metadata.',
  'Saves an image in the cache.\n' +
    '@param key Cache key.\n' +
    '@param timestamp Last modification timestamp. Used to detect if the image\n' +
    'cache entry is out of date.\n' +
    '@param width Image width.\n' +
    '@param height Image height.\n' +
    '@param ifd Image ifd, null if none.\n' +
    '@param data Image data.',
  'Make sure there is enough space in the cache.',
  'Check if the image is already in cache. If not, then save it to',
  'cache.',
  'Loads an image from the cache.\n' +
    '@param key Cache key.\n' +
    '@param timestamp Last modification timestamp. If different than the one in\n' +
    'cache, then the entry will be invalidated.\n' +
    '@param onSuccess Success callback.\n' +
    '@param onFailure Failure callback.',
  'Check if all sub-requests have finished.',
  'Check if both entries are available or both unavailable.',
  'Process the responses.',
  'The image not found.',
  'The image is not up to date, so remove it.',
  'The image is available. Update the last load time and return the',
  'image data.',
  'Removes the image from the cache.\n' +
    '@param key Cache key.\n' +
    '@param onSuccess Success callback.\n' +
    '@param onFailure Failure callback.\n' +
    '@param transaction Transaction to be reused. If not provided, then a new\n' +
    'one is created.',
  'If either cache size or metadata entry is not available, then it is an',
  'error.',
  'Fetch the current cache size.',
  "Receive image's metadata.",
  'Cache database name.',
  'Cache database version.',
  'Memory limit for images data in bytes.',
  'Minimal amount of memory freed per eviction. Used to limit number\n' +
    'of evictions which are expensive.'
]
cache_unittest.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
image_loader.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Loads and resizes an image.',
  'Persistent cache object.',
  'Manages pending requests and runs them in order of priorities.',
  'Initialize the cache and then start the scheduler.',
  'Listen for incoming requests.',
  'Each connection is expected to handle a single request only.',
  'Handler for incoming requests.',
  'Sending a response may fail if the receiver already went offline.',
  'This is not an error, but a normal and quite common situation.',
  'Ignore the error.',
  "Incoming requests won't have the full type.",
  'Handles a request. Depending on type of the request, starts or stops\n' +
    'an image task.\n' +
    '@return True if the message channel should stay alive until the\n' +
    'callback is called.',
  'Cancel a task.',
  'Create a request task and add it to the scheduler (queue).',
  'Returns a singleton instance.',
  'List of extensions allowed to perform image requests.'
]
image_loader_client.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Client used to connect to the remote ImageLoader extension. Client class runs\n' +
    'in the extension, where the client.js is included (eg. Files app).\n' +
    'It sends remote requests using IPC to the ImageLoader class and forwards\n' +
    'its responses.\n' +
    'Implements cache, which is stored in the calling extension.',
  'LRU cache for images.',
  'Returns a singleton instance.',
  'Sends a message to the Image Loader extension.\n' +
    '@param request The image request.\n' +
    '@param callback Response handling callback. The response is passed as a\n' +
    'hash array.',
  'Loads and resizes and image.\n' +
    '@param callback Response handling callback.\n' +
    '@return Remote task id or null if loaded from cache.',
  'Replace the client origin with the image loader extension origin.',
  'Try to load from cache, if available.',
  'Load from cache.',
  'Check if the image in cache is up to date. If not, then remove it.',
  'It relies on comparing `null` equals to `undefined`.',
  'eslint-disable-next-line eqeqeq',
  'Remove from cache.',
  'Not available in cache, performing a request to a remote extension.',
  'Save to cache.',
  'Cancels the request. Note the original callback may still be invoked if\n' +
    "this message doesn't reach the ImageLoader before it starts processing.\n" +
    '@param taskId Task id returned by ImageLoaderClient.load().',
  'Helper functions.',
  'Loads and resizes and image.\n' +
    '@param image Image node to load the requested picture into.\n' +
    '@param onSuccess Callback for success.\n' +
    '@param onError Callback for failure.\n' +
    '@return Remote task id or null if loaded from cache.',
  "Image loader's extension id.",
  'Image loader client extension request URL matcher.',
  'Image loader client chrome://file-manager request URL matcher.',
  'All client request URL match CLIENT_URL_REGEX and all are\n' +
    'rewritten: the client extension id part of the request URL is replaced with\n' +
    'the image loader extension id.',
  'Memory limit for images data in bytes.'
]
image_loader_client_unittest.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Lets the client to load URL and returns the local cache (not caches in the\n' +
    'image loader extension) is used or not.\n' +
    '@param url URL\n' +
    '@param cache Whether to request caching on the request.\n' +
    '@return True if the local cache is used.'
]
image_loader_private.d.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Definitions for chrome.imageLoaderPrivate API\n' +
    'Generated from: chrome/common/extensions/api/image_loader_private.idl\n' +
    'run `tools/json_schema_compiler/compiler.py\n' +
    'chrome/common/extensions/api/image_loader_private.idl -g ts_definitions` to\n' +
    'regenerate.'
]
image_loader_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Casts a map of options as an incoming load request to test CopyParameters.\n' +
    '@return Calculated copy parameters.',
  'Test case:\n- Source image: 200x50\n- Target: max size is 100x100',
  'Test case:\n' +
    '- Source image: 50x200 90 deg clock-wise rotated image.\n' +
    '- Target: max size is 100x100',
  'Test case:\n- Source image: 800x100\n- Target: 50x50 cropped image.',
  'Test case:\n- Source image: 200x25\n- Target: 50x50 cropped image.',
  'Test case:\n- Source image: 20x10\n- Target: 50x50 cropped image.',
  'Test case:\n' +
    '- Source image: 100x400 90 degree clock-wise rotated.\n' +
    '- Target: 50x50 cropped image'
]
image_loader_util.ts [
  'Copyright 2017 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Checks if the options on the request contain any image processing.\n' +
    '@param width Source width.\n' +
    '@param height Source height.\n' +
    '@param request The request, containing resizing options.\n' +
    '@return True if yes, false if not.',
  'Dimensions has to be adjusted.',
  'Orientation has to be adjusted.',
  'No changes required.',
  'Calculates dimensions taking into account resize options, such as:\n' +
    '- scale: for scaling,\n' +
    '- maxWidth, maxHeight: for maximum dimensions,\n' +
    '- width, height: for exact requested size.\n' +
    'Returns the target size as hash array with width, height properties.\n' +
    '@param width Source width.\n' +
    '@param height Source height.\n' +
    '@param request The request, containing resizing options.\n' +
    '@return Dimensions.',
  'Performs resizing and cropping of the source image into the target canvas.\n' +
    '@param source Source image or canvas.\n' +
    '@param target Target canvas.\n' +
    '@param request The request, containing resizing options.',
  'Calculates copy parameters.',
  'Apply.',
  'Calculates copy parameters.\n' +
    '@param source Source image or canvas.\n' +
    '@param request The request, containing resizing options.\n' +
    '@return Calculated copy parameters.',
  'When an image is cropped, target should be a fixed size square.',
  'The length of shorter edge becomes dimension of cropped area in the',
  'source.',
  'Target dimension is calculated in the rotated(transformed) coordinate.'
]
image_orientation.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Clockwise degrees / 90.',
  'Class representing image orientation.',
  'The constructor takes 2x2 matrix value that cancels the image orientation:\n' +
    '|a, c|\n' +
    '|b, d|',
  '@param orientation 1-based orientation number defined by EXIF.',
  '@param rotation90 Clockwise degrees / 90.',
  'Builds a transformation matrix from the image transform parameters.',
  'Flip X and Y.',
  'In the Files app., CSS transformations are applied like',
  '"transform: rotate(90deg) scaleX(-1)".',
  'Since the image is scaled based on the X,Y axes pinned to the original,',
  'it is equivalent to scale first and then rotate.',
  '|a c| |s_x 0 | |x|   |a*s_x c*s_y| |x|',
  '|b d| | 0 s_y| |y| = |b*s_x d*s_y| |y|',
  'Obtains the image size after cancelling its orientation.',
  'Applies the transformation that cancels the image orientation to the given\n' +
    'context.',
  'Calculate where to project the point of (imageWidth, imageHeight).',
  'If the projected point coordinates are negative, add offset to cancel it.',
  'Apply the transform.',
  'Checks if the orientation represents identity transformation or not.'
]
image_orientation_unittest.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Crockwise 90 degrees image orientation.',
  'After cancelling orientation, the width and the height are swapped.',
  'Crockwise 90 degrees image orientation.',
  'The image coordinate system is aligned to the screen. (Y+ pointing down)\n' +
    'O----> e_x                 ^\n' +
    "|           rotate 270 CW  | e'_x = (0, -1)' = (a, b)'\n" +
    '|             =====>       |\n' +
    "V e_y                      O----> e'_y = (1, 0)' = (c, d)'"
]
image_request_task.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Calls the imageLoaderPrivate API with the given message.\n' +
    '@param msg The imageLoaderPrivate call arguments.\n' +
    '@return A promise for the thumbnailDataUrl.',
  'Creates and starts downloading and then resizing of the image. Finally,\n' +
    'returns the image using the callback.',
  'The maximum milliseconds to load video. If loading video exceeds the limit,\n' +
    'we give up generating video thumbnail and free the consumed memory.',
  'The default width of a non-square thumbnail. The value is set to match the\n' +
    'behavior of drivefs thumbnail generation.\n' +
    'See chromeos/ash/components/drivefs/mojom/drivefs.mojom',
  'The default width of a non-square thumbnail. The value is set to match the\n' +
    'behavior of drivefs thumbnail generation.\n' +
    'See chromeos/ash/components/drivefs/mojom/drivefs.mojom',
  'The default height of a non-square thumbnail. The value is set to match the\n' +
    'behavior of drivefs thumbnail generation.\n' +
    'See chromeos/ash/components/drivefs/mojom/drivefs.mojom',
  'Temporary image used to download images.',
  'MIME type of the fetched image.',
  'IFD data of the fetched image. Only RAW images provide a non-null\n' +
    'ifd at this time. Drive images might provide an ifd in future.',
  'Used to download remote images using http:// or https:// protocols.',
  'Temporary canvas used to resize and compress the image.',
  'Callback to be called once downloading is finished.',
  '@param id Request ID.\n' +
    '@param cache Cache object.\n' +
    '@param request Request message as a hash array.\n' +
    '@param callback Response handler.',
  'Extracts MIME type of a data URL.\n' +
    '@param dataUrl Data URL.\n' +
    '@return MIME type string, or null if the URL is invalid.',
  'Returns ID of the request.\n@return Request ID.',
  'Every incoming request should have been given a taskId.',
  'Returns priority of the request. The higher priority, the faster it will\n' +
    'be handled. The highest priority is 0. The default one is 2.\n' +
    '@return Priority.',
  'Tries to load the image from cache, if it exists in the cache, and sends\n' +
    'the response. Fails if the image is not found in the cache.\n' +
    '@param onSuccess Success callback.\n' +
    '@param onFailure Failure callback.',
  'Found in cache.',
  'Tries to download the image, resizes and sends the response.\n' +
    '@param callback Completion callback.',
  'Fetches the image from the persistent cache.\n' +
    '@param onSuccess callback with the image width, height, ?ifd, and data.\n' +
    '@param onFailure Failure callback.',
  'Cache key is not provided for the request.',
  'Cache is disabled for this request; therefore, remove it from cache',
  'if existed.',
  'Persistent cache is available only when a timestamp is provided.',
  'Saves the image to the persistent cache.\n' +
    '@param width Image width.\n' +
    '@param height Image height.\n' +
    '@param data Image data.',
  'Persistent cache is available only when a timestamp is provided.',
  'Cache key is not provided for the request.',
  'Gets the target image size for external thumbnails, where supported.\n' +
    'The defaults replicate drivefs thumbnailer behavior.',
  'Loads |this.image_| with the |this.request_.url| source or the thumbnail\n' +
    'image of the source.\n' +
    '@param onSuccess Success callback.\n' +
    '@param onFailure Failure callback.',
  'Load methods below set |this.image_.src|. Call revokeObjectURL(src) to',
  'release resources if the image src was created with createObjectURL().',
  'Load dataURL sources directly.',
  'Load Drive source thumbnail.',
  'Load PDF source thumbnail.',
  'Load ARC DocumentsProvider thumbnail, if supported.',
  'Load video source thumbnail.',
  'Load the source directly.',
  'Load RAW image source thumbnail.',
  'Creates a video thumbnail data url from video file.\n' +
    '@param url Video URL.\n' +
    '@return Promise that resolves with the data url of video\n' +
    'thumbnail.',
  'For videos with longer duration (>= 6 seconds), consider the',
  'frame at 3rd second, or use the frame at midpoint otherwise.',
  'This ensures the target position is always close to the',
  'beginning of the video. Seek operations may be costly if the',
  "video doesn't contain keyframes for referencing.",
  "If we can't get the frame at the midpoint of the video after 3",
  'seconds have passed for some reason (e.g. unseekable video), we',
  'give up generating thumbnail.',
  'Make sure to stop loading remaining part of the video.',
  'Clearing the `src` helps the decoder to dispose its memory earlier.',
  'Loads an image.\n' +
    '@param url URL to the resource to be fetched.\n' +
    '@param onSuccess Success callback with the content type and the fetched\n' +
    'data.\n' +
    '@param onFailure Failure callback.',
  'Do not call any callbacks when aborting.',
  'When content type is not available, try to estimate it from url.',
  'The query parameter is workaround for crbug.com/379678, which forces the',
  'browser to obtain the latest contents of the image.',
  'Extracts extension from url.\n' +
    '@param url Url.\n' +
    '@return Extracted extension, e.g. png.',
  'Fetches data using XmlHttpRequest.\n' +
    '@param url URL to the resource to be fetched.\n' +
    '@param onSuccess Success callback with the content type and the fetched\n' +
    'data.\n' +
    '@param onFailure Failure callback with the error code if available.\n' +
    '@return XHR instance.',
  'Perform a xhr request.',
  'Sends the resized image via the callback. If the image has been changed,\n' +
    'then packs the canvas contents, otherwise sends the raw image data.\n' +
    '@param imageChanged Whether the image has been changed.',
  "The image hasn't been processed, so the raw data can be directly",
  'forwarded for speed (no need to encode the image again).',
  'The image has been resized or rotated, therefore the canvas has to be',
  'encoded to get the correct compressed image data.',
  'Send the image data and also save it in the persistent cache.',
  'Sends the resized image via the callback.\n' +
    '@param width Image width.\n' +
    '@param height Image height.\n' +
    '@param data Image data.',
  'Handler, when contents are loaded into the image element. Performs image\n' +
    'processing operations if needed, and finalizes the request process.',
  'Override the request orientation before processing if needed.',
  'Perform processing if the url is not a data url, or if there are some',
  'operations requested.',
  'Restore the request orientation after processing.',
  'Finalize the request.',
  'Handler, when loading of the image fails. Sends a failure response and\n' +
    'finalizes the request process.',
  'Cancels the request.',
  'If downloading has started, then call the callback.',
  'Cleans up memory used by this request.',
  'Transparent 1x1 pixel gif, to force garbage collecting.',
  'Dispose memory allocated by Canvas.'
]
load_image_request.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Response status.',
  'Structure of the response object passed to the LoadImageRequest callback.\n' +
    'All methods must be static since this is passed between isolated contexts.',
  'The (compressed) image data as a data URL.',
  '@param taskId or null if fulfilled by the client-side cache.',
  'Response result defined only when status === SUCCESS.',
  'Returns the cacheable result value for |response|, or null for an error.\n' +
    '@param response Response data from the ImageLoader.\n' +
    '@param timestamp The request timestamp. If undefined, then null is used.\n' +
    'Currently this disables any caching in the ImageLoader, but disables\n' +
    'only *expiration* in the client unless a timestamp is presented on a\n' +
    'later request.',
  'Response result defined only when status === SUCCESS.',
  'Encapsulates a request to load an image.\n' +
    'All methods must be static since this is passed between isolated contexts.',
  'Parts that uniquely identify the request.',
  'Url of the requested image. Undefined only for cancellations.',
  'Parts that control the request flow.',
  'Creates a cache key.\n' +
    '@return Cache key. It may be null if the cache does not support the request.\n' +
    'e.g. Data URI.',
  'Creates a cancel request.\n@param taskId The task to cancel.',
  'Creates a load request from an option map.\n' +
    'Only the timestamp may be undefined.\n' +
    '@param params Request parameters.',
  'Creates a request to load a full-sized image.\n' +
    'Only the timestamp may be undefined.\n' +
    '@param params Request parameters.',
  'Creates a load request from a url string. All options are undefined.'
]
overrides.d.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
piex_loader.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Declares the piex-wasm Module interface. The Module has many interfaces\n' +
    'but only declare the parts required for PIEX work.',
  'Subset of the Emscripten Module API required for initialization. See\n' +
    'https://emscripten.org/docs/api_reference/module.html#module.',
  "Module defined by 'piex.js.wasm' script upon initialization.",
  "Module constructor defined by 'piex.js.wasm' script.",
  'Set true if the Module.onAbort() handler is called.',
  'Installs an (Emscripten) Module.onAbort handler. Record that the\n' +
    'Module has failed in piexFailed and re-throw the error.\n' +
    '@throws {!Error|string}',
  'Returns a promise that resolves once initialization is complete. PiexModule\n' +
    'may be undefined before this promise resolves.',
  'Module failure recovery: if piexFailed is set via onAbort due to OOM in\n' +
    'the C++ for example, or the Module failed to load or call run, then the\n' +
    'Module is in a broken, non-functional state.\n' +
    'Loading the entire page is the only reliable way to recover from broken\n' +
    'Module state. Log the error, and return true to tell caller to initiate\n' +
    'failure recovery steps.',
  'JEITA EXIF image orientation being an integer in [1..8].',
  "JEITA EXIF image color space: 'sRgb' or 'adobeRgb'.",
  'JSON encoded RAW image photographic details.',
  '@param data The extracted preview image data.',
  'JFIF APP2 ICC_PROFILE segment containing an AdobeRGB1998 Color Profile.',
  'clang-format off',
  'APP2 ICC_PROFILE\\0 segment header.',
  'AdobeRGB1998 ICC Color Profile data.',
  'clang-format on',
  'Piex-wasm extracts the "preview image" from a RAW image. The preview image\n' +
    '|format| is either 0 (JPEG), or 1 (RGB), and has a JEITA EXIF |colorSpace|\n' +
    '(sRGB or AdobeRGB1998) and a JEITA EXIF image |orientation|.\n' +
    'An RGB format preview image has both |width| and |height|, but JPEG format\n' +
    'previews have neither (piex-wasm C++ does not parse/decode JPEG).\n' +
    'The |offset| to, and |length| of, the preview image relative to the source\n' +
    'data is indicated by those fields. They are positive > 0. Note: the values\n' +
    'are controlled by a third-party and are untrustworthy (Security).',
  'Ether 0 (JPEG), or 1 (RGB).',
  'JEITA EXIF: sRGB or AdobeRGB1998.',
  'JEITA EXIF image orientation.',
  'Only available for RGB format preview image.',
  'Only available for RGB format preview image.',
  'The offset of the preview image relative to the source data. They are\n' +
    'positive > 0. Note: ths value is controlled by a third-party and are\n' +
    'untrustworthy (Security).',
  'The length of the preview image relative to the source data. They are\n' +
    'positive > 0. Note: ths value is controlled by a third-party and are\n' +
    'untrustworthy (Security).',
  'The piex-wasm Module.image(<RAW image source>,...) API returns `error`, or\n' +
    'else the source `preview` and/or `thumbnail` image metadata along with the\n' +
    'photographic `details` derived from the RAW image EXIF.',
  'The `preview` images are JPEG.',
  'The `thumbnail` images are smaller, lower  quality, JPEG or RGB format\n' +
    'images.',
  'The photographic `details` derived from the RAW image EXIF.',
  'Preview Image EXtractor (PIEX).',
  '@param buffer - RAW image source data.',
  'Calls Module.image() to process |this.source| and return the result.\n' +
    '@throws {!Error} Memory allocation error.',
  'Returns the preview image data. If no preview image was found, returns\n' +
    'the thumbnail image.\n' +
    '@throws {!Error} Data access security error.',
  'Returns the thumbnail image. If no thumbnail image was found, returns\n' +
    'an empty thumbnail image.\n' +
    '@throws {!Error} Data access security error.',
  'Returns the RGB thumbnail. If no RGB thumbnail was found, returns\n' +
    'an empty thumbnail image.\n' +
    '@throws {!Error} Data access security error.',
  'Expect a width and height.',
  'Compute output image width and height.',
  'Compute pixel row stride.',
  'Create bitmap image.',
  'BITMAPFILEHEADER 14 bytes.',
  'DIB BITMAPV4HEADER 108 bytes.',
  'RGB CIEXYZ.',
  'RGB gamma.',
  'Write RGB row pixels in top-down DIB order.',
  'Compute affine(a,b,c,d,tx,ty) transform of pixel (x,y)\n' +
    "{ x': a * x + c * y + tx, y': d * y + b * x + ty }\n" +
    'a,b,c,d in [-1,0,1], to apply the image orientation at\n' +
    '(0,y) to find the output location of the input row.\n' +
    'The transform derivative in x is used to calculate the\n' +
    'relative output location of adjacent input row pixels.',
  'Write pixel row padding bytes if needed.',
  'Converts a |view| of the "preview image" to Uint8Array data. Embeds an\n' +
    'AdobeRGB1998 ICC Color Profile in that data if the preview is JPEG and\n' +
    "it has 'adodeRgb' color space.",
  'Returns the RAW image photographic |details| in a JSON-encoded string.\n' +
    'Only number and string values are retained, and they are formatted for\n' +
    'presentation to the user.\n' +
    '@param orientation - image EXIF orientation',
  'Release resources.',
  'PiexLoader: is a namespace.',
  'Loads a RAW image. Returns the image metadata and the image thumbnail in a\n' +
    'PiexLoaderResponse.\n' +
    'piexModuleFailed() returns true if the Module is in an unrecoverable error\n' +
    'state. This is rare, but possible, and the only reliable way to recover is\n' +
    'to reload the page. Callback |onPiexModuleFailed| is used to indicate that\n' +
    'the caller should initiate failure recovery steps.'
]
scheduler.ts [
  'Copyright 2013 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '`deviceMemory` might be 0.5 or 0.25, so we normalize to minimum of 2.',
  'For low end devices `hardwareCount` can be low like 4 some other devies are',
  'low in memory, it will have the value 4 as in 4GB.',
  'Maximum download tasks to be run in parallel, for low end devices we expect\n' +
    'the result to be 2, higher end devices we expect to be at least 4, but no\n' +
    'more than 5.',
  'Scheduler for ImageRequestTask objects. Fetches tasks from a queue and\n' +
    'processes them synchronously, taking into account priorities. The highest\n' +
    'priority is 0.',
  'List of tasks waiting to be checked. If these items are available in\n' +
    'cache, then they are processed immediately after starting the scheduler.\n' +
    'However, if they have to be downloaded, then these tasks are moved to\n' +
    'pendingTasks_.',
  'List of pending tasks for images to be downloaded.',
  'List of tasks being processed.',
  'Map of tasks being added to the queue, but not finalized yet. Keyed by\n' +
    'the ImageRequestTask id.',
  'If the scheduler has been started.',
  'Adds a task to the internal priority queue and executes it when tasks\n' +
    'with higher priorities are finished. If the result is cached, then it is\n' +
    'processed immediately once the scheduler is started.',
  'Enqueue the tasks, since already started.',
  'Removes a task from the scheduler (if exists).',
  'Remove from the internal queues with pending tasks.',
  'Cancel the task.',
  'Starts handling tasks.',
  'Process tasks added before scheduler has been started.',
  'Start serving enqueued tasks.',
  'Sorts pending tasks by priorities.',
  'Processes pending tasks from the queue. There is no guarantee that\n' +
    'all of the tasks will be processed at once.',
  'Run only up to MAXIMUM_IN_PARALLEL in the same time.',
  "Try to load from cache. If doesn't exist, then download.",
  'Handles a finished task.',
  'Continue handling the most important tasks (if started).'
]
scheduler_unittest.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Fake global clock used to record the "time" at which a task was run.',
  'Counts how many times cancel method was called.',
  'Used to test multiple cancellation of the same task.',
  'Records value of globalTime variable at the time the main method,',
  'loadFromCacheAndProcess is called. Used to test if the task was',
  'executed and in what orders tasks were executed.',
  'Checks that adding and removing tasks before the scheduler is started works.',
  'Checks that tasks that were in newTasks are correctly copied to pending\n' +
    'tasks when scheduler is started. They also should be executed in the\n' +
    'order of their priorities.',
  'Checks that the scheduler only launches MAXIMUM_IN_PARALLEL tasks.'
]
sw_od_messages.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Definitions for messages passed between the SW (service\n' +
    'worker) and OD (offscreen document).\n' +
    'The FooBarPrivateApi types capture the arguments for imageLoaderPrivate\n' +
    'calls made by the SW on behalf of the OD. These definitions are manually\n' +
    'written based on the auto-generated image_loader_private.d.ts.'
]
definitions.d.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'TODO(b/319189127): Remove these when the integration tests extension is',
  'migrated to manifest v3 and can use the Promise version of these APIs.'
]
android_photos.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Add test files.',
  'Photos provider currently does not have subdirectories, but we need one',
  `there to tell that it's mounted and clickable (has-children="true"`,
  'selector).',
  'Open Files app.',
  'Initial state: In the new framework banner is lazily loaded so will not be',
  'attached to the DOM, without the banners framework the root element should',
  'exist but the text should not be attached yet.',
  'Wait for the DocumentsProvider volume to mount and navigate to Photos.',
  'Banner should be created and made visible.',
  'Banner should disappear when navigating away (child elements are still in',
  'DOM).',
  'Banner should re-appear when navigating to Photos again.',
  'Dismiss the banner (created banner still in DOM).',
  'Navigate away and then back, it should not re-appear.'
]
background.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'This is the entry point for the integration test.',
  'Application ID (URL) for File Manager System Web App (SWA).',
  'For async function tests, wait for the test to complete, check for app errors\n' +
    'unless skipped, and report the results.\n' +
    '@param resultPromise A promise that resolves with the test result.',
  'If the test has failed, ignore the exception and return.',
  'Otherwise, report the exception as a test failure. chrome.test.fail()',
  'emits an exception; catch it to avoid spurious logging about an uncaught',
  'exception.',
  'When the FileManagerBrowserTest harness loads this test extension, request\n' +
    'configuration and other details from that harness, including the test case\n' +
    'name to run. Use the configuration/details to setup the test environment,\n' +
    'then run the test case using chrome.test.RunTests.',
  'Request the guest mode state.',
  'Request the root entry paths.',
  'Request the test case name.',
  'Get the test function from testcase namespace testCaseName.',
  'Verify test is a Function without args.',
  'Define the test case and its name for chrome.test logging.',
  'Run the test.'
]
breadcrumbs.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Tests that breadcrumbs work.',
  'Navigate to Downloads/photos.',
  'Use the breadcrumbs to navigate back to Downloads.',
  'Wait for the contents of Downloads to load again.',
  'A user action should have been recorded for the breadcrumbs.',
  'Tests that Downloads is translated in the breadcrumbs.',
  'Switch UI to Portuguese (Portugal).',
  'Open Files app.',
  'Check the breadcrumbs for Downloads:',
  'Os meu ficheiros => My files.',
  'Transferências => Downloads (as in Transfers).',
  'Expand Downloads folder.',
  'Navigate to Downloads/photos.',
  'Wait and check breadcrumb translation.',
  'Tests that the breadcrumbs correctly render a short (3 component) path.',
  'Build an array of nested folder test entries.',
  'Open FilesApp on Downloads containing the test entries.',
  'Navigate to deepest folder.',
  'Check: the breadcrumb element should have a |path| attribute.',
  'Check: some of the main breadcrumb buttons should be visible.',
  'Check: the main button text should be the path components.',
  'Check: the "last" main button should be disabled.',
  'Check: the breadcrumb elider button should not exist.',
  'Tests that short breadcrumbs paths (of 4 or fewer components) should not\n' +
    'be rendered elided. The elider button not exist.',
  'Build an array of nested folder test entries.',
  'Open FilesApp on Downloads containing the test entries.',
  'Navigate to deepest folder.',
  'Check: the breadcrumb element should have a |path| attribute.',
  'Check: all of the main breadcrumb buttons should be visible.',
  'Check: the main button text should be the path components.',
  'Check: the "last" main button should be disabled.',
  'Check: the breadcrumb elider button should not exist.',
  'Tests that the breadcrumbs correctly render a long (5 component) path.',
  'Build an array of nested folder test entries.',
  'Open FilesApp on Downloads containing the test entries.',
  'Navigate to deepest folder.',
  'Check: the breadcrumb element should have a |path| attribute.',
  'Check: some of the main breadcrumb buttons should be visible.',
  'Check: main button text should be the non-elided path components.',
  'Check: the "last" main button should be disabled.',
  'Check: the breadcrumb elider button should be shown.',
  'Tests that clicking a main breadcumb button makes the app navigate and\n' +
    'update the breadcrumb to that item.',
  'Build an array of nested folder test entries.',
  'Open FilesApp on Downloads containing the test entries.',
  'Navigate to deepest folder.',
  'Check: the breadcrumb path attribute should be |breadcrumb|.',
  'Click the "second" main breadcrumb button (2nd path component).',
  'Check: the breadcrumb path should be updated due to navigation.',
  'Tests that an Enter key on a main breadcumb button item makes the app\n' +
    'navigate and update the breadcrumb to that item.',
  'Build an array of nested folder test entries.',
  'Open FilesApp on Downloads containing the test entries.',
  'Navigate to deepest folder.',
  'Check: the breadcrumb path attribute should be |breadcrumb|.',
  'Send an Enter key to the "second" main breadcrumb button.',
  'Check: the breadcrumb path should be updated due to navigation.',
  'Tests that a breadcrumbs elider button click opens its drop down menu and\n' +
    'that clicking the button again, closes the drop down menu.',
  'Build an array of nested folder test entries.',
  'Open FilesApp on Downloads containing the test entries.',
  'Navigate to deepest folder.',
  'Click the breadcrumb elider button when it appears.',
  'Check: the elider button drop-down menu should open.',
  'Check: the drop-down menu should contain 2 elided items.',
  'Check: the menu item text should be the elided path components.',
  'Check: the elider button should not have the focus.',
  'Click the elider button.',
  'Check: the elider button drop-down menu should close.',
  'Check: the focus should return to the elider button.',
  'Tests that pressing Enter key on the breadcrumbs elider button opens its\n' +
    'drop down menu, then pressing Escape key closes the drop down menu.',
  'Build an array of nested folder test entries.',
  'Open FilesApp on Downloads containing the test entries.',
  'Navigate to deepest folder.',
  'Wait for the breadcrumb elider button to appear.',
  'Send an Enter key to the breadcrumb elider button.',
  'Check: the elider button drop-down menu should open.',
  'Check: the drop-down menu should contain 3 elided items.',
  'Check: the menu item text should be the elided path components.',
  'Check: the elider button should not have the focus.',
  'Send an Escape key to the drop-down menu.',
  'Check: the elider button drop-down menu should close.',
  'Check: the focus should return to the elider button.',
  'Tests that clicking outside the elider button drop down menu makes that\n' +
    'drop down menu close.',
  'Build an array of nested folder test entries.',
  'Open FilesApp on Downloads containing the test entries.',
  'Navigate to deepest folder.',
  'Click the breadcrumb elider button when it appears.',
  'Check: the elider button drop-down menu should open.',
  'Click somewhere outside the drop down menu.',
  'Check: the elider button drop-down menu should close.',
  'Tests that clicking an elider button drop down menu item makes the app\n' +
    'navigate and update the breadcrumb to that item.',
  'Build an array of nested folder test entries.',
  'Open FilesApp on Downloads containing the test entries.',
  'Navigate to deepest folder.',
  'Check: the breadcrumb path attribute should be |breadcrumb|.',
  'Click the breadcrumb elider button when it appears.',
  'Check: the elider button drop-down menu should open.',
  'Check: the drop-down menu should contain 2 elided items.',
  'Check: the menu item text should be the elided path components.',
  ... 28 more items
]
choose_entry.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview\n@suppress {checkTypes}',
  'Extracts parameters used by chooseEntry function.',
  'Opens a file dialog. The type of the dialog is dicated by the params.',
  'Initializes this module by triggering chrome.fileSystem.chooseEntry call.',
  'This is done with the help of chooseEntry() function that returns a promise',
  'fulfilled once the name of the entry was selected. The entry is then set on',
  'the "global" variable of the background page.',
  'Clean up anything left over by the previous calls.',
  'Assign new entry resulting from chooseEntry() call. If the user cancels',
  'assign null, to indicate cancelation.'
]
choose_entry_const.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The name of the property under which we store the selected file entry.'
]
context_menu.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests that check the context menu displays the right options (enabled and\n' +
    'disabled) for different types of files.\n' +
    'The names passed to the tests are file names to select. They are generated\n' +
    'from COMPLEX_DRIVE_ENTRY_SET (see remoteCall.setupAndWaitUntilReady).',
  'Copy a text file to clipboard if the test requires it.\n' +
    '@param appId ID of the app window.\n' +
    '@param commandId ID of the command in the context menu to check.',
  'Selects a file in the file list.\n' +
    '@param appId ID of the app window.\n' +
    '@param path Path to the file to be selected.',
  'Select the file |path|.',
  'Wait for the file to be selected.',
  'Right clicks the currently selected file in the file list and waits for its\n' +
    'context menu to appear.\n' +
    '@param appId ID of the app window.',
  'Right-click the selected file.',
  'Wait for the file context menu to appear.',
  'Tests that the specified menu item is in |expectedEnabledState| when the\n' +
    'entry at |path| is selected.\n' +
    '@param commandId ID of the command in the context menu to check.\n' +
    '@param path Path to the file to open the context menu for.\n' +
    '@param expectedEnabledState True if the command should be enabled in the\n' +
    "context menu, false if not. Only checked if the command isn't hidden.\n" +
    '@param expectedHiddenState True if the command should be hidden in the\n' +
    'context menu, false if not. Defaults to false.',
  'Open Files App on Drive.',
  'Optionally copy hello.txt into the clipboard if needed.',
  'Select the file |path|.',
  'Wait for the file to be selected.',
  'Right-click the selected file.',
  'Wait for the context menu to appear.',
  'Wait for the command option to appear.',
  'Tests that the Delete menu item is enabled if a read-write entry is selected.',
  'Tests that the Delete menu item is disabled if a read-only document is\n' +
    'selected.',
  'Tests that the Delete menu item is disabled if a read-only file is selected.',
  'Tests that the Delete menu item is disabled if a read-only folder is\n' +
    'selected.',
  'Tests that the Rename menu item is enabled if a read-write entry is selected.',
  'Tests that the Rename menu item is disabled if a read-only document is\n' +
    'selected.',
  'Tests that the Rename menu item is disabled if a read-only file is selected.',
  'Tests that the Rename menu item is disabled if a read-only folder is\n' +
    'selected.',
  'Tests that the Copy menu item is enabled if a read-write entry is selected.',
  'Tests that the Copy menu item is enabled if a read-only document is\n' +
    'selected.',
  'Tests that the Copy menu item is disabled if a strict (no-copy) read-only\n' +
    'document is selected.',
  'Tests that the Copy menu item is enabled if a read-only file is selected.',
  'Tests that the Copy menu item is enabled if a read-only folder is\n' +
    'selected.',
  'Tests that the Cut menu item is enabled if a read-write entry is selected.',
  'Tests that the Cut menu item is disabled if a read-only document is\n' +
    'selected.',
  'Tests that the Cut menu item is disabled if a read-only file is selected.',
  'Tests that the Restriction details menu item is hidden if DLP is disabled.',
  'expectedHiddenState= true);',
  'Tests that the Cut menu item is disabled if a read-only folder is\n' +
    'selected.',
  'Tests that the Paste into Folder menu item is enabled if a read-write folder\n' +
    'is selected.',
  'Tests that the Paste into Folder menu item is disabled if a read-only folder\n' +
    'is selected.',
  'Tests that the "Install with Linux" file context menu item is hidden for a\n' +
    'Debian file if Crostini root access is disabled.',
  'Open FilesApp on Downloads with deb file.',
  'Disallow root access.',
  'Select and right click the deb file to show its context menu.',
  'Check: the "Install with Linux" context menu item should be hidden.',
  'Tests that the "Install with Linux" file context menu item is shown for a\n' +
    'Debian file if Crostini root access is enabled.',
  'Open FilesApp on Downloads with deb file.',
  'Select and right click the deb file to show its context menu.',
  'Check: the "Install with Linux" context menu item should be shown.',
  'Tests that the "Replace your Linux apps and files" file context menu item is\n' +
    'hidden for a *.tini file if Crostini backup is disabled.',
  'Open FilesApp on Downloads with test.tini file.',
  'Disable Crostini backup.',
  'Select and right click the tini file to show its context menu.',
  'Check: the context menu item should be hidden.',
  'Tests that the "Replace your Linux apps and files" file context menu item is\n' +
    'shown for a *.tini file if Crostini backup is enabled.',
  'Open FilesApp on Downloads with test.tini file.',
  'Select and right click the tini file to show its context menu.',
  'Check: the context menu item should be shown.',
  'Tests that text selection context menus are disabled in tablet mode.',
  'Open FilesApp on Downloads.',
  'Click on the search button to display the search box.',
  'Query all input elements.',
  'Focus the search box.',
  'Input a text.',
  'Notify the element of the input.',
  'Do the touch.',
  'Context menu must be hidden if touch induced.',
  'Do the right click.',
  'Context menu must be visible if mouse induced.',
  "Tests that opening context menu in the rename input won't commit the\n" +
    'renaming.',
  'Open FilesApp on Downloads.',
  'Select the file.',
  'Press Ctrl+Enter key to rename the file.',
  'Check: the renaming text input should be shown in the file list.',
  'Type new file name.',
  'Right click to show the context menu.',
  'Context menu must be visible.',
  'Dismiss the context menu.',
  'Check: The rename input should be still be visible and with the same',
  'content.',
  'Check: The rename input should be the focused element.',
  'Tests that the specified menu item is in |expectedEnabledState| when the\n' +
    'context menu is opened from the file list inside the folder called\n' +
    '|folderName|. The folder is opened and the white area inside the folder is\n' +
    'selected. |folderName| must be inside the Google Drive root.\n' +
    '@param commandId ID of the command in the context menu to check.\n' +
    '@param folderName Path to the file to open the context menu for.\n' +
    '@param expectedEnabledState True if the command should be enabled in the\n' +
    'context menu, false if not.',
  'Open Files App on Drive.',
  'Optionally copy hello.txt into the clipboard if needed.',
  'Navigate to folder.',
  'Right-click inside the file list.',
  'Wait for the context menu to appear.',
  'Wait for the command option to appear.',
  'Tests that the New Folder menu item is enabled inside a folder that has\n' +
    'read-write permissions.',
  'Tests that the New Folder menu item is enabled inside a folder that has\n' +
    'read-write permissions.',
  'Tests that the Paste menu item is enabled inside a folder that has read-write\n' +
    'permissions.',
  'Tests that the Paste menu item is disabled inside a folder that has read-only\n' +
    'permissions.',
  'Checks that mutating context menu items are not present for a root within\n' +
    'My files.\n' +
    '@param itemName Name of item inside MyFiles that should be checked.\n' +
    '@param commandStates Commands that should be enabled for the checked item.',
  'Open FilesApp on Downloads.',
  'Navigate to My files.',
  'Wait for the navigation to complete.',
  'Select the item.',
  'Wait for the file to be selected.',
  'Right-click the selected file.',
  'Wait for the context menu to appear.',
  ... 81 more items
]
copy_between_windows.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Volume type used to find USB removable volume.',
  'Opens two window of given root paths.\n' +
    '@param rootPath1 Root path of the first window.\n' +
    '@param rootPath2 Root path of the second window.\n' +
    '@return Promise fulfilled with an array containing two window IDs.',
  'Copies a file between two windows.\n' +
    '@param window1 ID of the source window.\n' +
    '@param window2 ID of the destination window.\n' +
    '@param file Test entry info to be copied.\n' +
    '@param alreadyPresentFile Test entry info for file that should already exist.\n' +
    '@return Promise fulfilled on success.',
  'Tests file copy+paste from Drive to Downloads.',
  'Open two Files app windows.',
  'Add files.',
  'Check: Downloads photos file.',
  'Copy Drive hello file to Downloads.',
  'Tests file copy+paste from Downloads to Drive.',
  'Open two Files app windows.',
  'Add files.',
  'Check: Downloads hello file and Drive photos file.',
  'Copy Downloads hello file to Drive.',
  'Tests file copy+paste from Drive to USB.',
  'Add photos to Downloads.',
  'Open two Files app windows.',
  'Check: Drive window is empty.',
  'Click to switch back to the Downloads window.',
  'Check: Downloads window is showing photos.',
  'Mount an empty USB volume in the Downloads window.',
  'Wait for the USB mount and click to open the USB volume.',
  'Check: Downloads window is showing an empty USB volume.',
  'Add hello file to Drive.',
  'Check Drive hello file, copy it to USB.',
  'Tests file copy+paste from Downloads to USB.',
  'Add photos to Drive.',
  'Open two Files app windows.',
  'Check: Downloads window is empty.',
  'Click to switch back to the Drive window.',
  'Check: Drive window is showing photos.',
  'Mount an empty USB volume in the Drive window.',
  'Wait for the USB mount and click to open the USB volume.',
  'Check: Drive window is showing an empty USB volume.',
  'Add hello file to Downloads.',
  'Check Downloads hello file, copy it to USB.',
  'Tests file copy+paste from USB to Drive.',
  'Add photos to Downloads.',
  'Open two Files app windows.',
  'Check: Drive window is empty.',
  'Click to switch back to the Downloads window.',
  'Check: Downloads window is showing photos.',
  'Mount an empty USB volume in the Downloads window.',
  'Wait for the USB mount and click to open the USB volume.',
  'Check: Downloads window is showing an empty USB volume.',
  'Add hello file to the USB volume.',
  'Check USB hello file, copy it to Drive.',
  'Tests file copy+paste from USB to Downloads.',
  'Add photos to Drive.',
  'Open two Files app windows.',
  'Check: Downloads window is empty.',
  'Click to switch back to the Drive window.',
  'Check: Drive window is showing photos.',
  'Mount an empty USB volume in the Drive window.',
  'Wait for the USB mount and click to open the USB volume.',
  'Check: Drive window is showing an empty USB volume.',
  'Add hello file to the USB volume.',
  'Check USB hello file, copy it to Downloads.'
]
create_new_folder.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Constants for interacting with the directory tree on the LHS of Files app.\n' +
    'When we are not in guest mode, we fill Google Drive with the basic entry set\n' +
    'which causes an extra tree-item to be added.',
  'Selects the first item in the file list.\n' +
    '@param appId The Files app windowId.\n' +
    '@return Promise to be fulfilled on success.',
  'Ensure no file list items are selected.',
  'Press DownArrow key to select an item.',
  'Await file list item selection.',
  'Retrieve all selected items in the file list.',
  'Check: the first list item only should be selected.',
  'Searches for the file being renamed and gets current value for the renaming\n' +
    'field. Throws test assertion error if fails to find one.\n' +
    '@param appId The Files app windowId.\n' +
    '@return Current value of the name.',
  'Creates a new folder in the file list.\n' +
    '@param appId The Files app windowId.\n' +
    '@param initialEntrySet Initial set of entries.\n' +
    '@param label Downloads or Drive directory tree item label.\n' +
    '@return Promise to be fulfilled on success.',
  'Focus the file-list.',
  'Press Ctrl+E to create a new folder.',
  'Check: a new folder should be shown in the file list.',
  'Check: the text input should be shown in the file list.',
  "Get all file list rows that have attribute 'renaming'.",
  "Check: the new folder only should be 'renaming'.",
  "Get all file list rows that have attribute 'selected'.",
  "Check: the new folder only should be 'selected'.",
  'Type the test folder name.',
  'Press the Enter key.',
  'Wait until renaming is complete.',
  'Check: the test folder should be shown in the file list.',
  'Wait for the new folder to become selected in the file list.',
  'Check: a new folder should be present in the directory tree.'
]
crostini.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Unmount and ensure fake root is shown.',
  'Expect the expand icon is hidden for fake Crostini.',
  'Add a sub folder to Crostini and mount it.',
  'Expect the expand icon shows now.',
  'Ensure fake Linux files root is shown.',
  'Disable Crostini, then ensure fake Linux files is removed.',
  'Re-enable Crostini, then ensure fake Linux files is shown again.',
  'Ensure fake Linux files root is shown.',
  'Mount crostini, and ensure real root is shown.',
  'Go back to downloads, wait for photos dir to be shown.',
  "Right-click 'photos' directory, ensure 'Share with Linux' is shown.",
  "Click on 'Share with Linux', ensure menu is closed.",
  "Right-click 'photos' directory, ensure 'Share with Linux' is not shown.",
  "Click 'photos' to go in photos directory, ensure share message is shown.",
  'Override the tasks so the "Open with Plugin VM App" button becomes a',
  'dropdown option.',
  "Right click on 'hello.txt' file, and wait for dialog with 'Open with'.",
  "Click 'Open with'.",
  'Wait for app picker.',
  'Ensure app picker shows Plugin VM option.',
  'Click on the Plugin VM app, and wait for error dialog.',
  'Validate error messages.',
  'TODO(crbug.com/40117686): Test file is moved. This can only be tested when',
  'tests allow creating /MyFiles/PvmDefault.',
  "Use files outside of MyFiles to show 'copy' rather than 'move'.",
  'Override the tasks so the "Open with Plugin VM App" button becomes a',
  'dropdown option.',
  "Right click on 'hello.txt' file, and wait for dialog with 'Open with'.",
  "Click 'Open with'.",
  'Wait for app picker.',
  'Ensure app picker shows Plugin VM option.',
  'Click on the Plugin VM app, and wait for error dialog.',
  'Validate error messages.',
  'TODO(crbug.com/40117686): Test file is moved. This can only be tested when',
  'tests allow creating /MyFiles/PvmDefault.',
  'Tests that when drag from Files app and dropping in the Plugin VM a\n' +
    "dialog is displayed if the containing folder isn't shared with Plugin VM.",
  "Select 'hello.txt' file.",
  "Send 'dragstart'.",
  "Send CrostiniEvent 'drop_failed_plugin_vm_directory_not_shared'.",
  'Wait for error dialog.'
]
directory_tree.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "Tests that when the current folder is changed, the 'selected' attribute\n" +
    'appears in the selected folder .tree-row and the "Current directory" aria\n' +
    'description is present on the corresponding tree item.',
  'Open FilesApp on Downloads.',
  'Change to My files folder.',
  'Check: the My files folder should be the selected tree row.',
  'Check: the corresponding tree item should be focused and have the "Current',
  'directory" aria description.',
  'Change to Downloads folder.',
  'Check: the Downloads folder should be the selected tree row.',
  'Check: the corresponding tree item should be focused and have the "Current',
  'directory" aria description.',
  "Change to Google Drive volume's My Drive folder.",
  'Check: the My Drive folder should be the selected tree row.',
  'Check: the corresponding tree item should be focused and have the "Current',
  'directory" aria description.',
  'Change to Recent folder.',
  'Check: the Recent folder should be the selected tree row.',
  'Check: the corresponding tree item should be focused and have the "Current',
  'directory" aria description.',
  'Tests that when the selected folder in the directory tree changes, the\n' +
    'selected folder and the tree item that has the "Current directory" aria\n' +
    'description do not change. Also tests that when the focused folder is\n' +
    'activated (via the Enter key for example), both the selected folder and the\n' +
    'tree item with a "Current directory" aria description are updated.',
  'Open FilesApp on Downloads.',
  'Change to My files folder.',
  'Check: the My files folder should be selected.',
  'Check: the corresponding tree item should be focused and have the "Current',
  'directory" aria description.',
  'Send ArrowUp key to change the focused folder.',
  'Check: the My files folder should be selected.',
  'Check: the corresponding tree item should have the "Current directory" aria',
  'description.',
  'Check: the Recent Media View folder should be focused.',
  'Send Enter key to activate the focused folder.',
  'Check: the Recent folder should be focused and selected.',
  'Check: the corresponding tree item should be focused and have the "Current',
  'directory" aria description.',
  'Tests that the directory tree can be vertically scrolled.',
  'Add enough test entries to overflow the #directory-tree container.',
  'Open FilesApp on Downloads and expand the tree view of Downloads.',
  'Verify the directory tree is not vertically scrolled.',
  'Scroll the directory tree down (vertical scroll).',
  'Check: the directory tree should be vertically scrolled.',
  'Tests that the directory tree does not horizontally scroll.',
  'Open FilesApp on Downloads and expand the tree view of Downloads.',
  'Verify the directory tree is not horizontally scrolled.',
  'Shrink the tree to 50px.',
  'Scroll the directory tree left (horizontal scroll).',
  'Check: the directory tree should not be horizontally scrolled.',
  'Tests that the directory tree does not horizontally scroll when expanding\n' +
    'nested folder items.',
  'Creates a folder test entry from a folder |path|.\n' +
    '@param path The folder path.',
  'Build an array of nested folder test entries.',
  'Open FilesApp on Downloads containing the folder test entries.',
  'Verify the directory tree is not horizontally scrolled.',
  'Shrink the tree to 150px, enough to hide the deep folder names.',
  'Expand the tree Downloads > nested-folder1 > nested-folder2 ...',
  'Check: the directory tree should be showing the last test entry.',
  'Ensure the directory tree scroll event handling is complete.',
  'Check: the directory tree should not be horizontally scrolled.',
  'Creates a folder test entry from a folder |path|.\n' +
    '@param path The folder path.',
  'Tests that the directory tree does not horizontally scroll when expanding\n' +
    'nested folder items when the text direction is RTL.',
  'Build an array of nested folder test entries.',
  'Open FilesApp on Downloads containing the folder test entries.',
  'Redraw FilesApp with text direction RTL.',
  'Verify the directory tree is not horizontally scrolled.',
  'Shrink the tree to 150px, enough to hide the deep folder names.',
  'Expand the tree Downloads > nested-folder1 > nested-folder2 ...',
  'Check: the directory tree should be showing the last test entry.',
  'Ensure the directory tree scroll event handling is complete.',
  'Check: the directory tree should not be horizontally scrolled.',
  'Adds folders with the name prefix /path/to/sub-folders, it appends "-$X"\n' +
    'suffix for each folder.\n' +
    'NOTE: It assumes the parent folders exist.\n' +
    '@param number Number of sub-folders to be created.\n' +
    '@param namePrefix Prefix name to be used in the folder.',
  'Tests that expanding a folder updates the its sub-folders expand icons.',
  'Create a large-folder inside Downloads.',
  'Create 20 sub-folders with 15 sub-sub-folders.',
  'Open FilesApp on Downloads.',
  'Expand the large-folder-0.',
  'Wait for all sub-folders to have the expand icon.',
  'Expand a sub-folder.',
  'Wait sub-folder to have its 1k sub-sub-folders.',
  'Tests to ensure expand icon does not show up if show hidden files is off\n' +
    'and a directory only contains hidden directories.',
  'Populate a normal folder entry with a hidden folder inside.',
  'Opens FilesApp on downloads.',
  'Expand all sub-directories in downloads.',
  'Assert that the expand icon will not show up.',
  'Tests to ensure expand icon shows up if show hidden files\n' +
    'is on and a directory only contains hidden directories.',
  'Populate a normal folder entry with a hidden folder inside.',
  'Opens FilesApp on downloads.',
  'Enable show hidden files.',
  'Expand all sub-directories in Downloads.',
  'Assert that the expand icon shows up.',
  'Tests that the "expand icon" on directory tree items is correctly\n' +
    'shown for directories on the "My Files" volume. Volumes such as\n' +
    'this, which do not delay expansion, eagerly traverse into children\n' +
    'directories of the current directory to see if the children have\n' +
    'children: if they do, an expand icon is shown, if not, it is hidden.',
  'Create a parent folder with a child folder inside it.',
  'Opens FilesApp on downloads with the folders above.',
  'Expand the parent folder, which should check if the child folder',
  'itself has children.',
  'Check that the empty child folder has been checked for children, and was',
  'found to have none. This ensures the expand icon is hidden.',
  'Check that the non-empty child folder has been checked for children, and',
  'was found to have some. This ensures the expand icon is shown.',
  'Tests that the "expand icon" on directory tree items is correctly\n' +
    'shown for directories on an SMB volume. Volumes such as this, which\n' +
    "do delay expansion, don't eagerly traverse into children directories\n" +
    'of the current directory to see if the children have children, but\n' +
    "instead give every child directory a 'tentative' expand icon. When\n" +
    'that icon is clicked, the child directory is read and the icon will\n' +
    'only remain if the child really has children.',
  'Create a parent folder with a child folder inside it, and another',
  ... 54 more items
]
directory_tree_context_menu.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Sets up for directory tree context menu test. In addition to normal setup,\n' +
    'we add destination directory.',
  'Add destination directory.',
  'Clicks context menu item of id in directory tree.\n' +
    '@param path Path of the tree item to trigger context menu.\n' +
    '@param id The context menu id.',
  'Right click photos directory.',
  'Check: context menu item |id| should be shown enabled.',
  'Click the menu item specified by |id|.',
  'Navigates to destination directory and test paste operation to check\n' +
    'whether the paste operation is done correctly or not. This method does NOT\n' +
    'check source entry is deleted or not for cut operation.',
  'Navigates to destination directory.',
  'Confirm files before paste.',
  'Paste',
  'Confirm the photos directory is pasted correctly.',
  'Rename photos directory to specified name by using directory tree.\n' +
    '@param useKeyboardShortcut Set to true to use keyboard shortcut instead of\n' +
    'mouse to trigger context menu.',
  'Renames directory and confirm current directory is moved to the renamed\n' +
    'directory.',
  'Confirm that current directory has moved to new folder.',
  'Renames directory and confirms that an alert dialog is shown.',
  'The folder name is not changed.',
  'Confirm that a dialog is shown.',
  'Creates directory from directory tree.',
  'Confirm that current directory is not changed at this timing.',
  'Confirm that new directory is actually created by navigating to it.',
  'Checks all visible items in the context menu for directory tree.\n' +
    '@param breadcrumbsPath Path based on the entry labels like:\n' +
    '/My files/Downloads/photos to item to be tested with context menu.\n' +
    "@param menuStates Mapping each command to it's enabled state.\n" +
    '@param rootsMenu True if the item uses #roots-context-menu instead of\n' +
    '#directory-tree-context-menu\n' +
    '@param shortcutToPath For shortcuts it navigates to a different breadcrumbs\n' +
    'path, like /My Drive/ShortcutName.',
  'Navigate to the folder that will test the context menu.',
  'Selector for a both context menu used on directory tree, only one should',
  'be visible at the time.',
  'Right click desired item in the directory tree.',
  'Wait for context menu to appear.',
  'Grab all commands together and check they are in the expected order and',
  'state.',
  'Check if commands are the way we expect, otherwise we try one more time.',
  'Try the context menu one more time.',
  'Wait for context menu to appear.',
  'Tests copying a directory from directory tree with context menu.',
  'Tests copying a directory from directory tree with the keyboard shortcut.',
  'Press Ctrl+C.',
  'Tests copying a directory without changing the current directory.',
  'Tests cutting a directory with the context menu.',
  'Confirm that directory tree is updated.',
  'Tests cutting a directory with the keyboard shortcut.',
  'Press Ctrl+X.',
  'Confirm that directory tree is updated.',
  'Tests cutting a directory without changing the current directory.',
  'Tests pasting into folder with the context menu.',
  'Copy photos directory as a test data.',
  'Confirm files before paste.',
  'Confirm the photos directory is pasted correctly.',
  'Expand the directory tree.',
  'Confirm the copied directory is added to the directory tree.',
  'Tests pasting into a folder without changing the current directory.',
  'Confirm the copied directory is added to the directory tree.',
  'Tests renaming a folder with the context menu.',
  'Tests that a child folder breadcrumbs is updated when renaming its parent\n' +
    'folder. crbug.com/885328.',
  'Add child-folder inside /photos/',
  'Navigate to child folder.',
  'Rename parent folder.',
  'Confirm that current directory is now My files or /Downloads, because it',
  "can't find the previously selected folder /Downloads/photos/child-folder,",
  'since its path/parent has been renamed.',
  'Navigate to child-folder using the new path.',
  '|navigateWithDirectoryTree| already checks for breadcrumbs to',
  'match the path.',
  'Tests renaming folder with the keyboard shortcut.',
  'Tests renaming folder without changing the current directory.',
  'Tests renaming a folder to an empty string.',
  'The folder name is not changed.',
  'No dialog should be shown.',
  'Tests renaming folder an existing name.',
  'Tests renaming removable volume with the keyboard.',
  'Open Files app on local downloads.',
  'Mount a single partition NTFS USB volume: they can be renamed.',
  'Wait for the USB mount and click the USB volume.',
  'Check: the USB should be the currently focused directory tree item.',
  'Focus the directory tree.',
  'Check: the USB volume is still the currently focused directory tree item.',
  'Rename the USB.',
  'Tests renaming removable volume with the context menu.',
  'Open Files app on local downloads.',
  'Mount a single partition NTFS USB volume: they can be renamed.',
  'Wait for the USB mount and click the USB volume.',
  'Check: the USB should be the currently focused directory tree item.',
  'Focus the directory tree.',
  'Check: the USB should be the currently focused directory tree item.',
  'Right-click the USB volume.',
  "Check: a context menu with a 'rename' item should appear.",
  "Click the context menu 'rename' item.",
  'Rename the USB.',
  "Tests that opening context menu in the rename input won't commit the\n" +
    'renaming.',
  'Open Files app on local downloads.',
  'Navigate to the photos folder.',
  'Start renaming the photos folder.',
  'Rename the item without committing the rename.',
  'Right click to show the context menu.',
  'Context menu must be visible.',
  'Dismiss the context menu.',
  'Check: The rename input should be still be visible and with the same',
  'content.',
  'Check: The rename input should be the focused element.',
  'Tests creating a folder with the context menu.',
  ... 188 more items
]
dlp.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Copies or moves a file from Downloads to the provided location.\n' +
    '@param appId ID of the Files app window.\n' +
    '@param file Test entry info to be copied/cut.\n' +
    '@param destination Name of the destination folder.\n' +
    '@param isCopy Whether it should copy or move the file.\n' +
    '@return Promise fulfilled on success.',
  'List of panel types.\nKeep this in sync with PanelItem panel types.',
  'List of checked panel status indicator types.',
  'Returns the first panel item with the provided panel type.\n' +
    '@param appId ID of the Files app window.',
  'Checks that the panel item with provided parameters exists.\n' +
    '@param appId ID of the Files app window.\n' +
    '@param panelType Expected panel type.\n' +
    '@param primaryText Expected primary text.\n' +
    '@param secondaryText Expected secondary text. Can be null.\n' +
    '@param status Expected status indicator (failure or warning).\n' +
    '@return Promise fulfilled on success.',
  "Checks that the panel item's primary and secondary buttons have expected type\n" +
    'and text, and then clicks the button defined by selectedButton.\n' +
    '@param appId ID of the Files app window.\n' +
    '@param secondaryButtonCategory Expected secondary button category (dismiss or\n' +
    'cancel).\n' +
    '@param selectedButton The button to click (primary or secondary).',
  "Expands the summary panel if it's collapsed, no-op if already expanded.\n" +
    '@param appId ID of the Files app window.\n' +
    '*',
  'Tests that DLP block toast is shown when a restricted file is cut.',
  'Open Files app.',
  'Setup the restrictions.',
  'Mount a USB volume.',
  'Wait for the USB volume to mount.',
  'Cut and paste the file.',
  'Check: a toast should be displayed because cut is disallowed.',
  'Navigate back to Downloads.',
  'The file should be there because the transfer was restricted.',
  'Tests that if the file is restricted by DLP, a managed icon is shown in the\n' +
    'detail list and a tooltip is displayed when hovering over that icon.',
  'Add entries to Downloads and setup the fake source URLs.',
  'Setup the restrictions.',
  'Open Files app.',
  "Check: only three of the five files should have the 'dlp-managed-icon'",
  'class, which means that the icon is displayed.',
  'Hover over an icon: a tooltip should appear.',
  'Check: the DLP managed icon tooltip should be visible. The full text',
  'contains a placeholder for the link so here we only check the first part.',
  'Tests that if the file is restricted by DLP, the Restriction details context\n' +
    'menu item appears and is enabled.',
  'Add entries to Downloads and setup the fake source URLs.',
  'Setup the restrictions.',
  'Open Files app.',
  'Wait for the DLP managed icon to be shown - this also means metadata has',
  'been cached and can be used to show the context menu command.',
  'Select the file.',
  'Right-click on the file.',
  'Wait for the context menu to appear.',
  'Wait for the context menu command option to appear.',
  'Filters used for the following save-as and file-open tests.',
  'Rows in `My files`',
  'Dialog buttons',
  'Tests the save dialogs properly show DLP blocked Play files, before and after\n' +
    'being mounted, both in the navigation list and in the details list.',
  'Setup the restrictions.',
  'Select My Files folder and wait for file list to display Downloads, Play',
  'files, and Linux files.',
  'Only one directory, Android files, should be disabled, both as the tree',
  'item and the directory in the main list.',
  'Verify that the button is enabled when a non-blocked volume is selected.',
  'Verify that the button is disabled when a blocked volume is selected.',
  'Unmount Play files and mount ARCVM.',
  'Wait for the placeholder "Play files" to appear, the directory tree item',
  "should be disabled, but the file row shouldn't be disabled.",
  'Click the close button to dismiss the dialog.',
  'Tests the save dialogs properly show DLP blocked guest OS volumes, before and\n' +
    'after being mounted: it should be marked as disabled in the navigation list\n' +
    'both before and after mounting, but in the file list it will only be disabled\n' +
    'after mounting.',
  'Setup the restrictions.',
  'Select My Files folder and wait for file list.',
  'Before mounting, the guest should be disabled in the navigation list, but',
  'not in the file list.',
  'Mount the guest by selecting it in the file list.',
  'Verify that the guest is mounted and disabled, now both in the navigation',
  "and the file list, as well as that the OK button is disabled while we're",
  'still in the guest directory.',
  'Unmount the volume.',
  'Verify that volume is replaced by the fake and is still disabled.',
  'Click the close button to dismiss the dialog.',
  'Tests the save dialogs properly show DLP blocked Linux files, before and\n' +
    'after being mounted: it should be marked as disabled in the navigation list\n' +
    'both before and after mounting, but in the file list it will only be disabled\n' +
    'after mounting.',
  'Setup the restrictions.',
  'Add entries to Downloads.',
  'Verify that the button is enabled when a file is selected.',
  'Select My Files folder and wait for file list to display Downloads, Play',
  'files, and Linux files.',
  'Before mounting, Linux files should be disabled in the navigation list,',
  'but not in the file list.',
  'Mount Crostini by selecting it in the file list. We cannot select/mount',
  "it from the navigation list since it's already disabled there.",
  'Verify that Crostini is mounted and disabled, now both in the navigation',
  "and the file list, as well as that the OK button is disabled while we're",
  'still in the Linux files directory.',
  'Click the close button to dismiss the dialog.',
  'Tests the save dialogs properly show blocked USB volumes.',
  'Mount a USB volume.',
  'Setup the restrictions.',
  'It should be disabled in the navigation list, but the eject button should',
  'be enabled.',
  'Unmount.',
  'Mount again - should still be disabled.',
  'Click the close button to dismiss the dialog.',
  'Tests the save dialogs properly show blocked Google drive volume.',
  'Setup the restrictions.',
  'It should be disabled in the navigation list, and the expand icon',
  "shouldn't be visible.",
  'Click the close button to dismiss the dialog.',
  "Tests that save dialogs are opened in a requested volume/directory, when it's\n" +
    'not blocked by DLP. This test is an addition to the\n' +
    '`saveAsDlpRestrictedRedirectsToMyFiles` test case, which assert that if the\n' +
    'directory is blocked, the dialog will not be opened in the requested path.',
  'Add entries to Play files.',
  'Double check: current directory should be Play files.',
  'Click the close button to dismiss the dialog.',
  'Open a save dialog in Play Files.',
  'Tests that save dialogs are never opened in a DLP blocked volume/directory,\n' +
    'but rather in the default display root.',
  'Add entries to Downloads and Play files.',
  'Setup the restrictions.',
  ... 114 more items
]
dlp_enterprise_connectors.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests that proceeding two warnings, the first is triggered by DLP and the',
  'second is triggered by Enterprise Connectors, will move all the copied files.',
  'Add entry to Downloads.',
  'Open Files app.',
  'Mount a USB volume.',
  'Wait for the USB volume to mount.',
  'Set the mock to pause the first task.',
  'Setup policy.',
  'Setup reporting expectations.',
  'Setup the scanning closure to be able to wait for the scanning to be',
  'complete.',
  'Copy and paste the two files to USB.',
  'Focus the file list.',
  'Select all files.',
  'Check: the file-list should be selected.',
  'DLP warning.',
  'Proceed DLP warning.',
  'Scanning Label.',
  'Issue the responses, s.t., the transfer can continue.',
  'Expect warning proceeded messages.',
  'Enterprise Connectors warning.',
  'Proceed Enterprise Connectors warning.',
  'Verify that the two files were copied.',
  'Tests that blocking different files by DLP and Enterprise Connectors will',
  'copy all the file except the blocked ones. A block panel will be shown in the',
  'end  with the blocked files count.',
  'Add entry to Downloads.',
  'Open Files app.',
  'Mount a USB volume.',
  'Wait for the USB volume to mount.',
  'Set the mock to block one file.',
  'Setup policy.',
  'Setup the scanning closure to be able to wait for the scanning to be',
  'complete.',
  'Copy and paste all the files to USB.',
  'Focus the file list.',
  'Select all files.',
  'Check: the file-list should be selected.',
  'Scanning Label.',
  'Issue the responses, s.t., the transfer can continue.',
  'Verify that the two files were blocked.',
  'blockedFileEntry1 is expected since the DLP daemon actual blocking with',
  "Fanotify isn't mocked."
]
drive_specific.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "Expected files shown in the search results for 'hello'",
  'Expected text shown in the Enable Docs Offline dialog.',
  'The id attribute of the dismiss button in the educational banner.',
  'Opens the Enable Docs Offline dialog and waits for it to appear in the given\n' +
    '`appId` window.',
  'Simulate Drive signalling Files App to open a dialog.',
  'Check: the Enable Docs Offline dialog should appear.',
  'Waits for getLastDriveDialogResult to return the given |expectedResult|.',
  'Waits for a given notification to appear.\n' +
    '@param notificationId ID of notification to wait for.',
  'Tests opening the "Offline" on the sidebar navigation by clicking the icon,\n' +
    'and checks contents of the file list. Only the entries "available offline"\n' +
    'should be shown. "Available offline" entries are hosted documents and the\n' +
    'entries cached by DriveCache.',
  'Open Files app on Drive.',
  'Click the icon of the Offline volume.',
  'Check: the file list should display the offline file set.',
  'Tests opening the "Shared with me" on the sidebar navigation by clicking the\n' +
    'icon, and checks contents of the file list. Only the entries labeled with\n' +
    '"shared-with-me" should be shown.',
  'Open Files app on Drive containing "Shared with me" file entries.',
  'Click the icon of the Shared With Me volume.',
  'Use the icon for a click target.',
  'Wait until the breadcrumb path is updated.',
  'Verify the file list.',
  'Navigate to the directory within Shared with me.',
  'Wait until the breadcrumb path is updated.',
  'Verify the file list.',
  'Tests that pressing enter after typing a search shows all of\n' +
    'the results for that query.',
  'Open Files app on Drive.',
  'Fetch A11y messages.',
  'Tests that pressing the clear search button announces an a11y message and\n' +
    'shows all files/folders.',
  'Open Files app on Drive.',
  'Start the search from a sub-folder.',
  'Search the text.',
  'Wait for the result in the file list.',
  'Click on the clear search button.',
  'Wait for fil list to display all files.',
  'Check that a11y message for clearing the search term has been issued.',
  'The breadcrumbs should return back to the previous original folder.',
  'Tests that pinning multiple files affects the pin action of individual\n' +
    'files.',
  'Select world.ogv.',
  'Open the context menu once the file is selected.',
  'Check that the pin action is unticked, i.e. the action will pin the file.',
  'Additionally select hello.txt.',
  'Open the context menu with both files selected.',
  'Pin both files.',
  'Wait for the toggle pinned async action to finish, so the next call to',
  'display context menu is after the action has finished.',
  "Wait for the pinned action to finish, it's flagged in the file list by",
  'removing CSS class "dim-offline" and adding class "pinned".',
  'Select world.ogv by itself.',
  'Wait for hello.txt to be unselected.',
  'Open the context menu for world.ogv.',
  'Check that the pin action is ticked, i.e. the action will unpin the file.',
  'Tests that pinning hosted files without the required extensions is disabled,\n' +
    'and that it does not affect multiple selections with non-hosted files.',
  'Select Test Document.gdoc.',
  'Open the context menu once the file is selected.',
  'Check that the pin action is disabled and unticked.',
  'Additionally select hello.txt.',
  'Open the context menu with both files selected.',
  'The pin action should be enabled to pin only hello.txt, so select it.',
  'Wait for the toggle pinned async action to finish, so the next call to',
  'display context menu is after the action has finished.',
  "Wait for the pinned action to finish, it's flagged in the file list by",
  'removing CSS class "dim-offline" and adding class "pinned".',
  'Test Document.gdoc should not be pinned however.',
  'Open the context menu with both files selected.',
  'Check that the pin action is ticked, i.e. the action will unpin the file.',
  'Tests pinning a file to a mobile network.\n' +
    'TODO(b/296960734): Fix this test once the notification has been fixed.',
  'Wait for the menu to appear and click on toggle pinned.',
  'Wait for the toggle pinned async action to finish, so the next call to',
  'display context menu is after the action has finished.',
  "Wait for the pinned action to finish, it's flagged in the file list by",
  'removing CSS class "dim-offline".',
  'Open context menu again.',
  'Check: File is pinned.',
  'Tests that the pinned toggle in the toolbar updates on pinned state changes\n' +
    'within fake entries.',
  'Navigate to the Offline fake entry.',
  'Bring up the context menu for test.txt.',
  'The pinned toggle should update to be checked.',
  'Unpin the file.',
  'The pinned toggle should change to be unchecked.',
  'Navigate to the Shared with me fake entry.',
  'Bring up the context menu for test.txt.',
  'The pinned toggle should remain unchecked.',
  'Pin the file.',
  'The pinned toggle should change to be checked.',
  "Tests that pressing Ctrl+A (select all files) from the search box doesn't\n" +
    'put the Files App into check-select mode (crbug.com/849253).',
  'Open Files app on Drive.',
  'Focus the search box.',
  'Wait for the search box to be visible.',
  'Press Ctrl+A inside the search box.',
  "Check we didn't enter check-select mode.",
  'Verify that "Available Offline" is not available from the gear menu for a\n' +
    'drive file.',
  'Open Files app on Drive.',
  'Select a file.',
  'Wait for the entry to be selected.',
  'Click on the icon of the file to check select it',
  'Ensure gear button is available',
  'Click on gear menu and ensure "Available Offline" is not shown.',
  'Check that "Available Offline" is not shown in the menu. This element is',
  'hidden via a display:none css rule, so check that.',
  'Verify that "Available Offline" is not available from the gear menu for a\n' +
    'drive directory.',
  ... 254 more items
]
file_dialog.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Sends a key event to an open file dialog, after selecting the file |name|\n' +
    'entry in the file list.\n' +
    '@param name File name shown in the dialog.\n' +
    '@param key Key detail for fakeKeyDown event.\n' +
    '@param dialog ID of the file dialog window.\n' +
    '@return Promise to be fulfilled on success.',
  'Clicks a button in the open file dialog, after selecting the file |name|\n' +
    'entry in the file list and checking that |button| exists.\n' +
    '@param name File name shown in the dialog.\n' +
    '@param button Selector of the dialog button.\n' +
    '@param dialog ID of the file dialog window.\n' +
    '@return Promise to be fulfilled on success.',
  'Sends an unload event to an open file dialog (after it is drawn) causing the\n' +
    'dialog to shut-down and close.\n' +
    '@param dialog ID of the file dialog window.\n' +
    '@param element Element to query for drawing.\n' +
    '@return Promise to be fulfilled on success.',
  "Adds basic file entry sets for both 'local' and 'drive', and returns the\n" +
    'entry set of the given |volume|.\n' +
    '@param volume Name of the volume.\n' +
    '@return Promise to resolve({Array<TestEntryInfo>}) on success, the Array\n' +
    'being the basic file entry set of the |volume|.',
  'Adds the basic file entry sets then opens the file dialog on the volume. Once\n' +
    'file |name| is shown, select it and click the Ok button.\n' +
    '@param volume Volume name for  remoteCall.openAndWaitForClosingDialog.\n' +
    '@param name File name to select in the dialog.\n' +
    '@param useBrowserOpen Whether to launch the dialog from the browser.\n' +
    '@return Promise to be fulfilled on success.',
  'If the file is opened via the filesystem API, check the name matches.',
  'Otherwise, the caller is responsible for verifying the returned URL.',
  'Clicks the OK button in the provided dialog, expecting the provided `name` to\n' +
    'be passed into the `OnFilesImpl()` observer in the C++ test harness.\n' +
    '@param appId App window Id.\n' +
    '@param name The (single) filename passed to the EXPECT_CALL when verifying\n' +
    'the mocked OnFilesOpenedImpl().\n' +
    "@param openType Type of the dialog ('open' or 'saveAs').",
  'Adds the basic file entry sets then opens the save file dialog on the volume.\n' +
    'Once file |name| is shown, select it and click the Ok button, again clicking\n' +
    'Ok in the confirmation dialog.\n' +
    '@param volume Volume name for  remoteCall.openAndWaitForClosingDialog.\n' +
    '@param name File name to select in the dialog.\n' +
    '@return Promise to be fulfilled on success.',
  'Adds the basic file entry sets then opens the file dialog on the volume. Once\n' +
    'file |name| is shown, select it and verify that the Ok button is disabled.\n' +
    '@param volume Volume name for  remoteCall.openAndWaitForClosingDialog.\n' +
    '@param name File name to select in the dialog where the OK button should be\n' +
    'disabled\n' +
    '@param enabledName File name to select where the OK button should be enabled,\n' +
    'used to ensure that switching to |name| results in the OK button becoming\n' +
    'disabled.\n' +
    '@param type The dialog type to open.\n' +
    '@return Promise to be fulfilled on success.',
  'Adds the basic file entry sets then opens the file dialog on the volume. Once\n' +
    "file |name| is shown, verifies that it's dimmed according to added classes.\n" +
    '@param volume Volume name for  remoteCall.openAndWaitForClosingDialog.\n' +
    '@param name File name to check for being dimmed in the dialog.\n' +
    '@return Promise to be fulfilled on success.',
  "The 'dim-offline' class dims an element only if the connection",
  "status is 'OFFLINE', which is not something this test is verifying.",
  'Adds the basic file entry sets then opens the file dialog on the volume. Once\n' +
    'file |name| is shown, select it and click the Cancel button.\n' +
    '@param volume Volume name for  remoteCall.openAndWaitForClosingDialog.\n' +
    '@param name File name to select in the dialog.\n' +
    '@return Promise to be fulfilled on success.',
  'Adds the basic file entry sets then opens the file dialog on the volume. Once\n' +
    'file |name| is shown, select it and send an Escape key.\n' +
    '@param volume Volume name for  remoteCall.openAndWaitForClosingDialog.\n' +
    '@param name File name to select in the dialog.\n' +
    '@return Promise to be fulfilled on success.',
  'Tests for display:none status of feedback panels in Files app.\n' +
    '@param type Type of dialog to open.',
  "Open dialog of the specified 'type'.",
  'Wait to finish initial load.',
  'Check the display style of the feedback panels container.',
  "Check that CSS display style is 'none'.",
  'Test file present in Downloads.',
  "Type TestEntryInfo's targetPath can be undefined, but the first item",
  'from BASIC_LOCAL_ENTRY_SET has value, we need to do type casting here.',
  'Tests opening file dialog on Downloads and closing it with Ok button.',
  'Tests opening file dialog sets aria-multiselect true on grid and list.',
  'Open File dialog.',
  'Wait to finish initial load.',
  'Check: <list> has aria-multiselect set to true.',
  'Check: <grid> has aria-multiselect set to true.',
  'Tests opening save file dialog sets aria-multiselect false on grid and list.',
  'Open Save as dialog.',
  'Wait to finish initial load.',
  'Check: <list> has aria-multiselect set to false.',
  'Check: <grid> has aria-multiselect set to false.',
  'Tests opening save file dialog on Downloads and closing it with Ok button.',
  'Tests opening save file dialog on Downloads and using New Folder button.',
  'Open Save as dialog.',
  'Wait to finish initial load.',
  'Check: New Folder button should be enabled and click on it.',
  'Wait for the new folder with input to appear, assume the rest of the',
  'process works (covered by other tests).',
  'Tests opening file dialog on Downloads and closing it with Cancel button.',
  'Tests opening file dialog on Downloads and closing it with ESC key.',
  'Tests the feedback panels are hidden when using an open file dialog.',
  'Tests the feedback panels are hidden when using a save file dialog.',
  'Test file present in Drive only.',
  'Test file present in Drive only.',
  'Tests opening file dialog on Drive and closing it with Ok button.',
  'Tests save file dialog on Drive and closing it with Ok button.',
  'Tests that an unpinned file cannot be selected in file open dialogs while\n' +
    'offline.',
  'Tests that an unpinned file cannot be selected in save file dialogs while\n' +
    'offline.',
  'Tests opening file dialog on Drive and closing it with Ok button.',
  'Tests save file dialog on Drive and closing it with Ok button.',
  'Tests opening a file from Drive in the browser, ensuring it correctly opens\n' +
    'the file URL.',
  'Tests opening a hosted doc in the browser, ensuring it correctly navigates to\n' +
    "the doc's URL.",
  'Tests opening a hosted doc in the browser, ensuring it correctly navigates to\n' +
    "the doc's URL.",
  'Tests that selecting a hosted doc from a dialog requiring a real file is\n' +
    'disabled.',
  'Tests that selecting a hosted doc from a dialog requiring a real file is\n' +
    'disabled.',
  'Test that an encrypted (via CSE) file will be marked as grey in a dialog\n' +
    'requiring a read file.',
  'Tests that selecting an encrypted (via CSE) file from a dialog requiring a\n' +
    'real file is disabled.',
  'Tests opening file dialog on Drive and selecting an office file.',
  'Tests opening file dialog on Drive and selecting multiple files including an\n' +
    'office file.',
  'Wait for initial load to finish.',
  'Sort the file names so we can compare the array directly with the entries',
  'returned from pollForChosenEntry() without worrying about',
  'order.',
  'Select both files with the dialog.',
  'Tests opening file dialog on Drive and closing it with Cancel button.',
  'Tests opening file dialog on Drive and closing it with ESC key.',
  "Tests opening file dialog, then closing it with an 'unload' event.",
  "Tests that the open file dialog's filetype filter does not default to all\n" +
    'types.',
  "Check: 'JPEG image' should be selected.",
  "Tests that the save file dialog's filetype filter defaults to all types.",
  "Check: 'All files' should be selected.",
  "Tests that the save file dialog's filetype filter can be navigated using the\n" +
    'keyboard.',
  "Check: 'All files' should be selected.",
  "Check: up key causes 'JPEG image' to  be selected.",
  "Check: down key causes 'All files' to be selected.",
  "Check: another down key doesn't wrap to the top selection.",
  'Check: left key acts like up when control is closed.',
  'Check: right key acts like down when control is closed.',
  'Check: Enter key expands the select control.',
  'Check: second Enter key collapses the select control.',
  'Check: space key expands the select control.',
  'Check: second space key collapses the select control.',
  'Check: Escape key collapses the select control.',
  'Check: tab key collapses the select control.',
  'Check: tab key collapsing remembers changed selection.',
  'Check: Escape key collapsing remembers changed selection.',
  'Check: left arrow does nothing with control expanded.',
  'Check: right arrow does nothing with control expanded.',
  'Tests that filtering works with { acceptsAllTypes: false } and a single\n' +
    'filter. Regression test for https://crbug.com/1097448.',
  "Check: 'JPEG image' should be selected.",
  'Opens a "Save As" dialog and clicks OK. Helper for the\n' +
    'saveFileDialogExtension* tests.\n' +
    '@param extraParams Extra options to pass to chooseEntry().\n' +
    "@param expectName Name for the 'expectFileTask' mock expectation.\n" +
    '@return The name of the entry from chooseEntry().',
  'Ensure the input field is ready.',
  'Tests that a file extension is not automatically added upon confirmation\n' +
    'whilst the "All Files" filter is selected on the "Save As" dialog. Note the\n' +
    "saveFileDialogDefaultFilter test above verifies that 'All Files' is actually\n" +
    'the default in this setup.',
  'Note these tests use the suggestedName field as a robust way to simulate a',
  ... 45 more items
]
file_display.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Waits for the empty folder element to show and assert the content to match\n' +
    'the expected message.\n' +
    '@param appId Files app windowId.\n' +
    '@param expectedMessage The expected empty folder message',
  'Use repeatUntil() here because when we switch between different filters,',
  'the message changes but the element itself will always show there.',
  'Checks if the files initially added by the C++ side are displayed, and\n' +
    'that files subsequently added are also displayed.\n' +
    '@param path Path to be tested, Downloads or Drive.\n' +
    '@param defaultEntries Default file entries.',
  'Open Files app on the given |path| with default file entries.',
  'Verify the default file list is present in |result|.',
  'Add new file entries.',
  'Verify the newly added entries appear in the file list.',
  'Tests files display in Downloads.',
  'Tests opening the files app navigating to a local folder. Uses\n' +
    'platform_util::OpenItem, a call to an API distinct from the one commonly used\n' +
    'in other tests for the same operation.',
  'Add a file to Downloads.',
  'Open Files app on the Downloads directory.',
  'Wait for app window to open.',
  'Check: The current directory is MyFiles/Downloads/photos.',
  'Tests opening the files app navigating to a local folder. Uses\n' +
    'platform_util::OpenItem, a call to an API distinct from the one commonly used\n' +
    'in other tests for the same operation.',
  'Add a file to Downloads.',
  'Open Files app on the Downloads directory selecting the target file.',
  'Wait for app window to open.',
  'Check: The current directory is MyFiles/Downloads.',
  'Check: The target file is selected.',
  'Tests opening the files app navigating to the My Drive folder. Uses\n' +
    'platform_util::OpenItem, a call to an API distinct from the one commonly used\n' +
    'in other tests for the same operation.',
  'Open Files app on the Drive directory.',
  'Wait for app window to open.',
  'Check: the app should be open on My Drive.',
  'Tests files display in Google Drive.',
  'Tests file display rendering in offline Google Drive.',
  "is not assignable to parameter of type 'TestEntryInfo[]'.",
  "Retrieve all file list entries that could be rendered 'offline'.",
  'Use "first-child" here because opacity for offline only applies on the',
  'children elements.',
  "Check: the hello.txt file only should be rendered 'offline'.",
  "Check: hello.txt must have 'offline' CSS render style (opacity).",
  "Retrieve file entries that are 'available offline' (not dimmed).",
  'Use "first-child" here because opacity for offline only applies on the',
  'children elements.',
  "Check: these files should have 'available offline' CSS style.",
  "Directories are shown as 'available offline'.",
  "Hosted documents are shown as 'available offline'.",
  "Pinned files are shown as 'available offline'.",
  'Tests file display rendering in online Google Drive.\n' +
    '@param appId the id for the window to check the file display.',
  'Retrieve all file list row entries.',
  "Check: all files must have 'online' CSS style (not dimmed).",
  'Tests file display rendering in online Google Drive.',
  'Open Files app on Drive.',
  'Tests file display rendering in online Google Drive when opening via OpenItem\n' +
    'function.',
  'Open Files app on the Drive directory.',
  'Wait for app window to open.',
  'Wait for Files app to finish loading.',
  'Tests files display in the "Computers" section of Google Drive. Testing that\n' +
    'we can navigate to folders inside /Computers also has the side effect of\n' +
    'testing that the breadcrumbs are working.',
  'Open Files app on Drive with Computers registered.',
  'Navigate to Computer Grand Root.',
  'Navigate to a Computer Root.',
  'Navigate to a subdirectory under a Computer Root.',
  'Tests files display in an MTP volume.',
  'Open Files app on local downloads.',
  'Mount MTP volume in the Downloads window.',
  'Wait for the MTP mount and click to open the MTP volume.',
  'Verify the MTP file list.',
  'Tests files display in a removable USB volume.',
  'Open Files app on local downloads.',
  'Mount USB volume in the Downloads window.',
  'Wait for the USB mount and click to open the USB volume.',
  'Verify the USB file list.',
  'Tests files display on a removable USB volume with and without partitions.',
  'Open Files app on local downloads.',
  'Mount USB device containing partitions.',
  'Mount unpartitioned USB device.',
  'Wait for removable root to appear in the directory tree.',
  'Wait for removable partition-1 to appear in the directory tree.',
  'Wait for removable partition-2 to appear in the directory tree.',
  'Check partitions are children of the root label.',
  'Wait for USB to appear in the directory tree.',
  'Expand it before checking children items.',
  'Check unpartitioned USB has single partition as tree child.',
  'Wait for USB to appear in the directory tree.',
  'Expand it before checking children items.',
  'Check unpartitioned USB does not have partitions as tree children.',
  'Tests that the file system type is properly displayed in the type\n' +
    'column. Checks that the entries can be properly sorted by type.\n' +
    'crbug.com/973743',
  'Open Files app on local downloads.',
  'Mount removable device with partitions.',
  'Wait and select the removable group by clicking the label.',
  'Wait for partitions to appear in the file table list.',
  'Sort by type in ascending order.',
  'Check that partitions are sorted in ascending order based on the partition',
  'type.',
  'Sort by type in descending order.',
  'Check that partitions are sorted in descending order based on the partition',
  'type.',
  'Tests display of partitions in file list after mounting a removable USB\n' +
    'volume.',
  'Open Files app on local downloads.',
  'Mount removable partitions.',
  'Wait for removable group to appear in the directory tree and select the',
  'first removable group by clicking the label.',
  'Wait for removable partitions to appear in the file table.',
  'Searches for a string in Downloads and checks that the correct results\n' +
    'are displayed.\n' +
    '@param searchTerm The string to search for.\n' +
    '@param expectedResults The results set.',
  'Open Files app on local downloads.',
  'Focus the search box.',
  ... 164 more items
]
file_list.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Send Tab keys to Files app until #file-list gets a selected item.\n' +
    "Raise test failure if #file-list doesn't get anything selected in 20 tabs.\n" +
    'NOTE:\n' +
    '1. Sends a maximum of 20 tabs.\n' +
    '2. The focused element after this function might NOT be #file-list, since\n' +
    'updating the selected item which is async can be detected after an extra\n' +
    'Tab has been sent.',
  'Check: the file-list should have nothing selected.',
  'Press the tab until file-list gets focus and select some file.',
  'Send Tab key.',
  'Check if there is a file selected, and return if so.',
  'Tests that file list column header have ARIA attributes.',
  'Fetch column header.',
  'aria-describedby is used to tell users that they can click and which',
  'type of sort asc/desc will happen.',
  "role button is used so users know that it's clickable.",
  'Tests using tab to focus the file list will select the first item, if\n' +
    'nothing is selected.',
  'Send Tab keys to make file selected.',
  'Check: The first file only is selected in the file entry rows.',
  'Tests that after a multiple selection, canceling the selection and using\n' +
    'Tab to focus the files list it selects the item that was last focused.',
  'Check: the file-list should have nothing selected.',
  'Move to item 2.',
  'Select item 2 with Ctrl+Space.',
  'Move to item 3 and Cltr+Space to add it to multi-selection.',
  'Check that items 2 and 3 are selected.',
  'Cancel the selection.',
  'Wait until selection is removed.',
  'Send Tab keys until a file item is selected.',
  'Check: The 3rd item only is selected.',
  'Tests that after a multiple selection, canceling the selection and using\n' +
    'Tab to focus the files list it selects the item that was last focused.',
  'Send shift-Tab key to tab into sort button.',
  'Check: sort button has focus.',
  'Check: button is showing down arrow.',
  'Check: aria-label tells us to click to sort ascending.',
  "Press 'enter' on the sort button.",
  'Get the state of the (focused) sort button.',
  'Check: button is showing up arrow.',
  'Check: aria-label tells us to click to sort descending.',
  "Press 'enter' key on the sort button again.",
  'Get the state of the (focused) sort button.',
  'Check: button is showing up arrow.',
  'Check: aria-label tells us to click to sort descending.',
  'Verifies the total number of a11y messages and asserts the latest message\n' +
    'is the expected one.\n' +
    '@return Latest a11y message.',
  'Tests that selecting/de-selecting files with keyboard produces a11y\n' +
    'messages.\n' +
    'NOTE: Test shared with grid_view.js.\n' +
    '@param isGridView if the test is testing the grid view.',
  'Click view-button again to switch to detail view.',
  'Clicking #view-button adds 1 a11y message.',
  'Keys used for keyboard navigation in the file list.',
  'Select first item with Home key.',
  "Navigating with Home key doesn't use aria-live message, it only uses the",
  'native listbox selection state messages.',
  'Ctrl+Down & Ctrl+Space to select second item: Beautiful Song.ogg',
  'Check: Announced "Beautiful Song.add" added to selection.',
  'Shift+End to select from 2nd item to the last item.',
  'Check: Announced range selection from "Beautiful Song.add" to hello.txt.',
  'Ctrl+Space to de-select currently focused item (last item).',
  'Check: Announced de-selecting hello.txt',
  'Ctrl+A to select all items.',
  'Check: Announced selecting all entries.',
  'Esc key to deselect all.',
  'Check: Announced deselecting all entries.',
  'Tests that selecting/de-selecting files with mouse produces a11y messages.\n' +
    'NOTE: Test shared with grid_view.js.\n' +
    '@param isGridView if the test is testing the grid view.',
  'Click view-button again to switch to detail view.',
  'Clicking #view-button adds 1 a11y message.',
  'Click first item.',
  "Simple click to select a file doesn't use aria-live message, it only",
  'uses the native listbox selection state messages.',
  'Ctrl+Click second item.',
  'Check: Announced "Beautiful Song.add" added to selection.',
  'Shift+Click last item.',
  'Check: Announced range selection from "Beautiful Song.add" to hello.txt.',
  'Ctrl+Click to de-select the last item.',
  'Check: Announced de-selecting hello.txt',
  'Click on "Cancel selection" button.',
  'Check: Announced deselecting all entries.',
  'Tests the deletion of one or multiple items. After deletion, one of the\n' +
    "remaining items should have the lead, but shouldn't be in check-select\n" +
    'mode.',
  'Select first 2 items.',
  'Press move to trash button.',
  'Wait for completion of file deletion.',
  'Check: no selection state.',
  'Check: lead state of last item.',
  'Check: selected state of last item.',
  'Select and move the first item to trash.',
  'Wait for file deletion.',
  'Check: no selection state.',
  'Check: lead state of first item.',
  'Check: selected state of first item.',
  'Tests that in selection mode, the rename operation is applied to the\n' +
    'selected item, as seen by the selection model, rather than the lead item.\n' +
    'The lead and the selected item(s) are different when we deselect a file\n' +
    'list item in selection mode. crbug.com/1094260',
  'Select 2 items.',
  'Deselect first item.',
  'Check: the first item should have the lead state.',
  'Check: selection should be on the second item.',
  'Press Ctrl+Enter key to rename the selected file.',
  'Check: the renaming text input should be shown in the file list.',
  'Type new file name.',
  'Send Enter key to the text input.',
  'Check: the selected file should have been renamed.',
  'Tests that user can rename a file/folder after using "select all" without\n' +
    'having selected any file previously.',
  'Select all the files.',
  'Check: the file-list should be selected.',
  'Wait and click on "selection menu button".',
  'Wait and click on rename menu item.',
  'Check: the renaming text input should be shown in the file list.'
]
file_transfer_connector.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Info for the source or destination of a transfer.',
  'The volume type (e.g. downloads, drive, drive_recent,\n' +
    'drive_shared_with_me, drive_offline) or team drive name.',
  'Identifies the volume and can be used for the\n' +
    'OnFileTransferEnterpriseConnector policy. This should match the allowed\n' +
    'policy values in policy_templates.json or\n' +
    'source_destination_matcher_ash.cc.',
  'Info for the transfer operation.',
  'True if this transfer is for a move operation, false for a copy\noperation.',
  'Whether to proceed a potential warning or cancel the transfer.',
  'Flat connector entry test set that does not include any directories.\n' +
    'If a file should be blocked, name it "*blocked*".\n' +
    'If a file is allowed, name it "*allowed*".',
  'Flat connector entry test set that does not include any directories.\n' +
    'If a file should be blocked, name it "*blocked*".\n' +
    'If a file should be warned, name it "*warned*".\n' +
    'If a file is allowed, name it "*allowed*".',
  'Test set to test deep scanninng, contains nested directories.\n' +
    'If a file should be blocked, name it "*blocked*".\n' +
    'If a file is allowed, name it "*allowed*".\n' +
    'If a directory only contains allowed files, name it "*allowed*".',
  'Test set to test deep scanninng, contains nested directories.\n' +
    'If a file should be blocked, name it "*blocked*".\n' +
    'If a file is allowed, name it "*allowed*".\n' +
    'If a directory only contains allowed files, name it "*allowed*".',
  'A list of transfer locations, for use with transferBetweenVolumes.\n' +
    'volumeName has to match an entry of\n' +
    'AddEntriesMessage::MapStringToTargetVolume().',
  'TODO(crbug.com/1361898): Remove these ones proper error details are',
  'displayed.',
  "Opens a Files app's main window and creates the source and destination\n" +
    'entries.\n' +
    '@param transferInfo Options for the transfer.\n' +
    '@return Promise to be fulfilled with the window ID.',
  'Wait until the elements are loaded in the table.',
  'Returns all entries that are children of the passed directory.\n' +
    '@param entries The entries.\n' +
    '@param directory The directory path. Contains the path of the current\n' +
    'directory, e.g., ["A", "B"] for A/B/.',
  'Verifies the recursive contents of the current path by checking the file list\n' +
    'of the current path and its ancestors.\n' +
    '@param appId App window Id.\n' +
    '@param expectedEntries Expected contents of file list.\n' +
    '@param rootDirectory The path to the root directory for the check.\n' +
    "@param currentSubDirectory The current directory path split at '/', e.g.,\n" +
    '["A", "B"] for A/B/.',
  '1. Check current directory.',
  '2. For each subdirectory: enter subdirectory and call recursion.',
  '3. After the recursion ends, navigate back to the root directory.',
  'Go back to the root directory.',
  'Function to toggle display of all play files.\n' +
    'Before this function is called, the play file folder has to be opened.\n' +
    '@param appId App window Id.',
  'Open the gear menu by clicking the gear button.',
  'Wait for the gear-menu to appear and click the menu item.',
  'Wait for item to be checked.',
  "Checks that the panel item's primary and secondary buttons have expected type\n" +
    'and text, and then clicks the button defined by selectedButton.\n' +
    '@param appId ID of the Files app window.\n' +
    '@param secondaryButtonCategory Expected secondary button category (dismiss or\n' +
    'cancel).\n' +
    '@param selectedButton The button to click (primary or secondary).',
  'Test function to copy from the specified source to the specified destination.\n' +
    '@param transferInfo Options for the transfer.\n' +
    '@param entryTestSet The set of file and directory entries to be used for the\n' +
    'test.\n' +
    '@param expectedFinalMsg The final message to expect at the progress center.\n' +
    '@param expectedWarnMsg The warning message to expect at the progress center.',
  'Setup policy.',
  'Setup reporting expectations.',
  'Setup the scanning closure to be able to wait for the scanning to be',
  'complete.',
  'Test function to copy from the specified source to the specified destination.\n' +
    '@param transferInfo Options for the transfer.\n' +
    '@param entryTestSet The set of file and directory entries to be used for the\n' +
    'test.\n' +
    '@param expectedFinalMsg The final message to expect at the progress center.',
  'Ensure reportOnly is set, as the no-space behavior is special for',
  'report-only mode.',
  'Setup policy.',
  'Setup the scanning closure to be able to wait for the scanning to be',
  "complete. There should only be one delegate, as all other delegates aren't",
  'initiated when an out of space error occurs.',
  'Mounts required volumes.\n@param transferInfo Options for the transfer.',
  'Opens Files app and initiates source with entryTestSet and destination\n' +
    'with [ENTRIES.hello].\n' +
    'The destination is populated to prevent flakes (we can wait for the `hello`\n' +
    'file to appear).\n' +
    '@param transferInfo Options for the transfer.\n' +
    '@param entryTestSet The set of file and directory entries to be used for the\n' +
    'test.',
  'Select the source folder.',
  'Wait for the expected files to appear in the file list.',
  'Focus the file list.',
  'Select all files.',
  'Check: the file-list should be selected.',
  'Copy the files. Similar to (ctrl + c) or (ctrl + x).',
  'The actual copy only starts with the paste (ctrl + v).',
  'Select the destination folder.',
  'Wait for the initially expected files to appear in the file list.',
  'This is before the actual copy!',
  'Paste the file. Similar to (ctrl + v).',
  'This will execute the actual paste.',
  'Verify what happens after a paste when scanning can block files.\n' +
    '@param appId The app id of the files app window.\n' +
    '@param transferInfo Options for the transfer.\n' +
    '@param entryTestSet The set of file and directory entries to be used for the\n' +
    'test.\n' +
    '@param expectedFinalMsg The final message to expect at the progress center.\n' +
    '@param expectedWarnMsg The warning message to expect at the progress center.',
  'Check that a scanning label is shown.',
  'After the scanning label is shown, we resume the transfer.',
  'Issue the responses, s.t., the transfer can continue.',
  'Check that the warning appears in the feedback panel.',
  'Expect warning proceeded messages.',
  'Proceed the warning (single file warning without user justification',
  'required) / open the warning dialog (multiple file warning or user',
  'justification required).',
  'Cancel the warning by pressing on the secondary button.',
  "Wait 500ms to ensure files aren't moved.",
  'Ensure progress panel item is gone.',
  'Wait for the expected files to appear in the file list.',
  'No file should be transferred, so there should be no new file at the',
  'destination.',
  'All files should still exist at the destination.',
  'Wait for the expected files to appear in the file list.',
  'If the warning is cancelled, the transfer is also cancelled, so do not',
  'perform any further checks, as there will be no further notifications,',
  'etc.',
  'Wait for the expected files to appear in the file list.',
  "Files marked as 'blocked' should not appear.",
  'Verify contents of the source directory.',
  'For a move, paths that include "allowed" should not be present at the',
  'source.',
  'Wait for the expected files to appear in the file list.',
  'Check that the error appears in the feedback panel.',
  'There should be a review button if there are at least two errors.',
  'For a single file error, this should show an error reason as secondary',
  'text.',
  'Check that only one line of text is shown.',
  'Verify what happens after a paste in the case of report-only scans.\n' +
    '@param appId The app id of the files app window.\n' +
    '@param transferInfo Options for the transfer.\n' +
    '@param entryTestSet The set of file and directory entries to be used for the\n' +
    'test.',
  "No check for scanning label, as there shouldn't be one.",
  'Wait for the expected files to appear in the file list.',
  "All files should appear, even those marked as 'blocked'.",
  'Verify contents of the source directory.',
  'For a move, the source directory should be empty.',
  'Wait for the expected files to appear in the file list.',
  'Check that the status panel automatically vanishes.',
  'This means that there was no error.',
  'After the transfer completed, we issue scanning responses.',
  'This ensures that scanning does not impact the transfer.',
  'We have to wait for the scanning to be completed to fulfill the report',
  'expectations.',
  'Verify what happens after a paste in the case of report-only scans if\n' +
    "there's a no space error.\n" +
    '@param appId The app id of the files app window.\n' +
    '@param transferInfo Options for the transfer.\n' +
    '@param expectedFinalMsg The final message to expect at the progress center.\n' +
    '@param entryTestSet The set of file and directory entries to be used for the\n' +
    'test.',
  ... 20 more items
]
files_tooltip.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Waits until the element by |id| is the document.activeElement.\n' +
    '@param appId The Files app windowId.\n' +
    '@param id The element id.',
  'Tests that tooltip is displayed when focusing an element with tooltip.',
  'Check: initially the tooltip should be hidden.',
  'Focus a button with a tooltip: the search button.',
  'Check: the search button tooltip should be visible.',
  'Focus an element that has no tooltip: the file-list.',
  'Check: the tooltip should hide.',
  'Select all the files to enable the cancel selection button.',
  'Focus the cancel selection button.',
  'Check: the cancel selection button tooltip should be visible.',
  'Tests that tooltip is displayed when focusing an element with tooltip.',
  'Check: initially the tooltip should be hidden.',
  'Focus a button with a tooltip: the view button.',
  'Check: the view button tooltip should be visible.',
  'Click the view button to update its label.',
  'Check: the view button should still be focused.',
  'Check: the tooltip text should be updated.',
  'Tests that tooltips display when hovering an element that has a tooltip.',
  'Check: initially the tooltip should be hidden.',
  'Mouse hover over a button that has a tooltip: the search button.',
  'Check: the search button tooltip should be visible.',
  'Move the mouse away from the search button.',
  'Check: the tooltip should hide.',
  'Move the mouse over the search button again.',
  'Check: the search button tooltip should be visible.',
  'Tests that tooltips stay open when hovering over the tooltip.',
  'Check: initially the tooltip should be hidden.',
  'Mouse hover over a button that has a tooltip: the search button.',
  'Check: the search button tooltip should be visible.',
  'Move the mouse away from the search button, but on the tooltip.',
  'Check: the tooltip should still be visible.',
  'Move the mouse away from the tooltip.',
  'Check: the tooltip should hide.',
  'Tests that tooltip is hidden when clicking on body (or anything else).',
  'Check: initially the tooltip should be hidden.',
  'Hover over a button that has a tooltip: the search button.',
  'Check: the search button tooltip should be visible.',
  'Click the body element.',
  'Check: the tooltip should hide.',
  'Tests that card tooltip is hidden when clicking on body (or anything else).',
  "Click the 'Android files' volume tab in the directory tree.",
  'Wait for the read-only bubble to appear in the files app tool bar.',
  'Check: initially, no tooltip should be visible.',
  'Hover the mouse over the read-only bubble.',
  'Check: the read-only bubble card tooltip should be visible.',
  'Click the body element.',
  'Check: the tooltip should hide.',
  'Tests that the tooltip should hide when the window resizes.',
  'Check: initially the tooltip should be hidden.',
  'Focus a button with tooltip: the search button.',
  'Check: the search button tooltip should be visible.',
  'Resize the window.',
  'Check: the tooltip should hide.',
  'Tests that the tooltip is hidden after the delete confirm dialog closes.',
  'Check: initially the tooltip should be hidden.',
  'Select file.',
  'Mouse over the delete button and leave time for tooltip to show.',
  'Click the toolbar delete button.',
  'Check: the delete confirm dialog should appear.',
  "Click the delete confirm dialog 'Cancel' button.",
  'Leave time for tooltip to show.',
  'Check: the tooltip should be hidden.',
  'Select file.',
  'Mouse over the delete button and leave time for tooltip to show.',
  'Click the toolbar delete button.',
  'Check: the delete confirm dialog should appear.',
  "Click the delete confirm dialog 'Delete' button.",
  'Check: the delete confirm dialog should close.',
  'Leave time for tooltip to show.',
  'Check: the tooltip should be hidden.'
]
folder_shortcuts.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Directory tree path constants.',
  'Entry set used for the folder shortcut tests.',
  'Constants for each folder.',
  'Expands whole directory tree under DIRECTORY.Drive.\n' +
    '@param appId Files app windowId.\n' +
    '@return Promise fulfilled on success.',
  'Navigate to |directory| (makes |directory| the current directory).\n' +
    '@param appId Files app windowId.\n' +
    '@param directory Directory to navigate to.\n' +
    '@return Promise fulfilled on success.',
  'Removes the folder shortcut to |directory|. Note the current directory must\n' +
    'be a parent of the given |directory|.\n' +
    '@param appId Files app windowId.\n' +
    '@param directory Directory of shortcut to be removed.\n' +
    '@return Promise fulfilled on success.',
  'Right-click for context menu with retry.',
  'Right click.',
  'Wait context menu to show.',
  'Check menu item is visible and enabled.',
  'Click the remove shortcut menu item.',
  'Waits until the current directory becomes |currentDir| and current\n' +
    'selection becomes the shortcut to |shortcutDir|.\n' +
    '@param appId Files app windowId.\n' +
    '@param currentDir Directory which should be a current directory.\n' +
    '@param shortcutDir Directory whose shortcut should be selected.\n' +
    '@return Promise fulfilled on success.',
  'Clicks folder shortcut to |directory|.\n' +
    '@param appId Files app windowId.\n' +
    '@param directory Directory whose shortcut will be clicked.\n' +
    '@return Promise fulfilled on success.',
  'Creates some shortcuts and traverse them and some other directories.',
  'Open Files app on Drive.',
  'Expand the directory tree.',
  'Create a shortcut to directory D.',
  'Navigate to directory B.',
  'Create a shortcut to directory C.',
  'Click the Drive root (My Drive).',
  'Check: current directory and selection should be the Drive root.',
  'Send Ctrl+3 key to file-list to select 3rd volume in the',
  "directory tree. This corresponds to the second shortcut (to 'D')",
  'as shortcuts are ordered alphabetically. Volumes 1 is the',
  'Recent View.',
  'Make sure directory change is finished before focusing on the tree.',
  'The focus is on file list now after Ctrl+3, in order to use `:focus`',
  'selector in the below `expectSelection` we need to focus the tree first.',
  'Check: current directory and selection should be D.',
  'Send UpArrow key to directory tree to select the shortcut',
  'above D.',
  'Check: current directory should be D, with shortcut C selected.',
  'Send Enter key to the directory tree to change to directory C.',
  'Check: current directory and selection should be C.',
  'Adds and removes shortcuts from other window and check if the active\n' +
    'directories and selected navigation items are correct.',
  'Add entries to Drive.',
  'Open one Files app window on Drive.',
  'Open another Files app window on Drive.',
  "appId2 window is focused now because that's the last opened window. We are",
  'asserting on the appId1 window below, in order to use ":focus" selector in',
  '`expectSelection`, we need to make sure the appId1 window is focused first.',
  'Create a shortcut to D.',
  'Click the shortcut to D.',
  'Check: current directory and selection should be D.',
  'Create a shortcut to A from the other window.',
  'Check: current directory and selection should still be D.',
  'Remove shortcut to D from the other window.',
  'Check: directory D in the directory tree should be focused.'
]
format_dialog.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Lanuches file manager and stubs out the formatVolume private api.\n' +
    '@return Files app window ID.',
  'Opens a format dialog for the USB with label |usbLabel|.\n' +
    '@param appId Files app window ID.\n' +
    '@param usbLabel Label of usb to format.',
  'Focus the directory tree.',
  "Right click on the USB's directory tree entry.",
  'Click on the format menu item.',
  'Check the dialog is open.',
  'Opens a format dialog for the USB with label |usbLabel| and device with\n' +
    'label |deviceLabel|.\n' +
    '@param appId Files app window ID.\n' +
    '@param usbLabel Label of usb to format.\n' +
    '@param deviceLabel Label of the parent device of usb.',
  'Focus the directory tree.',
  'Expand device tree entry to access partition entry.',
  "Right click on the USB's directory tree entry.",
  'Click on the format menu item.',
  'Check the dialog is open.',
  'Tests the format dialog for a sample USB with files on it.',
  'Open the format dialog on fake-usb.',
  'Check the correct size is displayed.',
  'Click format button.',
  'Check the dialog is closed.',
  'Tests the format dialog is a modal dialog.',
  'Open the format dialog on fake-usb.',
  'Focus the <cr-input> inner <input> element.',
  'Send a select-all keyboard event to the <input> element.',
  'Check: the file-list should have nothing selected.',
  'Tests the format dialog for an empty USB.',
  'Open the format dialog on fake-usb.',
  'Check the warning message is hidden.',
  'Click format button.',
  'Check the dialog is closed.',
  'Tests cancelling out of the format dialog.',
  'Open the format dialog on fake-usb.',
  'Click cancel button.',
  'Check the dialog is closed.',
  'Checks that formatting gives error |errorMessage| when given |label| and\n' +
    '|format|.\n' +
    '@param appId Files app window ID.\n' +
    '@param label New label of usb drive.\n' +
    '@param format New filesystem of drive.\n' +
    '@param errorMessage Expected error message to be displayed.',
  'Enter in a label.',
  'Select a format.',
  'Check error message is not there.',
  'Click format button.',
  'Check for error message.',
  'Checks that formatting succeeds when given |label| and |format|.\n' +
    '@param appId Files app window ID.\n' +
    '@param label New label of usb drive.\n' +
    '@param format New filesystem of drive.',
  'Enter in a label.',
  'Select a format.',
  'Check error message is not there.',
  'Click format button.',
  'Check the dialog is closed.',
  'Tests validations for drive name length.',
  'Open the format dialog on fake-usb.',
  'Check that a 12 character name fails on vfat.',
  'Check that a 11 character name succeeds on vfat.',
  'Open the format dialog on fake-usb.',
  'Check that a 16 character name fails on exfat.',
  'Check that a 15 character name succeeds on exfat.',
  'Open the format dialog on fake-usb.',
  'Check that a 33 character name fails on ntfs.',
  'Also test both invalid character and long name.',
  'Check that a 32 character name succeeds on ntfs.',
  'Test validations for invalid characters.',
  'Open the format dialog on fake-usb.',
  'Check that a name with invalid characters fails.',
  'Check that a name without invalid characters succeeds.',
  'Tests opening the format dialog from the gear menu.',
  'Focus the directory tree.',
  'Navigate to the USB via the directory tree.',
  'Click on the gear menu button.',
  'Click on the format menu item.',
  'Check the format dialog is open and the title is correct',
  'Click cancel button.',
  'Check the dialog is closed.',
  'Focus the file list.',
  'Click an item in the list.',
  'Click on the gear menu button.',
  'Click on the format menu item.',
  'Check the format dialog is open and the title is correct',
  'Click cancel button.',
  'Click on the gear menu button.',
  'Ensure the format menu item has appeared.',
  'Unmount the USB.',
  'Ensure the file manager has navigated back to My files.',
  'Ensure the format menu item has disappeared.'
]
gear_menu.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Gets the common steps to toggle hidden files in the Files app\n' +
    '@param basicSet Files expected before showing hidden\n' +
    '@param hiddenEntrySet Files expected after showing hidden',
  'Gets the common steps to toggle Android hidden files in the Files app\n' +
    '@param basicSet Files expected before showing hidden\n' +
    '@param hiddenEntrySet Files expected after showing hidden',
  'Gets the common steps to toggle hidden files in the Files app\n' +
    '@param basicSet Files expected before showing hidden\n' +
    '@param hiddenEntrySet Files expected after showing hidden\n' +
    '@param toggleMenuItemSelector Selector for the menu item that toggles hidden\n' +
    'file visibility',
  'Open the gear menu by clicking the gear button.',
  'Wait for menu to not be hidden.',
  'Wait for menu item to appear.',
  'Wait for menu item to appear.',
  'Click the menu item.',
  'Wait for item to be checked.',
  'Check the hidden files are displayed.',
  'Repeat steps to toggle again.',
  'Tests toggling the show-hidden-files menu option on Downloads.',
  'Tests toggling the show-hidden-files menu option on Drive.',
  'Tests that toggle-hidden-android-folders menu item exists when "Play files"\n' +
    'is selected, but hidden in Recents.',
  'Open Files.App on Play Files.',
  'Wait for the file list to appear.',
  'Click the gear menu button.',
  'Check: gear-button has aria-haspopup set to true',
  'Wait for the gear menu to appear.',
  '#toggle-hidden-android-folders command should be shown and disabled by',
  'default.',
  'Click the file list: the gear menu should hide.',
  'Wait for the gear menu to hide.',
  'Navigate to Recent.',
  'Click the gear menu button.',
  'Wait for the gear menu to appear.',
  '#toggle-hidden-android-folders command should be hidden.',
  'Tests that "Play files" shows the full set of files after\n' +
    'toggle-hidden-android-folders is enabled.',
  'Open Files.App on Play Files.',
  'Wait for the file list to appear.',
  'Wait for the gear menu button to appear.',
  'Tests that the current directory is changed to "Play files" after the\n' +
    'current directory is hidden by toggle-hidden-android-folders option.',
  'Wait for the file list to appear.',
  'Wait for the gear menu button to appear.',
  'Wait for menu to not be hidden.',
  'Wait for menu item to appear.',
  'Click the menu item.',
  'Wait for item to be checked.',
  'Check the hidden files are displayed.',
  'Navigate to "/My files/Play files/A".',
  'Wait until current directory is changed to "/My files/Play files/A".',
  'Open the gear menu by clicking the gear button.',
  'Wait for menu to not be hidden.',
  'Wait for menu item to appear.',
  'Click the menu item.',
  'Wait until the current directory is changed from',
  '"/My files/Play files/A" to "/My files/Play files" since',
  '"/My files/Play files/A" is invisible now.',
  'Tests the paste-into-current-folder menu item.',
  'Add files to Downloads volume.',
  'Open Files.App on Downloads.',
  'Wait for the files to appear in the file list.',
  'Wait for the gear menu button to appear.',
  '1. Before selecting entries: click the gear menu button.',
  'Wait for the gear menu to appear.',
  '#paste-into-current-folder command is shown. It should be disabled',
  'because no file has been copied to clipboard.',
  '2. Selecting a single regular file',
  'Wait for menu to appear.',
  'The command is still shown.',
  '3. When ready to paste a file',
  'Ctrl-C to copy the selected file',
  'The command appears enabled.',
  'Tests the "select-all" menu item.',
  'Open Files.App on Downloads.',
  'Wait for the gear menu button to appear.',
  'Click the gear menu button.',
  'Wait for the gear menu to appear.',
  'Check: #select-all command is shown, but disabled (no files yet).',
  'Click the file list: the gear menu should hide.',
  'Wait for the gear menu to hide.',
  'Add a new file to Downloads.',
  'Wait for the file list change.',
  'Click on the gear button again.',
  'Check: #select-all command is shown, and enabled (there are files).',
  'Click on the #gear-menu-select-all item.',
  'Check: the file-list should be selected.',
  'Tests that new folder appears in the gear menu with Downloads focused in the\n' +
    'directory tree.',
  'Focus the directory tree.',
  'Open the gear menu.',
  'Open the gear meny by a shortcut (Alt-E).',
  'Wait for menu to appear.',
  'Wait for menu to appear, containing new folder.',
  'Tests that the "Files settings" button appears in the gear menu and properly\n' +
    'opens the Files section of the Settings page.',
  'Open Files.App on Downloads and wait for the gear menu button to appear.',
  'Click the gear menu button.',
  'Wait for the gear menu to appear.',
  'Check that there is no Settings window opened.',
  'Click #files-settings, which should be shown and enabled.',
  'Check that the settings window is opened on the Files subpage.',
  'Tests that the "Send feedback" button appears in the gear menu and properly\n' +
    'opens the feedback window.',
  'Open Files.App on Downloads.',
  'Wait for the gear menu button to appear.',
  'Click the gear menu button.',
  'Wait for the gear menu to appear.',
  'Check that there is no feedback window opened.',
  'Click #send-feedback, which should be shown and enabled.',
  ... 66 more items
]
grid_view.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Shows the grid view and checks the label texts of entries.\n' +
    '@param rootPath Root path to be used as a default current directory during\n' +
    'initialization. Can be null, for no default path.\n' +
    '@param expectedSet Set of entries that are expected to appear in the grid\n' +
    'view.\n' +
    '@return Promise to be fulfilled or rejected depending on the test result.',
  'Open Files app on |rootPath|.',
  'Disable all banners.',
  'Click the grid view button.',
  'Compare the grid labels of the entries.',
  'Tests to show grid view on a local directory.',
  'Tests to show grid view on a drive directory.',
  'Tests to view-button switches to thumbnail (grid) view and clicking again\n' +
    'switches back to detail (file list) view.',
  'Check that a11y message for switching to grid view.',
  'Click view-button again to switch to detail view.',
  'Wait for detail-view to be visible and grid to be hidden.',
  'Check that a11y message for switching to list view.',
  'Tests that selecting/de-selecting files with keyboard produces a11y messages.',
  'Tests that selecting/de-selecting files with mouse produces a11y messages.',
  'Tests that Grid View shows "Folders" and "Files" titles before folders and\n' +
    'files respectively.',
  'Tests that Grid View shows DocumentsProvider thumbnails.',
  'Add files to the DocumentsProvider volume.',
  'Open Files app.',
  'Wait for the DocumentsProvider volume to mount.',
  'Click to open the DocumentsProvider volume.',
  'Click the grid view button.',
  'Wait for the grid view to load.',
  'Check that all DocumentsProvider thumbnails are loaded where expected.',
  'Tests that an encrypted file will have a corresponding icon.',
  'Click the grid view button.',
  "Check the file's icon.",
  "Move mouse out of the view change button, so we won't have its hover text.",
  'Hover over an icon: a tooltip should appear.'
]
guest_os.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests that Guest OS entries show up in the sidebar at files app launch.',
  'Prepopulate the list with a bunch of guests.',
  'Open the files app.',
  'Check that our guests are listed.',
  'Tests that the list of guests is updated when new guests are added or\n' +
    'removed.',
  'Open the files app.',
  'Add a guest...',
  '...and it should show up.',
  'Check that we have the right number of entries.',
  'Remove the guests...',
  '...and they should all be gone.',
  'Then add them back for good measure.',
  'Tests that clicking on a Guest OS entry in the sidebar mounts the\n' +
    'corresponding volume, and that the UI is updated appropriately (volume in\n' +
    'sidebar and not fake, contents show up once done loading, etc).',
  'Start off with one guest.',
  'Open the files app.',
  'Wait for our guest to appear and click it.',
  "Wait until it's loaded.",
  'We should have a volume in the sidebar.',
  'We should no longer have a fake.',
  'And the volume should be focused in the main window.',
  'It should not be read-only.',
  'Unmount the volume.',
  'We should have our fake back.',
  'And no more volume.',
  'Tests that clicking on a Guest OS Android entry in the sidebar mounts the\n' +
    'corresponding volume, and that the UI is update appropriately (volume in\n' +
    'sidebar and not fake, contents show up once done loading, etc).',
  'Start off with one guest.',
  'Open the files app.',
  'Wait for our guest to appear and click it.',
  "Wait until it's loaded.",
  'We should have a volume in the sidebar.',
  'We should no longer have a fake.',
  'And the volume should be focused in the main window.',
  'It should not be read-only.',
  'Unmount the volume.',
  'We should have our fake back.',
  'And no more volume.'
]
holding_space.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests that the holding space welcome banner appears and that it can be\n' +
    'dismissed.',
  'Open Files app on Downloads.',
  'Check: the holding space welcome banner should appear. Note that inline',
  'styles are removed once dynamic styles have finished loading.',
  'Dismiss the holding space welcome banner.',
  'Check: the holding space welcome banner should be hidden.',
  'Tests that the holding space welcome banner will show for modal dialogs when\n' +
    'using the new banners framework.',
  'Open Save as dialog in the foreground window.',
  'Ensure the Holding space welcome banner is the only banner prioritised.',
  'Wait to finish initial load.',
  'Check: the holding space welcome banner should be visible.',
  'Tests that the holding space welcome banner will update its text depending on\n' +
    'whether or not tablet mode is enabled.',
  'Open Files app on Downloads.',
  'Check: `document.body` should indicate that tablet mode is disabled.',
  'Async function which repeats until the element matching the specified',
  '`query` has a calculated display matching the specified `displayValue`.',
  'Cache queries for `text` and `textInTabletMode`.',
  'Check: `text` should be displayed but `textInTabletMode` should not.',
  'Perform and check: enable tablet mode.',
  'Check: `textInTabletMode` should be displayed but `text` should not.',
  'Perform and check: disable tablet mode.',
  'Check: `text` should be displayed but `textInTabletMode` should not.'
]
install_linux_package_dialog.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The dialog has an INSTALL and OK button, both as .cr-dialog-ok, but only',
  'one is visible at a time.',
  'Add entries to crostini volume, but do not mount.',
  'Linux files fake root is shown.',
  'Mount crostini, and ensure real root and files are shown.',
  'Open the deb package.',
  'Ensure package install dialog is shown.',
  'The details are in separate divs on multiple lines, which the test api',
  'returns as a single string. These values come from',
  'fake_cicerone_client.cc.',
  'Begin installation.',
  'Wait for the installation to start (under test, we use a fake D-Bus',
  "client, so it doesn't actually install anything).",
  'Dismiss dialog',
  'Ensure dialog closes'
]
keyboard_operations.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Waits until a dialog with an OK button is shown, and accepts it by clicking\n' +
    "on the dialog's OK button.\n" +
    '@param appId The Files app windowId.\n' +
    '@return Promise to be fulfilled after clicking the OK button.',
  'Wait until the dialog is shown.',
  'Click the dialog OK button.',
  'Wait until the dialog closes.',
  'Tests copying a file to the same file list.\n' +
    '@param path The path to be tested, Downloads or Drive.',
  'Copy the file into the same file list.',
  'Check: the copied file should appear in the file list.',
  "DriveFs doesn't preserve mtimes so they shouldn't match.",
  'The mtimes should match for Local files.',
  'Tests deleting a file from the file list.\n' +
    '@param path The path to be tested, Downloads or Drive.\n' +
    "@param confirmDeletion If the file system doesn't support trash, need to\n" +
    'confirm the deletion.',
  'Delete the file from the file list.',
  'Check: the file list should be empty.',
  'Tests deleting a folder from the file list. The folder is also shown in the\n' +
    'Files app directory tree, and should not be shown there when deleted.\n' +
    '@param path The path to be tested, Downloads or Drive.\n' +
    '@param parentLabel The directory tree item label.\n' +
    "@param confirmDeletion If the file system doesn't support trash, need to\n" +
    'confirm the deletion.',
  'Expand the directory tree |treeItem|.',
  'Check: the folder should be shown in the directory tree.',
  'Delete the folder entry from the file list.',
  'Check: the file list should be empty.',
  'Check: the folder should not be shown in the directory tree.',
  'Renames a file.\n' +
    '@param appId The Files app windowId.\n' +
    '@param oldName Old name of a file.\n' +
    '@param newName New name of a file.\n' +
    '@return Promise to be fulfilled on success.',
  'Select the file.',
  'Press Ctrl+Enter key to rename the file.',
  'Check: the renaming text input should be shown in the file list.',
  'Type new file name.',
  'Send Enter key to the text input.',
  'Tests renaming a folder. An extra enter key is sent to the file list during\n' +
    'renaming to check the folder cannot be entered while it is being renamed.\n' +
    '@param path Initial path (Downloads or Drive).\n' +
    '@param parentLabel The directory tree item label.\n' +
    '@return Promise to be fulfilled on success.',
  'Expand the directory tree |treeItem|.',
  'Check: the photos folder should be shown in the directory tree.',
  'Press ArrowDown to select the photos folder.',
  'Await file list item selection.',
  'Press Ctrl+Enter to rename the photos folder.',
  'Check: the renaming text input should be shown in the file list.',
  'Type the new folder name.',
  'Send Enter to the list to attempt to enter the directory.',
  'Send Enter to the text input to complete renaming.',
  'Wait until renaming is complete.',
  'Check: the renamed folder should be shown in the file list.',
  'Check: the renamed folder should be shown in the directory tree.',
  'Tests renaming a file.\n' +
    '@param path Initial path (Downloads or Drive).\n' +
    '@return Promise to be fulfilled on success.',
  'Rename the file.',
  'Wait until renaming completes.',
  'Check: the new file name should be shown in the file list.',
  'Try renaming the new file to an invalid file name.',
  'Check: the error dialog should be shown.',
  'Check: the new file name should not be changed.',
  'Tests renaming partitions with the keyboard on the file list.',
  'Open Files app on local downloads.',
  'Mount removable device with partitions.',
  'Wait and select the removable group by clicking the label.',
  'Focus on the file list.',
  'Wait for partitions to show up.',
  'Attempt to rename partition with a label longer than permitted for fat32.',
  'Verify that an error was triggered.',
  'Dismiss the error dialog.',
  'Enter ctrl+A to select the old text so we can replace it.',
  'Enter a valid name this time.',
  'Wait for the renaming input element to disappear.',
  'verify the partition was successfully renamed.',
  'Tests that the root html element .focus-outline-visible class appears for\n' +
    'keyboard interaction and is removed on mouse interaction.',
  'Open Files app.',
  'Check: the html element should have focus-outline-visible class.',
  'Send mousedown to the toolbar delete button.',
  'Check: the html element should not have focus-outline-visible class.',
  'Tests that the root html element .pointer-active class is added and removed\n' +
    'for mouse interaction.',
  'Open Files app.',
  'Send mousedown to the toolbar delete button.',
  'Check: the html element should have pointer-active class.',
  'Check: the html element should not have focus-outline-visible class.',
  'Send mouseup to the toolbar delete button.',
  'Check: the html element should not have pointer-active class.',
  'Tests that the root html element .pointer-active class will be removed with\n' +
    'pointerup event triggered by touch.',
  'Open Files app.',
  'Send pointerdown to the list container.',
  'Check: the html element should have pointer-active class.',
  'Send pointerup with touch to the list container.',
  'Check: the html element should not have pointer-active class.',
  'Tests that the root html element .pointer-active class should not be added if\n' +
    'the PointerDown event is triggered by touch.',
  'Open Files app.',
  'Send pointerdown with touch to the list container.',
  'Check: the html element should not have pointer-active class.',
  'Test that selecting "Google Drive" in the directory tree with the keyboard\n' +
    'expands it and selects "My Drive".',
  'Open Files app.',
  'Focus the directory tree.',
  'Wait for Google Drive root to be available.',
  'The directory tree is the first element focused, so pressing down whilst',
  'focused should move through all the volumes until it reaches the drive',
  'volume.',
  "Ensure it's focused.",
  'Activate it.',
  'It should have expanded.',
  'My Drive should be selected.',
  'Tests that while the delete dialog is displayed, it is not possible to press\n' +
    'CONTROL-C to copy a file.',
  'Open Files app.',
  'Select a file for deletion.',
  'Click delete button in the toolbar.',
  'Check: the delete confirm dialog should appear.',
  "Check: the dialog 'Cancel' button should be focused by default.",
  'Try to copy file. We need to use execCommand as the command handler that',
  ... 10 more items
]
manage_dialog.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "Test 'Manage in Drive' for a file or directory on Drive.\n" +
    '@param path Path of the file or directory to be managed.\n' +
    '@param url Expected URL for the browser to visit.\n' +
    '@param teamDrive If set, the team drive to switch to.',
  'Open Files app on Drive.',
  'Navigate to the specified team drive if one is specified.',
  'Wait for the file list to update.',
  'Select the given |path|.',
  'Wait for the entry to be selected.',
  'Right-click the selected entry.',
  'Wait for the context menu to appear.',
  'Click the "Manage in Drive" menu item.',
  'Wait for the context menu to disappear.',
  'Wait for the browser window to appear and navigate to the expected URL.',
  'Tests managing a file on Drive.',
  'Tests managing a directory on Drive.',
  'Tests managing a hosted file (gdoc) on Drive.',
  'Tests managing a file in a team drive.',
  'Tests managing a directory in a team drive.',
  'Tests managing a hosted file (gdoc) in a team drive.',
  'Tests managing a team drive.'
]
materialized_views.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests that the Directory Tree can display a materialized view.',
  'Open Files app on local Downloads.',
  'Wait for "Starred files" to appear.',
  'Tests that a materialized view can display its content in the file list.',
  'Open Files app on local Downloads.',
  'Add hello to Tote/pin to shelf.',
  'Open context menu.',
  'Add to Tote.',
  'Wait for "Starred files" to appear.',
  'Navigate to Starred files.',
  'Check the content.'
]
metadata.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Check if |value| equals the |desiredValue| within 1% margin of tolerance.\n' +
    '@param value The variable value.\n' +
    '@param desiredValue The desired value.',
  'floor and ceil to account to at least +/-1 unit.',
  'Creates a test file, which can be inside another folder, however parent\n' +
    'folders have to be created by the caller.\n' +
    '@param path Folder path to be created,',
  'Creates a Shared Drive.\n@param name Shared Drive name.',
  'Entries used by Drive and Downloads tests.',
  'Measures the number of metadata operations generated for:\n' +
    '- Opening Files app in My Drive with 8 files and 3 folders.\n' +
    '- Navigate to My Drive > photos1 > folder2, which is empty.',
  'Open Files app on Drive.',
  'Navigate 2 folders deep, because navigating in directory tree might',
  'trigger further metadata fetches.',
  'Fetch the metadata stats.',
  'Verify the number of metadata operations generated by the whole',
  'navigation above.',
  'If the asserts below fail, check if your change has increased the number',
  'of metadata operations, because they impact the overall app performance.',
  'Full fetch tally:',
  '8 files in My Drive',
  '+  3 folders in My Drive.',
  '+  1 My Drive root.',
  '+  2 folders when expanding photos1',
  '= 14',
  'Cleared 8 files + 3 folders when navigated out of My Drive and',
  'clearing file list.',
  'Measures the number of metadata operations generated for:\n' +
    '- Opening Files app in Downloads with 8 files and 3 folders.\n' +
    '- Navigate to Downloads > photos1 > folder1 which is empty.',
  'Open Files app on Downloads.',
  'Navigate 2 folders deep, because navigating in directory tree might',
  'triggers further metadata fetches.',
  'Fetch the metadata stats.',
  'Verify the number of metadata operations generated by the whole',
  'navigation above.',
  'If the asserts below fail, check if your change has increased the number',
  'of metadata operations, because they impact the overall app performance.',
  'Full fetch tally:',
  '8 files in Downloads',
  '+  3 folders in Downloads.',
  '+  1 Downloads root.',
  '+  1 read again photos1 when naviated to it.',
  '+  8 files in Downloads again.',
  '= 21',
  '8 files and 3 folders in Downloads when expanding in the directory',
  'tree.',
  'Cleared 8 files + 3 folders when navigated out of Downloads and',
  'clearing file list.',
  'Measures the number of metadata operations generated for:\n' +
    '- Opening Files app in My Drive with 51 folders.\n' +
    '- Navigate to My Drive > folder1 which has 50 files.\n' +
    'Using 50 files and 50 folders because in the Drive backend it has a\n' +
    'throttle for max of 20 concurrent operations.',
  'Using sibling folders because navigateWithDirectoryTree expands their',
  'parent directory tree might issue metadata requests the child folders.',
  'Open Files app on Drive.',
  'Navigate only 1 folder deep,which is slightly different from',
  'metadataDrive test.',
  'Wait for the metadata stats to reach the desired count.',
  "File list component, doesn't display all files at once for performance",
  "reasons. Since we can't check the modifiedTime for all files in file",
  'list, which is a proxy for "all metadata requests have finished", we have',
  'to wait until the metadata stats to have the expected count.',
  'If the asserts below fail, check if your change has increased the number',
  'of metadata operations, because they impact the overall app performance.',
  'Full fetch tally:',
  '51 files in My Drive.',
  '+  50 files in My Drive>folder1.',
  '+   1 My Drive root.',
  '+   1 read again folder1 when naviated to it.',
  '= 103',
  '50 team drives cached, reading from file list when navigating to',
  '/team_drives, then read cached when expanding directory tree.',
  'Cleared 51 folders when navigated out of My Drive and clearing file',
  'list.',
  'Measures the number of metadata operations generated for:\n' +
    '- Opening Files app in My Drive, with 50 folders and 50 files.\n' +
    '- Navigate to Shared Drives, with 50 team drives.\n' +
    '- Expand Shared Drives to display the 50 team drives..',
  'Using 50 files and 50 folders because in the Drive backend it has a',
  'throttle for max of 20 concurrent jobs.',
  'Using sibling folders because navigateWithDirectoryTree expands their',
  'parent and directory_tree.js issues some metadata requests for this',
  'condition.',
  'Downloads just some entries. Load some in Downloads and Downloads to',
  "check that Downloads entries don't issue metadata calls when navigating",
  'on Drive/Shared drives.',
  'Open Files app on Drive.',
  'Navigate to Shared drives root.',
  'Expand Shared Drives, because expanding might need metadata.',
  "Get all Shared Drives' children and check that we have 50 team drives.",
  'Fetch the metadata stats.',
  'Verify the number of metadata operations generated by the whole',
  'navigation above.',
  'If the asserts below fail, check if your change has increased the number',
  'of metadata operations, because they impact the overall app performance.',
  '',
  'Full fetch tally:',
  '50 files in My Drive.',
  '+  50 folders in My Drive.',
  '+  50 team drives.',
  '+   1 My Drive root.',
  '+   1 Shared Drives root.',
  '= 152',
  'No cache read here because metadata is retrieved from the store instead of',
  'the metadata model when expanding directory tree.',
  'Cleared 50 folders + 50 files when navigated out of My Drive and',
  'clearing file list.',
  'Tests that fetching content metadata from a DocumentsProvider completes.',
  'Add files to the DocumentsProvider volume.',
  ... 7 more items
]
metrics.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Tests that enum metrics are recorded correctly.',
  'Open Files SWA.',
  'Record each enumerator once.',
  'Each bucket should contain exactly one sample.',
  'Open Files SWA:',
  'Value basd on DialogType in file_manager/common/js/dialog_type.js:',
  'Check that the UMA for SWA was incremented.',
  'Test that the DirectoryListLoad UMA is appropriately recorded and the',
  'variance is taken into consideration (+/-20%).',
  'Open Files app on Downloads with 10 files loaded.',
  'Expect a non-zero load time in the appropriate histogram.',
  'Open Files app on Downloads with 27 files loaded.',
  'Histogram sum is cumulative so given 27 falls outside the buckets (and',
  'their tolerance) the sum should not increase as no load time will be',
  'recorded.',
  'Open Files app on Downloads with 100 files loaded.',
  'Expect a non-zero load time in the appropriate histogram.',
  'Test that the UpdateAvailableApps UMA is appropriately recorded.',
  'Setup 10 fake File Tasks.',
  'isDefault=  false,',
  'Open the Files app.',
  'Override the file tasks to be the 10 fakes.',
  'Select the file.',
  'Wait for the tasks calculation to complete, updating the "Open" button.',
  'Check: The UMA should be recorded for the 10 bucket.'
]
my_files.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Select My files in directory tree and wait for load.\n' +
    '@param appId ID of the app window.',
  'Select My Files folder.',
  'Wait for file list to display Downloads and Crostini.',
  'Tests if MyFiles is displayed when flag is true.',
  'Open Files app on local Downloads.',
  'Get the labels of the directory tree elements.',
  'Select Downloads folder.',
  'Check that My Files is displayed on breadcrumbs.',
  "Tests directory tree refresh doesn't hide Downloads folder.\n" +
    'This tests a regression where Downloads folder would disappear because\n' +
    'MyFiles model and entry were being recreated on every update and\n' +
    'DirectoryTree expects NavigationModelItem to be the same instance through\n' +
    'updates.',
  'Open Files app on local Downloads.',
  'Mount a USB volume.',
  'Wait for the USB volume to mount.',
  'Select Downloads folder.',
  'Tests My Files displaying Downloads on file list (RHS) and opening Downloads\n' +
    'from file list.',
  'Open Files app on local Downloads.',
  'Select My files in directory tree.',
  'Double click on Download on file list.',
  "Wait for file list to Downloads' content.",
  'Get the selected navigation tree item.',
  'Tests My files updating its children recursively.\n' +
    "If it doesn't update its children recursively it can cause directory tree to\n" +
    'not show or hide sub-folders crbug.com/864453.',
  'Add a hidden folder.',
  "It can't be added via  remoteCall.setupAndWaitUntilReady, because it isn't",
  'displayed and that function waits all entries to be displayed.',
  'Open Files app on local Downloads.',
  'Select Downloads folder.',
  'Wait for gear menu to be displayed.',
  'Open the gear menu by clicking the gear button.',
  'Wait for menu to not be hidden.',
  'Wait for menu item to appear.',
  'Wait for menu item to appear.',
  'Click the menu item.',
  'Check the hidden folder to be displayed in RHS.',
  'Wait for Downloads folder to have the expand icon because of hidden folder.',
  'Expand Downloads to display the ".hidden-folder".',
  'Check the hidden folder to be displayed in LHS.',
  'Children of Downloads and named ".hidden-folder".',
  'Check naming a folder after navigating inside MyFiles using file list (RHS).\n' +
    'crbug.com/889636.',
  'Open Files app on local Downloads.',
  'Select My files in directory tree.',
  'Select Downloads via file list.',
  'Open Downloads via file list.',
  'Wait for Downloads to load.',
  'Select photos via file list.',
  'Press Ctrl+Enter for start renaming.',
  'Wait for input for renaming to appear.',
  'Check: the renaming text input should be shown in the file list.',
  'Type new name.',
  'Send Enter key to the text input.',
  'Wait for new name to appear on the file list.',
  'Tests that MyFiles only auto expands once.',
  'Open Files app on local Downloads.',
  'Collapse MyFiles.',
  'Expand Google Drive and wait for its subtree to expand and display its',
  'children.',
  'Click on My Drive',
  'Wait for My Drive to selected.',
  'Check that MyFiles is still collapsed.',
  'Tests that My files refreshes its contents when PlayFiles is mounted.\n' +
    'crbug.com/946972.',
  'Mount Downloads.',
  'Wait until Downloads is mounted.',
  'Open Files app on local Downloads.',
  'Click on My files and wait it to load.',
  'Mount Play files volume.',
  'Wait until it is mounted.',
  'Android volume should automatically appear on directory tree and file list.',
  'Un-mount Play files volume.',
  'Wait until it is un-mounted.',
  'Check: Play files should disappear from file list.',
  'Check: Play files should disappear from directory tree.',
  'Tests that toolbar delete is not shown for Downloads, or Linux files.',
  'Open Files app on local Downloads.',
  'Select My files in directory tree.',
  'Select Downloads folder in list.',
  "Test that the delete button isn't visible.",
  'Select fake entry Linux files folder in list.',
  "Test that the delete button isn't visible.",
  'Mount crostini and test real root entry.',
  'Select My files in directory tree.',
  'Select real Linux files folder in list.',
  "Test that the delete button isn't visible."
]
navigation.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests that the Backspace key navigates to parent directory.',
  'Open Files app on local Downloads.',
  'It should start in Downloads.',
  'Send the Backspace key to the file list.',
  'It should navigate to the parent.'
]
office.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "Returns 'Open in Google Docs' task descriptor.",
  "Returns 'Open with Excel' task descriptor.",
  "Returns 'Open in PowerPoint' task descriptor.",
  'Waits for the expected number of tasks executions, and returns the descriptor\n' +
    'of the last executed task.\n' +
    '@param appId Window ID.',
  'Wait until a task has been executed.',
  'Arguments provided for the last call to executeTask().',
  'The task descriptor is the first argument.',
  "Disable office setup flow so the dialog doesn't open when the file is",
  'opened.',
  'Open file.',
  "Check that the Word file's alternate URL has been opened in a browser",
  'window. The query parameter is concatenated to the URL as office files',
  'opened from drive have this query parameter added',
  '(https://crrev.com/c/3867338).',
  'Fake chrome.fileManagerPrivate.executeTask to return',
  'chrome.fileManagerPrivate.TaskResult.EMPTY.',
  'Open file.',
  'The available Office task should be "Upload to Drive".',
  'Remove fakes.',
  'Tests that "Upload to Drive" cannot be enabled if the "Upload Office To',
  'Cloud" flag is disabled (test setup similar to `openOfficeWordFromMyFiles`).',
  'Fake chrome.fileManagerPrivate.executeTask to return',
  'chrome.fileManagerPrivate.TaskResult.EMPTY.',
  'Open file.',
  "Since the Upload Office To Cloud flag isn't enabled, the Upload to Drive",
  'task should not be available: another task should have been executed',
  'instead (QuickOffice or generic task).',
  'Remove fakes.',
  'Fake chrome.fileManagerPrivate.executeTask to return',
  'chrome.fileManagerPrivate.TaskResult.OPENED.',
  'Open file.',
  'The Drive/Docs task should be available and executed.',
  'Remove fakes.',
  'Fake chrome.fileManagerPrivate.executeTask to return',
  'chrome.fileManagerPrivate.TaskResult.OPENED.',
  'Open file.',
  'The Web Drive Office Excel task should be available and executed.',
  'Remove fakes.',
  'Fake chrome.fileManagerPrivate.executeTask to return',
  'chrome.fileManagerPrivate.TaskResult.OPENED.',
  'Open file.',
  'The Web Drive Office PowerPoint task should be available and executed.',
  'Remove fakes.',
  'Fake chrome.fileManagerPrivate.executeTask to return',
  'chrome.fileManagerPrivate.TaskResult.OPENED.',
  'Select all the files.',
  'Check: the file-list should show 3 selected files.',
  'Wait for the tasks calculation to complete, updating the "Open" button.',
  'Wait until the open button is available.',
  'TODO(petermarshall): Check that the Docs task is available but that we fell',
  "back to Quick office: one of the selected entries doesn't have a",
  '"docs.google.com" alternate URL.',
  'Press Enter to execute the task.',
  "Check that it's the Docs task.",
  "Unselect the file that doesn't have an alternate URL.",
  'Wait for the file to be unselected.',
  'Press Enter.',
  'The Drive/Docs task should be available and executed.',
  'Remove fakes.',
  'Fake chrome.fileManagerPrivate.executeTask to return',
  'chrome.fileManagerPrivate.TaskResult.OPENED.',
  'Open file.',
  'The Drive/Docs task should be available and executed.',
  'Remove fakes.',
  'Fake chrome.fileManagerPrivate.executeTask to return',
  'chrome.fileManagerPrivate.TaskResult.EMPTY.',
  'Open file.',
  'The Drive/Docs task should be executed, but it will fall back to',
  'QuickOffice.',
  'Remove fakes.',
  'Fake chrome.fileManagerPrivate.executeTask to return',
  'chrome.fileManagerPrivate.TaskResult.OPENED.',
  'Open file.',
  'The Drive/Docs task should be executed, but it will fall back to',
  'QuickOffice.',
  'Remove fakes.',
  'Tests that the educational nudge is displayed when the preference is set.',
  'Set the pref emulating that the user has moved a file.',
  'Open the Files app.',
  'Check that the nudge and its text is visible.'
]
open_audio_media_app.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests opening audio opens MediaApp/Backlight.\n' +
    '@param path Directory path (Downloads or Drive).',
  'Exports test functions.'
]
open_files_in_web_drive.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Tests opening hosted files in the browser.',
  'Tests context menu default task label for Google Drive items.\n' +
    '@param entry FileSystem entry to use.\n' +
    '@param expectedLabel Label of the context menu item.',
  'Open Files.App on drive path, add entry to Drive.',
  'Select the file.',
  'Right-click the selected file.',
  'Wait for the context menu to appear.',
  'Get the default task context menu item.',
  "Verify the context menu item's label.",
  'Tests opening a file from Files app in Web Drive.\n' +
    '@param entry FileSystem entry to use.\n' +
    '@param expectedHostname Hostname of the resource the browser is\n' +
    'supposed to be navigated to.',
  'Open Files.App on drive path, add entry to Drive.',
  'Open the file from Files app.',
  'The SWA window itself is detected by getBrowserWindows().',
  'Wait for a new browser window to appear.',
  'Find the main (normal) browser window.',
  "Check we have found a 'normal' browser window.",
  'Check we have only one tab opened from trying to open the file.',
  'Get the url of the tab, which may still be pending.',
  'Check the end of the URL matches the file we tried to open.'
]
open_image_media_app.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests opening an image opens MediaApp/Backlight.\n' +
    '@param path Directory path (Downloads or Drive).',
  'Exports test functions.'
]
open_media_app.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests if the media app shows up for the selected file entry and that it has\n' +
    'loaded successfully.\n' +
    '@param path Directory path (Downloads or Drive).\n' +
    '@param entry Selected file entry to open.',
  'Open Files.App on Downloads/Drive, add `entry` to Downloads/Drive.',
  'Open the file in Files app.',
  'Wait for the expected 1 a11y announce.',
  'Fetch A11y messages.',
  'Check that opening the file was announced to screen reader.',
  'Wait for MediaApp to open.'
]
open_sniffed_files.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Tests opening files in the browser using content sniffing.',
  'Tests opening a file with missing filename extension from Files app.\n' +
    '@param path Directory path (Downloads or Drive).\n' +
    '@param entry FileSystem entry to use.',
  'Open Files.App on |path|, add imgpdf to Downloads and Drive.',
  'Open the file from Files app.',
  'When SWA is enabled, Backlight is also enabled and becomes the default',
  'handler for PDF files. So we have to use the "open with" option to open',
  'in the browser.',
  'Select the file.',
  'Right-click the selected file.',
  'Wait for the file context menu to appear.',
  'Wait for the sub-menu to appear.',
  'Wait for the sub-menu item "View".',
  'The SWA window itself is detected by getBrowserWindows().',
  'Wait for a new browser window to appear.',
  'Find the main (normal) browser window.',
  "Check we have found a 'normal' browser window.",
  'Check we have only one tab opened from trying to open the file.',
  'Get the url of the tab, which may still be pending.',
  'Check the end of the URL matches the file we tried to open.'
]
open_video_media_app.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests opening a video opens MediaApp/Backlight.\n' +
    '@param path Directory path (Downloads or Drive).',
  'Exports test functions.'
]
directory_tree.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'This serves as the additional selector of the tree item.',
  'Page object for Directory Tree, this class abstracts all the selectors\n' +
    'related to directory tree and its tree items.',
  'Return a singleton instance of DirectoryTreePageObject. This will make sure\n' +
    'the directory tree DOM element is ready.',
  'Note: do not use constructor directly, use `create` static method instead,\n' +
    'which will fetch the `useNewTree_` value and make sure the tree DOM element\n' +
    'is ready.',
  'Returns the selector for the tree root.',
  'Returns the selector for the tree container.',
  'Returns the selector by the tree label.\n' +
    '@param label Label of the tree item',
  'Wait for the selected(aka "active" in the old tree implementation) tree\n' +
    'item with the label.\n' +
    '@param label Label of the tree item.',
  'Wait for the selected(aka "active" in the old tree implementation) tree\n' +
    'item with the label to be lost.\n' +
    '@param label Label of the tree item.',
  'Wait for the tree item with the label to have focused (aka "selected" in\n' +
    'the old tree implementation) state.\n' +
    '@param label Label of the tree item',
  'Wait for the tree item with the label to be focusable (aka "selected" in\n' +
    'the old tree implementation).\n' +
    '@param label Label of the tree item',
  'Go inside shadow DOM to check tabindex.',
  'Wait for the tree item with the type to have focused (aka "selected" in the\n' +
    'old tree implementation) state.\n' +
    '@param type Type of the tree item.',
  'Wait for the shortcut tree item with the label to have focused (aka\n' +
    '"selected" in the old tree implementation) state.\n' +
    '@param label Label of the tree item',
  'Wait for the tree item with the label to have the the current directory\n' +
    'aria-description attribute.\n' +
    '@param label Label of the tree item',
  'Wait for the child items of the specific parent item to match the count.\n' +
    '@param parentLabel Label of the parent tree item.\n' +
    '@param count Expected number of the child items.\n' +
    '@param excludeEmptyChild Set true to only return child items with nested\n' +
    'children.',
  'Wait for the placeholder tree items specified by type to match the count.\n' +
    '@param type Type of the placeholder tree item.\n' +
    '@param count Expected number of the child items.',
  'Get the currently focused tree item.',
  'Gets the label of the tree item.',
  'Gets the volume type of the tree item.',
  'Check if the tree item is disabled or not.',
  `Empty value for "disabled" means it's disabled.`,
  'Wait for the item with the label to get the `has-children` attribute with\n' +
    'the specified value.\n' +
    '@param label Label of the tree item.\n' +
    '@param hasChildren should the tree item have children or not.',
  'Expand the item first before checking its children.',
  'Wait for the item with the type to get the `has-children` attribute with\n' +
    'the specified value.\n' +
    '@param type Type of the tree item.\n' +
    '@param hasChildren should the tree item have children or not.',
  'Expand the item first before checking its children.',
  'Wait for the item with the label to get the `may-have-children` attribute.\n' +
    '@param label Label of the tree item.',
  'Wait for the item with the label to be expanded.\n' +
    '@param label Label of the tree item.',
  'Wait for the item with the label to be collapsed.\n' +
    '@param label Label of the tree item.',
  'Expands a single tree item with the specified label by clicking on its\n' +
    'expand icon.\n' +
    '@param label Label of the tree item we want to expand on.\n' +
    '@param allowEmpty Allow expanding tree item without any children.',
  'Expands a single tree item with the specified type by clicking on its\n' +
    'expand icon.\n' +
    '@param type Type of the tree item we want to expand on.\n' +
    '@param allowEmpty Allow expanding tree item without any children.',
  'Expands a single tree item with the specified full path by clicking on its\n' +
    'expand icon.\n' +
    '@param path Path of the tree item we want to expand on.',
  'Collapses a single tree item with the specified label by clicking on its\n' +
    'expand icon.\n' +
    '@param label Label of the tree item we want to collapse on.',
  'Expands each directory in the breadcrumbs path.\n' +
    '@param breadcrumbsPath Path based in the entry labels like:\n' +
    '/My files/Downloads/photos.\n' +
    '@return Promise fulfilled on success with the selector query of the last\n' +
    'directory expanded.',
  'Expand each directory in the breadcrumb.',
  'Wait for parent element to be displayed.',
  "Only expand if element isn't expanded yet.",
  'Focus the directory tree and navigates using mouse clicks.\n' +
    '@param breadcrumbsPath Path based on the entry labels like:\n' +
    '/My files/Downloads/photos to item that should navigate to.\n' +
    '@param shortcutToPath For shortcuts it navigates to a different breadcrumbs\n' +
    'path, like /My Drive/ShortcutName.\n' +
    '@return the final selector used to click on the desired tree item.',
  'Focus the directory tree.',
  'For "/My Drive", expand the "Google Drive" first.',
  'Expand all parents of the leaf entry.',
  'Navigate to the final entry.',
  'Wait directory to finish scanning its content.',
  'If the search was not closed, wait for it to close.',
  'Wait to navigation to final entry to finish.',
  'Focus the directory tree.',
  'Trigger a keydown event with ArrowUp key to move the focus to the previous\n' +
    'tree item.',
  'Focus the tree first before keyboard event.',
  'Trigger a keydown event with ArrowDown key to move the focus to the next\n' +
    'tree item.',
  'Focus the tree first before keyboard event.',
  'Trigger a keydown event with Enter key to select currently focused item.',
  'Focus the tree first before keyboard event.',
  'Wait for the tree item by its label.\n@param label Label of the tree item.',
  'Wait for the tree item by its label to be lost.\n' +
    '@param label Label of the tree item.',
  'Wait for the tree item by its full path.\n' +
    '@param path Path of the tree item.',
  'Wait for the tree item by its full path to be lost.\n' +
    '@param path Path of the tree item.',
  'Returns the labels for all visible tree items.',
  'Wait for the tree item by its type.\n@param type Type of the tree item.',
  'Wait for the tree item by its type to be lost.\n' +
    '@param type Type of the tree item.',
  'Wait for the placeholder tree item by its type.\n' +
    '@param type Type of the tree item.',
  'Wait for the placeholder tree item by its type to be lost.\n' +
    '@param type Type of the tree item.',
  'Wait for the shortcut tree item by its label.\n' +
    '@param label Label of the tree item.',
  'Wait for the shortcut tree item by its label to be lost.\n' +
    '@param label Label of the tree item.',
  'Wait for the child tree item under a specified parent item by their label.\n' +
    '@param parentLabel Label of the parent item.\n' +
    '@param childLabel Label of the child item.',
  'Wait for the child tree item to be lost under a specified parent item by\n' +
    'its label.\n' +
    '@param parentLabel Label of the parent item.\n' +
    '@param childLabel Label of the child item.',
  'Wait for the group root tree item (e.g. entry list) by its type.\n' +
    '@param type Type of the tree item.',
  'Returns the child items of a parent item specified by its label.\n' +
    '@param parentLabel Label of the parent item.',
  'Wait for the eject button under the tree item by its type.\n' +
    '@param type Type of the tree item.',
  'Wait for the eject button to be lost under the tree item by its type.\n' +
    '@param type Type of the tree item.',
  'Click the eject button under the tree item by its type.\n' +
    '@param type Type of the tree item.',
  'Click the eject button under the tree item by its label.\n' +
    '@param label Label of the tree item.',
  'Wait for the expand icon under the tree item to show by its label.\n' +
    '@param label Label of the tree item.',
  'Wait for the expand icon under the tree item to hide by its label.\n' +
    '@param label Label of the tree item.',
  'Wait for the tree item specified by label to accept drag/drop.\n' +
    '@param label Label of the tree item.',
  'Wait for the tree item specified by label to deny drag/drop.\n' +
    '@param label Label of the tree item.',
  'Drag files specified by `sourceQuery` to the target tree item specified by\n' +
    'the `targetLabel`.\n' +
    '@param sourceQuery Query to specify the source element.\n' +
    '@param targetLabel The drop target tree item label.\n' +
    '@param skipDrop Set true to drag over (hover) the target only, and not send\n' +
    'target drop or source dragend events.',
  'A function is being returned to let the caller finish drop if drop',
  'is skipped above.',
  '@param targetQuery Query to specify the drop target.\n' +
    '@param dragEndQuery Query to specify which element to trigger the dragend\n' +
    'event.\n' +
    '@param dragLeave Set true to send a dragleave event to the target instead\n' +
    'of a drop event.',
  'Use keyboard shortcut to trigger rename for a tree item.\n' +
    '@param label Label of the tree item to trigger rename.',
  'Press rename <Ctrl>-Enter keyboard shortcut on the tree item.',
  'Waits for the rename input to show inside the tree item.\n' +
    '@param label Label of the tree item.',
  'Input the new name to the tree item specified by its label without pressing\n' +
    'Enter to commit.\n' +
    '@param label Label of the tree item.\n' +
    '@param newName The new name.',
  'Check: the renaming text input element should appear.',
  'Enter the new name for the tree item.',
  'Renames the tree item specified by the label to the new name.\n' +
    '@param label Label of the tree item.\n' +
    '@param newName The new name.',
  'Press Enter key to end text input.',
  'Wait for the renaming input element to disappear.',
  'Wait until renaming is complete.',
  'Wait for the tree item specified by label to finish drag/drop.\n' +
    '@param label Label of the tree item.',
  'Select the tree item by its label.\n@param label Label of the tree item.',
  'Select the tree item by its type.\n@param type Type of the tree item.',
  'Select the tree item by its path.\n@param path Full path of the tree item.',
  'Select the group root tree item (e.g. entry list) by its type.\n' +
    '@param type Type of the tree item.',
  'Select the placeholder tree item by its type.\n' +
    '@param type Type of the placeholder tree item.',
  'Select the shortcut tree item by its label.\n' +
    '@param label Label of the tree item.',
  'Show context menu for the tree item by its label.\n' +
    '@param label Label of the tree item.',
  ... 50 more items
]
providers.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Returns provider name of the given testing provider manifest viz., the\n' +
    'the value of the name field in the |manifest| file.\n' +
    '@param manifest Testing provider manifest file name.\n' +
    '@return Testing provider name.',
  'Initializes the provider extension.\n' +
    '@param manifest The manifest name of testing provider extension to launch for\n' +
    'the test case.',
  'Clicks on the "Services" menu button.',
  'Open the gear menu by clicking the gear button.',
  'Wait for providers menu item to appear.',
  'Click the menu item.',
  'Confirms that a provided volume is mounted.',
  'Tests that a provided extension with |manifest| is mountable via the menu\n' +
    'button.\n' +
    '@param multipleMounts Whether multiple mounts are supported by the providing\n' +
    'extension.\n' +
    '@param manifest Name of the manifest file for the providing extension.',
  'Wait for providers menu to appear.',
  'Click to install test provider.',
  'If multipleMounts we display the providers menu and check the provider is',
  'still listed.',
  'If !multipleMounts but isSmbEnabled, we display the provider menu and',
  'check the provider is not listed.',
  'Tests that a provided extension with |manifest| is not available in the\n' +
    "providers menu, but it's mounted automatically.\n" +
    '@param manifest Name of the manifest file for the providing extension.',
  'Open the gear menu by clicking the gear button.',
  'The providers menu item should be hidden if Smb is disabled, since there',
  'are no providers to show.',
  'Since a provider is installed (here isSmbEnabled), we need to test that',
  "'providers-menu' sub-menu does not contain the |manifest| provider.",
  'Open the providers submenu by hovering over the menu item.',
  "Extract 'providers-menu' sub-menu items.",
  'Check the sub-menu do not contain the |manifest| provider.',
  'Tests mounting a single mount point in the button menu.',
  'Tests mounting multiple mount points in the button menu.',
  'Tests mounting a device not present in the button menu.',
  'Tests mounting a file not present in the button menu.',
  'Tests that pressing the eject button on a FSP adds a message to screen\n' +
    'reader.',
  'Click to eject Test (1) provider/volume.',
  'Wait a11y-msg to have some text.',
  'Fetch A11y messages.',
  'Check that opening the file was announced to screen reader.',
  'Tests mounting a file system provider emits only a single UMA when running\n' +
    'from either the SWA or Chrome app.',
  'Setup Files app before loading the File System Provider. When testing the',
  'SWA records only 1 mount event, if the FSP is loaded prior to the window',
  'starting, it will always miss the load event leading to a false positive',
  'test result.',
  'Setup the FSP and wait for the volume to appear in the directory tree.',
  'Assert the histogram for an unknown FSP is incremented by 1.'
]
quick_view.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The tag used to create a safe environment to display the preview.',
  'The JS code used to query the content window for preview.',
  'The name of the UMA emitted to track how Quick View is opened.',
  "The UMA's enumeration values (must be consistent with enums.xml, previously\n" +
    'histograms.xml).',
  'Check the background color for the content inside the quick view is one of\n' +
    'the 2 allowed colors',
  'Dark mode:',
  'Light mode: the preview body backgroundColor should be transparent black.',
  'b/361293031: Accept either value, it was flaking between the values due to',
  'issues outside the Files app.',
  'Waits for Quick View dialog to be open.\n@param appId Files app windowId.',
  'Waits for Quick View dialog to be closed.\n@param appId Files app windowId.',
  'Check: the Quick View dialog should not be shown.',
  'Opens the Quick View dialog on a given file |name|. The file must be\n' +
    'present in the Files app file list.\n' +
    '@param appId Files app windowId.\n' +
    '@param name File name.',
  'Select file |name| in the file list.',
  'Press the space key.',
  'Check: the Quick View dialog should be shown.',
  'Opens the Quick View dialog by right clicking on the file |name| and\n' +
    'using the "Get Info" command from the context menu.\n' +
    '@param appId Files app windowId.\n' +
    '@param name File name.',
  'Right-click the file in the file-list.',
  'Wait because WebUI Menu ignores the following click if it happens in',
  '<200ms from the previous click.',
  'Click the file-list context menu "Get info" command.',
  'Check: the Quick View dialog should be shown.',
  'Opens the Quick View dialog with given file |names|. The files must be\n' +
    'present and check-selected in the Files app file list.\n' +
    '@param appId Files app windowId.\n' +
    '@param names File names.',
  'Get the file-list rows that are check-selected (multi-selected).',
  'Check: the selection should contain the given file names.',
  'Open Quick View via its keyboard shortcut.',
  'Check: the Quick View dialog should be shown.',
  'Mount and select USB.\n@param appId Files app windowId.',
  'Mount a USB volume.',
  'Wait for the USB volume to mount and click to open the USB volume.',
  'Check: the USB files should appear in the file list.',
  'Assuming that Quick View is currently open per openQuickView above, closes\n' +
    'the Quick View dialog.\n' +
    '@param appId Files app windowId.',
  'Click on Quick View to close it.',
  'Check: the Quick View dialog should not be shown.',
  'Assuming that Quick View is currently open per openQuickView above, return\n' +
    'the text shown in the QuickView Metadata Box field |name|. If the optional\n' +
    "|hidden| is 'hidden', the field |name| should not be visible.\n" +
    '@param appId Files app windowId.\n' +
    '@param name QuickView Metadata Box field name.\n' +
    '@param hidden Whether the field name should be visible.\n' +
    '@return text Text value in the field name.',
  '<files-metadata-box> field rendering is async. The field name has been\n' +
    "rendered when its 'metadata' attribute indicates that.",
  'The <files-metadata-box> element resides in the #quick-view shadow DOM\n' +
    'as a child of the #dialog element.',
  'The <files-metadata-entry key="name"> element resides in the shadow DOM\n' +
    'of the <files-metadata-box>.',
  'It has a #value div child in its shadow DOM containing the field value,\n' +
    'but if |hidden| was given, the field should not be visible.',
  'Executes a script in the context of a <preview-tag> element and returns its\n' +
    'output. Returns undefined when ExecuteScriptError is caught.\n' +
    '@param appId App window Id.\n' +
    '@param query Query to the <preview-tag> element (this is\n' +
    'ignored for SWA).\n' +
    '@param statement Javascript statement to be executed within the\n' +
    '<preview-tag>.',
  'Tests opening Quick View on a local downloads file.',
  'Open Files app on Downloads containing ENTRIES.hello.',
  'Open the file in Quick View.',
  'Check the open button is shown.',
  'Tests opening Quick View on a local downloads file in an open file dialog.',
  'Open Files app on Downloads containing ENTRIES.hello.',
  'Open the file in Quick View.',
  "Check the open button is not shown as we're in an open file dialog.",
  'Tests that Quick View opens via the context menu with a single selection.',
  'Open Files app on Downloads containing BASIC_LOCAL_ENTRY_SET.',
  'Select the file in the file list.',
  'Check: clicking the context menu "Get Info" should open Quick View.',
  'Tests that Quick View opens via the context menu when multiple files\n' +
    'are selected (file-list check-select mode).',
  'Open Files app on Downloads containing BASIC_LOCAL_ENTRY_SET.',
  'Ctrl+A to select all files in the file-list.',
  'Check: clicking the context menu "Get Info" should open Quick View.',
  'Tests opening then closing Quick View on a local downloads file.',
  'Open Files app on Downloads containing ENTRIES.hello.',
  'Open the file in Quick View.',
  'Close Quick View.',
  'Tests opening Quick View on a Drive file.',
  'Open Files app on Drive containing ENTRIES.hello.',
  'Open the file in Quick View.',
  'Check: the correct mimeType should be displayed (see crbug.com/1067499',
  'for details on mimeType differences between Drive and local filesystem).',
  'Check: the correct file location should be displayed in Drive.',
  'Tests opening Quick View on a Smbfs file.',
  'Open Files app on Downloads containing ENTRIES.photos.',
  'Populate Smbfs with some files.',
  'Mount Smbfs volume.',
  'Wait for the Smbfs volume to mount and click to open the Smbfs volume.',
  'Open the file in Quick View.',
  'Tests opening Quick View on a USB file.',
  'Open Files app on Downloads containing ENTRIES.photos.',
  'Open a USB file in Quick View.',
  'Tests opening Quick View on a removable partition.',
  'Open Files app on Downloads containing ENTRIES.photos.',
  'Mount USB device containing partitions.',
  'Wait for the USB root to be available.',
  'Wait for 2 removable partitions to appear in the directory tree.',
  'Click to open the first partition.',
  'Check: the USB files should appear in the file list.',
  'Open the file in Quick View.',
  'Tests opening Quick View on an item that was Trashed shows original location\n' +
    'instead of the current file location.',
  'Select hello.txt.',
  'Delete item and wait for it to be removed (no dialog).',
  'Navigate to /Trash and ensure the file is shown.',
  'Open the file in Quick View.',
  'Check: the original location should be shown instead of the actual file',
  'location.',
  'Tests seeing dashes for an empty last_modified for DocumentsProvider.',
  'Add files to the DocumentsProvider volume.',
  'Open Files app.',
  'Wait for the DocumentsProvider volume to mount and then click to open',
  'DocumentsProvider Volume.',
  'Check: the DocumentsProvider files should appear in the file list.',
  'Open a DocumentsProvider file in Quick View.',
  ... 476 more items
]
recents.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Mock files with recently modified dates, be aware the days passed in should',
  'be larger than 3 to prevent file list from showing "Today/Yesterday", which',
  'will break the waitForFiles() function.',
  'Test entry for a recently-modified video file.',
  'Test entry for a recently-modified document file.',
  'Test entries for recent-modified android files.',
  'Special file used with provided volume. Due to the fact that we rely on',
  'ash::file_system_provider::FakeProvidedFileSystem we cannot clone it from',
  'existing entries. Among differences is the targetPath and sizeText that are',
  'set up differently.',
  'Enum for supported recent filter types.',
  'Adds file entries to the Play Files folder and update media view root.',
  "We can't add file entries to Play Files ('android_files') directly,",
  "because they won't be picked up by the fake ARC file system. Instead,",
  'we need to add file entries to the corresponding media view root.',
  'Navigates to Recent folder with specific type and verify the breadcrumb path.\n' +
    '@param appId Files app windowId.\n' +
    '@param type Recent file type.',
  '"All" button is activated by default, no need to click.',
  'Check the corresponding filter button is activated.',
  'Breadcrumb should always be "/Recents" if the flag is on.',
  'Verifies the current folder has the expected entries and checks the delete\n' +
    'button is hidden after selecting these files.\n' +
    '@param appId Files app windowId.\n' +
    '@param expectedEntries Expected file entries.\n' +
    "@param trashButton If the file system doesn't support trash, a delete button\n" +
    'will show instead of a trash button.',
  'Verify Recents contains the expected files - those with an mtime in the',
  'future.',
  "Select all the files and check that the delete button isn't visible.",
  'Check: the file-list should be selected.',
  "Test that the delete button's visibility based on v2 flag.",
  'Opens the Recent folder and checks the expected entries are showing there.\n' +
    '@param appId Files app windowId.\n' +
    '@param expectedEntries Expected file entries, by default `RECENT_ENTRY_SET`\n' +
    'is used.\n' +
    "@param trashButton If the file system doesn't support trash, a delete button\n" +
    'will show instead of a trash button.',
  'Opens the Recent Audio folder and checks the expected entries are showing\n' +
    'there.\n' +
    '@param appId Files app windowId.\n' +
    '@param expectedEntries Expected file entries.\n' +
    "@param trashButton If the file system doesn't support trash, a delete button\n" +
    'will show instead of a trash button.',
  'Opens the Recent Image folder and checks the expected entries are showing\n' +
    'there.\n' +
    '@param appId Files app windowId.\n' +
    '@param expectedEntries Expected file entries.\n' +
    "@param trashButton If the file system doesn't support trash, a delete button\n" +
    'will show instead of a trash button.',
  'Opens the Recent Video folder and checks the expected entries are showing\n' +
    'there.\n' +
    '@param appId Files app windowId.\n' +
    '@param expectedEntries Expected file entries.\n' +
    "@param trashButton If the file system doesn't support trash, a delete button\n" +
    'will show instead of a trash button.',
  'Opens the Recent Document folder and checks the expected entries are showing\n' +
    'there.\n' +
    '@param appId Files app windowId.\n' +
    '@param expectedEntries Expected file entries.\n' +
    "@param trashButton If the file system doesn't support trash, a delete button\n" +
    'will show instead of a trash button.',
  'Verifies the breadcrumb has the expected path.\n' +
    '@param appId Files app windowId.\n' +
    '@param expectedPath Expected breadcrumb path.',
  'Selects a file and right click to show the context menu, then click the\n' +
    'specified context menu item.\n' +
    '@param appId Files app windowId.\n' +
    '@param fileName Name of the file to right click.\n' +
    '@param commandId The command id for the context menu item.',
  'Select the item.',
  'Right-click the selected file.',
  'Click the context menu item with the command id.',
  `Opens given file's containing folder by choosing "Go to file location"\n` +
    'context menu item.\n' +
    '@param appId Files app windowId.\n' +
    '@param fileName Name of the file to open containing folder.',
  'Deletes a given file by choosing "Delete" context menu item.\n' +
    '@param appId Files app windowId.\n' +
    '@param fileName Name of the file to delete.\n' +
    "@param confirmDeletion If the file system doesn't support trash, need to\n" +
    'confirm the deletion.',
  'Click "Delete" on the Delete confirm dialog.',
  'Renames a given file by choosing "Rename" context menu item.\n' +
    '@param appId Files app windowId.\n' +
    '@param fileName Name of the file to rename.\n' +
    '@param newName The new file name.',
  'Wait for the rename input field.',
  'Input the new name.',
  'Press Enter to commit renaming.',
  'Wait until renaming is complete.',
  'Cuts a given file by choosing "Cut" context menu item and paste the file to\n' +
    'the new folder.\n' +
    '@param appId Files app windowId.\n' +
    '@param fileName Name of the file to cut.\n' +
    '@param newFolder Full breadcrumb path for the new folder to paste.',
  'Go to the new folder to paste.',
  'Wait for the operation to be completed.',
  'Waits for the empty folder element to show and assert the content to match\n' +
    'the expected message.\n' +
    '@param appId Files app windowId.\n' +
    '@param expectedMessage The expected empty folder message',
  'Use repeatUntil() here because when we switch between different filters,',
  'the message changes but the element itself will always show there.',
  'Tests that file entries populated in the Downloads folder recently will be\n' +
    'displayed in Recent folder.',
  'Populate downloads.',
  'Verifies file list in Recents.',
  'Tests that selecting "Go to file location" for a file navigates to',
  'Downloads since the file in Recents is from Downloads.',
  'Tests that file entries populated in My Drive folder recently will be\n' +
    'displayed in Recent folder.',
  'Populate drive.',
  'Verifies file list in Recents.',
  'Tests that selecting "Go to file location" for a file navigates to',
  'My Drive since the file in Recents is from Google Drive.',
  'Tests that file entries populated in Play Files folder recently will be\n' +
    'displayed in Recent folder.',
  'Populate Play Files.',
  'Verifies file list in Recents. Audio files from Play Files folder are',
  'not supported in Recents.',
  'Tests what happens if listing play files is interspersed with plain listing\n' +
    'of another directory.',
  'Populate Play Files.',
  'Verify that the Recent view is correct.',
  'Rapidly switch between listing Downloads and accessing them via the Recent',
  'view. We leave Downloads empty to make switching faster. The choice of 10',
  'switches is somewhat arbitrary. The main thing we are testing is that',
  'searches triggered by switching to Recent, even if not finished, do not',
  'cause a crash.',
  'Tests that file entries populated in the My Files folder recently will be\n' +
    'displayed in the Recent folder.',
  'Populate My Files.',
  'Verify file list in Recents.',
  "Tests that file entries populated in Crostini folder recently won't be\n" +
    'displayed in Recent folder when Crostini has not been mounted.',
  'Add entries to crostini volume, but do not mount.',
  'The crostini entries should not show up in recents.',
  'Tests that file entries populated in Downloads folder and Crostini folder\n' +
    'recently will be displayed in Recent folder when Crostini has been mounted.',
  'Mount crostini and both downloads and crostini entries will be in recents.',
  'Tests that file entries populated in Downloads folder and My Drive folder\n' +
    'recently will be displayed in Recent folder.',
  'Populate both downloads and drive with disjoint sets of files.',
  'Tests that file entries populated in Downloads, Drive and Play Files folder\n' +
    'recently will be displayed in Recent folder.',
  'Populate downloads, drive and play files.',
  'Tests that the same file entries populated in Downloads folder and My Drive\n' +
    'folder recently will be displayed in Recent folder twice when the file\n' +
    'entries are the same.',
  'Populate both downloads and drive with overlapping sets of files.',
  'Tests that the nested file entries populated in Downloads folder recently\n' +
    'will be displayed in Recent folder.',
  'Populate downloads with nested folder structure. |desktop| is added to',
  'ensure Recents has different files to Downloads/A/B/C',
  'Verifies file list in Recents.',
  'Tests that selecting "Go to file location" for a file navigates to',
  'Downloads/A/B/C since the file in Recents is from Downloads/A/B/C.',
  'Check: The directory should be highlighted in the directory tree.',
  'Tests that the audio file entries populated in Downloads folder recently\n' +
    'will be displayed in Recent Audio folder.',
  'ENTRIES.beautiful is recently-modified and has .ogg file extension.',
  'Tests that if the audio file entries without MIME type are being populated in\n' +
    'both Downloads folder and My Drive folder, only the ones from Downloads\n' +
    'folder will be displayed in Recent Audio folder.',
  'TODO(b:267515423): Fix MIME type for Entries.beautiful.',
  'ENTRIES.beautiful in BASIC_DRIVE_ENTRY_SET does not have mime type.',
  ... 150 more items
]
restore_prefs.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests restoring the sorting order.',
  'Set up Files app.',
  'Sort by name.',
  'Check the sorted style of the header.',
  'Sort by size (in descending order).',
  'Check the sorted style of the header.',
  'Check the sorted files.',
  'Open another window, where the sorted column should be restored.',
  'Check the sorted style of the header.',
  'Check the sorted files.',
  'Tests restoring the current view (the file list or the thumbnail grid).',
  'Set up Files app.',
  'Check the initial view.',
  'Change the current view.',
  'Check the new current view.',
  'Open another window, where the current view is restored.',
  'Check the current view.'
]
search.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@param appId The ID that identifies the files app.\n' +
    '@param type The search option type (location, recency, type).\n' +
    "@return The text of the element with 'selected-option' ID.",
  'Force refresh of the element by showing the dropdown menu.',
  'Fetch the current selected item.',
  'Tests searching inside Downloads with results.',
  'Open Files app on Downloads.',
  'Search for all files with "hello" in their name.',
  'Wait file list to display the search result.',
  'Check that a11y message for results has been issued.',
  'Tests searching inside Downloads without results.',
  'Open Files app on Downloads.',
  'Search for name not present among basic entry set.',
  'Wait file list to display no results.',
  'Check that a11y message for no results has been issued.',
  'Tests that clearing the search box announces the A11y.',
  'Perform a normal search, to be able to clear the search box.',
  'Click on the clear search button.',
  'Wait for the search box to fully collapse.',
  'Wait for file list to display all files.',
  'Check that a11y message for clearing the search term has been issued.',
  'Tests that clearing the search box with keydown crbug.com/910068.',
  'Perform a normal search, to be able to clear the search box.',
  'Wait for clear button.',
  'Send a enter key to the clear button.',
  'Check: Search input field is empty.',
  'Wait until the search button get the focus.',
  "Use repeatUntil() here because the focus won't shift to search button",
  'until the CSS animation is finished.',
  'Tests that the search text entry box stays expanded until the end of user\n' +
    'interaction.',
  'Open Files app on Downloads.',
  'Select an entry in the file list.',
  'Click the toolbar search button.',
  'Verify the toolbar search text entry box is enabled.',
  "Send a 'mousedown' to the toolbar 'delete' button.",
  'Verify the toolbar search text entry is still enabled.',
  "Send a 'mouseup' to the toolbar 'delete' button.",
  'Verify the toolbar search text entry is still enabled.',
  'Tests that the search box collapses when empty and Tab out of the box.',
  'Open Files app on Downloads.',
  'Search box should start collapsed.',
  'Click the toolbar search button.',
  'Wait for the search box to expand.',
  'Verify the search input has focus.',
  'Send Tab key to focus the next element.',
  'Check: the search box should collapse.',
  'Tests that clicking the search button expands and collapses the search box.',
  'Open Files app on Downloads.',
  'Search box should start collapsed.',
  "Measure the width of the search box when it's collapsed.",
  'Click the toolbar search button.',
  'Wait for the search box to expand.',
  'Check: The search box width should have increased.',
  'Click the toolbar search button again.',
  'Check: the search box should collapse.',
  'Check: the search box width should decrease.',
  'Tests that Files app performs a search at app start up when\n' +
    'LaunchParam.searchQuery is specified.',
  "Open Files app with LaunchParam.searchQuery='gdoc'.",
  'Check: search box should be filled with the query.',
  'Check: "My Drive" directory should be selected because it is the sole',
  'directory that contains query-matched files (*.gdoc).',
  'Check: Query-matched files should be shown in the files list.',
  'Checks that changing location options correctly filters search results.',
  'Open Files app on Downloads.',
  'Modify the basic entry set by adding nested directories and',
  'a copy of the hello entry.',
  'Start in the nested directory, as the default search location',
  'is THIS_FOLDER. Expect to find one hello file. Then search on',
  'THIS_CHROMEBOOK and expect to find two.',
  'Search for all files with "hello" in their name.',
  'Verify that the search options are visible.',
  'Expect only the nested hello to be found.',
  'Click the second button, which is My files.',
  'Expect all hello files to be found.',
  'Checks that changing recency options correctly filters search results.',
  'Open Files app on Downloads.',
  'Modify the basic entry set by adding another hello file with',
  "a recent date. We cannot make it today's date as those dates",
  "are rendered with 'Today' string rather than actual date string.",
  "Unfortunately, today's files use custom date string. Make it so.",
  'Search for all files with "hello" in their name.',
  'Expect two files, with no recency restrictions.',
  'Click the fourth button, which is "Last week" option.',
  'Expect only the recent hello file to be found.',
  'Checks that when searching Google Drive we correctly match on name, not on\n' +
    'contents.',
  'Checks that changing recency options correctly filters search results on\n' +
    'drive.',
  'Open Files app on Downloads.',
  'Modify the basic entry set by adding another hello file with',
  "a recent date. We cannot make it today's date as those dates",
  "so it must be accessed with ['hello'].",
  'Navigate to Google Drive. We are searching "local" directory, which limits',
  'search results to Drive.',
  'Search for all files with "hello" in their name.',
  'Expect two files, with no recency restrictions.',
  'Click the fourth button, which is "Last week" option.',
  'Expect only the recent hello file to be found.',
  'Checks that changing file types options correctly filters local\n' +
    'search results.',
  'Open Files app on Downloads.',
  'Search for all files with "hello" in their name.',
  ... 143 more items
]
share.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Verify that sharing options for an encrypted files are limited to nearby\n' +
    "sharing (which only uses URLs and doesn't need to access file contents) and\n" +
    'drive-based sharing (which is managing permissions in Google Drive and also\n' +
    "doesn't need to access the contents). Other options, such as “Copy”, should\n" +
    'be removed.'
]
sort_columns.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests the order is sorted correctly for each of the columns.',
  "Click the 'Name' column header and check the list.",
  'Fetch A11y messages.',
  'Check: sort-button has aria-haspopup set to true',
  "Click the 'Name' again and check the list.",
  'Fetch A11y messages.',
  "Click the 'Size' column header and check the list.",
  'Fetch A11y messages.',
  "'Size' should be checked in the sort menu.",
  "Click the 'Size' column header again and check the list.",
  'Fetch A11y messages.',
  "'Size' should still be checked in the sort menu, even when the sort order",
  'is reversed.',
  "Click the 'Type' column header and check the list.",
  'Fetch A11y messages.',
  "Click the 'Type' column header again and check the list.",
  'Fetch A11y messages.',
  "'Type' should still be checked in the sort menu, even when the sort order",
  'is reversed.',
  "Click the 'Date modified' column header and check the list.",
  'Fetch A11y messages.',
  "Click the 'Date modified' column header again and check the list.",
  'Fetch A11y messages.',
  "'Date modified' should still be checked in the sort menu.",
  "Click 'Name' in the sort menu and check the result.",
  'Fetch A11y messages.',
  "Click the 'Name' again to reverse the order (to descending order).",
  'Fetch A11y messages.',
  "Click 'Name' in the sort menu again should get the order back to",
  'ascending order.',
  'Fetch A11y messages.'
]
tab_index.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The id attribute of the dismiss button in the educational banner.',
  'Tests the focus behavior of the search box.',
  'Open Files app on Drive.',
  'Check that the file list has the focus on launch.',
  'Check that the search UI is in the collapsed state (hidden from the user).',
  'Press the Ctrl-F key.',
  'Wait for the search box to fully open. Only once the search wrapper',
  'is fully expanded the collapsed attribute is removed.',
  'Check that the search box has the focus.',
  'Press the Esc key.',
  'Check that the focus moves to the next button: #view-button.',
  'Tests the tab focus behavior of the Files app when no file is selected.',
  'Open Files app on Drive.',
  'Check that the file list has the focus on launch.',
  'Send Tab key events to cycle through the tabbable elements.',
  'format: directory-tree#<tree item label>',
  'Tests the tab focus behavior of the Files app when no file is selected in\n' +
    'Downloads directory.',
  'Open Files app on Downloads.',
  'Check that the file list has the focus on launch.',
  'Send Tab key events to cycle through the tabbable elements.',
  'format: directory-tree#<tree item label>',
  'Tests the tab focus behavior of the Files app when a directory is selected.',
  'Open Files app on Drive.',
  'Check that the file list has the focus on launch.',
  'Fake chrome.fileManagerPrivate.sharesheetHasTargets to return true.',
  "Select the directory named 'photos'.",
  'Wait for share button to to be visible and enabled.',
  'Wait for delete button to to be visible and enabled.',
  'Send Tab key events to cycle through the tabable elements.',
  'format: directory-tree#<tree item label>',
  'Remove fakes.',
  'Tests the tab focus in the dialog and closes the dialog.\n' +
    '@param dialogParams Dialog parameters to be passed to\n' +
    'chrome.fileSystem.chooseEntry.\n' +
    '@param volumeType Volume icon type passed to the\n' +
    'remoteCall.openAndWaitForClosingDialog function.\n' +
    '@param expectedSet Expected set of the entries.\n' +
    '@param initialize Initialization before test runs. The window ID is passed as\n' +
    'an argument. If null, do nothing as initialization.\n' +
    '@param initialElements Selectors of the elements which shows the Files app is\n' +
    'ready. After all the elements show up, the tabfocus tests starts. Array\n' +
    'with the IDs of the element with the corresponding order of expected\n' +
    'tab-indexes.',
  'Wait for Files app to finish loading.',
  'Wait for the initial element.',
  'Checks tabfocus.',
  'Closes the window by pressing Escape.',
  'Tests the tab focus behavior of Open Dialog (Downloads).',
  'format: directory-tree#<tree item label>',
  "first breadcrumb  'first',",
  'Tests the tab focus behavior of Open Dialog (Drive).',
  'format: directory-tree#<tree item label>',
  'Tests the tab focus behavior of Save File Dialog (Downloads).',
  'format: directory-tree#<tree item label>',
  "first breadcrumb  'first',",
  'Tests the tab focus behavior of Save File Dialog (Drive).',
  'format: directory-tree#<tree item label>'
]
tasks.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Fake tasks for a local volume opening in browser.',
  'Fake tasks for a PDF file opening in browser.',
  'Fake tasks for a drive volume.',
  'Sets up task tests.\n' +
    '@param rootPath Root path.\n' +
    '@param fakeTasks Fake tasks.',
  'Tests executing the default task when there is only one task.\n' +
    '@param appId Window ID.\n' +
    '@param descriptor Task descriptor.',
  'Select file.',
  'Double-click the file.',
  'Wait until the task is executed.',
  'Tests to specify default task via the default task dialog.\n' +
    '@param appId Window ID.\n' +
    '@param descriptor Task descriptor of the task expected to be newly specified\n' +
    'as default.\n' +
    '@return Promise to be fulfilled/rejected depends on the test result.',
  'Prepare expected labels.',
  'Select file.',
  'Click the change default menu.',
  'Wait for the list of menu item is added as expected.',
  'Obtains menu items.',
  'Compare the contents of items.',
  'Click the non default item.',
  'Wait for the dialog hidden, and the task is executed.',
  'Execute the new default task. Click on "Open ▼" button.',
  'Wait for dropdown menu to show.',
  'Click on first menu item.',
  'Wait dropdown menu to hide.',
  'Check the executed tasks.',
  'Tests that the Change Default Task dialog has a scrollable list.',
  'Override tasks for the test.',
  'Select file.',
  'Click the change default task menu.',
  'Wait for Default Task Dialog with the scrollable list CSS class.',
  'Check: The dialog should start with bottom-shadow CSS class.',
  'Scroll down the list in the dialog.',
  'Check: CSS class bottom-shadow should be removed.',
  'When default task is not set, executeDefaultInternal_ in file_tasks.js',
  'tries to show it in a browser tab. By checking the view-in-browser task is',
  'executed, we check that default task is not set in this situation.',
  '',
  'See: src/ui/file_manager/file_manager/foreground/js/file_tasks.js&l=404',
  'Override tasks for the test.',
  'Select file and ensure action bar open is shown.',
  'Select dir and ensure action bar open is hidden, but context menu is shown.',
  'Use different tasks for dir.',
  "Click 'Open with'.",
  'Ensure apps are shown.',
  'Double-click the file.',
  'Wait until the task is executed.',
  'Reset the overridden tasks.',
  'Click on the currently focused tree item to reset the file list selection.',
  'Double click on a different file.',
  'Check the tasks again.'
]
test_data.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Extension ID of the Files app.',
  'App ID of Files app SWA.',
  'Base URL of Files app SWA.',
  'Basic entry set for the local volume.',
  'Expected files shown in Downloads with hidden enabled',
  'Basic entry set for the drive volume that only includes read-write entries\n' +
    '(no read-only or similar entries).',
  'Expected files shown in Drive with hidden enabled',
  'Expected files shown in Drive with Google Docs disabled',
  'Basic entry set for the local crostini volume.',
  'Basic entry set for the local volume with a ZIP archive.',
  'More complex entry set for the local volume with multiple ZIP archives.',
  'More complex entry set for Drive that includes entries with varying\n' +
    'permissions (such as read-only entries).',
  'More complex entry set for DocumentsProvider that includes entries with\n' +
    'arying permissions (such as read-only entries).',
  'Nested entry set (directories inside each other).',
  'Expected list of preset entries in fake test volumes. This should be in sync\n' +
    'with FakeTestVolume::PrepareTestEntries in the test harness.',
  `Expected files shown in "Recent". Directories (e.g. 'photos') are not in this\n` +
    'list as they are not expected in "Recent".',
  'Expected files shown in "Offline", which should have the files\n' +
    '"available offline". Google Documents, Google Spreadsheets, and the files\n' +
    'cached locally are "available offline".',
  'Expected files shown in "Shared with me", which should be the entries labeled\n' +
    'with "shared-with-me".',
  'Entry set for Drive that includes team drives of various permissions and\n' +
    'nested files with various permissions.\n' +
    'TODO(sashab): Add support for capabilities of Shared Drive roots.',
  'Entry set for Drive that includes Computers, including nested computers with\n' +
    'files and nested "USB and External Devices" with nested devices.',
  'Basic entry set for the android volume.',
  'Expected files shown in Android with hidden enabled',
  'Entry set for modified times.',
  'Fake task.',
  '@param isDefault Whether the task is default or not.\n' +
    '@param descriptor Task descriptor.\n' +
    '@param title Title of the task.\n' +
    '@param isGenericFileHandler Whether the task is a generic file handler.\n' +
    '@param isDlpBlocked Whether the task is blocked by DLP.',
  'Fake tasks for a local volume.'
]
toolbar.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Tests that the Delete menu item is disabled if no entry is selected.',
  'Right click the list without selecting an entry.',
  'Wait until the context menu is shown.',
  'Assert the menu delete command is disabled.',
  'Tests that the toolbar Delete button opens the delete confirm dialog and\n' +
    'that the dialog cancel button has the focus by default.',
  'Open Files app.',
  'Select My Desktop Background.png',
  'Click the toolbar Delete button.',
  'Check: the delete confirm dialog should appear.',
  "Check: the dialog 'Cancel' button should be focused by default.",
  'Tests that the toolbar Delete button keeps focus after the delete confirm\n' +
    'dialog is closed.',
  'Open Files app.',
  'USB delete never uses trash and always shows the delete dialog.',
  'Mount a USB volume.',
  'Wait for the USB volume to mount and click to open the USB volume.',
  'Check: the USB files should appear in the file list.',
  'Select hello.txt',
  'Click the toolbar Delete button.',
  'Check: the Delete button should lose focus.',
  'Check: the delete confirm dialog should appear.',
  "Check: the dialog 'Cancel' button should be focused by default.",
  "Click the dialog 'Cancel' button.",
  'Check: the toolbar Delete button should be focused.',
  'Tests deleting an entry using the toolbar.',
  'Open Files app.',
  'Confirm entries in the directory before the deletion.',
  'Select My Desktop Background.png',
  'Click move to trash button in the toolbar.',
  'Confirm the file is removed.',
  'Tests that refresh button hides in selection mode.\n' +
    'Non-watchable volumes (other than Recent views) display the refresh\n' +
    'button so users can refresh the file list content. However this\n' +
    'button should be hidden when entering the selection mode.\n' +
    'crbug.com/978383',
  'Open files app.',
  'Add files to the DocumentsProvider volume (which is non-watchable)',
  'Wait for the DocumentsProvider volume to mount.',
  'Check that refresh button is visible.',
  'Ctrl+A to enter selection mode.',
  'Check that the button should be hidden.',
  'Tests that refresh button is not shown when the Recent view is selected.',
  'Open files app.',
  'Navigate to Recent.',
  'Check that the button should be hidden.',
  'Tests that refresh button is shown for non-watchable volumes.',
  'Open files app.',
  'Add files to the DocumentsProvider volume (which is non-watchable)',
  'Wait for the DocumentsProvider volume to mount.',
  'Check that refresh button is visible.',
  'Tests that refresh button is hidden for watchable volumes.',
  'Open Files app on local Downloads.',
  'It should start in Downloads.',
  'Check that the button should be hidden.',
  'Tests that command Alt+A focus the toolbar.',
  'Open files app.',
  'Press Alt+A in the File List.',
  'Check that a menu-button should be focused.',
  'Tests that the menu drop down follows the button if the button moves. This\n' +
    'happens when the search box is expanded and then collapsed.',
  'Open Files app on Downloads.',
  'Override the tasks so the "Open" button becomes a dropdown button.',
  'Select an entry in the file list.',
  'Click the toolbar search button.',
  'Wait for the search box to expand.',
  'Click the toolbar "Open" dropdown button.',
  'Wait for the search box to collapse.',
  'Check that the dropdown menu and "Open" button are aligned.',
  'Tests that the sharesheet button is enabled and executable.',
  'Fake chrome.fileManagerPrivate.sharesheetHasTargets to return true.',
  'Fake chrome.fileManagerPrivate.invokeSharesheet.',
  'Select an entry in the file list.',
  'Check invoke sharesheet is called.',
  'Remove fakes.',
  'Tests that the sharesheet command in context menu is enabled and executable.',
  'Fake chrome.fileManagerPrivate.sharesheetHasTargets to return true.',
  'Fake chrome.fileManagerPrivate.invokeSharesheet.',
  'Select an entry in the file list.',
  'Wait until the context menu is shown.',
  'Assert the menu sharesheet command is not hidden.',
  'Check invoke sharesheet is called.',
  'Remove fakes.',
  'Tests that the sharesheet item is hidden if no entry is selected.',
  'Fake chrome.fileManagerPrivate.sharesheetHasTargets to return true.',
  'Right click the list without selecting an entry.',
  'Wait until the context menu is shown.',
  'Assert the menu sharesheet command is disabled.',
  'Remove fakes.',
  'Tests that the cloud icon does not appear if bulk pinning is disabled.',
  'Tests that the cloud icon does not appear if the bulk pinning preference is\n' +
    'disabled and the supplied Stage does not have a UI state in the progress\n' +
    'panel.',
  'Tests that the cloud icon should only show when the bulk pinning is in\n' +
    'progress.',
  'Mock the free space returned by spaced to be 4 GB, the test files',
  'initialized on the Drive root are 92 KB so well below the 1GB space',
  'requirement.',
  'Enable the bulk pinning preference and assert the cloud button is no longer',
  'hidden.',
  'Tests that the cloud icon should show when there is not enough disk space\n' +
    'available to pin.',
  'Mock the free space available as 100 MB, this will trigger the',
  '`NotEnoughSpace` stage for bulk pinning.',
  'Enable the bulk pinning preference and even though the end state is an',
  'error, there is a UI state to show so the toolbar should still be visible.',
  'Tests that the cloud icon should not show if an error state has been\n' +
    'returned (in this case `CannotGetFreeSpace`).',
  'Mock the free space returned by spaced to be 4 GB.',
  ... 51 more items
]
transfer.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Info for the source or destination of a transfer.',
  'The volume type (e.g. downloads, drive, drive_recent,\n' +
    'drive_shared_with_me, drive_offline) or team drive name.',
  'Expected initial contents in the volume.',
  'Info for the transfer operation.',
  'The file to copy or move. Must be in the source location.',
  'The source location.',
  'The destination location.',
  'The expected content of the transfer dialog, or undefined if no dialog is\n' +
    'expected.',
  'The expected label of the “ok” button on the dialog, if the dialog is\n' +
    'expected.',
  'True if this transfer is for a move operation, false for a copy operation.',
  'Whether the test is expected to fail, i.e. transferring to a folder without\n' +
    'correct permissions.',
  'Test function to copy from the specified source to the specified destination.\n' +
    '@param transferInfo Options for the transfer.',
  'Open files app.',
  'Expand Drive root if either src or dst is within Drive.',
  'Select + expand + wait for its content.',
  'Select the source folder.',
  'Wait for the expected files to appear in the file list.',
  'Focus the file list.',
  'Select the source file.',
  'Copy the file.',
  'Select the destination folder.',
  'Wait for the expected files to appear in the file list.',
  'Paste the file.',
  "If we're expecting a confirmation dialog, confirm that it is shown.",
  'Check that the dialog contains required buttons.',
  'Press OK button.',
  'Wait for the file list to change, if the test is expected to pass.',
  'If we expected the transfer to succeed, add the pasted file to the list',
  'of expected rows.',
  'Check if we need to add (1) to the filename, in the case of a',
  'duplicate file.',
  "Replace the last '.' in filename with ' (1).'.",
  "e.g. 'my.note.txt' -> 'my.note (1).txt'",
  'Check the last contents of file list.',
  'A list of transfer locations, for use with transferBetweenVolumes.',
  'Tests copying from Drive to Downloads.',
  'Tests copying an office file from Drive to Downloads.',
  'Tests moving files from MyFiles/Downloads to MyFiles crbug.com/925175.',
  'Tests copying files from MyFiles/Downloads to MyFiles crbug.com/925175.',
  'Tests copying from Downloads to Drive.',
  'Tests copying from Drive "Shared with me" to Downloads.',
  'Tests copying from Drive "Shared with me" to Drive.',
  'Tests copying from Downloads to a shared folder on Drive.',
  'Tests moving from Downloads to a shared folder on Drive.',
  'Tests copying from a shared folder on Drive to Downloads.',
  'Tests copying from Drive offline to Downloads.',
  'Tests copying from Drive offline to Drive.',
  'Tests copying from a Team Drive to Drive.',
  'Tests copying from Drive to a Team Drive.',
  'Tests copying from a Team Drive to Downloads.',
  'Tests that a hosted file cannot be transferred from a Team Drive to a local\n' +
    'drive (e.g. Downloads). Hosted documents only make sense in the context of\n' +
    'Drive.',
  'Tests copying from Downloads to a Team Drive.',
  'Tests copying between Team Drives.',
  'Tests that moving a file to its current location is a no-op.',
  'Check: No feedback panel items.',
  'Tests that the root html element .drag-drop-active class appears when drag\n' +
    'drop operations are active, and is removed when the operations complete.',
  'Open files app.',
  'The drag has to start in the file list column "name" text, otherwise it',
  'starts a drag-selection instead of a drag operation.',
  'Select the source file.',
  'Wait for the directory tree target.',
  'Check: the html element should not have drag-drop-active class.',
  'Drag the source and hover it over the target.',
  'Check: the html element should have drag-drop-active class.',
  'Send a dragleave event to the target to end drag-drop operations.',
  'Check: the html element should not have drag-drop-active class.',
  'Tests that the root html element .drag-drop-active class appears when drag\n' +
    'drop operations are active, and is removed when the operations complete.',
  'Open files app.',
  'Expand Downloads to display "photos" folder in the directory tree.',
  'The drag has to start in the file list column "name" text, otherwise it',
  'starts a drag-selection instead of a drag operation.',
  'Select the source file.',
  'Wait for the directory tree target.',
  'Check: the html element should not have drag-drop-active class.',
  'Drag the source and hover it over the target.',
  'Check: the html element should have drag-drop-active class.',
  'Send a drop event to the target to end drag-drop operations.',
  'Check: the html element should not have drag-drop-active class.',
  'Tests that dragging a file over a directory tree item that can accept the\n' +
    "drop changes the class of that tree item to 'accepts'.",
  'Open files app.',
  'The drag has to start in the file list column "name" text, otherwise it',
  'starts a drag-selection instead of a drag operation.',
  'Select the source file.',
  'Wait for the directory tree target.',
  'Drag the source and hover it over the target.',
  'Check: drag hovering should navigate the file list.',
  'Check: the target should have accepts class and should not have denies',
  'class.',
  'Send a dragleave event to the target to end drag-drop operations.',
  'Check: the target should not have accepts class and should not have denies',
  'class.',
  'Tests that dragging a file over a directory tree item that cannot accept\n' +
    "the drop changes the class of that tree item to 'denies'.",
  'Open files app.',
  'The drag has to start in the file list column "name" text, otherwise it',
  'starts a drag-selection instead of a drag operation.',
  'Select the source file.',
  'Wait for the directory tree target.',
  ... 139 more items
]
trash.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Clicks the enabled and visible delete button and ensures the move to trash\n' +
    'button is hidden.',
  'Confirm the deletion happens and assert the dialog has the correct text.\n' +
    '@param okText expected OK text',
  'Check: the delete confirm dialog should appear.',
  "Check: the dialog 'Cancel' button should be focused by default.",
  "Click the delete confirm dialog 'Delete' button.",
  'Wait for completion of file deletion.',
  'Clicks the delete button and confirms the deletion.',
  'Delete files in MyFiles and ensure they are moved to /.Trash.\n' +
    'Then delete items from /.Trash/files and /.Trash/info, then delete /.Trash.',
  'Select hello.txt.',
  'Delete item and wait for it to be removed (no dialog).',
  'Enable hidden files to be shown.',
  'Navigate to /My files/Downloads/.Trash/files.',
  'Select hello.txt.',
  'Delete selected item.',
  'Navigate to /My files/Downloads/.Trash/info.',
  'Select hello.txt.trashinfo.',
  'Delete selected item.',
  'Wait for completion of file deletion.',
  'Navigate to /My files/Downloads.',
  'Select .Trash.',
  'Delete selected item.',
  'Wait for completion of file deletion.',
  'Delete photos dir (no dialog),',
  'Wait for photos to be removed, and .Trash to be recreated.',
  'Selects a file and a folder at the same time then deletes both.',
  'Select all (both the file and the folder).',
  'Delete both entries.',
  'Wait for both entries to be removed.',
  'Selects a non-empty folder and deletes it.',
  'Build folder structure nested-folder0/nested-folder1.',
  'Open files app to a Downloads folder containing nested-folder0.',
  'Select the folder.',
  'Delete the folder.',
  'Wait for the folder to be removed.',
  'Permanently delete files in Downloads.',
  'Select hello.txt.',
  'Send Shift+Delete to permanently delete, shows delete confirm dialog.',
  'Confirm the permanent deletion of the "hello.txt" file.',
  'Files send to the Trash from ~/MyFiles should be able to be deleted once they\n' +
    'are in Trash.',
  'Select hello.txt.',
  'Cut the file "hello.txt" in preparation to move to ~/MyFiles.',
  'Paste the file.',
  'Select hello.txt.',
  'Delete item and wait for it to be removed (no dialog).',
  'Navigate to /Trash and ensure the file is shown.',
  'Delete selected item.',
  "Delete files then restore via progress center panel button 'Undo'.",
  'Select hello.txt.',
  'Delete item and wait for it to be removed (no dialog).',
  'Wait for the a success progress panel item to appear.',
  'Press the "Undo"" button on the success feedback panel.',
  'Wait for file to reappear in list.',
  'Delete files then restore via Trash file context menu.',
  'Select hello.txt.',
  'Delete item and wait for it to be removed (no dialog).',
  'Navigate to /Trash and ensure the file is shown.',
  'Right-click the selected file to validate context menu.',
  "Check that 'Restore from Trash' and 'Delete' are shown.",
  'Restore item.',
  'Wait for completion of file restore.',
  'Navigate to /My files/Downloads and ensure the file is shown.',
  'Delete files then restore via keyboard shortcut.',
  'Select hello.txt.',
  'Delete item and wait for it to be removed (no dialog).',
  'Navigate to /Trash.',
  'Select file.',
  "Press 'Delete' key.",
  'Wait for completion of file restore.',
  'Navigate to /My files/Downloads and ensure the file is shown.',
  'Delete files (move them into trash) then empty trash using the banner.',
  'Select hello.txt.',
  'Delete item and wait for it to be removed (no dialog).',
  'Navigate to /Trash and ensure the file is shown.',
  'SimulateUiClick ensures that the focus gets updated, which resets',
  'canExecute.',
  'Click the empty trash button. SimulateUiClick ensures that the focus is set',
  'to the empty trash button before bringing up the confirmation dialog.',
  'Cancel delete.',
  'Wait for the dialog to be hidden.',
  'Check: the file is still present.',
  'Empty trash and confirm delete (dialog shown).',
  'Wait for the dialog to be shown again.',
  'Confirm the permanent deletion.',
  'Wait for the dialog to be hidden.',
  'Wait for completion of file deletion.',
  'Delete files (move them into trash) then empty trash using shortcut.',
  'Select hello.txt.',
  'Delete item and wait for it to be removed (no dialog).',
  'Navigate to /Trash and ensure the file is shown.',
  'Press Ctrl+Shift+Delete key.',
  'Confirm dialog.',
  'Wait for completion of file deletion.',
  'Delete files (move them into trash) then permanently delete.',
  'Select hello.txt.',
  'Delete item and wait for it to be removed (no dialog).',
  'Navigate to /Trash and ensure the file is shown.',
  'Delete selected item.',
  ... 194 more items
]
traverse.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Test utility for traverse tests.\n@param path Root path to be traversed.',
  'Open Files app. Do not add initial files.',
  'Check the initial view.',
  'Open the directory',
  'Check the contents of current directory.',
  'Open the directory',
  'Check the contents of current directory.',
  'Tests to traverse local directories.',
  'Tests to traverse drive directories.'
]
zip_files.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The name of the UMA to track the zip creation time.',
  'The name of the UMA to track extract archive status.',
  'Returns the expected file list row entries after opening (mounting) the\n' +
    'ENTRIES.zipArchive file list entry.',
  'Tests ZIP mounting from Downloads.',
  'Open Files app on Downloads containing a zip file.',
  'Select the zip file.',
  'Press the Enter key.',
  'Check: the zip file content should be shown (unzip).',
  "Tests that Files app's ZIP mounting notifies FileTasks when mounted.",
  'Open Files app on Downloads containing a zip file.',
  'Open the zip file.',
  'Wait for the zip archive to mount.',
  'Tests ZIP mounting from Google Drive.',
  'Open Files app on Drive containing a zip file.',
  'Select the zip file.',
  'Press the Enter key.',
  'Check: the zip file content should be shown (unzip).',
  'Tests ZIP mounting from a removable USB volume.',
  'Open Files app on Drive.',
  'Mount empty USB volume in the Drive window.',
  'Wait for the USB mount and click to open the USB volume.',
  'Add zip file to the USB volume.',
  'Verify the USB file list.',
  'Select the zip file.',
  'Press the Enter key.',
  'Check: the zip file content should be shown (unzip).',
  "Returns the expected file list rows after invoking the 'Zip selection' menu\n" +
    'command on the ENTRIES.photos file list item.',
  'Tests creating a ZIP file on Downloads.',
  'Open Files app on Downloads containing ENTRIES.photos.',
  'Select the file.',
  'Right-click the selected file.',
  'Check: the context menu should appear.',
  "Click the 'Zip selection' menu command.",
  'Check: a zip file should be created.',
  'Check: a zip time histogram value should have been recorded.',
  'Tests creating a ZIP file on Drive.',
  'Open Files app on Drive containing ENTRIES.photos.',
  'Select the file.',
  'Right-click the selected file.',
  'Check: the context menu should appear.',
  "Click the 'Zip selection' menu command.",
  'Check: a zip file should be created.',
  'Check: a zip time histogram value should have been recorded.',
  'Tests creating a ZIP file containing an Office file on Drive.',
  'Open Files app on Drive containing ENTRIES.photos and ENTRIES.docxFile.',
  'Select the files.',
  'Right-click the selected file.',
  'Check: the context menu should appear.',
  "Click the 'Zip selection' menu command.",
  'Check: a zip file should be created.',
  'Check: a zip time histogram value should have been recorded.',
  'Tests that creating a ZIP file containing an encrypted file is disabled.',
  'Open Files app on Drive containing a test CSE file.',
  'Select the file.',
  'Right-click the selected file.',
  'Check: the context menu should appear.',
  'Get the zip menu item.',
  'Tests creating a ZIP file on a removable USB volume.',
  'Open Files app on Drive.',
  'Mount empty USB volume in the Drive window.',
  'Wait for the USB mount and click to open the USB volume.',
  'Add ENTRIES.photos to the USB volume.',
  'Verify the USB file list.',
  'Select the photos file list entry.',
  'Right-click the selected file.',
  'Check: the context menu should appear.',
  "Click the 'Zip selection' menu command.",
  'Check: a zip file should be created.',
  'Check: a zip time histogram value should have been recorded.',
  'Tests that extraction of a ZIP archive produces a feedback panel.',
  'Open files app.',
  'Select the file.',
  'Right-click the selected file.',
  'Check: the context menu should appear.',
  'Tell the background page to never finish the file extraction.',
  'Resolves when the new app window opens.',
  "Click the 'Extract all' menu command.",
  'Check: The new window has navigated to the unzipped folder.',
  'Check that the error appears in the feedback panel.',
  'Check: a extract archive status histogram value should have been recorded.',
  'Tests that extraction of a multiple ZIP archives produces the correct\n' +
    'feedback panel string.',
  'Open files app.',
  'Select two ZIP files.',
  'Right-click the selection.',
  'Check: the context menu should appear.',
  'Tell the background page to never finish the file extraction.',
  "Click the 'Extract all' menu command.",
  "We don't verify that two new Files app windows have opened because there is",
  'a race setting appId when opening multiple windows at the same time.',
  'Check that the error appears in the feedback panel.',
  'Check: a extract archive status histogram value should have been recorded.',
  'Tests that various selections enable/hide the correct menu items.',
  'Open files app.',
  'Select the first file (ENTRIES.hello).',
  'Right-click the selected file.',
  'Check: the context menu should appear.',
  'Check: the Zip selection menu item should be visible.',
  ... 100 more items
]
remote_call.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'When step by step tests are enabled, turns on automatic step() calls. Note\n' +
    'that if step() is defined at the time of this call, invoke it to start the\n' +
    'test auto-stepping ball rolling.',
  'This error type is thrown by executeJsInPreviewTagSwa_ if the script to\n' +
    'execute in the untrusted context produces an error.',
  'Class to manipulate the window in the remote extension.',
  'Tristate holding the cached result of isStepByStepEnabled_().',
  '@param origin ID of the app to be manipulated.',
  'Checks whether step by step tests are enabled or not.',
  'Sends a test `message` to the test code running in the File Manager.\n' +
    '@return A promise which when fulfilled returns the result of executing test\n' +
    'code with the given message.',
  "Calls a remote test util in the Files app's extension. See:\n" +
    'registerRemoteTestUtils in test_util_base.js.\n' +
    '@param func Function name.\n' +
    '@param appId App window Id or null for functions not requiring a window.\n' +
    '@param args Array of arguments.\n' +
    "@param callback Callback handling the function's result.\n" +
    '@return Promise to be fulfilled with the result of the remote utility.',
  'Waits for a SWA window to be open.\n' +
    '@param debug Whether to debug the findSwaWindow.',
  'Waits for the dialog window and waits for it to fully load.\n' +
    "@return dialog's id.",
  'Wait for Files app to finish loading.',
  'Waits for the specified element appearing in the DOM.\n' +
    '@param appId App window Id.\n' +
    '@param query Query to specify the element.\n' +
    'If query is an array, `query[0]` specifies the first element(s),\n' +
    '`query[1]` specifies elements inside the shadow DOM of the first element,\n' +
    'and so on.\n' +
    '@return  Promise to be fulfilled when the element appears.',
  'Waits for the specified element appearing in the DOM.\n' +
    '@param appId App window Id.\n' +
    '@param query Query to specify the element.\n' +
    'If query is an array, `query[0]` specifies the first element(s),\n' +
    '`query[1]` specifies elements inside the shadow DOM of the first element,\n' +
    'and so on.\n' +
    '@param styleNames List of CSS property name to be obtained. NOTE: Causes\n' +
    'element style re-calculation.\n' +
    '@return Promise to be fulfilled when the element appears.',
  'Waits for a remote test function to return a specific result.\n' +
    '@param funcName Name of remote test function to be executed.\n' +
    '@param appId App window Id.\n' +
    '@param expectedResult An value to be checked against the return value of\n' +
    '`funcName` or a callback that receives the return value of `funcName`\n' +
    'and returns true if the result is the expected value.\n' +
    '@param args Arguments to be provided to `funcName` when executing it.\n' +
    '@return Promise to be fulfilled when the `expectedResult` is returned from\n' +
    '`funcName` execution.',
  'Waits for the specified element leaving from the DOM.\n' +
    '@param appId App window Id.\n' +
    '@param query Query to specify the element.\n' +
    'If query is an array, `query[0]` specifies the first element(s),\n' +
    '`query[1]` specifies elements inside the shadow DOM of the first element,\n' +
    'and so on.\n' +
    '@return Promise to be fulfilled when the element is lost.',
  'Waits for the `query` to match `count` elements.\n' +
    '@param appId App window Id.\n' +
    '@param query Query to specify the element.\n' +
    'If query is an array, `query[0]` specifies the first element(s),\n' +
    '`query[1]` specifies elements inside the shadow DOM of the first element,\n' +
    'and so on.\n' +
    '@param count The expected element match count.\n' +
    '@return Promise to be fulfilled on success.',
  'Sends a fake key down event.\n' +
    '@param appId App window Id.\n' +
    '@param query Query to specify the element.\n' +
    'If query is an array, |query[0]| specifies the first\n' +
    'element(s), |query[1]| specifies elements inside the shadow DOM of\n' +
    'the first element, and so on.\n' +
    '@param key DOM UI Events Key value.\n' +
    '@param ctrlKey Control key flag.\n' +
    '@param shiftKey Shift key flag.\n' +
    '@param altKey Alt key flag.\n' +
    '@return Promise to be fulfilled or rejected depending on\n' +
    'the result.',
  'Sets the given input text on the element identified by the query.\n' +
    '@param appId App window ID.\n' +
    '@param selector The query selector to locate the element\n' +
    '@param text The text to be set on the element.',
  'Gets file entries just under the volume.\n' +
    '@param volumeType Volume type.\n' +
    '@param names File name list.\n' +
    '@return Promise to be fulfilled with file urls for entries or rejected\n' +
    'depending on the result.',
  'Waits for a single file.\n' +
    '@param volumeType Volume type.\n' +
    '@param name File name.\n' +
    '@return Promise to be fulfilled when the file had found.',
  'Shorthand for clicking an element.\n' +
    '@param appId App window Id.\n' +
    '@param query Query to specify the element.\n' +
    'If query is an array, `query[0]` specifies the first element(s),\n' +
    '`query[1]` specifies elements inside the shadow DOM of the first element,\n' +
    'and so on.\n' +
    '@return Promise to be fulfilled with the clicked element.',
  'Shorthand for right-clicking an element.\n' +
    '@param appId App window Id.\n' +
    '@param query Query to specify the element.\n' +
    'If query is an array, `query[0]` specifies the first element(s),\n' +
    '`query[1]` specifies elements inside the shadow DOM of the first element,\n' +
    'and so on.\n' +
    '@return Promise to be fulfilled with the clicked element.',
  'Shorthand for focusing an element.\n' +
    '@param appId App window Id.\n' +
    '@param query Query to specify the element to be focused.\n' +
    '@return Promise to be fulfilled with the focused element.',
  'Simulates Click in the UI in the middle of the element.\n' +
    '@param appId App window ID contains the element. NOTE: The click is\n' +
    'simulated on most recent window in the window system.\n' +
    '@param query Query to the element to be clicked.\n' +
    '@param leftClick If true, simulate left click. Otherwise simulate right\n' +
    'click.\n' +
    '@return A promise fulfilled after the click event.',
  'Find the middle of the element.',
  'Simulates Right Click in blank/empty space of the file list element.\n' +
    '@param appId App window ID contains the element. NOTE: The click is\n' +
    'simulated on most recent window in the window system.\n' +
    '@return A promise fulfilled after the click event.',
  'Selects the option given by the index in the menu given by the type. This\n' +
    'only works in V2 version of the search.\n' +
    '@param appId The ID that identifies the files app.\n' +
    '@param type The search option type (location, recency, type).\n' +
    '@param index The index of the button.\n' +
    '@return A promise that resolves to true if click was successful and false\n' +
    'otherwise.',
  'Class to manipulate the window in the remote extension.',
  'Sends a test `message` to the test code running in the File Manager.',
  'Executes a script in the context of a <preview-tag> element contained in\n' +
    'the window.\n' +
    "For SWA: It's the first chrome-untrusted://file-manager <iframe>.\n" +
    "For legacy: It's the first elements based on the `query`.\n" +
    'Responds with its output.\n' +
    '@param appId App window Id.\n' +
    '@param query Query to the <preview-tag> element (this is ignored for SWA).\n' +
    '@param statement Javascript statement to be executed within the\n' +
    '<preview-tag>.\n' +
    '@return resolved with the return value of the `statement`.',
  'Injects javascript statemenent in the first chrome-untrusted://file-manager\n' +
    'page found and respond with its output.',
  'Waits until the expected URL shows in the last opened browser tab.\n' +
    '@return Promise to be fulfilled when the expected URL is shown in a browser\n' +
    'window.',
  'Returns whether a window exists with the expected origin.\n' +
    '@return Promise resolved with true or false depending on whether such\n' +
    'window exists.',
  'Waits for the file list turns to the given contents.\n' +
    '@param appId App window Id.\n' +
    '@param expected Expected contents of file list.\n' +
    '@param options Options of the comparison. If orderCheck is true, it also\n' +
    'compares the order of files. If ignoreLastModifiedTime is true, it\n' +
    'compares the file without its last modified time.\n' +
    '@return Promise to be fulfilled when the file list turns to the given\n' +
    'contents.',
  'Change the value received from the UI to match when comparing.',
  "Expected sometimes doesn't include the modified time at all, so",
  'just remove from the data from UI.',
  'Waits until the number of files in the file list is changed from the\n' +
    'given number.\n' +
    '@param appId App window Id.\n' +
    '@param lengthBefore Number of items visible before.\n' +
    '@return Promise to be fulfilled with the contents of files.',
  'Waits until the given taskId appears in the executed task list.\n' +
    '@param appId App window Id.\n' +
    '@param descriptor Task to watch.\n' +
    '@param fileNames Name of files that should have been passed to the\n' +
    'executeTasks().\n' +
    '@param replyArgs arguments to reply to executed task.\n' +
    '@return Promise to be fulfilled when the task appears in the executed task\n' +
    'list.',
  "Checks if the next tabforcus'd element has the given ID or not.\n" +
    '@param appId App window Id.\n' +
    "@param elementId String of `id` attribute which the next tabfocus'd element\n" +
    'should have.',
  'For directory tree implementation, directory tree itself',
  '("#directory-tree") is not focusable, the underlying tree item will be',
  'focused, for directory tree related focus check, the `elementId` format',
  'will be "directory-tree#<tree item label>", so we need to check the',
  'label here for the tree.',
  'Try to check the shadow root.',
  'Returns a promise that repeatedly checks for a file with the given name to\n' +
    'be selected in the app window with the given ID. Typical use\n' +
    "await remoteCall.waitUntilSelected('file#0', 'hello.txt');\n" +
    '... // either the test timed out or hello.txt is currently selected.\n' +
    '@param appId App window Id.\n' +
    '@param fileName the name of the file to be selected.\n' +
    '@return Promise that indicates if selection was successful.',
  'Waits until the current directory is changed.\n' +
    '@param appId App window Id.\n' +
    '@param expectedPath Path to be changed to.\n' +
    '@return Promise to be fulfilled when the current directory is changed to\n' +
    'expectedPath.',
  'Waits until the expected number of volumes is mounted.\n' +
    '@param expectedVolumesCount Expected number of mounted volumes.\n' +
    '@return promise Promise to be fulfilled.',
  'Isolates the specified banner to test. The banner is still checked against\n' +
    "it's filters, but is now the top priority banner.\n" +
    '@param appId App window Id\n' +
    '@param bannerTagName Banner tag name in lowercase to isolate.',
  'Disables banners from attaching to the DOM.\n@param appId App window Id',
  'Sends text to the search box in the Files app.\n' +
    '@param appId App window Id\n' +
    '@param text The text to type in the search box.',
  'Focus the search box.',
  'Wait for search to fully open.',
  'Input the text.',
  'Notify the element of the input.',
  'Waits for the search box auto complete list to appear.\n' +
    '@return Array of the names in the auto complete list.',
  'Wait for the list to appear.',
  'Return the result.',
  'Disables nudges from expiring for testing.\n@param appId App window Id',
  'Selects the file and displays the context menu for the file.\n' +
    '@return resolved when the context menu is visible.',
  'Select the file.',
  'Right-click to display the context menu.',
  'Wait for the context menu to appear.',
  'Wait for the tasks to be fully fetched.',
  '@param appId App window Id.',
  'Returns the menu as `ElementObject` and its menu-items (including\n' +
    'separators) in the `items` property.\n' +
    '@param appId App window Id.\n' +
    '@param menu The name of the menu.\n' +
    '@return Promise to be fulfilled with the menu.',
  'Get the top level menu element.',
  'Query all the menu items.',
  'TODO: Implement for other menus.',
  'Displays the "tasks" menu from the "OPEN" button dropdown.\n' +
    'The caller code has to prepare the selection to have multiple tasks.\n' +
    '@param appId App window Id.',
  'Wait the OPEN button to have multiple tasks.',
  'Checks if an item is pinned on drive or not.\n' +
    '@param appId app window ID.\n' +
    '@param path Path from the drive mount point, e.g. /root/test.txt\n' +
    '@param status Pinned status to expect drive item to be.',
  'Sends a delete event via the `OnFilesChanged` drivefs delegate method.\n' +
    '@param appId app window ID.\n' +
    '@param path Path from the drive mount point, e.g. /root/test.txt',
  'Whether the Jellybean UI is enabled.\n@param appId app window ID',
  'Waits for the nudge with the given text to be visible.\n' +
    '@param appId app window ID.\n' +
    '@param expectedText Text that should be displayed in the Nudge.',
  'Waits for the <xf-cloud-panel> element to be visible on the DOM.\n' +
    '@param appId app window ID',
  'Waits for the underlying bulk pinning manager to enter the specified stage.\n' +
    '@param want The stage the bulk pinning is expected to be in. This is a\n' +
    'string relating to the stage defined in the `PinningManager`.',
  'Waits until the pin manager has the expected required space.',
  'Waits until the cloud panel has the specified item and percentage\n' +
    'attributes defined, if the `timeoutSeconds` is supplied it will only wait\n' +
    'for the specified time before timing out.\n' +
    '@param appId app window ID\n' +
    '@param items The items expected on the cloud panel.\n' +
    '@param percentage The percentage integer expected on the cloud panel.\n' +
    '@param timeoutSeconds Whether to timeout when verifying the panel\n' +
    'attributes.',
  'Waits for the feedback panel to show an item with the provided messages.\n' +
    '@param appId app window ID\n' +
    '@param expectedPrimaryMessageRegex The expected primary-text of the item.\n' +
    '@param expectedSecondaryMessageRegex The expected secondary-text of the\n' +
    'item.',
  'Clicks the enabled and visible move to trash button and ensures the delete\n' +
    'button is hidden.',
  'Fakes the response from spaced when it retrieves the free space.',
  'Waits for the specified element appearing in the DOM. `query_jelly` or\n' +
    '`query_old` are used depending on the state of the migration to\n' +
    'cros_components.\n' +
    '@param appId App window Id.\n' +
    '@param queryJelly Used when cros_components are used. See `waitForElement`\n' +
    'for details.\n' +
    '@param queryOld Used when cros_components are not used. See\n' +
    '`waitForElement` for details.',
  'Shorthand for clicking the appropriate element, depending the state of\n' +
    'the Jellybean experiment.\n' +
    '@param appId App window Id.\n' +
    '@param queryJelly The query when using cros_components. See\n' +
    '`waitAndClickElement` for details.\n' +
    '@param queryOld The query when not using cros_components. See\n' +
    '`waitAndClickElement` for details.',
  'Sets the pooled storage quota on Drive volume.',
  "Opens a Files app's main window.\n" +
    '@param initialRoot Root path to be used as a default current directory\n' +
    'during initialization. Can be null, for no default path.\n' +
    '@param appState App state to be passed with on opening the Files app.\n' +
    '@return Promise to be fulfilled after window creating.',
  'Opens a file dialog and waits for closing it.\n' +
    '@param dialogParams Dialog parameters to be passed to\n' +
    'openEntryChoosingWindow() function.\n' +
    "@param volumeType Volume icon type passed to the directory page object's\n" +
    'selectItemByType function.\n' +
    '@param expectedSet Expected set of the entries.\n' +
    '@param closeDialog Function to close the dialog.\n' +
    '@param useBrowserOpen Whether to launch the select file dialog via a\n' +
    'browser OpenFile() call.\n' +
    '@param debug Whether to debug the waitForWindow().\n' +
    '@return Promise to be fulfilled with the result entry of the dialog.',
  "Opens a Files app's main window and waits until it is initialized. Fills\n" +
    'the window with initial files. Should be called for the first window only.\n' +
    '@param initialRoot Root path to be used as a default current directory\n' +
    'during initialization. Can be null, for no default path.\n' +
    '@param initialLocalEntries List of initial entries to load in Downloads\n' +
    '(defaults to a basic entry set).\n' +
    '@param initialDriveEntries List of initial entries to load in Google Drive\n' +
    '(defaults to a basic entry set).\n' +
    '@param appState App state to be passed with on opening the Files app.\n' +
    '@return Promise to be fulfilled with the window ID.',
  'Wait until the elements are loaded in the table.',
  'Creates a folder shortcut to |directoryName| using the context menu. Note\n' +
    'the current directory must be a parent of the given |directoryName|.\n' +
    '@param appId Files app windowId.\n' +
    '@param directoryName Directory of shortcut to be created.\n' +
    '@return Promise fulfilled on success.',
  'Mounts crostini volume by clicking on the fake crostini root.\n' +
    '@param appId Files app windowId.\n' +
    '@param initialEntries List of initial entries to load in Crostini (defaults\n' +
    'to a basic entry set).',
  'Add entries to crostini volume, but do not mount.',
  'Linux files fake root is shown.',
  'Mount crostini, and ensure real root and files are shown.',
  'Registers a GuestOS, mounts the volume, and populates it with tbe specified\n' +
    'entries.\n' +
    '@param appId Files app windowId.\n' +
    '@param initialEntries List of initial entries to load in the volume.',
  'Wait for the GuestOS fake root then click it.',
  ... 12 more items
]
test_util.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Sends a command to the controlling test harness, namely and usually, the\n' +
    'chrome FileManagerBrowserTest harness: it expects the command to contain the\n' +
    "'name' of the command, and any required or optional arguments of the command,\n" +
    'e.g.,\n' +
    'await sendTestMessage({\n' +
    "name: 'addEntries', // command with volume and entries arguments\n" +
    'volume: volume,\n' +
    'entries: entries\n' +
    '});\n' +
    '@param command Test command to send. The object is converted to a JSON string\n' +
    'prior to sending.\n' +
    '@return Promise to be fulfilled with the value returned by the\n' +
    '`chrome.test.sendMessage` callback.',
  'Waits (aka pauses, or sleeps) for the given time in milliseconds.\n' +
    '@param time Time in milliseconds.\n' +
    '@return Promise that will resolve after Time in milliseconds has elapsed.',
  'Interval milliseconds between checks of repeatUntil.',
  'Interval milliseconds between log output of repeatUntil.',
  "Returns caller's file, function and line/column number from the call stack.\n" +
    "@return String with the caller's file name and line/column number, as\n" +
    'returned by exception stack trace. Example "at /a_file.js:1:1".',
  "Strip 'chrome-extension://oobinhbdbiehknkpbpejbbpdbkdjmoco' prefix.",
  'Returns a pending marker. See also the repeatUntil function.\n' +
    "@param caller name of test function that originated the operation, it's the\n" +
    'return of getCaller() function.\n' +
    '@param message Pending reason including %s, %d, or %j markers. %j format an\n' +
    'object as JSON.\n' +
    '@param args Values to be assigined to %x markers.\n' +
    '@return Object which returns true for the expression: obj instanceof\n' +
    'pending.',
  'Waits until the checkFunction returns a value but a pending marker.\n' +
    '@param checkFunction Function to check a condition. It can return a pending\n' +
    'marker created by a pending function.\n' +
    '@return Promise to be fulfilled with the return value of checkFunction when\n' +
    'the checkFunction returns a value but a pending marker.',
  'Sends the test `command` to the browser test harness and awaits a string\n' +
    'result.\n' +
    '@param command Test command to send. Refer to sendTestMessage() above for the\n' +
    'expected format of a test `command` object.\n' +
    '@param debug If truthy, log the result.',
  'Get all the browser windows.\n' +
    '@param expectedInitialCount The number of windows expected before opening a\n' +
    'new one.\n' +
    '@return Object returned from `chrome.windows.getAll()`.',
  'Adds the given entries to the target volume(s).\n' +
    `Note: passing 'local' as volume name will add entries to the "My\n` +
    'Files/Downloads", instead of "My files".\n' +
    '@param volumeNames Names of target volumes.\n' +
    '@param entries List of entries to be added.\n' +
    '@return Promise to be fulfilled when the entries are added.',
  'Enumeration that determines the shared status of entries.',
  'Not shared.',
  "Shared but not visible in the 'Shared with me' view.",
  "Shared and appears in the 'Shared With Me' view.",
  'Not directly shared, but belongs to a folder that is shared with me.',
  "Entries marked as indirectly shared do not have the 'shared' metadata",
  'field, and thus cannot be located via search for shared items.',
  'The capabilities (permissions) for the Test Entry. Structure should match\n' +
    'TestEntryCapabilities in file_manager_browsertest_base.cc. All capabilities\n' +
    'default to true if not specified.',
  'The folder features for the test entry. Structure should match\n' +
    'TestEntryFolderFeature in file_manager_browsertest_base.cc. All features\n' +
    'default to false is not specified.',
  'Parameters to creat a Test Entry in the file manager. Structure should match\n' +
    'TestEntryInfo in file_manager_browsertest_base.cc.\n' +
    'Field details:\n' +
    'sourceFileName: Source file name that provides file contents (file location\n' +
    'relative to /chrome/test/data/chromeos/file_manager/).\n' +
    'targetPath: Name of entry on the test file system. Used to determine the\n' +
    'actual name of the file.\n' +
    'teamDriveName: Name of the team drive this entry is in. Defaults to a blank\n' +
    'string (no team drive). Team Drive names must be unique.\n' +
    'computerName: Name of the computer this entry is in. Defaults to a blank\n' +
    'string (no computer). Computer names must be unique.\n' +
    'lastModifiedTime: Last modified time as a text to be shown in the last\n' +
    'modified column.\n' +
    'nameText: File name to be shown in the name column.\n' +
    'sizeText: Size text to be shown in the size column.\n' +
    'typeText: Type name to be shown in the type column.\n' +
    'capabilities:  Capabilities of this file. Defaults to all capabilities\n' +
    'available (read-write access).\n' +
    'folderFeature: Folder features of this file. Defaults to all features\n' +
    'disabled.\n' +
    'pinned: Drive pinned status of this file. Defaults to false.\n' +
    'availableOffline: Whether the file is available offline. Defaults to false.\n' +
    "alternateUrl: File's Drive alternate URL. Defaults to an empty string.\n" +
    'canPin: Whether the item can be pinned or not. Defaults to true.',
  'File system entry information for tests. Structure should match TestEntryInfo\n' +
    'in file_manager_browsertest_base.cc\n' +
    'TODO(sashab): Remove this, rename TestEntryInfoOptions to TestEntryInfo and\n' +
    'set the defaults in the record definition above.',
  '@param options Parameters to create the TestEntryInfo.',
  'Obtains the expected row contents for each file.',
  'Obtains a expected row contents of the file in the file list.',
  'Returns a new entry with modified attributes specified in the\n' +
    '`newOptions` object.\n' +
    '@param newOptions  The options to be modified.',
  'Clone the existing TestEntryInfo object to a new TestEntryInfo object but\n' +
    'with modified lastModifiedTime field. This is especially useful for\n' +
    'constructing TestEntryInfo for Recents view.\n' +
    '@param newDate the new modified date time',
  'Clone the existing TestEntryInfo object to a new TestEntryInfo object but\n' +
    'with modified targetPath field. This is especially useful for testing\n' +
    'rename functionality.\n' +
    '@param newName the new modified name',
  'Filesystem entries used by the test cases.\n' +
    "TODO(sashab): Rename 'nameText', 'sizeText' and 'typeText' to\n" +
    "'expectedNameText', 'expectedSizeText' and 'expectedTypeText' to reflect that\n" +
    'they are the expected values for those columns in the file manager.',
  'No file extension.',
  'Used to differentiate between .jpg and .jpeg handling.',
  'No mime type.',
  'No mime type.',
  'No mime type.',
  'No mime type.',
  'No mime type.',
  'The directory itself is not encrypted, but will contain encrypted entries',
  'like testCSEFileInDirectory',
  'No mime type, no file extension.',
  'Team-drive entries.',
  'Computer entries.',
  'Read-only and write-restricted entries.',
  'TODO(sashab): Generate all combinations of capabilities inside the test, to',
  'ensure maximum coverage.',
  "A folder that can't be renamed or deleted or have children added, but can",
  'be copied and shared.',
  "A google doc file that can't be renamed or deleted, but can be copied and",
  'shared.',
  "A google doc file that can't be renamed, deleted, copied or shared.",
  "A regular file that can't be renamed or deleted, but can be copied and",
  'shared.',
  "A ZIP file that can't be renamed or deleted, but can be copied and",
  'shared.',
  "A regular file that can't be renamed, but can be deleted.",
  "A regular file that can't be deleted, but can be renamed.",
  'Default Android directories.',
  'Android test files.',
  'Creates a test file, which can be inside folders, however parent folders\n' +
    'have to be created by the caller using |createTestFolder|.\n' +
    '@param path File path to be created,',
  'Creates a folder test entry from a folder |path|.\n' +
    '@param path The folder path.',
  'Returns an array of nested folder test entries, where |depth| controls\n' +
    'the nesting. For example, a |depth| of 4 will return:\n' +
    '[0]: nested-folder0\n' +
    '[1]: nested-folder0/nested-folder1\n' +
    '[2]: nested-folder0/nested-folder1/nested-folder2\n' +
    '[3]: nested-folder0/nested-folder1/nested-folder2/nested-folder3\n' +
    '@param depth The nesting depth.',
  'Returns the count for |value| for the histogram |name|.\n' +
    '@param name The histogram to be queried.\n' +
    '@param value The value within that histogram to query.\n' +
    '@return A promise fulfilled with the count.',
  'Returns the sum for for the histogram |name|.\n' +
    '@param name The histogram to be queried.\n' +
    '@return A promise fulfilled with the sum.',
  'Checks the expected total count for the histogram |name|.\n' +
    '@param name The histogram to be queried.\n' +
    '@param count The expected sample count.',
  'Returns the count for the user action |name|.\n' +
    '@param name The user action to be queried.\n' +
    '@return A promise fulfilled with the count.',
  'Returns a date time string with diff days. This can be used as the\n' +
    'lastModifiedTime field of TestEntryInfo object, which is useful to construct\n' +
    'a recent file.\n' +
    '@param diffDays how many days in diff',
  'Format: "May 2, 2021, 11:25 AM"',
  'Formats the date to be able to compare to Files app date.',
  'Sanitizes the formatted date. Replaces unusual space with normal space.\n' +
    '@param strDate the date already in the string format.',
  'Opens a foreground window that makes a call to\n' +
    'chrome.fileSystem.chooseEntry. This is due to the fact that this API\n' +
    "shouldn't be called in the background page (see crbug.com/736930).\n" +
    '@return Promise fulfilled when a foreground window opens.',
  'Companion function to openEntryChoosingWindow function. This function waits\n' +
    'until entry selected in a dialog shown by chooseEntry() is set.\n' +
    '@return the entry set by the dialog shown via chooseEntry().',
  'Waits until the MediaApp/Backlight shows up.',
  'The MediaApp window should open for the file.'
]
testcase.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on',
  'Namespace for test cases.'
]
index.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Validate the URL before converting it to a Mojo URL to avoid a Mojo',
  'validation error when sending this call to the browser. Successful',
  'construction indicates a valid URL.'
]
browser_proxy.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
constants.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The number of apps displayed in app list in the main view before expanding.',
  'Enumeration of the different subpage types within the app management page.',
  'This histogram is also declared and used at chrome/browser/ui/webui/settings/',
  'chromeos/app_management/app_management_uma.h.',
  'These values are persisted to logs and should not be renumbered or re-used.\n' +
    'See tools/metrics/histograms/enums.xml.',
  'These values are persisted to logs and should not be renumbered or re-used.\n' +
    'See tools/metrics/histograms/enums.xml.',
  'A Record (tuple) of app IDs to app used mostly for the supported links',
  'frontend components.'
]
permission_constants.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
permission_util.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
util.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Utility functions for the App Management page.',
  "Maps all apps to their parent's app ID. Apps without a parent are",
  'not listed in this map.',
  'Returns the TriState value of a permission. If the permission value is not\n' +
    'already a TriState, it will be converted based on the boolean value.',
  'Undefined is returned when the app does not request a permission.',
  "Returns a list of all apps whose parent's app ID matches the selected app.",
  "Returns the selected app's parent app or null.",
  'A comparator function to sort strings alphabetically.',
  'TODO(crbug.com/40188614): Figure out appropriate behavior for',
  'Lacros-hosted chrome-apps.',
  '@param arg An argument to check for existence.\n' +
    '@throws If |arg| is undefined or null.',
  '@param arg A argument to check for existence.\n' +
    '@return |arg| with the type narrowed as non-nullable.\n' +
    '@throws If |arg| is undefined or null.'
]
ca_trust_edit_dialog.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'ca-trust-edit-dialog' allows the user to:\n" +
    '- specify the trust level of a certificate authority that is being\n' +
    'imported.\n' +
    '- edit the trust level of an already existing certificate authority.',
  'A non existing |model.id| indicates that a new certificate is being',
  'imported, otherwise an existing certificate is being edited.'
]
certificate_delete_confirmation_dialog.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview A confirmation dialog allowing the user to delete various types\n' +
    'of certificates.'
]
certificate_entry.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview An element that represents an SSL certificate entry.',
  '@return Whether the given index corresponds to the last sub-node.'
]
certificate_entry_v2.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview The 'certificate-entry-v2' component is for showing a summary\n" +
    'of a certificate in a row on screen.\n' +
    'This component is used in the new Certificate Management UI in\n' +
    './certificate_manager_v2.ts.'
]
certificate_info_dialog.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
certificate_info_dialog.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview The 'certificate-info-dialog' component is for showing\n" +
    'a dialog box that displays informational or error messages to the user.'
]
certificate_list.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'certificate-list' is an element that displays a list of\n" +
    'certificates.',
  '<if expr="is_chromeos">',
  '</if>',
  '<if expr="is_chromeos">',
  '</if>',
  '<if expr="is_chromeos">',
  '</if>',
  '<if expr="is_chromeos">',
  '</if>',
  'Handles a rejected Promise returned from |browserProxy_|.',
  'Nothing to do here. Null indicates that the user clicked "cancel" on a',
  'native file chooser dialog or that the request was ignored by the',
  'handler due to being received while another was still being processed.',
  'Otherwise propagate the error to the parents, such that a dialog',
  'displaying the error will be shown.',
  '<if expr="is_chromeos">',
  '</if>'
]
certificate_list_v2.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview The 'certificate-list-v2' component shows a list of\n" +
    'certificates with a header, an expander, and optionally an "export all"\n' +
    'button.\n' +
    'This component is used in the new Certificate Management UI in\n' +
    './certificate_manager_v2.ts.',
  'True if the list should not be collapsible.',
  'Empty lists will always not be collapsible.',
  'True if the export button should be hidden.',
  'Export button may also be hidden if there are no certs in the list.',
  'True if the entire list (including the header) should be hidden if the',
  'list is empty.',
  'True if the header should be hidden. This will make the list',
  'non-collapsible.',
  "Export button click shouldn't collapse the list as well.",
  "Import button click shouldn't collapse the list as well.",
  "Import button click shouldn't collapse the list as well.",
  'On successful import, refresh the certificate list.'
]
certificate_manager.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview The 'certificate-manager' component manages SSL certificates.",
  '<if expr="is_chromeos">',
  '</if>',
  'Indicates if client certificate import is allowed\n' +
    'by Chrome OS specific policy ClientCertificateManagementAllowed.\n' +
    'Value exists only for Chrome OS.',
  'Indicates if CA certificate import is allowed\n' +
    'by Chrome OS specific policy CACertificateManagementAllowed.\n' +
    'Value exists only for Chrome OS.',
  'The model to be passed to dialogs that refer to a given certificate.',
  'The certificate type to be passed to dialogs that refer to a given\n' +
    'certificate.',
  'The model to be passed to the error dialog.',
  'The element to return focus to, when the currently shown dialog is\nclosed.',
  '@return Whether to show tab at |tabIndex|.',
  'Opens a dialog and registers a listener for removing the dialog from the\n' +
    'DOM once is closed. The listener is destroyed when the dialog is removed\n' +
    "(because of 'restamp').\n" +
    '@param dialogTagName The tag name of the dialog to be shown.\n' +
    '@param domIfBooleanName The name of the boolean variable\n' +
    'corresponding to the dialog.\n' +
    '@param anchor The element to focus when the dialog is\n' +
    'closed. If null, the previous anchor element should be reused. This\n' +
    "happens when a 'certificates-error-dialog' is opened, which when closed\n" +
    'should focus the anchor of the previous dialog (the one that generated\n' +
    'the error).'
]
certificate_manager_types.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Closure compiler typedefs.',
  'clang-format off',
  '<if expr="is_chromeos">',
  '</if>',
  'clang-format on',
  "The payload of the 'certificate-action' event.",
  "The payload of the 'certificates-error' event.",
  'Enumeration of actions that require a popup menu to be shown to the user.',
  'The name of the event fired when a certificate action is selected from the\n' +
    'dropdown menu. CertificateActionEventDetail is passed as the event detail.',
  '<if expr="is_chromeos">',
  "The payload of the 'certificate-provisioning-view-details-action' event.",
  '</if>',
  'The name of the event fired when a the "View Details" action is selected on\n' +
    'the dropdown menu next to a certificate provisioning process.\n' +
    'CertificateActionEventDetail is passed as the event detail.',
  '<if expr="is_chromeos">',
  '</if>'
]
certificate_manager_v2.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview The 'certificate-manager-v2' component is a newer way for\n" +
    'showing and managing TLS certificates. This is tied to the Chrome Root Store\n' +
    'and Chrome Cert Management Enterprise policies launch.',
  '<if expr="is_win or is_macosx or is_linux">',
  '</if>',
  '<if expr="is_chromeos">',
  '</if>',
  '<if expr="is_win or is_macosx">',
  '</if>',
  '<if expr="not chromeos_ash">',
  '</if>',
  '<if expr="chromeos_ash">',
  'TODO(crbug.com/40928765): Import should also be disabled in kiosk mode or',
  'when disabled by policy.',
  'TODO(crbug.com/40928765): This controls both "import" and "import and',
  'bind". If we implement client cert import on Linux too we should make a',
  'separate bool for each so that "import and bind" is only enabled on',
  'chromeos.',
  '</if>',
  'Prevent clicks on sidebar items from navigating and therefore reloading',
  'the page.',
  'Sub-pages always show the top shadow, regardless of scroll position.',
  'Main page uses scroll position to determine whether a shadow should',
  'be shown.',
  "If we're navigating back from a subpage, we may need to fiddle",
  "with the focus element if we're going back to its parent page.",
  'TODO(crbug.com/40928765): localize',
  'TODO(crbug.com/40928765): Figure out how we want to display the',
  'import buttons/etc on this subpage. For now just show the header',
  'when we need the import buttons to be visible.',
  '<if expr="is_win or is_macosx">',
  '</if>'
]
certificate_password_decryption_dialog.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview A dialog prompting the user for a decryption password such that\n' +
    'a previously exported personal certificate can be imported.'
]
certificate_password_dialog.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
certificate_password_dialog.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview The 'certificate-password-dialog' component is for showing\n" +
    'a dialog box that prompts the user to enter a password to decrypt a file\n' +
    'during client certificate import.'
]
certificate_password_encryption_dialog.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview A dialog prompting the user to encrypt a personal certificate\n' +
    'before it is exported to disk.'
]
certificate_provisioning_browser_proxy.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview A helper object used on Chrome OS from the "Manage\n' +
    'certificates" section to interact with certificate provisioining processes.',
  "The 'certificate-provisioning-processes-changed' event will have an array of\n" +
    'CertificateProvisioningProcesses as its argument. This typedef is currently\n' +
    'declared here to be consistent with certificates_browser_proxy.js, but it is\n' +
    'not specific to CertificateProvisioningBrowserProxy.\n' +
    '@see chrome/browser/ui/webui/settings/certificates_handler.cc',
  'Refreshes the list of client certificate processes.\n' +
    "Triggers the 'certificate-provisioning-processes-changed' event.",
  'Attempts to manually advance/refresh the status of the client certificate\n' +
    'provisioning process identified by |certProfileId|.',
  'Resets a particular certificate process.',
  'The singleton instance_ is replaced with a test version of this wrapper',
  'during testing.'
]
certificate_provisioning_details_dialog.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'certificate-provisioning-details-dialog' allows the user to\n" +
    'view the details of an in-progress certiifcate provisioning process.'
]
certificate_provisioning_entry.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'certificate-provisioning-entry' is an element that displays\n" +
    'one certificate provisioning processes.'
]
certificate_provisioning_list.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'certificate-provisioning-list' is an element that displays a\n" +
    'list of certificate provisioning processes.',
  'The model to be passed to certificate provisioning details dialog.',
  '@param provisioningProcesses The list of certificate provisioning\n' +
    'processes.\n' +
    '@return Whether |provisioningProcesses| contains at least one entry.',
  '@param certProvisioningProcesses The currently active certificate\n' +
    'provisioning processes',
  'If a cert provisioning process details dialog is being shown, update its',
  'model.',
  'Close cert provisioning process details dialog if the process is no',
  'longer in the list eg. when process completed successfully.'
]
certificate_subentry.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview certificate-subentry represents an SSL certificate sub-entry.',
  'Dispatches an event indicating which certificate action was tapped. It is\n' +
    'used by the parent of this element to display a modal dialog accordingly.',
  'Handles the case where a call to the browser resulted in a rejected\n' +
    'promise.',
  'Nothing to do here. Null indicates that the user clicked "cancel" on a',
  'native file chooser dialog or that the request was ignored by the',
  'handler due to being received while another was still being processed.',
  'Otherwise propagate the error to the parents, such that a dialog',
  'displaying the error will be shown.',
  '@return Whether the certificate can be edited.',
  '@return Whether the certificate can be exported.',
  '@return Whether the certificate can be deleted.'
]
certificate_subpage_v2.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview The 'certificate-subpage-v2' component is designed to show a\n" +
    'subpage. This subpage contains:\n' +
    '- header text\n' +
    '- one or more lists of certs\n' +
    '- a back button for navigating back to the previous page\n' +
    'This component is used in the new Certificate Management UI in\n' +
    './certificate_manager_v2.ts.',
  'Sets initial keyboard focus of the subpage. Assumes that subpage elements',
  'are visible.'
]
certificates_browser_proxy.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview A helper object used from the "Manage certificates" section\n' +
    'to interact with the browser.',
  '@see chrome/browser/ui/webui/settings/certificates_handler.cc',
  'A data structure describing a certificate that is currently being imported,\n' +
    'therefore it has no ID yet, but it has a name. Used within JS only.',
  'Top-level grouping node in a certificate list, representing an organization\n' +
    'and containing certs that belong to the organization in |subnodes|. If a\n' +
    'certificate does not have an organization name, it will be grouped under its\n' +
    'own CertificatesOrgGroup with |name| set to its display name.\n' +
    '@see chrome/browser/ui/webui/settings/certificates_handler.cc',
  'Generic error returned from C++ via a Promise reject callback.\n' +
    '@see chrome/browser/ui/webui/settings/certificates_handler.cc',
  'Enumeration of all possible certificate types.',
  'Error returned from C++ via a Promise reject callback, when some certificates\n' +
    'fail to be imported.\n' +
    '@see chrome/browser/ui/webui/settings/certificates_handler.cc',
  'Triggers 5 events in the following order\n' +
    "1x 'client-import-allowed-changed' event.\n" +
    "1x 'ca-import-allowed-changed' event.\n" +
    "4x 'certificates-changed' event, one for each certificate category.",
  '@return A promise resolved when the certificate has been\n' +
    'deleted successfully or rejected with a CertificatesError.',
  '@return A promise firing once the user has selected\n' +
    'the export location. A prompt should be shown to asking for a\n' +
    'password to use for encrypting the file. The password should be\n' +
    'passed back via a call to\n' +
    'exportPersonalCertificatePasswordSelected().',
  '@return A promise firing once the user has selected\n' +
    'the file to be imported. If true a password prompt should be shown to\n' +
    'the user, and the password should be passed back via a call to\n' +
    'importPersonalCertificatePasswordSelected().',
  '@return A promise firing once the user has selected\n' +
    'the file to be imported, or failing with CertificatesError.\n' +
    'Upon success, a prompt should be shown to the user to specify the\n' +
    'trust levels, and that information should be passed back via a call\n' +
    'to importCaCertificateTrustSelected().',
  '@return A promise firing once the trust level for the imported\n' +
    'certificate has been successfully set. The promise is rejected if an\n' +
    'error occurred with either a CertificatesError or\n' +
    'CertificatesImportError.',
  '@return A promise firing once the certificate has been\n' +
    'imported. The promise is rejected if an error occurred, with either\n' +
    'a CertificatesError or CertificatesImportError.',
  'The singleton instance_ is replaced with a test version of this wrapper',
  'during testing.'
]
certificates_error_dialog.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview A dialog for showing SSL certificate related error messages.\n' +
    'The user can only close the dialog, there is no other possible interaction.'
]
certificates_v2_browser_proxy.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview A helper object used from the "Manage certificates" section\n' +
    'to interact with the browser. For the V2 Certificate Manager only.',
  'The singleton instance_ is replaced with a test version of this wrapper',
  'during testing.'
]
crs_section_v2.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview The 'crs-section-v2' component is the Chrome Root Store\n" +
    'section of the Certificate Management V2 UI.'
]
local_certs_section_v2.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview The 'local-certs-section-v2' component is a section of the\n" +
    'Certificate Management V2 UI that shows local modifications to the the users\n' +
    'trusted roots for TLS server auth (e.g. roots imported from the platform).',
  '<if expr="is_win or is_macosx">',
  '</if>',
  'If true, show the Custom Certs section.',
  '<if expr="is_win or is_macosx">',
  '</if>'
]
navigation_v2.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Page navigation utility code.',
  'The different pages that can be shown.',
  'Sub-pages',
  'A helper object to manage in-page navigations.',
  'Navigates to a page and pushes a new history entry.',
  'Helper function to set the current page from the path and notify all\n' +
    'observers.'
]
browser_proxy.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file provides a singleton class that exposes the Mojo\n' +
    'handler interface used for one way communication between the JS and the\n' +
    'browser.\n' +
    'TODO(tluk): Convert this into typescript once all dependencies have been\n' +
    'fully migrated.'
]
colors_css_updater.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file holds the functions that allow WebUI to update its\n' +
    'colors CSS stylesheet when a ColorProvider change in the browser is detected.',
  'The CSS selector used to get the <link> node with the colors.css stylesheet.\n' +
    'The wildcard is needed since the URL ends with a timestamp.',
  '<if expr="chromeos_ash">',
  'Event fired after updated colors have been fetched and applied.',
  '</if>',
  '<if expr="chromeos_ash">',
  '</if>',
  'Starts listening for ColorProvider changes from the browser and updates the\n' +
    '`root_` whenever changes occur.',
  'TODO(dpapad): Figure out how to properly trigger',
  '`callbackRouter.onColorProviderChanged` listeners from tests and make this',
  'method private.',
  '<if expr="chromeos_ash">',
  '</if>',
  'Forces `root_` to refresh its colors.css stylesheet. This is used to\n' +
    'fetch an updated stylesheet when the ColorProvider associated with the\n' +
    'WebUI has changed.\n' +
    '@return A promise which resolves to true once the new colors are loaded and\n' +
    'installed into the DOM. In the case of an error returns false. When a\n' +
    'new colors.css is loaded, this will always freshly query the existing\n' +
    'colors.css, allowing multiple calls to successfully remove existing,\n' +
    'outdated CSS.',
  'A flickering effect may take place when setting the href property of',
  'the existing color css node with a new value. In order to avoid',
  'flickering, we create a new link element and once it is loaded we',
  'remove the old one. See crbug.com/1365320 for additional details.'
]
browser_proxy.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
browser_proxy.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview A helper object used by the customize-color-scheme-mode\n' +
    'component to interact with the browser.'
]
customize_color_scheme_mode.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
customize_color_scheme_mode.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
segmented_button.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
segmented_button.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
segmented_button_option.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
segmented_button_option.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Overridden from CrRippleMixin'
]
help_bubble.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
help_bubble.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview A bubble for displaying in-product help. These are created\n' +
    'dynamically by HelpBubbleMixin, and their API should be considered an\n' +
    'implementation detail and subject to change (you should not add them to your\n' +
    'components directly).',
  'HTMLElement corresponding to |this.nativeId|.',
  'Backing data for the dom-repeat that generates progress indicators.\n' +
    'The elements are placeholders only.',
  'Watches the offsetParent for resize events, allowing the bubble to be\n' +
    'repositioned in response. Useful for when the content around a help bubble\n' +
    'target can be filtered/expanded/repositioned.',
  'Shows the bubble.',
  'Set up the progress track.',
  'Reset the aria-hidden attribute as screen readers need to access the',
  'contents of an opened bubble.',
  'Hides the bubble, clears out its contents, and ensures that screen readers\n' +
    'ignore it while hidden.\n' +
    'TODO(dfried): We are moving towards formalizing help bubbles as single-use;\n' +
    'in which case most of this tear-down logic can be removed since the entire\n' +
    'bubble will go away on hide.',
  'Retrieves the current anchor element, if set and the bubble is showing,\n' +
    'otherwise null.',
  'Returns the button with the given `buttonIndex`, or null if not found.',
  'Focuses a button in the bubble.',
  'First try to focus either the default button or any action button.',
  'As a fallback, focus the close button before trying to focus the anchor;',
  'this will allow the focus to stay on the close button if the anchor',
  'cannot be focused.',
  'Maybe try to focus the anchor. This is preferable to focusing the close',
  'button, but not every element can be focused.',
  'Returns whether the default button is leading (true on Windows) vs trailing\n' +
    '(all other platforms).',
  'Handles ESC keypress (dismiss bubble) and prevents it from propagating up\n' +
    'to parent elements.',
  'Prevent event propagation. Attach to any event that should not bubble up\n' +
    'out of the help bubble.',
  'There is no access to the model index here due to limitations of',
  "dom-repeat. However, the index is stored in the node's identifier.",
  'Default button is leading on Windows, trailing on other platforms.',
  'Determine classes that describe the arrow position relative to the\n' +
    'HelpBubble',
  '`*-edge` classes move arrow to a HelpBubble edge',
  '`*-position` classes move arrow along the HelpBubble edge',
  'Sets the bubble position, as relative to that of the anchor element and\n' +
    '|this.position|.',
  'How far HelpBubble is from anchorElement',
  'The nearest an arrow can be to the adjacent HelpBubble edge',
  'Inclusive of 8px visible arrow and 8px margin.',
  'component is inserted at mixin root so start with anchor offsets',
  'Move HelpBubble to correct side of the anchorElement',
  'Move HelpBubble along the anchorElement edge according to arrow position',
  'If anchor element width is small, point arrow to center of anchor',
  'element',
  'If anchor element width is small, point arrow to center of anchor',
  'element',
  'Right-align bubble and anchor elements',
  'If anchor element height is small, point arrow to center of anchor',
  'element',
  'If anchor element height is small, point arrow to center of anchor',
  'element',
  'Bottom-align bubble and anchor elements'
]
help_bubble_controller.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Return whether the current language is right-to-left',
  'Reflect arrow position across y-axis',
  'HelpBubble controller class\n' +
    '- There should exist only one HelpBubble instance for each nativeId\n' +
    '- The mapping between nativeId and htmlId is held within this instance\n' +
    '- The rest of the parameters are passed to createBubble',
  'Whether a help bubble (webui or external) is being shown for this\n' +
    'controller',
  'Keep track of last known anchor visibility status.',
  'Keep track of last known anchor bounds.',
  'This flag is used to know whether to send position updates for\n' +
    'external bubbles',
  'Because the help bubble uses either absolute or fixed positioning, it',
  'need only be placed within the offset parent of the anchor. However it is',
  'placed as a sibling to the anchor because that guarantees proper tab',
  'order.',
  'Styles the anchor element to appear highlighted while the bubble is open,\n' +
    'or removes the highlight.'
]
help_bubble_mixin.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Logic common to components that support a help bubble.\n' +
    'A component implementing this mixin should call\n' +
    'registerHelpBubble() to associate specific element identifiers\n' +
    'referenced  in an IPH or Tutorials journey with the ids of the HTML elements\n' +
    'that journey cares about (typically, points for help bubbles to anchor to).\n' +
    'Multiple components in the same WebUI may have this mixin. Each mixin will\n' +
    'receive ALL help bubble-related messages from its associated WebUIController\n' +
    'and determines if any given message is relevant. This is done by checking\n' +
    'against registered identifier.\n' +
    'See README.md for more information.',
  'A map from the name of the native identifier used in the tutorial or\n' +
    "IPH definition to the target element's HTML ID.\n" +
    'Example entry:\n' +
    '"kHeightenSecuritySettingsElementId" => "toggleSecureMode"',
  'When the component is connected, if the target elements were',
  'already registered, they should be observed now. Any targets',
  'registered from this point forward will observed on registration.',
  'Maps `nativeId`, which should be the name of a ui::ElementIdentifier\n' +
    'referenced by the WebUIController, with either:\n' +
    '- a selector\n' +
    '- an array of selectors (will traverse shadow DOM elements)\n' +
    '- an arbitrary HTMLElement\n' +
    'The referenced element should have block display and non-zero size\n' +
    'when visible (inline elements may be supported in the future).\n' +
    'Example:\n' +
    'registerHelpBubble(\n' +
    "'kMyComponentTitleLabelElementIdentifier',\n" +
    "'#title');\n" +
    'Example:\n' +
    'registerHelpBubble(\n' +
    "'kMyComponentTitleLabelElementIdentifier',\n" +
    "['#child-component', '#child-component-button']);\n" +
    'Example:\n' +
    'registerHelpBubble(\n' +
    "'kMyComponentTitleLabelElementIdentifier',\n" +
    'this.$.list.childNodes[0]);\n' +
    'See README.md for full instructions.\n' +
    'This method can be called multiple times to re-register the\n' +
    'nativeId to a new element/selector. If the help bubble is already\n' +
    'showing, the registration will fail and return null. If successful,\n' +
    'this method returns the new controller.\n' +
    'Optionally, an options object may be supplied to change the\n' +
    'default behavior of the help bubble.\n' +
    '- Fixed positioning detection:\n' +
    'e.g. `{fixed: true}`\n' +
    'By default, this mixin detects anchor elements when\n' +
    'rendered within the document. This breaks with\n' +
    'fix-positioned elements since they are not in the regular\n' +
    'flow of the document but they are always visible. Passing\n' +
    '{"fixed": true} will detect the anchor element when it is\n' +
    'visible.\n' +
    '- Add padding around anchor element:\n' +
    'e.g. `{anchorPaddingTop: 5}`\n' +
    'To add to the default margin around the anchor element in all\n' +
    '4 directions, e.g. {"anchorPaddingTop": 5} adds 5 pixels to\n' +
    'the margin at the top off the anchor element. The margin is\n' +
    'used when calculating how far the help bubble should be spaced\n' +
    'from the anchor element. Larger values equate to a larger visual\n' +
    'gap. These values must be positive integers in the range [0, 20].\n' +
    'This option should be used sparingly where the help bubble would\n' +
    'otherwise conceal important UI.',
  'This can be called before or after `connectedCallback()`, so if the',
  "component isn't connected and the observer set up yet, delay",
  'observation until it is.',
  'Unregisters a help bubble nativeId.\n' +
    'This method will remove listeners, hide the help bubble if\n' +
    'showing, and forget the nativeId.',
  'Returns whether any help bubble is currently showing in this\ncomponent.',
  'Returns whether any help bubble is currently showing on a tag\n' +
    'with this id.',
  'Returns the help bubble currently showing on a tag with this\nid.',
  'Testing method to validate that anchors will be properly\n' +
    'located at runtime\n' +
    'Call this method in your browser_tests after your help\n' +
    'bubbles have been registered. Results are sorted to be\n' +
    'deterministic.',
  'Returns whether a help bubble can be shown\n' +
    'This requires:\n' +
    '- the mixin is tracking this controller\n' +
    '- the controller is in a state to be shown, e.g.\n' +
    '`.canShowBubble()`\n' +
    '- no other showing bubbles are anchored to the same element',
  'Make sure no other help bubble is showing for this anchor.',
  'Displays a help bubble with `params` anchored to the HTML element\n' +
    'with id `anchorId`. Note that `params.nativeIdentifier` is ignored by\n' +
    'this method, since the anchor is already specified.',
  'Hides a help bubble anchored to element with id `anchorId` if there\n' +
    'is one. Returns true if a bubble was hidden.',
  '`!ctrl` means this identifier is not handled by this mixin',
  'Sends an "activated" event to the ElementTracker system for the\n' +
    'element with id `anchorId`, which must have been registered as a help\n' +
    'bubble anchor. This event will be processed in the browser and may\n' +
    'e.g. cause a Tutorial or interactive test to advance to the next\n' +
    'step.\n' +
    'TODO(crbug.com/40243127): Figure out how to automatically send the\n' +
    'activated event when an anchor element is clicked.',
  'Sends a custom event to the ElementTracker system for the element\n' +
    'with id `anchorId`, which must have been registered as a help bubble\n' +
    'anchor. This event will be processed in the browser and may e.g.\n' +
    'cause a Tutorial or interactive test to advance to the next step.\n' +
    'The `customEvent` string should correspond to the name of a\n' +
    'ui::CustomElementEventType declared in the browser code.',
  'This event is emitted by the mojo router',
  'When the document scrolls or resizes, we need to update cached\n' +
    'positions of bubble anchors.',
  'Returns bounds of the anchor element',
  'This event is emitted by the mojo router',
  'Identifier not handled by this mixin.',
  'This event is emitted by the mojo router',
  'Identifier not handled by this mixin.',
  'This event is emitted by the mojo router',
  'This may be called with nativeId not handled by this mixin',
  'Ignore return value to silently fail',
  'This event is emitted by the mojo router.',
  'Identifier not handled by this mixin.',
  'Get the associated bubble and update status',
  'This event is emitted by the help-bubble component',
  'This event is emitted by the help-bubble component'
]
help_bubble_mixin_lit.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Logic common to components that support a help bubble.\n' +
    'A component implementing this mixin should call\n' +
    'registerHelpBubble() to associate specific element identifiers\n' +
    'referenced  in an IPH or Tutorials journey with the ids of the HTML elements\n' +
    'that journey cares about (typically, points for help bubbles to anchor to).\n' +
    'Multiple components in the same WebUI may have this mixin. Each mixin will\n' +
    'receive ALL help bubble-related messages from its associated WebUIController\n' +
    'and determines if any given message is relevant. This is done by checking\n' +
    'against registered identifier.\n' +
    'See README.md for more information.',
  'A map from the name of the native identifier used in the tutorial or\n' +
    "IPH definition to the target element's HTML ID.\n" +
    'Example entry:\n' +
    '"kHeightenSecuritySettingsElementId" => "toggleSecureMode"',
  'When the component is connected, if the target elements were',
  'already registered, they should be observed now. Any targets',
  'registered from this point forward will observed on registration.',
  'Maps `nativeId`, which should be the name of a ui::ElementIdentifier\n' +
    'referenced by the WebUIController, with either:\n' +
    '- a selector\n' +
    '- an array of selectors (will traverse shadow DOM elements)\n' +
    '- an arbitrary HTMLElement\n' +
    'The referenced element should have block display and non-zero size\n' +
    'when visible (inline elements may be supported in the future).\n' +
    'Example:\n' +
    'registerHelpBubble(\n' +
    "'kMyComponentTitleLabelElementIdentifier',\n" +
    "'#title');\n" +
    'Example:\n' +
    'registerHelpBubble(\n' +
    "'kMyComponentTitleLabelElementIdentifier',\n" +
    "['#child-component', '#child-component-button']);\n" +
    'Example:\n' +
    'registerHelpBubble(\n' +
    "'kMyComponentTitleLabelElementIdentifier',\n" +
    'this.$.list.childNodes[0]);\n' +
    'See README.md for full instructions.\n' +
    'This method can be called multiple times to re-register the\n' +
    'nativeId to a new element/selector. If the help bubble is already\n' +
    'showing, the registration will fail and return null. If successful,\n' +
    'this method returns the new controller.\n' +
    'Optionally, an options object may be supplied to change the\n' +
    'default behavior of the help bubble.\n' +
    '- Fixed positioning detection:\n' +
    'e.g. `{fixed: true}`\n' +
    'By default, this mixin detects anchor elements when\n' +
    'rendered within the document. This breaks with\n' +
    'fix-positioned elements since they are not in the regular\n' +
    'flow of the document but they are always visible. Passing\n' +
    '{"fixed": true} will detect the anchor element when it is\n' +
    'visible.\n' +
    '- Add padding around anchor element:\n' +
    'e.g. `{anchorPaddingTop: 5}`\n' +
    'To add to the default margin around the anchor element in all\n' +
    '4 directions, e.g. {"anchorPaddingTop": 5} adds 5 pixels to\n' +
    'the margin at the top off the anchor element. The margin is\n' +
    'used when calculating how far the help bubble should be spaced\n' +
    'from the anchor element. Larger values equate to a larger visual\n' +
    'gap. These values must be positive integers in the range [0, 20].\n' +
    'This option should be used sparingly where the help bubble would\n' +
    'otherwise conceal important UI.',
  'This can be called before or after `connectedCallback()`, so if the',
  "component isn't connected and the observer set up yet, delay",
  'observation until it is.',
  'Unregisters a help bubble nativeId.\n' +
    'This method will remove listeners, hide the help bubble if\n' +
    'showing, and forget the nativeId.',
  'Returns whether any help bubble is currently showing in this\ncomponent.',
  'Returns whether any help bubble is currently showing on a tag\n' +
    'with this id.',
  'Returns the help bubble currently showing on a tag with this\nid.',
  'Testing method to validate that anchors will be properly\n' +
    'located at runtime\n' +
    'Call this method in your browser_tests after your help\n' +
    'bubbles have been registered. Results are sorted to be\n' +
    'deterministic.',
  'Returns whether a help bubble can be shown\n' +
    'This requires:\n' +
    '- the mixin is tracking this controller\n' +
    '- the controller is in a state to be shown, e.g.\n' +
    '`.canShowBubble()`\n' +
    '- no other showing bubbles are anchored to the same element',
  'Make sure no other help bubble is showing for this anchor.',
  'Displays a help bubble with `params` anchored to the HTML element\n' +
    'with id `anchorId`. Note that `params.nativeIdentifier` is ignored by\n' +
    'this method, since the anchor is already specified.',
  'Hides a help bubble anchored to element with id `anchorId` if there\n' +
    'is one. Returns true if a bubble was hidden.',
  '`!ctrl` means this identifier is not handled by this mixin',
  'Sends an "activated" event to the ElementTracker system for the\n' +
    'element with id `anchorId`, which must have been registered as a help\n' +
    'bubble anchor. This event will be processed in the browser and may\n' +
    'e.g. cause a Tutorial or interactive test to advance to the next\n' +
    'step.\n' +
    'TODO(crbug.com/40243127): Figure out how to automatically send the\n' +
    'activated event when an anchor element is clicked.',
  'Sends a custom event to the ElementTracker system for the element\n' +
    'with id `anchorId`, which must have been registered as a help bubble\n' +
    'anchor. This event will be processed in the browser and may e.g.\n' +
    'cause a Tutorial or interactive test to advance to the next step.\n' +
    'The `customEvent` string should correspond to the name of a\n' +
    'ui::CustomElementEventType declared in the browser code.',
  'This event is emitted by the mojo router',
  'When the document scrolls or resizes, we need to update cached\n' +
    'positions of bubble anchors.',
  'Returns bounds of the anchor element',
  'This event is emitted by the mojo router',
  'Identifier not handled by this mixin.',
  'This event is emitted by the mojo router',
  'Identifier not handled by this mixin.',
  'This event is emitted by the mojo router',
  'This may be called with nativeId not handled by this mixin',
  'Ignore return value to silently fail',
  'This event is emitted by the mojo router.',
  'Identifier not handled by this mixin.',
  'Get the associated bubble and update status',
  'This event is emitted by the help-bubble component',
  'This event is emitted by the help-bubble component'
]
help_bubble_proxy.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
new_badge.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
new_badge.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview A badge that can be added to UI elements to indicate newness.\n' +
    'This SHOULD NOT BE USED by new features until the below follow up is done!\n' +
    'Unlike the Views version, this does not automatically disappear after the\n' +
    'feature is no longer new, so this must be done manually.\n' +
    'TODO(crbug.com/361169212): Follow up to integrate with auto-disappear code.'
]
constants.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Histogram buckets for UMA tracking of which type of result the History user\n' +
    'clicked.',
  'Histogram buckts for UMA tracking of Embeddings-related UMA actions. They\n' +
    'are defined here rather than in the history_embeddings component, because\n' +
    'History component itself needs to call this to provide a proper comparison\n' +
    "for users that don't have Embeddings enabled.",
  'Intermediate values are omitted because they are never used from WebUI.',
  'Unclicked query results that live for less than this amount of milliseconds',
  'are ignored from the metrics perspective. This is to account for the fact',
  'that new query results are fetched per user keystroke.'
]
browser_proxy.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file provides a singleton class that exposes the Mojo\n' +
    'handler interface used for bidirectional communication between the page and\n' +
    'the browser.'
]
cluster.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cluster.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file provides a custom element displaying a cluster.',
  'The cluster displayed by this element.',
  'The index of the cluster.',
  'Whether the cluster is in the side panel.',
  'The current query for which related clusters are requested and shown.',
  'The visible related searches.',
  'The label for the cluster. This property is actually unused. The side\n' +
    'effect of the compute function is used to insert the HTML elements for\n' +
    'highlighting into this.$.label element.',
  "The cluster's image URL in a form easily passed to cr-auto-img.\n" +
    'Also notifies the outer iron-list of a resize.',
  '============================================================================',
  'Properties',
  '============================================================================',
  '============================================================================',
  'Overridden methods',
  '============================================================================',
  "iron-list can't handle our size changing because of loading an image",
  "without an explicit event. But we also can't send this until we have",
  'updated the image property, so send it on the next idle.',
  'Iron-list re-assigns the `cluster` property to reuse existing elements',
  'as the user scrolls. Since this property can change the height of this',
  "element, we need to notify iron-list that this element's height may",
  'need to be re-calculated.',
  '============================================================================',
  'Event handlers',
  '============================================================================',
  'Clears selection on non alt mouse clicks. Need to wait for browser to\n' +
    '*  update the DOM fully.',
  "Pass event up with new detail of all this cluster's visits.",
  'The actual hiding is handled in clusters.ts. This is just a good place to',
  'record the metric.',
  'The actual removal is handled in clusters.ts. This is just a good place',
  'to record the metric.',
  '============================================================================',
  'Helper methods',
  '============================================================================',
  'Returns a promise that resolves when the browser is idle.',
  'Called with the original remove or hide params when the last accepted\n' +
    'request to browser to remove or hide visits succeeds. Since the same visit\n' +
    'may appear in multiple Clusters, all Clusters receive this callback in\n' +
    'order to get a chance to remove their matching visits.',
  "Remove the visit element if any of the removed visit's raw timestamps",
  'matches the canonical raw timestamp.',
  'If all the visits are removed, fire an event to also remove this',
  'cluster from the list of clusters.',
  'Returns the index of `visit` among the visits in the cluster. Returns -1\n' +
    'if the visit is not found in the cluster at all.'
]
cluster_menu.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cluster_menu.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file provides a custom element displaying an action menu.\n' +
    "It's meant to be flexible enough to be associated with either a specific\n" +
    'visit, or the whole cluster, or the top visit of unlabelled cluster.',
  'Usually this is true, but this can be false if deleting history is\n' +
    'prohibited by Enterprise policy.',
  'Whether the cluster is in the side panel.',
  '============================================================================',
  'Properties',
  '============================================================================',
  '============================================================================',
  'Event handlers',
  '============================================================================',
  '============================================================================',
  'Helper methods',
  '============================================================================'
]
clusters.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off'
]
clusters.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file provides a custom element that requests and shows\n' +
    'history clusters given a query. It handles loading more clusters using\n' +
    'infinite scrolling as well as deletion of visits within the clusters.',
  'Whether the clusters are in the side panel.',
  'The current query for which related clusters are requested and shown.',
  'These 3 properties are components of the browser response to a request\n' +
    'for the freshest clusters related to  a given query until an optional\n' +
    'given end time (or the present time).',
  'Boolean determining if spinner shows instead of load more button.',
  'The list of visits to be removed. A non-empty array indicates a pending\n' +
    'remove request to the browser.',
  '============================================================================',
  'Properties',
  '============================================================================',
  '============================================================================',
  'Overridden methods',
  '============================================================================',
  'Register a per-document singleton focus outline manager. Some of our',
  'child elements depend on the CSS classes set by this singleton.',
  '============================================================================',
  'Event handlers',
  '============================================================================',
  'Prevent sending further load-more requests until this one finishes.',
  'The returned promise resolves with whether the request succeeded in the',
  'browser. That value may be used to show a toast but is ignored for now.',
  'Allow remove requests again.',
  'Called with `event` received from a visit requesting to be hidden.',
  'Called with `event` received from visits requesting to be hidden.',
  'Called with `event` received from a cluster requesting to be removed from\n' +
    'the list when all its visits have been removed. Contains the cluster index.',
  'Called with `event` received from a visit requesting to be removed. `event`\n' +
    'may contain the related visits of the said visit, if applicable.',
  'Return early if there is a pending remove request.',
  'Bypass the confirmation dialog if removing one visit only.',
  'Called when the scrollable area has been scrolled nearly to the bottom.',
  "If some element of ours is keyboard-focused, don't automatically load",
  "more clusters. It loses the user's position and messes up screen",
  'readers. Let the user manually click the "Load More" button, if needed.',
  'We use :focus-visible here, because :focus is triggered by mouse focus',
  "too. And `FocusOutlineManager.visible()` is too primitive. It's true",
  'on page load, and whenever the user is typing in the searchbox.',
  '============================================================================',
  'Helper methods',
  '============================================================================',
  'Returns true and hides the button unless we actually have more results to\n' +
    "load. Note we don't actually hide this button based on keyboard-focus\n" +
    'state. This is because if the user is using the mouse, more clusters are\n' +
    'loaded before the user ever gets a chance to see this button.',
  'Returns whether the given index corresponds to the last cluster.',
  'Returns a promise that resolves when the browser is idle.',
  'Do not replace the existing result when `result` contains a partial',
  'set of clusters that should be appended to the existing ones.',
  'Scroll to the top when `result` contains a new set of clusters.',
  'Handle the "tall monitor" edge case: if the returned results are are',
  'shorter than the vertical viewport, the <history-clusters> element will',
  'not have a scrollbar, and the user will never be able to trigger the',
  'iron-scroll-threshold to request more results. Therefore, immediately',
  'request more results if there is no scrollbar to fill the viewport.',
  '',
  'This should happen quite rarely in the queryless state since the backend',
  'transparently tries to get at least ~100 visits to cluster.',
  '',
  'This is likely to happen very frequently in the search query state, since',
  'many clusters will not match the search query and will be discarded.',
  '',
  'Do this on browser idle to avoid jank and to give the DOM a chance to be',
  'updated with the results we just got.',
  'Called when an image has become available for `clusterIndex`.',
  'TODO(tommycli): Make deletions handle `clusterIndex` properly.',
  'Called when the user entered search query changes. Also used to fetch the\n' +
    'initial set of clusters when the page loads.',
  'Prevent sending further load-more requests until this one finishes.',
  'Called with the original remove params when the last accepted request to\n' +
    'browser to remove visits succeeds.',
  'Show the confirmation toast once done removing one visit only; since a',
  'confirmation dialog was not shown prior to the action.',
  'Called when History is deleted from a different tab.',
  'Just re-issue the existing query to "reload" the results and display',
  'the externally deleted History. It would be nice if we could save the',
  "user's scroll position, but History doesn't do that either.",
  'Called when the query is changed by the user externally.',
  "Don't directly change the query, but instead let the containing element",
  'update the searchbox UI. That in turn will cause this object to issue',
  'a new query to the backend.',
  'Debounce by 200ms.'
]
horizontal_carousel.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
horizontal_carousel.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file provides a custom element displaying a horizontal\n' +
    'carousel for the carousel elements.',
  '============================================================================',
  'Properties',
  '============================================================================',
  '============================================================================',
  'Overridden methods',
  '============================================================================',
  '============================================================================',
  'Event handlers',
  '============================================================================',
  '-2px as offsetLeft includes padding',
  '============================================================================',
  'Helper methods',
  '============================================================================',
  'On shrinking the window, the forward button should show up again.',
  'On expanding the window, the back and forward buttons should disappear.'
]
metrics_proxy.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file provides an abstraction layer for logging metrics for\n' +
    'mocking in tests.',
  'Returns the VisitType based on whether this is a visit to the default\n' +
    "search provider's results page."
]
page_favicon.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
page_favicon.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file provides a custom element displaying a page favicon.',
  'TODO(tommycli): This element should be renamed to reflect the reality that\n' +
    `it's used to both render the visit's "important image" if it exists, and\n` +
    "falls back to the favicon if it doesn't exist.",
  'Whether the cluster is in the side panel.',
  'The URL for which the favicon is shown.',
  'Whether this visit is known to sync already. Used for the purpose of\n' +
    'fetching higher quality favicons in that case.',
  'The URL of the representative image for the page. Not every page has\n' +
    'this defined, in which case we fallback to the favicon.',
  '============================================================================',
  'Properties',
  '============================================================================',
  '============================================================================',
  'Helper methods',
  '============================================================================',
  "Pages with a pre-set image URL or no favicon URL don't show the",
  'favicon.',
  '--favicon-size  16));',
  'Fetch the representative image for this page, if possible.',
  'We must reset imageUrl_ to null, because sometimes the Virtual DOM will',
  'reuse the same element for the infinite scrolling list.'
]
search_query.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
search_query.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file provides a custom element displaying a search query.',
  'The index of the search query pill.',
  'The search query to display.',
  '============================================================================',
  'Properties',
  '============================================================================',
  '============================================================================',
  'Event handlers',
  '============================================================================',
  'Notify the parent <history-cluster> element of this event.',
  'To record metrics.',
  'Disable ripple on Space.',
  'To be consistent with <history-list>, only handle Enter, and not Space.',
  'To record metrics.',
  'Ensure ripple is visible.',
  'Overridden from CrRippleMixin'
]
url_visit.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
url_visit.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file provides a custom element displaying a visit to a\n' +
    'page within a cluster. A visit features the page favicon, title, a timestamp,\n' +
    'as well as an action menu.',
  'Maps supported annotations to localized string identifiers.',
  'The current query for which related clusters are requested and shown.',
  'The visit to display.',
  'Whether this visit is within a persisted cluster.',
  'Usually this is true, but this can be false if deleting history is\n' +
    'prohibited by Enterprise policy.',
  'Whether the cluster is in the side panel.',
  '============================================================================',
  'Properties',
  '============================================================================',
  '============================================================================',
  'Event handlers',
  '============================================================================',
  'Notify the parent <history-cluster> element of this event.',
  'Ignore previously handled events.',
  'To record metrics.',
  "Because WebUI has a Blink-provided context menu that's suitable, and",
  'Side Panel always UIs always have a custom context menu.',
  'To be consistent with <history-list>, only handle Enter, and not Space.',
  'To record metrics.',
  'This can also be triggered from the hide visit icon, in which case the',
  'menu may not be rendered.',
  '============================================================================',
  'Helper methods',
  '============================================================================',
  'Disabling annotations until more appropriate design for annotations in',
  'the side panel is complete.'
]
utils.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Populates `container` with the highlighted `text` based on the mojom provided\n' +
    '`match_positions`. This function takes care of converting from the mojom\n' +
    'format to the format expected by search_highlight_utils.'
]
browser_proxy.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
filter_chips.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
history_embeddings.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Minimum time the loading state should be visible. This is to prevent the\n' +
    '* loading animation from flashing.',
  "When this is non-null, that means there's a SearchResult that's pending\n" +
    'metrics logging since this debouncer timestamp. The debouncing is needed\n' +
    'because queries are issued as the user types, and we want to skip logging\n' +
    'these trivial queries the user typed through.',
  'Flush any metrics or logs when the user leaves the page, such as',
  'closing the tab or navigating to another URL.',
  'Flush any metrics or logs when the component is removed, which can',
  'happen if there are no history embedding results left or if the user',
  'navigated to another history page.',
  'Flush any old results metrics before overwriting the member variable.',
  'Cache the amount of characters that the user typed for this query so',
  'that it can be sent with the quality log since `numCharsForQuery` will',
  'immediately change when a new query is performed.',
  'Artificial delay for UX. Note, timeout is always used for consistency,',
  "and this can affect test behavior, so don't change to direct calls",
  'even if no additional delay is necessary.',
  'Results are for an outdated query. Skip these results.',
  'Reset feedback state for new results.',
  'Flushes any pending query result metric or log waiting to be logged.',
  'Search results are fetched as the user is typing, so make sure that',
  'the last set of results were visible on the page for at least 2s. This is',
  'to avoid logging results that may have been transient as the user was',
  'still typing their full query.',
  'Record a metric if a user did not click any results.',
  "Clear this regardless if it was recorded or not, because we don't want",
  'to "try again" to record the same query.'
]
localized_link.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
localized_link.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'localized-link' takes a localized string that\n" +
    'contains up to one anchor tag, and labels the string contained within the\n' +
    'anchor tag with the entire localized string. The string should not be bound\n' +
    'by element tags. The string should not contain any elements other than the\n' +
    'single anchor tagged element that will be aria-labelledby the entire string.\n' +
    'Example: "lorem ipsum <a href="example.com">Learn More</a> dolor sit"\n' +
    'The "Learn More" will be aria-labelledby like so: "lorem ipsum Learn More\n' +
    'dolor sit". Meanwhile, "Lorem ipsum" and "dolor sit" will be aria-hidden.\n' +
    'This element also supports strings that do not contain anchor tags; in this\n' +
    'case, the element gracefully falls back to normal text. This can be useful\n' +
    'when the property is data-bound to a function which sometimes returns a\n' +
    'string with a link and sometimes returns a normal string.',
  'The localized string that contains up to one anchor tag, the text\n' +
    'within which will be aria-labelledby the entire localizedString.',
  'If provided, the URL that the anchor tag will point to. There is no\n' +
    'need to provide a linkUrl if the URL is embedded in the\n' +
    'localizedString.',
  'If true, localized link will be disabled.',
  'localizedString, with aria attributes and the optionally provided\nlink.',
  'Attaches aria attributes and optionally provided link to the provided\n' +
    'localizedString.\n' +
    '@return localizedString formatted with additional ids, spans, and an\n' +
    'aria-labelledby tag',
  'Text nodes should be aria-hidden and associated with an element id',
  'that the anchor element can be aria-labelledby.',
  'The single element node with anchor tags should also be aria-labelledby',
  'itself in-order with respect to the entire string.',
  'Only text and <a> nodes are allowed.',
  'In the event the provided localizedString contains only text nodes,',
  'populate the contents with the provided localizedString.',
  'trigger the click handler on middle-button clicks',
  'Stop propagation of the event, since it has already been handled by',
  'opening the link.',
  'Removes anchor tag from being targeted by chromeVox when link is\ndisabled.'
]
managed_dialog.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
managed_dialog.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'managed-dialog' is a dialog that is displayed when a user\n" +
    "interact with some UI features which are managed by the user's organization.",
  'Managed dialog title text.',
  'Managed dialog body text.'
]
managed_footnote.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
managed_footnote.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview UI element for indicating that this user is managed by\n' +
    'their organization. This component uses the |isManaged| boolean in\n' +
    'loadTimeData, and the |managedByOrg| i18n string.\n' +
    'If |isManaged| is false, this component is hidden. If |isManaged| is true, it\n' +
    'becomes visible.',
  'Whether the user is managed by their organization through enterprise\n' +
    'policies.',
  '<if expr="chromeos_ash">',
  'Whether the device should be indicated as managed rather than the\nbrowser.',
  '</if>',
  'The name of the icon to display in the footer.\n' +
    'Should only be read if isManaged_ is true.',
  '<if expr="chromeos_ash">',
  '</if>',
  '@return Message to display to the user.',
  '<if expr="chromeos_ash">',
  '</if>'
]
browser_proxy.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
most_visited.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on'
]
most_visited.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Returns null if URL is not valid.',
  'If true, renders MV tiles in a single row up to 10 columns wide.\n' +
    'If false, renders MV tiles in up to 2 rows up to 5 columns wide.',
  'If true, reflows tiles that are overflowing.',
  'When the tile icon background is dark, the icon color is white for\n' +
    'contrast. This can be used to determine the color of the tile hover as\n' +
    'well.',
  'Used to hide hover style and cr-icon-button of tiles while the tiles\n' +
    'are being reordered.',
  'Position of the mouse with respect to the top-left corner of the tile',
  'being dragged.',
  'Create a transparent 1x1 pixel image that will replace the default drag',
  `"ghost" image. The image is preloaded to ensure it's available when`,
  'dragging starts.',
  'This updates the most visited tiles every time the NTP tab gets',
  'activated.',
  'Adds "force-hover" class to the tile element positioned at `index`.',
  'This method is always called when the drag and drop was finished (even when\n' +
    'the drop was canceled). If the tiles were reordered successfully, there\n' +
    'should be a tile with the "dropped" class.\n' +
    '|reordering_| is not set to false when the tiles are reordered. The callers\n' +
    'will need to set it to false. This is necessary to handle a mouse drag\n' +
    'issue.',
  'Note that resetTilePosition has already been called on drop_.',
  'This method is called on "drop" events (i.e. when the user drops the tile\n' +
    'on a valid region.)\n' +
    'If a pointer is over a tile rect that is different from the one being\n' +
    'dragged, the dragging tile is moved to the new position. The reordering is\n' +
    'done in the DOM and by the |reorderMostVisitedTile()| call. This is done to\n' +
    'prevent flicking between the time when the tiles are moved back to their\n' +
    'original positions (by removing position absolute) and when the tiles are\n' +
    'updated via the |setMostVisitedInfo| handler.\n' +
    'We remove the "dragging" class in this method, and add "dropped" to\n' +
    'indicate that the dragged tile was successfully dropped.',
  'Remove the "dragging" class here to prevent flickering.',
  'Add "dropped" class so that we can skip disabling `reordering_` in',
  '`dragEnd_`.',
  'The positions of the tiles are updated based on the location of the\n' +
    'pointer.',
  'Sets up tile reordering for both drag and touch events. This method stores\n' +
    'the following to be used in |dragOver_()| and |dragEnd_()|.\n' +
    '|dragOffset_|: This is the mouse/touch offset with respect to the\n' +
    'top/left corner of the tile being dragged. It is used to update the\n' +
    'dragging tile location during the drag.\n' +
    '|reordering_|: This is property/attribute used to hide the hover style\n' +
    'and cr-icon-button of the tiles while they are being reordered.\n' +
    '|tileRects_|: This is the rects of the tiles before the drag start. It is\n' +
    'to determine which tile the pointer is over while dragging.',
  'Need to clear the tile that has a forced hover style for when the drag',
  'started without moving the mouse after the last drag/drop.',
  'Get all the rects first before setting the absolute positions.',
  '|dataTransfer| is null in tests.',
  'Replace the ghost image that appears when dragging with a transparent',
  '1x1 pixel image.',
  'When |reordering_| is true, the normal hover style is not shown.',
  'After a drop, the element that has hover is not correct. It will be',
  'after the mouse moves.',
  'Ignore previously handled events.',
  'Ignore previously handled events.',
  'Preconnect is intended to be run on mouse hover when prerender is',
  'enabled, so it is allowed regardless of prerenderOnHoverEnabled or',
  'prerenderOnPressEnabled.',
  'Ignore previously handled events.',
  'Ignore previously handled events.',
  'Do not show the toast buttons when a query tile is removed unless it is a',
  'custom link. Removal is not reversible for non custom link query tiles.',
  'showButtons=  this.customLinksEnabled_ || !isQueryTile);',
  'Move focus after the next render so that tileElements_ is updated.',
  "Check that 'shortcutMoreActions' is set to more than an empty string,",
  'since we do not use this text for third party NTP.'
]
window_proxy.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Abstracts built-in JS functions in order to mock in tests.'
]
browser_proxy.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview The browser proxy used to access `PageImageService` from WebUI.'
]
searchbox.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'A real search box that behaves just like the Omnibox.',
  '========================================================================',
  'Public properties',
  '========================================================================',
  'Whether the secondary side can be shown based on the feature state and\n' +
    'the width available to the dropdown.',
  'Whether the cr-searchbox-dropdown should be visible.',
  'Whether the secondary side was at any point available to be shown.',
  'Whether the secondary side is currently available to be shown.',
  'Whether the theme is dark.',
  'Whether the searchbox should match the searchbox.',
  'Whether the Google Lens icon should be visible in the searchbox.',
  '========================================================================',
  'Private properties',
  '========================================================================',
  'Whether user is deleting text in the input. Used to prevent the default\n' +
    'match from offering inline autocompletion.',
  "The 'Enter' keydown event that was ignored due to matches being stale.\n" +
    'Used to navigate to the default match once up-to-date matches arrive.',
  'Last state of the input (text and inline autocompletion). Updated\n' +
    'by the user input or by the currently selected autocomplete match.',
  'The last queried input text.',
  'True if user just pasted into the input. Used to prevent the default\n' +
    'match from offering inline autocompletion.',
  'Searchbox default icon (i.e., Google G icon or the search loupe).',
  'Whether the voice search icon should be visible in the searchbox.',
  'Whether the Google Lens icon should be visible in the searchbox.',
  'The currently selected match, if any.',
  'Index of the currently selected match, if any.\n' +
    'Do not modify this. Use <cr-searchbox-dropdown> API to change selection.',
  "The value of the input element's 'aria-live' attribute.",
  '============================================================================',
  'Callbacks',
  '============================================================================',
  'Select the default match and update the input.',
  'Navigate to the default up-to-date match if the user typed and pressed',
  "'Enter' too fast.",
  'Restore the selection and update the input.',
  'Remove the selection and update the input.',
  '============================================================================',
  'Event handlers',
  '============================================================================',
  'The header got focus. Unselect the selected match and clear the input.',
  "Only handle cut/copy when input has content and it's all selected.",
  "If a character has been typed, mark 'CharTyped'. Otherwise clear it. If",
  "'CharTyped' mark already exists, there's a pending typed character for",
  'which the results have not been painted yet. In that case, keep the',
  'earlier mark.',
  'TODO(crbug.com/40732045): Rather than disabling inline autocompletion',
  'when the input event is fired within a composition session, change the',
  'mechanism via which inline autocompletion is shown in the searchbox.',
  'Ignore this event if the input does not have any inline autocompletion.',
  'If the current input state (its value and selection) matches its last',
  'state (text and inline autocompletion) and the user types the next',
  'character in the inline autocompletion, stop the keydown event. Just move',
  'the selection and requery autocomplete. This is needed to avoid flicker.',
  "If 'CharTyped' mark already exists, there's a pending typed character",
  'for which the results have not been painted yet. In that case, keep the',
  'earlier mark.',
  'Query for zero-prefix matches if user is tabbing into an empty input',
  'and matches are not visible.',
  'Query current input if tabbing into input while thumbnail is showing',
  'and matches are not visible.',
  'Non-main (generally left) mouse clicks are ignored.',
  'Query autocomplete if dropdown is not visible',
  'Hide the matches and stop autocomplete only when the focus goes outside',
  'of the searchbox wrapper.',
  'Clear the input as well as the matches if the input was empty when',
  'the matches arrived.',
  'Stop autocomplete but leave (potentially stale) results and continue',
  'listening for key presses. These stale results should never be shown.',
  'They correspond to the potentially stale suggestion left in the',
  'searchbox when blurred. That stale result may be navigated to by',
  "focusing and pressing 'Enter'.",
  'Ignore previously handled events.',
  'Remove thumbnail, focus input, and notify browser.',
  "Clearing the autocomplete matches above doesn't allow for",
  'navigation directly after removing the thumbnail. Must manually',
  'query autocomplete after removing the thumbnail since the',
  "thumbnail isn't part of the text input.",
  'If the dropdown is visible, arrowing up and down unfocuses the',
  'thumbnail and follows standard arrow up/down behavior (selects',
  'the next/previous match).',
  'Backspacing or shift-tabbing the thumbnail results in the thumbnail',
  'being focused.',
  'ArrowUp/ArrowDown query autocomplete when matches are not visible.',
  'Do not handle the following keys if there are no matches available.',
  'Do not handle the following keys if inside an IME composition session.',
  "User typed and pressed 'Enter' too quickly. Ignore this for now",
  'because the matches are stale. Navigate to the default match (if',
  'one exists) once the up-to-date matches arrive.',
  'Do not handle the following keys if there are key modifiers.',
  "Clear the input as well as the matches when 'Escape' is pressed if the",
  'the first match is selected or there are no selected matches.',
  'Focus the selected match if focus is currently in the matches.',
  'Update the input.',
  '@param e Event containing index of the match that received focus.',
  'Select the match that received focus.',
  'Input selection (if any) likely drops due to focus change. Simply fill',
  'the input with the match and move the cursor to the end.',
  'Remove thumbnail, focus input, and notify browser.',
  "Clearing the autocomplete matches above doesn't allow for",
  'navigation directly after removing the thumbnail. Must manually',
  ... 11 more items
]
searchbox_action.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Displays an action associated with AutocompleteMatch (i.e. Clear',
  'Browsing History, etc.)',
  '========================================================================',
  'Public properties',
  '========================================================================',
  'Index of the action in the autocomplete result. Used to inform handler\n' +
    'of action that was selected.',
  'Index of the match in the autocomplete result. Used to inform embedder\n' +
    'of events such as click, keyboard events etc.',
  '========================================================================',
  'Private properties',
  '========================================================================',
  "Element's 'aria-label' attribute.",
  'Rendered hint from action.',
  'Rendered tooltip from action.',
  '============================================================================',
  'Helpers',
  '============================================================================'
]
searchbox_browser_proxy.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file provides a singleton class that exposes the Mojo\n' +
    'handler interface used for bidirectional communication between the\n' +
    '<cr-searchbox> or the <cr-searchbox-dropdown> and the browser.'
]
searchbox_dropdown.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "The '%' operator in JS returns negative numbers. This workaround avoids that.",
  'A dropdown element that contains autocomplete matches. Provides an API for',
  'the embedder (i.e., <cr-searchbox>) to change the selection.',
  '========================================================================',
  'Public properties',
  '========================================================================',
  'Whether the secondary side can be shown based on the feature state and\n' +
    'the width available to the dropdown.',
  'Whether the secondary side was at any point available to be shown.',
  'Whether the secondary side is currently available to be shown.',
  'Index of the selected match.',
  'Computed value for whether or not the dropdown should show the\n' +
    'secondary side. This depends on whether the parent has set\n' +
    '`canShowSecondarySide` to true and whether there are visible primary\n' +
    'matches.',
  '========================================================================',
  'Private properties',
  '========================================================================',
  'The list of suggestion group IDs whose matches should be hidden.',
  'The list of selectable match elements.',
  '============================================================================',
  'Public methods',
  '============================================================================',
  'Filters out secondary matches, if any, unless they can be shown.',
  'Unselects the currently selected match, if any.',
  'Focuses the selected match, if any.',
  'Selects the first match.',
  'Selects the match at the given index.',
  'TODO: Focus group header.',
  'If the updated selection is a new match, remove any remaining selection',
  'on the previously selected match.',
  'Selects the previous match with respect to the currently selected one.\n' +
    'Selects the last match if the first one or no match is currently selected.',
  'The value of -1 for |this.selectedMatchIndex| indicates no selection.',
  'Therefore subtract one from the maximum of its value and 0.',
  'Selects the last match.',
  'Selects the next match with respect to the currently selected one.\n' +
    'Selects the first match if the last one or no match is currently selected.',
  '============================================================================',
  'Event handlers',
  '============================================================================',
  'Tell the backend to toggle visibility of the given suggestion group ID.',
  'Hide/Show matches with the given suggestion group ID.',
  'Update the list of selectable match elements.',
  '============================================================================',
  'Helpers',
  '============================================================================',
  '@returns The unique suggestion group IDs that belong to the given side type\n' +
    'while preserving the order in which they appear in the list of matches.',
  '@returns Whether matches with the given suggestion group ID should be\n' +
    'hidden.',
  '@returns Whether the given suggestion group ID has a header.',
  '@returns The header for the given suggestion group ID, if any.',
  '@returns Index of the match in the autocomplete result. Passed to the match\n' +
    'so it knows its position in the list of matches.',
  '@returns The list of visible matches that belong to the given suggestion\n' +
    'group ID.',
  '@returns The list of side types to show.',
  '@returns The side type for the given suggestion group ID.',
  '@returns A11y label for suggestion group show/hide toggle button.',
  '@returns Icon name for suggestion group show/hide toggle button.',
  '@returns Tooltip for suggestion group show/hide toggle button.',
  'Parent prohibits showing secondary side.',
  'Not ready yet as dropdown has received results but has not yet',
  'determined which groups are hidden.',
  'Only show secondary side if there are primary matches visible.'
]
searchbox_icon.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The LHS icon. Used on autocomplete matches as well as the searchbox input to',
  'render icons, favicons, and entity images.',
  '========================================================================',
  'Public properties',
  '========================================================================',
  'Used as a background image on #icon if non-empty.',
  'The default icon to show when no match is selected and/or for\n' +
    'non-navigation matches. Only set in the context of the searchbox input.',
  'Whether icon should have a background.',
  'Whether icon is in searchbox or not. Used to prevent\n' +
    'the match icon of rich suggestions from showing in the context of the\n' +
    'searchbox input.',
  'Whether icon belongs to an answer or not. Used to prevent\n' +
    'the match image from taking size of container.',
  'Whether suggestion answer is of answer type weather. Weather answers\n' +
    "don't have the same background as other suggestion answers.",
  'Used as a mask image on #icon if |backgroundImage| is empty.',
  '========================================================================',
  'Private properties',
  '========================================================================',
  'Flag indicating whether or not an image is loading. This is used to\n' +
    'show a placeholder color while the image is loading.',
  '============================================================================',
  'Helpers',
  '============================================================================',
  "remoteIconUrlForUma=  '', /* size= */ 16,",
  'forceLightMode=  true);',
  'The google_g.svg is a fully colored icon, so it needs to be displayed',
  'as a background image as mask images will mask the colors.',
  'The following icons should not use the GM3 foreground color',
  'TODO(niharm): Refactor logic in C++ and send via mojom in',
  '"chrome/browser/ui/webui/searchbox/searchbox_handler.cc".',
  'Zero-prefix matches come with the data URI content in |match.imageUrl|.',
  'If the match has an image dominant color, show that color in place of the',
  'image until it loads. This helps the image appear to load more smoothly.',
  '.25 opacity matching c/b/u/views/omnibox/omnibox_match_cell_view.cc.',
  'If imageSrc_ changes to a new truthy value, a new image is being loaded.',
  'All pedals and AiS except weather should be have a background that',
  'matches theme.',
  'TODO(niharm): Refactor logic in C++ and send via mojom in',
  '"chrome/browser/ui/webui/searchbox/searchbox_handler.cc".'
]
searchbox_match.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'Bitmap used to decode the value of ACMatchClassification style\n' +
    'field.\n' +
    'See components/omnibox/browser/autocomplete_match.h.',
  'clang-format on',
  'Displays an autocomplete match.',
  '========================================================================',
  'Public properties',
  '========================================================================',
  "Element's 'aria-label' attribute.",
  'Whether the match features an image (as opposed to an icon or favicon).',
  'Whether the match is an entity suggestion (with or without an image).',
  'Whether the match should be rendered in a two-row layout. Currently\n' +
    'limited to matches that feature an image, calculator, and answers.',
  'Index of the match in the autocomplete result. Used to inform embedder\n' +
    'of events such as deletion, click, etc.',
  '========================================================================',
  'Private properties',
  '========================================================================',
  'Rendered match contents based on autocomplete provided styling.',
  'Rendered match description based on autocomplete provided styling.',
  "Remove button's 'aria-label' attribute.",
  'Used to separate the contents from the description.',
  'Rendered tail suggest common prefix.',
  '============================================================================',
  'Event handlers',
  '============================================================================',
  'containing index of the action that was removed as well as modifier key\n' +
    'presses.',
  'Only handle main (generally left) and middle button presses.',
  'are_matches_showing  true, e.button || 0, e.altKey, e.ctrlKey,',
  'Only handle main (generally left) button presses.',
  '============================================================================',
  'Helpers',
  '============================================================================',
  '@returns Index of the action in the autocomplete match. Passed to the\n' +
    'action so it knows its position in the list of actions.',
  '`match.answer.firstLine` is generated by appending an optional additional',
  "text from the answer's first line to `match.contents`, making the latter",
  'a prefix of the former. Thus `match.answer.firstLine` can be rendered',
  'using the markup in `match.contentsClass` which contains positions in',
  '`match.contents` and the markup to be applied to those positions.',
  'See //chrome/browser/ui/webui/searchbox/searchbox_handler.cc',
  'Replace last space with non breaking space since spans collapse',
  'trailing white spaces and the prefix always ends with a white space.',
  'Decodes the AcMatchClassificationStyle enteries encoded in the given\n' +
    'ACMatchClassification style field, maps each entry to a CSS\n' +
    'class and returns them.',
  'Renders |text| based on the given ACMatchClassification(s)\n' +
    "Each classification contains an 'offset' and an encoded list of styles for\n" +
    "styling a substring starting with the 'offset' and ending with the next.\n" +
    '@return A <span> with <span> children for each styled substring.'
]
searchbox_thumbnail.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Displays a thumbnail in the searchbox input.',
  '========================================================================',
  'Private properties',
  '========================================================================',
  '============================================================================',
  'Event handlers',
  '============================================================================'
]
utils.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Converts a String16 to a JavaScript String.',
  'Converts a JavaScript String to a String16.',
  'Converts a time ticks in milliseconds to TimeTicks.\n' +
    '@param timeTicks time ticks in milliseconds',
  'Converts a side type to a string to be used in CSS.',
  'Converts a render type to a string to be used in CSS.'
]
browser_proxy.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview A helper object used by the cr-theme-color-picker\n' +
    'component to interact with the browser.'
]
check_mark_wrapper.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
check_mark_wrapper.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
color_utils.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
theme_color.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
theme_color.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
theme_color_picker.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on'
]
theme_color_picker.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'We only change the custom color when theme updates to a new custom color',
  'so that the picked color persists while clicking on other color circles.'
]
theme_hue_slider_dialog.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on'
]
theme_hue_slider_dialog.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Compute a CSS linear-gradient that starts with minHue and ends with maxHue.',
  "Linear gradient for the background of the slider's track.",
  'The committed value of the slider.',
  'The hue value to show in the knob during drag.',
  'By default, align the dialog below the anchor. If the window is too',
  'small, show it above the anchor.'
]
cr_a11y_announcer.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The CrA11yAnnouncerElement is a visually hidden element that reads out\n' +
    'messages to a screen reader. This is preferred over IronA11yAnnouncer.\n' +
    '@fileoverview',
  '150ms seems to be around the minimum time required for screen readers to\n' +
    'read out consecutively queued messages.',
  'A map of an HTML element to its corresponding CrA11yAnnouncerElement. There\n' +
    'may be multiple CrA11yAnnouncerElements on a page, especially for cases in\n' +
    "which the DocumentElement's CrA11yAnnouncerElement becomes hidden or\n" +
    'deactivated (eg. when a modal dialog causes the CrA11yAnnouncerElement to\n' +
    'become inaccessible).',
  '<if expr="is_macosx">',
  'VoiceOver on Mac does not seem to consistently read out the contents of',
  'a static alert element. Toggling the role of alert seems to force VO',
  'to consistently read out the messages.',
  '</if>',
  'Dispatch a custom event to allow consumers to know when certain alerts',
  'have been sent to the screen reader.'
]
cr_action_menu.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_action_menu.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Returns the point to start along the X or Y axis given a start and end\n' +
    'point to anchor to, the length of the target and the direction to anchor\n' +
    'in. If honoring the anchor would force the menu outside of min/max, this\n' +
    'will ignore the anchor position and try to keep the menu within min/max.',
  'Accessibility text of the menu. Should be something along the lines of',
  '"actions", or "more actions".',
  'Setting this flag will make the menu listen for content size changes',
  'and reposition to its anchor accordingly.',
  'Descriptor of the menu. Should be something along the lines of "menu"',
  'Exposing internal <dialog> elements for tests.',
  "Ignore any 'close' events not fired directly by the <dialog> element.",
  "Catch and re-fire the 'close' event such that it bubbles across Shadow",
  'DOM v1.',
  "If a menu item has focus, don't change focus or close menu on 'Enter'.",
  "Removing 'resize' and 'popstate' listeners when dialog is closed.",
  'Shows the menu anchored to the given element.',
  'Scroll the anchor element into view so that the bounding rect will be',
  'accurate for where the menu should be shown.',
  'When an action menu is positioned after the end of an element, the',
  'action menu can appear too far away from the anchor element, typically',
  'because anchors tend to have padding. So we offset the height a bit',
  'so the menu shows up slightly closer to the content of anchor.',
  'Default to anchoring towards the left.',
  'Shows the menu anchored to the given box. The anchor alignment is\n' +
    'specified as an X and Y alignment which represents a point in the anchor\n' +
    'where the menu will align to, which can have the menu either before or\n' +
    'after the given point in each axis. Center alignment places the center of\n' +
    'the menu in line with the center of the anchor. Coordinates are relative to\n' +
    'the top-left of the viewport.\n' +
    'y-start\n' +
    '_____________\n' +
    '|           |\n' +
    '|           |\n' +
    '|   CENTER  |\n' +
    'x-start |     x     | x-end\n' +
    '|           |\n' +
    '|anchor box |\n' +
    '|___________|\n' +
    'y-end\n' +
    'For example, aligning the menu to the inside of the top-right edge of\n' +
    'the anchor, extending towards the bottom-left would use a alignment of\n' +
    '(BEFORE_END, AFTER_START), whereas centering the menu below the bottom\n' +
    'edge of the anchor would use (CENTER, AFTER_END).',
  'Save the scroll position of the viewport.',
  "Reset position so that layout isn't affected by the previous position,",
  'and so that the dialog is positioned at the top-start corner of the',
  'document.',
  'Restore the scroll position.',
  'Focus the first selectable item.',
  'Wait for the next animation frame for the dialog to become visible.',
  'Position the dialog using the coordinates in config. Coordinates are\n' +
    'relative to the top-left of the viewport when scrolled to (0, 0).',
  'Flip the X anchor in RTL.'
]
cr_auto_img.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview <cr-auto-img> is a specialized <img> that facilitates embedding\n' +
    'images into WebUIs via its auto-src attribute. <cr-auto-img> automatically\n' +
    'determines if the image is local (e.g. data: or chrome://) or external (e.g.\n' +
    'https://), and embeds the image directly or via the chrome://image data\n' +
    'source accordingly. Usage:\n' +
    '1. In C++ register |SanitizedImageSource| for your WebUI.\n' +
    '2. In HTML instantiate\n' +
    '<img is="cr-auto-img" auto-src="https://foo.com/bar.png">\n' +
    'If your image URL points to Google Photos storage, meaning it needs an\n' +
    'auth token, you can use the is-google-photos attribute as follows:\n' +
    '<img is="cr-auto-img" auto-src="https://foo.com/bar.png"\n' +
    'is-google-photos>\n' +
    'If you want the image to reset to an empty state when auto-src changes\n' +
    'and the new image is still loading, set the clear-src attribute:\n' +
    '<img is="cr-auto-img" auto-src="[[calculateSrc()]]" clear-src>\n' +
    'If you want your image to be always encoded as a static image (even if\n' +
    'the source image is animated), set the static-encode attribute:\n' +
    '<img is="cr-auto-img" auto-src="https://foo.com/bar.png"\n' +
    'static-encode>\n' +
    'Static images are encoded as PNG by default. If you want your image to\n' +
    'be encoded as a Webp image, set the encode-type attribute to "webp".\n' +
    '<img is="cr-auto-img" auto-src="https://foo.com/bar.png"\n' +
    'static-encode encode-type="webp">\n' +
    'NOTE: Since <cr-auto-img> may use the chrome://image data source some images\n' +
    'may be transcoded to PNG.',
  'Changes to |IS_GOOGLE_PHOTOS| are only interesting when the attribute is',
  'being added or removed.',
  'Remove the src attribute so that the old image is not shown while the',
  'new one is loading.',
  'Loading chrome-untrusted:// directly kills the renderer process.',
  'Loading chrome-untrusted:// via the chrome://image data source',
  'results in a broken image.'
]
cr_button.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_button.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'cr-button' is a button which displays slotted elements. It can\n" +
    'be interacted with like a normal button using click as well as space and\n' +
    "enter to effectively click the button and fire a 'click' event. It can also\n" +
    'style an icon inside of the button with the [has-icon] attribute.',
  'It is possible to activate a tab when the space key is pressed down. When\n' +
    'this element has focus, the keyup event for the space key should not\n' +
    "perform a 'click'. |spaceKeyDown_| tracks when a space pressed and\n" +
    "handled by this element. Space keyup will only result in a 'click' when\n" +
    '|spaceKeyDown_| is true. |spaceKeyDown_| is set to false when element\n' +
    'loses focus.',
  'Must be added in constructor so that stopImmediatePropagation() works as',
  'expected.',
  'If a keyup event is never fired (e.g. after keydown the focus is moved to',
  'another element), we need to clear the ripple here. 100ms delay was',
  'chosen manually as a good time period for the ripple to be visible.',
  'Delay was chosen manually as a good time period for the ripple to be',
  'visible.'
]
cr_checkbox.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_checkbox.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'cr-checkbox' is a component similar to native checkbox. It\n" +
    "fires a 'change' event *only* when its state changes as a result of a user\n" +
    'interaction. By default it assumes there will be child(ren) passed in to be\n' +
    'used as labels. If no label will be provided, a .no-label class should be\n' +
    'added to hide the spacing between the checkbox and the label container.\n' +
    'If a label is provided, it will be shown by default after the checkbox. A\n' +
    '.label-first CSS class can be added to show the label before the checkbox.\n' +
    'List of customizable styles:\n' +
    '--cr-checkbox-border-size\n' +
    '--cr-checkbox-checked-box-background-color\n' +
    '--cr-checkbox-checked-box-color\n' +
    '--cr-checkbox-label-color\n' +
    '--cr-checkbox-label-padding-start\n' +
    '--cr-checkbox-mark-color\n' +
    '--cr-checkbox-ripple-checked-color\n' +
    '--cr-checkbox-ripple-size\n' +
    '--cr-checkbox-ripple-unchecked-color\n' +
    '--cr-checkbox-size\n' +
    '--cr-checkbox-unchecked-box-color',
  "During initialization, don't alter tabIndex if not disabled. During",
  "subsequent 'disabled' changes, always update tabIndex.",
  ":host shouldn't have a tabindex because it's set on #checkbox.",
  'Prevent |click| event from bubbling. It can cause parents of this',
  'elements to erroneously re-toggle this control.',
  'Overridden from CrRippleMixin'
]
cr_chip.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_chip.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Overridden from CrRippleMixin'
]
cr_collapse.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_collapse.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Focus the current collapse.',
  'Force layout to ensure transition will go. Set maxHeight to a px',
  'value and scrollTop to itself.',
  'Set the final size.',
  "If it won't animate, set correct classes. Otherwise these are set in",
  'onTransitionEnd_().'
]
cr_container_shadow_mixin.ts [
  'Copyright 2017 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview CrContainerShadowMixin holds logic for showing a drop shadow\n' +
    'near the top of a container element, when the content has scrolled. Inherits\n' +
    'from CrScrollObserverMixin.\n' +
    'Elements using this mixin are expected to define a #container element which\n' +
    'is the element being scrolled.\n' +
    'If the #container element has a show-bottom-shadow attribute, a drop shadow\n' +
    'will also be shown near the bottom of the container element, when there\n' +
    'is additional content to scroll to. Examples:\n' +
    'For both top and bottom shadows:\n' +
    '<div id="container" show-bottom-shadow>...</div>\n' +
    'For top shadow only:\n' +
    '<div id="container">...</div>\n' +
    'The mixin will take care of inserting an element with ID\n' +
    "'cr-container-shadow-top' which holds the drop shadow effect, and,\n" +
    "optionally, an element with ID 'cr-container-shadow-bottom' which holds the\n" +
    'same effect. Note that the show-bottom-shadow attribute is inspected only\n' +
    'during connectedCallback(), and any changes that occur after that point\n' +
    'will not be respected.\n' +
    'Clients should either use the existing shared styling in\n' +
    "cr_shared_style.css, '#cr-container-shadow-[top/bottom]' and\n" +
    "'#cr-container-shadow-top:has(+ #container.can-scroll:not(.scrolled-to-top))'\n" +
    "and '#container.can-scroll:not(.scrolled-to-bottom) +\n" +
    "#cr-container-shadow-bottom'\n" +
    'or define their own styles.',
  'The element holding the drop shadow effect to be shown.',
  'Toggles the force-shadow class. If |enabled| is true, shadows will be\n' +
    'forced to show regardless of scroll state when using the shared\n' +
    'styles in cr_shared_style.css. If false, shadows can be shown using\n' +
    'classes set by CrScrollObserverMixin.'
]
cr_container_shadow_mixin_lit.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview CrContainerShadowMixinLit holds logic for showing a drop shadow\n' +
    'near the top of a container element, when the content has scrolled. Inherits\n' +
    'from CrScrollObserverMixinLit.\n' +
    'Lit version of CrContainerShadowMixin.\n' +
    'Elements using this mixin are expected to define a #container element which\n' +
    'is the element being scrolled.\n' +
    'If the #container element has a show-bottom-shadow attribute, a drop shadow\n' +
    'will also be shown near the bottom of the container element, when there\n' +
    'is additional content to scroll to. Examples:\n' +
    'For both top and bottom shadows:\n' +
    '<div id="container" show-bottom-shadow>...</div>\n' +
    'For top shadow only:\n' +
    '<div id="container">...</div>\n' +
    'The mixin will take care of inserting an element with ID\n' +
    "'cr-container-shadow-top' which holds the drop shadow effect, and,\n" +
    "optionally, an element with ID 'cr-container-shadow-bottom' which holds the\n" +
    'same effect. Note that the show-bottom-shadow attribute is inspected only\n' +
    'during connectedCallback() and any changes that occur after that point will\n' +
    'not be respected.\n' +
    'Clients should either use the existing shared styling in\n' +
    "cr_shared_style.css, '#cr-container-shadow-[top/bottom]' and\n" +
    "'#cr-container-shadow-top:has(+ #container.can-scroll:not(.scrolled-to-top))'\n" +
    "and '#container.can-scroll:not(.scrolled-to-bottom) +\n" +
    "#cr-container-shadow-bottom'\n" +
    'or define their own styles.',
  'The element holding the drop shadow effect to be shown.',
  'Toggles the force-shadow class. If |enabled| is true, shadows will be\n' +
    'forced to show regardless of scroll state when using the shared styles\n' +
    'in cr_shared_style.css. If false, shadows can be shown using classes set\n' +
    'by CrScrollObserverMixin.'
]
cr_dialog.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on'
]
cr_dialog.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'cr-dialog' is a component for showing a modal dialog. If the\n" +
    "dialog is closed via close(), a 'close' event is fired. If the dialog is\n" +
    "canceled via cancel(), a 'cancel' event is fired followed by a 'close' event.\n" +
    'Additionally clients can get a reference to the internal native <dialog> via\n' +
    'calling getNative() and inspecting the |returnValue| property inside\n' +
    "the 'close' event listener to determine whether it was canceled or just\n" +
    'closed, where a truthy value means success, and a falsy value means it was\n' +
    'canceled.\n' +
    'Note that <cr-dialog> wrapper itself always has 0x0 dimensions, and\n' +
    'specifying width/height on <cr-dialog> directly will have no effect on the\n' +
    'internal native <dialog>. Instead use cr-dialog::part(dialog) to specify\n' +
    'width/height (as well as other available mixins to style other parts of the\n' +
    'dialog contents).',
  'Alt-text for the dialog close button.',
  "True if the dialog should remain open on 'popstate' events. This is\n" +
    'used for navigable dialogs that have their separate navigation handling\n' +
    'code.',
  "True if the dialog should ignore 'Enter' keypresses.",
  "True if the dialog should consume 'keydown' events. If ignoreEnterKey\n" +
    "is true, 'Enter' key won't be consumed.",
  'True if the dialog should not be able to be cancelled, which will\n' +
    "prevent 'Escape' key presses from closing the dialog.",
  "True if dialog should show the 'X' close button.",
  'Text for the aria description.',
  'If the active history entry changes (i.e. user clicks back button),',
  'all open dialogs should be cancelled.',
  "In some cases dialog already has the 'open' attribute by this point.",
  "Sometimes <body> is key event's target and in that case the event",
  'will bypass cr-dialog. We should consume those events too in order to',
  'behave modally. This prevents accidentally triggering keyboard commands.',
  'Force initial render, so that any inner elements with [autofocus] are',
  'picked up by the browser.',
  'Set the title of the dialog for a11y reader.\n' +
    '@param title Title of the dialog.',
  'Because the dialog may have a default Enter key handler, prevent',
  'keypress events from bubbling up from this element.',
  "Ignore any 'close' events not fired directly by the <dialog> element.",
  "Catch and re-fire the 'close' event such that it bubbles across Shadow",
  'DOM v1.',
  "Ignore any 'cancel' events not fired directly by the <dialog> element.",
  "When the dialog is dismissed using the 'Esc' key, need to manually update",
  'the |open| property (since close() is not called).',
  "Catch and re-fire the native 'cancel' event such that it bubbles across",
  'Shadow DOM v1.',
  'Expose the inner native <dialog> for some rare cases where it needs to be\n' +
    'directly accessed (for example to programmatically setheight/width, which\n' +
    'would not work on the wrapper).',
  'Accept Enter keys from either the dialog itself, or a child cr-input,',
  'considering that the event may have been retargeted, for example if the',
  'cr-input is nested inside another element. Also exclude inputs of type',
  "'search', since hitting 'Enter' on a search field most likely intends to",
  'trigger searching.',
  'Stop propagation to behave modally.',
  'Only show pulse animation if user left-clicked outside of the dialog',
  'contents.',
  'Prevent any text from being selected within the dialog when clicking in',
  'the backdrop area.'
]
cr_drawer.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_drawer.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "The alignment of the drawer on the screen ('ltr' or 'rtl').",
  'Toggles the drawer open and close.',
  'Shows drawer and slides it into view.',
  'Slides the drawer away, then closes it after the transition has ended. It\n' +
    'is up to the owner of this component to differentiate between close and\n' +
    'cancel.',
  'Stop propagation of a tap event inside the container. This will allow\n' +
    '|onDialogClick_| to only be called when clicked outside the container.',
  'Close the dialog when tapped outside the container.',
  'Overrides the default cancel machanism to allow for a close animation.',
  "Catch and re-fire the 'close' event such that it bubbles across Shadow",
  'DOM v1.'
]
cr_expand_button.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_expand_button.ts [
  'Copyright 2015 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview\n' +
    "'cr-expand-button' is a chrome-specific wrapper around a button that toggles\n" +
    'between an opened (expanded) and closed state.',
  'If true, the button is in the expanded state and will show the icon\n' +
    'specified in the `collapseIcon` property. If false, the button shows\n' +
    'the icon specified in the `expandIcon` property.',
  'If true, the button will be disabled and grayed out.',
  'A11y text descriptor for this control.',
  'Prevent |click| event from bubbling. It can cause parents of this',
  'elements to erroneously re-toggle this control.'
]
cr_feedback_buttons.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_feedback_buttons.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "Wait for the element's DOM to be updated before dispatching",
  'selected-option-changed event.'
]
cr_grid.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_grid.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Displays children in a two-dimensional grid and supports focusing children',
  'with arrow keys.',
  'Ignores keys likely to be browse shortcuts (like Alt+Left for',
  'back).',
  'Handle cases where we move to an empty space in a non-full bottom row',
  'and have to jump to the next row.'
]
cr_icon.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The name of the icon to use. The name should be of the form:\n' +
    '`iconset_name:icon_name`.'
]
cr_iconset.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_iconset.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The name of the iconset.',
  'The size of an individual icon. Note that icons must be square.',
  'Applies an icon to the given element.\n' +
    "An svg icon is prepended to the element's shadowRoot, which should always\n" +
    'exist.\n' +
    '@param element Element to which the icon is applied.\n' +
    '@param iconName Name of the icon to apply.\n' +
    '@return The svg element which renders the icon.',
  'Remove old svg element',
  'install new svg element',
  'Add special class so we can identify it in remove.',
  'insert svg element into shadow root',
  'Produce installable clone of the SVG element matching `id` in this\n' +
    'iconset, or null if there is no matching element.\n' +
    '@param iconName Name of the icon to apply.',
  'Remove an icon from the given element by undoing the changes effected\n' +
    'by `applyIcon`.',
  'Remove old svg element',
  'Produce installable clone of the SVG element matching `id` in this\n' +
    'iconset, or `undefined` if there is no matching element.\n' +
    'Returns an installable clone of the SVG element matching `id` or null if\n' +
    'no such element exists.'
]
iconset_map.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Common interface implemented by CrIconsetElement and IronIconset.',
  "Firstly add any 'iron-iconset-svg' instances that have possibly already",
  'been added by the time this instance is created.',
  "Secondly, detect any new 'iron-iconset-svg' instances and add them to the",
  'map. This is so that every iconset in the codebase does not need to',
  'migrate to CrIconset at once. Remove once iron-iconset is no longer used.',
  'Remove this method once iron-iconset is no longer used.'
]
cr_icon_button.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_icon_button.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'cr-icon-button' is a button which displays an icon with a\n" +
    'ripple. It can be interacted with like a normal button using click as well as\n' +
    "space and enter to effectively click the button and fire a 'click' event.\n" +
    'There are two sources to icons:\n' +
    'Option 1: CSS classes defined in cr_icons.css.\n' +
    'Option 2: SVG icons defined in a cr-iconset or iron-iconset-svg,\n' +
    'with the name passed to cr-icon-button via the |ironIcon| property.\n' +
    'Example of using CSS classes:\n' +
    'In the .html.ts template file (if using a .html template file instead, the\n' +
    'import should be in the corresponding .ts file):\n' +
    "import 'chrome://resources/cr_elements/cr_icons.css.js';\n" +
    'export function getHtml() {\n' +
    'return html`\n' +
    '<cr-icon-button class="icon-class-name"></cr-icon-button>`;\n' +
    '}\n' +
    'When an icon is specified using a class, the expectation is the\n' +
    'class will set an image to the --cr-icon-image variable.\n' +
    'Example of using a cr-iconset to supply an icon via the iron-icon parameter:\n' +
    'In the .html.ts template file (if using a .html template file instead, the\n' +
    'import should be in the corresponding .ts file):\n' +
    "import 'chrome://resources/cr_elements/icons_lit.html.js';\n" +
    'export function getHtml() {\n' +
    'return html`\n' +
    '<cr-icon-button iron-icon="cr:icon-key"></cr-icon-button>`;\n' +
    '}\n' +
    'The color of the icon can be overridden using CSS variables. When using\n' +
    "the ironIcon property to populate cr-icon-button's internal <cr-icon>, the\n" +
    'following CSS variables for fill and stroke can be overridden for cr-icon:\n' +
    '--iron-icon-button-fill-color\n' +
    '--iron-icon-button-stroke-color\n' +
    'When not using the ironIcon property, cr-icon-button will not create a\n' +
    '<cr-icon>, so the cr-icon related CSS variables above are ignored.\n' +
    'When using the ironIcon property, more than one icon can be specified by\n' +
    'setting the |ironIcon| property to a comma-delimited list of keys.',
  'It is possible to activate a tab when the space key is pressed down. When\n' +
    'this element has focus, the keyup event for the space key should not\n' +
    "perform a 'click'. |spaceKeyDown_| tracks when a space pressed and\n" +
    "handled by this element. Space keyup will only result in a 'click' when\n" +
    '|spaceKeyDown_| is true. |spaceKeyDown_| is set to false when element\n' +
    'loses focus.'
]
cr_infinite_list.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'cr-infinite-list' is a thin wrapper around 'cr-lazy-list' that\n" +
    "emulates some of the behavior of 'iron-list'.",
  'Render items into light DOM using the client provided template',
  'Unlike cr-lazy-list, cr-infinite-list provides a tabindex parameter for',
  'clients as is provided by iron-list. Like iron-list, cr-infinite-list will',
  'pass 0 for this parameter if the list item should be keyboard focusable,',
  'and -1 otherwise.',
  'Handles key events when list item elements have focus.',
  "Do not interfere with any parent component that manages 'shift' related",
  'key events.',
  'Identify the new focused index.'
]
cr_input.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_input.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Input types supported by cr-input.',
  "@fileoverview 'cr-input' is a component similar to native input.\n" +
    'Native input attributes that are currently supported by cr-inputs are:\n' +
    'autofocus\n' +
    'disabled\n' +
    'max (only applicable when type="number")\n' +
    'min (only applicable when type="number")\n' +
    'maxlength\n' +
    'minlength\n' +
    'pattern\n' +
    'placeholder\n' +
    'readonly\n' +
    'required\n' +
    'tabindex (set through input-tabindex)\n' +
    'type (see |SUPPORTED_INPUT_TYPES| above)\n' +
    'value\n' +
    'Additional attributes that you can use with cr-input:\n' +
    'label\n' +
    'auto-validate - triggers validation based on |pattern| and |required|,\n' +
    'whenever |value| changes.\n' +
    'error-message - message displayed under the input when |invalid| is true.\n' +
    'invalid\n' +
    'You may pass an element into cr-input via [slot="suffix"] to be vertically\n' +
    'center-aligned with the input field, regardless of position of the label and\n' +
    'error-message. Example:\n' +
    '<cr-input>\n' +
    '<cr-button slot="suffix"></cr-button>\n' +
    '</cr-input>',
  'This is strictly used internally for styling, do not attempt to use\n' +
    'this to set focus.',
  'Use inputTabindex instead.',
  "Don't allow null or undefined as these will render in the input.",
  `cr-input cannot use Lit's "nothing" in the HTML template; this breaks`,
  "the underlying native input's auto validation if |required| is set.",
  "CrInput only supports 0 or -1 values for the input's tabindex to allow",
  'having the input in tab order or not. Values greater than 0 will not',
  'work as the shadow root encapsulates tabindices.',
  "Check that the 'type' is one of the supported types.",
  'Focuses the input element.\n' +
    'TODO(crbug.com/40593040): Replace this with focus() after resolving the text\n' +
    'selection issue described in onFocus_().\n' +
    '@return Whether the <input> element was focused.',
  "'change' event fires when <input> value changes and user presses 'Enter'.\n" +
    "This function helps propagate it to host since change events don't\n" +
    'propagate across Shadow DOM boundary by default.',
  "Ensure that |value| has been updated before re-firing 'change'.",
  'On VoiceOver role="alert" is not consistently announced when its',
  'content changes. Adding and removing the |role| attribute every time',
  'there is an error, triggers VoiceOver to consistently announce.',
  'Selects the text within the input. If no parameters are passed, it will\n' +
    'select the entire string. Either no params or both params should be passed.\n' +
    'Publicly, this function should be used instead of inputElement.select() or\n' +
    'manipulating inputElement.selectionStart/selectionEnd because the order of\n' +
    'execution between focus() and select() is sensitive.',
  "Can't just pass one param.",
  'Note: In order to preserve it as a synchronous API, validate() forces 2',
  'rendering updates to cr-input. This allows this function to be used to',
  'synchronously determine the validity of a <cr-input>, however, as a result',
  'of these 2 forced updates it may result in slower performance. validate()',
  'should not be called internally from within cr_input.ts, and should only',
  'be called where necessary from clients.',
  'Ensure that any changes to |value| have propagated to the native <input>.',
  'Perform update again to ensure change propagates via 2 way binding to',
  'Polymer parent before returning.'
]
cr_lazy_list.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'cr-lazy-list' is a component optimized for showing a list of\n" +
    'items that overflows the view and requires scrolling. For performance\n' +
    'reasons, the DOM items are incrementally added to the view as the user\n' +
    'scrolls through the list. The component expects a `scrollTarget` property\n' +
    'to be specified indicating the scrolling container. This container is\n' +
    'used for observing scroll events and resizes. The container should have\n' +
    'bounded height so that cr-lazy-list can determine how many HTML elements to\n' +
    'render initially.\n' +
    'If using a container that can shrink arbitrarily small to the height of the\n' +
    "contents, a 'minViewportHeight' property should also be provided specifying\n" +
    'the minimum viewport height to try to fill with items.\n' +
    "Each list item's HTML element is created using the `template` property,\n" +
    'which should be set to a function returning a TemplateResult corresponding\n' +
    'to a passed in list item and selection index.\n' +
    'Set `listItemHost` to the `this` context for any event handlers in this\n' +
    'template. If this property is not provided, cr-lazy-list is assumed to be\n' +
    "residing in a ShadowRoot, and the shadowRoot's |host| is used.\n" +
    'The `items` property specifies an array of list item data.\n' +
    'The `itemSize` property should be set to an estimate of the list item size.\n' +
    'This is used when setting contain-intrinsic-size styling for list items.\n' +
    'To restore focus to a specific item if it is focused when the items\n' +
    'array changes, set `restoreFocusItem` to that HTMLElement. If the element\n' +
    'is focused when the items array is updated, focus will be restored.',
  'Render items into light DOM using the client provided template',
  'Render container + slot into shadow DOM',
  'Internal state',
  'Only re-render if there are items to display and we are not already',
  're-rendering for the items.',
  'Public API',
  'Forces the list to fill the current viewport. Called when the viewport',
  'size or position changes.',
  'Update the height if the previous height calculation was done when this',
  'element was not visible or if new DOM items were added.',
  'Forces the list to render |numItems| items. If |numItems| are already',
  'rendered, this is a no-op.',
  'Private methods',
  'Async to allow clients to update in response to viewport-filled.',
  'Update the container height to 0 since there are no items.',
  '@return Whether DOM items were created or not.',
  'Ensure we have added enough DOM items so that we are able to estimate',
  'item average height.',
  'If this happens, the math below will be incorrect and we will render',
  'all items. So return early, and correct |lastRenderedHeight_|.',
  '@return The average DOM item height.',
  'This logic should only be invoked if the list is non-empty and at least',
  'one DOM item has been rendered so that an item average height can be',
  'estimated. This is ensured by the callers.',
  'Sets the height of the component based on an estimated average DOM item\n' +
    'height and the total number of items.',
  'Await 1 cycle to ensure any child Lit elements have time to finish',
  'rendering, or the height estimated below will be incorrect.',
  'Adds additional DOM items as needed to fill the view based on user scroll\n' +
    'interactions.'
]
cr_lazy_render.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview\n' +
    'cr-lazy-render is a simple variant of dom-if designed for lazy rendering\n' +
    'of elements that are accessed imperatively.\n' +
    'Usage:\n' +
    '<cr-lazy-render id="menu">\n' +
    '<template>\n' +
    '<heavy-menu></heavy-menu>\n' +
    '</template>\n' +
    '</cr-lazy-render>\n' +
    'this.$.menu.get().show();',
  'Stamp the template into the DOM tree synchronously\n' +
    '@return Child element which has been stamped into the DOM tree.',
  '@return The element contained in the template, if it has\n' +
    'already been stamped.',
  'eslint-disable-next-line @typescript-eslint/naming-convention'
]
cr_lazy_render_lit.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview\n' +
    'cr-lazy-render-lit helps with lazy rendering elements only when they are\n' +
    'actually needed (requested to be shown by the user). The lazy rendered\n' +
    'node is rendered right before the cr-lazy-render-lit node itself, such that\n' +
    'it can be fully styled by the parent, or use Lit bindings referring to the\n' +
    "parent's reactive properties.\n" +
    'Example usage:\n' +
    '<cr-lazy-render-lit id="menu"\n' +
    '.template="${() => html`<heavy-menu></heavy-menu>`}">\n' +
    '</cr-lazy-render-lit>\n' +
    'Note that the provided template should create exactly one top-level DOM node,\n' +
    'otherwise the result of this.get() will not be correct.\n' +
    'this.$.menu.get().show();',
  "Render items into the parent's DOM using the client provided template.",
  "Specify 'renderBefore', so that the lazy rendered node can be",
  'easily located in get() later on.',
  'Stamp the template into the DOM tree synchronously\n' +
    '@return Child element which has been stamped into the DOM tree.',
  '@return The element contained in the template, if it has\n' +
    'already been stamped.'
]
cr_link_row.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on'
]
cr_link_row.ts [
  'Copyright 2017 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview\n' +
    'A link row is a UI element similar to a button, though usually wider than a\n' +
    "button (taking up the whole 'row'). The name link comes from the intended use\n" +
    'of this element to take the user to another page in the app or to an external\n' +
    'page (somewhat like an HTML link).'
]
cr_loading_gradient.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_loading_gradient.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Count of cr-loading-gradient elements created. Used to assign unique IDs.\n' +
    'Unique IDs are necessary since clipPaths are slotted in from the light DOM,\n' +
    '* so there can be leakages across multiple <cr-loading-gradient> instances.'
]
cr_lottie.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_lottie.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'cr-lottie' is a wrapper around the player for lottie\n" +
    "animations. Since the player runs on a worker thread, 'cr-lottie' requires\n" +
    `the document CSP to be set to "worker-src blob: chrome://resources 'self';".\n` +
    'For documents that have TrustedTypes CSP checks enabled, it also requires the\n' +
    'document CSP to be set to "trusted-types lottie-worker-script-loader;".\n' +
    "Fires a 'cr-lottie-initialized' event when the animation was successfully\n" +
    'initialized.\n' +
    "Fires a 'cr-lottie-playing' event when the animation starts playing.\n" +
    "Fires a 'cr-lottie-paused' event when the animation has paused.\n" +
    "Fires a 'cr-lottie-stopped' event when animation has stopped.\n" +
    "Fires a 'cr-lottie-resized' event when the canvas the animation is being\n" +
    'drawn on is resized.',
  'CORS blocks loading worker script from a different origin, even',
  "if chrome://resources/ is added in the 'worker-src' CSP header.",
  '(see https://crbug.com/1385477). Loading scripts as blob and then',
  'instantiating it as web worker is possible.',
  'Whether the canvas has been transferred to the worker thread.',
  'The last state that was explicitly set via setPlay.\n' +
    'In case setPlay() is invoked before the animation is initialized, the\n' +
    'state is stored in this variable. Once the animation initializes, the\n' +
    'state is sent to the worker.',
  'Whether the Worker needs to receive new size\n' +
    'information about the canvas. This is necessary for the corner case\n' +
    'when the size information is received when the animation is still being\n' +
    'loaded into the worker.',
  'Whether the Worker needs to receive new control\n' +
    'information about its desired state. This is necessary for the corner\n' +
    'case when the control information is received when the animation is still\n' +
    'being loaded into the worker.',
  'The current in-flight request.',
  'Updates the animation that is being displayed.',
  "The worker hasn't loaded yet. We will load the new animation once the",
  'worker loads.',
  'There is an in-flight request to load the previous animation. Abort it',
  'before loading a new image.',
  'Controls the animation based on the value of |shouldPlay|. If the\n' +
    'animation is being loaded into the worker when this method is invoked,\n' +
    'the action will be postponed to when the animation is fully loaded.\n' +
    '@param shouldPlay True for play, false for pause.',
  'Sends control (play/pause) information to the worker.',
  'Initializes all the members of this element.',
  'Generate an offscreen canvas.',
  'Open animation file and start playing the animation.',
  'Computes the draw buffer size for the canvas. This ensures that the\n' +
    'rasterization is crisp and sharp rather than blurry.\n' +
    '@return Size of the canvas draw buffer',
  'Returns true if the |maybeValidUrl| provided is safe to use in an\n' +
    'XMLHTTPRequest.\n' +
    '@param maybeValidUrl The url string to check for validity.',
  'Sends an XMLHTTPRequest to load a resource and runs the callback on\n' +
    'getting a successful response.\n' +
    '@param url The URL to load the resource.\n' +
    '@param responseType The type of response the request would\n' +
    'give on success.\n' +
    '@param successCallback The callback to run\n' +
    'when a successful response is received.',
  '|successCallback| might trigger another xhr, so we set to null before',
  'calling it.',
  "Handles the canvas element resize event. If the animation isn't fully\n" +
    'loaded, the canvas size is sent later, once the loading is done.',
  'Mark a size update as necessary once the animation is loaded.',
  'This informs the offscreen canvas worker of the current canvas size.',
  'Initializes the the animation on the web worker with the data provided.\n' +
    '@param animationData The animation that will be played.',
  'Handles the messages sent from the web worker to its parent thread.\n' +
    '@param event Event sent by the web worker.',
  'Called once the animation is fully loaded into the worker. Sends any\n' +
    'size or control information that may have arrived while the animation\n' +
    'was not yet fully loaded.'
]
cr_menu_selector.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_menu_selector.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "Note that this is different from IronSelectableBehavior's items property",
  'as some items are focusable and actionable but not selectable (eg. an',
  'external link).',
  'If the focus was moved by keyboard and is coming in from a relatedTarget',
  'that is not within this menu, move the focus to the first menu item. This',
  'ensures that the first menu item is always the first focused item when',
  'focusing into the menu. A null relatedTarget means the focus was moved',
  'from outside the WebContents.',
  'If pressing Shift+Tab, immediately focus the first element so that',
  'when the event is finished processing, the browser automatically',
  'focuses the previous focusable element outside of the menu.',
  'If pressing Tab, immediately focus the last element so that when',
  'the event is finished processing, the browser automatically focuses',
  'the next focusable element outside of the menu.'
]
cr_page_selector.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_page_selector.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'cr-page-selector is a simple implementation of CrSelectableMixin which by\n' +
    "default hides any slotted element that is not currently marked as 'selected',\n" +
    'since this is usually leveraged to implement a page selector where only the\n' +
    'currently selected page is visible.\n' +
    "A 'show-all' attribute is exposed which when set causes all slotted\n" +
    'elements (selected and non-selected) to be visible at all times, which makes\n' +
    "this element useful for more UI use cases, besides the 'page selector' case.",
  'Set this property to true to flatten slot items, i.e. to grab elements',
  "from slots in this element's light DOM, instead of only items assigned",
  "directly to this element's shadow DOM <slot>. This is done by passing",
  '{flatten: true} when querying items assigned to the <slot> and by',
  'observing slotchange events that bubble to this element instead of only',
  'those fired on the shadow DOM <slot>. Note |selectable| is ignored',
  'if hasNestedSlots = true; all assignedElements are assumed to be',
  'selectable.',
  'Overridden from CrSelectableMixin, since selecting pages on click does',
  'not make sense (only one page is visible at a time, and this can undo',
  'a selection set elsewhere).',
  'CrSelectableMixin override for hasNestedSlots = true mode.',
  'CrSelectableMixin override for hasNestedSlots = true mode.',
  'CrSelectableMixin override for hasNestedSlots = true mode.'
]
cr_profile_avatar_selector.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_profile_avatar_selector.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'cr-profile-avatar-selector' is an element that displays\n" +
    'profile avatar icons and allows an avatar to be selected.',
  'The list of profile avatar URLs and labels.',
  'The currently selected profile avatar icon, if any.',
  "The currently selected profile avatar icon index, or '-1' if none is\n" +
    'selected.',
  'Number of columns in the grid.',
  "If no avatar is selected, focus the first element of the grid on 'tab'.",
  "TODO(dpapad): Rename 'iron-selected' to 'selected' now that this CSS",
  'class is not assigned by any iron-* behavior.',
  '|selectedAvatar| is set to pass back selection to the owner of this',
  'component.',
  'Autoscroll to selected avatar if it is not completely visible.'
]
cr_progress.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_progress.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Progress with simple animations. Forked/migrated\n' +
    "from Polymer's paper-progress.",
  'The number that represents the current value.',
  'The number that indicates the minimum value of the range.',
  'The number that indicates the maximum value of the range.',
  "Specifies the value granularity of the range's value.",
  'Use an indeterminate progress indicator.',
  'True if the progress is disabled.',
  'Clamp the value to the range.',
  'For small values of this.step, if we calculate the step using\n' +
    '`Math.round(value / step) * step` we may hit a precision point issue\n' +
    'eg. 0.1 * 0.2 =  0.020000000000000004\n' +
    'http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html\n' +
    'as a work around we can divide by the reciprocal of `step`'
]
cr_card_radio_button.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_card_radio_button.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview\n' +
    "'cr-card-radio-button' is a radio button in the style of a card. A checkmark\n" +
    'is displayed in the upper right hand corner if the radio button is selected.',
  'Overridden from CrRippleMixin'
]
cr_radio_button.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_radio_button.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Overridden from CrRippleMixin'
]
cr_radio_button_mixin.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Mixin for cr-radio-button-like elements.',
  'clang-format off',
  'Whether the radio button should be focusable or not. Toggling\n' +
    'this property sets the corresponding tabindex of the button\n' +
    'itself as well as any links in the button description.',
  'Holds the tabIndex for the radio button.',
  'Remove the tab stop on any links when the row is unchecked.',
  'Since the row is not tabbable, any links within the row',
  'should not be either.',
  'When shift-tab is pressed, first bring the focus to the host\n' +
    'element. This accomplishes 2 things:\n' +
    "1) Host doesn't get focused when the browser moves the focus\n" +
    'backward.\n' +
    '2) focus now escaped the shadow-dom of this element, so that\n' +
    "it'll correctly obey non-zero tabindex ordering of the\n" +
    'containing document.'
]
cr_radio_button_mixin_lit.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Mixin for cr-radio-button-like elements.',
  'clang-format off',
  'clang-format on',
  'Whether the radio button should be focusable or not. Toggling\n' +
    'this property sets the corresponding tabindex of the button\n' +
    'itself as well as any links in the button description.',
  'Holds the tabIndex for the radio button.',
  'Remove the tab stop on any links when the row is unchecked.',
  'Since the row is not tabbable, any links within the row',
  'should not be either.',
  'When shift-tab is pressed, first bring the focus to the host\n' +
    'element. This accomplishes 2 things:\n' +
    "1) Host doesn't get focused when the browser moves the focus\n" +
    'backward.\n' +
    '2) focus now escaped the shadow-dom of this element, so that\n' +
    "it'll correctly obey non-zero tabindex ordering of the\n" +
    'containing document.'
]
cr_radio_group.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_radio_group.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Clients of cr-radio-group generally expect that by the time',
  'selected-changed or disabled-changed is fired, the state of the',
  'buttons in the group (e.g. "checked", "disabled" properties) has been',
  "updated accordingly. Since these events are fired in CrLitElement's",
  'updated() method, call super.updated() only after all the button updates',
  'performed in update_() are complete.',
  'If nothing selected, start from the first radio then add |delta|.',
  'Wrap the selection, if needed.'
]
cr_ripple.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@return The distance between (x1, y1) and (x2, y2).',
  'Ignore secondary mouse button clicks.'
]
cr_ripple_mixin.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '`CrRippleMixin` exposes methods to dynamically create a cr-ripple\n' +
    'when needed.',
  'If true, the element will not produce a ripple effect when\n' +
    'interacted with via the pointer.',
  "'capture: true' is necessary so that the cr-ripple is created early",
  "enough so that it also receives the 'pointerdown' event. Otherwise",
  'the ripple is created, but not shown on the 1st click.',
  'Ensures this element contains a ripple effect. For startup efficiency\n' +
    'the ripple effect is dynamically added on demand when needed.',
  'Returns the `<cr-ripple>` element used by this element to create\n' +
    "ripple effects. The element's ripple is created on demand, when\n" +
    'necessary, and calling this method will force the\n' +
    'ripple to be created.',
  'Returns true if this element currently contains a ripple effect.',
  "Create the element's ripple effect via creating a `<cr-ripple\n" +
    'id="ink">` instance. Override this method to customize the ripple\n' +
    'element.'
]
cr_scroll_observer_mixin.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview CrScrollObserverMixin has logic to add CSS classes based\n' +
    'on the scroll state of a scrolling container element specified by a\n' +
    '#container ID.\n' +
    'Elements using this mixin are expected to define a #container element, which\n' +
    'is the element being scrolled. There should only be one such element in the\n' +
    'DOM.\n' +
    '<div id="container">...</div>\n' +
    'Alternatively, clients can set a container element by overriding the\n' +
    'getContainer() method. This method should always return the same element\n' +
    'throughout the life of the client. It is first called in connectedCallback().\n' +
    'The mixin will toggle CSS classes on #container indicating the current scroll\n' +
    'state.\n' +
    'can-scroll: Has content to scroll to\n' +
    'scrolled-to-top: Scrolled all the way to the top\n' +
    'scrolled-to-bottom: Scrolled all the way to the bottom\n' +
    'Clients can use these classes to define styles.',
  'Defaults to returning #container. Override for different behavior.',
  'In some rare cases, there could be more than one entry per',
  "observed element, in which case the last entry's result",
  'stands.',
  '@param enable Whether to enable the mixin or disable it.\n' +
    'This function does nothing if the mixin is already in the\n' +
    'requested state.',
  'Behavior is already enabled/disabled. Return early.',
  'Need to register the observer within a setTimeout() callback,',
  'otherwise the drop shadow flashes once on startup, because of the',
  'DOM modifications earlier in this function causing a relayout.',
  'In case this is already detached.',
  'Defaults to returning #container. Override for different behavior. Do',
  'not override if using via CrContainerShadowMixin.'
]
cr_scroll_observer_mixin_lit.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview CrScrollObserverMixinLit has logic to add CSS classes based\n' +
    'on the scroll state of a scrolling container element specified by a\n' +
    '#container ID.\n' +
    'Elements using this mixin are expected to define a #container element, which\n' +
    'is the element being scrolled. There should only be one such element in the\n' +
    'DOM.\n' +
    '<div id="container">...</div>\n' +
    'Alternatively, clients can set a container element by overriding the\n' +
    'getContainer() method. This method should always return the same element\n' +
    'throughout the life of the client. It is first called in connectedCallback().\n' +
    'The mixin will toggles CSS classes on #container indicating the current\n' +
    'scroll state.\n' +
    'can-scroll: Has content to scroll to\n' +
    'scrolled-to-top: Scrolled all the way to the top\n' +
    'scrolled-to-bottom: Scrolled all the way to the bottom\n' +
    'Clients can use these classes to define styles.',
  'In some rare cases, there could be more than one entry per',
  "observed element, in which case the last entry's result",
  'stands.',
  '@param enable Whether to enable the mixin or disable it.\n' +
    'This function does nothing if the mixin is already in the\n' +
    'requested state.',
  'Behavior is already enabled/disabled. Return early.',
  'Need to register the observer within a setTimeout() callback,',
  'otherwise the drop shadow flashes once on startup, because of the',
  'DOM modifications earlier in this function causing a relayout.',
  'In case this is already detached.',
  'Defaults to returning #container. Override for different behavior. Do',
  'not override if using via CrContainerShadowMixinLit.'
]
cr_search_field.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_search_field.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview\n' +
    "'cr-search-field' is a simple implementation of a polymer component that\n" +
    'uses CrSearchFieldMixin.'
]
cr_search_field_mixin.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Helper functions for implementing an incremental search field. See\n' +
    '<settings-subpage-search> for a simple implementation.',
  'Prompt text to display in the search field.',
  'Tooltip to display on the clear search button.',
  '@return The input field element the behavior should use.',
  '@return The value of the search field.',
  'Sets the value of the search field.\n' +
    "@param noEvent Whether to prevent a 'search-changed' event\n" +
    'firing for this change.',
  'If the input is only whitespace and value is empty,',
  '|hasSearchText| needs to be updated.',
  "Dispatch 'search' event after:",
  '0ms if the value is empty',
  '500ms if the value length is 1',
  '400ms if the value length is 2',
  '300ms if the value length is 3',
  '200ms if the value length is 4 or greater.',
  "The logic here was copied from WebKit's native 'search' event.",
  'Update the state of the search field whenever the underlying input\n' +
    'value changes. Unlike onsearch or onkeypress, this is reliably called\n' +
    'immediately after any change, whether the result of user input or JS\n' +
    'modification.',
  'Updates the internal state of the search field based on a change that\n' +
    'has already happened.\n' +
    "@param noEvent Whether to prevent a 'search-changed' event\n" +
    'firing for this change.',
  'Trim leading whitespace and replace consecutive whitespace with\n' +
    'single space. This will prevent empty string searches and searches\n' +
    'for effectively the same query.'
]
cr_search_field_mixin_lit.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Helper functions for implementing an incremental search field. See\n' +
    '<settings-subpage-search> for a simple implementation.',
  'Prompt text to display in the search field.',
  'Tooltip to display on the clear search button.',
  '@return The input field element the behavior should use.',
  '@return The value of the search field.',
  'Sets the value of the search field.\n' +
    "@param noEvent Whether to prevent a 'search-changed' event\n" +
    'firing for this change.',
  'If the input is only whitespace and value is empty,',
  '|hasSearchText| needs to be updated.',
  "Dispatch 'search' event after:",
  '0ms if the value is empty',
  '500ms if the value length is 1',
  '400ms if the value length is 2',
  '300ms if the value length is 3',
  '200ms if the value length is 4 or greater.',
  "The logic here was copied from WebKit's native 'search' event.",
  'Update the state of the search field whenever the underlying input\n' +
    'value changes. Unlike onsearch or onkeypress, this is reliably called\n' +
    'immediately after any change, whether the result of user input or JS\n' +
    'modification.',
  'Updates the internal state of the search field based on a change that\n' +
    'has already happened.\n' +
    "@param noEvent Whether to prevent a 'search-changed' event\n" +
    'firing for this change.',
  'Trim leading whitespace and replace consecutive whitespace with\n' +
    'single space. This will prevent empty string searches and searches\n' +
    'for effectively the same query.'
]
cr_selectable_mixin.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'CrSelectableMixin maintains a collection of selectable elements. The\n' +
    'elements are queried from the light DOM, and are identified using a\n' +
    '|selectable| CSS selector, if specified.\n' +
    'The mixin observes click events on its children, and selects an item when\n' +
    'clicked. Items can also be selected using the select* methods, or by\n' +
    "updating the |selected| property. The mixin sets the 'selected' CSS\n" +
    'class on the selected item, if any, and also sets the |selectedAttribute|\n' +
    'boolean attribute on the selected item if it is specified.\n' +
    'Events fired:\n' +
    'iron-activate: Fired when an item is activated by a "click" event, before\n' +
    'the item is selected (see below).\n' +
    'iron-select: Fired when an item is selected.\n' +
    'iron-deselect: Fired when an item is deselected.\n' +
    'iron-items-changed: Fired when the list of selectable items changes.\n' +
    'TODO (rbpotter): Rename these events, now that they are not fired by an\n' +
    '"iron-" behavior.',
  'To use an attribute value of an element for determining `selected`\n' +
    'instead of using the index, set this property to the name of the HTML\n' +
    'attribute.',
  'Gets or sets the selected value. The default is to use the index of\n' +
    'the selected item. If attrForSelected is set, this is instead the\n' +
    'value of the |attrForSelected| attribute of the selected item.',
  'Boolean attribute name to set on items that are selected.',
  'This is a CSS selector string.  If this is set, only items that match\n' +
    'the CSS selector are selectable.',
  'Whether to select items when they or their children are clicked. Note:',
  'value is only checked in firstUpdated().',
  'Override this method in client code to modify the observation logic,',
  'or to turn it off completely. By default it listens for any changes on',
  'the first <slot> node in this shadowRoot.',
  'Selects the given value.',
  'Selects the previous item.',
  'Selects the next item.',
  'Override this method in client code to modify this logic, for example to',
  "grab children that don't reside in a <slot>.",
  'If overriding queryItems(), override this method to return the list item',
  'element matching the CSS selector string |selector|.',
  'Let other interested parties know about the change.',
  'Methods to override to modify default behavior.'
]
cr_slider.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_slider.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'cr-slider' is a slider component used to select a number from\n" +
    'a continuous or discrete range of numbers.',
  'The |value| is the corresponding value that the current slider tick is\n' +
    'associated with. The string |label| is shown in the UI as the label for the\n' +
    'current slider value. The |ariaValue| number is used for aria-valuemin,\n' +
    'aria-valuemax, and aria-valuenow, and is optional. If missing, |value| will\n' +
    'be used instead.',
  'The following are the events emitted from cr-slider.\n' +
    'cr-slider-value-changed: fired when updating slider via the UI.\n' +
    'dragging-changed: fired on pointer down and on pointer up.',
  'Internal representation of disabled depending on |disabled| and\n|ticks|.',
  'The amount the slider value increments by when pressing any of the keys\n' +
    'from `deltaKeyMap_`. Defaults to 1.',
  'When set to false, the keybindings are not handled by this component,\n' +
    'for example when the owner of the component wants to set up its own\n' +
    'keybindings.',
  'The data associated with each tick on the slider. Each element in the\n' +
    'array contains a value and the label corresponding to that value.',
  '|transiting_| is set to true when bar is touched or clicked. This\n' +
    'triggers a single position transition effect to take place for the\n' +
    'knob, bar and label. When the transition is complete, |transiting_| is\n' +
    'set to false resulting in no transition effect during dragging, manual\n' +
    'value updates and keyboard events.',
  'When markers are displayed on the slider, they are evenly spaced across\n' +
    'the entire slider bar container and are rendered on top of the bar and\n' +
    'bar container. The location of the marks correspond to the discrete\n' +
    'values that the slider can have.',
  'Fill with dummy data so that Array#map() actually works in the template.',
  'The ratio is a value from 0 to 1.0 corresponding to a location along the\n' +
    'slider bar where 0 is the minimum value and 1.0 is the maximum value.\n' +
    'This is a helper function used to calculate the bar width, knob location\n' +
    'and label location.',
  'Removes all event listeners related to dragging, and cancels ripple.',
  'When the left-mouse button is pressed, the knob location is updated and\n' +
    'dragging starts.',
  'Prevent unwanted text selection to occur while moving the pointer,',
  'this is important.',
  'If the left-button on the mouse is pressed by itself, then update.',
  'Otherwise stop capturing the mouse events because the drag operation',
  'is complete.',
  'Skip update if |value| has not passed the next value .8 units away.',
  'The value will update as the drag approaches the next value.',
  'Overridden from CrRippleMixin'
]
cr_splitter.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Starts the dragging of the splitter. Adds listeners for mouse or touch\n' +
    'events and calls splitter drag start handler.\n' +
    '@param clientX X position of the mouse or touch event that started the\n' +
    'drag.\n' +
    '@param isTouchEvent True if the drag started by touch event.',
  'Concurrent drags',
  'Another touch start (we somehow missed touchend or touchcancel).',
  'Use capturing events on the document to get events when the mouse',
  'leaves the document.',
  '@type {string}  (eventType),',
  '@type {Function}  (handler), true);',
  '@type {string}  (eventType),',
  '@type {Function}  (handler), true);',
  'Ends the dragging of the splitter. Removes listeners set in startDrag\n' +
    'and calls splitter drag end handler.',
  'Calculate width to resize target element.\n' +
    '@param deltaX horizontal drag amount',
  'Handles the mousedown event which starts the dragging of the splitter.',
  'Default action is to start selection and to move focus.',
  'Handles the touchstart event which starts the dragging of the splitter.',
  'Handles the mousemove event which moves the splitter as the user moves\n' +
    'the mouse.',
  'Handles the touch move event.',
  'Common part of handling mousemove and touchmove. Calls splitter drag\n' +
    'move handler.\n' +
    '@param clientX X position of the mouse or touch event.',
  'Handles the mouse up event which ends the dragging of the splitter.',
  'Handles start of the splitter dragging. Saves current width of the\n' +
    'element being resized.',
  'Use the computed width style as the base so that we can ignore what',
  'box sizing the element has. Add the difference between offset and',
  'client widths to account for any scrollbars.',
  'Handles splitter moves. Updates width of the element being resized.\n' +
    '@param deltaX The change of splitter horizontal position.',
  "Handles end of the splitter dragging. This fires a 'resize' event if the\n" +
    'size changed.',
  'Check if the size changed.'
]
cr_tab_box.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Update tabIndex for a11y',
  'Update aria-selected attribute for a11y',
  "Update focus, but don't override initial focus.",
  'Show focus outline since we used the keyboard.'
]
cr_tabs.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_tabs.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'cr-tabs' is a control used for selecting different sections or\n" +
    'tabs. cr-tabs was created to replace paper-tabs and paper-tab. cr-tabs\n' +
    "displays the name of each tab provided by |tabs|. A 'selected-changed' event\n" +
    'is fired any time |selected| is changed.\n' +
    'cr-tabs takes its #selectionBar animation from paper-tabs.\n' +
    'Keyboard behavior\n' +
    '- Home, End, ArrowLeft and ArrowRight changes the tab selection\n' +
    'Known limitations\n' +
    '- no "disabled" state for the cr-tabs as a whole or individual tabs\n' +
    '- cr-tabs does not accept any <slot> (not necessary as of this writing)\n' +
    '- no horizontal scrolling, it is assumed that tabs always fit in the\n' +
    'available space',
  'Optional icon urls displayed in each tab.',
  'Tab names displayed in each tab.',
  'Index of the selected tab.',
  'Make new indicator look like it is the old indicator.',
  'Expand to cover both the previous selected tab, the newly selected tab,',
  'and everything in between.'
]
cr_textarea.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_textarea.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview 'cr-textarea' is a component similar to native textarea,\n" +
    'and inherits styling from cr-input.',
  'Whether the text area should automatically get focus when the page\nloads.',
  'Whether the text area is disabled. When disabled, the text area loses\n' +
    'focus and is not reachable by tabbing.',
  'Whether the text area is required.',
  'Maximum length (in characters) of the text area.',
  'Whether the text area is read only. If read-only, content cannot be\n' +
    'changed.',
  'Number of rows (lines) of the text area.',
  'Caption of the text area.',
  'Text inside the text area. If the text exceeds the bounds of the text\n' +
    'area, i.e. if it has more than |rows| lines, a scrollbar is shown by\n' +
    'default when autogrow is not set.',
  'Placeholder text that is shown when no value is present.',
  'Whether the textarea can auto-grow vertically or not.',
  'Attribute to enable limiting the maximum height of a autogrow textarea.\n' +
    'Use --cr-textarea-autogrow-max-height to set the height.',
  'Whether the textarea is invalid or not.',
  'First footer text below the text area. Can be used to warn user about\n' +
    'character limits.',
  'Second footer text below the text area. Can be used to show current\n' +
    'character count.',
  "Don't allow null or undefined as these will render in the input.",
  `cr-textarea cannot use Lit's "nothing" in the HTML template; this`,
  "breaks the underlying native textarea's auto validation if |required|",
  'is set.',
  "'change' event fires when <input> value changes and user presses 'Enter'.\n" +
    "This function helps propagate it to host since change events don't\n" +
    'propagate across Shadow DOM boundary by default.',
  "Ensure that |value| has been updated before re-firing 'change'.",
  'Browsers do not render empty divs. The extra space is used to render the',
  'div when empty.',
  'focused_ is used instead of :focus-within, so focus on elements within',
  'the suffix slot does not trigger a change in input styles.'
]
cr_toast.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_toast.ts [
  'Copyright 2017 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview A lightweight toast.',
  'Cancels existing auto-hide, and sets up new auto-hide.',
  'Shows the toast and auto-hides after |this.duration| milliseconds has\n' +
    'passed. If the toast is currently being shown, any preexisting auto-hide\n' +
    'is cancelled and replaced with a new auto-hide.',
  'Force autohide to reset if calling show on an already shown toast.',
  'The role attribute is removed first so that screen readers to better',
  'ensure that screen readers will read out the content inside the toast.',
  'If the role is not removed and re-added back in, certain screen readers',
  'do not read out the contents, especially if the text remains exactly',
  'the same as a previous toast.',
  'Reset the aria-hidden attribute as screen readers need to access the',
  'contents of an opened toast.',
  'Hides the toast and ensures that screen readers cannot its contents while\n' +
    'hidden.'
]
cr_toast_manager.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_toast_manager.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Element which shows toasts with optional undo button.',
  '@param label The label to display inside the toast.',
  'Shows the toast, making certain text fragments collapsible.'
]
cr_toggle.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_toggle.ts [
  'Copyright 2017 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Number of pixels required to move to consider the pointermove event as\n' +
    'intentional.',
  "@fileoverview 'cr-toggle' is a component for showing an on/off switch. It\n" +
    "fires a 'change' event *only* when its state changes as a result of a user\n" +
    'interaction. Besides just clicking the element, its state can be changed by\n' +
    'dragging (pointerdown+pointermove) the element towards the desired direction.',
  'Whether the state of the toggle has already taken into account by\n' +
    "|pointeremove| handlers. Used in the 'click' handler.",
  'Prevent unwanted text selection to occur while moving the pointer, this',
  'is important.',
  "Don't do anything if this was not a primary button click or touch event.",
  'This is necessary to have follow up pointer events fire on |this|, even',
  'if they occur outside of its bounds.',
  'Prevent |click| event from bubbling. It can cause parents of this',
  'elements to erroneously re-toggle this control.',
  'User gesture has already been taken care of inside |pointermove|',
  'handlers, Do nothing here.',
  'If no pointermove event fired, then user just clicked on the',
  'toggle button and therefore it should be toggled.',
  "Ignore cases where the 'click' or 'keypress' handlers are triggered while",
  'disabled.',
  "Yield, so that 'checked-changed' (originating from `notify: 'true'`) fire",
  "before the 'change' event below, which guarantees that any Polymer parent",
  'with 2-way bindings on the `checked` attribute are updated first.',
  'Overridden from CrRippleMixin'
]
cr_toolbar.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on'
]
cr_toolbar.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Name to display in the toolbar, in titlecase.',
  'Prompt text to display in the search field.',
  'Tooltip to display on the clear search button.',
  'Tooltip to display on the menu button.',
  'Value is proxied through to cr-toolbar-search-field. When true,',
  'the search field will show a processing spinner.',
  'Controls whether the menu button is shown at the start of the menu.',
  'Controls whether the search field is shown.',
  'Controls whether the search field is autofocused.',
  'True when the toolbar is displaying in narrow mode.',
  'The threshold at which the toolbar will change from normal to narrow\n' +
    'mode, in px.',
  'Wait for rendering to finish to ensure menuButton exists on the DOM.'
]
cr_toolbar_search_field.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on'
]
cr_toolbar_search_field.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'When true, show a loading spinner to indicate that the backend is',
  'processing the search. Will only show if the search field is open.'
]
cr_toolbar_selection_overlay.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_toolbar_selection_overlay.ts [
  'Copyright 2017 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Element which displays the number of selected items, designed\n' +
    'to be used as an overlay on top of <cr-toolbar>. See <history-toolbar> for an\n' +
    'example usage.\n' +
    'Note that the embedder is expected to set position: relative to make the\n' +
    'absolute positioning of this element work, and the cr-toolbar should have the\n' +
    'has-overlay attribute set when its overlay is shown to prevent access through\n' +
    'tab-traversal.',
  'Parent element is responsible for updating `selectionLabel` when `show`',
  'changes.'
]
cr_tooltip.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_tooltip.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Tooltip with simple fade-in/out animations. Forked/migrated\n' +
    "from Polymer's paper-tooltip.",
  'The id of the element that the tooltip is anchored to. This element\n' +
    'must be a sibling of the tooltip. If this property is not set,\n' +
    'then the tooltip will be centered to the parent node containing it.',
  'Set this to true if you want to manually control when the tooltip\n' +
    'is shown or hidden.',
  'Positions the tooltip to the top, right, bottom, left of its content.',
  'If true, no parts of the tooltip will ever be shown offscreen.',
  'The spacing between the top of the tooltip and the element it is\n' +
    'anchored to.',
  'The delay that will be applied before the `entry` animation is\n' +
    'played when showing the tooltip.',
  'Returns the target element that this tooltip is anchored to. It is\n' +
    'either the element given by the `for` attribute, the element manually\n' +
    'specified through the `target` attribute, or the immediate parent of\n' +
    'the tooltip.',
  'If the parentNode is a document fragment, then we need to use the host.',
  'Sets the target element that this tooltip will be anchored to.',
  'Shows the tooltip programmatically',
  "If the tooltip is already showing, there's nothing to do.",
  'Hides the tooltip programmatically',
  "If the tooltip is already hidden, there's nothing to do.",
  "If the entry animation is still playing, don't try to play the exit",
  'animation since this will reset the opacity to 1. Just end the animation.',
  'Short-cut and cancel all animations and hide',
  'Play Exit Animation',
  'Clip the left/right side',
  'Clip the top/bottom side.',
  'If no longer showing add class hidden to completely hide tooltip',
  'Polyfills the old offsetParent behavior from before the spec was changed:\n' +
    'https://github.com/w3c/csswg-drafts/issues/159\n' +
    'This is necessary when the tooltip is inside a <slot>, e.g. when it\n' +
    "is used inside a cr-dialog. In such cases, the tooltip's offsetParent\n" +
    'will be null.',
  "display:contents nodes aren't in the layout tree so they should be",
  'skipped.'
]
cr_tree.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview cr-tree is a container for a tree structure. Items can be added\n' +
    'or removed from the tree using the add/addAt/removeItem methods. Adding items\n' +
    'declaratively is not currently supported, as this class is primarily intended\n' +
    'to replace cr.ui.Tree, which is used for cases of creating trees at runtime\n' +
    '(e.g. from backend data).',
  'Helper function that returns the next visible tree item.',
  'Another helper function that returns the next visible tree item.',
  'Helper function that returns the previous visible tree item.',
  'Helper function that returns the last visible tree item in the subtree.',
  'Initializes the element.',
  'CrTreeBase implementation:',
  'The depth of the node. This is 0 for the tree itself.',
  'These two methods should never be called for the tree itself.',
  'The selected tree item or null if none.',
  'Set the selectedItem_ before deselecting the old item since we only',
  'want one change when moving between items.',
  "aria-owns doesn't work well for the tree because the treeitem role is",
  "set on the rowElement within cr-tree-item's shadow DOM. Set the size",
  'here, so the correct number of items is read.',
  'Handles keydown events on the tree and updates selection and exanding\n' +
    'of tree items.',
  "Don't let back/forward keyboard shortcuts be used."
]
cr_tree_base.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Encapuslates shared behavior of cr-trees and the cr-tree-items that they',
  'contain. This reduces code duplication for e.g. adding/removing children and',
  'facilitates writing methods navigating the full tree structure (cr-tree and',
  'all cr-tree-item descendants), without introducing circular dependencies.',
  'Adds a tree item as a child.',
  'Adds a tree item as a child at a given index.',
  'The tree that the tree item belongs to or null of no added to a tree.'
]
cr_tree_item.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview cr-tree-item represents a node in a tree structure. Child items\n' +
    'can be added or removed using the add/addAt/removeItem methods. A parent can\n' +
    'be set using the setParent() method; the parent may be a cr-tree or\n' +
    'cr-tree-item. Adding items declaratively is not currently supported, as this\n' +
    'class is primarily intended to replace cr.ui.TreeItem, which is used for\n' +
    'cases of creating trees at runtime (e.g. from backend data).',
  'Returns true if |root| has |el| as a descendant.',
  'CrTreeBaseElement implementation:',
  'If we removed the selected item we should become selected.',
  'Whether the tree item has children.',
  "These methods shouldn't be called on a tree item.",
  'Mouse event handlers',
  'Handles double click events on the tree item.',
  "Called when the user clicks on a tree item's expand icon.",
  'Called when the user clicks on a tree item.',
  'Additional methods unique to CrTreeItem:',
  'Expands all parent items.',
  'The element containing the label text.',
  'The label text.'
]
cr_url_list_item.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_url_list_item.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Flag that determines if the element should use an anchor tag or a\n' +
    'button element as its focusable item. An anchor provides the native\n' +
    'context menu and browser interactions for links, while a button\n' +
    'provides its own unique functionality, such as pressing space to\n' +
    'activate.',
  'The square to display the count only fits 3 characters.'
]
cr_view_manager.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_view_manager.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Nothing to animate. Immediately resolve.',
  'Nothing to animate. Immediately resolve.'
]
find_shortcut_manager.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'If handled, return true.',
  '@fileoverview Listens for a find keyboard shortcut (i.e. Ctrl/Cmd+f or /)\n' +
    'and keeps track of an stack of potential listeners. Only the listener at the\n' +
    'top of the stack will be notified that a find shortcut has been invoked.',
  'Stack of listeners. Only the top listener will handle the shortcut.',
  'Tracks if any modal context is open in settings. This assumes only one\n' +
    'modal can be open at a time. The modals that are being tracked include\n' +
    'cr-dialog and cr-drawer.\n' +
    '@type {boolean}',
  'If no listener has focus or the first (outer-most) listener has focus,',
  'try the last (inner-most) listener.',
  'If a listener has a search input with focus, the next listener that',
  'should be called is the right before it in |listeners| such that the',
  'goes from inner-most to outer-most.'
]
find_shortcut_mixin.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Used to determine how to handle find shortcut invocations.'
]
find_shortcut_mixin_lit.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Used to determine how to handle find shortcut invocations.'
]
focus_row_mixin.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on',
  'Any element that is being used as an iron-list row item can extend this\n' +
    'behavior, which encapsulates focus controls of mouse and keyboards.\n' +
    'To use this behavior:\n' +
    '- The parent element should pass a "last-focused" attribute double-bound\n' +
    'to the row items, to track the last-focused element across rows, and\n' +
    'a "list-blurred" attribute double-bound to the row items, to track\n' +
    'whether the list of row items has been blurred.\n' +
    '- There must be a container in the extending element with the\n' +
    '[focus-row-container] attribute that contains all focusable controls.\n' +
    '- On each of the focusable controls, there must be a [focus-row-control]\n' +
    'attribute, and a [focus-type=] attribute unique for each control.',
  'Will be updated when |index| is set, unless specified elsewhere.',
  'For notifying when the row is in focus.',
  'Should be bound to the index of the item from the iron-list.',
  'This is different from tabIndex, since the template only does a\n' +
    'one-way binding on both attributes, and the behavior actually make\n' +
    'use of this fact. For example, when a control within a row is\n' +
    'focused, it will have tabIndex = -1 and ironListTabIndex = 0.',
  'Adding listeners asynchronously to reduce blocking time, since',
  'this behavior will be used by items in potentially long lists.',
  'Returns an ID based on the index that was passed in.',
  "Sets |id| if it hasn't been set elsewhere. Also sets |aria-rowindex|.",
  'focusRowIndex is 0-based where aria-rowindex is 1-based.',
  'Only set ID if it matches what was previously set. This prevents',
  "overriding the ID value if it's set elsewhere.",
  'Return early if display and visibility have not changed.',
  'The first focusable control changes if hidden, disabled, or\n' +
    'style.display changes for the control or any of its ancestors. Add\n' +
    'mutation observers to watch for these changes in order to ensure the\n' +
    'first control keydown listener is always on the correct element.',
  'This function gets called when the row itself receives the focus\nevent.',
  'If focus is being restored from outside the item and the event is',
  'fired by the list item itself, focus the first control so that the',
  'user can tab through all the controls. When the user shift-tabs',
  'back to the row, or focus is restored to the row from a dropdown on',
  'the last item, the last child item will be focused before the row',
  'itself. Since this is the desired behavior, do not shift focus to',
  'the first item in these cases.',
  'If a new row is being focused, reset listBlurred. This means an',
  'item has been removed and iron-list is about to focus the next',
  'item.',
  "Reset focused flags since it's not active anymore."
]
focus_row_mixin_delegate.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'This function gets called when the [focus-row-control] element receives\n' +
    'the focus event.',
  '@param row The row that detected a keydown.\n' +
    '@return Whether the event was handled.',
  'Prevent iron-list from changing the focus on enter.'
]
focus_row_mixin_lit.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on',
  'Any element that is being used as an iron-list or infinite-list row item can\n' +
    'extend this mixin, which encapsulates focus controls of mouse and keyboards.\n' +
    'To use this mixin:\n' +
    '- The parent element should pass a "last-focused" attribute double-bound\n' +
    'to the row items, to track the last-focused element across rows, and\n' +
    'a "list-blurred" attribute double-bound to the row items, to track\n' +
    'whether the list of row items has been blurred.\n' +
    '- There must be a container in the extending element with the\n' +
    '[focus-row-container] attribute that contains all focusable controls.\n' +
    '- On each of the focusable controls, there must be a [focus-row-control]\n' +
    'attribute, and a [focus-type=] attribute unique for each control.',
  'Will be updated when |index| is set, unless specified elsewhere.',
  'For notifying when the row is in focus.',
  'Should be bound to the index of the item from the iron-list or',
  'infinite-list.',
  'This is different from tabIndex, since the template only does a\n' +
    'one-way binding on both attributes, and the mixin makes use of this.\n' +
    'For example, when a control within a row is focused, it will have\n' +
    'tabIndex = -1 and listTabIndex = 0.',
  'Adding listeners asynchronously to reduce blocking time, since',
  'this behavior will be used by items in potentially long lists.',
  'focusRowIndex is 0-based where aria-rowindex is 1-based.',
  'Only set ID if it matches what was previously set. This prevents',
  "overriding the ID value if it's set elsewhere.",
  'Returns an ID based on the index that was passed in.',
  'Return early if display and visibility have not changed.',
  'The first focusable control changes if hidden, disabled, or\n' +
    'style.display changes for the control or any of its ancestors. Add\n' +
    'mutation observers to watch for these changes in order to ensure the\n' +
    'first control keydown listener is always on the correct element.',
  'This function gets called when the row itself receives the focus\nevent.',
  'If focus is being restored from outside the item and the event is',
  'fired by the list item itself, focus the first control so that the',
  'user can tab through all the controls. When the user shift-tabs',
  'back to the row, or focus is restored to the row from a dropdown on',
  'the last item, the last child item will be focused before the row',
  'itself. Since this is the desired behavior, do not shift focus to',
  'the first item in these cases.',
  'If a new row is being focused, reset listBlurred. This means an',
  'item has been removed and iron-list is about to focus the next',
  'item.',
  "Reset focused flags since it's not active anymore."
]
i18n_mixin.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview\n' +
    "'I18nMixin' is a Mixin offering loading of internationalization\n" +
    "strings. Typically it is used as [[i18n('someString')]] computed bindings or\n" +
    "for this.i18n('foo'). It is not needed for HTML $i18n{otherString}, which is\n" +
    'handled by a C++ templatizer.',
  'Returns a translated string where $1 to $9 are replaced by the given\n' +
    'values.\n' +
    '@param id The ID of the string to translate.\n' +
    '@param varArgs Values to replace the placeholders $1 to $9 in the\n' +
    'string.\n' +
    '@return A translated, substituted string.',
  'Returns a translated string where $1 to $9 are replaced by the given\n' +
    'values. Also sanitizes the output to filter out dangerous HTML/JS.\n' +
    'Use with Polymer bindings that are *not* inner-h-t-m-l.\n' +
    'NOTE: This is not related to $i18n{foo} in HTML, see file overview.\n' +
    '@param id The ID of the string to translate.\n' +
    '@param varArgs Values to replace the placeholders $1 to $9 in the\n' +
    'string.\n' +
    '@return A translated, sanitized, substituted string.',
  "Similar to 'i18n', returns a translated, sanitized, substituted\n" +
    'string. It receives the string ID and a dictionary containing the\n' +
    'substitutions as well as optional additional allowed tags and\n' +
    'attributes. Use with Polymer bindings that are inner-h-t-m-l, for\n' +
    'example.\n' +
    '@param id The ID of the string to translate.',
  "Similar to 'i18n', with an unused |locale| parameter used to trigger\n" +
    'updates when the locale changes.\n' +
    '@param locale The UI language used.\n' +
    '@param id The ID of the string to translate.\n' +
    '@param varArgs Values to replace the placeholders $1 to $9 in the\n' +
    'string.\n' +
    '@return A translated, sanitized, substituted string.',
  "Similar to 'i18nDynamic', but varArgs valus are interpreted as keys\n" +
    'in loadTimeData. This allows generation of strings that take other\n' +
    'localized strings as parameters.\n' +
    '@param locale The UI language used.\n' +
    '@param id The ID of the string to translate.\n' +
    '@param varArgs Values to replace the placeholders $1 to $9\n' +
    'in the string. Values are interpreted as strings IDs if found in\n' +
    'the list of localized strings.\n' +
    '@return A translated, sanitized, substituted string.',
  'Try to replace IDs with localized values.',
  'Returns true if a translation exists for |id|.'
]
i18n_mixin_lit.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview\n' +
    "'I18nMixinLit' is a Mixin offering loading of internationalization\n" +
    "strings. Typically it is used as [[i18n('someString')]] computed bindings or\n" +
    "for this.i18n('foo'). It is not needed for HTML $i18n{otherString}, which is\n" +
    'handled by a C++ templatizer.',
  'Returns a translated string where $1 to $9 are replaced by the given\n' +
    'values.\n' +
    '@param id The ID of the string to translate.\n' +
    '@param varArgs Values to replace the placeholders $1 to $9 in the\n' +
    'string.\n' +
    '@return A translated, substituted string.',
  'Returns a translated string where $1 to $9 are replaced by the given\n' +
    'values. Also sanitizes the output to filter out dangerous HTML/JS.\n' +
    'Use with Lit bindings that are *not* innerHTML.\n' +
    'NOTE: This is not related to $i18n{foo} in HTML, see file overview.\n' +
    '@param id The ID of the string to translate.\n' +
    '@param varArgs Values to replace the placeholders $1 to $9 in the\n' +
    'string.\n' +
    '@return A translated, sanitized, substituted string.',
  "Similar to 'i18n', returns a translated, sanitized, substituted\n" +
    'string. It receives the string ID and a dictionary containing the\n' +
    'substitutions as well as optional additional allowed tags and\n' +
    'attributes. Use with Lit bindings that are innerHTML.\n' +
    '@param id The ID of the string to translate.',
  "Similar to 'i18n', with an unused |locale| parameter used to trigger\n" +
    'updates when the locale changes.\n' +
    '@param locale The UI language used.\n' +
    '@param id The ID of the string to translate.\n' +
    '@param varArgs Values to replace the placeholders $1 to $9 in the\n' +
    'string.\n' +
    '@return A translated, sanitized, substituted string.',
  "Similar to 'i18nDynamic', but varArgs values are interpreted as keys\n" +
    'in loadTimeData. This allows generation of strings that take other\n' +
    'localized strings as parameters.\n' +
    '@param locale The UI language used.\n' +
    '@param id The ID of the string to translate.\n' +
    '@param varArgs Values to replace the placeholders $1 to $9\n' +
    'in the string. Values are interpreted as strings IDs if found in\n' +
    'the list of localized strings.\n' +
    '@return A translated, sanitized, substituted string.',
  'Try to replace IDs with localized values.',
  'Returns true if a translation exists for |id|.'
]
list_property_update_mixin.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview |ListPropertyUpdateMixin| is used to update an existing\n' +
    'polymer list property given the list after all the edits were made while\n' +
    'maintaining the reference to the original list. This allows\n' +
    'dom-repeat/iron-list elements bound to this list property to not fully\n' +
    're-rendered from scratch.\n' +
    'The minimal splices needed to transform the original list to the edited list\n' +
    'are calculated using |Polymer.ArraySplice.calculateSplices|. All the edits\n' +
    'are then applied to the original list. Once completed, a single notification\n' +
    'containing information about all the edits is sent to the polyer object.',
  'Transform splices to the expected format of notifySplices().',
  'Convert !Array<string> to !Array<!Object>.',
  '@return Whether notifySplices was called.'
]
mouse_hoverable_mixin.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file provides a mixin to manage a `hovered` style on mouse\n' +
    'events. Relies on listening for pointer events as touch devices may fire\n' +
    'mouse events too.'
]
mouse_hoverable_mixin_lit.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file provides a mixin to manage a `hovered` style on mouse\n' +
    'events. Relies on listening for pointer events as touch devices may fire\n' +
    'mouse events too.'
]
cr_policy_indicator.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_policy_indicator.ts [
  'Copyright 2017 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Lit element for indicating policies by type.',
  'Which indicator type to show (or NONE).',
  'The name associated with the policy source. See\n' +
    'chrome.settingsPrivate.PrefObject.controlledByName.',
  '@return True if the indicator should be shown.',
  '@return The iron-icon icon name.',
  '@param indicatorSourceName The name associated with the indicator.\n' +
    'See chrome.settingsPrivate.PrefObject.controlledByName\n' +
    '@return The tooltip text for |type|.',
  '<if expr="chromeos_ash">',
  '</if>'
]
cr_policy_types.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Strings required for policy indicators. These must be set at runtime.\n' +
    'Chrome OS only strings may be undefined.',
  '<if expr="chromeos_ash">',
  '</if>',
  'Possible policy indicators that can be shown in settings.'
]
cr_tooltip_icon.html.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
cr_tooltip_icon.ts [
  'Copyright 2017 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Position of tooltip popup related to the icon.'
]
store_client.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview defines a helper function `makeStoreClientMixin` to create a\n' +
    'Polymer mixin that binds Polymer elements to a specific instance of `Store`.\n' +
    'The mixin provides utility functions for Polymer elements to dispatch actions\n' +
    'that change state, and to react to Store state changes.',
  'A callback function that runs when the store state has been updated.\n' +
    'Returning `undefined` will skip updating the local property.\n' +
    '@see StoreClientInterface.watch',
  'Helper to dispatch an action to the store, which will update the store data\n' +
    'and then (possibly) flow through to the UI.',
  'Helper to dispatch an asynchronous action to the store.\n' +
    'TODO(b/296440261) remove `dispatchAsync` in favor of promises.',
  'Called when the store state has changed.',
  'Call this when the element is connected and has called `watch` for its\n' +
    'properties. This will populate the element with the initial\n' +
    'data from the store if the store has been initialized.',
  'Watches a particular part of the state tree, updating `localProperty` to\n' +
    'the return value of `valueGetter` whenever the state changes.\n' +
    'Note that object identity is used to determine if the value has changed\n' +
    'before updating, rather than deep equality. If the getter function\n' +
    'returns `undefined`, no changes will be propagated.',
  'Get the current state from the store.',
  'Get the store that this client is bound to.',
  'Create a store client mixin for the store instance returned by\n' +
    '`storeGetter()`. An app, such as Personalization App, will have one central\n' +
    'store to bind to. Example:\n' +
    'class MyStore extends Store {\n' +
    'static getInstance(): MyStore {\n' +
    '....\n' +
    '}\n' +
    '}\n' +
    'const MyStoreClientMixin = makeStoreClientMixin(MyStore.getInstance);\n' +
    'const MyElement extends MyStoreClientMixin(PolymerElement) {\n' +
    '....\n' +
    '}',
  'Avoid poking Polymer unless something has actually changed.',
  'Reducers must return new objects rather than mutating existing',
  'objects, so any real changes will pass through correctly.',
  'TODO(b/296282541) assert that store is initialized instead of',
  'performing a runtime check.'
]
web_ui_listener_mixin.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Mixin to be used by Polymer elements that want to\n' +
    'automatically remove WebUI listeners when detached.',
  'Holds WebUI listeners that need to be removed when this element is\n' +
    'destroyed.',
  'Adds a WebUI listener and registers it for automatic removal when\n' +
    'this element is detached. Note: Do not use this method if you intend\n' +
    'to remove this listener manually (use addWebUiListener directly\n' +
    'instead).\n' +
    '@param eventName The event to listen to.\n' +
    '@param callback The callback run when the event is fired.'
]
web_ui_listener_mixin_lit.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Mixin to be used by CrLitElement subclasses that want to\n' +
    'automatically remove WebUI listeners when detached.',
  'Holds WebUI listeners that need to be removed when this element is\n' +
    'destroyed.',
  'Adds a WebUI listener and registers it for automatic removal when\n' +
    'this element is detached. Note: Do not use this method if you intend\n' +
    'to remove this listener manually (use addWebUiListener directly\n' +
    'instead).\n' +
    '@param eventName The event to listen to.\n' +
    '@param callback The callback run when the event is fired.'
]
action_link.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Action links are elements that are used to perform an in-page navigation or',
  'action (e.g. showing a dialog).',
  '',
  'They look like normal anchor (<a>) tags as their text color is blue. However,',
  "they're subtly different as they're not initially underlined (giving users a",
  "clue that underlined links navigate while action links don't).",
  '',
  'Action links look very similar to normal links when hovered (hand cursor,',
  'underlined). This gives the user an idea that clicking this link will do',
  'something similar to navigation but in the same page.',
  '',
  'They can be created in JavaScript like this (note second arg):',
  '',
  "var link = document.createElement('a', {is: 'action-link'});",
  '',
  'or with a constructor like this:',
  '',
  'var link = new ActionLink();',
  '',
  'They can be used easily from HTML as well, like so:',
  '',
  '<a is="action-link">Click me!</a>',
  '',
  "NOTE: <action-link> and document.createElement('action-link') don't work.",
  'Action links can start disabled (e.g. <a is="action-link" disabled>).',
  "Schedule a click asynchronously because other 'keydown' handlers",
  "may still run later (e.g. document.addEventListener('keydown')).",
  "Specifically options dialogs break when this timeout isn't here.",
  'NOTE: this affects the "trusted" state of the ensuing click. I',
  "haven't found anything that breaks because of this (yet).",
  'This handlers strives to match the behavior of <a href="...">.',
  'While the mouse is down, prevent text selection from dragging.',
  "If focus started via mouse press, don't show an outline."
]
assert.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Verify |value| is truthy.\n' +
    '@param value A value to check for truthiness. Note that this\n' +
    "may be used to test whether |value| is defined or not, and we don't want\n" +
    'to force a cast to boolean.',
  'Call this from places in the code that should never be reached.\n' +
    'For example, handling all the values of enum with a switch() like this:\n' +
    'function getValueFromEnum(enum) {\n' +
    'switch (enum) {\n' +
    'case ENUM_FIRST_OF_TWO:\n' +
    'return first\n' +
    'case ENUM_LAST_OF_TWO:\n' +
    'return last;\n' +
    '}\n' +
    'assertNotReached();\n' +
    '}\n' +
    'This code should only be hit in the case of serious programmer error or\n' +
    'unexpected input.'
]
browser_command_proxy.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file provides a class that exposes the Mojo handler\n' +
    'interface used for sending the browser commands to the browser and\n' +
    'receiving the browser response.'
]
color_utils.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Helper functions for color manipulations.',
  'Converts an SkColor object to a string in the form\n' +
    '"rgba(<red>, <green>, <blue>, <alpha>)".\n' +
    '@param skColor The input color.\n' +
    '@return The rgba string.',
  'Converts an SkColor object to a string in the the form "#rrggbb".\n' +
    '@param skColor The input color.\n' +
    '@return The hex color string,',
  'Converts a string of the form "#rrggbb" to an SkColor object.\n' +
    '@param hexColor The color string.\n' +
    '@return The SkColor object,',
  'Converts a string of the form "<red>, <green>, <blue>" to an SkColor\n' +
    'object.\n' +
    '@param rgb The rgb color string.\n' +
    '@return The SkColor object,'
]
cr.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Counter for use with createUid',
  '@return A new unique ID.',
  'The mapping used by the sendWithPromise mechanism to tie the Promise\n' +
    'returned to callers with the corresponding WebUI response. The mapping is\n' +
    'from ID to the PromiseResolver helper; the ID is generated by\n' +
    'sendWithPromise and is unique across all invocations of said method.',
  'The named method the WebUI handler calls directly in response to a\n' +
    'chrome.send call that expects a response. The handler requires no knowledge\n' +
    'of the specific name of this method, as the name is passed to the handler\n' +
    'as the first argument in the arguments list of chrome.send. The handler\n' +
    'must pass the ID, also sent via the chrome.send arguments list, as the\n' +
    'first argument of the JS invocation; additionally, the handler may\n' +
    'supply any number of other arguments that will be included in the response.\n' +
    '@param id The unique ID identifying the Promise this response is\n' +
    'tied to.\n' +
    '@param isSuccess Whether the request was successful.\n' +
    '@param response The response as sent from C++.',
  'A variation of chrome.send, suitable for messages that expect a single\n' +
    'response from C++.\n' +
    '@param methodName The name of the WebUI handler API.\n' +
    '@param args Variable number of arguments to be forwarded to the\n' +
    'C++ call.',
  'A map of maps associating event names with listeners. The 2nd level map\n' +
    'associates a listener ID with the callback function, such that individual\n' +
    'listeners can be removed from an event without affecting other listeners of\n' +
    'the same event.',
  'The named method the WebUI handler calls directly when an event occurs.\n' +
    'The WebUI handler must supply the name of the event as the first argument\n' +
    'of the JS invocation; additionally, the handler may supply any number of\n' +
    'other arguments that will be forwarded to the listener callbacks.\n' +
    '@param event The name of the event that has occurred.\n' +
    '@param args Additional arguments passed from C++.',
  'C++ event sent for an event that has no listeners.',
  'TODO(dpapad): Should a warning be displayed here?',
  'Registers a listener for an event fired from WebUI handlers. Any number of\n' +
    'listeners may register for a single event.\n' +
    '@param eventName The event to listen to.\n' +
    '@param callback The callback run when the event is fired.\n' +
    '@return An object to be used for removing a listener via\n' +
    'removeWebUiListener. Should be treated as read-only.',
  'Removes a listener. Does nothing if the specified listener is not found.\n' +
    '@param listener The listener to be removed (as returned by addWebUiListener).\n' +
    '@return Whether the given listener was found and actually removed.',
  'Globally expose functions that must be called from C++.'
]
cr_router.ts [
  'Copyright 2024 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'If the user was on a URL for less than `dwellTime_` milliseconds, it\n' +
    "won't be added to the browser's history, but instead will be replaced\n" +
    'by the next entry.\n' +
    "This is to prevent large numbers of entries from clogging up the user's\n" +
    'browser history. Disable by setting to a negative number.',
  'Dispatches cr-router-*-changed events if portions of the URL change from',
  'window events.',
  'Updates the window history state if the URL is updated from setters.'
]
custom_element.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  "@fileoverview Base class for Web Components that don't use Polymer.\n" +
    'See the following file for usage:\n' +
    'chrome/test/data/webui/js/custom_element_test.js'
]
drag_wrapper.ts [
  'Copyright 2011 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview DragWrapper\n' +
    'A class for simplifying HTML5 drag and drop. Classes should use this to\n' +
    'handle the details of nested drag enters and leaves.',
  'TODO(devlin): The only method this "delegate" actually needs is',
  'shouldAcceptDrag(); the rest can be events emitted by the DragWrapper.',
  '@return Whether the drag should be accepted. If false,\n' +
    'subsequent methods (doDrag*) will not be called.',
  'Creates a DragWrapper which listens for drag target events on |target| and\n' +
    'delegates event handling to |delegate|.',
  'The number of un-paired dragenter events that have fired on |this|.\n' +
    'This is incremented by |onDragEnter_| and decremented by\n' +
    '|onDragLeave_|. This is necessary because dragging over child widgets\n' +
    'will fire additional enter and leave events on |this|. A non-zero value\n' +
    'does not necessarily indicate that |isCurrentDragTarget()| is true.',
  'Whether the tile page is currently being dragged over with data it can\n' +
    'accept.',
  'Delegate for dragenter events fired on |target_|.',
  "Sometimes we'll get an enter event over a child element without an",
  'over event following it. In this case we have to still call the',
  'drag over delegate so that we make the necessary updates (one visible',
  "symptom of not doing this is that the cursor's drag state will",
  'flicker during drags).',
  'Thunk for dragover events fired on |target_|.',
  'Thunk for drop events fired on |target_|.',
  'Thunk for dragleave events fired on |target_|.'
]
event_tracker.ts [
  'Copyright 2011 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview EventTracker is a simple class that manages the addition and\n' +
    'removal of DOM event listeners. In particular, it keeps track of all\n' +
    'listeners that have been added and makes it easy to remove some or all of\n' +
    'them without requiring all the information again. This is particularly handy\n' +
    'when the listener is a generated function such as a lambda or the result of\n' +
    'calling Function.bind.',
  'Add an event listener - replacement for EventTarget.addEventListener.\n' +
    '@param target The DOM target to add a listener to.\n' +
    '@param eventType The type of event to subscribe to.\n' +
    '@param listener The listener to add.\n' +
    '@param capture Whether to invoke during the capture phase. Defaults to\n' +
    'false.',
  'Remove any specified event listeners added with this EventTracker.\n' +
    '@param target The DOM target to remove a listener from.\n' +
    '@param eventType The type of event to remove.',
  'Remove all event listeners added with this EventTracker.',
  "Remove a single event listener given it's tracking entry. It's up to the\n" +
    'caller to ensure the entry is removed from listeners_.\n' +
    '@param entry The entry describing the listener to\n' +
    'remove.',
  'The type of the internal tracking entry.'
]
focus_grid.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on',
  'A class to manage grid of focusable elements in a 2D grid. For example,\n' +
    'given this grid:\n' +
    'focusable  [focused]  focusable  (row: 0, col: 1)\n' +
    'focusable  focusable  focusable\n' +
    'focusable  focusable  focusable\n' +
    'Pressing the down arrow would result in the focus moving down 1 row and\n' +
    'keeping the same column:\n' +
    'focusable  focusable  focusable\n' +
    'focusable  [focused]  focusable  (row: 1, col: 1)\n' +
    'focusable  focusable  focusable\n' +
    'And pressing right or tab at this point would move the focus to:\n' +
    'focusable  focusable  focusable\n' +
    'focusable  focusable  [focused]  (row: 1, col: 2)\n' +
    'focusable  focusable  focusable',
  'Unregisters event handlers and removes all |this.rows|.',
  '@param target A target item to find in this grid.\n' +
    '@return The row index. -1 if not found.',
  '@param root An element to search for.\n' +
    '@return The row with root of |root| or null.',
  'Adds |row| to the end of this list.\n' +
    '@param row The row that needs to be added to this grid.',
  "Adds |row| before |nextRow|. If |nextRow| is not in the list or it's\n" +
    'null, |row| is added to the end.\n' +
    '@param row The row that needs to be added to this grid.\n' +
    '@param nextRow The row that should follow |row|.',
  'Removes a row from the focus row. No-op if row is not in the grid.\n' +
    '@param row The row that needs to be removed.',
  'Makes sure that at least one row is active. Should be called once, after\n' +
    'adding all rows to FocusGrid.\n' +
    '@param preferredRow The row to select if no other row is\n' +
    'active. Selects the first item if this is beyond the range of the\n' +
    'grid.'
]
focus_outline_manager.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'The class name to set on the document element.',
  'This class sets a CSS class name on the HTML element of |doc| when the user\n' +
    'presses a key. It removes the class name when the user clicks anywhere.\n' +
    'This allows you to write CSS like this:\n' +
    'html.focus-outline-visible my-element:focus {\n' +
    'outline: 5px auto -webkit-focus-ring-color;\n' +
    '}\n' +
    'And the outline will only be shown if the user uses the keyboard to get to\n' +
    'it.',
  'Whether focus change is triggered by a keyboard event.',
  '@param doc The document to attach the focus outline manager to.',
  'A repeated keydown should not trigger the focus state. For example,',
  'there is a repeated ALT keydown if ALT+CLICK is used to open the',
  'context menu and ALT is not released.',
  'Whether the focus outline should be visible.',
  'Gets a per document singleton focus outline manager.\n' +
    '@param doc The document to get the |FocusOutlineManager| for.\n' +
    '@return The per document singleton focus outline manager.'
]
focus_row.ts [
  'Copyright 2014 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on',
  'A class to manage focus between given horizontally arranged elements.\n' +
    'Pressing left cycles backward and pressing right cycles forward in item\n' +
    'order. Pressing Home goes to the beginning of the list and End goes to the\n' +
    'end of the list.\n' +
    "If an item in this row is focused, it'll stay active (accessible via tab).\n" +
    'If no items in this row are focused, the row can stay active until focus\n' +
    "changes to a node inside |this.boundary_|. If |boundary| isn't specified,\n" +
    'any focus change deactivates the row.',
  '@param root The root of this focus row. Focus classes are\n' +
    'applied to |root| and all added elements must live within |root|.\n' +
    '@param boundary Focus events are ignored outside of this element.\n' +
    '@param delegate An optional event delegate.',
  "Whether it's possible that |element| can be focused.",
  "We don't check that element.tabIndex >= 0 here because inactive rows",
  'set a tabIndex of -1.',
  'A focus override is a function that returns an element that should gain\n' +
    'focus. The element may not be directly selectable for example the element\n' +
    'that can gain focus is in a shadow DOM. Allowing an override via a\n' +
    'function leaves the details of how the element is retrieved to the\n' +
    'component.',
  'Register a new type of focusable element (or add to an existing one).\n' +
    "Example: an (X) button might be 'delete' or 'close'.\n" +
    'When FocusRow is used within a FocusGrid, these types are used to\n' +
    'determine equivalent controls when Up/Down are pressed to change rows.\n' +
    'Another example: mutually exclusive controls that hide each other on\n' +
    "activation (i.e. Play/Pause) could use the same type (i.e. 'play-pause')\n" +
    "to indicate they're equivalent.\n" +
    '@param type The type of element to track focus of.\n' +
    '@param selectorOrElement The selector of the element\n' +
    "from this row's root, or the element itself.\n" +
    '@return Whether a new item was added.',
  'Dereferences nodes and removes event handlers.',
  '@param sampleElement An element for to find an equivalent\n' +
    'for.\n' +
    '@return An equivalent element to focus for\n' +
    '|sampleElement|.',
  '@return All registered elements (regardless of focusability).',
  'Find the element that best matches |sampleElement|.\n' +
    '@param sampleElement An element from a row of the same\n' +
    'type which previously held focus.\n' +
    '@return The element that best matches sampleElement.',
  '@param type An optional type to search for.\n' +
    '@return The first focusable element with |type|.',
  '@return Registered, focusable elements.',
  '@param element An element to determine a focus type for.\n' +
    "@return The focus type for |element| or '' if none.",
  '@return Whether this row is currently active.',
  'Enables/disables the tabIndex of the focusable elements in the FocusRow.\n' +
    'tabIndex can be set properly.\n' +
    '@param active True if tab is allowed for this row.',
  'Only accept left mouse clicks.',
  'Allow the element under the mouse cursor to be focusable.',
  'This always moves back one element, even in RTL.',
  'Bubble up to focus on the previous element outside the row.',
  "Called when a key is pressed while on a FocusRow's item. If true is\n" +
    'returned, further processing is skipped.\n' +
    '@param row The row that detected a keydown.\n' +
    '@return Whether the event was handled.',
  '@param sampleElement An element to find an equivalent for.\n' +
    '@return An equivalent element to focus, or null to use the\n' +
    'default FocusRow element.'
]
focus_without_ink.ts [
  'Copyright 2017 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'clang-format off',
  'clang-format on',
  'Attempts to track whether focus outlines should be shown, and if they\n' +
    `shouldn't, removes the "ink" (ripple) from a control while focusing it.\n` +
    "This is helpful when a user is clicking/touching, because it's not super\n" +
    'helpful to show focus ripples in that case. This is Polymer-specific.',
  "|toFocus| does not have a 'noink' property, so it's unclear whether the",
  'element has "ink" and/or whether it can be suppressed. Just focus().',
  "Make sure the element is in the document we're listening to events on."
]
icon.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@return The scale factors supported by this platform for webui resources.',
  'This matches the code in ResourceBundle::InitSharedInstance() that',
  'supports SCALE_FACTOR_100P on all non-iOS platforms.',
  "All desktop platforms support zooming which also updates the renderer's",
  'device scale factors (a.k.a devicePixelRatio), and these platforms have',
  'high DPI assets for 2x.  Let the renderer pick the closest image for',
  'the current device scale factor.',
  'For other platforms that use fixed device scale factor, use',
  "the window's device pixel ratio.",
  'TODO(oshima): Investigate corresponding to',
  'ResourceBundle::InitSharedInstance() more closely.',
  'Generates a CSS url string.\n' +
    '@param s The URL to generate the CSS url for.\n' +
    '@return The CSS url string.',
  'http://www.w3.org/TR/css3-values/#uris',
  "Parentheses, commas, whitespace characters, single quotes (') and double",
  'quotes (") appearing in a URI must be escaped with a backslash',
  'A URL for the filetype icon for |filePath|. OS and theme dependent.',
  'Generates a CSS image-set for a chrome:// url.\n' +
    'An entry in the image set is added for each of getSupportedScaleFactors().\n' +
    'The scale-factor-specific url is generated by replacing the first instance\n' +
    "of 'scalefactor' in |path| with the numeric scale factor.\n" +
    '@param path The URL to generate an image set for.\n' +
    "'scalefactor' should be a substring of |path|.\n" +
    '@return The CSS image-set.',
  'Returns the URL of the image, or an image set of URLs for the provided\n' +
    'path.  Resources in chrome://theme have multiple supported scale factors.\n' +
    '@param path The path of the image.\n' +
    '@return The url, or an image set of URLs.',
  'Creates a CSS image-set for a favicon.\n' +
    '@param url URL of the favicon\n' +
    '@return image-set for the favicon',
  'Creates a CSS image-set for a favicon request based on a page URL.\n' +
    '@param url URL of the original page\n' +
    '@param isSyncedUrlForHistoryUi Should be set to true only if the\n' +
    'caller is an UI aimed at displaying user history, and the requested url\n' +
    'is known to be present in Chrome sync data.\n' +
    '@param remoteIconUrlForUma In case the entry is contained in sync\n' +
    'data, we can pass the associated icon url.\n' +
    '@param size The favicon size.\n' +
    '@param forceLightMode Flag to force the service to show the light\n' +
    'mode version of the default favicon.\n' +
    '@return image-set for the favicon.',
  'Note: URL param keys used below must match those in the description of',
  'chrome://favicon2 format in components/favicon_base/favicon_url_parser.h.',
  "TODO(dbeam): use the presence of 'allowGoogleServerFallback' to",
  'indicate true, otherwise false.'
]
keyboard_shortcut_list.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'This is used to identify keyboard shortcuts.',
  '@param shortcut The text used to describe the keys for this\n' +
    'keyboard shortcut.',
  'For single key alpha shortcuts use event.keyCode rather than',
  'event.key to match how chrome handles shortcuts and allow',
  'non-english language input to work.',
  'Whether the keyboard shortcut object matches a keyboard event.\n' +
    '@param e The keyboard event object.\n' +
    '@return Whether we found a match or not.',
  'All keyboard modifiers need to match.',
  'A list of keyboard shortcuts which all perform one command.',
  '@param shortcuts Text-based representation of one or more\n' +
    'keyboard shortcuts, separated by spaces.',
  'Returns true if any of the keyboard shortcuts in the list matches a\n' +
    'keyboard event.'
]
load_time_data.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview This file defines a singleton which provides access to all data\n' +
    "that is available as soon as the page's resources are loaded (before DOM\n" +
    'content has finished loading). This data includes both localized strings and\n' +
    'any data that is important to have ready from a very early stage (e.g. things\n' +
    'that must be displayed right away).\n' +
    'Note that loadTimeData is not guaranteed to be consistent between page\n' +
    'refreshes (https://crbug.com/740629) and should not contain values that might\n' +
    'change if the page is re-opened later.',
  'Sets the backing object.\n' +
    'Note that there is no getter for |data_| to discourage abuse of the form:\n' +
    "var value = loadTimeData.data()['key'];",
  '@param id An ID of a value that might exist.\n' +
    '@return True if |id| is a key in the dictionary.',
  'Fetches a value, expecting that it exists.\n' +
    '@param id The key that identifies the desired value.\n' +
    '@return The corresponding value.',
  'As above, but also makes sure that the value is a string.\n' +
    '@param id The key that identifies the desired string.\n' +
    '@return The corresponding string value.',
  'Returns a formatted localized string where $1 to $9 are replaced by the\n' +
    'second to the tenth argument.\n' +
    '@param id The ID of the string we want.\n' +
    '@param args The extra values to include in the formatted output.\n' +
    '@return The formatted string.',
  'Returns a formatted localized string where $1 to $9 are replaced by the\n' +
    'second to the tenth argument. Any standalone $ signs must be escaped as\n' +
    '$$.\n' +
    '@param label The label to substitute through. This is not an resource ID.\n' +
    '@param args The extra values to include in the formatted output.\n' +
    '@return The formatted string.',
  'Not all callers actually provide values for all substitutes. Return',
  'an empty value for this case.',
  'Returns a formatted string where $1 to $9 are replaced by the second to\n' +
    'tenth argument, split apart into a list of pieces describing how the\n' +
    'substitution was performed. Any standalone $ signs must be escaped as $$.\n' +
    '@param label A localized string to substitute through.\n' +
    'This is not an resource ID.\n' +
    '@param args The extra values to include in the formatted output.\n' +
    '@return The formatted string pieces.',
  'Split the string by separately matching all occurrences of $1-9 and of',
  'non $1-9 pieces.',
  'Pieces that are not $1-9 should be returned after replacing $$',
  'with $.',
  'Otherwise, return the substitution value.',
  'Not all callers actually provide values for all substitutes. Return',
  'an empty value for this case.',
  'As above, but also makes sure that the value is a boolean.\n' +
    '@param id The key that identifies the desired boolean.\n' +
    '@return The corresponding boolean value.',
  'As above, but also makes sure that the value is an integer.\n' +
    '@param id The key that identifies the desired number.\n' +
    '@return The corresponding number value.',
  'Override values in loadTimeData with the values found in |replacements|.\n' +
    '@param replacements The dictionary object of keys to replace.',
  "Reset loadTimeData's data. Should only be used in tests.\n" +
    '@param newData The data to restore to, when null restores to unset state.',
  '@return Whether loadTimeData.data has been set.'
]
browser_proxy.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.'
]
metrics_reporter.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'MetricsReporter: A Time Measuring Utility.\n' +
    'Usages:\n' +
    '- Use getInstance() to acquire the singleton of MetricsReporter.\n' +
    '- Use mark(markName) to mark a timestamp.\n' +
    'Use measure(startMark[, endMark]) to measure the duration between two\n' +
    'marks. If `endMark` is not given, current time will be used.\n' +
    '- Use umaReportTime(metricsName, duration) to record UMA histogram.\n' +
    '- You can call these functions from the C++ side. The marks are accessible\n' +
    'from both C++ and WebUI Javascript.\n' +
    'Examples:\n' +
    '1. Pure JS.\n' +
    "metricsReporter.mark('StartMark');\n" +
    '// your code to be measured ...\n' +
    'metricsReporter.umaReportTime(\n' +
    "'Your.Histogram', await metricsReporter.measure('StartMark'));\n" +
    '2. C++ & JS.\n' +
    '// In C++\n' +
    'void PageAction() {\n' +
    'metrics_reporter_.Mark("StartMark");\n' +
    'page->PageAction();\n' +
    '}\n' +
    '// In JS\n' +
    'pageAction() {\n' +
    '// your code to be measure ...\n' +
    'metricsReporter.umaReportTime(\n' +
    "metricsReporter.measure('StartMark'));\n" +
    '}\n' +
    'Caveats:\n' +
    '1. measure() will assert if the mark is not available. You can use\n' +
    'catch() to prevent execution from being interrupted, e.g.\n' +
    "metricsReporter.measure('StartMark').then(duration =>\n" +
    "metricsReporter.umaReportTime('Your.Histogram', duration))\n" +
    '.catch(() => {})\n' +
    '2. measure() will record inaccurate time if a mark is reused for\n' +
    'overlapping measurements. To prevent this, you can:\n' +
    'a. check if a mark exists using hasLocalMark() before calling mark().\n' +
    'b. check if a mark exists using hasMark() before calling measure().\n' +
    'c. erase a mark using clearMark() after calling measure().\n' +
    'Alternative to b., you can use an empty catch() to ignore\n' +
    'missing marks (due to the mark deletion by c.).'
]
mojo_type_util.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Convert a javascript string into a Mojo String16.',
  'Convert a Mojo String16 into a javascript string.',
  'Taken from chunk size used in goog.crypt.byteArrayToBinaryString in Closure',
  'Library. The value is equal to 2^13.',
  'Convert the array to a string in chunks, to avoid passing too many',
  'arguments to String.fromCharCode() at once, which can exceed the max call',
  'stack size (c.f. crbug.com/1509792).',
  'Note: This does not do any validation of the URL string.'
]
open_window_proxy.ts [
  'Copyright 2023 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview A helper object used to open a URL in a new tab.\n' +
    'the browser.',
  'Opens the specified URL in a new tab.'
]
os_about.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'trigger the click handler for middle-button clicks'
]
parse_html_subset.ts [
  'Copyright 2012 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Make a string safe for Polymer bindings that are inner-h-t-m-l or other\n' +
    'innerHTML use.\n' +
    '@param rawString The unsanitized string\n' +
    '@param opts Optional additional allowed tags and attributes.',
  '<if expr="not is_ios">',
  'Same as |sanitizeInnerHtmlInternal|, but it passes through sanitizedPolicy\n' +
    'to create a TrustedHTML.',
  'Initialize |sanitizedPolicy| lazily.',
  '</if>',
  '<if expr="is_ios">',
  'Delegates to sanitizeInnerHtmlInternal() since on iOS there is no\n' +
    'window.trustedTypes support yet.',
  '</if>',
  'Allow-list of attributes in parseHtmlSubset.',
  'Only allow a[href] starting with chrome:// or https:// or equaling',
  'to #.',
  "Only allow a[target='_blank'].",
  "TODO(dbeam): are there valid use cases for target !== '_blank'?",
  'Allow-list of optional attributes in parseHtmlSubset.',
  'Only allow img[src] starting with chrome://',
  'Allow-list of tag names in parseHtmlSubset.',
  'Allow-list of optional tag names in parseHtmlSubset.',
  'This policy maps a given string to a `TrustedHTML` object\n' +
    'without performing any validation. Callsites must ensure\n' +
    'that the resulting object will only be used in inert\n' +
    'documents. Initialized lazily.',
  '@param optTags an Array to merge.\n@return Set of allowed tags.',
  '@param optAttrs an Array to merge.\n@return Map of allowed attributes.',
  'Parses a very small subset of HTML. This ensures that insecure HTML /\n' +
    'javascript cannot be injected into WebUI.\n' +
    '@param s The string to parse.\n' +
    '@param extraTags Optional extra allowed tags.\n' +
    '@param extraAttrs\n' +
    'Optional extra allowed attributes (all tags are run through these).\n' +
    '@throws an Error in case of non supported markup.\n' +
    '@return A document fragment containing the DOM tree.',
  'This does not execute any scripts because the document has no view.'
]
platform.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Utilities for determining the current platform.',
  'Whether we are using a Mac or not.',
  'Whether this is on the Windows platform or not.',
  'Whether this is the ChromeOS/ash web browser.',
  '<if expr="chromeos_ash">',
  '</if>',
  'Whether this is the ChromeOS/Lacros web browser.',
  '<if expr="chromeos_lacros">',
  '</if>',
  'Whether this is on vanilla Linux (not chromeOS).',
  'Whether this is on Android.',
  'Whether this is on iOS.'
]
plural_string_proxy.ts [
  'Copyright 2020 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview A helper object used to get a pluralized string.',
  'clang-format off',
  'clang-format on',
  'Obtains a pluralized string for |messageName| with |itemCount| items.\n' +
    '@param messageName The name of the message.\n' +
    '@param itemCount The number of items.\n' +
    '@return Promise resolved with the appropriate plural string for\n' +
    '|messageName| with |itemCount| items.',
  'Fetches both plural strings, concatenated to one string with a comma.\n' +
    '@param messageName1 The name of the first message.\n' +
    '@param itemCount1 The number of items in the first message.\n' +
    '@param messageName2 The name of the second message.\n' +
    '@param itemCount2 The number of items in the second message.\n' +
    '@return Promise resolved with the appropriate plural\n' +
    'strings for both messages, concatenated with a comma+whitespace in\n' +
    'between them.',
  'Fetches both plural strings, concatenated to one string with periods.\n' +
    '@param messageName1 The name of the first message.\n' +
    '@param itemCount1 The number of items in the first message.\n' +
    '@param messageName2 The name of the second message.\n' +
    '@param itemCount2 The number of items in the second message.\n' +
    '@return Promise resolved with the appropriate plural\n' +
    'strings for both messages, concatenated with a period+whitespace after\n' +
    'the first message, and a period after the second message.'
]
promise_resolver.ts [
  'Copyright 2016 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview PromiseResolver is a helper class that allows creating a\n' +
    'Promise that will be fulfilled (resolved or rejected) some time later.\n' +
    'Example:\n' +
    'const resolver = new PromiseResolver();\n' +
    'resolver.promise.then(function(result) {\n' +
    "console.log('resolved with', result);\n" +
    '});\n' +
    '...\n' +
    '...\n' +
    "resolver.resolve({hello: 'world'});",
  'Whether this resolver has been resolved or rejected.'
]
search_highlight_utils.ts [
  'Copyright 2018 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Replaces the the highlight wrappers given in |wrappers| with the original\n' +
    'search nodes.',
  'If wrapper is already removed, do nothing.',
  'Finds all previous highlighted nodes under |node| and replaces the\n' +
    'highlights (yellow rectangles) with the original search node. Searches only\n' +
    'within the same shadowRoot and assumes that only one highlight wrapper\n' +
    'exists under |node|.',
  'Applies the highlight UI (yellow rectangle) around all matches in |node|.\n' +
    '@param node The text node to be highlighted. |node| ends up\n' +
    'being hidden.\n' +
    '@return The new highlight wrapper.',
  'Use existing node as placeholder to determine where to insert the',
  'replacement content.',
  'Keep the existing node around for when the highlights are removed. The',
  'existing text node might be involved in data-binding and therefore should',
  'not be discarded.',
  'Defaults to the color associated with --paper-yellow-500.',
  'Defaults to the color associated with --google-grey-900.',
  'Creates an empty search bubble (styled HTML element without text).\n' +
    '|node| should already be visible or the bubble will render incorrectly.\n' +
    '@param node The node to be highlighted.\n' +
    '@param horizontallyCenter Whether or not to horizontally center\n' +
    "the shown search bubble (if any) based on |node|'s left and width.\n" +
    '@return The search bubble that was added, or null if no new\n' +
    'bubble was added.',
  'If the node has already been highlighted, there is no need to do',
  'anything.',
  'TODO(crbug.com/41096577): create a way to programmatically update these',
  'bubbles (i.e. call updatePosition()) when outer scope knows they need to',
  'be repositioned.'
]
static_types.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@return Whether the passed tagged template literal is a valid array.',
  'Checks if the passed tagged template literal only contains static string.\n' +
    'And return the string in the literal if so.\n' +
    'Throws an Error if the passed argument is not supported literals.',
  'Rules used to enforce static literal checks.',
  'This policy returns Trusted Types if the passed literal is static.',
  'Returns TrustedHTML if the passed literal is static.',
  'Returns TrustedScript if the passed literal is static.',
  'Returns TrustedScriptURL if the passed literal is static.'
]
store.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview a base class and utility types for managing javascript WebUI\n' +
    'state in a redux-like fashion.',
  'A generic datastore for the state of a page, where the state is publicly\n' +
    'readable but can only be modified by dispatching an Action.\n' +
    'The Store should be extended by specifying S, the page state type\n' +
    'associated with the store.',
  'Begin a batch update to store data, which will disable updates to the\n' +
    'UI until `endBatchUpdate` is called. This is useful when a single UI\n' +
    'operation is likely to cause many sequential model updates (eg, deleting\n' +
    '100 bookmarks).',
  'End a batch update to the store data, notifying the UI of any changes\n' +
    'which occurred while batch mode was enabled.',
  "Handles a 'deferred' action, which can asynchronously dispatch actions\n" +
    'to the Store in order to reach a new UI state. DeferredActions have the\n' +
    'form `dispatchAsync(function(dispatch) { ... })`). Inside that function,\n' +
    'the |dispatch| callback can be called asynchronously to dispatch Actions\n' +
    'directly to the Store.',
  'Transition to a new UI state based on the supplied |action|, and notify\n' +
    'observers of the change. If the Store has not yet been initialized, the\n' +
    'action will be queued and performed upon initialization.',
  'Batch notifications until after all initialization queuedActions are',
  'resolved.'
]
test_loader.ts [
  'Copyright 2019 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  '@fileoverview Helper script used to load a JS module test into a WebUI page.',
  '',
  'Example usage:',
  'chrome://welcome/test_loader.html?module=foo/my_test.js',
  '',
  'will load the JS module at chrome/test/data/webui/foo/my_test.js, through the',
  'chrome://webui-test/foo/my_test.js URL.',
  '',
  'test_loader.html and test_loader.js should be registered with the',
  'WebUIDataSource corresponding to the WebUI being tested, such that the',
  'testing code is loaded from the same origin. Also note that the',
  'chrome://webui-test/ data source only exists in a testing context, so using',
  'this script in production will result in a failed network request.'
]
test_loader_util.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Ensure this is a scheme-relative URL requested by a chrome or',
  'chrome-untrusted host.',
  'Note: Do not export this method, it is only meant to be used within this',
  'module, otherwise the fairly loose scriptPolicy above would be exposed.',
  '@return Whether a test module was loaded.\n' +
    '- In case where a module was not specified, returns false (used for\n' +
    'providing a way for UIs to wait for any test initialization, if run\n' +
    'within the context of a test).\n' +
    '- In case where loading failed (probably incorrect URL) a rejected Promise\n' +
    'is returned.'
]
util.ts [
  'Copyright 2022 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Alias for document.getElementById. Found elements must be HTMLElements.',
  'Alias for document.getElementById. Found elements must be HTMLElements.',
  '@return The currently focused element (including elements that are\n' +
    'behind a shadow root), or null if nothing is focused.',
  'Check the directionality of the page.\n' +
    '@return True if Chrome is running an RTL UI.',
  'Creates a new URL which is the old URL with a GET param of key=value.\n' +
    '@param url The base URL. There is no validation checking on the URL\n' +
    'so it must be passed in a proper format.\n' +
    '@param key The key of the param.\n' +
    '@param value The value of the param.\n' +
    '@return The new URL.',
  'transitionend does not always fire (e.g. when animation is aborted\n' +
    'or when no paint happens during the animation). This function sets up\n' +
    'a timer and emulate the event if it is not fired when the timer expires.\n' +
    '@param el The element to watch for transitionend.\n' +
    '@param timeOut The maximum wait time in milliseconds for the transitionend\n' +
    'to happen. If not specified, it is fetched from |el| using the\n' +
    'transitionDuration style value.',
  'Give an additional 50ms buffer for the animation to complete.',
  `Replaces '&', '<', '>', '"', and ''' characters with their HTML encoding.\n` +
    '@param original The original string.\n' +
    '@return The string with all the characters mentioned above replaced.',
  'Quote a string so it can be used in a regular expression.\n' +
    '@param str The source string.\n' +
    '@return The escaped string.',
  'Calls |callback| and stops listening the first time any event in |eventNames|\n' +
    'is triggered on |target|.\n' +
    '@param eventNames Array or space-delimited string of event names to listen to\n' +
    "(e.g. 'click mousedown').\n" +
    '@param callback Called at most once. The optional return value is passed on\n' +
    'by the listener.',
  '@return Whether a modifier key was down when processing |e|.',
  '@return Whether a given KeyboardEvent resembles an undo action, on different\n' +
    'platforms.',
  '<if expr="is_macosx">',
  '</if>',
  '<if expr="not is_macosx">',
  '</if>',
  '<if expr="is_macosx">',
  '</if>'
]
bindings.d.ts [
  'Copyright 2021 The Chromium Authors',
  'Use of this source code is governed by a BSD-style license that can be',
  'found in the LICENSE file.',
  'Minimal definitions for the Mojo core bindings, just enough to make the TS',
  'compiler to not throw errors, and minimal definitions of types that are',
  'indirectly exposed by generated bindings. These should be fleshed out, or',
  'even better auto-generated from bindings_uncompiled.js eventually. The',
  'latter currently does not produce definitions that work.',
  'More information about them can be found in the *.idl files that generate',
  'many of these functions and types.',
  '@see //third_party/blink/renderer/core/mojo/mojo.idl',
  'eslint-disable @typescript-eslint/no-unused-vars',
  'eslint-disable @typescript-eslint/naming-convention',
  'The following constants already belong to the `MojoResult` enum, but code',
  'already references these constants as Mojo.MOJO_RESULT_NAME. To preserve',
  'that functionality, redefine these as constants in the Mojo namespace',
  'here. This allows us to keep the `Mojo` a namespace (the alternative is a',
  'undefined const variable typed to &MojoResult with additional APIs, but',
  'this causes issues with clients using the bindings as externs only as',
  "calling the APIs results in 'Mojo is undefined' errors)."
]
> ./out/extract-comments/ui_.ts.json
